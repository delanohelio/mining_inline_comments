{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NTcyNDcx", "number": 1104, "title": "HDDS-3612. Allow mounting bucket under other volume", "bodyText": "What changes were proposed in this pull request?\nImplement bucket links.\nImplementation details (from the design doc)\n\nozone sh bucket link operation creates a link bucket.  Links are like regular buckets, stored in DB the same way, but with two new, optional pieces of information: source volume and bucket.  (The bucket being referenced by the link is called \"source\", not \"target\", to follow symlink terminology.)\nLink buckets share the namespace with regular buckets.  If a bucket or link with the same name already exists, a BUCKET_ALREADY_EXISTS result is returned.\n(Unlike previous per-user S3 volume mapping) Link buckets are not inherently specific to a user, access is restricted only by ACL.\nLinks are persistent, ie. they can be used until they are deleted.\nExisting bucket operations (info, delete, ACL) work on the link object in the same way as they do on regular buckets.  No new link-specific RPC is required.\nLinks are followed for key operations (list, get, put, etc.).  Read permission on the link is required for this.\nChecks for existence of the source bucket, as well as ACL, are performed only when following the link (similar to symlinks).  Source bucket is not checked when operating on the link bucket itself (eg. deleting it).  This avoids the need for reverse checks for each bucket delete or ACL change.\nBucket links are generic, not restricted to the s3v volume.\n\nAudit\nAudit message for link creation mentions the bucket to which the link points (sourceVolume and sourceBucket):\nOMAudit | ... | op=CREATE_BUCKET {volume=60748-target, bucket=link1, gdprEnabled=null, acls=[user:hadoop:a[ACCESS], group:users:a[ACCESS]], isVersionEnabled=false, storageType=DISK, creationTime=1592631444545, bucketEncryptionKey=null, sourceVolume=60748-source, sourceBucket=bucket1} | ret=SUCCESS |  \n\nAs well as audit messages for key operations issued on links:\nOMAudit | ... | op=ALLOCATE_KEY {volume=60748-target, bucket=link1, key=key1, dataSize=671, replicationType=RATIS, replicationFactor=THREE, sourceVolume=60748-source, sourceBucket=bucket1} | ret=SUCCESS |  \nOMAudit | ... | op=DELETE_KEY {volume=60748-target, bucket=link1, key=key2, dataSize=0, replicationType=RATIS, replicationFactor=ONE, sourceVolume=60748-source, sourceBucket=bucket1} | ret=SUCCESS |  \n\nResponse for ALLOCATE_KEY contains the real (source) volume/bucket, so COMMIT_KEY does not know about the link (but it is prepared to handle it anyway):\nOMAudit | ... | op=COMMIT_KEY {volume=60748-source, bucket=bucket1, key=key1, dataSize=671, replicationType=RATIS, replicationFactor=ONE} | ret=SUCCESS |  \n\nBased on top of changes from #1091 and #1093.\nhttps://issues.apache.org/jira/browse/HDDS-3612\nHow was this patch tested?\nAdded acceptance tests for testing bucket links via Ozone Shell.\nSlightly tweaked existing S3 acceptance tests are executed on both normal buckets and bucket links.\nExisting Ozone FS acceptance tests (reorganized in #1093) are also executed on links.\nhttps://github.com/adoroszlai/hadoop-ozone/runs/792817258", "createdAt": "2020-06-21T17:06:38Z", "url": "https://github.com/apache/ozone/pull/1104", "merged": true, "mergeCommit": {"oid": "7aff2f05271e1d421bc48d1a02c1b7ad596888cd"}, "closed": true, "closedAt": "2020-07-17T04:02:32Z", "author": {"login": "adoroszlai"}, "timelineItems": {"totalCount": 72, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclsWpDAH2gAyNDM3NTcyNDcxOjg3MTAyOGU1M2RjNzZhNTg0ZjFlNTlkOGVhMjRjMWIwYjNlNjcwMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1hUebAFqTQ0OTk4NTY4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "871028e53dc76a584f1e59d8ea24c1b0b3e67036", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/871028e53dc76a584f1e59d8ea24c1b0b3e67036", "committedDate": "2020-05-28T11:41:50Z", "message": "HDDS-3612. Allow mounting bucket under other volume"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bfa1ed57ab321b165087264b771967dd603146a", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/2bfa1ed57ab321b165087264b771967dd603146a", "committedDate": "2020-05-28T14:21:28Z", "message": "handle links in listKeys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d87f2daf1ef07527a397f3083b2d4deef2a3d4b7", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/d87f2daf1ef07527a397f3083b2d4deef2a3d4b7", "committedDate": "2020-06-02T11:25:32Z", "message": "one more unused constant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "472fd0d7606fa2af115117c2951ace9358edca94", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/472fd0d7606fa2af115117c2951ace9358edca94", "committedDate": "2020-06-08T08:31:15Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61dfc596eb476aabc17dccea761f76eb830b3d57", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/61dfc596eb476aabc17dccea761f76eb830b3d57", "committedDate": "2020-06-08T09:28:46Z", "message": "HDDS-3612. Require only read permission on link bucket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9de1de563f8eb13c41ef978ca46efb77c99fedd1", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/9de1de563f8eb13c41ef978ca46efb77c99fedd1", "committedDate": "2020-06-08T13:37:50Z", "message": "HDDS-3612. Implement ozone sh bucket link"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af149fd439ba954b63c094c82e6fd7d7b59602e3", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/af149fd439ba954b63c094c82e6fd7d7b59602e3", "committedDate": "2020-06-08T17:58:54Z", "message": "HDDS-3612. More tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04f7968898d55da648b0a7fb8b99cdbefcced6fe", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/04f7968898d55da648b0a7fb8b99cdbefcced6fe", "committedDate": "2020-06-08T17:59:12Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe7967712a771fad2187b76b3a51d3671e3f8def", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/fe7967712a771fad2187b76b3a51d3671e3f8def", "committedDate": "2020-06-09T08:28:53Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8163c977b5c931c86bd7b9b85003fcd746bfb788", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/8163c977b5c931c86bd7b9b85003fcd746bfb788", "committedDate": "2020-06-09T18:00:48Z", "message": "HDDS-3612. ACL tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8ba71a73590c33b5f9bbf9edbd1ff4a59c59d4b", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/c8ba71a73590c33b5f9bbf9edbd1ff4a59c59d4b", "committedDate": "2020-06-09T19:32:58Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ba27b1b20551d11f8d6af2d7dc4065c0d3020f1", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/3ba27b1b20551d11f8d6af2d7dc4065c0d3020f1", "committedDate": "2020-06-10T05:37:04Z", "message": "HDDS-3612. Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "406f42aa5471152794a41b395d97faaba71a3824", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/406f42aa5471152794a41b395d97faaba71a3824", "committedDate": "2020-06-10T05:46:19Z", "message": "HDDS-3612. Fix unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9c58020dc5ed1efa8a891901e12b3ea09ccd355", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/d9c58020dc5ed1efa8a891901e12b3ea09ccd355", "committedDate": "2020-06-10T08:59:52Z", "message": "HDDS-3612. Fix integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82bf8944a0921acc84ff801554bcafab69dc1c9c", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/82bf8944a0921acc84ff801554bcafab69dc1c9c", "committedDate": "2020-06-10T15:49:27Z", "message": "HDDS-3612. Extract ResolvedBucket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47a4d7174f4011475aa9156d456a9c057b1f6000", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/47a4d7174f4011475aa9156d456a9c057b1f6000", "committedDate": "2020-06-10T15:49:58Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0154ec655baee34e03a6fe1edf652cfcf729f0a3", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/0154ec655baee34e03a6fe1edf652cfcf729f0a3", "committedDate": "2020-06-10T18:48:35Z", "message": "HDDS-3612. Handle more types of key request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a4a50216666576db8882c38dad07ed9daa53507", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/4a4a50216666576db8882c38dad07ed9daa53507", "committedDate": "2020-06-10T18:48:50Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e325dcf5f294a37b1456ee4f95463f995a55c85e", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/e325dcf5f294a37b1456ee4f95463f995a55c85e", "committedDate": "2020-06-10T19:31:59Z", "message": "HDDS-3612. Fix unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcd681c206cb8c8e99f78ab064cefecbf1a6c0ac", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/bcd681c206cb8c8e99f78ab064cefecbf1a6c0ac", "committedDate": "2020-06-15T06:38:46Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c409d18c507a15bcf2b8d31d20d56323e8bbfb0c", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/c409d18c507a15bcf2b8d31d20d56323e8bbfb0c", "committedDate": "2020-06-15T19:19:15Z", "message": "WIP - HDDS-3612. S3 acceptance tests for bucket links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74adcc4070fc1ce539d8434632b4e9ab605d8105", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/74adcc4070fc1ce539d8434632b4e9ab605d8105", "committedDate": "2020-06-15T19:19:26Z", "message": "WIP - fix multipart upload"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7be917165c33d2db625e32b16d6ca6eb64c7bcd3", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/7be917165c33d2db625e32b16d6ca6eb64c7bcd3", "committedDate": "2020-06-16T16:07:48Z", "message": "Fix MultipartUploadComplete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "107de5b60a244bf42f76b8ae11dfc34fbb5cbde2", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/107de5b60a244bf42f76b8ae11dfc34fbb5cbde2", "committedDate": "2020-06-16T21:46:39Z", "message": "Call s3 test twice instead of templates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8719b7dca37f0760bdb08b9df187a0a247e8159", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/e8719b7dca37f0760bdb08b9df187a0a247e8159", "committedDate": "2020-06-17T06:47:45Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e70c3121528b1c5d36b0bded7a73030b499f5ed2", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/e70c3121528b1c5d36b0bded7a73030b499f5ed2", "committedDate": "2020-06-17T06:48:02Z", "message": "fix typo in acceptance test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e29ed9eb1cbf05c739a17e901a4f7e6c8173a6c2", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/e29ed9eb1cbf05c739a17e901a4f7e6c8173a6c2", "committedDate": "2020-06-17T07:08:04Z", "message": "test s3 links in secure env"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0682736a413dbe38ca7c96cc31978e0144bbee3d", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/0682736a413dbe38ca7c96cc31978e0144bbee3d", "committedDate": "2020-06-17T08:36:26Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "186d99eb27ec7aaf3f4b480183c4d75b326202cd", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/186d99eb27ec7aaf3f4b480183c4d75b326202cd", "committedDate": "2020-06-17T16:40:06Z", "message": "Audit before bucket update, fix listStatus and lookupFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da03cd8380cdfcad57eff8d63e63e8ddc21872dc", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/da03cd8380cdfcad57eff8d63e63e8ddc21872dc", "committedDate": "2020-06-18T08:47:09Z", "message": "HDDS-3094. Save each output of smoketest executed multiple times"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a37e661ead7e0be50c500bf0a57fd8b134697aa6", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/a37e661ead7e0be50c500bf0a57fd8b134697aa6", "committedDate": "2020-06-18T11:44:06Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d79cf492d8ad768517acacb325712fc85f0cc31a", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/d79cf492d8ad768517acacb325712fc85f0cc31a", "committedDate": "2020-06-18T12:06:02Z", "message": "HDDS-3826. Split Ozone FS acceptance tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "305cbecaa12fa1deaaefc98caa304094f53ff8c5", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/305cbecaa12fa1deaaefc98caa304094f53ff8c5", "committedDate": "2020-06-18T15:05:29Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "318e4c8888934de68abc759e018132d9865ec1d6", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/318e4c8888934de68abc759e018132d9865ec1d6", "committedDate": "2020-06-19T08:14:16Z", "message": "Merge branch 'HDDS-3826' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9f9ce41b67b578c9bd9f3b0a8b8f9b6db88bf87", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/b9f9ce41b67b578c9bd9f3b0a8b8f9b6db88bf87", "committedDate": "2020-06-19T13:58:10Z", "message": "run ozonefs acceptance tests for links, too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb861501d6ff3675df25ae21cdef5fe88087b3b4", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/eb861501d6ff3675df25ae21cdef5fe88087b3b4", "committedDate": "2020-06-19T20:44:00Z", "message": "Display source bucket in info"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10ff2d6d2416f584cb637189985d826938d71311", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/10ff2d6d2416f584cb637189985d826938d71311", "committedDate": "2020-06-21T00:40:48Z", "message": "Fix typo in S3 acceptance test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9c468306bf05dc6f9d39a378660c223bcde8c4d", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/e9c468306bf05dc6f9d39a378660c223bcde8c4d", "committedDate": "2020-06-21T01:06:18Z", "message": "Fix setup for S3 tests with links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b62f418465c34979365ee6ac85bfff77e34c003c", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/b62f418465c34979365ee6ac85bfff77e34c003c", "committedDate": "2020-06-21T08:01:36Z", "message": "Fix S3 acceptance setup for buckets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "382e7bd055881f89aab12da9e1c117b92aebdbef", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/382e7bd055881f89aab12da9e1c117b92aebdbef", "committedDate": "2020-06-21T09:59:04Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6da342c0fe7cdcc6672a9bde260d5bd3aa9a1e4c", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/6da342c0fe7cdcc6672a9bde260d5bd3aa9a1e4c", "committedDate": "2020-06-21T11:50:27Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e4505a8ecf8faa979faa44b83f90e53d2be164d", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/5e4505a8ecf8faa979faa44b83f90e53d2be164d", "committedDate": "2020-06-21T15:29:40Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfcdc5f9ce24b5cb040d6f78a541e44bce32f65a", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/dfcdc5f9ce24b5cb040d6f78a541e44bce32f65a", "committedDate": "2020-06-21T17:07:14Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89fc76277c12c5f1f77fd63d18ff139708f49560", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/89fc76277c12c5f1f77fd63d18ff139708f49560", "committedDate": "2020-06-21T18:21:20Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b51709d5dd62a50487d8f8ed6ae0d32539c65a57", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/b51709d5dd62a50487d8f8ed6ae0d32539c65a57", "committedDate": "2020-06-22T13:57:55Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3699f20d23defce4762045c318864b87f24f6124", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/3699f20d23defce4762045c318864b87f24f6124", "committedDate": "2020-06-27T12:42:42Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/5806106e2cc8a892ba35b28ab67624c92ffa70a4", "committedDate": "2020-06-28T07:18:14Z", "message": "HDDS-3612. Handle links in new OMKeysDeleteRequest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTMxMDYy", "url": "https://github.com/apache/ozone/pull/1104#pullrequestreview-439531062", "createdAt": "2020-06-29T22:01:50Z", "commit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjowMTo1MVrOGqjwww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjowMTo1MVrOGqjwww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3OTI5OQ==", "bodyText": "Old write code is not being used anymore.\nThis logic needs to be added to new Class OMBucketCreateRequest.java", "url": "https://github.com/apache/ozone/pull/1104#discussion_r447279299", "createdAt": "2020-06-29T22:01:51Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/BucketManagerImpl.java", "diffHunk": "@@ -136,54 +137,49 @@ public void createBucket(OmBucketInfo bucketInfo) throws IOException {\n         throw new OMException(\"Bucket already exist\",\n             OMException.ResultCodes.BUCKET_ALREADY_EXISTS);\n       }\n+\n       BucketEncryptionKeyInfo bek = bucketInfo.getEncryptionKeyInfo();\n-      BucketEncryptionKeyInfo.Builder bekb = null;\n-      if (bek != null) {\n-        if (kmsProvider == null) {\n-          throw new OMException(\"Invalid KMS provider, check configuration \" +\n-              CommonConfigurationKeys.HADOOP_SECURITY_KEY_PROVIDER_PATH,\n-              OMException.ResultCodes.INVALID_KMS_PROVIDER);\n-        }\n-        if (bek.getKeyName() == null) {\n-          throw new OMException(\"Bucket encryption key needed.\", OMException\n-              .ResultCodes.BUCKET_ENCRYPTION_KEY_NOT_FOUND);\n-        }\n-        // Talk to KMS to retrieve the bucket encryption key info.\n-        KeyProvider.Metadata metadata = getKMSProvider().getMetadata(\n-            bek.getKeyName());\n-        if (metadata == null) {\n-          throw new OMException(\"Bucket encryption key \" + bek.getKeyName()\n-              + \" doesn't exist.\",\n-              OMException.ResultCodes.BUCKET_ENCRYPTION_KEY_NOT_FOUND);\n-        }\n-        // If the provider supports pool for EDEKs, this will fill in the pool\n-        kmsProvider.warmUpEncryptedKeys(bek.getKeyName());\n-        bekb = new BucketEncryptionKeyInfo.Builder()\n-            .setKeyName(bek.getKeyName())\n-            .setVersion(CryptoProtocolVersion.ENCRYPTION_ZONES)\n-            .setSuite(CipherSuite.convert(metadata.getCipher()));\n-      }\n-      List<OzoneAcl> acls = new ArrayList<>();\n-      acls.addAll(bucketInfo.getAcls());\n-      volumeArgs.getAclMap().getDefaultAclList().forEach(\n-          a -> acls.add(OzoneAcl.fromProtobufWithAccessType(a)));\n-\n-      OmBucketInfo.Builder omBucketInfoBuilder = OmBucketInfo.newBuilder()\n-          .setVolumeName(bucketInfo.getVolumeName())\n-          .setBucketName(bucketInfo.getBucketName())\n-          .setAcls(acls)\n-          .setStorageType(bucketInfo.getStorageType())\n-          .setIsVersionEnabled(bucketInfo.getIsVersionEnabled())\n-          .setCreationTime(Time.now())\n-          .addAllMetadata(bucketInfo.getMetadata());\n+\n+      boolean hasSourceVolume = bucketInfo.getSourceVolume() != null;\n+      boolean hasSourceBucket = bucketInfo.getSourceBucket() != null;\n+\n+      if (hasSourceBucket != hasSourceVolume) {\n+        throw new OMException(\"Both source volume and source bucket are \" +\n+            \"required for bucket links\",\n+            OMException.ResultCodes.INVALID_REQUEST);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTQyMzU0", "url": "https://github.com/apache/ozone/pull/1104#pullrequestreview-439542354", "createdAt": "2020-06-29T22:21:55Z", "commit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjoyMTo1NVrOGqkhyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjoyMTo1NVrOGqkhyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI5MTg0OQ==", "bodyText": "Question: No, where we checked source volume/bucket exists or not.", "url": "https://github.com/apache/ozone/pull/1104#discussion_r447291849", "createdAt": "2020-06-29T22:21:55Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/BucketManagerImpl.java", "diffHunk": "@@ -136,54 +137,49 @@ public void createBucket(OmBucketInfo bucketInfo) throws IOException {\n         throw new OMException(\"Bucket already exist\",\n             OMException.ResultCodes.BUCKET_ALREADY_EXISTS);\n       }\n+\n       BucketEncryptionKeyInfo bek = bucketInfo.getEncryptionKeyInfo();\n-      BucketEncryptionKeyInfo.Builder bekb = null;\n-      if (bek != null) {\n-        if (kmsProvider == null) {\n-          throw new OMException(\"Invalid KMS provider, check configuration \" +\n-              CommonConfigurationKeys.HADOOP_SECURITY_KEY_PROVIDER_PATH,\n-              OMException.ResultCodes.INVALID_KMS_PROVIDER);\n-        }\n-        if (bek.getKeyName() == null) {\n-          throw new OMException(\"Bucket encryption key needed.\", OMException\n-              .ResultCodes.BUCKET_ENCRYPTION_KEY_NOT_FOUND);\n-        }\n-        // Talk to KMS to retrieve the bucket encryption key info.\n-        KeyProvider.Metadata metadata = getKMSProvider().getMetadata(\n-            bek.getKeyName());\n-        if (metadata == null) {\n-          throw new OMException(\"Bucket encryption key \" + bek.getKeyName()\n-              + \" doesn't exist.\",\n-              OMException.ResultCodes.BUCKET_ENCRYPTION_KEY_NOT_FOUND);\n-        }\n-        // If the provider supports pool for EDEKs, this will fill in the pool\n-        kmsProvider.warmUpEncryptedKeys(bek.getKeyName());\n-        bekb = new BucketEncryptionKeyInfo.Builder()\n-            .setKeyName(bek.getKeyName())\n-            .setVersion(CryptoProtocolVersion.ENCRYPTION_ZONES)\n-            .setSuite(CipherSuite.convert(metadata.getCipher()));\n-      }\n-      List<OzoneAcl> acls = new ArrayList<>();\n-      acls.addAll(bucketInfo.getAcls());\n-      volumeArgs.getAclMap().getDefaultAclList().forEach(\n-          a -> acls.add(OzoneAcl.fromProtobufWithAccessType(a)));\n-\n-      OmBucketInfo.Builder omBucketInfoBuilder = OmBucketInfo.newBuilder()\n-          .setVolumeName(bucketInfo.getVolumeName())\n-          .setBucketName(bucketInfo.getBucketName())\n-          .setAcls(acls)\n-          .setStorageType(bucketInfo.getStorageType())\n-          .setIsVersionEnabled(bucketInfo.getIsVersionEnabled())\n-          .setCreationTime(Time.now())\n-          .addAllMetadata(bucketInfo.getMetadata());\n+\n+      boolean hasSourceVolume = bucketInfo.getSourceVolume() != null;\n+      boolean hasSourceBucket = bucketInfo.getSourceBucket() != null;\n+\n+      if (hasSourceBucket != hasSourceVolume) {\n+        throw new OMException(\"Both source volume and source bucket are \" +\n+            \"required for bucket links\",\n+            OMException.ResultCodes.INVALID_REQUEST);\n+      }\n+\n+      if (bek != null && hasSourceBucket) {\n+        throw new OMException(\"Encryption cannot be set for bucket links\",\n+            OMException.ResultCodes.INVALID_REQUEST);\n+      }\n+\n+      BucketEncryptionKeyInfo.Builder bekb =\n+          createBucketEncryptionKeyInfoBuilder(bek);\n+\n+      OmBucketInfo.Builder omBucketInfoBuilder = bucketInfo.toBuilder()\n+          .setCreationTime(Time.now());\n+\n+      List<OzoneManagerProtocolProtos.OzoneAclInfo> defaultAclList =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTQyODA0", "url": "https://github.com/apache/ozone/pull/1104#pullrequestreview-439542804", "createdAt": "2020-06-29T22:22:50Z", "commit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjoyMjo1MFrOGqkjOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjoyMjo1MFrOGqkjOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI5MjIxOQ==", "bodyText": "Same, for all, write requests old code is not used anymore.", "url": "https://github.com/apache/ozone/pull/1104#discussion_r447292219", "createdAt": "2020-06-29T22:22:50Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -2020,60 +2026,72 @@ public OmBucketInfo getBucketInfo(String volume, String bucket)\n    */\n   @Override\n   public OpenKeySession openKey(OmKeyArgs args) throws IOException {\n+    ResolvedBucket bucket = resolveBucketLink(args);\n+\n     if (isAclEnabled) {\n       try {\n         checkAcls(ResourceType.KEY, StoreType.OZONE, ACLType.WRITE,\n-            args.getVolumeName(), args.getBucketName(), args.getKeyName());\n+            bucket.realVolume(), bucket.realBucket(), args.getKeyName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTUyNzY2", "url": "https://github.com/apache/ozone/pull/1104#pullrequestreview-439552766", "createdAt": "2020-06-29T22:45:35Z", "commit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjo0NTozNVrOGqlIVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjo0NTozNVrOGqlIVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMwMTcxNg==", "bodyText": "Now for each operation if it is link bucket where if it has sourceVolume/SourceBucket we do checkAcls twice. One with READ permission on sourceBucket/SourceVolume in resoleBucketLink and one in actual request with required ACL type. It is not clear why do we need the first check acl.\nIf it requires, do you think we need to have an API where we can check all required ACLS with a single checkAcl call?", "url": "https://github.com/apache/ozone/pull/1104#discussion_r447301716", "createdAt": "2020-06-29T22:45:35Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -2145,37 +2168,51 @@ public OmKeyLocationInfo allocateBlock(OmKeyArgs args, long clientID,\n    */\n   @Override\n   public OmKeyInfo lookupKey(OmKeyArgs args) throws IOException {\n+    ResolvedBucket bucket = resolveBucketLink(args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "originalPosition": 173}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTUzNTYy", "url": "https://github.com/apache/ozone/pull/1104#pullrequestreview-439553562", "createdAt": "2020-06-29T22:47:33Z", "commit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjo0NzozM1rOGqlK-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjo0NzozM1rOGqlK-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMwMjM5NA==", "bodyText": "The same comment for all write requests:\nCan we remove the changes from old write code path, which is not required? It is unnecessary now.", "url": "https://github.com/apache/ozone/pull/1104#discussion_r447302394", "createdAt": "2020-06-29T22:47:33Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -2197,20 +2234,25 @@ public void renameKey(OmKeyArgs args, String toKeyName) throws IOException {\n    */\n   @Override\n   public void deleteKey(OmKeyArgs args) throws IOException {\n+    Map<String, String> auditMap = args.toAuditMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "originalPosition": 231}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTY1MDg2", "url": "https://github.com/apache/ozone/pull/1104#pullrequestreview-439565086", "createdAt": "2020-06-29T23:18:22Z", "commit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoxODoyMlrOGqlzCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoxODoyMlrOGqlzCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxMjY0OQ==", "bodyText": "Looks like this logic is needed for all KeyRequests. Can we move this to a common method, instead of duplicating it.", "url": "https://github.com/apache/ozone/pull/1104#discussion_r447312649", "createdAt": "2020-06-29T23:18:22Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -174,6 +175,12 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     Result result = null;\n \n     try {\n+      ResolvedBucket bucket = ozoneManager.resolveBucketLink(keyArgs);\n+      keyArgs = bucket.update(keyArgs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTY1NjQ0", "url": "https://github.com/apache/ozone/pull/1104#pullrequestreview-439565644", "createdAt": "2020-06-29T23:19:52Z", "commit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoxOTo1MlrOGql02Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoxOTo1MlrOGql02Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxMzExMw==", "bodyText": "And also do you think it would be useful to log the actual bucket/volume request which it resolved also?\nThis might help during debug purposes.", "url": "https://github.com/apache/ozone/pull/1104#discussion_r447313113", "createdAt": "2020-06-29T23:19:52Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java", "diffHunk": "@@ -149,6 +150,12 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     List<OmKeyInfo> missingParentInfos;\n \n     try {\n+      ResolvedBucket bucket = ozoneManager.resolveBucketLink(keyArgs);\n+      keyArgs = bucket.update(keyArgs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5806106e2cc8a892ba35b28ab67624c92ffa70a4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "277ce12196fe56a68fa22170c241af5c5c456479", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/277ce12196fe56a68fa22170c241af5c5c456479", "committedDate": "2020-06-30T04:49:54Z", "message": "HDDS-3612. Reduce duplication in OMKeyRequest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30fe0427ef6dd652289365d24a58f1848a9d54e0", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/30fe0427ef6dd652289365d24a58f1848a9d54e0", "committedDate": "2020-06-30T04:51:41Z", "message": "HDDS-3612. Sanity check for link in OMBucketCreateRequest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aff0c318e7b1b05026bab5cc15fa953530fde949", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/aff0c318e7b1b05026bab5cc15fa953530fde949", "committedDate": "2020-07-07T05:40:18Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0799b5e81a3f5f218e6916dbdb10f65459a898f2", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/0799b5e81a3f5f218e6916dbdb10f65459a898f2", "committedDate": "2020-07-14T09:02:10Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc40b72206b47dab6da47d2b069910017a205f96", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/fc40b72206b47dab6da47d2b069910017a205f96", "committedDate": "2020-07-14T11:15:12Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbf04a33ecad2d23e8bd57ecceca4842a9cf5281", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/fbf04a33ecad2d23e8bd57ecceca4842a9cf5281", "committedDate": "2020-07-14T17:37:54Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2a3f8f3cdbbb07a6cb72b6a30c69ec43d4551d2", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/f2a3f8f3cdbbb07a6cb72b6a30c69ec43d4551d2", "committedDate": "2020-07-14T17:44:57Z", "message": "HDDS-3612. Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mjk2NzUz", "url": "https://github.com/apache/ozone/pull/1104#pullrequestreview-448296753", "createdAt": "2020-07-14T17:02:34Z", "commit": {"oid": "fc40b72206b47dab6da47d2b069910017a205f96"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzowMjozNVrOGxc4Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTo1NzoyOVrOGxm01g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUwNjU3MA==", "bodyText": "Can we change the error code here, the reason for this is in HA when error code is INTERNAL_ERROR we terminate OM. (This is done to avoid DB divergence)", "url": "https://github.com/apache/ozone/pull/1104#discussion_r454506570", "createdAt": "2020-07-14T17:02:35Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -3314,4 +3396,59 @@ private void startJVMPauseMonitor() {\n     jvmPauseMonitor.init(configuration);\n     jvmPauseMonitor.start();\n   }\n+\n+  public ResolvedBucket resolveBucketLink(KeyArgs args) throws IOException {\n+    return resolveBucketLink(\n+        Pair.of(args.getVolumeName(), args.getBucketName()));\n+  }\n+\n+  public ResolvedBucket resolveBucketLink(OmKeyArgs args)\n+      throws IOException {\n+    return resolveBucketLink(\n+        Pair.of(args.getVolumeName(), args.getBucketName()));\n+  }\n+\n+  public ResolvedBucket resolveBucketLink(Pair<String, String> requested)\n+      throws IOException {\n+    Pair<String, String> resolved =\n+        resolveBucketLink(requested, new HashSet<>());\n+    return new ResolvedBucket(requested, resolved);\n+  }\n+\n+  /**\n+   * Resolves bucket symlinks. Read permission is required for following links.\n+   *\n+   * @param volumeAndBucket the bucket to be resolved (if it is a link)\n+   * @param visited collects link buckets visited during the resolution to\n+   *   avoid infinite loops\n+   * @return bucket location possibly updated with its actual volume and bucket\n+   *   after following bucket links\n+   * @throws IOException (most likely OMException) if ACL check fails, bucket is\n+   *   not found, loop is detected in the links, etc.\n+   */\n+  private Pair<String, String> resolveBucketLink(\n+      Pair<String, String> volumeAndBucket,\n+      Set<Pair<String, String>> visited) throws IOException {\n+\n+    String volumeName = volumeAndBucket.getLeft();\n+    String bucketName = volumeAndBucket.getRight();\n+    OmBucketInfo info = bucketManager.getBucketInfo(volumeName, bucketName);\n+    if (!info.isLink()) {\n+      return volumeAndBucket;\n+    }\n+\n+    if (!visited.add(volumeAndBucket)) {\n+      throw new OMException(\"Detected loop in bucket links\", INTERNAL_ERROR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc40b72206b47dab6da47d2b069910017a205f96"}, "originalPosition": 688}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0ODc5MQ==", "bodyText": "Now with this approach, we validate bucket exist twice. Once is resolvedBucketLink, and again in ValidateVolumeAndBucket. If this is link, can we skip 2nd-time check?\n(Now bucket/volume is in the full cache, but I think it will be better to avoid still)\nMight be in non-HA, this might create a problem as we release lock and then re-acquire some other thread might delete the bucket. But once HA becomes the default, we can optimize this, as in HA there is only a single thread executor. If you also think the same open the Jira for improvement", "url": "https://github.com/apache/ozone/pull/1104#discussion_r454548791", "createdAt": "2020-07-14T18:11:34Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyDeleteRequest.java", "diffHunk": "@@ -111,6 +110,10 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     OMClientResponse omClientResponse = null;\n     Result result = null;\n     try {\n+      keyArgs = resolveBucketLink(ozoneManager, keyArgs, auditMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf04a33ecad2d23e8bd57ecceca4842a9cf5281"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1MjYyNQ==", "bodyText": "Minor: We can skip getting from original Args, as anyway final Volume/Bucket we get is from resolvedBucket returned keyArgs.", "url": "https://github.com/apache/ozone/pull/1104#discussion_r454552625", "createdAt": "2020-07-14T18:17:53Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyDeleteRequest.java", "diffHunk": "@@ -88,21 +88,20 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       long trxnLogIndex, OzoneManagerDoubleBufferHelper omDoubleBufferHelper) {\n     DeleteKeyRequest deleteKeyRequest = getOmRequest().getDeleteKeyRequest();\n \n-    OzoneManagerProtocolProtos.KeyArgs deleteKeyArgs =\n+    OzoneManagerProtocolProtos.KeyArgs keyArgs =\n         deleteKeyRequest.getKeyArgs();\n+    Map<String, String> auditMap = buildKeyArgsAuditMap(keyArgs);\n \n-    String volumeName = deleteKeyArgs.getVolumeName();\n-    String bucketName = deleteKeyArgs.getBucketName();\n-    String keyName = deleteKeyArgs.getKeyName();\n+    String volumeName = keyArgs.getVolumeName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf04a33ecad2d23e8bd57ecceca4842a9cf5281"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1MjkxMw==", "bodyText": "The same comment applies for all requests", "url": "https://github.com/apache/ozone/pull/1104#discussion_r454552913", "createdAt": "2020-07-14T18:18:24Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyDeleteRequest.java", "diffHunk": "@@ -88,21 +88,20 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       long trxnLogIndex, OzoneManagerDoubleBufferHelper omDoubleBufferHelper) {\n     DeleteKeyRequest deleteKeyRequest = getOmRequest().getDeleteKeyRequest();\n \n-    OzoneManagerProtocolProtos.KeyArgs deleteKeyArgs =\n+    OzoneManagerProtocolProtos.KeyArgs keyArgs =\n         deleteKeyRequest.getKeyArgs();\n+    Map<String, String> auditMap = buildKeyArgsAuditMap(keyArgs);\n \n-    String volumeName = deleteKeyArgs.getVolumeName();\n-    String bucketName = deleteKeyArgs.getBucketName();\n-    String keyName = deleteKeyArgs.getKeyName();\n+    String volumeName = keyArgs.getVolumeName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1MjYyNQ=="}, "originalCommit": {"oid": "fbf04a33ecad2d23e8bd57ecceca4842a9cf5281"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1NTM2OA==", "bodyText": "Minor: We can skip this, as anyway bucket.audit has already taken care of this.", "url": "https://github.com/apache/ozone/pull/1104#discussion_r454555368", "createdAt": "2020-07-14T18:22:34Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeysDeleteRequest.java", "diffHunk": "@@ -85,10 +87,11 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n     OMMetrics omMetrics = ozoneManager.getMetrics();\n     omMetrics.incNumKeyDeletes();\n-    Map<String, String> auditMap = null;\n     String volumeName = deleteKeyArgs.getVolumeName();\n     String bucketName = deleteKeyArgs.getBucketName();\n-    String keyName = \"\";\n+    Map<String, String> auditMap = new LinkedHashMap<>();\n+    auditMap.put(VOLUME, volumeName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a3f8f3cdbbb07a6cb72b6a30c69ec43d4551d2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU2MDYzNA==", "bodyText": "Minor: Can we assign to volumeName and bucketName, similar to Key requests and use that, instead of getting multiple times.", "url": "https://github.com/apache/ozone/pull/1104#discussion_r454560634", "createdAt": "2020-07-14T18:31:34Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3InitiateMultipartUploadRequest.java", "diffHunk": "@@ -114,12 +117,15 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n         getOmRequest());\n     OMClientResponse omClientResponse = null;\n     try {\n+      keyArgs = resolveBucketLink(ozoneManager, keyArgs, auditMap);\n+\n       // TODO to support S3 ACL later.\n       acquiredBucketLock =\n-          omMetadataManager.getLock().acquireWriteLock(BUCKET_LOCK, volumeName,\n-              bucketName);\n+          omMetadataManager.getLock().acquireWriteLock(BUCKET_LOCK,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a3f8f3cdbbb07a6cb72b6a30c69ec43d4551d2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU2MjI4OA==", "bodyText": "I see for all key requests we logged resolvedVolume/resolvedBucket. For MPU we log requested volume/bucket any reason for this?. Can we follow one approach for all requests?", "url": "https://github.com/apache/ozone/pull/1104#discussion_r454562288", "createdAt": "2020-07-14T18:34:26Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3MultipartUploadAbortRequest.java", "diffHunk": "@@ -152,27 +158,29 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       addResponseToDoubleBuffer(trxnLogIndex, omClientResponse,\n           omDoubleBufferHelper);\n       if (acquiredLock) {\n-        omMetadataManager.getLock().releaseWriteLock(BUCKET_LOCK, volumeName,\n-            bucketName);\n+        omMetadataManager.getLock().releaseWriteLock(BUCKET_LOCK,\n+            keyArgs.getVolumeName(), keyArgs.getBucketName());\n       }\n     }\n \n     // audit log\n     auditLog(ozoneManager.getAuditLogger(), buildAuditMessage(\n-        OMAction.ABORT_MULTIPART_UPLOAD, buildKeyArgsAuditMap(keyArgs),\n+        OMAction.ABORT_MULTIPART_UPLOAD, auditMap,\n         exception, getOmRequest().getUserInfo()));\n \n     switch (result) {\n     case SUCCESS:\n       LOG.debug(\"Abort Multipart request is successfully completed for \" +\n-              \"KeyName {} in VolumeName/Bucket {}/{}\", keyName, volumeName,\n-          bucketName);\n+              \"KeyName {} in VolumeName/Bucket {}/{}\", keyName, requestedVolume,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a3f8f3cdbbb07a6cb72b6a30c69ec43d4551d2"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY0NDk0Nw==", "bodyText": "This needs to be updated, once error code is modified.", "url": "https://github.com/apache/ozone/pull/1104#discussion_r454644947", "createdAt": "2020-07-14T21:05:46Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/dist/src/main/smoketest/basic/links.robot", "diffHunk": "@@ -0,0 +1,152 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+*** Settings ***\n+Documentation       Test bucket links via Ozone CLI\n+Library             OperatingSystem\n+Resource            ../commonlib.robot\n+Resource            ../ozone-lib/shell.robot\n+Test Setup          Run Keyword if    '${SECURITY_ENABLED}' == 'true'    Kinit test user     testuser     testuser.keytab\n+Test Timeout        2 minute\n+Suite Setup         Create volumes\n+\n+*** Variables ***\n+${prefix}    generated\n+\n+*** Keywords ***\n+Create volumes\n+    ${random} =         Generate Random String  5  [NUMBERS]\n+    Set Suite Variable  ${source}  ${random}-source\n+    Set Suite Variable  ${target}  ${random}-target\n+    Execute             ozone sh volume create ${source}\n+    Execute             ozone sh volume create ${target}\n+    Run Keyword if      '${SECURITY_ENABLED}' == 'true'    Setup ACL tests\n+\n+Setup ACL tests\n+    Execute             ozone sh bucket create ${source}/readable-bucket\n+    Execute             ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd\n+    Execute             ozone sh bucket create ${source}/unreadable-bucket\n+    Execute             ozone sh bucket link ${source}/readable-bucket ${target}/readable-link\n+    Execute             ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link\n+    Execute             ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket\n+    Execute             ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}\n+    Execute             ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}\n+    Execute             ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket\n+    Execute             ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link\n+    Execute             ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket\n+\n+Can follow link with read access\n+    Execute             kdestroy\n+    Run Keyword         Kinit test user             testuser2         testuser2.keytab\n+    ${result} =         Execute And Ignore Error    ozone sh key list ${target}/readable-link\n+                        Should Contain              ${result}         key-in-readable-bucket\n+\n+Cannot follow link without read access\n+    Execute             kdestroy\n+    Run Keyword         Kinit test user             testuser2         testuser2.keytab\n+    ${result} =         Execute And Ignore Error    ozone sh key list ${target}/unreadable-link\n+                        Should Contain              ${result}         PERMISSION_DENIED\n+\n+ACL verified on source bucket\n+    Execute             kdestroy\n+    Run Keyword         Kinit test user             testuser2         testuser2.keytab\n+    ${result} =         Execute                     ozone sh bucket info ${target}/link-to-unreadable-bucket\n+                        Should Contain              ${result}         link-to-unreadable-bucket\n+                        Should Not Contain          ${result}         PERMISSION_DENIED\n+    ${result} =         Execute And Ignore Error    ozone sh key list ${target}/link-to-unreadable-bucket\n+                        Should Contain              ${result}         PERMISSION_DENIED\n+\n+*** Test Cases ***\n+Link to non-existent bucket\n+                        Execute                     ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link\n+    ${result} =         Execute And Ignore Error    ozone sh key list ${target}/dangling-link\n+                        Should Contain              ${result}         BUCKET_NOT_FOUND\n+\n+Key create passthrough\n+                        Execute                     ozone sh bucket link ${source}/bucket1 ${target}/link1\n+                        Execute                     ozone sh bucket create ${source}/bucket1\n+                        Execute                     ozone sh key put ${target}/link1/key1 /etc/passwd\n+                        Key Should Match Local File     ${target}/link1/key1    /etc/passwd\n+\n+Key read passthrough\n+                        Execute                     ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt\n+                        Key Should Match Local File     ${source}/bucket1/key2    /opt/hadoop/NOTICE.txt\n+\n+Key list passthrough\n+    ${target_list} =    Execute                     ozone sh key list ${target}/link1 | jq -r '.name'\n+    ${source_list} =    Execute                     ozone sh key list ${source}/bucket1 | jq -r '.name'\n+                        Should Be Equal             ${target_list}    ${source_list}\n+                        Should Contain              ${source_list}    key1\n+                        Should Contain              ${source_list}    key2\n+\n+Key delete passthrough\n+                        Execute                     ozone sh key delete ${target}/link1/key2\n+    ${source_list} =    Execute                     ozone sh key list ${source}/bucket1 | jq -r '.name'\n+                        Should Not Contain          ${source_list}    key2\n+\n+Bucket list contains links\n+    ${result} =         Execute                     ozone sh bucket list ${target}\n+                        Should Contain              ${result}         link1\n+                        Should Contain              ${result}         dangling-link\n+\n+Bucket info shows source\n+    ${result} =         Execute                     ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs\n+                        Should Be Equal             ${result}    ${source} bucket1\n+\n+Source and target have separate ACLs\n+    Execute       ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1\n+    Verify ACL    bucket    ${target}/link1      USER    user1    READ WRITE READ_ACL WRITE_ACL\n+    Verify ACL    bucket    ${source}/bucket1    USER    user1    ${EMPTY}\n+\n+    Execute       ozone sh bucket addacl --acl group:group2:r ${source}/bucket1\n+    Verify ACL    bucket    ${target}/link1      GROUP   group2    ${EMPTY}\n+    Verify ACL    bucket    ${source}/bucket1    GROUP   group2    READ\n+\n+Buckets and links share namespace\n+                        Execute                     ozone sh bucket link ${source}/bucket2 ${target}/link2\n+    ${result} =         Execute And Ignore Error    ozone sh bucket create ${target}/link2\n+                        Should Contain              ${result}    BUCKET_ALREADY_EXISTS\n+\n+                        Execute                     ozone sh bucket create ${target}/bucket3\n+    ${result} =         Execute And Ignore Error    ozone sh bucket link ${source}/bucket1 ${target}/bucket3\n+                        Should Contain              ${result}    BUCKET_ALREADY_EXISTS\n+\n+Can follow link with read access\n+    Run Keyword if    '${SECURITY_ENABLED}' == 'true'    Can follow link with read access\n+\n+Cannot follow link without read access\n+    Run Keyword if    '${SECURITY_ENABLED}' == 'true'    Cannot follow link without read access\n+\n+ACL verified on source bucket\n+    Run Keyword if    '${SECURITY_ENABLED}' == 'true'    ACL verified on source bucket\n+\n+Loop in link chain is detected\n+                        Execute                     ozone sh bucket link ${target}/loop1 ${target}/loop2\n+                        Execute                     ozone sh bucket link ${target}/loop2 ${target}/loop3\n+                        Execute                     ozone sh bucket link ${target}/loop3 ${target}/loop1\n+    ${result} =         Execute And Ignore Error    ozone sh key list ${target}/loop2\n+                        Should Contain              ${result}    INTERNAL_ERROR", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a3f8f3cdbbb07a6cb72b6a30c69ec43d4551d2"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2OTUyNg==", "bodyText": "S3 tests not using this bucket right?\nFor example\nDelete existing bucket\nBucket already is created in Test Setup.\n${bucket} =                Create bucket\nExecute AWSS3APICli        delete-bucket --bucket ${bucket}\n\nAnd bucket is returned from\nDelete existing bucket\nBucket already is created in Test Setup.\n${bucket} =                Create bucket\nExecute AWSS3APICli        delete-bucket --bucket ${bucket}", "url": "https://github.com/apache/ozone/pull/1104#discussion_r454669526", "createdAt": "2020-07-14T21:57:29Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/dist/src/main/compose/ozone/test.sh", "diffHunk": "@@ -26,24 +26,24 @@ source \"$COMPOSE_DIR/../testlib.sh\"\n \n start_docker_env\n \n-#Due to the limitation of the current auditparser test, it should be the\n-#first test in a clean cluster.\n-\n-#Disabling for now, audit parser tool during parse getting exception.\n-#execute_robot_test om auditparser\n-\n execute_robot_test scm lib\n+execute_robot_test scm ozone-lib\n \n execute_robot_test scm basic\n \n execute_robot_test scm gdpr\n \n-execute_robot_test scm -v SCHEME:ofs ozonefs/ozonefs.robot\n-execute_robot_test scm -v SCHEME:o3fs ozonefs/ozonefs.robot\n+for scheme in ofs o3fs; do\n+  for bucket in link bucket; do\n+    execute_robot_test scm -v SCHEME:${scheme} -v BUCKET_TYPE:${bucket} ozonefs/ozonefs.robot\n+  done\n+done\n \n execute_robot_test scm security/ozone-secure-token.robot\n \n-execute_robot_test scm s3\n+for bucket in link generated; do\n+  execute_robot_test scm -v BUCKET:${bucket} s3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a3f8f3cdbbb07a6cb72b6a30c69ec43d4551d2"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "234a1e051a848b441c4c5fc3f4c83f11625be698", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/234a1e051a848b441c4c5fc3f4c83f11625be698", "committedDate": "2020-07-15T04:04:18Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-3612-dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dd8a0ee457307cc1a894757f4f049a64a22f671", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/1dd8a0ee457307cc1a894757f4f049a64a22f671", "committedDate": "2020-07-15T04:13:18Z", "message": "HDDS-3612. Change error code for infinite link loop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5dbd53a32652b87f542d89b84064e3c11470ba4", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/f5dbd53a32652b87f542d89b84064e3c11470ba4", "committedDate": "2020-07-15T04:49:09Z", "message": "HDDS-3612. S3 MPU: local var for volume/bucket; log resolved bucket, not requested one"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3241c4ff0004e4eac007c455efb931358ddcaf80", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/3241c4ff0004e4eac007c455efb931358ddcaf80", "committedDate": "2020-07-15T05:33:55Z", "message": "HDDS-3612. Delete bucket or link created in setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73b33562991a046aad9a69ea8de988c73ccd70f1", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/73b33562991a046aad9a69ea8de988c73ccd70f1", "committedDate": "2020-07-15T07:48:45Z", "message": "HDDS-3612. Change error code for infinite link loop - fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b820d442efc9ebc590441caf2eff721201ed0353", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/b820d442efc9ebc590441caf2eff721201ed0353", "committedDate": "2020-07-15T10:15:39Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "272a6f4865e4db97bc4d9fe37fd799fe69f59c8d", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/272a6f4865e4db97bc4d9fe37fd799fe69f59c8d", "committedDate": "2020-07-15T12:22:05Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTQ1OTQx", "url": "https://github.com/apache/ozone/pull/1104#pullrequestreview-449145941", "createdAt": "2020-07-15T17:04:21Z", "commit": {"oid": "272a6f4865e4db97bc4d9fe37fd799fe69f59c8d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzowNDoyMVrOGyHLvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzowNDoyMVrOGyHLvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5OTY3OQ==", "bodyText": "openKeyName should be generated from resolveBucketLink.", "url": "https://github.com/apache/ozone/pull/1104#discussion_r455199679", "createdAt": "2020-07-15T17:04:21Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -172,6 +172,10 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     IOException exception = null;\n \n     try {\n+      keyArgs = resolveBucketLink(ozoneManager, keyArgs, auditMap);\n+      volumeName = keyArgs.getVolumeName();\n+      bucketName = keyArgs.getBucketName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "272a6f4865e4db97bc4d9fe37fd799fe69f59c8d"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "717374eada44fd7116480f62d0164c89deed1794", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/717374eada44fd7116480f62d0164c89deed1794", "committedDate": "2020-07-15T17:18:26Z", "message": "HDDS-3612. openKeyName should be generated from resolved bucket"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTg1Njg1", "url": "https://github.com/apache/ozone/pull/1104#pullrequestreview-449985685", "createdAt": "2020-07-16T15:53:18Z", "commit": {"oid": "717374eada44fd7116480f62d0164c89deed1794"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2995, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}