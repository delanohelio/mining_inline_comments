{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MTg1OTMz", "number": 1333, "title": "HDDS-3151. TestCloseContainerHandlingByClient Enable-testMultiBlockW\u2026", "bodyText": "\u2026rites3 and new TestDiscardPreallocatedBlocks\nWhat changes were proposed in this pull request?\nEnabled testMultiBlockWrites3 and removed testDiscardPreallocatedBlocks because of changed configurations and created new test TestDiscardPreallocatedBlocks.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3151\nHow was this patch tested?\nTested Manually", "createdAt": "2020-08-14T21:14:49Z", "url": "https://github.com/apache/ozone/pull/1333", "merged": true, "mergeCommit": {"oid": "9a4cb9e385c9fc95331ff7a0d2dd731e0a74a21c"}, "closed": true, "closedAt": "2020-09-08T06:20:17Z", "author": {"login": "aryangupta1998"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-7OwNAH2gAyNDY4MTg1OTMzOjFjZDg4NjZlZjdkMWZiM2U4NGZiM2NkY2E3NzNhZTAyMTM1YjhlYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGxfFggFqTQ4MzgyMzk3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1cd8866ef7d1fb3e84fb3cdca773ae02135b8eaa", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/1cd8866ef7d1fb3e84fb3cdca773ae02135b8eaa", "committedDate": "2020-08-14T21:09:54Z", "message": "HDDS-3151. TestCloseContainerHandlingByClient Enable-#testMultiBlockWrites3 and new #TestDiscardPreallocatedBlocks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNjU2NTc3", "url": "https://github.com/apache/ozone/pull/1333#pullrequestreview-473656577", "createdAt": "2020-08-24T16:21:00Z", "commit": {"oid": "1cd8866ef7d1fb3e84fb3cdca773ae02135b8eaa"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MzU3MDc0", "url": "https://github.com/apache/ozone/pull/1333#pullrequestreview-478357074", "createdAt": "2020-08-31T06:45:21Z", "commit": {"oid": "1cd8866ef7d1fb3e84fb3cdca773ae02135b8eaa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNjo0NToyMVrOHJsdQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNjo0NToyMVrOHJsdQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkyNzYxOQ==", "bodyText": "Let's also add an assertion condition to verify the container Ids for both preallocated blocks are same.", "url": "https://github.com/apache/ozone/pull/1333#discussion_r479927619", "createdAt": "2020-08-31T06:45:21Z", "author": {"login": "bshashikant"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestDiscardPreallocatedBlocks.java", "diffHunk": "@@ -0,0 +1,181 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.hadoop.ozone.client.rpc;\n+\n+import org.apache.hadoop.conf.StorageUnit;\n+import org.apache.hadoop.hdds.client.ReplicationType;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.scm.ScmConfigKeys;\n+import org.apache.hadoop.hdds.scm.container.ContainerID;\n+import org.apache.hadoop.hdds.scm.container.ContainerInfo;\n+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.OzoneConfigKeys;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.client.ObjectStore;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.client.OzoneClientFactory;\n+import org.apache.hadoop.ozone.client.io.*;\n+import org.apache.hadoop.ozone.container.ContainerTestHelper;\n+import org.apache.hadoop.ozone.container.TestHelper;\n+import org.apache.hadoop.ozone.om.helpers.OmKeyLocationInfo;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.apache.hadoop.hdds.scm.ScmConfigKeys.HDDS_SCM_WATCHER_TIMEOUT;\n+import static org.apache.hadoop.hdds.scm.ScmConfigKeys.OZONE_SCM_STALENODE_INTERVAL;\n+\n+import org.junit.Rule;\n+import org.junit.rules.Timeout;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n+/**\n+ * Tests Close Container Exception handling by Ozone Client.\n+ */\n+public class TestDiscardPreallocatedBlocks{\n+\n+  /**\n+   * Set a timeout for each test.\n+   */\n+\n+  @Rule\n+  public Timeout timeout = new Timeout(300000);\n+  private static MiniOzoneCluster cluster;\n+  private static OzoneConfiguration conf = new OzoneConfiguration();\n+  private static OzoneClient client;\n+  private static ObjectStore objectStore;\n+  private static int chunkSize;\n+  private static int blockSize;\n+  private static String volumeName;\n+  private static String bucketName;\n+  private static String keyString;\n+\n+  /**\n+   * Create a MiniDFSCluster for testing.\n+   * <p>\n+   * Ozone is made active by setting OZONE_ENABLED = true\n+   *\n+   * @throws IOException\n+   */\n+\n+  @BeforeClass\n+  public static void init() throws Exception {\n+    chunkSize = (int) OzoneConsts.MB;\n+    blockSize = 4 * chunkSize;\n+    conf.setTimeDuration(HDDS_SCM_WATCHER_TIMEOUT, 1000, TimeUnit.MILLISECONDS);\n+    conf.setTimeDuration(OZONE_SCM_STALENODE_INTERVAL, 3, TimeUnit.SECONDS);\n+    conf.set(OzoneConfigKeys.OZONE_CLIENT_CHECKSUM_TYPE, \"NONE\");\n+    conf.setQuietMode(false);\n+    conf.setStorageSize(OzoneConfigKeys.OZONE_SCM_BLOCK_SIZE, 4,\n+        StorageUnit.MB);\n+    conf.setInt(ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT, 1);\n+    cluster = MiniOzoneCluster.newBuilder(conf).setNumDatanodes(3).build();\n+    cluster.waitForClusterToBeReady();\n+    //the easiest way to create an open container is creating a key\n+    client = OzoneClientFactory.getRpcClient(conf);\n+    objectStore = client.getObjectStore();\n+    keyString = UUID.randomUUID().toString();\n+    volumeName = \"closecontainerexceptionhandlingtest\";\n+    bucketName = volumeName;\n+    objectStore.createVolume(volumeName);\n+    objectStore.getVolume(volumeName).createBucket(bucketName);\n+  }\n+\n+  private String getKeyName() {\n+    return UUID.randomUUID().toString();\n+  }\n+\n+  /**\n+  * Shutdown MiniDFSCluster.\n+  */\n+\n+  @AfterClass\n+  public static void shutdown() {\n+    if (cluster != null) {\n+      cluster.shutdown();\n+    }\n+  }\n+\n+  @Test\n+  public void testDiscardPreallocatedBlocks() throws Exception {\n+    String keyName = getKeyName();\n+    OzoneOutputStream key =\n+        createKey(keyName, ReplicationType.RATIS, 2 * blockSize);\n+    KeyOutputStream keyOutputStream =\n+        (KeyOutputStream) key.getOutputStream();\n+    Assert.assertTrue(key.getOutputStream() instanceof KeyOutputStream);\n+    // With the initial size provided, it should have pre allocated 2 blocks\n+    Assert.assertEquals(2, keyOutputStream.getStreamEntries().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cd8866ef7d1fb3e84fb3cdca773ae02135b8eaa"}, "originalPosition": 132}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63cc7dafb066e77e663333b932d0796eccb5b6b1", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/63cc7dafb066e77e663333b932d0796eccb5b6b1", "committedDate": "2020-08-31T12:30:39Z", "message": "added an assertion condition to verify the container Ids for both preallocated blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d127282017f44a713e63e6da48e0b2d925c8e6a2", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/d127282017f44a713e63e6da48e0b2d925c8e6a2", "committedDate": "2020-08-31T12:51:11Z", "message": "added an assertion condition to verify the container Ids for both preallocated blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dddfcc830c868cf507e0b6fe3e21e57aef9bfad0", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/dddfcc830c868cf507e0b6fe3e21e57aef9bfad0", "committedDate": "2020-09-07T08:53:35Z", "message": "retrigger build with empty commit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzODIzOTc3", "url": "https://github.com/apache/ozone/pull/1333#pullrequestreview-483823977", "createdAt": "2020-09-08T06:20:05Z", "commit": {"oid": "dddfcc830c868cf507e0b6fe3e21e57aef9bfad0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2730, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}