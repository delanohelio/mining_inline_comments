{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NTY0MDA2", "number": 584, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMTo1NDo0MlrODifd9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODoxMDoyNFrODizAjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDkzNzQ5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMTo1NDo0MlrOFtxSig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToxNjoyOFrOFu4okw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzNzgwMg==", "bodyText": "Can we add a small sleep (maybe 100-200 ms) between each check.", "url": "https://github.com/apache/ozone/pull/584#discussion_r383537802", "createdAt": "2020-02-24T21:54:42Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "diffHunk": "@@ -354,4 +356,45 @@ private OzoneKeyDetails getKey(Path keyPath, boolean isDirectory)\n   private void assertKeyNotFoundException(IOException ex) {\n     GenericTestUtils.assertExceptionContains(\"KEY_NOT_FOUND\", ex);\n   }\n+\n+  private void testGetDirectoryModificationTime() throws IOException {\n+    Path mdir1 = new Path(\"/mdir1\");\n+    Path mdir11 = new Path(mdir1, \"mdir11\");\n+    Path mdir111 = new Path(mdir11, \"mdir111\");\n+    fs.mkdirs(mdir111);\n+    rootItemCount++; // mdir1\n+\n+    // Case 1: Dir key exist on server\n+    FileStatus[] fileStatuses = o3fs.listStatus(mdir11);\n+    // Above listStatus result should only have one entry: mdir111\n+    assertEquals(1, fileStatuses.length);\n+    assertEquals(mdir111.toString(),\n+        fileStatuses[0].getPath().toUri().getPath());\n+    assertTrue(fileStatuses[0].isDirectory());\n+    // The dir key is actually created on server,\n+    // so modification time should always be the same value.\n+    long modificationTime = fileStatuses[0].getModificationTime();\n+    // Check modification time in a small loop, it should always be the same\n+    for (int i = 0; i < 5; i++) {\n+      fileStatuses = o3fs.listStatus(mdir11);\n+      assertEquals(modificationTime, fileStatuses[0].getModificationTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7d88eeba5f5a95e38bec2541216fd8f9bbf057d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwNjcwNw==", "bodyText": "I'll add a small(10ms) sleep in the loop.", "url": "https://github.com/apache/ozone/pull/584#discussion_r384706707", "createdAt": "2020-02-26T19:16:28Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "diffHunk": "@@ -354,4 +356,45 @@ private OzoneKeyDetails getKey(Path keyPath, boolean isDirectory)\n   private void assertKeyNotFoundException(IOException ex) {\n     GenericTestUtils.assertExceptionContains(\"KEY_NOT_FOUND\", ex);\n   }\n+\n+  private void testGetDirectoryModificationTime() throws IOException {\n+    Path mdir1 = new Path(\"/mdir1\");\n+    Path mdir11 = new Path(mdir1, \"mdir11\");\n+    Path mdir111 = new Path(mdir11, \"mdir111\");\n+    fs.mkdirs(mdir111);\n+    rootItemCount++; // mdir1\n+\n+    // Case 1: Dir key exist on server\n+    FileStatus[] fileStatuses = o3fs.listStatus(mdir11);\n+    // Above listStatus result should only have one entry: mdir111\n+    assertEquals(1, fileStatuses.length);\n+    assertEquals(mdir111.toString(),\n+        fileStatuses[0].getPath().toUri().getPath());\n+    assertTrue(fileStatuses[0].isDirectory());\n+    // The dir key is actually created on server,\n+    // so modification time should always be the same value.\n+    long modificationTime = fileStatuses[0].getModificationTime();\n+    // Check modification time in a small loop, it should always be the same\n+    for (int i = 0; i < 5; i++) {\n+      fileStatuses = o3fs.listStatus(mdir11);\n+      assertEquals(modificationTime, fileStatuses[0].getModificationTime());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzNzgwMg=="}, "originalCommit": {"oid": "e7d88eeba5f5a95e38bec2541216fd8f9bbf057d"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDk0MDQyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMTo1NTozNlrOFtxURg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMTo1NTozNlrOFtxURg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzODI0Ng==", "bodyText": "Let's add a sleep here too.", "url": "https://github.com/apache/ozone/pull/584#discussion_r383538246", "createdAt": "2020-02-24T21:55:36Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "diffHunk": "@@ -354,4 +356,45 @@ private OzoneKeyDetails getKey(Path keyPath, boolean isDirectory)\n   private void assertKeyNotFoundException(IOException ex) {\n     GenericTestUtils.assertExceptionContains(\"KEY_NOT_FOUND\", ex);\n   }\n+\n+  private void testGetDirectoryModificationTime() throws IOException {\n+    Path mdir1 = new Path(\"/mdir1\");\n+    Path mdir11 = new Path(mdir1, \"mdir11\");\n+    Path mdir111 = new Path(mdir11, \"mdir111\");\n+    fs.mkdirs(mdir111);\n+    rootItemCount++; // mdir1\n+\n+    // Case 1: Dir key exist on server\n+    FileStatus[] fileStatuses = o3fs.listStatus(mdir11);\n+    // Above listStatus result should only have one entry: mdir111\n+    assertEquals(1, fileStatuses.length);\n+    assertEquals(mdir111.toString(),\n+        fileStatuses[0].getPath().toUri().getPath());\n+    assertTrue(fileStatuses[0].isDirectory());\n+    // The dir key is actually created on server,\n+    // so modification time should always be the same value.\n+    long modificationTime = fileStatuses[0].getModificationTime();\n+    // Check modification time in a small loop, it should always be the same\n+    for (int i = 0; i < 5; i++) {\n+      fileStatuses = o3fs.listStatus(mdir11);\n+      assertEquals(modificationTime, fileStatuses[0].getModificationTime());\n+    }\n+\n+    // Case 2: Dir key doesn't exist on server\n+    fileStatuses = o3fs.listStatus(mdir1);\n+    // Above listStatus result should only have one entry: mdir11\n+    assertEquals(1, fileStatuses.length);\n+    assertEquals(mdir11.toString(),\n+        fileStatuses[0].getPath().toUri().getPath());\n+    assertTrue(fileStatuses[0].isDirectory());\n+    // Since the dir key doesn't exist on server, the modification time is\n+    // set to current time upon every listStatus request.\n+    modificationTime = fileStatuses[0].getModificationTime();\n+    // Check modification time in a small loop, it should be slightly larger\n+    // each time\n+    for (int i = 0; i < 5; i++) {\n+      fileStatuses = o3fs.listStatus(mdir1);\n+      assertTrue(modificationTime <= fileStatuses[0].getModificationTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7d88eeba5f5a95e38bec2541216fd8f9bbf057d"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODEzOTAyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODoxMDoyNFrOFuPoXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTo0MDoyMFrOFwDmwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzNDkwOA==", "bodyText": "Could you please explain this change.", "url": "https://github.com/apache/ozone/pull/584#discussion_r384034908", "createdAt": "2020-02-25T18:10:24Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -2005,15 +2016,21 @@ public OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress)\n               if (isFile) {\n                 if (!deletedKeySet.contains(entryInDb)) {\n                   cacheKeyMap.put(entryInDb,\n-                      new OzoneFileStatus(value, scmBlockSize, !isFile));\n+                      new OzoneFileStatus(omKeyInfo, scmBlockSize, !isFile));\n                   countEntries++;\n                 }\n                 iterator.next();\n               } else {\n                 // if entry is a directory\n                 if (!deletedKeySet.contains(entryInDb)) {\n-                  cacheKeyMap.put(entryInDb,\n-                      new OzoneFileStatus(immediateChild));\n+                  if (!entryKeyName.equals(immediateChild)) {\n+                    cacheKeyMap.put(entryInDb,\n+                        new OzoneFileStatus(immediateChild));\n+                  } else {\n+                    // If entryKeyName matches dir name, we have the info\n+                    cacheKeyMap.put(entryInDb,\n+                        new OzoneFileStatus(omKeyInfo, 0, true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7d88eeba5f5a95e38bec2541216fd8f9bbf057d"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwNzI5OA==", "bodyText": "Could you please explain this change.\n\nentryKeyName is retrieved from a DB entry (actually exists), while immediateChild is generated using the information of parent dir and a key in it:\nString immediateChild = OzoneFSUtils.getImmediateChild(entryKeyName, keyName);\nAs seen in getImmediateChild()'s javadoc:\n  /**\n   * The function returns immediate child of given ancestor in a particular\n   * descendant. For example if ancestor is /a/b and descendant is /a/b/c/d/e\n   * the function should return /a/b/c/. If the descendant itself is the\n   * immediate child then it is returned as is without adding a trailing slash.\n   * This is done to distinguish files from a directory as in ozone files do\n   * not carry a trailing slash.\n   */\n  public static String getImmediateChild(String descendant, String ancestor) {\nTherefore, when the dir key actually exists (case 1 in my unit test), entryKeyName will be an actual dir key. In this case, immediateChild equals entryKeyName. Hence my logic here.", "url": "https://github.com/apache/ozone/pull/584#discussion_r384707298", "createdAt": "2020-02-26T19:17:36Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -2005,15 +2016,21 @@ public OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress)\n               if (isFile) {\n                 if (!deletedKeySet.contains(entryInDb)) {\n                   cacheKeyMap.put(entryInDb,\n-                      new OzoneFileStatus(value, scmBlockSize, !isFile));\n+                      new OzoneFileStatus(omKeyInfo, scmBlockSize, !isFile));\n                   countEntries++;\n                 }\n                 iterator.next();\n               } else {\n                 // if entry is a directory\n                 if (!deletedKeySet.contains(entryInDb)) {\n-                  cacheKeyMap.put(entryInDb,\n-                      new OzoneFileStatus(immediateChild));\n+                  if (!entryKeyName.equals(immediateChild)) {\n+                    cacheKeyMap.put(entryInDb,\n+                        new OzoneFileStatus(immediateChild));\n+                  } else {\n+                    // If entryKeyName matches dir name, we have the info\n+                    cacheKeyMap.put(entryInDb,\n+                        new OzoneFileStatus(omKeyInfo, 0, true));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzNDkwOA=="}, "originalCommit": {"oid": "e7d88eeba5f5a95e38bec2541216fd8f9bbf057d"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzNTA0MQ==", "bodyText": "Thanks for explaining Siyao.", "url": "https://github.com/apache/ozone/pull/584#discussion_r385935041", "createdAt": "2020-02-28T21:40:20Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -2005,15 +2016,21 @@ public OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress)\n               if (isFile) {\n                 if (!deletedKeySet.contains(entryInDb)) {\n                   cacheKeyMap.put(entryInDb,\n-                      new OzoneFileStatus(value, scmBlockSize, !isFile));\n+                      new OzoneFileStatus(omKeyInfo, scmBlockSize, !isFile));\n                   countEntries++;\n                 }\n                 iterator.next();\n               } else {\n                 // if entry is a directory\n                 if (!deletedKeySet.contains(entryInDb)) {\n-                  cacheKeyMap.put(entryInDb,\n-                      new OzoneFileStatus(immediateChild));\n+                  if (!entryKeyName.equals(immediateChild)) {\n+                    cacheKeyMap.put(entryInDb,\n+                        new OzoneFileStatus(immediateChild));\n+                  } else {\n+                    // If entryKeyName matches dir name, we have the info\n+                    cacheKeyMap.put(entryInDb,\n+                        new OzoneFileStatus(omKeyInfo, 0, true));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAzNDkwOA=="}, "originalCommit": {"oid": "e7d88eeba5f5a95e38bec2541216fd8f9bbf057d"}, "originalPosition": 120}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4909, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}