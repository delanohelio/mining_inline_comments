{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NTYyMjM3", "number": 1164, "title": "HDDS-3824: OM read requests should make SCM#refreshPipeline outside BUCKET_LOCK", "bodyText": "What changes were proposed in this pull request?\nRefresh pipeline info does a call to SCM and it can be moved outside the BUCKET_LOCK, this would help to improve the performance of read/write mix workloads.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3824\nHow was this patch tested?\nUsing TestOzoneFileSystem unit test cases.", "createdAt": "2020-07-06T06:11:08Z", "url": "https://github.com/apache/ozone/pull/1164", "merged": true, "mergeCommit": {"oid": "46e7b2f90a5cbac5aa7363e517e870db8d0c6fba"}, "closed": true, "closedAt": "2020-07-16T20:55:08Z", "author": {"login": "rakeshadr"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyK8v7AH2gAyNDQ0NTYyMjM3OjI1MTFmMTM4NzFhMWYzODY5ZjUzNzU2MzlkNGZjZDgxYTMwM2FmMWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1DEOgAFqTQ0ODYyMzE0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2511f13871a1f3869f5375639d4fcd81a303af1f", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/2511f13871a1f3869f5375639d4fcd81a303af1f", "committedDate": "2020-07-06T06:07:42Z", "message": "HDDS-3824: OM read requests should make SCM#refreshPipeline outside the BUCKET_LOCK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/ea1206929d39031343fc19969f5a475c65f46f75", "committedDate": "2020-07-07T05:30:11Z", "message": "HDDS-3824: Fixed checkstyle warnings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MjIzMzk5", "url": "https://github.com/apache/ozone/pull/1164#pullrequestreview-444223399", "createdAt": "2020-07-07T20:24:49Z", "commit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMDoyNDo1MFrOGuOUHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMDoyNDo1MFrOGuOUHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyMjIwNA==", "bodyText": "should we order datanodes when the key is a file for caller like getFileStatus?", "url": "https://github.com/apache/ozone/pull/1164#discussion_r451122204", "createdAt": "2020-07-07T20:24:50Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1706,36 +1718,41 @@ public OzoneFileStatus getFileStatus(OmKeyArgs args) throws IOException {\n \n       // Check if the key is a file.\n       String fileKeyBytes = metadataManager.getOzoneKey(\n-          volumeName, bucketName, keyName);\n-      OmKeyInfo fileKeyInfo = metadataManager.getKeyTable().get(fileKeyBytes);\n+              volumeName, bucketName, keyName);\n+      fileKeyInfo = metadataManager.getKeyTable().get(fileKeyBytes);\n+\n+      // Check if the key is a directory.\n+      if (fileKeyInfo == null) {\n+        String dirKey = OzoneFSUtils.addTrailingSlashIfNeeded(keyName);\n+        String dirKeyBytes = metadataManager.getOzoneKey(\n+                volumeName, bucketName, dirKey);\n+        OmKeyInfo dirKeyInfo = metadataManager.getKeyTable().get(dirKeyBytes);\n+        if (dirKeyInfo != null) {\n+          return new OzoneFileStatus(dirKeyInfo, scmBlockSize, true);\n+        }\n+      }\n+    } finally {\n+      metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n+              bucketName);\n+\n+      // if the key is a file then do refresh pipeline info in OM by asking SCM\n       if (fileKeyInfo != null) {\n-        if (args.getRefreshPipeline()) {\n+        if (refreshPipeline) {\n           refreshPipeline(fileKeyInfo);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MjI1Njgx", "url": "https://github.com/apache/ozone/pull/1164#pullrequestreview-444225681", "createdAt": "2020-07-07T20:28:21Z", "commit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzI3OTAw", "url": "https://github.com/apache/ozone/pull/1164#pullrequestreview-444327900", "createdAt": "2020-07-08T00:02:16Z", "commit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDowMjoxNlrOGuTnoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDowMjoxNlrOGuTnoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIwOTEyMQ==", "bodyText": "Can we also move the generation of the secret token also outside of the lock?", "url": "https://github.com/apache/ozone/pull/1164#discussion_r451209121", "createdAt": "2020-07-08T00:02:16Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -659,15 +660,6 @@ public OmKeyInfo lookupKey(OmKeyArgs args, String clientAddress)\n           });\n         }\n       }\n-      // Refresh container pipeline info from SCM", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzI4NDAw", "url": "https://github.com/apache/ozone/pull/1164#pullrequestreview-444328400", "createdAt": "2020-07-08T00:03:46Z", "commit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35471063461c8978378b19ac7123e9f9b848aa59", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/35471063461c8978378b19ac7123e9f9b848aa59", "committedDate": "2020-07-08T07:26:55Z", "message": "HDDS-3824: Fixed review comment - generating of the secret token can also be moved outside lock"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTgzNDI0", "url": "https://github.com/apache/ozone/pull/1164#pullrequestreview-447583424", "createdAt": "2020-07-13T20:37:58Z", "commit": {"oid": "35471063461c8978378b19ac7123e9f9b848aa59"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDozNzo1OFrOGw48Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDozODozMVrOGw49iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxNzc3OA==", "bodyText": "The last parameter of getOzoneFileStatus() should have refreshPipeline handled already. Can we pass args.getRefreshPipeline() on line 1901?", "url": "https://github.com/apache/ozone/pull/1164#discussion_r453917778", "createdAt": "2020-07-13T20:37:58Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1877,26 +1897,18 @@ public OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress)\n     String volumeName = args.getVolumeName();\n     String bucketName = args.getBucketName();\n     String keyName = args.getKeyName();\n-\n-    metadataManager.getLock().acquireReadLock(BUCKET_LOCK, volumeName,\n-        bucketName);\n-    try {\n-      OzoneFileStatus fileStatus = getFileStatus(args);\n-      if (fileStatus.isFile()) {\n-        if (args.getRefreshPipeline()) {\n-          refreshPipeline(fileStatus.getKeyInfo());\n-        }\n-        if (args.getSortDatanodes()) {\n-          sortDatanodeInPipeline(fileStatus.getKeyInfo(), clientAddress);\n-        }\n-        return fileStatus.getKeyInfo();\n-      }\n+    OzoneFileStatus fileStatus = getOzoneFileStatus(volumeName, bucketName,\n+            keyName, false);\n       //if key is not of type file or if key is not found we throw an exception\n-    } finally {\n-      metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n-          bucketName);\n+    if (fileStatus != null && fileStatus.isFile()) {\n+      if (args.getRefreshPipeline()) {\n+        refreshPipeline(fileStatus.getKeyInfo());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35471063461c8978378b19ac7123e9f9b848aa59"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxODA4OQ==", "bodyText": "NIT: sortDatanodes can be handled similarly in getOzoneFileStatus?", "url": "https://github.com/apache/ozone/pull/1164#discussion_r453918089", "createdAt": "2020-07-13T20:38:31Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1877,26 +1897,18 @@ public OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress)\n     String volumeName = args.getVolumeName();\n     String bucketName = args.getBucketName();\n     String keyName = args.getKeyName();\n-\n-    metadataManager.getLock().acquireReadLock(BUCKET_LOCK, volumeName,\n-        bucketName);\n-    try {\n-      OzoneFileStatus fileStatus = getFileStatus(args);\n-      if (fileStatus.isFile()) {\n-        if (args.getRefreshPipeline()) {\n-          refreshPipeline(fileStatus.getKeyInfo());\n-        }\n-        if (args.getSortDatanodes()) {\n-          sortDatanodeInPipeline(fileStatus.getKeyInfo(), clientAddress);\n-        }\n-        return fileStatus.getKeyInfo();\n-      }\n+    OzoneFileStatus fileStatus = getOzoneFileStatus(volumeName, bucketName,\n+            keyName, false);\n       //if key is not of type file or if key is not found we throw an exception\n-    } finally {\n-      metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n-          bucketName);\n+    if (fileStatus != null && fileStatus.isFile()) {\n+      if (args.getRefreshPipeline()) {\n+        refreshPipeline(fileStatus.getKeyInfo());\n+      }\n+      if (args.getSortDatanodes()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35471063461c8978378b19ac7123e9f9b848aa59"}, "originalPosition": 195}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c500b2a829b73dc85c6c867f0e56902606e0a352", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/c500b2a829b73dc85c6c867f0e56902606e0a352", "committedDate": "2020-07-14T05:03:34Z", "message": "HDDS-3824: Review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc330f26f0e43e97c9ea7a1a20c0e2e655787e6c", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/fc330f26f0e43e97c9ea7a1a20c0e2e655787e6c", "committedDate": "2020-07-14T06:47:15Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69a210011a6a62f856e1b81b5a8848685536fd7a", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/69a210011a6a62f856e1b81b5a8848685536fd7a", "committedDate": "2020-07-14T09:17:43Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzQ1NjY4", "url": "https://github.com/apache/ozone/pull/1164#pullrequestreview-448345668", "createdAt": "2020-07-14T18:08:56Z", "commit": {"oid": "69a210011a6a62f856e1b81b5a8848685536fd7a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowODo1NlrOGxfXNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowODo1NlrOGxfXNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NzI1NA==", "bodyText": "I'm +1 on this JIRA.\nCan we file a follow up JIRA to allow batching refreshPipeline call instead of individual calls to save RPC traffic.", "url": "https://github.com/apache/ozone/pull/1164#discussion_r454547254", "createdAt": "2020-07-14T18:08:56Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -2083,6 +2092,11 @@ private void listStatusFindKeyInTableCache(\n       metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n           bucketName);\n     }\n+    if (args.getRefreshPipeline()) {\n+      for(OzoneFileStatus fileStatus : fileStatusList){\n+        refreshPipeline(fileStatus.getKeyInfo());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69a210011a6a62f856e1b81b5a8848685536fd7a"}, "originalPosition": 220}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NjIzMTQ1", "url": "https://github.com/apache/ozone/pull/1164#pullrequestreview-448623145", "createdAt": "2020-07-15T04:38:24Z", "commit": {"oid": "69a210011a6a62f856e1b81b5a8848685536fd7a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3073, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}