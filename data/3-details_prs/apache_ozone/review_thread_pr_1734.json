{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1MjI4MTIz", "number": 1734, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMDoyNjo1OFrOFLGV9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwODo0Mzo0MVrOFLMQJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MTgyNTgzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeSetAclRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMDoyNjo1OFrOIOF6sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMzo1NToyMFrOIPeQYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY0NzkyMg==", "bodyText": "NIT: this can be put into the constructor with a member variable so that the protobuf conversion is done only once and the getter() simply return the member variable. Same apply to other places.", "url": "https://github.com/apache/ozone/pull/1734#discussion_r551647922", "createdAt": "2021-01-05T00:26:58Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeSetAclRequest.java", "diffHunk": "@@ -88,6 +92,12 @@ public String getVolumeName() {\n     return volumeName;\n   }\n \n+  @Override\n+  OzoneObjInfo getObjectInfo() {\n+    return OzoneObjInfo.fromProtobuf(\n+        getOmRequest().getSetAclRequest().getObj());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5NTI2NA==", "bodyText": "fixed.", "url": "https://github.com/apache/ozone/pull/1734#discussion_r553095264", "createdAt": "2021-01-07T03:55:20Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeSetAclRequest.java", "diffHunk": "@@ -88,6 +92,12 @@ public String getVolumeName() {\n     return volumeName;\n   }\n \n+  @Override\n+  OzoneObjInfo getObjectInfo() {\n+    return OzoneObjInfo.fromProtobuf(\n+        getOmRequest().getSetAclRequest().getObj());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY0NzkyMg=="}, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjc5Mzk5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwODo0Mzo0MVrOIOOj9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxMzozNjoyOVrOISBvpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4OTU1Nw==", "bodyText": "buildAuditMessage determines success/failure based on whether exception is null.  But here we can also have failure without exception, indicated by operationResult = false.  I think audit log should indicate failure in this case.\n\n  \n    \n      ozone/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java\n    \n    \n        Lines 124 to 126\n      in\n      c3f6b4b\n    \n    \n    \n    \n\n        \n          \n           if (exception == null) { \n        \n\n        \n          \n             LOG.error(\"Add acl {} to path {} failed, because acl already exist\", \n        \n\n        \n          \n                 getAcls(), getPath());", "url": "https://github.com/apache/ozone/pull/1734#discussion_r551789557", "createdAt": "2021-01-05T08:43:41Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java", "diffHunk": "@@ -116,7 +126,11 @@ OMClientResponse onFailure(OMResponse.Builder omResponse,\n \n   @Override\n   void onComplete(boolean operationResult, IOException exception,\n-      OMMetrics omMetrics) {\n+      OMMetrics omMetrics, AuditLogger auditLogger,\n+      Map<String, String> auditMap) {\n+    auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n+        exception, getOmRequest().getUserInfo()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEzMDY0OA==", "bodyText": "@adoroszlai , thanks for the review and feedback.  Basically, I think  ACL error handling with both Result and Exception is complex.  I fired HDDS-4650m,  ACL related error handling refactor, to cleanly resolve this issue.", "url": "https://github.com/apache/ozone/pull/1734#discussion_r553130648", "createdAt": "2021-01-07T06:20:35Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java", "diffHunk": "@@ -116,7 +126,11 @@ OMClientResponse onFailure(OMResponse.Builder omResponse,\n \n   @Override\n   void onComplete(boolean operationResult, IOException exception,\n-      OMMetrics omMetrics) {\n+      OMMetrics omMetrics, AuditLogger auditLogger,\n+      Map<String, String> auditMap) {\n+    auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n+        exception, getOmRequest().getUserInfo()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4OTU1Nw=="}, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEyNzkyMA==", "bodyText": "@ChenSammi Thank you for working on this. To address this situation, how about this idea:\n\nLet's not call the auditlog() in the first line of the current method.\nWe can do something like this:\n    if (operationResult) { LOG.debug(\"Add acl: {} to path: {} success!\", getAcls(), getPath()); } else { omMetrics.incNumBucketUpdateFails(); if (exception == null) { LOG.error(\"Add acl {} to path {} failed, because acl already exist\", getAcls(), getPath()); } else { LOG.error(\"Add acl {} to path {} failed!\", getAcls(), getPath(), exception); exception = null; // } } auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap, exception, getOmRequest().getUserInfo()));   }\n\nThis will ensure this covers the edge case mentioned by @adoroszlai and we won't have to modify the Audit Log base framework since this scenario is for a very limited number of occurrence in auditing ACL ops only.\nWhat do you think?", "url": "https://github.com/apache/ozone/pull/1734#discussion_r555127920", "createdAt": "2021-01-11T15:30:02Z", "author": {"login": "dineshchitlangia"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java", "diffHunk": "@@ -116,7 +126,11 @@ OMClientResponse onFailure(OMResponse.Builder omResponse,\n \n   @Override\n   void onComplete(boolean operationResult, IOException exception,\n-      OMMetrics omMetrics) {\n+      OMMetrics omMetrics, AuditLogger auditLogger,\n+      Map<String, String> auditMap) {\n+    auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n+        exception, getOmRequest().getUserInfo()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4OTU1Nw=="}, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEyOTUxNw==", "bodyText": "Sorry for bad formatting, github on Phone is funny :)\nBasically, I am suggesting we update exception=null in the else block after you have logged log.error().\nThen call the auditlog() at the end of the method.", "url": "https://github.com/apache/ozone/pull/1734#discussion_r555129517", "createdAt": "2021-01-11T15:32:12Z", "author": {"login": "dineshchitlangia"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java", "diffHunk": "@@ -116,7 +126,11 @@ OMClientResponse onFailure(OMResponse.Builder omResponse,\n \n   @Override\n   void onComplete(boolean operationResult, IOException exception,\n-      OMMetrics omMetrics) {\n+      OMMetrics omMetrics, AuditLogger auditLogger,\n+      Map<String, String> auditMap) {\n+    auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n+        exception, getOmRequest().getUserInfo()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4OTU1Nw=="}, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE3MzE4Nw==", "bodyText": "@dineshchitlangia wouldn't exception=null have the effect of always logging SUCCESS in audit?", "url": "https://github.com/apache/ozone/pull/1734#discussion_r555173187", "createdAt": "2021-01-11T16:23:41Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java", "diffHunk": "@@ -116,7 +126,11 @@ OMClientResponse onFailure(OMResponse.Builder omResponse,\n \n   @Override\n   void onComplete(boolean operationResult, IOException exception,\n-      OMMetrics omMetrics) {\n+      OMMetrics omMetrics, AuditLogger auditLogger,\n+      Map<String, String> auditMap) {\n+    auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n+        exception, getOmRequest().getUserInfo()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4OTU1Nw=="}, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE3ODUxMw==", "bodyText": "Yikes, I intended to say that we set a not null value to exception and accordingly achieve it. Once I get to my laptop I will update here with proper suggestion. Thanks for catching it.", "url": "https://github.com/apache/ozone/pull/1734#discussion_r555178513", "createdAt": "2021-01-11T16:31:04Z", "author": {"login": "dineshchitlangia"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java", "diffHunk": "@@ -116,7 +126,11 @@ OMClientResponse onFailure(OMResponse.Builder omResponse,\n \n   @Override\n   void onComplete(boolean operationResult, IOException exception,\n-      OMMetrics omMetrics) {\n+      OMMetrics omMetrics, AuditLogger auditLogger,\n+      Map<String, String> auditMap) {\n+    auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n+        exception, getOmRequest().getUserInfo()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4OTU1Nw=="}, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIxMTc0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n          \n          \n            \n                    exception, getOmRequest().getUserInfo()));\n          \n          \n            \n                if (operationResult) {\n          \n          \n            \n                  LOG.debug(\"Add acl: {} to path: {} success!\", getAcls(), getPath());\n          \n          \n            \n                } else {\n          \n          \n            \n                  omMetrics.incNumBucketUpdateFails();\n          \n          \n            \n                  if (exception == null) {\n          \n          \n            \n                    LOG.error(\"Add acl {} to path {} failed, because acl already exist\",\n          \n          \n            \n                        getAcls(), getPath());\n          \n          \n            \n                    exception = new ACLAlreadyExistsException(); //we can create this new type of exception\n          \n          \n            \n                  } else {\n          \n          \n            \n                    LOG.error(\"Add acl {} to path {} failed!\", getAcls(), getPath(),\n          \n          \n            \n                        exception);\n          \n          \n            \n                  }\n          \n          \n            \n                }\n          \n          \n            \n                }\n          \n          \n            \n                auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n          \n          \n            \n                    exception, getOmRequest().getUserInfo()));\n          \n          \n            \n              }", "url": "https://github.com/apache/ozone/pull/1734#discussion_r555211744", "createdAt": "2021-01-11T17:19:24Z", "author": {"login": "dineshchitlangia"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java", "diffHunk": "@@ -116,7 +126,11 @@ OMClientResponse onFailure(OMResponse.Builder omResponse,\n \n   @Override\n   void onComplete(boolean operationResult, IOException exception,\n-      OMMetrics omMetrics) {\n+      OMMetrics omMetrics, AuditLogger auditLogger,\n+      Map<String, String> auditMap) {\n+    auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n+        exception, getOmRequest().getUserInfo()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4OTU1Nw=="}, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTY2MjM5MQ==", "bodyText": "Hi @dineshchitlangia, I have the same idea to throw the ACLAlreadyExistsException exception when add an acl and ACL does not exist exception when remove an acl.   I plan to put the logic in ozoneAclUtil.java so that we don't need to do the exception == null check in every ACL related request.\nAnd currently,  there are OzoneAclUtils.java which used by bucket, key and prefix ACL operation,  and OmOzoneAclMap.java which used by volume. I'd like to unify them and do some refactor which will be quite a big patch.   So leave it in HDDS-4650.", "url": "https://github.com/apache/ozone/pull/1734#discussion_r555662391", "createdAt": "2021-01-12T10:21:43Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java", "diffHunk": "@@ -116,7 +126,11 @@ OMClientResponse onFailure(OMResponse.Builder omResponse,\n \n   @Override\n   void onComplete(boolean operationResult, IOException exception,\n-      OMMetrics omMetrics) {\n+      OMMetrics omMetrics, AuditLogger auditLogger,\n+      Map<String, String> auditMap) {\n+    auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n+        exception, getOmRequest().getUserInfo()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4OTU1Nw=="}, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTc3Mzg2MQ==", "bodyText": "Sound good to me. +1", "url": "https://github.com/apache/ozone/pull/1734#discussion_r555773861", "createdAt": "2021-01-12T13:36:29Z", "author": {"login": "dineshchitlangia"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/acl/OMBucketAddAclRequest.java", "diffHunk": "@@ -116,7 +126,11 @@ OMClientResponse onFailure(OMResponse.Builder omResponse,\n \n   @Override\n   void onComplete(boolean operationResult, IOException exception,\n-      OMMetrics omMetrics) {\n+      OMMetrics omMetrics, AuditLogger auditLogger,\n+      Map<String, String> auditMap) {\n+    auditLog(auditLogger, buildAuditMessage(OMAction.ADD_ACL, auditMap,\n+        exception, getOmRequest().getUserInfo()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4OTU1Nw=="}, "originalCommit": {"oid": "0a6a984d5e92dad08993dcd1fd4a19ca498fd5d3"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4484, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}