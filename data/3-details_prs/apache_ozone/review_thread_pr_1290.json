{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMjcyNDY5", "number": 1290, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNDowMzoxM1rOEWEgHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNDowMzoxM1rOEWEgHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTc3ODg1OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/container/InfoSubcommand.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNDowMzoxM1rOG9Lt4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjoyMzoyMFrOHN9Y5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgwODI5MQ==", "bodyText": "Can we leverage the existing \"--verbose\" option defined in parent class GenericCli here?", "url": "https://github.com/apache/ozone/pull/1290#discussion_r466808291", "createdAt": "2020-08-07T04:03:13Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/container/InfoSubcommand.java", "diffHunk": "@@ -52,6 +53,10 @@\n   @Parameters(description = \"Decimal id of the container.\")\n   private long containerID;\n \n+  @CommandLine.Option(names = {\"--verbose\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "142947da936c8c99242a1242c39a5702da4b66cc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5MTMxMw==", "bodyText": "@xiaoyuyao\nboolean verbose = false;\nif (parent.getParent() instanceof GenericCli) {\n        if (((GenericCli) parent.getParent()).isVerbose()) {\n            verbose = true;\n        }\n}\nDo you mean that i should add this code to L66", "url": "https://github.com/apache/ozone/pull/1290#discussion_r467091313", "createdAt": "2020-08-07T14:52:55Z", "author": {"login": "maobaolong"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/container/InfoSubcommand.java", "diffHunk": "@@ -52,6 +53,10 @@\n   @Parameters(description = \"Decimal id of the container.\")\n   private long containerID;\n \n+  @CommandLine.Option(names = {\"--verbose\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgwODI5MQ=="}, "originalCommit": {"oid": "142947da936c8c99242a1242c39a5702da4b66cc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MzU0Mg==", "bodyText": "Note that parent --verbose also enables exception stack trace logging in case of failures.  Thus for non-existent container, we would not only get the error message, but the complete stack trace:\n$ ozone admin --verbose container info 1\norg.apache.hadoop.ipc.RemoteException(org.apache.hadoop.hdds.scm.container.ContainerNotFoundException): Container with id #1 not found.\n\tat org.apache.hadoop.hdds.scm.container.states.ContainerStateMap.checkIfContainerExist(ContainerStateMap.java:542)\n\tat org.apache.hadoop.hdds.scm.container.states.ContainerStateMap.getContainerInfo(ContainerStateMap.java:188)\n\tat org.apache.hadoop.hdds.scm.container.ContainerStateManager.getContainer(ContainerStateManager.java:499)\n\tat org.apache.hadoop.hdds.scm.container.SCMContainerManager.getContainer(SCMContainerManager.java:201)\n\tat org.apache.hadoop.hdds.scm.server.SCMClientProtocolServer.getContainerWithPipelineCommon(SCMClientProtocolServer.java:227)\n\tat org.apache.hadoop.hdds.scm.server.SCMClientProtocolServer.getContainerWithPipeline(SCMClientProtocolServer.java:267)\n\tat org.apache.hadoop.hdds.scm.protocol.StorageContainerLocationProtocolServerSideTranslatorPB.getContainerWithPipeline(StorageContainerLocationProtocolServerSideTranslatorPB.java:307)\n\tat org.apache.hadoop.hdds.scm.protocol.StorageContainerLocationProtocolServerSideTranslatorPB.processRequest(StorageContainerLocationProtocolServerSideTranslatorPB.java:154)\n\tat org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:74)\n\tat org.apache.hadoop.hdds.scm.protocol.StorageContainerLocationProtocolServerSideTranslatorPB.submitRequest(StorageContainerLocationProtocolServerSideTranslatorPB.java:128)\n\tat org.apache.hadoop.hdds.protocol.proto.StorageContainerLocationProtocolProtos$StorageContainerLocationProtocolService$2.callBlockingMethod(StorageContainerLocationProtocolProtos.java:35691)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/javax.security.auth.Subject.doAs(Subject.java:423)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)\n\n\tat org.apache.hadoop.ipc.Client.getRpcResponse(Client.java:1545)\n\tat org.apache.hadoop.ipc.Client.call(Client.java:1491)\n\tat org.apache.hadoop.ipc.Client.call(Client.java:1388)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)\n\tat com.sun.proxy.$Proxy15.submitRequest(Unknown Source)\n\tat org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRpcRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:130)\n\tat org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:121)\n\tat org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.getContainerWithPipeline(StorageContainerLocationProtocolClientSideTranslatorPB.java:195)\n\tat org.apache.hadoop.hdds.scm.cli.ContainerOperationClient.getContainerWithPipeline(ContainerOperationClient.java:440)\n\tat org.apache.hadoop.hdds.scm.cli.container.InfoSubcommand.call(InfoSubcommand.java:61)\n\tat org.apache.hadoop.hdds.scm.cli.container.InfoSubcommand.call(InfoSubcommand.java:41)\n\tat picocli.CommandLine.execute(CommandLine.java:1173)\n\tat picocli.CommandLine.access$800(CommandLine.java:141)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:1367)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:1335)\n\tat picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1243)\n\tat picocli.CommandLine.parseWithHandlers(CommandLine.java:1526)\n\tat picocli.CommandLine.parseWithHandler(CommandLine.java:1465)\n\tat org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)\n\tat org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)\n\tat org.apache.hadoop.ozone.admin.OzoneAdmin.main(OzoneAdmin.java:96)\n\nIn case you still want to leverage it, I suggest this:\n      boolean verbose = parent.getParent() instanceof GenericParentCommand &&\n          ((GenericParentCommand) parent.getParent()).isVerbose();\n\nIn addition to being simpler, it also uses the GenericParentCommand interface, which defines isVerbose(), instead of the concrete GenericCli class.", "url": "https://github.com/apache/ozone/pull/1290#discussion_r469183542", "createdAt": "2020-08-12T11:14:09Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/container/InfoSubcommand.java", "diffHunk": "@@ -52,6 +53,10 @@\n   @Parameters(description = \"Decimal id of the container.\")\n   private long containerID;\n \n+  @CommandLine.Option(names = {\"--verbose\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgwODI5MQ=="}, "originalCommit": {"oid": "142947da936c8c99242a1242c39a5702da4b66cc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzMDk5Ng==", "bodyText": "I agree uses GenericParentCommand seems better. Also, I would suggest we change printError to printStackTrace only if there is no meaningful error message? This way, we will have a clean verbose output as long as the error message is meaningful.", "url": "https://github.com/apache/ozone/pull/1290#discussion_r470930996", "createdAt": "2020-08-15T03:21:12Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/container/InfoSubcommand.java", "diffHunk": "@@ -52,6 +53,10 @@\n   @Parameters(description = \"Decimal id of the container.\")\n   private long containerID;\n \n+  @CommandLine.Option(names = {\"--verbose\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgwODI5MQ=="}, "originalCommit": {"oid": "142947da936c8c99242a1242c39a5702da4b66cc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA2MTU1Mg==", "bodyText": "@adoroszlai Thanks for your tips, I commit a new PR, PTAL.", "url": "https://github.com/apache/ozone/pull/1290#discussion_r478061552", "createdAt": "2020-08-27T03:50:02Z", "author": {"login": "maobaolong"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/container/InfoSubcommand.java", "diffHunk": "@@ -52,6 +53,10 @@\n   @Parameters(description = \"Decimal id of the container.\")\n   private long containerID;\n \n+  @CommandLine.Option(names = {\"--verbose\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgwODI5MQ=="}, "originalCommit": {"oid": "142947da936c8c99242a1242c39a5702da4b66cc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMzODg4OA==", "bodyText": "Also, I would suggest we change printError to printStackTrace only if there is no meaningful error message? This way, we will have a clean verbose output as long as the error message is meaningful.\n\nGood idea @xiaoyuyao.  I think we can split this to a separate improvement issue, so I created HDDS-4160.", "url": "https://github.com/apache/ozone/pull/1290#discussion_r478338888", "createdAt": "2020-08-27T11:13:38Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/container/InfoSubcommand.java", "diffHunk": "@@ -52,6 +53,10 @@\n   @Parameters(description = \"Decimal id of the container.\")\n   private long containerID;\n \n+  @CommandLine.Option(names = {\"--verbose\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgwODI5MQ=="}, "originalCommit": {"oid": "142947da936c8c99242a1242c39a5702da4b66cc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM5OTMzMg==", "bodyText": "Ping @xiaoyuyao.\nPlease let me know if you are happy with this approach.", "url": "https://github.com/apache/ozone/pull/1290#discussion_r484399332", "createdAt": "2020-09-07T12:23:20Z", "author": {"login": "elek"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/container/InfoSubcommand.java", "diffHunk": "@@ -52,6 +53,10 @@\n   @Parameters(description = \"Decimal id of the container.\")\n   private long containerID;\n \n+  @CommandLine.Option(names = {\"--verbose\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgwODI5MQ=="}, "originalCommit": {"oid": "142947da936c8c99242a1242c39a5702da4b66cc"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4984, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}