{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0OTYzNjMw", "number": 1361, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0NDozM1rOEhTtog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoxNDozMFrOEhv9Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYxNDQyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0NDozM1rOHOjUuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwMzozMTozMVrOHO1VgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMDg1OQ==", "bodyText": "@bharatviswa504 can you please reword this comment? I couldn't understand what it is saying.", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485020859", "createdAt": "2020-09-08T15:44:33Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -158,6 +159,23 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       validateBucketAndVolume(omMetadataManager, volumeName, bucketName);\n \n+      // Check by the time we commit this file, is there any directory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad3fd1b898f2b5ce41035a4475c97a138944604"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMxNTk2OQ==", "bodyText": "done", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485315969", "createdAt": "2020-09-09T03:31:31Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -158,6 +159,23 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       validateBucketAndVolume(omMetadataManager, volumeName, bucketName);\n \n+      // Check by the time we commit this file, is there any directory", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMDg1OQ=="}, "originalCommit": {"oid": "9ad3fd1b898f2b5ce41035a4475c97a138944604"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYyMDIzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0NTo1NVrOHOjYZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwMjowMjoyM1rOHOz8-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMTc5Ng==", "bodyText": "Does the directory name have a trailing / in RocksDB? If so, do we need to append it to keyname before calling checkDirectoryAlreadyExists?", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485021796", "createdAt": "2020-09-08T15:45:55Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -158,6 +159,23 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       validateBucketAndVolume(omMetadataManager, volumeName, bucketName);\n \n+      // Check by the time we commit this file, is there any directory\n+      // created if then fail it. This is being done for correctness.\n+\n+      // For now we are taking this approach similar to local file creation.\n+      // TODO: In future this can be revisited to come up with an advanced\n+      // approach.\n+\n+\n+      if (ozoneManager.getEnableFileSystemPaths()) {\n+        if (checkDirectoryAlreadyExists(volumeName, bucketName, keyName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad3fd1b898f2b5ce41035a4475c97a138944604"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI5MzMwNA==", "bodyText": "Does the directory name have a trailing / in RocksDB?\n\nYes.\n\nIf so, do we need to append it to keyname before calling checkDirectoryAlreadyExists?\n\nThat is taken care of by the implementation of checkDirectoryAlreadyExists.\nWhere it uses getOzoneDirKey which appends \"/\"", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485293304", "createdAt": "2020-09-09T02:02:23Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -158,6 +159,23 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       validateBucketAndVolume(omMetadataManager, volumeName, bucketName);\n \n+      // Check by the time we commit this file, is there any directory\n+      // created if then fail it. This is being done for correctness.\n+\n+      // For now we are taking this approach similar to local file creation.\n+      // TODO: In future this can be revisited to come up with an advanced\n+      // approach.\n+\n+\n+      if (ozoneManager.getEnableFileSystemPaths()) {\n+        if (checkDirectoryAlreadyExists(volumeName, bucketName, keyName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMTc5Ng=="}, "originalCommit": {"oid": "9ad3fd1b898f2b5ce41035a4475c97a138944604"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYyMjkyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/ObjectEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0NjozNVrOHOjaCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0NjozNVrOHOjaCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMjIxOA==", "bodyText": "Nice detailed explanation, thanks for adding this!", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485022218", "createdAt": "2020-09-08T15:46:35Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/ObjectEndpoint.java", "diffHunk": "@@ -197,6 +198,18 @@ public Response put(\n           .build();\n     } catch (IOException ex) {\n       LOG.error(\"Exception occurred in PutObject\", ex);\n+      if (ex instanceof  OMException) {\n+        if (((OMException) ex).getResult() == ResultCodes.NOT_A_FILE) {\n+          OS3Exception os3Exception = S3ErrorTable.newError(INVALID_REQUEST,\n+              keyPath);\n+          os3Exception.setErrorMessage(\"An error occurred (InvalidRequest) \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad3fd1b898f2b5ce41035a4475c97a138944604"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNTY1MTg2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNDozNzowOVrOHO2Vzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNToxOTozNlrOHO3Dyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMjQzMA==", "bodyText": "Do we have a test case that tests the reverse scenario? i.e. create the dir first, then try to create a file with the same name. Also are we testing this via the object store interface with the flag enabled?", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485332430", "createdAt": "2020-09-09T04:37:09Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java", "diffHunk": "@@ -209,6 +215,94 @@ public void testObjectStoreCreateWithO3fs() throws Exception {\n \n   }\n \n+\n+  @Test\n+  public void testKeyCreationFailDuetoDirectoryCreationBeforeCommit()\n+      throws Exception {\n+    OzoneVolume ozoneVolume =\n+        cluster.getRpcClient().getObjectStore().getVolume(volumeName);\n+\n+    OzoneBucket ozoneBucket = ozoneVolume.getBucket(bucketName);\n+\n+    OzoneOutputStream ozoneOutputStream =\n+        ozoneBucket.createKey(\"/a/b/c\", 10);\n+    byte[] b = new byte[10];\n+    Arrays.fill(b, (byte)96);\n+    ozoneOutputStream.write(b);\n+\n+    // Before close create directory with same name.\n+    o3fs.mkdirs(new Path(\"/a/b/c\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e9ead87e8b0df104e0d718db20767d084256e59"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzOTc5Mw==", "bodyText": "Do we have a test case that tests the reverse scenario? i.e. create the dir first, then try to create a file with the same >name\n\nNo such test is currently available. Will post shortly this test also.\n\nAlso are we testing this via the object store interface with the flag enabled?\n\nYes test is with flag enabled.", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485339793", "createdAt": "2020-09-09T05:03:54Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java", "diffHunk": "@@ -209,6 +215,94 @@ public void testObjectStoreCreateWithO3fs() throws Exception {\n \n   }\n \n+\n+  @Test\n+  public void testKeyCreationFailDuetoDirectoryCreationBeforeCommit()\n+      throws Exception {\n+    OzoneVolume ozoneVolume =\n+        cluster.getRpcClient().getObjectStore().getVolume(volumeName);\n+\n+    OzoneBucket ozoneBucket = ozoneVolume.getBucket(bucketName);\n+\n+    OzoneOutputStream ozoneOutputStream =\n+        ozoneBucket.createKey(\"/a/b/c\", 10);\n+    byte[] b = new byte[10];\n+    Arrays.fill(b, (byte)96);\n+    ozoneOutputStream.write(b);\n+\n+    // Before close create directory with same name.\n+    o3fs.mkdirs(new Path(\"/a/b/c\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMjQzMA=="}, "originalCommit": {"oid": "1e9ead87e8b0df104e0d718db20767d084256e59"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NDIwMw==", "bodyText": "Added the test.", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485344203", "createdAt": "2020-09-09T05:19:36Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java", "diffHunk": "@@ -209,6 +215,94 @@ public void testObjectStoreCreateWithO3fs() throws Exception {\n \n   }\n \n+\n+  @Test\n+  public void testKeyCreationFailDuetoDirectoryCreationBeforeCommit()\n+      throws Exception {\n+    OzoneVolume ozoneVolume =\n+        cluster.getRpcClient().getObjectStore().getVolume(volumeName);\n+\n+    OzoneBucket ozoneBucket = ozoneVolume.getBucket(bucketName);\n+\n+    OzoneOutputStream ozoneOutputStream =\n+        ozoneBucket.createKey(\"/a/b/c\", 10);\n+    byte[] b = new byte[10];\n+    Arrays.fill(b, (byte)96);\n+    ozoneOutputStream.write(b);\n+\n+    // Before close create directory with same name.\n+    o3fs.mkdirs(new Path(\"/a/b/c\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMjQzMA=="}, "originalCommit": {"oid": "1e9ead87e8b0df104e0d718db20767d084256e59"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODI0MjAzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoxNDozMFrOHPPJxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOToyNTo1MVrOHQrJ-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTczODk0OA==", "bodyText": "Thanks for the additional test. Can we also add a test case that exercises the REST API to create a file and dir with the same name, in both orders?", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485738948", "createdAt": "2020-09-09T16:14:30Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java", "diffHunk": "@@ -303,6 +304,12 @@ public void testMPUFailDuetoDirectoryCreationBeforeComplete()\n \n   }\n \n+  @Test(expected = FileAlreadyExistsException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1213423decf0237b844a7ab5a8805005a68a4fb3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc1NjA1MA==", "bodyText": "You mean use OzoneBucketAPI and create a Key or add a robot test using S3\nIf robot test, we don't have a test suite with this flag enabled,  there is already an open Jira for this, we can cover this additional scenario in that.\nhttps://issues.apache.org/jira/browse/HDDS-4154", "url": "https://github.com/apache/ozone/pull/1361#discussion_r485756050", "createdAt": "2020-09-09T16:34:00Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java", "diffHunk": "@@ -303,6 +304,12 @@ public void testMPUFailDuetoDirectoryCreationBeforeComplete()\n \n   }\n \n+  @Test(expected = FileAlreadyExistsException.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTczODk0OA=="}, "originalCommit": {"oid": "1213423decf0237b844a7ab5a8805005a68a4fb3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI0NjMyOQ==", "bodyText": "Added a test with object store API for the same scenario", "url": "https://github.com/apache/ozone/pull/1361#discussion_r487246329", "createdAt": "2020-09-11T19:25:51Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFSWithObjectStoreCreate.java", "diffHunk": "@@ -303,6 +304,12 @@ public void testMPUFailDuetoDirectoryCreationBeforeComplete()\n \n   }\n \n+  @Test(expected = FileAlreadyExistsException.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTczODk0OA=="}, "originalCommit": {"oid": "1213423decf0237b844a7ab5a8805005a68a4fb3"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3932, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}