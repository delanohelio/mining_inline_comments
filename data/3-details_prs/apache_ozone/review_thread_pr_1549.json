{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NzE3NDYx", "number": 1549, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDowNjoxMVrOE2yBvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDowNjoyN1rOE2yCJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODc4MjA1OnYy", "diffSide": "LEFT", "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/common/TestSchemaOneBackwardsCompatibility.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDowNjoxMVrOHvwagw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjowNDozOVrOHv10ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzODMzOQ==", "bodyText": "What is the reason for removing this assertion, and opening a new ReferenceCountedDB after running the block deleting service?", "url": "https://github.com/apache/ozone/pull/1549#discussion_r519838339", "createdAt": "2020-11-09T14:06:11Z", "author": {"login": "errose28"}, "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/common/TestSchemaOneBackwardsCompatibility.java", "diffHunk": "@@ -269,29 +272,29 @@ public void testDelete() throws Exception {\n    */\n   @Test\n   public void testReadDeletedBlockChunkInfo() throws Exception {\n-    try(ReferenceCountedDB refCountedDB = BlockUtils.getDB(newKvData(), conf)) {\n+    KeyValueContainerData kvData = newKvData();\n+    List<? extends Table.KeyValue<String, ChunkInfoList>> deletedBlocks;\n+    Set<String> preUpgradeBlocks = new HashSet<>();\n+    try(ReferenceCountedDB refCountedDB = BlockUtils.getDB(kvData, conf)) {\n       // Read blocks that were already deleted before the upgrade.\n-      List<? extends Table.KeyValue<String, ChunkInfoList>> deletedBlocks =\n-              refCountedDB.getStore()\n-                      .getDeletedBlocksTable().getRangeKVs(null, 100);\n-\n-      Set<String> preUpgradeBlocks = new HashSet<>();\n+      deletedBlocks = refCountedDB.getStore()\n+          .getDeletedBlocksTable().getRangeKVs(null, 100);\n \n-      for(Table.KeyValue<String, ChunkInfoList> chunkListKV: deletedBlocks) {\n+      for (Table.KeyValue<String, ChunkInfoList> chunkListKV : deletedBlocks) {\n         preUpgradeBlocks.add(chunkListKV.getKey());\n         try {\n           chunkListKV.getValue();\n           Assert.fail(\"No exception thrown when trying to retrieve old \" +\n-                  \"deleted blocks values as chunk lists.\");\n-        } catch(IOException ex) {\n+              \"deleted blocks values as chunk lists.\");\n+        } catch (IOException ex) {\n           // Exception thrown as expected.\n         }\n       }\n+    }\n \n-      Assert.assertEquals(TestDB.NUM_DELETED_BLOCKS, preUpgradeBlocks.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc31909ba3e18a49c62cc0f6982e4f18e5a09bc7"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkyNjg4NA==", "bodyText": "That seems like a mistake, as I don't remember intentionally changing it. I did have some problems getting these tests to pass.\nHowever now I have refactored the container opening part to handle the case where there is already a DB in the cache, I think the changes to this class are not needed. I have reverted them all and the tests pass locally, so lets see how the latest CI run goes.", "url": "https://github.com/apache/ozone/pull/1549#discussion_r519926884", "createdAt": "2020-11-09T16:04:39Z", "author": {"login": "sodonnel"}, "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/common/TestSchemaOneBackwardsCompatibility.java", "diffHunk": "@@ -269,29 +272,29 @@ public void testDelete() throws Exception {\n    */\n   @Test\n   public void testReadDeletedBlockChunkInfo() throws Exception {\n-    try(ReferenceCountedDB refCountedDB = BlockUtils.getDB(newKvData(), conf)) {\n+    KeyValueContainerData kvData = newKvData();\n+    List<? extends Table.KeyValue<String, ChunkInfoList>> deletedBlocks;\n+    Set<String> preUpgradeBlocks = new HashSet<>();\n+    try(ReferenceCountedDB refCountedDB = BlockUtils.getDB(kvData, conf)) {\n       // Read blocks that were already deleted before the upgrade.\n-      List<? extends Table.KeyValue<String, ChunkInfoList>> deletedBlocks =\n-              refCountedDB.getStore()\n-                      .getDeletedBlocksTable().getRangeKVs(null, 100);\n-\n-      Set<String> preUpgradeBlocks = new HashSet<>();\n+      deletedBlocks = refCountedDB.getStore()\n+          .getDeletedBlocksTable().getRangeKVs(null, 100);\n \n-      for(Table.KeyValue<String, ChunkInfoList> chunkListKV: deletedBlocks) {\n+      for (Table.KeyValue<String, ChunkInfoList> chunkListKV : deletedBlocks) {\n         preUpgradeBlocks.add(chunkListKV.getKey());\n         try {\n           chunkListKV.getValue();\n           Assert.fail(\"No exception thrown when trying to retrieve old \" +\n-                  \"deleted blocks values as chunk lists.\");\n-        } catch(IOException ex) {\n+              \"deleted blocks values as chunk lists.\");\n+        } catch (IOException ex) {\n           // Exception thrown as expected.\n         }\n       }\n+    }\n \n-      Assert.assertEquals(TestDB.NUM_DELETED_BLOCKS, preUpgradeBlocks.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzODMzOQ=="}, "originalCommit": {"oid": "cc31909ba3e18a49c62cc0f6982e4f18e5a09bc7"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODc4MzEwOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/metadata/DatanodeStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDowNjoyN1rOHvwbLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjowMzoyMFrOHv1wzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzODUwOQ==", "bodyText": "I think this is a typo.", "url": "https://github.com/apache/ozone/pull/1549#discussion_r519838509", "createdAt": "2020-11-09T14:06:27Z", "author": {"login": "errose28"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/metadata/DatanodeStore.java", "diffHunk": "@@ -47,7 +47,7 @@\n    */\n   void stop() throws Exception;\n \n-  /**\n+  /**TestSchemaOneBackwardsCompatibility.java", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc31909ba3e18a49c62cc0f6982e4f18e5a09bc7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkyNTk2Nw==", "bodyText": "You are correct. Thanks for spotting it!", "url": "https://github.com/apache/ozone/pull/1549#discussion_r519925967", "createdAt": "2020-11-09T16:03:20Z", "author": {"login": "sodonnel"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/metadata/DatanodeStore.java", "diffHunk": "@@ -47,7 +47,7 @@\n    */\n   void stop() throws Exception;\n \n-  /**\n+  /**TestSchemaOneBackwardsCompatibility.java", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzODUwOQ=="}, "originalCommit": {"oid": "cc31909ba3e18a49c62cc0f6982e4f18e5a09bc7"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4686, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}