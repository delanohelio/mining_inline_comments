{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MzYzOTYw", "number": 906, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToyODo1M1rOD8Pk0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNToyMDoxMFrOD8U1bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDk2MzM4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToyODo1M1rOGVEMJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToyODo1M1rOGVEMJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MTkyNw==", "bodyText": "Replace the rm root logic with a warning. Effectively disallowing admin to use rm -r / to clear the cluster.\nAdmins should re-init the cluster if they really want to clear the cluster.", "url": "https://github.com/apache/ozone/pull/906#discussion_r424741927", "createdAt": "2020-05-13T21:28:53Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,76 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+\n+      // Handle rm root\n+      if (ofsPath.isRoot()) {\n+        Iterator<? extends OzoneVolume> it =\n+            adapterImpl.getObjectStore().listVolumes(\"\");\n+        while (it.hasNext()) {\n+          OzoneVolume volume = it.next();\n+          String nextVolume = addTrailingSlashIfNeeded(\n+              f.toString()) + volume.getName();\n+          delete(new Path(nextVolume), true);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9716c3b18343c07247951d4f787198ba136a5b91"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTc2OTI5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNDo0MzoyMFrOGVL3Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDozOToyMlrOGVtXRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2NzYwNg==", "bodyText": "Before this there is a root validation.\nif (key.equals(\"/\")) {\nLOG.warn(\"Cannot delete root directory.\");\nreturn false;\n}\nIs this above check still needed?", "url": "https://github.com/apache/ozone/pull/906#discussion_r424867606", "createdAt": "2020-05-14T04:43:20Z", "author": {"login": "umamaheswararao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM2MDkxNw==", "bodyText": "Yes. Unfortunately I found that the original check is broken. we might just want to remove it:\n$ ozone fs -rm -r ofs://omservice/\n2020-05-14 18:51:50 INFO  deprecation:1394 - io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum\n2020-05-14 18:51:50 INFO  BasicRootedOzoneFileSystem:476 - delete: key =\n2020-05-14 18:51:50 WARN  BasicRootedOzoneFileSystem:488 - delete: OFS does not support rm root. To wipe the cluster, please re-init OM instead.\nrm: `ofs://omservice/': Input/output error\n\naddTrailingSlashIfNeeded doesn't really add '/' to empty string (root).\nalso I noticed the Input/output error part. looking into it. IMO the Input/output error should be fine. Seems like hadoop common Delete.java throws when fs.delete returns false. Not much I can do on the FileSystem side, unless we want to return true for rm root.", "url": "https://github.com/apache/ozone/pull/906#discussion_r425360917", "createdAt": "2020-05-14T18:54:07Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2NzYwNg=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM2NDI4NQ==", "bodyText": "Indeed for o3fs this logic is fixed in HDDS-2973: d1b8c08#diff-e48c4ce6b86d4a33c3f38ba8d6d06ea3R442", "url": "https://github.com/apache/ozone/pull/906#discussion_r425364285", "createdAt": "2020-05-14T18:59:48Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2NzYwNg=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5Mzc0Ng==", "bodyText": "I will remove the buggy check logic.", "url": "https://github.com/apache/ozone/pull/906#discussion_r425393746", "createdAt": "2020-05-14T19:55:42Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2NzYwNg=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQxNjUxNw==", "bodyText": "done in 5b5b7ca", "url": "https://github.com/apache/ozone/pull/906#discussion_r425416517", "createdAt": "2020-05-14T20:39:22Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2NzYwNg=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTc3Mjg3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNDo0NTo1NlrOGVL5eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo1OToyOFrOGVsGNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2ODIxNg==", "bodyText": "I think we can do this addTrailingSlashIfNeeded(f.toString()) outside of loop once?\npath.toString also does lot of conversions. we can avoid that if we do it outside loop", "url": "https://github.com/apache/ozone/pull/906#discussion_r424868216", "createdAt": "2020-05-14T04:45:56Z", "author": {"login": "umamaheswararao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+\n+      // Handle rm root\n+      if (ofsPath.isRoot()) {\n+        // Intentionally drop support for rm root\n+        // because it is too dangerous and doesn't provide much value\n+        LOG.warn(\"delete: OFS does not support rm root. \"\n+            + \"To wipe the cluster, please re-init OM instead.\");\n+        return false;\n+      }\n+\n+      // Handle delete volume\n+      if (ofsPath.isVolume()) {\n+        String volumeName = ofsPath.getVolumeName();\n+        if (recursive) {\n+          // Delete all buckets first\n+          OzoneVolume volume =\n+              adapterImpl.getObjectStore().getVolume(volumeName);\n+          Iterator<? extends OzoneBucket> it = volume.listBuckets(\"\");\n+          while (it.hasNext()) {\n+            OzoneBucket bucket = it.next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5NTc2Ng==", "bodyText": "done", "url": "https://github.com/apache/ozone/pull/906#discussion_r425395766", "createdAt": "2020-05-14T19:59:28Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+\n+      // Handle rm root\n+      if (ofsPath.isRoot()) {\n+        // Intentionally drop support for rm root\n+        // because it is too dangerous and doesn't provide much value\n+        LOG.warn(\"delete: OFS does not support rm root. \"\n+            + \"To wipe the cluster, please re-init OM instead.\");\n+        return false;\n+      }\n+\n+      // Handle delete volume\n+      if (ofsPath.isVolume()) {\n+        String volumeName = ofsPath.getVolumeName();\n+        if (recursive) {\n+          // Delete all buckets first\n+          OzoneVolume volume =\n+              adapterImpl.getObjectStore().getVolume(volumeName);\n+          Iterator<? extends OzoneBucket> it = volume.listBuckets(\"\");\n+          while (it.hasNext()) {\n+            OzoneBucket bucket = it.next();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2ODIxNg=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTgwMzMzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNTowNjoxM1rOGVMMRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODo0MzoxN1rOGWP-DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3MzAzMA==", "bodyText": "Why is this? Do you mind explaining why do we need to create parent dir. Parent dir should not have deleted right? I know its not related to this change, but just for my understanding.", "url": "https://github.com/apache/ozone/pull/906#discussion_r424873030", "createdAt": "2020-05-14T05:06:13Z", "author": {"login": "umamaheswararao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+\n+      // Handle rm root\n+      if (ofsPath.isRoot()) {\n+        // Intentionally drop support for rm root\n+        // because it is too dangerous and doesn't provide much value\n+        LOG.warn(\"delete: OFS does not support rm root. \"\n+            + \"To wipe the cluster, please re-init OM instead.\");\n+        return false;\n+      }\n+\n+      // Handle delete volume\n+      if (ofsPath.isVolume()) {\n+        String volumeName = ofsPath.getVolumeName();\n+        if (recursive) {\n+          // Delete all buckets first\n+          OzoneVolume volume =\n+              adapterImpl.getObjectStore().getVolume(volumeName);\n+          Iterator<? extends OzoneBucket> it = volume.listBuckets(\"\");\n+          while (it.hasNext()) {\n+            OzoneBucket bucket = it.next();\n+            String nextBucket = addTrailingSlashIfNeeded(\n+                f.toString()) + bucket.getName();\n+            delete(new Path(nextBucket), true);\n+          }\n+        }\n+        try {\n+          adapterImpl.getObjectStore().deleteVolume(volumeName);\n+          return true;\n+        } catch (OMException ex) {\n+          // volume is not empty\n+          if (ex.getResult() == VOLUME_NOT_EMPTY) {\n+            throw new PathIsNotEmptyDirectoryException(f.toString());\n+          } else {\n+            throw ex;\n+          }\n+        }\n+      }\n+\n       result = innerDelete(f, recursive);\n+\n+      // Handle delete bucket\n+      if (ofsPath.isBucket()) {\n+        OzoneVolume volume =\n+            adapterImpl.getObjectStore().getVolume(ofsPath.getVolumeName());\n+        try {\n+          volume.deleteBucket(ofsPath.getBucketName());\n+          return result;\n+        } catch (OMException ex) {\n+          // bucket is not empty\n+          if (ex.getResult() == BUCKET_NOT_EMPTY) {\n+            throw new PathIsNotEmptyDirectoryException(f.toString());\n+          } else {\n+            throw ex;\n+          }\n+        }\n+      }\n+\n     } else {\n       LOG.debug(\"delete: Path is a file: {}\", f);\n       result = adapter.deleteObject(key);\n     }\n \n     if (result) {\n       // If this delete operation removes all files/directories from the\n-      // parent direcotry, then an empty parent directory must be created.\n+      // parent directory, then an empty parent directory must be created.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5NzEyMQ==", "bodyText": "as far as I recall, this should relate to the fact that ozone doesn't create all dirs along the way if we create a key inside a deep directory. e.g. if we create /volume1/bucket1/dir1/subdir1/key1 only, key/volume1/bucket1/dir1 and /volume1/bucket1/dir1/subdir1 will NOT be actually created (unless we explicitly create them). But the end user will expect them to be \"created\" from the way they are browsing the FileSystem, for example, with shell commands. So when key1 is deleted afterwards, subdir1 should still be visible from user's perspective.\n@hanishakoneru should have more insights into this. CMIIW", "url": "https://github.com/apache/ozone/pull/906#discussion_r425397121", "createdAt": "2020-05-14T20:02:11Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+\n+      // Handle rm root\n+      if (ofsPath.isRoot()) {\n+        // Intentionally drop support for rm root\n+        // because it is too dangerous and doesn't provide much value\n+        LOG.warn(\"delete: OFS does not support rm root. \"\n+            + \"To wipe the cluster, please re-init OM instead.\");\n+        return false;\n+      }\n+\n+      // Handle delete volume\n+      if (ofsPath.isVolume()) {\n+        String volumeName = ofsPath.getVolumeName();\n+        if (recursive) {\n+          // Delete all buckets first\n+          OzoneVolume volume =\n+              adapterImpl.getObjectStore().getVolume(volumeName);\n+          Iterator<? extends OzoneBucket> it = volume.listBuckets(\"\");\n+          while (it.hasNext()) {\n+            OzoneBucket bucket = it.next();\n+            String nextBucket = addTrailingSlashIfNeeded(\n+                f.toString()) + bucket.getName();\n+            delete(new Path(nextBucket), true);\n+          }\n+        }\n+        try {\n+          adapterImpl.getObjectStore().deleteVolume(volumeName);\n+          return true;\n+        } catch (OMException ex) {\n+          // volume is not empty\n+          if (ex.getResult() == VOLUME_NOT_EMPTY) {\n+            throw new PathIsNotEmptyDirectoryException(f.toString());\n+          } else {\n+            throw ex;\n+          }\n+        }\n+      }\n+\n       result = innerDelete(f, recursive);\n+\n+      // Handle delete bucket\n+      if (ofsPath.isBucket()) {\n+        OzoneVolume volume =\n+            adapterImpl.getObjectStore().getVolume(ofsPath.getVolumeName());\n+        try {\n+          volume.deleteBucket(ofsPath.getBucketName());\n+          return result;\n+        } catch (OMException ex) {\n+          // bucket is not empty\n+          if (ex.getResult() == BUCKET_NOT_EMPTY) {\n+            throw new PathIsNotEmptyDirectoryException(f.toString());\n+          } else {\n+            throw ex;\n+          }\n+        }\n+      }\n+\n     } else {\n       LOG.debug(\"delete: Path is a file: {}\", f);\n       result = adapter.deleteObject(key);\n     }\n \n     if (result) {\n       // If this delete operation removes all files/directories from the\n-      // parent direcotry, then an empty parent directory must be created.\n+      // parent directory, then an empty parent directory must be created.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3MzAzMA=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQxMjkyNw==", "bodyText": "We should remove this logic in another jira for both o3fs and ofs since HDDS-2940 is already in, which solves the problem.", "url": "https://github.com/apache/ozone/pull/906#discussion_r425412927", "createdAt": "2020-05-14T20:32:19Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+\n+      // Handle rm root\n+      if (ofsPath.isRoot()) {\n+        // Intentionally drop support for rm root\n+        // because it is too dangerous and doesn't provide much value\n+        LOG.warn(\"delete: OFS does not support rm root. \"\n+            + \"To wipe the cluster, please re-init OM instead.\");\n+        return false;\n+      }\n+\n+      // Handle delete volume\n+      if (ofsPath.isVolume()) {\n+        String volumeName = ofsPath.getVolumeName();\n+        if (recursive) {\n+          // Delete all buckets first\n+          OzoneVolume volume =\n+              adapterImpl.getObjectStore().getVolume(volumeName);\n+          Iterator<? extends OzoneBucket> it = volume.listBuckets(\"\");\n+          while (it.hasNext()) {\n+            OzoneBucket bucket = it.next();\n+            String nextBucket = addTrailingSlashIfNeeded(\n+                f.toString()) + bucket.getName();\n+            delete(new Path(nextBucket), true);\n+          }\n+        }\n+        try {\n+          adapterImpl.getObjectStore().deleteVolume(volumeName);\n+          return true;\n+        } catch (OMException ex) {\n+          // volume is not empty\n+          if (ex.getResult() == VOLUME_NOT_EMPTY) {\n+            throw new PathIsNotEmptyDirectoryException(f.toString());\n+          } else {\n+            throw ex;\n+          }\n+        }\n+      }\n+\n       result = innerDelete(f, recursive);\n+\n+      // Handle delete bucket\n+      if (ofsPath.isBucket()) {\n+        OzoneVolume volume =\n+            adapterImpl.getObjectStore().getVolume(ofsPath.getVolumeName());\n+        try {\n+          volume.deleteBucket(ofsPath.getBucketName());\n+          return result;\n+        } catch (OMException ex) {\n+          // bucket is not empty\n+          if (ex.getResult() == BUCKET_NOT_EMPTY) {\n+            throw new PathIsNotEmptyDirectoryException(f.toString());\n+          } else {\n+            throw ex;\n+          }\n+        }\n+      }\n+\n     } else {\n       LOG.debug(\"delete: Path is a file: {}\", f);\n       result = adapter.deleteObject(key);\n     }\n \n     if (result) {\n       // If this delete operation removes all files/directories from the\n-      // parent direcotry, then an empty parent directory must be created.\n+      // parent directory, then an empty parent directory must be created.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3MzAzMA=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ0NTMwNw==", "bodyText": "some special behavior :-). Its good that we will create dirs along the path now. Thanks for the details.", "url": "https://github.com/apache/ozone/pull/906#discussion_r425445307", "createdAt": "2020-05-14T21:36:42Z", "author": {"login": "umamaheswararao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+\n+      // Handle rm root\n+      if (ofsPath.isRoot()) {\n+        // Intentionally drop support for rm root\n+        // because it is too dangerous and doesn't provide much value\n+        LOG.warn(\"delete: OFS does not support rm root. \"\n+            + \"To wipe the cluster, please re-init OM instead.\");\n+        return false;\n+      }\n+\n+      // Handle delete volume\n+      if (ofsPath.isVolume()) {\n+        String volumeName = ofsPath.getVolumeName();\n+        if (recursive) {\n+          // Delete all buckets first\n+          OzoneVolume volume =\n+              adapterImpl.getObjectStore().getVolume(volumeName);\n+          Iterator<? extends OzoneBucket> it = volume.listBuckets(\"\");\n+          while (it.hasNext()) {\n+            OzoneBucket bucket = it.next();\n+            String nextBucket = addTrailingSlashIfNeeded(\n+                f.toString()) + bucket.getName();\n+            delete(new Path(nextBucket), true);\n+          }\n+        }\n+        try {\n+          adapterImpl.getObjectStore().deleteVolume(volumeName);\n+          return true;\n+        } catch (OMException ex) {\n+          // volume is not empty\n+          if (ex.getResult() == VOLUME_NOT_EMPTY) {\n+            throw new PathIsNotEmptyDirectoryException(f.toString());\n+          } else {\n+            throw ex;\n+          }\n+        }\n+      }\n+\n       result = innerDelete(f, recursive);\n+\n+      // Handle delete bucket\n+      if (ofsPath.isBucket()) {\n+        OzoneVolume volume =\n+            adapterImpl.getObjectStore().getVolume(ofsPath.getVolumeName());\n+        try {\n+          volume.deleteBucket(ofsPath.getBucketName());\n+          return result;\n+        } catch (OMException ex) {\n+          // bucket is not empty\n+          if (ex.getResult() == BUCKET_NOT_EMPTY) {\n+            throw new PathIsNotEmptyDirectoryException(f.toString());\n+          } else {\n+            throw ex;\n+          }\n+        }\n+      }\n+\n     } else {\n       LOG.debug(\"delete: Path is a file: {}\", f);\n       result = adapter.deleteObject(key);\n     }\n \n     if (result) {\n       // If this delete operation removes all files/directories from the\n-      // parent direcotry, then an empty parent directory must be created.\n+      // parent directory, then an empty parent directory must be created.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3MzAzMA=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk4MzUwMA==", "bodyText": "No problem :) Filed HDDS-3596.", "url": "https://github.com/apache/ozone/pull/906#discussion_r425983500", "createdAt": "2020-05-15T18:43:17Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -469,15 +478,72 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n         return false;\n       }\n \n+      OFSPath ofsPath = new OFSPath(key);\n+\n+      // Handle rm root\n+      if (ofsPath.isRoot()) {\n+        // Intentionally drop support for rm root\n+        // because it is too dangerous and doesn't provide much value\n+        LOG.warn(\"delete: OFS does not support rm root. \"\n+            + \"To wipe the cluster, please re-init OM instead.\");\n+        return false;\n+      }\n+\n+      // Handle delete volume\n+      if (ofsPath.isVolume()) {\n+        String volumeName = ofsPath.getVolumeName();\n+        if (recursive) {\n+          // Delete all buckets first\n+          OzoneVolume volume =\n+              adapterImpl.getObjectStore().getVolume(volumeName);\n+          Iterator<? extends OzoneBucket> it = volume.listBuckets(\"\");\n+          while (it.hasNext()) {\n+            OzoneBucket bucket = it.next();\n+            String nextBucket = addTrailingSlashIfNeeded(\n+                f.toString()) + bucket.getName();\n+            delete(new Path(nextBucket), true);\n+          }\n+        }\n+        try {\n+          adapterImpl.getObjectStore().deleteVolume(volumeName);\n+          return true;\n+        } catch (OMException ex) {\n+          // volume is not empty\n+          if (ex.getResult() == VOLUME_NOT_EMPTY) {\n+            throw new PathIsNotEmptyDirectoryException(f.toString());\n+          } else {\n+            throw ex;\n+          }\n+        }\n+      }\n+\n       result = innerDelete(f, recursive);\n+\n+      // Handle delete bucket\n+      if (ofsPath.isBucket()) {\n+        OzoneVolume volume =\n+            adapterImpl.getObjectStore().getVolume(ofsPath.getVolumeName());\n+        try {\n+          volume.deleteBucket(ofsPath.getBucketName());\n+          return result;\n+        } catch (OMException ex) {\n+          // bucket is not empty\n+          if (ex.getResult() == BUCKET_NOT_EMPTY) {\n+            throw new PathIsNotEmptyDirectoryException(f.toString());\n+          } else {\n+            throw ex;\n+          }\n+        }\n+      }\n+\n     } else {\n       LOG.debug(\"delete: Path is a file: {}\", f);\n       result = adapter.deleteObject(key);\n     }\n \n     if (result) {\n       // If this delete operation removes all files/directories from the\n-      // parent direcotry, then an empty parent directory must be created.\n+      // parent directory, then an empty parent directory must be created.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3MzAzMA=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTgwNzQ5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNTowODo1NFrOGVMOyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDo1MDo0NVrOGVttlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3MzY3NQ==", "bodyText": "I think these test cases should be split into multiple cases?", "url": "https://github.com/apache/ozone/pull/906#discussion_r424873675", "createdAt": "2020-05-14T05:08:54Z", "author": {"login": "umamaheswararao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -766,4 +768,103 @@ public void testTempMount() throws Exception {\n         fileStatusesInDir1[0].getPath().toUri().getPath());\n   }\n \n+  /**\n+   * Helper function. Check Ozone volume existence.\n+   * @param volumeStr Name of the volume\n+   * @return true if volume exists, false if not\n+   */\n+  private boolean volumeExist(String volumeStr) throws IOException {\n+    try {\n+      objectStore.getVolume(volumeStr);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == VOLUME_NOT_FOUND) {\n+        return false;\n+      } else {\n+        throw ex;\n+      }\n+    }\n+    return true;\n+  }\n+\n+  /**\n+   * Helper function. Delete a path non-recursively and expect failure.\n+   * @param f Path to delete.\n+   * @throws IOException\n+   */\n+  private void deleteNonRecursivelyAndFail(Path f) throws IOException {\n+    try {\n+      fs.delete(f, false);\n+      Assert.fail(\"Should have thrown PathIsNotEmptyDirectoryException!\");\n+    } catch (PathIsNotEmptyDirectoryException ignored) {\n+    }\n+  }\n+\n+  @Test\n+  public void testDeleteVolumeAndBucket() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NzYxOQ==", "bodyText": "Good idea", "url": "https://github.com/apache/ozone/pull/906#discussion_r425347619", "createdAt": "2020-05-14T18:30:31Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -766,4 +768,103 @@ public void testTempMount() throws Exception {\n         fileStatusesInDir1[0].getPath().toUri().getPath());\n   }\n \n+  /**\n+   * Helper function. Check Ozone volume existence.\n+   * @param volumeStr Name of the volume\n+   * @return true if volume exists, false if not\n+   */\n+  private boolean volumeExist(String volumeStr) throws IOException {\n+    try {\n+      objectStore.getVolume(volumeStr);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == VOLUME_NOT_FOUND) {\n+        return false;\n+      } else {\n+        throw ex;\n+      }\n+    }\n+    return true;\n+  }\n+\n+  /**\n+   * Helper function. Delete a path non-recursively and expect failure.\n+   * @param f Path to delete.\n+   * @throws IOException\n+   */\n+  private void deleteNonRecursivelyAndFail(Path f) throws IOException {\n+    try {\n+      fs.delete(f, false);\n+      Assert.fail(\"Should have thrown PathIsNotEmptyDirectoryException!\");\n+    } catch (PathIsNotEmptyDirectoryException ignored) {\n+    }\n+  }\n+\n+  @Test\n+  public void testDeleteVolumeAndBucket() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3MzY3NQ=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQyMjIyOA==", "bodyText": "done in 118dbf6", "url": "https://github.com/apache/ozone/pull/906#discussion_r425422228", "createdAt": "2020-05-14T20:50:45Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -766,4 +768,103 @@ public void testTempMount() throws Exception {\n         fileStatusesInDir1[0].getPath().toUri().getPath());\n   }\n \n+  /**\n+   * Helper function. Check Ozone volume existence.\n+   * @param volumeStr Name of the volume\n+   * @return true if volume exists, false if not\n+   */\n+  private boolean volumeExist(String volumeStr) throws IOException {\n+    try {\n+      objectStore.getVolume(volumeStr);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == VOLUME_NOT_FOUND) {\n+        return false;\n+      } else {\n+        throw ex;\n+      }\n+    }\n+    return true;\n+  }\n+\n+  /**\n+   * Helper function. Delete a path non-recursively and expect failure.\n+   * @param f Path to delete.\n+   * @throws IOException\n+   */\n+  private void deleteNonRecursivelyAndFail(Path f) throws IOException {\n+    try {\n+      fs.delete(f, false);\n+      Assert.fail(\"Should have thrown PathIsNotEmptyDirectoryException!\");\n+    } catch (PathIsNotEmptyDirectoryException ignored) {\n+    }\n+  }\n+\n+  @Test\n+  public void testDeleteVolumeAndBucket() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3MzY3NQ=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTgyNTA4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNToyMDoxMFrOGVMZuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDo0NDowNVrOGVtgiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3NjQ3Mw==", "bodyText": "Can we add javadoc to delete method here? parent abstract method delete does not provide any javadoc. SO, its good to provide here and explain the behavior?", "url": "https://github.com/apache/ozone/pull/906#discussion_r424876473", "createdAt": "2020-05-14T05:20:10Z", "author": {"login": "umamaheswararao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -457,6 +462,10 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n       return false;\n     }\n \n+    if (status == null) {\n+      return false;\n+    }\n+\n     String key = pathToKey(f);\n     boolean result;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0OTIxMw==", "bodyText": "It complies to the FileSystem#delete behavior: https://github.com/apache/hadoop/blob/263c76b678275dfff867415c71ba9dc00a9235ef/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java#L1634-L1643\nBut yes it would be a good idea to explain delete behavior for OFS.", "url": "https://github.com/apache/ozone/pull/906#discussion_r425349213", "createdAt": "2020-05-14T18:33:24Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -457,6 +462,10 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n       return false;\n     }\n \n+    if (status == null) {\n+      return false;\n+    }\n+\n     String key = pathToKey(f);\n     boolean result;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3NjQ3Mw=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQxODg5MQ==", "bodyText": "done. I've appended some extra javadoc for delete in 6d7a21b", "url": "https://github.com/apache/ozone/pull/906#discussion_r425418891", "createdAt": "2020-05-14T20:44:05Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -457,6 +462,10 @@ public boolean delete(Path f, boolean recursive) throws IOException {\n       return false;\n     }\n \n+    if (status == null) {\n+      return false;\n+    }\n+\n     String key = pathToKey(f);\n     boolean result;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg3NjQ3Mw=="}, "originalCommit": {"oid": "8a8fea368bb67c72a9679845f23664c53d7e1be9"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4296, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}