{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2ODE5MTU4", "number": 854, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODozMjoxMlrOD0YD3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjozODowOVrOD0d_SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MjQ2NzQ4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/ClusterStateEndpoint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODozMjoxMlrOGJSnjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODo1Nzo0OFrOGJTpQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5NTQwNg==", "bodyText": "Instead of not null checks, can we have a state in MetadataManager like INITIALIZED, STOPPED? This will help be future proof, and if anywhere this check is required it will be generic to use state, instead of not null check", "url": "https://github.com/apache/ozone/pull/854#discussion_r412395406", "createdAt": "2020-04-21T18:32:12Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/ClusterStateEndpoint.java", "diffHunk": "@@ -81,20 +82,26 @@ public Response getClusterState() {\n             stats.getScmUsed().get(), stats.getRemaining().get());\n     ClusterStateResponse.Builder builder = ClusterStateResponse.newBuilder();\n     try {\n-      builder.setVolumes(\n-          omMetadataManager.getVolumeTable().getEstimatedKeyCount());\n+      Table volumeTable = omMetadataManager.getVolumeTable();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ad175837f336c844241354711af70f51044763"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQxMjIyNQ==", "bodyText": "Thanks for the review! I added a boolean flag to keep track of the initialized state to ReconOMMetadataManager.", "url": "https://github.com/apache/ozone/pull/854#discussion_r412412225", "createdAt": "2020-04-21T18:57:48Z", "author": {"login": "vivekratnavel"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/ClusterStateEndpoint.java", "diffHunk": "@@ -81,20 +82,26 @@ public Response getClusterState() {\n             stats.getScmUsed().get(), stats.getRemaining().get());\n     ClusterStateResponse.Builder builder = ClusterStateResponse.newBuilder();\n     try {\n-      builder.setVolumes(\n-          omMetadataManager.getVolumeTable().getEstimatedKeyCount());\n+      Table volumeTable = omMetadataManager.getVolumeTable();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5NTQwNg=="}, "originalCommit": {"oid": "77ad175837f336c844241354711af70f51044763"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzQyODMwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/recovery/ReconOMMetadataManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjozNDo1NFrOGJbTSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjozNDo1NFrOGJbTSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzNzY3NQ==", "bodyText": "Minor NIT: return true if OM Tables are initialized, otherwise false.", "url": "https://github.com/apache/ozone/pull/854#discussion_r412537675", "createdAt": "2020-04-21T22:34:54Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/recovery/ReconOMMetadataManager.java", "diffHunk": "@@ -41,4 +41,10 @@\n    * Database.\n    */\n   long getLastSequenceNumberFromDB();\n+\n+  /**\n+   * Check if OM tables are initialized.\n+   * @return if OM Tables are initialized", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aa1ea9a7bc90013ee3496f09690b048c2e61e8e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzQyOTk3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/recovery/ReconOmMetadataManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjozNToyOVrOGJbUMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjozNToyOVrOGJbUMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzNzkwNA==", "bodyText": "Missed @override notion, and same comment as above related to Javadoc or it can be completely removed.", "url": "https://github.com/apache/ozone/pull/854#discussion_r412537904", "createdAt": "2020-04-21T22:35:29Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/recovery/ReconOmMetadataManagerImpl.java", "diffHunk": "@@ -120,4 +122,11 @@ public long getLastSequenceNumberFromDB() {\n     }\n   }\n \n+  /**\n+   * Check if OM tables are initialized.\n+   * @return if OM Tables are initialized\n+   */\n+  public boolean isOmTablesInitialized() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aa1ea9a7bc90013ee3496f09690b048c2e61e8e"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzQzODgxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/recon/src/main/resources/webapps/recon/ozone-recon-web/api/db.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjozODowOVrOGJbZFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjo0NjoyNlrOGJbnxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzOTE1Nw==", "bodyText": "Not understood why these are changed, and how it is related to this change.", "url": "https://github.com/apache/ozone/pull/854#discussion_r412539157", "createdAt": "2020-04-21T22:38:09Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/recon/src/main/resources/webapps/recon/ozone-recon-web/api/db.json", "diffHunk": "@@ -378,11 +378,11 @@\n           }\n         ],\n         \"missingSince\": 1578491371528,\n-        \"pipelineId\": \"05e3d908-ff01-4ce6-ad75-f3ec79bcc7982\"\n+        \"pipelineID\": \"05e3d908-ff01-4ce6-ad75-f3ec79bcc7982\"\n       },\n       {\n-        \"id\": 2,\n-        \"keys\": 5943,\n+        \"containerID\": 2,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aa1ea9a7bc90013ee3496f09690b048c2e61e8e"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0MjkxOQ==", "bodyText": "@bharatviswa504 These are not related to the change. But, I noticed that the json structure of missing containers api mock response does not match with what is expected by the UI and thought of fixing them along with this change. Since, these are mock responses, they will not affect any behavior of Recon, except when starting a local mock development server to serve mock responses from this db.json file.", "url": "https://github.com/apache/ozone/pull/854#discussion_r412542919", "createdAt": "2020-04-21T22:46:26Z", "author": {"login": "vivekratnavel"}, "path": "hadoop-ozone/recon/src/main/resources/webapps/recon/ozone-recon-web/api/db.json", "diffHunk": "@@ -378,11 +378,11 @@\n           }\n         ],\n         \"missingSince\": 1578491371528,\n-        \"pipelineId\": \"05e3d908-ff01-4ce6-ad75-f3ec79bcc7982\"\n+        \"pipelineID\": \"05e3d908-ff01-4ce6-ad75-f3ec79bcc7982\"\n       },\n       {\n-        \"id\": 2,\n-        \"keys\": 5943,\n+        \"containerID\": 2,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzOTE1Nw=="}, "originalCommit": {"oid": "8aa1ea9a7bc90013ee3496f09690b048c2e61e8e"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4419, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}