{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNzY0MzEz", "number": 627, "title": "HDDS-3118. Possible deadlock in LockManager.", "bodyText": "What changes were proposed in this pull request?\nPossible deadlock in lock manager.\nThis is because of lockPool.borrowObject waits indefinitely and activeLocks.compute is an atomic operation that holds a map lock.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3118\nHow was this patch tested?\nThe reproed patch is now passing.", "createdAt": "2020-03-03T06:14:31Z", "url": "https://github.com/apache/ozone/pull/627", "merged": true, "mergeCommit": {"oid": "2ff20501accf01341ac1cb29877e4b7e39d36a41"}, "closed": true, "closedAt": "2020-03-04T09:43:24Z", "author": {"login": "bharatviswa504"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJ8J1ngBqjMwOTA3OTczMjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKQgFXgFqTM2ODUyMTIxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "889c13f3167471b55291f95ac33a17986b3bb3cb", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/889c13f3167471b55291f95ac33a17986b3bb3cb", "committedDate": "2020-03-03T06:12:11Z", "message": "HDDS-3118. Possible deadlock in LockManager."}, "afterCommit": {"oid": "1ac2122d65b95385ad75c29869ec5c155ed46de2", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/1ac2122d65b95385ad75c29869ec5c155ed46de2", "committedDate": "2020-03-03T06:16:10Z", "message": "HDDS-3118. Possible deadlock in LockManager."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "290b75f9ab103210a566ceb7c86245d3ac7f69cf", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/290b75f9ab103210a566ceb7c86245d3ac7f69cf", "committedDate": "2020-03-03T06:19:03Z", "message": "HDDS-3118. Possible deadlock in LockManager."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ac2122d65b95385ad75c29869ec5c155ed46de2", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/1ac2122d65b95385ad75c29869ec5c155ed46de2", "committedDate": "2020-03-03T06:16:10Z", "message": "HDDS-3118. Possible deadlock in LockManager."}, "afterCommit": {"oid": "290b75f9ab103210a566ceb7c86245d3ac7f69cf", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/290b75f9ab103210a566ceb7c86245d3ac7f69cf", "committedDate": "2020-03-03T06:19:03Z", "message": "HDDS-3118. Possible deadlock in LockManager."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzM5OTU1", "url": "https://github.com/apache/ozone/pull/627#pullrequestreview-367739955", "createdAt": "2020-03-03T07:02:57Z", "commit": {"oid": "290b75f9ab103210a566ceb7c86245d3ac7f69cf"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzowMjo1N1rOFw6PeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzowMjo1N1rOFw6PeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzMDIwMA==", "bodyText": "Nit: Is this necessary?  I don't see any checked exception being thrown in the try block, and unchecked exceptions don't need to be wrapped.", "url": "https://github.com/apache/ozone/pull/627#discussion_r386830200", "createdAt": "2020-03-03T07:02:57Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/lock/LockManager.java", "diffHunk": "@@ -186,21 +186,42 @@ private ActiveLock getLockForLocking(final R resource) {\n      * be removed from the activeLocks map and returned to\n      * the object pool.\n      */\n-    return activeLocks.compute(resource, (k, v) -> {\n+    ActiveLock computedLock = activeLocks.compute(resource, (k, v) -> {\n       final ActiveLock lock;\n+      if (v == null) {\n+        return null;\n+      } else {\n+        lock = v;\n+      }\n+      lock.incrementActiveCount();\n+      return lock;\n+    });\n+\n+\n+    if (computedLock == null) {\n       try {\n-        if (v == null) {\n-          lock = lockPool.borrowObject();\n-        } else {\n-          lock = v;\n-        }\n-        lock.incrementActiveCount();\n+        final ActiveLock lock2 = lockPool.borrowObject();\n+        computedLock = activeLocks.compute(resource, (k, v) -> {\n+          final ActiveLock lock;\n+          try {\n+            if (v == null) {\n+              lock = lock2;\n+            } else {\n+              lockPool.returnObject(lock2);\n+              lock = v;\n+            }\n+            lock.incrementActiveCount();\n+          } catch (Exception ex) {\n+            throw new RuntimeException(ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290b75f9ab103210a566ceb7c86245d3ac7f69cf"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzcxNDky", "url": "https://github.com/apache/ozone/pull/627#pullrequestreview-368371492", "createdAt": "2020-03-03T22:24:56Z", "commit": {"oid": "290b75f9ab103210a566ceb7c86245d3ac7f69cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjoyNDo1N1rOFxY2vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjoyNDo1N1rOFxY2vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzMTc3NQ==", "bodyText": "Thanks @bharatviswa504 for the patch. The PR LGTM. I understand we are trying to avoid wait forever while holding the lock of the pool map. However, it does not completely solve the lock resource exhausting problem. I have a cluster with this patch but create key still can live lock by the limited number of locks (100).\nMy question is why we are restricting # of locks here via hdds.lock.max.concurrency.  In my opinion, if we change the default from 100 to -1, this deadlock will not happen. This also match the default max pool size (-1) of GenericObjectPool, especially lock is a cheaper resource compared with threads or tcp connections. To allow handling 4K+ request per second, we should consider removing this key that can easily cause deadlock, especially when handler counter is several times larger than the lock pool size.", "url": "https://github.com/apache/ozone/pull/627#discussion_r387331775", "createdAt": "2020-03-03T22:24:57Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/common/src/test/java/org/apache/hadoop/ozone/lock/TestLockManager.java", "diffHunk": "@@ -170,4 +175,32 @@ public void testMultiReadWriteLockWithSameResource() throws Exception {\n     Assert.assertTrue(gotLock.get());\n   }\n \n+  @Test\n+  public void testConcurrentWriteLockWithDifferentResource() throws Exception {\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    final int count = 100;\n+    conf.setInt(HDDS_LOCK_MAX_CONCURRENCY, count/4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290b75f9ab103210a566ceb7c86245d3ac7f69cf"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9318d3fef029d928a13971eaddbebf4100ee7af", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/c9318d3fef029d928a13971eaddbebf4100ee7af", "committedDate": "2020-03-04T05:18:27Z", "message": "review comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6bfdd29698fd541f15d2c9f74229c3d7ce28e17", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/b6bfdd29698fd541f15d2c9f74229c3d7ce28e17", "committedDate": "2020-03-04T05:24:43Z", "message": "checkstyle and set to -1 expilicitly to use INT.MAX"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "146c7410300b5bfa91d26c678c9e0ac795468ce8", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/146c7410300b5bfa91d26c678c9e0ac795468ce8", "committedDate": "2020-03-04T05:28:32Z", "message": "revert"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTE0NjYz", "url": "https://github.com/apache/ozone/pull/627#pullrequestreview-368514663", "createdAt": "2020-03-04T05:35:43Z", "commit": {"oid": "146c7410300b5bfa91d26c678c9e0ac795468ce8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNTozNTo0NFrOFxggdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNTozNTo0NFrOFxggdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ1NzE0Mg==", "bodyText": "NIT: we don't need to explicitly set -1 as the default maxTotal from GenericObjectPool is -1.", "url": "https://github.com/apache/ozone/pull/627#discussion_r387457142", "createdAt": "2020-03-04T05:35:44Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/lock/LockManager.java", "diffHunk": "@@ -57,12 +56,9 @@ public LockManager(final Configuration conf) {\n    * @param fair - true to use fair lock ordering, else non-fair lock ordering.\n    */\n   public LockManager(final Configuration conf, boolean fair) {\n-    final int maxPoolSize = conf.getInt(\n-        HddsConfigKeys.HDDS_LOCK_MAX_CONCURRENCY,\n-        HddsConfigKeys.HDDS_LOCK_MAX_CONCURRENCY_DEFAULT);\n     lockPool =\n         new GenericObjectPool<>(new PooledLockFactory(fair));\n-    lockPool.setMaxTotal(maxPoolSize);\n+    lockPool.setMaxTotal(-1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146c7410300b5bfa91d26c678c9e0ac795468ce8"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTIxMjE4", "url": "https://github.com/apache/ozone/pull/627#pullrequestreview-368521218", "createdAt": "2020-03-04T05:58:51Z", "commit": {"oid": "146c7410300b5bfa91d26c678c9e0ac795468ce8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3672, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}