{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NDYwMDUw", "number": 1460, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODoyNDoyMFrOEpuy6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODoyOTowOVrOEpu4jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTkzNzcwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestReadRetries.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODoyNDoyMFrOHblJlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMTo1NzoxNVrOHcZv0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4MjI2Mg==", "bodyText": "Why cast instead of changing the variable to XceiverClientFactory?", "url": "https://github.com/apache/ozone/pull/1460#discussion_r498682262", "createdAt": "2020-10-02T08:24:20Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestReadRetries.java", "diffHunk": "@@ -147,7 +145,8 @@ public void testPutKeyAndGetKeyThreeNodes()\n             ReplicationFactor.THREE, new HashMap<>());\n     KeyOutputStream groupOutputStream =\n         (KeyOutputStream) out.getOutputStream();\n-    XceiverClientManager manager = groupOutputStream.getXceiverClientManager();\n+    XceiverClientManager manager =\n+        (XceiverClientManager) groupOutputStream.getXceiverClientFactory();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f59ceb3f4b4322bea49cc47a0ecdb386bffd4a9b"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ1MzQ1Ng==", "bodyText": "Both can work, but I feel it more safe as it doesn't require changing method signatures in KeyOutputStream. Even if getXceiverClientFactory is marked as @VisibleForTesting I feel it safer to return only the interface. Unit test can have cast, it's expected to have access to the internal representations.", "url": "https://github.com/apache/ozone/pull/1460#discussion_r499453456", "createdAt": "2020-10-05T09:14:26Z", "author": {"login": "elek"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestReadRetries.java", "diffHunk": "@@ -147,7 +145,8 @@ public void testPutKeyAndGetKeyThreeNodes()\n             ReplicationFactor.THREE, new HashMap<>());\n     KeyOutputStream groupOutputStream =\n         (KeyOutputStream) out.getOutputStream();\n-    XceiverClientManager manager = groupOutputStream.getXceiverClientManager();\n+    XceiverClientManager manager =\n+        (XceiverClientManager) groupOutputStream.getXceiverClientFactory();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4MjI2Mg=="}, "originalCommit": {"oid": "f59ceb3f4b4322bea49cc47a0ecdb386bffd4a9b"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNjMzMA==", "bodyText": "I meant: is there anything against changing to\n    XceiverClientFactory manager =\n        groupOutputStream.getXceiverClientFactory();\nNo need to change signature in KeyOutputStream.\nSorry if it was unclear.", "url": "https://github.com/apache/ozone/pull/1460#discussion_r499526330", "createdAt": "2020-10-05T11:24:03Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestReadRetries.java", "diffHunk": "@@ -147,7 +145,8 @@ public void testPutKeyAndGetKeyThreeNodes()\n             ReplicationFactor.THREE, new HashMap<>());\n     KeyOutputStream groupOutputStream =\n         (KeyOutputStream) out.getOutputStream();\n-    XceiverClientManager manager = groupOutputStream.getXceiverClientManager();\n+    XceiverClientManager manager =\n+        (XceiverClientManager) groupOutputStream.getXceiverClientFactory();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4MjI2Mg=="}, "originalCommit": {"oid": "f59ceb3f4b4322bea49cc47a0ecdb386bffd4a9b"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU0NDAxOQ==", "bodyText": "Aghh, got it. Obviously: you are right, I just didn't notice the usage of the manager. Pushed the improved version.", "url": "https://github.com/apache/ozone/pull/1460#discussion_r499544019", "createdAt": "2020-10-05T11:57:15Z", "author": {"login": "elek"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestReadRetries.java", "diffHunk": "@@ -147,7 +145,8 @@ public void testPutKeyAndGetKeyThreeNodes()\n             ReplicationFactor.THREE, new HashMap<>());\n     KeyOutputStream groupOutputStream =\n         (KeyOutputStream) out.getOutputStream();\n-    XceiverClientManager manager = groupOutputStream.getXceiverClientManager();\n+    XceiverClientManager manager =\n+        (XceiverClientManager) groupOutputStream.getXceiverClientFactory();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4MjI2Mg=="}, "originalCommit": {"oid": "f59ceb3f4b4322bea49cc47a0ecdb386bffd4a9b"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTk1MjEzOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/XceiverClientFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODoyOTowOVrOHblS1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOToxNToyMFrOHcUQjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4NDYzMQ==", "bodyText": "I don't think this method should be part of the interface.  The implementation is a convenience method to avoid passing configuration down the RpcClient -> KeyOutputStream.Builder -> KeyOutputStream -> BlockOutputStreamEntryPool chain.\nhttps://github.com/apache/hadoop-ozone/blob/7216e3cb651dffc8c7a86d18729fd5f5cffa24b4/hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/XceiverClientManager.java#L281-L283\nI'd rather get rid of this smell as part of this refactoring.", "url": "https://github.com/apache/ozone/pull/1460#discussion_r498684631", "createdAt": "2020-10-02T08:29:09Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/XceiverClientFactory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.scm;\n+\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.util.function.Function;\n+\n+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;\n+\n+import org.apache.ratis.thirdparty.com.google.protobuf.ByteString;\n+\n+/**\n+ * Interface to provide XceiverClient when needed.\n+ */\n+public interface XceiverClientFactory {\n+\n+  Function<ByteBuffer, ByteString> byteBufferToByteStringConversion();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f59ceb3f4b4322bea49cc47a0ecdb386bffd4a9b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyNzA4OA==", "bodyText": "I agree with @adoroszlai here. Let's remove this.", "url": "https://github.com/apache/ozone/pull/1460#discussion_r499427088", "createdAt": "2020-10-05T08:29:56Z", "author": {"login": "bshashikant"}, "path": "hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/XceiverClientFactory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.scm;\n+\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.util.function.Function;\n+\n+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;\n+\n+import org.apache.ratis.thirdparty.com.google.protobuf.ByteString;\n+\n+/**\n+ * Interface to provide XceiverClient when needed.\n+ */\n+public interface XceiverClientFactory {\n+\n+  Function<ByteBuffer, ByteString> byteBufferToByteStringConversion();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4NDYzMQ=="}, "originalCommit": {"oid": "f59ceb3f4b4322bea49cc47a0ecdb386bffd4a9b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ1NDA5NQ==", "bodyText": "Totally agree, I also felt like this, but I was lazy to hunt it down. Let me try to remove it.", "url": "https://github.com/apache/ozone/pull/1460#discussion_r499454095", "createdAt": "2020-10-05T09:15:20Z", "author": {"login": "elek"}, "path": "hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/XceiverClientFactory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.scm;\n+\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.util.function.Function;\n+\n+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;\n+\n+import org.apache.ratis.thirdparty.com.google.protobuf.ByteString;\n+\n+/**\n+ * Interface to provide XceiverClient when needed.\n+ */\n+public interface XceiverClientFactory {\n+\n+  Function<ByteBuffer, ByteString> byteBufferToByteStringConversion();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4NDYzMQ=="}, "originalCommit": {"oid": "f59ceb3f4b4322bea49cc47a0ecdb386bffd4a9b"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4953, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}