{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMzA4OTYz", "number": 1497, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzowNTo0OVrOExZblg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDo0OToxMlrOEy_rUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjMyMzQyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzowNTo0OVrOHngoZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzowNTo0OVrOHngoZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5MTE0MQ==", "bodyText": "Should we use acquireReadLock here?", "url": "https://github.com/apache/ozone/pull/1497#discussion_r511191141", "createdAt": "2020-10-23T23:05:49Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java", "diffHunk": "@@ -232,7 +232,7 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n     Objects.requireNonNull(context);\n \n     String prefixPath = ozObject.getPath();\n-    metadataManager.getLock().acquireLock(PREFIX_LOCK, prefixPath);\n+    metadataManager.getLock().acquireWriteLock(PREFIX_LOCK, prefixPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "518bcb9a36cb9da9e1a3110a5d272d61d8453fee"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjMyNDExOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzowNjowN1rOHngouQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzowNjowN1rOHngouQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5MTIyNQ==", "bodyText": "Same as above.", "url": "https://github.com/apache/ozone/pull/1497#discussion_r511191225", "createdAt": "2020-10-23T23:06:07Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java", "diffHunk": "@@ -253,18 +253,18 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n         return true;\n       }\n     } finally {\n-      metadataManager.getLock().releaseLock(PREFIX_LOCK, prefixPath);\n+      metadataManager.getLock().releaseWriteLock(PREFIX_LOCK, prefixPath);\n     }\n   }\n \n   @Override\n   public List<OmPrefixInfo> getLongestPrefixPath(String path) {\n     String prefixPath = prefixTree.getLongestPrefix(path);\n-    metadataManager.getLock().acquireLock(PREFIX_LOCK, prefixPath);\n+    metadataManager.getLock().acquireWriteLock(PREFIX_LOCK, prefixPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "518bcb9a36cb9da9e1a3110a5d272d61d8453fee"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTI3MTkyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOTo0NDowMlrOHofpFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOTo0NDowMlrOHofpFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIyMzUxMA==", "bodyText": "This should be a ReadLock", "url": "https://github.com/apache/ozone/pull/1497#discussion_r512223510", "createdAt": "2020-10-26T19:44:02Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java", "diffHunk": "@@ -620,7 +620,7 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n     Objects.requireNonNull(context);\n \n     String volume = ozObject.getVolumeName();\n-    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);\n+    metadataManager.getLock().acquireWriteLock(VOLUME_LOCK, volume);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c78988b58c264d101fe07d0a95cc7dd709cf9c3"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTI3MjQ5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOTo0NDowOVrOHofpdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOTo0NDowOVrOHofpdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIyMzYwNA==", "bodyText": "This should be a ReadLock", "url": "https://github.com/apache/ozone/pull/1497#discussion_r512223604", "createdAt": "2020-10-26T19:44:09Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/VolumeManagerImpl.java", "diffHunk": "@@ -647,7 +647,7 @@ public boolean checkAccess(OzoneObj ozObject, RequestContext context)\n       throw new OMException(\"Check access operation failed for \" +\n           \"volume:\" + volume, ex, ResultCodes.INTERNAL_ERROR);\n     } finally {\n-      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);\n+      metadataManager.getLock().releaseWriteLock(VOLUME_LOCK, volume);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c78988b58c264d101fe07d0a95cc7dd709cf9c3"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxODQ2ODY1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/S3SecretManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxODowMDo1MFrOHp29Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxODowMDo1MFrOHp29Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY1NDA0Mg==", "bodyText": "This should be a WriteLock.", "url": "https://github.com/apache/ozone/pull/1497#discussion_r513654042", "createdAt": "2020-10-28T18:00:50Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/S3SecretManagerImpl.java", "diffHunk": "@@ -61,7 +61,7 @@ public S3SecretValue getS3Secret(String kerberosID) throws IOException {\n     Preconditions.checkArgument(Strings.isNotBlank(kerberosID),\n         \"kerberosID cannot be null or empty.\");\n     S3SecretValue result = null;\n-    omMetadataManager.getLock().acquireWriteLock(S3_SECRET_LOCK, kerberosID);\n+    omMetadataManager.getLock().acquireReadLock(S3_SECRET_LOCK, kerberosID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f1790769304142d2b48e4bf4f3b8313c8c478e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTA3NTM2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDo0OToxMlrOHp82XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDo0OToxMlrOHp82XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1MDYyMQ==", "bodyText": "This needs a WriteLock.", "url": "https://github.com/apache/ozone/pull/1497#discussion_r513750621", "createdAt": "2020-10-28T20:49:12Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -459,7 +459,7 @@ public OpenKeySession openKey(OmKeyArgs args) throws IOException {\n         args.getVolumeName(), args.getBucketName(), args.getKeyName());\n \n     FileEncryptionInfo encInfo;\n-    metadataManager.getLock().acquireWriteLock(BUCKET_LOCK, volumeName,\n+    metadataManager.getLock().acquireReadLock(BUCKET_LOCK, volumeName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f1790769304142d2b48e4bf4f3b8313c8c478e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4794, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}