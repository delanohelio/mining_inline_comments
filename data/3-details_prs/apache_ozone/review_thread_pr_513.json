{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzIyODAx", "number": 513, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODoyODoyMFrODcuvYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODozODo0N1rODcu8cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDUyNTEzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODoyODoyMFrOFk7Vgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0NToyN1rOFk72_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2NTIxOQ==", "bodyText": "Dumb q. - why pass 0 here?", "url": "https://github.com/apache/ozone/pull/513#discussion_r374265219", "createdAt": "2020-02-03T18:28:20Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java", "diffHunk": "@@ -176,9 +177,10 @@ public boolean setAcl(OzoneObj obj, List<OzoneAcl> acls) throws IOException {\n       OmPrefixInfo prefixInfo =\n           metadataManager.getPrefixTable().get(prefixPath);\n \n-      OMPrefixAclOpResult omPrefixAclOpResult = setAcl(obj, acls, prefixInfo);\n+      OMPrefixAclOpResult omPrefixAclOpResult = setAcl(obj, acls, prefixInfo,\n+          0L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f848b61662ce5ddd19750bbb1d116d368df6894"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3MDgxMw==", "bodyText": "This code path was used for the non-ratis case before the two code paths were merged. This should go away after code cleanup.\n@bharatviswa504 please correct me if I am wrong.", "url": "https://github.com/apache/ozone/pull/513#discussion_r374270813", "createdAt": "2020-02-03T18:39:19Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java", "diffHunk": "@@ -176,9 +177,10 @@ public boolean setAcl(OzoneObj obj, List<OzoneAcl> acls) throws IOException {\n       OmPrefixInfo prefixInfo =\n           metadataManager.getPrefixTable().get(prefixPath);\n \n-      OMPrefixAclOpResult omPrefixAclOpResult = setAcl(obj, acls, prefixInfo);\n+      OMPrefixAclOpResult omPrefixAclOpResult = setAcl(obj, acls, prefixInfo,\n+          0L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2NTIxOQ=="}, "originalCommit": {"oid": "2f848b61662ce5ddd19750bbb1d116d368df6894"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3Mzc4OQ==", "bodyText": "You're right.", "url": "https://github.com/apache/ozone/pull/513#discussion_r374273789", "createdAt": "2020-02-03T18:45:27Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/PrefixManagerImpl.java", "diffHunk": "@@ -176,9 +177,10 @@ public boolean setAcl(OzoneObj obj, List<OzoneAcl> acls) throws IOException {\n       OmPrefixInfo prefixInfo =\n           metadataManager.getPrefixTable().get(prefixPath);\n \n-      OMPrefixAclOpResult omPrefixAclOpResult = setAcl(obj, acls, prefixInfo);\n+      OMPrefixAclOpResult omPrefixAclOpResult = setAcl(obj, acls, prefixInfo,\n+          0L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2NTIxOQ=="}, "originalCommit": {"oid": "2f848b61662ce5ddd19750bbb1d116d368df6894"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDU1ODU3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/request/key/TestOMPrefixAclRequest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODozODo0N1rOFk7qZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo1MjowMVrOFk8DfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3MDU2NQ==", "bodyText": "Is one unit test case sufficient? Are we covering all the new code paths?", "url": "https://github.com/apache/ozone/pull/513#discussion_r374270565", "createdAt": "2020-02-03T18:38:47Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/request/key/TestOMPrefixAclRequest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.om.request.key;\n+\n+import java.util.UUID;\n+import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.om.PrefixManager;\n+import org.apache.hadoop.ozone.om.PrefixManagerImpl;\n+import org.apache.hadoop.ozone.om.request.TestOMRequestUtils;\n+import org.apache.hadoop.ozone.om.request.key.acl.prefix.OMPrefixAddAclRequest;\n+import org.apache.hadoop.ozone.om.response.OMClientResponse;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.AddAclRequest;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OMRequest;\n+import org.apache.hadoop.ozone.security.acl.OzoneObj;\n+import org.apache.hadoop.ozone.security.acl.OzoneObjInfo;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Tests Prefix ACL requests.\n+ */\n+public class TestOMPrefixAclRequest extends TestOMKeyRequest {\n+\n+  @Test\n+  public void testReplayRequest() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f848b61662ce5ddd19750bbb1d116d368df6894"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NDg0NA==", "bodyText": "I think it should be. This test case does not cover the change in logging on completion. But all the PrefixAcl requests go through a common code path for replay check which is covered here.\nDo we want to add a test for proto changes?", "url": "https://github.com/apache/ozone/pull/513#discussion_r374274844", "createdAt": "2020-02-03T18:47:38Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/request/key/TestOMPrefixAclRequest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.om.request.key;\n+\n+import java.util.UUID;\n+import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.om.PrefixManager;\n+import org.apache.hadoop.ozone.om.PrefixManagerImpl;\n+import org.apache.hadoop.ozone.om.request.TestOMRequestUtils;\n+import org.apache.hadoop.ozone.om.request.key.acl.prefix.OMPrefixAddAclRequest;\n+import org.apache.hadoop.ozone.om.response.OMClientResponse;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.AddAclRequest;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OMRequest;\n+import org.apache.hadoop.ozone.security.acl.OzoneObj;\n+import org.apache.hadoop.ozone.security.acl.OzoneObjInfo;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Tests Prefix ACL requests.\n+ */\n+public class TestOMPrefixAclRequest extends TestOMKeyRequest {\n+\n+  @Test\n+  public void testReplayRequest() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3MDU2NQ=="}, "originalCommit": {"oid": "2f848b61662ce5ddd19750bbb1d116d368df6894"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3Njk4OA==", "bodyText": "Yes we must have tests for proto [de]serialization. However I am not sure we have been rigorous about adding them in the past.\nLet's file a separate newbie jira to add missing protobuf [de]serialization unit tests.", "url": "https://github.com/apache/ozone/pull/513#discussion_r374276988", "createdAt": "2020-02-03T18:52:01Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/request/key/TestOMPrefixAclRequest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.om.request.key;\n+\n+import java.util.UUID;\n+import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.om.PrefixManager;\n+import org.apache.hadoop.ozone.om.PrefixManagerImpl;\n+import org.apache.hadoop.ozone.om.request.TestOMRequestUtils;\n+import org.apache.hadoop.ozone.om.request.key.acl.prefix.OMPrefixAddAclRequest;\n+import org.apache.hadoop.ozone.om.response.OMClientResponse;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.AddAclRequest;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OMRequest;\n+import org.apache.hadoop.ozone.security.acl.OzoneObj;\n+import org.apache.hadoop.ozone.security.acl.OzoneObjInfo;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Tests Prefix ACL requests.\n+ */\n+public class TestOMPrefixAclRequest extends TestOMKeyRequest {\n+\n+  @Test\n+  public void testReplayRequest() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3MDU2NQ=="}, "originalCommit": {"oid": "2f848b61662ce5ddd19750bbb1d116d368df6894"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 43, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}