{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MDU5Nzc0", "number": 1324, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo0MDo0MFrOEbyQcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo0MDo0MFrOEbyQcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTcwNDE4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo0MDo0MFrOHF6tGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMjo1MDo1NlrOHGCdDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk2Njc0Ng==", "bodyText": "One question, can we use RetryPolicy TRY_ONCE_THEN_FAIL here?\nBecause in this failoverOnNetworkException, also we set retry count to zero and maxFailOvers to zero.", "url": "https://github.com/apache/ozone/pull/1324#discussion_r475966746", "createdAt": "2020-08-24T23:40:40Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java", "diffHunk": "@@ -172,9 +174,12 @@ private OzoneManagerProtocolPB createOMProxy(InetSocketAddress omAddress)\n         LegacyHadoopConfigurationSource.asHadoopConfiguration(conf);\n     RPC.setProtocolEngine(hadoopConf, OzoneManagerProtocolPB.class,\n         ProtobufRpcEngine.class);\n-    return RPC.getProxy(OzoneManagerProtocolPB.class, omVersion, omAddress, ugi,\n-        hadoopConf, NetUtils.getDefaultSocketFactory(hadoopConf),\n-            (int) OmUtils.getOMClientRpcTimeOut(conf));\n+    RetryPolicy connectionRetryPolicy = RetryPolicies\n+        .failoverOnNetworkException(0);\n+    return RPC.getProtocolProxy(OzoneManagerProtocolPB.class, omVersion,\n+        omAddress, ugi, hadoopConf, NetUtils.getDefaultSocketFactory(\n+            hadoopConf), (int) OmUtils.getOMClientRpcTimeOut(conf),\n+        connectionRetryPolicy).getProxy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4014feaa479c310f600c5cb5d47212881f01ba9b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk3MjAwMw==", "bodyText": "It would be the same as the current one, right?\nWould it suffice to add a comment to explain the retry policy?", "url": "https://github.com/apache/ozone/pull/1324#discussion_r475972003", "createdAt": "2020-08-24T23:48:09Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java", "diffHunk": "@@ -172,9 +174,12 @@ private OzoneManagerProtocolPB createOMProxy(InetSocketAddress omAddress)\n         LegacyHadoopConfigurationSource.asHadoopConfiguration(conf);\n     RPC.setProtocolEngine(hadoopConf, OzoneManagerProtocolPB.class,\n         ProtobufRpcEngine.class);\n-    return RPC.getProxy(OzoneManagerProtocolPB.class, omVersion, omAddress, ugi,\n-        hadoopConf, NetUtils.getDefaultSocketFactory(hadoopConf),\n-            (int) OmUtils.getOMClientRpcTimeOut(conf));\n+    RetryPolicy connectionRetryPolicy = RetryPolicies\n+        .failoverOnNetworkException(0);\n+    return RPC.getProtocolProxy(OzoneManagerProtocolPB.class, omVersion,\n+        omAddress, ugi, hadoopConf, NetUtils.getDefaultSocketFactory(\n+            hadoopConf), (int) OmUtils.getOMClientRpcTimeOut(conf),\n+        connectionRetryPolicy).getProxy();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk2Njc0Ng=="}, "originalCommit": {"oid": "4014feaa479c310f600c5cb5d47212881f01ba9b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjA5MzcwOA==", "bodyText": "Yes. As failoverOnNetworkException uses fallback as TRY_ONCE_THEN_FAIL and maxFailOvers is zero, so it is like TRY_ONCE_THEN_FAIL, as in shouldretry it will fail in below part shouldRetry i think.\n      if (failovers >= maxFailovers) {\n        return new RetryAction(RetryAction.RetryDecision.FAIL, 0,\n            \"failovers (\" + failovers + \") exceeded maximum allowed (\"\n            + maxFailovers + \")\");\n      }\n\nSo, technically we are using it as similar to TRY_ONCE_THEN_FAIL in this scenario.", "url": "https://github.com/apache/ozone/pull/1324#discussion_r476093708", "createdAt": "2020-08-25T02:50:56Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java", "diffHunk": "@@ -172,9 +174,12 @@ private OzoneManagerProtocolPB createOMProxy(InetSocketAddress omAddress)\n         LegacyHadoopConfigurationSource.asHadoopConfiguration(conf);\n     RPC.setProtocolEngine(hadoopConf, OzoneManagerProtocolPB.class,\n         ProtobufRpcEngine.class);\n-    return RPC.getProxy(OzoneManagerProtocolPB.class, omVersion, omAddress, ugi,\n-        hadoopConf, NetUtils.getDefaultSocketFactory(hadoopConf),\n-            (int) OmUtils.getOMClientRpcTimeOut(conf));\n+    RetryPolicy connectionRetryPolicy = RetryPolicies\n+        .failoverOnNetworkException(0);\n+    return RPC.getProtocolProxy(OzoneManagerProtocolPB.class, omVersion,\n+        omAddress, ugi, hadoopConf, NetUtils.getDefaultSocketFactory(\n+            hadoopConf), (int) OmUtils.getOMClientRpcTimeOut(conf),\n+        connectionRetryPolicy).getProxy();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk2Njc0Ng=="}, "originalCommit": {"oid": "4014feaa479c310f600c5cb5d47212881f01ba9b"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3889, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}