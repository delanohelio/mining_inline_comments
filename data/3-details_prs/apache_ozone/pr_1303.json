{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NzcxNTE5", "number": 1303, "title": "HDDS-4075. Retry request on different OM on AccessControlException", "bodyText": "What changes were proposed in this pull request?\nIf a client attempts a request on an OM which has not caught up with leader OM and hence does have the delegation token, the request could fail with AccessControlException without trying it on other OMs.\nOn AccessControlException, all OMs must be tried once before the request is failed.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4075\nHow was this patch tested?\nNo new unit tests", "createdAt": "2020-08-07T19:01:45Z", "url": "https://github.com/apache/ozone/pull/1303", "merged": true, "mergeCommit": {"oid": "045aa7113ccc5fc2804f64870a986dfa5cc91e82"}, "closed": true, "closedAt": "2020-09-15T22:07:55Z", "author": {"login": "hanishakoneru"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc95K3PgFqTQ2NTIyMDA0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJPPO1AFqTQ4OTE0MTYyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MjIwMDQx", "url": "https://github.com/apache/ozone/pull/1303#pullrequestreview-465220041", "createdAt": "2020-08-11T16:11:55Z", "commit": {"oid": "f19796255132abb40e429603e1d4d3a5d08e2aad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e309ac247f2cf51c9db9cfe70a55e59b57a90001", "author": {"user": {"login": "hanishakoneru", "name": "Hanisha Koneru"}}, "url": "https://github.com/apache/ozone/commit/e309ac247f2cf51c9db9cfe70a55e59b57a90001", "committedDate": "2020-09-09T00:19:49Z", "message": "HDDS-4075. Retry request on different OM on AccessControlException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "debb7ffc1c140825e0f576572aa45fccdacfb136", "author": {"user": {"login": "hanishakoneru", "name": "Hanisha Koneru"}}, "url": "https://github.com/apache/ozone/commit/debb7ffc1c140825e0f576572aa45fccdacfb136", "committedDate": "2020-09-09T00:19:49Z", "message": "integration test and findbug fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ae8fd0e48a2494d32aaf5d8090f671f00fa0aad", "author": {"user": {"login": "hanishakoneru", "name": "Hanisha Koneru"}}, "url": "https://github.com/apache/ozone/commit/2ae8fd0e48a2494d32aaf5d8090f671f00fa0aad", "committedDate": "2020-09-09T00:22:24Z", "message": "unit test using Mock FailoverProxyProvider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f19796255132abb40e429603e1d4d3a5d08e2aad", "author": {"user": {"login": "hanishakoneru", "name": "Hanisha Koneru"}}, "url": "https://github.com/apache/ozone/commit/f19796255132abb40e429603e1d4d3a5d08e2aad", "committedDate": "2020-08-07T18:55:43Z", "message": "integration test and findbug fix"}, "afterCommit": {"oid": "2ae8fd0e48a2494d32aaf5d8090f671f00fa0aad", "author": {"user": {"login": "hanishakoneru", "name": "Hanisha Koneru"}}, "url": "https://github.com/apache/ozone/commit/2ae8fd0e48a2494d32aaf5d8090f671f00fa0aad", "committedDate": "2020-09-09T00:22:24Z", "message": "unit test using Mock FailoverProxyProvider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "389c401a1b0ed4736418beb79cf335cf2033c1c8", "author": {"user": {"login": "hanishakoneru", "name": "Hanisha Koneru"}}, "url": "https://github.com/apache/ozone/commit/389c401a1b0ed4736418beb79cf335cf2033c1c8", "committedDate": "2020-09-15T16:16:21Z", "message": "rat and checkstyle fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4OTM5MjY0", "url": "https://github.com/apache/ozone/pull/1303#pullrequestreview-488939264", "createdAt": "2020-09-15T18:08:55Z", "commit": {"oid": "389c401a1b0ed4736418beb79cf335cf2033c1c8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODowODo1NlrOHSOB1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoxMDo1OVrOHSOGQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg2NjI2MA==", "bodyText": "Minor: Can we use the default, if there is no special reason to use value 9", "url": "https://github.com/apache/ozone/pull/1303#discussion_r488866260", "createdAt": "2020-09-15T18:08:56Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/failover/TestOMFailovers.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om.failover;\n+\n+import com.google.protobuf.RpcController;\n+import com.google.protobuf.ServiceException;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+\n+import org.apache.hadoop.hdds.conf.ConfigurationSource;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.io.retry.RetryProxy;\n+import org.apache.hadoop.ozone.om.ha.OMFailoverProxyProvider;\n+import org.apache.hadoop.ozone.om.ha.OMProxyInfo;\n+import org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolPB;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OMResponse;\n+import org.apache.hadoop.security.AccessControlException;\n+import org.apache.hadoop.test.GenericTestUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.slf4j.event.Level;\n+\n+/**\n+ * Tests OM failover protocols using a Mock Failover provider and a Mock OM\n+ * Protocol.\n+ */\n+public class TestOMFailovers {\n+\n+  private ConfigurationSource conf = new OzoneConfiguration();\n+  private Exception testException;\n+\n+  @Test\n+  public void test1() throws Exception {\n+\n+    testException = new AccessControlException();\n+\n+    GenericTestUtils.setLogLevel(OMFailoverProxyProvider.LOG, Level.DEBUG);\n+    GenericTestUtils.LogCapturer logCapturer = GenericTestUtils.LogCapturer\n+        .captureLogs(OMFailoverProxyProvider.LOG);\n+\n+    MockFailoverProxyProvider failoverProxyProvider =\n+        new MockFailoverProxyProvider(conf);\n+\n+    OzoneManagerProtocolPB proxy = (OzoneManagerProtocolPB) RetryProxy\n+        .create(OzoneManagerProtocolPB.class, failoverProxyProvider,\n+            failoverProxyProvider.getRetryPolicy(9));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "389c401a1b0ed4736418beb79cf335cf2033c1c8"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg2NzM5Mg==", "bodyText": "Minor: Can we name test with the test it is trying to perform like testAccessControlException", "url": "https://github.com/apache/ozone/pull/1303#discussion_r488867392", "createdAt": "2020-09-15T18:10:59Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/failover/TestOMFailovers.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om.failover;\n+\n+import com.google.protobuf.RpcController;\n+import com.google.protobuf.ServiceException;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+\n+import org.apache.hadoop.hdds.conf.ConfigurationSource;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.io.retry.RetryProxy;\n+import org.apache.hadoop.ozone.om.ha.OMFailoverProxyProvider;\n+import org.apache.hadoop.ozone.om.ha.OMProxyInfo;\n+import org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolPB;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OMResponse;\n+import org.apache.hadoop.security.AccessControlException;\n+import org.apache.hadoop.test.GenericTestUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.slf4j.event.Level;\n+\n+/**\n+ * Tests OM failover protocols using a Mock Failover provider and a Mock OM\n+ * Protocol.\n+ */\n+public class TestOMFailovers {\n+\n+  private ConfigurationSource conf = new OzoneConfiguration();\n+  private Exception testException;\n+\n+  @Test\n+  public void test1() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "389c401a1b0ed4736418beb79cf335cf2033c1c8"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9866e1cf4f0de2439eb248c261c4b0f3850b528c", "author": {"user": {"login": "hanishakoneru", "name": "Hanisha Koneru"}}, "url": "https://github.com/apache/ozone/commit/9866e1cf4f0de2439eb248c261c4b0f3850b528c", "committedDate": "2020-09-15T18:46:06Z", "message": "review fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTQxNjI2", "url": "https://github.com/apache/ozone/pull/1303#pullrequestreview-489141626", "createdAt": "2020-09-15T22:07:46Z", "commit": {"oid": "9866e1cf4f0de2439eb248c261c4b0f3850b528c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2690, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}