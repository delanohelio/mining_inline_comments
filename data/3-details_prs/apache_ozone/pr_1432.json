{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MzcxMjQ1", "number": 1432, "title": "HDDS-4252. Add the current layout versions to DN - SCM proto payload.", "bodyText": "What changes were proposed in this pull request?\nAdd the current layout versions to DN - SCM proto payload.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4252\nHow was this patch tested?\nClean Build. I will address any CI failure in the PR.", "createdAt": "2020-09-17T03:02:48Z", "url": "https://github.com/apache/ozone/pull/1432", "merged": true, "mergeCommit": {"oid": "c6f51ee3aa304ed42d4aee6f0606d2134ab09164"}, "closed": true, "closedAt": "2020-09-28T18:28:23Z", "author": {"login": "prashantpogde"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJnn6ngH2gAyNDg4MzcxMjQ1OmJhY2Q4NzY5MjFiOWZjYTg3NDRiM2Y3Y2Y5MTY1ODEzM2ZmNjA4ZDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNX2cWAFqTQ5Nzc4ODY1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bacd876921b9fca8744b3f7cf91658133ff608d0", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/bacd876921b9fca8744b3f7cf91658133ff608d0", "committedDate": "2020-09-17T02:32:27Z", "message": "HDDS-4252. Add the current layout versions to DN - SCM proto payload."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a24a5a8f300de77ee931af3a724081f28f81e6f", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/2a24a5a8f300de77ee931af3a724081f28f81e6f", "committedDate": "2020-09-17T02:57:44Z", "message": "HDDS-4252. Checkstyle fixes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "128d087b044319a90f9e10b0f32c4e4fcb38c9d1", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/128d087b044319a90f9e10b0f32c4e4fcb38c9d1", "committedDate": "2020-09-17T22:03:08Z", "message": "HDDS-4252. Addressing CI failures."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39213d18b279cab71f5353807610ce3840a49a0d", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/39213d18b279cab71f5353807610ce3840a49a0d", "committedDate": "2020-09-18T03:41:09Z", "message": "HDDS-4252. Addressing CI failures: part2."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjYxNjM0", "url": "https://github.com/apache/ozone/pull/1432#pullrequestreview-491261634", "createdAt": "2020-09-18T08:36:01Z", "commit": {"oid": "39213d18b279cab71f5353807610ce3840a49a0d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwODozNjowMVrOHUDg3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwODo1MTozOVrOHUEDQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc5MTEzMw==", "bodyText": "As OMStorage has om id(uuid), SCMStorageConfig has scm id(uuid). Can we also set/get datanode id (datanode uuid) as NodeProperties here?", "url": "https://github.com/apache/ozone/pull/1432#discussion_r490791133", "createdAt": "2020-09-18T08:36:01Z", "author": {"login": "linyiqun"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/DataNodeStorageConfig.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.container.common;\n+\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.NodeType;\n+import org.apache.hadoop.ozone.common.Storage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+import static org.apache.hadoop.hdds.server.ServerUtils.getOzoneMetaDirPath;\n+import static org.apache.hadoop.ozone.OzoneConsts.DATANODE_STORAGE_CONFIG;\n+\n+/**\n+ * DataNodeStorageConfig is responsible for management of the\n+ * StorageDirectories used by the DataNode.\n+ */\n+public class DataNodeStorageConfig extends Storage {\n+\n+  /**\n+   * Construct DataNodeStorageConfig.\n+   * @throws IOException if any directories are inaccessible.\n+   */\n+  public DataNodeStorageConfig(OzoneConfiguration conf) throws IOException {\n+    super(NodeType.DATANODE, getOzoneMetaDirPath(conf),\n+        DATANODE_STORAGE_CONFIG);\n+  }\n+\n+  public DataNodeStorageConfig(NodeType type, File root, String sdName)\n+      throws IOException {\n+    super(type, root, sdName);\n+  }\n+\n+  @Override\n+  protected Properties getNodeProperties() {\n+    // No additional properties for now.\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39213d18b279cab71f5353807610ce3840a49a0d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc5NDEwOQ==", "bodyText": "The variable name containerId seems not related, can we rename to finalizeUpgrade?", "url": "https://github.com/apache/ozone/pull/1432#discussion_r490794109", "createdAt": "2020-09-18T08:41:32Z", "author": {"login": "linyiqun"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/commandhandler/FinalizeNewLayoutVersionCommandHandler.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.hadoop.ozone.container.common.statemachine.commandhandler;\n+\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.protocol.proto\n+    .StorageContainerDatanodeProtocolProtos.SCMCommandProto;\n+import org.apache.hadoop.hdds.protocol.proto\n+    .StorageContainerDatanodeProtocolProtos\n+    .FinalizeNewLayoutVersionCommandProto;\n+import org.apache.hadoop.ozone.container.common.statemachine\n+    .SCMConnectionManager;\n+import org.apache.hadoop.ozone.container.common.statemachine.StateContext;\n+import org.apache.hadoop.ozone.container.ozoneimpl.ContainerController;\n+import org.apache.hadoop.ozone.container.ozoneimpl.OzoneContainer;\n+import org.apache.hadoop.ozone.protocol.commands.FinalizeNewLayoutVersionCommand;\n+import org.apache.hadoop.ozone.protocol.commands.SCMCommand;\n+import org.apache.hadoop.util.Time;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+/**\n+ * Handler for FinalizeNewLayoutVersion command received from SCM.\n+ */\n+public class FinalizeNewLayoutVersionCommandHandler implements CommandHandler {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(FinalizeNewLayoutVersionCommandHandler.class);\n+\n+  private AtomicLong invocationCount = new AtomicLong(0);\n+  private long totalTime;\n+\n+  /**\n+   * Constructs a FinalizeNewLayoutVersionCommandHandler.\n+   */\n+  public FinalizeNewLayoutVersionCommandHandler() {\n+  }\n+\n+  /**\n+   * Handles a given SCM command.\n+   *\n+   * @param command           - SCM Command\n+   * @param ozoneContainer         - Ozone Container.\n+   * @param context           - Current Context.\n+   * @param connectionManager - The SCMs that we are talking to.\n+   */\n+  @Override\n+  public void handle(SCMCommand command, OzoneContainer ozoneContainer,\n+      StateContext context, SCMConnectionManager connectionManager) {\n+    LOG.debug(\"Processing FinalizeNewLayoutVersionCommandHandler command.\");\n+    invocationCount.incrementAndGet();\n+    final long startTime = Time.monotonicNow();\n+    final DatanodeDetails datanodeDetails = context.getParent()\n+        .getDatanodeDetails();\n+    final FinalizeNewLayoutVersionCommandProto finalizeCommand =\n+        ((FinalizeNewLayoutVersionCommand)command).getProto();\n+    final ContainerController controller = ozoneContainer.getController();\n+    final boolean containerId = finalizeCommand.getFinalizeNewLayoutVersion();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39213d18b279cab71f5353807610ce3840a49a0d"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc5ODEzNw==", "bodyText": "Can we add a new constructor method without HDDSLayoutVersionManager passed in?\nBy default case, it can extract from DatanodeStateMachine.\nHeartbeatEndpointTask(EndpointStateMachine rpcEndpoint, ConfigurationSource conf, StateContext context,\nHDDSLayoutVersionManager versionManager) should only be visible for test.", "url": "https://github.com/apache/ozone/pull/1432#discussion_r490798137", "createdAt": "2020-09-18T08:48:42Z", "author": {"login": "linyiqun"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/endpoint/HeartbeatEndpointTask.java", "diffHunk": "@@ -83,21 +87,28 @@\n   private StateContext context;\n   private int maxContainerActionsPerHB;\n   private int maxPipelineActionsPerHB;\n+  private HDDSLayoutVersionManager layoutVersionManager;\n \n   /**\n    * Constructs a SCM heart beat.\n    *\n    * @param conf Config.\n    */\n   public HeartbeatEndpointTask(EndpointStateMachine rpcEndpoint,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39213d18b279cab71f5353807610ce3840a49a0d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc5OTkzOA==", "bodyText": "Same review comment for RegisterEndpointTask construction method like above.", "url": "https://github.com/apache/ozone/pull/1432#discussion_r490799938", "createdAt": "2020-09-18T08:51:39Z", "author": {"login": "linyiqun"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/endpoint/RegisterEndpointTask.java", "diffHunk": "@@ -65,12 +69,17 @@\n   @VisibleForTesting\n   public RegisterEndpointTask(EndpointStateMachine rpcEndPoint,\n       ConfigurationSource conf, OzoneContainer ozoneContainer,\n-      StateContext context) {\n+      StateContext context, HDDSLayoutVersionManager layoutVersionManager) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39213d18b279cab71f5353807610ce3840a49a0d"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "579e95ff765567e6d5a7988fcf479b1ddcc9a98d", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/579e95ff765567e6d5a7988fcf479b1ddcc9a98d", "committedDate": "2020-09-18T23:59:14Z", "message": "HDDS-4252. Addressing review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxODQ5Nzcy", "url": "https://github.com/apache/ozone/pull/1432#pullrequestreview-491849772", "createdAt": "2020-09-19T01:28:10Z", "commit": {"oid": "579e95ff765567e6d5a7988fcf479b1ddcc9a98d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQwMToyODoxMFrOHUfofg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQwMTozMDowNFrOHUfpOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI1MTgzOA==", "bodyText": "We can reuse the lines of constructor method, like this\npublic HeartbeatEndpointTask(EndpointStateMachine rpcEndpoint,\nConfigurationSource conf, StateContext context) {\nthis(rpcEndpoint, conf, context, context.getParent().getDataNodeVersionManager())\n}\npublic HeartbeatEndpointTask(EndpointStateMachine rpcEndpoint,\nConfigurationSource conf, StateContext context,\nHDDSLayoutVersionManager versionManager) {\n...\nlayoutVersionManager = versionManager;\n}", "url": "https://github.com/apache/ozone/pull/1432#discussion_r491251838", "createdAt": "2020-09-19T01:28:10Z", "author": {"login": "linyiqun"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/endpoint/HeartbeatEndpointTask.java", "diffHunk": "@@ -83,21 +87,50 @@\n   private StateContext context;\n   private int maxContainerActionsPerHB;\n   private int maxPipelineActionsPerHB;\n+  private HDDSLayoutVersionManager layoutVersionManager;\n \n   /**\n    * Constructs a SCM heart beat.\n    *\n+   * @param rpcEndpoint rpc Endpoint\n    * @param conf Config.\n+   * @param context State context\n    */\n   public HeartbeatEndpointTask(EndpointStateMachine rpcEndpoint,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "579e95ff765567e6d5a7988fcf479b1ddcc9a98d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI1MjAyNw==", "bodyText": "Same suggestion comment for constructor method like above.", "url": "https://github.com/apache/ozone/pull/1432#discussion_r491252027", "createdAt": "2020-09-19T01:30:04Z", "author": {"login": "linyiqun"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/endpoint/RegisterEndpointTask.java", "diffHunk": "@@ -54,23 +57,52 @@\n   private DatanodeDetails datanodeDetails;\n   private final OzoneContainer datanodeContainerManager;\n   private StateContext stateContext;\n+  private HDDSLayoutVersionManager layoutVersionManager;\n \n   /**\n    * Creates a register endpoint task.\n    *\n    * @param rpcEndPoint - endpoint\n    * @param conf - conf\n    * @param ozoneContainer - container\n+   * @param context - State context\n    */\n   @VisibleForTesting\n   public RegisterEndpointTask(EndpointStateMachine rpcEndPoint,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "579e95ff765567e6d5a7988fcf479b1ddcc9a98d"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0887d0b10878d7b99e3931a2113e216afb92df8", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/c0887d0b10878d7b99e3931a2113e216afb92df8", "committedDate": "2020-09-19T01:43:43Z", "message": "HDDS-4252. Addressing review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1382acb19d90c5b29d43d245f669d9fb9dbd1bd7", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/1382acb19d90c5b29d43d245f669d9fb9dbd1bd7", "committedDate": "2020-09-19T03:28:03Z", "message": "HDDS-4252. Addressing CI failures: part 3."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMDAyNDk5", "url": "https://github.com/apache/ozone/pull/1432#pullrequestreview-492002499", "createdAt": "2020-09-19T14:34:52Z", "commit": {"oid": "1382acb19d90c5b29d43d245f669d9fb9dbd1bd7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyODA0MDEw", "url": "https://github.com/apache/ozone/pull/1432#pullrequestreview-492804010", "createdAt": "2020-09-21T16:51:13Z", "commit": {"oid": "1382acb19d90c5b29d43d245f669d9fb9dbd1bd7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjo1MToxM1rOHVZ6Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzowNzozNFrOHVae5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwNjYyMg==", "bodyText": "Nit. Can we return empty list here?", "url": "https://github.com/apache/ozone/pull/1432#discussion_r492206622", "createdAt": "2020-09-21T16:51:13Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/DataNodeStorageConfig.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.container.common;\n+\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.NodeType;\n+import org.apache.hadoop.ozone.common.Storage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+import static org.apache.hadoop.hdds.server.ServerUtils.getOzoneMetaDirPath;\n+import static org.apache.hadoop.ozone.OzoneConsts.DATANODE_STORAGE_CONFIG;\n+\n+/**\n+ * DataNodeStorageConfig is responsible for management of the\n+ * StorageDirectories used by the DataNode.\n+ */\n+public class DataNodeStorageConfig extends Storage {\n+\n+  /**\n+   * Construct DataNodeStorageConfig.\n+   * @throws IOException if any directories are inaccessible.\n+   */\n+  public DataNodeStorageConfig(OzoneConfiguration conf) throws IOException {\n+    super(NodeType.DATANODE, getOzoneMetaDirPath(conf),\n+        DATANODE_STORAGE_CONFIG);\n+  }\n+\n+  public DataNodeStorageConfig(NodeType type, File root, String sdName)\n+      throws IOException {\n+    super(type, root, sdName);\n+  }\n+\n+  @Override\n+  protected Properties getNodeProperties() {\n+    // No additional properties for now.\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1382acb19d90c5b29d43d245f669d9fb9dbd1bd7"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxMDAwNg==", "bodyText": "There is already a Datanode Version file managed by the org.apache.hadoop.ozone.container.common.helpers.DatanodeVersionFile class. This is supposed to manage the clusterId, Datanode ID, layout version etc. If we create a new class to be passed into the Layout Version Manager, then we end up creating 2 Version files on disk for DN.", "url": "https://github.com/apache/ozone/pull/1432#discussion_r492210006", "createdAt": "2020-09-21T16:57:04Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/DataNodeStorageConfig.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.container.common;\n+\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.NodeType;\n+import org.apache.hadoop.ozone.common.Storage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+import static org.apache.hadoop.hdds.server.ServerUtils.getOzoneMetaDirPath;\n+import static org.apache.hadoop.ozone.OzoneConsts.DATANODE_STORAGE_CONFIG;\n+\n+/**\n+ * DataNodeStorageConfig is responsible for management of the\n+ * StorageDirectories used by the DataNode.\n+ */\n+public class DataNodeStorageConfig extends Storage {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1382acb19d90c5b29d43d245f669d9fb9dbd1bd7"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxNjAzOA==", "bodyText": "Why do we need to create a new 'register' method with Layout Version arg, without changing the existing method? We would always need a Layout Version during registering.", "url": "https://github.com/apache/ozone/pull/1432#discussion_r492216038", "createdAt": "2020-09-21T17:07:34Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/protocol/StorageContainerDatanodeProtocol.java", "diffHunk": "@@ -84,4 +86,19 @@ SCMRegisteredResponseProto register(\n           ContainerReportsProto containerReportsRequestProto,\n           PipelineReportsProto pipelineReports) throws IOException;\n \n+  /**\n+   * Register Datanode.\n+   * @param datanodeDetails - Datanode Details.\n+   * @param nodeReport - Node Report.\n+   * @param containerReportsRequestProto - Container Reports.\n+   * @param layoutInfo - Layout Version Information.\n+   * @return SCM Command.\n+   */\n+  SCMRegisteredResponseProto register(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1382acb19d90c5b29d43d245f669d9fb9dbd1bd7"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c464b8aa08272c45d64ba7ab03e85b532c7c62a", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/5c464b8aa08272c45d64ba7ab03e85b532c7c62a", "committedDate": "2020-09-23T06:13:05Z", "message": "HDDS-4252. Addressing review comments: part 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caf3711fedae63cff691dcf3d48165ff53978bb7", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/caf3711fedae63cff691dcf3d48165ff53978bb7", "committedDate": "2020-09-24T02:58:09Z", "message": "Merge remote-tracking branch 'upstream/HDDS-3698-upgrade' into HDDS-4252"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Nzg4NjUy", "url": "https://github.com/apache/ozone/pull/1432#pullrequestreview-497788652", "createdAt": "2020-09-28T18:25:32Z", "commit": {"oid": "caf3711fedae63cff691dcf3d48165ff53978bb7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2543, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}