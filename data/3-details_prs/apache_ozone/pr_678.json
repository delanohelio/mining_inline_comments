{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MTA3Nzc3", "number": 678, "title": "HDDS-3179 Pipeline placement based on Topology does not have fallback", "bodyText": "What changes were proposed in this pull request?\nWhen rack awareness and topology is enabled, pipeline placement can fail when there is only one node on the rack.\nShould add fall back logic to search for nodes from other racks.\n(Please fill in changes proposed in this fix)\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3179\n(Please create an issue in ASF JIRA before opening a pull request,\nand you need to set the title of the pull request which starts with\nthe corresponding JIRA issue number. (e.g. HDDS-XXXX. Fix a typo in YYY.)\nPlease replace this section with the link to the Apache JIRA)\nHow was this patch tested?\nUT\n(Please explain how this patch was tested. Ex: unit tests, manual tests)\n(If this patch involves UI changes, please attach a screen-shot; otherwise, remove this)", "createdAt": "2020-03-14T01:57:03Z", "url": "https://github.com/apache/ozone/pull/678", "merged": true, "mergeCommit": {"oid": "7d132ce38d5d8aeb3b72e770f99881888c2753ee"}, "closed": true, "closedAt": "2020-03-27T07:30:00Z", "author": {"login": "timmylicheng"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNexwmABqjMxMjkwMjI1NTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRoZXNABqjMxNzA4NjYzOTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13f591ab436efe19130fadad597e9c71a931d93c", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/13f591ab436efe19130fadad597e9c71a931d93c", "committedDate": "2020-03-14T01:56:44Z", "message": "HDDS-3179 Pipeline placement based on Topology does not have fall back protection."}, "afterCommit": {"oid": "d8dd24acaed89d4501cb8aaf00e77c4cf5431f4e", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/d8dd24acaed89d4501cb8aaf00e77c4cf5431f4e", "committedDate": "2020-03-14T06:18:17Z", "message": "HDDS-3179 Pipeline placement based on Topology does not have fall back protection."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NzgzMDU2", "url": "https://github.com/apache/ozone/pull/678#pullrequestreview-374783056", "createdAt": "2020-03-15T09:21:02Z", "commit": {"oid": "d8dd24acaed89d4501cb8aaf00e77c4cf5431f4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQwOToyMTowMlrOF2dzSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQwOToyMTowMlrOF2dzSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY1NTY4OQ==", "bodyText": "I also meet this issue in my testing cluster.\nI would like to log the exception in debug level log here. Then we could know the fallback happened.\nAlso can we log the debug log for final pick node when returned is null?\nif (pick != null) {\nresults.add(pick);\n...\n} else {\nLOG.debug(\"Pick node is null, exclude {}, anchor {}.\",\nexclude, anchor);\n}", "url": "https://github.com/apache/ozone/pull/678#discussion_r392655689", "createdAt": "2020-03-15T09:21:02Z", "author": {"login": "linyiqun"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelinePlacementPolicy.java", "diffHunk": "@@ -292,10 +294,15 @@ DatanodeDetails fallBackPickNodes(\n     int nodesToFind = nodesRequired - results.size();\n     for (int x = 0; x < nodesToFind; x++) {\n       // Pick remaining nodes based on the existence of rack awareness.\n-      DatanodeDetails pick = rackAwareness\n-          ? chooseNodeFromNetworkTopology(\n-              nodeManager.getClusterNetworkTopologyMap(), anchor, exclude)\n-          : fallBackPickNodes(healthyNodes, exclude);\n+      DatanodeDetails pick;\n+      try {\n+        pick = rackAwareness\n+            ? chooseNodeFromNetworkTopology(\n+            nodeManager.getClusterNetworkTopologyMap(), anchor, exclude)\n+            : fallBackPickNodes(healthyNodes, exclude);\n+      } catch (SCMException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8dd24acaed89d4501cb8aaf00e77c4cf5431f4e"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fea08c62fd2123e8d20d91ce8df4d09429914df8", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/fea08c62fd2123e8d20d91ce8df4d09429914df8", "committedDate": "2020-03-15T14:19:24Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}, "afterCommit": {"oid": "9342cb5f763d2fd5c2adfb2bda3de6def6acd878", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/9342cb5f763d2fd5c2adfb2bda3de6def6acd878", "committedDate": "2020-03-16T03:50:20Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9342cb5f763d2fd5c2adfb2bda3de6def6acd878", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/9342cb5f763d2fd5c2adfb2bda3de6def6acd878", "committedDate": "2020-03-16T03:50:20Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}, "afterCommit": {"oid": "b007fae14fc28a49c16e8241710713728ed10098", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/b007fae14fc28a49c16e8241710713728ed10098", "committedDate": "2020-03-16T07:27:54Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NjM3NDky", "url": "https://github.com/apache/ozone/pull/678#pullrequestreview-375637492", "createdAt": "2020-03-16T22:58:39Z", "commit": {"oid": "b007fae14fc28a49c16e8241710713728ed10098"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjo1ODozOVrOF3Ifnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjo1ODozOVrOF3Ifnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1NTE2Nw==", "bodyText": "I don't think we need to wrap the debug logs in if (LOG.isDebugEnabled()) if we use the SLF4J style logs with {} placeholders rather than string interpolation. The log message will only be evaluated if the debug level is set.\nFor this log, I would suggest using the {} placeholders and let the full stack trace be logged rather than just e.getMessage(), eg:\nLOG.debug(\"Pipeline not found in pipeline state manager during\" +\n              \" pipeline creation. PipelineID: {}\", pid, e);", "url": "https://github.com/apache/ozone/pull/678#discussion_r393355167", "createdAt": "2020-03-16T22:58:39Z", "author": {"login": "sodonnel"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelinePlacementPolicy.java", "diffHunk": "@@ -99,9 +99,11 @@ boolean meetCriteria(DatanodeDetails datanodeDetails, int nodesRequired) {\n       try {\n         pipeline = stateManager.getPipeline(pid);\n       } catch (PipelineNotFoundException e) {\n-        LOG.error(\"Pipeline not found in pipeline state manager during\" +\n-            \" pipeline creation. PipelineID: \" + pid +\n-            \" exception: \" + e.getMessage());\n+        if (LOG.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b007fae14fc28a49c16e8241710713728ed10098"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NjM4Mzc2", "url": "https://github.com/apache/ozone/pull/678#pullrequestreview-375638376", "createdAt": "2020-03-16T22:59:21Z", "commit": {"oid": "b007fae14fc28a49c16e8241710713728ed10098"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjo1OToyMVrOF3Ighg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjo1OToyMVrOF3Ighg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1NTM5OA==", "bodyText": "I think we can remove this if statement safely.", "url": "https://github.com/apache/ozone/pull/678#discussion_r393355398", "createdAt": "2020-03-16T22:59:21Z", "author": {"login": "sodonnel"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelinePlacementPolicy.java", "diffHunk": "@@ -292,10 +294,19 @@ DatanodeDetails fallBackPickNodes(\n     int nodesToFind = nodesRequired - results.size();\n     for (int x = 0; x < nodesToFind; x++) {\n       // Pick remaining nodes based on the existence of rack awareness.\n-      DatanodeDetails pick = rackAwareness\n-          ? chooseNodeFromNetworkTopology(\n-              nodeManager.getClusterNetworkTopologyMap(), anchor, exclude)\n-          : fallBackPickNodes(healthyNodes, exclude);\n+      DatanodeDetails pick;\n+      try {\n+        pick = rackAwareness\n+            ? chooseNodeFromNetworkTopology(\n+            nodeManager.getClusterNetworkTopologyMap(), anchor, exclude)\n+            : fallBackPickNodes(healthyNodes, exclude);\n+      } catch (SCMException e) {\n+        pick = fallBackPickNodes(healthyNodes, exclude);\n+        if (LOG.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b007fae14fc28a49c16e8241710713728ed10098"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NjM5Mjk2", "url": "https://github.com/apache/ozone/pull/678#pullrequestreview-375639296", "createdAt": "2020-03-16T23:00:34Z", "commit": {"oid": "b007fae14fc28a49c16e8241710713728ed10098"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzowMDozNFrOF3IirQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzowMDozNFrOF3IirQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1NTk0OQ==", "bodyText": "Again, I don't think we need the if (LOG.isDebugEnabled()) { wrapping the debug log.", "url": "https://github.com/apache/ozone/pull/678#discussion_r393355949", "createdAt": "2020-03-16T23:00:34Z", "author": {"login": "sodonnel"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelinePlacementPolicy.java", "diffHunk": "@@ -414,6 +425,14 @@ protected DatanodeDetails chooseNodeFromNetworkTopology(\n     Node pick = networkTopology.chooseRandom(\n         anchor.getNetworkLocation(), excluded);\n     DatanodeDetails pickedNode = (DatanodeDetails) pick;\n+    if (pickedNode == null) {\n+      if (LOG.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b007fae14fc28a49c16e8241710713728ed10098"}, "originalPosition": 53}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b007fae14fc28a49c16e8241710713728ed10098", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/b007fae14fc28a49c16e8241710713728ed10098", "committedDate": "2020-03-16T07:27:54Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}, "afterCommit": {"oid": "2c0f9cb5e21bc091b0826cb2149f49815e4a3c0e", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/2c0f9cb5e21bc091b0826cb2149f49815e4a3c0e", "committedDate": "2020-03-17T09:05:08Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c0f9cb5e21bc091b0826cb2149f49815e4a3c0e", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/2c0f9cb5e21bc091b0826cb2149f49815e4a3c0e", "committedDate": "2020-03-17T09:05:08Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}, "afterCommit": {"oid": "6696d42da1a8e6b4411b210e96fd379d1f1e6532", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/6696d42da1a8e6b4411b210e96fd379d1f1e6532", "committedDate": "2020-03-17T11:48:44Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6696d42da1a8e6b4411b210e96fd379d1f1e6532", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/6696d42da1a8e6b4411b210e96fd379d1f1e6532", "committedDate": "2020-03-17T11:48:44Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}, "afterCommit": {"oid": "c4576bc435569ba74a7b650890532669f5e958f3", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/c4576bc435569ba74a7b650890532669f5e958f3", "committedDate": "2020-03-18T03:20:43Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODAzMzYz", "url": "https://github.com/apache/ozone/pull/678#pullrequestreview-376803363", "createdAt": "2020-03-18T12:10:20Z", "commit": {"oid": "c4576bc435569ba74a7b650890532669f5e958f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjoxMDoyMVrOF4CHrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjoxMDoyMVrOF4CHrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5OTMxMQ==", "bodyText": "This line still is not correct. The way SLF4J works, is it substitutes the {} for each parameter in turn. If the last parameter is a Throwable, it prints the stack trace after the log message. So I think it should be:\nLOG.debug(\"Pipeline not found in pipeline state manager during\" +\n            \" pipeline creation. PipelineID: {}\", pid, e);", "url": "https://github.com/apache/ozone/pull/678#discussion_r394299311", "createdAt": "2020-03-18T12:10:21Z", "author": {"login": "sodonnel"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelinePlacementPolicy.java", "diffHunk": "@@ -99,9 +99,8 @@ boolean meetCriteria(DatanodeDetails datanodeDetails, int nodesRequired) {\n       try {\n         pipeline = stateManager.getPipeline(pid);\n       } catch (PipelineNotFoundException e) {\n-        LOG.error(\"Pipeline not found in pipeline state manager during\" +\n-            \" pipeline creation. PipelineID: \" + pid +\n-            \" exception: \" + e.getMessage());\n+        LOG.debug(\"Pipeline not found in pipeline state manager during\" +\n+            \" pipeline creation. PipelineID: {}\" + pid + e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4576bc435569ba74a7b650890532669f5e958f3"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODMzNTcz", "url": "https://github.com/apache/ozone/pull/678#pullrequestreview-376833573", "createdAt": "2020-03-18T12:54:07Z", "commit": {"oid": "c4576bc435569ba74a7b650890532669f5e958f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjo1NDowN1rOF4DllA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjo1NDowN1rOF4DllA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMyMzM0OA==", "bodyText": "As I mentioned above, I feel it would be simpler if this just returns null rather than throwing an exception.", "url": "https://github.com/apache/ozone/pull/678#discussion_r394323348", "createdAt": "2020-03-18T12:54:07Z", "author": {"login": "sodonnel"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelinePlacementPolicy.java", "diffHunk": "@@ -414,6 +416,12 @@ protected DatanodeDetails chooseNodeFromNetworkTopology(\n     Node pick = networkTopology.chooseRandom(\n         anchor.getNetworkLocation(), excluded);\n     DatanodeDetails pickedNode = (DatanodeDetails) pick;\n+    if (pickedNode == null) {\n+      LOG.debug(\"Pick node is null, excluded nodes {}, anchor {}.\",\n+          excluded, anchor);\n+      throw new SCMException(\"Unable to find node based on Topology.\",\n+          SCMException.ResultCodes.FAILED_TO_FIND_SUITABLE_NODE);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4576bc435569ba74a7b650890532669f5e958f3"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODc1Njk3", "url": "https://github.com/apache/ozone/pull/678#pullrequestreview-376875697", "createdAt": "2020-03-18T13:45:14Z", "commit": {"oid": "c4576bc435569ba74a7b650890532669f5e958f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzo0NToxNFrOF4FlhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzo0NToxNFrOF4FlhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1NjEwMQ==", "bodyText": "There are a lot of changes in this test file, but do we have a test that reproduces the problem reported? The problem is that if the anchor node is on a rack with only a single node, then only 2 nodes would be allocated rather than 3? It should be possible to reproduce this easily with a 3 node and 3 rack cluster, one rack per node.\nI think we should add a test that reproduces the problem so we know the changes correct it and we have no regressions in the future. We should also test this via the public API of PipelinePlacementPolicy if possible. Right now, most of the tests in TestPipelinePolicy seem to call \"@VisibleForTesting\" methods rather than chooseDatanodes or getResultSet, which are the public methods.", "url": "https://github.com/apache/ozone/pull/678#discussion_r394356101", "createdAt": "2020-03-18T13:45:14Z", "author": {"login": "sodonnel"}, "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/pipeline/TestPipelinePlacementPolicy.java", "diffHunk": "@@ -21,6 +21,7 @@\n import org.apache.hadoop.conf.Configuration;\n import org.apache.hadoop.hdds.conf.OzoneConfiguration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4576bc435569ba74a7b650890532669f5e958f3"}, "originalPosition": 2}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4576bc435569ba74a7b650890532669f5e958f3", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/c4576bc435569ba74a7b650890532669f5e958f3", "committedDate": "2020-03-18T03:20:43Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}, "afterCommit": {"oid": "a75cd94096a75218acf3f97454fd8719f8fe67cb", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/a75cd94096a75218acf3f97454fd8719f8fe67cb", "committedDate": "2020-03-25T12:54:39Z", "message": "Add a test for single node rack case."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a75cd94096a75218acf3f97454fd8719f8fe67cb", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/a75cd94096a75218acf3f97454fd8719f8fe67cb", "committedDate": "2020-03-25T12:54:39Z", "message": "Add a test for single node rack case."}, "afterCommit": {"oid": "ef1681c2161675d802599659732a166abc8b992c", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/ef1681c2161675d802599659732a166abc8b992c", "committedDate": "2020-03-25T13:51:55Z", "message": "Add a test for single node rack case."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef1681c2161675d802599659732a166abc8b992c", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/ef1681c2161675d802599659732a166abc8b992c", "committedDate": "2020-03-25T13:51:55Z", "message": "Add a test for single node rack case."}, "afterCommit": {"oid": "9e2758616efdbd6c0ef951365485a86d2b5e33a8", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/9e2758616efdbd6c0ef951365485a86d2b5e33a8", "committedDate": "2020-03-26T03:27:30Z", "message": "Add a test for single node rack case."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e2758616efdbd6c0ef951365485a86d2b5e33a8", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/9e2758616efdbd6c0ef951365485a86d2b5e33a8", "committedDate": "2020-03-26T03:27:30Z", "message": "Add a test for single node rack case."}, "afterCommit": {"oid": "ba0a980ee78d715aee67140ce3cd94b8b883627a", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/ba0a980ee78d715aee67140ce3cd94b8b883627a", "committedDate": "2020-03-26T06:18:33Z", "message": "Add a test for single node rack case."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba0a980ee78d715aee67140ce3cd94b8b883627a", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/ba0a980ee78d715aee67140ce3cd94b8b883627a", "committedDate": "2020-03-26T06:18:33Z", "message": "Add a test for single node rack case."}, "afterCommit": {"oid": "ecf7b16e23bef9378ee65e4e5639c18c76f78003", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/ecf7b16e23bef9378ee65e4e5639c18c76f78003", "committedDate": "2020-03-26T07:23:49Z", "message": "Add a test for single node rack case."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecf7b16e23bef9378ee65e4e5639c18c76f78003", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/ecf7b16e23bef9378ee65e4e5639c18c76f78003", "committedDate": "2020-03-26T07:23:49Z", "message": "Add a test for single node rack case."}, "afterCommit": {"oid": "4e9ce5b004ac2385ecc45a9553c4c7d966836a33", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/4e9ce5b004ac2385ecc45a9553c4c7d966836a33", "committedDate": "2020-03-26T08:24:06Z", "message": "Add a test for single node rack case."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e9ce5b004ac2385ecc45a9553c4c7d966836a33", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/4e9ce5b004ac2385ecc45a9553c4c7d966836a33", "committedDate": "2020-03-26T08:24:06Z", "message": "Add a test for single node rack case."}, "afterCommit": {"oid": "b7e6aff83aa28d312989c0af16560f40fac2efe6", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/b7e6aff83aa28d312989c0af16560f40fac2efe6", "committedDate": "2020-03-26T11:24:44Z", "message": "Add a test for single node rack case."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDIxNTcy", "url": "https://github.com/apache/ozone/pull/678#pullrequestreview-382021572", "createdAt": "2020-03-26T13:45:09Z", "commit": {"oid": "b7e6aff83aa28d312989c0af16560f40fac2efe6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0NTowOVrOF8HjsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0NTowOVrOF8HjsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MjcwNA==", "bodyText": "You can remove the throws SCMException in the method definition now, as it is no longer used.", "url": "https://github.com/apache/ozone/pull/678#discussion_r398582704", "createdAt": "2020-03-26T13:45:09Z", "author": {"login": "sodonnel"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelinePlacementPolicy.java", "diffHunk": "@@ -403,7 +408,7 @@ private boolean checkAllNodesAreEqual(NetworkTopology topology) {\n   @VisibleForTesting\n   protected DatanodeDetails chooseNodeFromNetworkTopology(\n       NetworkTopology networkTopology, DatanodeDetails anchor,\n-      List<DatanodeDetails> excludedNodes) {\n+      List<DatanodeDetails> excludedNodes) throws SCMException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e6aff83aa28d312989c0af16560f40fac2efe6"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDQ0NTI4", "url": "https://github.com/apache/ozone/pull/678#pullrequestreview-382044528", "createdAt": "2020-03-26T14:09:09Z", "commit": {"oid": "b7e6aff83aa28d312989c0af16560f40fac2efe6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowOTowOVrOF8Irzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowOTowOVrOF8Irzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwMTE2Ng==", "bodyText": "This test doesn't reproduce the error if the fix in this PR is removed. I commented out the fix in PipelinePlacement policy and added back in the old logic and ran this and it still passed. The reason, is that PipelinePlacementPolicy did not believe networkTopology was present. Changing this line as follows makes the test reproduce the problem:\n    MockNodeManager localNodeManager = new MockNodeManager(initTopology(), datanodes,\n        false, datanodes.size());\n\nNote I added initTopology() when constructing the NodeManager.\nWith that, the test fails without the fix, and passes with the fix in this PR, so that is good.", "url": "https://github.com/apache/ozone/pull/678#discussion_r398601166", "createdAt": "2020-03-26T14:09:09Z", "author": {"login": "sodonnel"}, "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/pipeline/TestPipelinePlacementPolicy.java", "diffHunk": "@@ -43,36 +47,98 @@\n   private MockNodeManager nodeManager;\n   private OzoneConfiguration conf;\n   private PipelinePlacementPolicy placementPolicy;\n+  private NetworkTopologyImpl cluster;\n   private static final int PIPELINE_PLACEMENT_MAX_NODES_COUNT = 10;\n \n+  private List<DatanodeDetails> nodesWithOutRackAwareness = new ArrayList<>();\n+  private List<DatanodeDetails> nodesWithRackAwareness = new ArrayList<>();\n+\n   @Before\n   public void init() throws Exception {\n-    nodeManager = new MockNodeManager(true,\n-        PIPELINE_PLACEMENT_MAX_NODES_COUNT);\n+    cluster = initTopology();\n+    // start with nodes with rack awareness.\n+    nodeManager = new MockNodeManager(cluster, getNodesWithRackAwareness(),\n+        false, PIPELINE_PLACEMENT_MAX_NODES_COUNT);\n     conf = new OzoneConfiguration();\n     conf.setInt(OZONE_DATANODE_PIPELINE_LIMIT, 5);\n     placementPolicy = new PipelinePlacementPolicy(\n         nodeManager, new PipelineStateManager(), conf);\n   }\n \n+  private NetworkTopologyImpl initTopology() {\n+    NodeSchema[] schemas = new NodeSchema[]\n+        {ROOT_SCHEMA, RACK_SCHEMA, LEAF_SCHEMA};\n+    NodeSchemaManager.getInstance().init(schemas, true);\n+    NetworkTopologyImpl topology =\n+        new NetworkTopologyImpl(NodeSchemaManager.getInstance());\n+    return topology;\n+  }\n+\n+  private List<DatanodeDetails> getNodesWithRackAwareness() {\n+    List<DatanodeDetails> datanodes = new ArrayList<>();\n+    for (Node node : NODES) {\n+      DatanodeDetails datanode = overwriteLocationInNode(\n+          getNodesWithoutRackAwareness(), node);\n+      nodesWithRackAwareness.add(datanode);\n+      datanodes.add(datanode);\n+    }\n+    return datanodes;\n+  }\n+\n+  private DatanodeDetails getNodesWithoutRackAwareness() {\n+    DatanodeDetails node = MockDatanodeDetails.randomDatanodeDetails();\n+    nodesWithOutRackAwareness.add(node);\n+    return node;\n+  }\n+\n   @Test\n-  public void testChooseNodeBasedOnNetworkTopology() {\n-    List<DatanodeDetails> healthyNodes =\n-        nodeManager.getNodes(HddsProtos.NodeState.HEALTHY);\n-    DatanodeDetails anchor = placementPolicy.chooseNode(healthyNodes);\n+  public void testChooseNodeBasedOnNetworkTopology() throws SCMException {\n+    DatanodeDetails anchor = placementPolicy.chooseNode(nodesWithRackAwareness);\n     // anchor should be removed from healthyNodes after being chosen.\n-    Assert.assertFalse(healthyNodes.contains(anchor));\n+    Assert.assertFalse(nodesWithRackAwareness.contains(anchor));\n \n     List<DatanodeDetails> excludedNodes =\n         new ArrayList<>(PIPELINE_PLACEMENT_MAX_NODES_COUNT);\n     excludedNodes.add(anchor);\n     DatanodeDetails nextNode = placementPolicy.chooseNodeFromNetworkTopology(\n         nodeManager.getClusterNetworkTopologyMap(), anchor, excludedNodes);\n     Assert.assertFalse(excludedNodes.contains(nextNode));\n-    // nextNode should not be the same as anchor.\n+    // next node should not be the same as anchor.\n     Assert.assertTrue(anchor.getUuid() != nextNode.getUuid());\n+    // next node should be on the same rack based on topology.\n+    Assert.assertEquals(anchor.getNetworkLocation(),\n+        nextNode.getNetworkLocation());\n   }\n \n+  @Test\n+  public void testChooseNodeWithSingleNodeRack() throws SCMException {\n+    // There is only one node on 3 racks altogether.\n+    List<DatanodeDetails> datanodes = new ArrayList<>();\n+    for (Node node : SINGLE_NODE_RACK) {\n+      DatanodeDetails datanode = overwriteLocationInNode(\n+          MockDatanodeDetails.randomDatanodeDetails(), node);\n+      datanodes.add(datanode);\n+    }\n+    MockNodeManager localNodeManager = new MockNodeManager(null, datanodes,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e6aff83aa28d312989c0af16560f40fac2efe6"}, "originalPosition": 102}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7e6aff83aa28d312989c0af16560f40fac2efe6", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/b7e6aff83aa28d312989c0af16560f40fac2efe6", "committedDate": "2020-03-26T11:24:44Z", "message": "Add a test for single node rack case."}, "afterCommit": {"oid": "bbcce87752c3ad61386b7ea6004a8c0c2f6c917c", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/bbcce87752c3ad61386b7ea6004a8c0c2f6c917c", "committedDate": "2020-03-26T14:34:59Z", "message": "Add a test for single node rack case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d59d252115ae74e856e8bb6d06dc31f7d5126159", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/d59d252115ae74e856e8bb6d06dc31f7d5126159", "committedDate": "2020-03-27T02:38:28Z", "message": "HDDS-3179 Pipeline placement based on Topology does not have fall back protection."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fe913f91921516ae3fb3bc0e14e61eec8d452fc", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/1fe913f91921516ae3fb3bc0e14e61eec8d452fc", "committedDate": "2020-03-27T02:38:28Z", "message": "Add debug logic for fallback chooseNodeBasedOnTopology."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bbcce87752c3ad61386b7ea6004a8c0c2f6c917c", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/bbcce87752c3ad61386b7ea6004a8c0c2f6c917c", "committedDate": "2020-03-26T14:34:59Z", "message": "Add a test for single node rack case."}, "afterCommit": {"oid": "7923ffdfd6fd9824bda5ca46e80b14102da39a49", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/7923ffdfd6fd9824bda5ca46e80b14102da39a49", "committedDate": "2020-03-27T02:38:28Z", "message": "Add a test for single node rack case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8857bca3d2ed4b64baae5c7414c42bb658b5c0a5", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/8857bca3d2ed4b64baae5c7414c42bb658b5c0a5", "committedDate": "2020-03-27T03:46:27Z", "message": "Add a test for single node rack case."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7923ffdfd6fd9824bda5ca46e80b14102da39a49", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/7923ffdfd6fd9824bda5ca46e80b14102da39a49", "committedDate": "2020-03-27T02:38:28Z", "message": "Add a test for single node rack case."}, "afterCommit": {"oid": "8857bca3d2ed4b64baae5c7414c42bb658b5c0a5", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/8857bca3d2ed4b64baae5c7414c42bb658b5c0a5", "committedDate": "2020-03-27T03:46:27Z", "message": "Add a test for single node rack case."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3468, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}