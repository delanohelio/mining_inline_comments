{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NTMwNjM4", "number": 1112, "title": "HDDS-3651 Add tests for SCMRatisRequest.", "bodyText": "What changes were proposed in this pull request?\nHDDS-3651 Add tests for SCMRatisRequest.\n(Please fill in changes proposed in this fix)\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3651\n(Please create an issue in ASF JIRA before opening a pull request,\nand you need to set the title of the pull request which starts with\nthe corresponding JIRA issue number. (e.g. HDDS-XXXX. Fix a typo in YYY.)\nPlease replace this section with the link to the Apache JIRA)\nHow was this patch tested?\nUT\n(Please explain how this patch was tested. Ex: unit tests, manual tests)\n(If this patch involves UI changes, please attach a screen-shot; otherwise, remove this)", "createdAt": "2020-06-23T12:15:11Z", "url": "https://github.com/apache/ozone/pull/1112", "merged": true, "mergeCommit": {"oid": "7287e1dfc2e00d9eefaec3b046be2a583cacbfed"}, "closed": true, "closedAt": "2020-06-28T10:06:28Z", "author": {"login": "timmylicheng"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuEb88gBqjM0NzI2NDk5Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuYoQ9ABqjM0NzcxMjM2ODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15738ad24629f4c4ce8be353375a10b92667da76", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/15738ad24629f4c4ce8be353375a10b92667da76", "committedDate": "2020-06-23T12:14:19Z", "message": "HDDS-3651 Add test for SCMRatisRequest."}, "afterCommit": {"oid": "46c860a764070f774bd0b96d1ca0fb91a4fd6bec", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/46c860a764070f774bd0b96d1ca0fb91a4fd6bec", "committedDate": "2020-06-23T12:16:19Z", "message": "HDDS-3651 Add test for SCMRatisRequest."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bffc0c4fe2b33b1ae66be1002e67565c9af6f35c", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/bffc0c4fe2b33b1ae66be1002e67565c9af6f35c", "committedDate": "2020-06-23T12:24:28Z", "message": "HDDS-3651 Add test for SCMRatisRequest."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46c860a764070f774bd0b96d1ca0fb91a4fd6bec", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/46c860a764070f774bd0b96d1ca0fb91a4fd6bec", "committedDate": "2020-06-23T12:16:19Z", "message": "HDDS-3651 Add test for SCMRatisRequest."}, "afterCommit": {"oid": "bffc0c4fe2b33b1ae66be1002e67565c9af6f35c", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/bffc0c4fe2b33b1ae66be1002e67565c9af6f35c", "committedDate": "2020-06-23T12:24:28Z", "message": "HDDS-3651 Add test for SCMRatisRequest."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MTY2NzY4", "url": "https://github.com/apache/ozone/pull/1112#pullrequestreview-436166768", "createdAt": "2020-06-23T21:20:23Z", "commit": {"oid": "bffc0c4fe2b33b1ae66be1002e67565c9af6f35c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMToyMDoyM1rOGn7D6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMToyMDoyM1rOGn7D6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxNTMwNg==", "bodyText": "NIT: We can use the @test annotation to simplify the test case.\n@test(expected = InvalidProtocolBufferException.class)", "url": "https://github.com/apache/ozone/pull/1112#discussion_r444515306", "createdAt": "2020-06-23T21:20:23Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/ha/TestSCMRatisRequest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.ha;\n+\n+import com.google.protobuf.InvalidProtocolBufferException;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineID;\n+import org.apache.ratis.protocol.Message;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.apache.hadoop.hdds.protocol.proto.SCMRatisProtocol.RequestType.PIPELINE;\n+\n+/**\n+ * Test for SCMRatisRequest.\n+ */\n+public class TestSCMRatisRequest {\n+\n+  @Test\n+  public void testEncodeAndDecodeSuccess() throws Exception {\n+    PipelineID pipelineID = PipelineID.randomId();\n+    Object[] args = new Object[] {pipelineID.getProtobuf()};\n+    String operation = \"test\";\n+    SCMRatisRequest request = SCMRatisRequest.of(PIPELINE, operation, args);\n+    Assert.assertEquals(operation,\n+        SCMRatisRequest.decode(request.encode()).getOperation());\n+    Assert.assertEquals(args[0],\n+        SCMRatisRequest.decode(request.encode()).getArguments()[0]);\n+  }\n+\n+  @Test\n+  public void testEncodeWithNonProto() {\n+    PipelineID pipelineID = PipelineID.randomId();\n+    // Non proto args\n+    Object[] args = new Object[] {pipelineID};\n+    SCMRatisRequest request = SCMRatisRequest.of(PIPELINE, \"test\", args);\n+    try {\n+      request.encode();\n+    } catch (InvalidProtocolBufferException e) {\n+      // Should reach here\n+    } catch (Throwable t) {\n+      Assert.fail(\"Should not reach here.\");\n+    }\n+  }\n+\n+  @Test\n+  public void testDecodeWithNonProto() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bffc0c4fe2b33b1ae66be1002e67565c9af6f35c"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MTY2OTA4", "url": "https://github.com/apache/ozone/pull/1112#pullrequestreview-436166908", "createdAt": "2020-06-23T21:20:35Z", "commit": {"oid": "bffc0c4fe2b33b1ae66be1002e67565c9af6f35c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMToyMDozNVrOGn7ESw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMToyMDozNVrOGn7ESw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxNTQwMw==", "bodyText": "Same as below for the negative case.", "url": "https://github.com/apache/ozone/pull/1112#discussion_r444515403", "createdAt": "2020-06-23T21:20:35Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/ha/TestSCMRatisRequest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.ha;\n+\n+import com.google.protobuf.InvalidProtocolBufferException;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineID;\n+import org.apache.ratis.protocol.Message;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.apache.hadoop.hdds.protocol.proto.SCMRatisProtocol.RequestType.PIPELINE;\n+\n+/**\n+ * Test for SCMRatisRequest.\n+ */\n+public class TestSCMRatisRequest {\n+\n+  @Test\n+  public void testEncodeAndDecodeSuccess() throws Exception {\n+    PipelineID pipelineID = PipelineID.randomId();\n+    Object[] args = new Object[] {pipelineID.getProtobuf()};\n+    String operation = \"test\";\n+    SCMRatisRequest request = SCMRatisRequest.of(PIPELINE, operation, args);\n+    Assert.assertEquals(operation,\n+        SCMRatisRequest.decode(request.encode()).getOperation());\n+    Assert.assertEquals(args[0],\n+        SCMRatisRequest.decode(request.encode()).getArguments()[0]);\n+  }\n+\n+  @Test\n+  public void testEncodeWithNonProto() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bffc0c4fe2b33b1ae66be1002e67565c9af6f35c"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MTY3MDU5", "url": "https://github.com/apache/ozone/pull/1112#pullrequestreview-436167059", "createdAt": "2020-06-23T21:20:50Z", "commit": {"oid": "bffc0c4fe2b33b1ae66be1002e67565c9af6f35c"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ab9fe999a735049d28cbcb7501c97f3ba5db965", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/0ab9fe999a735049d28cbcb7501c97f3ba5db965", "committedDate": "2020-06-24T06:56:39Z", "message": "Use test expected to handle exception."}, "afterCommit": {"oid": "6e886ef2647e39f0bf2aa8ecce2c819d1841ca4f", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/6e886ef2647e39f0bf2aa8ecce2c819d1841ca4f", "committedDate": "2020-06-24T08:44:55Z", "message": "Use test expected to handle exception."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb8222c00c2f7155e94048c941f61b95f96ab9d9", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/cb8222c00c2f7155e94048c941f61b95f96ab9d9", "committedDate": "2020-06-24T11:48:03Z", "message": "Use test expected to handle exception."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e886ef2647e39f0bf2aa8ecce2c819d1841ca4f", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/6e886ef2647e39f0bf2aa8ecce2c819d1841ca4f", "committedDate": "2020-06-24T08:44:55Z", "message": "Use test expected to handle exception."}, "afterCommit": {"oid": "cb8222c00c2f7155e94048c941f61b95f96ab9d9", "author": {"user": {"login": "timmylicheng", "name": "Li Cheng"}}, "url": "https://github.com/apache/ozone/commit/cb8222c00c2f7155e94048c941f61b95f96ab9d9", "committedDate": "2020-06-24T11:48:03Z", "message": "Use test expected to handle exception."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3012, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}