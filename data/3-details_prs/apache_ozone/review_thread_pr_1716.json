{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMTU0MDY3", "number": 1716, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1Mzo0NVrOFIb6ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzowNDowOVrOFIcOjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzkwMjQ1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1Mzo0NVrOIKWeDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1Mzo0NVrOIKWeDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNDgxNA==", "bodyText": "currBitSet  -> curBitSet", "url": "https://github.com/apache/ozone/pull/1716#discussion_r547724814", "createdAt": "2020-12-23T06:53:45Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "diffHunk": "@@ -100,28 +97,58 @@ private BitSet getAcl(OzoneAclType type, String user) {\n   // Add a new acl to the map\n   public void addAcl(OzoneAcl acl) throws OMException {\n     Objects.requireNonNull(acl, \"Acl should not be null.\");\n+    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (acl.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {\n-      defaultAclList.add(OzoneAcl.toProtobuf(acl));\n+      addDefaultAcl(acl);\n       return;\n     }\n \n-    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (!getAccessAclMap(aclType).containsKey(acl.getName())) {\n       getAccessAclMap(aclType).put(acl.getName(), acl.getAclBitSet());\n     } else {\n-      // Check if we are adding new rights to existing acl.\n-      BitSet temp = (BitSet) acl.getAclBitSet().clone();\n-      BitSet curRights = (BitSet) getAccessAclMap(aclType).\n-          get(acl.getName()).clone();\n-      temp.or(curRights);\n-\n-      if (temp.equals(curRights)) {\n-        // throw exception if acl is already added.\n-        throw new OMException(\"Acl \" + acl + \" already exist.\",\n-            INVALID_REQUEST);\n+      BitSet currBitSet = getAccessAclMap(aclType).get(acl.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0f2cfdb21a54f3ecb5e97608457f010b53e0a40"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzkxMDYxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1NToyNFrOIKWjww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1NToyNFrOIKWjww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNjI3NQ==", "bodyText": "New line indent is 2. Here second line of a long line is 4.", "url": "https://github.com/apache/ozone/pull/1716#discussion_r547726275", "createdAt": "2020-12-23T06:55:24Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "diffHunk": "@@ -100,28 +97,58 @@ private BitSet getAcl(OzoneAclType type, String user) {\n   // Add a new acl to the map\n   public void addAcl(OzoneAcl acl) throws OMException {\n     Objects.requireNonNull(acl, \"Acl should not be null.\");\n+    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (acl.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {\n-      defaultAclList.add(OzoneAcl.toProtobuf(acl));\n+      addDefaultAcl(acl);\n       return;\n     }\n \n-    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (!getAccessAclMap(aclType).containsKey(acl.getName())) {\n       getAccessAclMap(aclType).put(acl.getName(), acl.getAclBitSet());\n     } else {\n-      // Check if we are adding new rights to existing acl.\n-      BitSet temp = (BitSet) acl.getAclBitSet().clone();\n-      BitSet curRights = (BitSet) getAccessAclMap(aclType).\n-          get(acl.getName()).clone();\n-      temp.or(curRights);\n-\n-      if (temp.equals(curRights)) {\n-        // throw exception if acl is already added.\n-        throw new OMException(\"Acl \" + acl + \" already exist.\",\n-            INVALID_REQUEST);\n+      BitSet currBitSet = getAccessAclMap(aclType).get(acl.getName());\n+      BitSet bitSet = checkAndGet(acl, currBitSet);\n+      getAccessAclMap(aclType).replace(acl.getName(), bitSet);\n+    }\n+  }\n+\n+  private void addDefaultAcl(OzoneAcl acl) throws OMException {\n+    OzoneAclInfo ozoneAclInfo = OzoneAcl.toProtobuf(acl);\n+    if (defaultAclList.contains(ozoneAclInfo)) {\n+      aclExistsError(acl);\n+    } else {\n+      for (int i = 0; i < defaultAclList.size(); i++) {\n+        OzoneAclInfo old = defaultAclList.get(i);\n+        if (old.getType() == ozoneAclInfo.getType() && old.getName().equals(\n+                ozoneAclInfo.getName())) {\n+          BitSet currBitSet = BitSet.valueOf(old.getRights().toByteArray());\n+          BitSet bitSet = checkAndGet(acl, currBitSet);\n+          ozoneAclInfo = OzoneAclInfo.newBuilder(ozoneAclInfo).setRights(\n+                  ByteString.copyFrom(bitSet.toByteArray())).build();\n+          defaultAclList.remove(i);\n+          defaultAclList.add(ozoneAclInfo);\n+          return;\n+        }\n       }\n-      getAccessAclMap(aclType).replace(acl.getName(), temp);\n     }\n+    defaultAclList.add(ozoneAclInfo);\n+  }\n+\n+  private void aclExistsError(OzoneAcl acl) throws OMException {\n+    // throw exception if acl is already added.\n+    throw new OMException(\"Acl \" + acl + \" already exist.\", INVALID_REQUEST);\n+  }\n+\n+  private BitSet checkAndGet(OzoneAcl acl, BitSet currBitSet)\n+          throws OMException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0f2cfdb21a54f3ecb5e97608457f010b53e0a40"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzkxMTcwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1NTozNlrOIKWkgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1NTozNlrOIKWkgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNjQ2Nw==", "bodyText": "currBitSet -> curBitSet", "url": "https://github.com/apache/ozone/pull/1716#discussion_r547726467", "createdAt": "2020-12-23T06:55:36Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "diffHunk": "@@ -100,28 +97,58 @@ private BitSet getAcl(OzoneAclType type, String user) {\n   // Add a new acl to the map\n   public void addAcl(OzoneAcl acl) throws OMException {\n     Objects.requireNonNull(acl, \"Acl should not be null.\");\n+    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (acl.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {\n-      defaultAclList.add(OzoneAcl.toProtobuf(acl));\n+      addDefaultAcl(acl);\n       return;\n     }\n \n-    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (!getAccessAclMap(aclType).containsKey(acl.getName())) {\n       getAccessAclMap(aclType).put(acl.getName(), acl.getAclBitSet());\n     } else {\n-      // Check if we are adding new rights to existing acl.\n-      BitSet temp = (BitSet) acl.getAclBitSet().clone();\n-      BitSet curRights = (BitSet) getAccessAclMap(aclType).\n-          get(acl.getName()).clone();\n-      temp.or(curRights);\n-\n-      if (temp.equals(curRights)) {\n-        // throw exception if acl is already added.\n-        throw new OMException(\"Acl \" + acl + \" already exist.\",\n-            INVALID_REQUEST);\n+      BitSet currBitSet = getAccessAclMap(aclType).get(acl.getName());\n+      BitSet bitSet = checkAndGet(acl, currBitSet);\n+      getAccessAclMap(aclType).replace(acl.getName(), bitSet);\n+    }\n+  }\n+\n+  private void addDefaultAcl(OzoneAcl acl) throws OMException {\n+    OzoneAclInfo ozoneAclInfo = OzoneAcl.toProtobuf(acl);\n+    if (defaultAclList.contains(ozoneAclInfo)) {\n+      aclExistsError(acl);\n+    } else {\n+      for (int i = 0; i < defaultAclList.size(); i++) {\n+        OzoneAclInfo old = defaultAclList.get(i);\n+        if (old.getType() == ozoneAclInfo.getType() && old.getName().equals(\n+                ozoneAclInfo.getName())) {\n+          BitSet currBitSet = BitSet.valueOf(old.getRights().toByteArray());\n+          BitSet bitSet = checkAndGet(acl, currBitSet);\n+          ozoneAclInfo = OzoneAclInfo.newBuilder(ozoneAclInfo).setRights(\n+                  ByteString.copyFrom(bitSet.toByteArray())).build();\n+          defaultAclList.remove(i);\n+          defaultAclList.add(ozoneAclInfo);\n+          return;\n+        }\n       }\n-      getAccessAclMap(aclType).replace(acl.getName(), temp);\n     }\n+    defaultAclList.add(ozoneAclInfo);\n+  }\n+\n+  private void aclExistsError(OzoneAcl acl) throws OMException {\n+    // throw exception if acl is already added.\n+    throw new OMException(\"Acl \" + acl + \" already exist.\", INVALID_REQUEST);\n+  }\n+\n+  private BitSet checkAndGet(OzoneAcl acl, BitSet currBitSet)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0f2cfdb21a54f3ecb5e97608457f010b53e0a40"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0Mzk1NDA1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzowNDowOVrOIKW_Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzowNDowOVrOIKW_Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzczMzM0Nw==", "bodyText": "Could you replace other same expection codes in this class using this aclExistsError function?", "url": "https://github.com/apache/ozone/pull/1716#discussion_r547733347", "createdAt": "2020-12-23T07:04:09Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "diffHunk": "@@ -100,28 +97,58 @@ private BitSet getAcl(OzoneAclType type, String user) {\n   // Add a new acl to the map\n   public void addAcl(OzoneAcl acl) throws OMException {\n     Objects.requireNonNull(acl, \"Acl should not be null.\");\n+    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (acl.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {\n-      defaultAclList.add(OzoneAcl.toProtobuf(acl));\n+      addDefaultAcl(acl);\n       return;\n     }\n \n-    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (!getAccessAclMap(aclType).containsKey(acl.getName())) {\n       getAccessAclMap(aclType).put(acl.getName(), acl.getAclBitSet());\n     } else {\n-      // Check if we are adding new rights to existing acl.\n-      BitSet temp = (BitSet) acl.getAclBitSet().clone();\n-      BitSet curRights = (BitSet) getAccessAclMap(aclType).\n-          get(acl.getName()).clone();\n-      temp.or(curRights);\n-\n-      if (temp.equals(curRights)) {\n-        // throw exception if acl is already added.\n-        throw new OMException(\"Acl \" + acl + \" already exist.\",\n-            INVALID_REQUEST);\n+      BitSet currBitSet = getAccessAclMap(aclType).get(acl.getName());\n+      BitSet bitSet = checkAndGet(acl, currBitSet);\n+      getAccessAclMap(aclType).replace(acl.getName(), bitSet);\n+    }\n+  }\n+\n+  private void addDefaultAcl(OzoneAcl acl) throws OMException {\n+    OzoneAclInfo ozoneAclInfo = OzoneAcl.toProtobuf(acl);\n+    if (defaultAclList.contains(ozoneAclInfo)) {\n+      aclExistsError(acl);\n+    } else {\n+      for (int i = 0; i < defaultAclList.size(); i++) {\n+        OzoneAclInfo old = defaultAclList.get(i);\n+        if (old.getType() == ozoneAclInfo.getType() && old.getName().equals(\n+                ozoneAclInfo.getName())) {\n+          BitSet currBitSet = BitSet.valueOf(old.getRights().toByteArray());\n+          BitSet bitSet = checkAndGet(acl, currBitSet);\n+          ozoneAclInfo = OzoneAclInfo.newBuilder(ozoneAclInfo).setRights(\n+                  ByteString.copyFrom(bitSet.toByteArray())).build();\n+          defaultAclList.remove(i);\n+          defaultAclList.add(ozoneAclInfo);\n+          return;\n+        }\n       }\n-      getAccessAclMap(aclType).replace(acl.getName(), temp);\n     }\n+    defaultAclList.add(ozoneAclInfo);\n+  }\n+\n+  private void aclExistsError(OzoneAcl acl) throws OMException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0f2cfdb21a54f3ecb5e97608457f010b53e0a40"}, "originalPosition": 103}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4456, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}