{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MzY3NjY2", "number": 1004, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOToyNzozMFrOEB5Brw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTo0ODozOVrOECtaNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDE4MzUxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOToyNzozMFrOGeA6iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMjozODowOVrOGeKHYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNTQ1MQ==", "bodyText": "Isn't this check already done inside createToKeyAndDeleteFromKey()?", "url": "https://github.com/apache/ozone/pull/1004#discussion_r434125451", "createdAt": "2020-06-02T19:27:30Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -88,11 +88,22 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n           omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n     } else if (createToKeyAndDeleteFromKey()) {\n       // If both from and toKeyName are equal do nothing\n-      omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n-      omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n-          newKeyInfo);\n+      if (!toKeyName.equals(fromKeyName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3NjE5NA==", "bodyText": "Yes, the check is there in createToKeyAndDeleteFromKey() and it is redundant. I will remove the check from here and upload again.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r434276194", "createdAt": "2020-06-03T02:38:09Z", "author": {"login": "prashantpogde"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -88,11 +88,22 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n           omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n     } else if (createToKeyAndDeleteFromKey()) {\n       // If both from and toKeyName are equal do nothing\n-      omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n-      omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n-          newKeyInfo);\n+      if (!toKeyName.equals(fromKeyName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNTQ1MQ=="}, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDE4ODEzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOToyODo0N1rOGeA9WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoyMzo1M1rOGfSZNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNjE2OA==", "bodyText": "What does it mean for the fileHandleInfo to be zero? If it is zero, we do not delete the old Id from the keyIdTable?", "url": "https://github.com/apache/ozone/pull/1004#discussion_r434126168", "createdAt": "2020-06-02T19:28:47Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -88,11 +88,22 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n           omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n     } else if (createToKeyAndDeleteFromKey()) {\n       // If both from and toKeyName are equal do nothing\n-      omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n-      omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n-          newKeyInfo);\n+      if (!toKeyName.equals(fromKeyName)) {\n+        omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n+        omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n+            newKeyInfo);\n+        // At this point we can also update the KeyIdTable.\n+        if (newKeyInfo.getFileHandleInfo() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3NjAzNg==", "bodyText": "This means we never created the file handle for this key. The check is there to take care of this case. Eventually we should have file handle for all keys.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r434276036", "createdAt": "2020-06-03T02:37:31Z", "author": {"login": "prashantpogde"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -88,11 +88,22 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n           omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n     } else if (createToKeyAndDeleteFromKey()) {\n       // If both from and toKeyName are equal do nothing\n-      omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n-      omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n-          newKeyInfo);\n+      if (!toKeyName.equals(fromKeyName)) {\n+        omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n+        omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n+            newKeyInfo);\n+        // At this point we can also update the KeyIdTable.\n+        if (newKeyInfo.getFileHandleInfo() != 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNjE2OA=="}, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2MDQwNw==", "bodyText": "Got it, thanks!", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435460407", "createdAt": "2020-06-04T18:23:53Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -88,11 +88,22 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n           omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n     } else if (createToKeyAndDeleteFromKey()) {\n       // If both from and toKeyName are equal do nothing\n-      omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n-      omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n-          newKeyInfo);\n+      if (!toKeyName.equals(fromKeyName)) {\n+        omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n+        omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n+            newKeyInfo);\n+        // At this point we can also update the KeyIdTable.\n+        if (newKeyInfo.getFileHandleInfo() != 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNjE2OA=="}, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjQ5MzgwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OMMetadataManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozMDoyMFrOGfSsdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo0NjozOFrOGgpVZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NTMzMw==", "bodyText": "The Javadoc needs to be updated here. We are not passing the volume and bucket", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435465333", "createdAt": "2020-06-04T18:30:20Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OMMetadataManager.java", "diffHunk": "@@ -103,6 +103,16 @@\n \n   String getOzoneKey(String volume, String bucket, String key);\n \n+  /**\n+   * Given a volume, bucket, return the corresponding DB key.\n+   *\n+   * @param fileHandleInfo - unique keyId that is used by NFS to create a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NDgzOA==", "bodyText": "@hanishakoneru thank you for reviewing the changes.\nYes, updated this.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r436884838", "createdAt": "2020-06-08T17:46:38Z", "author": {"login": "prashantpogde"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OMMetadataManager.java", "diffHunk": "@@ -103,6 +103,16 @@\n \n   String getOzoneKey(String volume, String bucket, String key);\n \n+  /**\n+   * Given a volume, bucket, return the corresponding DB key.\n+   *\n+   * @param fileHandleInfo - unique keyId that is used by NFS to create a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NTMzMw=="}, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjU4Mjg4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OmMetadataManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODo1MTowNVrOGfTkww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo0ODo0MFrOGgpaJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ3OTc0Nw==", "bodyText": "Just a thought - should this table be named something else like FileHandle Table to avoid confusing this with Key Table? (It's just a thought. Please feel free to ignore if you think \"KeyId\" is the more appropriate name).", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435479747", "createdAt": "2020-06-04T18:51:05Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OmMetadataManagerImpl.java", "diffHunk": "@@ -118,12 +118,19 @@\n    * |----------------------------------------------------------------------|\n    * |  multipartInfoTable| /volumeName/bucketName/keyName/uploadId ->...   |\n    * |----------------------------------------------------------------------|\n+   * | keyIdTable         | /volumeName/bucketName/keyId -> KeyName         |\n+   * |----------------------------------------------------------------------|\n+   *\n+   * TBD : Renames need to be made keyIdTable aware. Also KeyId based lookups\n+   * should be able to handle any possible race with renames/deletes.\n+   *\n    */\n \n   public static final String USER_TABLE = \"userTable\";\n   public static final String VOLUME_TABLE = \"volumeTable\";\n   public static final String BUCKET_TABLE = \"bucketTable\";\n   public static final String KEY_TABLE = \"keyTable\";\n+  public static final String KEY_ID_TABLE = \"keyIdTable\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NjA1NA==", "bodyText": "If you insist, I will change :)", "url": "https://github.com/apache/ozone/pull/1004#discussion_r436886054", "createdAt": "2020-06-08T17:48:40Z", "author": {"login": "prashantpogde"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OmMetadataManagerImpl.java", "diffHunk": "@@ -118,12 +118,19 @@\n    * |----------------------------------------------------------------------|\n    * |  multipartInfoTable| /volumeName/bucketName/keyName/uploadId ->...   |\n    * |----------------------------------------------------------------------|\n+   * | keyIdTable         | /volumeName/bucketName/keyId -> KeyName         |\n+   * |----------------------------------------------------------------------|\n+   *\n+   * TBD : Renames need to be made keyIdTable aware. Also KeyId based lookups\n+   * should be able to handle any possible race with renames/deletes.\n+   *\n    */\n \n   public static final String USER_TABLE = \"userTable\";\n   public static final String VOLUME_TABLE = \"volumeTable\";\n   public static final String BUCKET_TABLE = \"bucketTable\";\n   public static final String KEY_TABLE = \"keyTable\";\n+  public static final String KEY_ID_TABLE = \"keyIdTable\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ3OTc0Nw=="}, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjYwNzg3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/file/OMDirectoryCreateResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODo1ODozN1rOGfT07g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo0ODo1OFrOGgpa1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4Mzg4Ng==", "bodyText": "OzoneKey is already processed in line 79 (dirKey). That can be reused here.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435483886", "createdAt": "2020-06-04T18:58:37Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/file/OMDirectoryCreateResponse.java", "diffHunk": "@@ -81,6 +81,15 @@ protected void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation, dirKey,\n           dirKeyInfo);\n \n+      // We can also persist the fileHandle to KeyIdTable.\n+      if (dirKeyInfo.getFileHandleInfo() != 0) {\n+        omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKeyIdTableKey(\n+                dirKeyInfo.getFileHandleInfo()),\n+            omMetadataManager.getOzoneKey(dirKeyInfo.getVolumeName(),\n+                dirKeyInfo.getBucketName(),\n+                dirKeyInfo.getKeyName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NjIyOA==", "bodyText": "yup, done.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r436886228", "createdAt": "2020-06-08T17:48:58Z", "author": {"login": "prashantpogde"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/file/OMDirectoryCreateResponse.java", "diffHunk": "@@ -81,6 +81,15 @@ protected void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation, dirKey,\n           dirKeyInfo);\n \n+      // We can also persist the fileHandle to KeyIdTable.\n+      if (dirKeyInfo.getFileHandleInfo() != 0) {\n+        omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKeyIdTableKey(\n+                dirKeyInfo.getFileHandleInfo()),\n+            omMetadataManager.getOzoneKey(dirKeyInfo.getVolumeName(),\n+                dirKeyInfo.getBucketName(),\n+                dirKeyInfo.getKeyName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4Mzg4Ng=="}, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjY0NjIxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyCreateResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToxMDozMVrOGfUNdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo0OTo1MVrOGgpcwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5MDE2NQ==", "bodyText": "This keyId be added when the key is actually getting committed i.e. in OMKeyCommitResponse#validateAndUpdateCache()? Otherwise, KeyID could point to a key that does not exist.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435490165", "createdAt": "2020-06-04T19:10:31Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyCreateResponse.java", "diffHunk": "@@ -87,6 +87,15 @@ protected void addToDBBatch(OMMetadataManager omMetadataManager,\n         omKeyInfo.getBucketName(), omKeyInfo.getKeyName(), openKeySessionID);\n     omMetadataManager.getOpenKeyTable().putWithBatch(batchOperation,\n         openKey, omKeyInfo);\n+\n+    // We can also persist the fileHandle to KeyIdTable.\n+    if (omKeyInfo.getFileHandleInfo() != 0) {\n+      omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+          omMetadataManager.getOzoneKeyIdTableKey(\n+              omKeyInfo.getFileHandleInfo()),\n+          omMetadataManager.getOzoneKey(omKeyInfo.getVolumeName(),\n+              omKeyInfo.getBucketName(), omKeyInfo.getKeyName()));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NjcyMQ==", "bodyText": "yes, moved to OmKeyCommitResponse.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r436886721", "createdAt": "2020-06-08T17:49:51Z", "author": {"login": "prashantpogde"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyCreateResponse.java", "diffHunk": "@@ -87,6 +87,15 @@ protected void addToDBBatch(OMMetadataManager omMetadataManager,\n         omKeyInfo.getBucketName(), omKeyInfo.getKeyName(), openKeySessionID);\n     omMetadataManager.getOpenKeyTable().putWithBatch(batchOperation,\n         openKey, omKeyInfo);\n+\n+    // We can also persist the fileHandle to KeyIdTable.\n+    if (omKeyInfo.getFileHandleInfo() != 0) {\n+      omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+          omMetadataManager.getOzoneKeyIdTableKey(\n+              omKeyInfo.getFileHandleInfo()),\n+          omMetadataManager.getOzoneKey(omKeyInfo.getVolumeName(),\n+              omKeyInfo.getBucketName(), omKeyInfo.getKeyName()));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5MDE2NQ=="}, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjY5NjIwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToyNjoxNlrOGfUs5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo1MjozNFrOGgpi9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5ODIxNA==", "bodyText": "We are putting and deleting the same key from KeyID Table.\nThe delete operation is not required here as keyId -> fromKey will be overridden with keyId -> toKey.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435498214", "createdAt": "2020-06-04T19:26:16Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -93,6 +93,15 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n           omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n           newKeyInfo);\n+      // At this point we can also update the KeyIdTable.\n+      if (newKeyInfo.getFileHandleInfo() != 0) {\n+        omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKeyIdTableKey(\n+                newKeyInfo.getFileHandleInfo()), toKeyName);\n+        omMetadataManager.getKeyIdTable().deleteWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKeyIdTableKey(\n+                newKeyInfo.getFileHandleInfo()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4ODMwOQ==", "bodyText": "yup, I have changed this.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r436888309", "createdAt": "2020-06-08T17:52:34Z", "author": {"login": "prashantpogde"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -93,6 +93,15 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n           omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n           newKeyInfo);\n+      // At this point we can also update the KeyIdTable.\n+      if (newKeyInfo.getFileHandleInfo() != 0) {\n+        omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKeyIdTableKey(\n+                newKeyInfo.getFileHandleInfo()), toKeyName);\n+        omMetadataManager.getKeyIdTable().deleteWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKeyIdTableKey(\n+                newKeyInfo.getFileHandleInfo()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5ODIxNA=="}, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjcwNjQ0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToyOTo0MVrOGfUzgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMjoxMDoxMlrOGhia-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5OTkwNg==", "bodyText": "In the if case (deleteFromKeyOnly()) - toKey already exists but fromKey is created as part of replay. When the fromKey is being created, it would update KeyID to fromKey value. So KeyId Table should be updated with correct value (toKey) for this condition also.\n@bharatviswa504  is working on replay optimization after which we would not require to take care of replay scenarios. But let's fix it for now anyway till the old replay code is still in effect.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435499906", "createdAt": "2020-06-04T19:29:41Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -93,6 +93,15 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5NDgyMQ==", "bodyText": "Not sure, if we need to do this.\n\nIn case of replay its only deleting fromKey, in this case we do not have the toKeyName available, its NULL,\nIn the first tie, it seems the sequence would be :\n\nupdate mapping id <-> toKeyname\nadd toKey\ndelete FromKey\n\n\n\nSo in case of replay if the newkey is already there then we should also have the id-<->keyname mapping updated.\nI also noticed that the sequence of delete and newkey addition was reversed before this change. Not sure how this worked.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r436894821", "createdAt": "2020-06-08T18:03:32Z", "author": {"login": "prashantpogde"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -93,6 +93,15 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5OTkwNg=="}, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcyNjA4Ng==", "bodyText": "Let me elaborate on the scenario I am talking about:\nTrxn n1 : Create Key - key1\nTrxn n2 : Commit Key - key1 (adds n1 -> key1 entry to KeyID table)\nTrxn n3 : Rename key1 -> key2 (update n1 -> key2 in KeyID table)\nNow lets say we replay transactions from n1.\nReplay Trxn n1 : Create Key - key1 (key1 does not exist so this transaction is replayed)\nReplay Trxn n2 : Commit Key - key1 (this again updates n1 -> key1 in KeyID table)\nReplay Trxn n3 : Since key2 exists, we figure out this is replay and execute\ndeleteFromKeyOnly() logic in addToBatch.\nSo finally after replay, we have n1 in KeyID table pointing to key1 instead of key2.\n\nI also noticed that the sequence of delete and newkey addition was reversed before this change. Not sure how this worked.\n\nThe order does not matter here as they are part of batch operation.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r437726086", "createdAt": "2020-06-09T21:13:24Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -93,6 +93,15 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5OTkwNg=="}, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgyMDE1Mw==", "bodyText": "Thanks @prashantpogde for the offline discussion.\nIt will be lot of extra work updating the keyID in deleteFromKeyOnly case also as we don't send the toKey name in this case. It is safe to go ahead with this approach as Bharat's replay optimization - HDDS-3354 will take care of this.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r437820153", "createdAt": "2020-06-10T02:10:12Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -93,6 +93,15 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5OTkwNg=="}, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjczMTAxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3InitiateMultipartUploadRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTozNzo1OVrOGfVDZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODowNzoyNFrOGgqE3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUwMzk3Mg==", "bodyText": "FileHandleInfo in OmMultipartKeyInfo object is not used anywhere.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435503972", "createdAt": "2020-06-04T19:37:59Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3InitiateMultipartUploadRequest.java", "diffHunk": "@@ -156,6 +156,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           .setReplicationFactor(keyArgs.getFactor())\n           .setObjectID(objectID)\n           .setUpdateID(transactionLogIndex)\n+          .setFileHandleInfo(objectID)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5Njk4OQ==", "bodyText": "Let us keep this for now. If it becomes redundant, I will remove this with subsequent PRs.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r436896989", "createdAt": "2020-06-08T18:07:24Z", "author": {"login": "prashantpogde"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3InitiateMultipartUploadRequest.java", "diffHunk": "@@ -156,6 +156,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           .setReplicationFactor(keyArgs.getFactor())\n           .setObjectID(objectID)\n           .setUpdateID(transactionLogIndex)\n+          .setFileHandleInfo(objectID)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUwMzk3Mg=="}, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjc2NTk4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/s3/multipart/S3InitiateMultipartUploadResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTo0ODozOVrOGfVZvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODowNzo0NVrOGgqFoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUwOTY5Mg==", "bodyText": "This keyId be added when the key is actually getting committed i.e. in S3MultipartUploadComplete#validateAndUpdateCache()? Otherwise, KeyID could point to a key that does not exist.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435509692", "createdAt": "2020-06-04T19:48:39Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/s3/multipart/S3InitiateMultipartUploadResponse.java", "diffHunk": "@@ -69,6 +69,16 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n         multipartKey, omKeyInfo);\n     omMetadataManager.getMultipartInfoTable().putWithBatch(batchOperation,\n         multipartKey, omMultipartKeyInfo);\n+\n+\n+    if (omKeyInfo.getFileHandleInfo() != 0) {\n+      omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+          omMetadataManager.getOzoneKeyIdTableKey(\n+              omKeyInfo.getFileHandleInfo()),\n+          omMetadataManager.getOzoneKey(omKeyInfo.getVolumeName(),\n+              omKeyInfo.getBucketName(),\n+              omKeyInfo.getKeyName()));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5NzE4NQ==", "bodyText": "Yup, Updated the changes.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r436897185", "createdAt": "2020-06-08T18:07:45Z", "author": {"login": "prashantpogde"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/s3/multipart/S3InitiateMultipartUploadResponse.java", "diffHunk": "@@ -69,6 +69,16 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n         multipartKey, omKeyInfo);\n     omMetadataManager.getMultipartInfoTable().putWithBatch(batchOperation,\n         multipartKey, omMultipartKeyInfo);\n+\n+\n+    if (omKeyInfo.getFileHandleInfo() != 0) {\n+      omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+          omMetadataManager.getOzoneKeyIdTableKey(\n+              omKeyInfo.getFileHandleInfo()),\n+          omMetadataManager.getOzoneKey(omKeyInfo.getVolumeName(),\n+              omKeyInfo.getBucketName(),\n+              omKeyInfo.getKeyName()));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUwOTY5Mg=="}, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4211, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}