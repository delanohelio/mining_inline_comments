{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NTUxOTEy", "number": 663, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMDo1NDoyMlrODnTS1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMDo1NDoyMlrODnTS1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTM3MTcyOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerStateManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMDo1NDoyMlrOF1OFAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0NzoyMlrOF1VmnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM0OTUwNw==", "bodyText": "If ozone.scm.pipeline.creation.auto.factor.one is not disabled even ratis with factor one pipeline creation is taken care by BackGroundPipelineCreator.", "url": "https://github.com/apache/ozone/pull/663#discussion_r391349507", "createdAt": "2020-03-12T00:54:22Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerStateManager.java", "diffHunk": "@@ -247,23 +247,29 @@ ContainerInfo allocateContainer(final PipelineManager pipelineManager,\n       final HddsProtos.ReplicationType type,\n       final HddsProtos.ReplicationFactor replicationFactor, final String owner)\n       throws IOException {\n-\n+    final List<Pipeline> pipelines = pipelineManager\n+        .getPipelines(type, replicationFactor, Pipeline.PipelineState.OPEN);\n     Pipeline pipeline;\n-    try {\n-      // TODO: #CLUTIL remove creation logic when all replication types and\n-      // factors are handled by pipeline creator job.\n-      pipeline = pipelineManager.createPipeline(type, replicationFactor);\n-      pipelineManager.waitPipelineReady(pipeline.getId(), 0);\n-    } catch (IOException e) {\n-      final List<Pipeline> pipelines = pipelineManager\n-          .getPipelines(type, replicationFactor, Pipeline.PipelineState.OPEN);\n-      if (pipelines.isEmpty()) {\n-        throw new IOException(\"Could not allocate container. Cannot get any\" +\n-            \" matching pipeline for Type:\" + type +\n-            \", Factor:\" + replicationFactor + \", State:PipelineState.OPEN\");\n-      }\n+\n+    if (!pipelines.isEmpty() && replicationFactor == ReplicationFactor.THREE\n+        && type == ReplicationType.RATIS) {\n+      // Let background create Ratis THREE pipelines.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab3f2a047e424d51f63e77d3a4da190f14344d55"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM0OTY4Nw==", "bodyText": "So, shall we need to check that config, if enabled and let factor 1 also be skipped here?", "url": "https://github.com/apache/ozone/pull/663#discussion_r391349687", "createdAt": "2020-03-12T00:55:11Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerStateManager.java", "diffHunk": "@@ -247,23 +247,29 @@ ContainerInfo allocateContainer(final PipelineManager pipelineManager,\n       final HddsProtos.ReplicationType type,\n       final HddsProtos.ReplicationFactor replicationFactor, final String owner)\n       throws IOException {\n-\n+    final List<Pipeline> pipelines = pipelineManager\n+        .getPipelines(type, replicationFactor, Pipeline.PipelineState.OPEN);\n     Pipeline pipeline;\n-    try {\n-      // TODO: #CLUTIL remove creation logic when all replication types and\n-      // factors are handled by pipeline creator job.\n-      pipeline = pipelineManager.createPipeline(type, replicationFactor);\n-      pipelineManager.waitPipelineReady(pipeline.getId(), 0);\n-    } catch (IOException e) {\n-      final List<Pipeline> pipelines = pipelineManager\n-          .getPipelines(type, replicationFactor, Pipeline.PipelineState.OPEN);\n-      if (pipelines.isEmpty()) {\n-        throw new IOException(\"Could not allocate container. Cannot get any\" +\n-            \" matching pipeline for Type:\" + type +\n-            \", Factor:\" + replicationFactor + \", State:PipelineState.OPEN\");\n-      }\n+\n+    if (!pipelines.isEmpty() && replicationFactor == ReplicationFactor.THREE\n+        && type == ReplicationType.RATIS) {\n+      // Let background create Ratis THREE pipelines.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM0OTUwNw=="}, "originalCommit": {"oid": "ab3f2a047e424d51f63e77d3a4da190f14344d55"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3Mjc5Ng==", "bodyText": "Yea, that's a good point. I update it.", "url": "https://github.com/apache/ozone/pull/663#discussion_r391472796", "createdAt": "2020-03-12T08:47:22Z", "author": {"login": "timmylicheng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/ContainerStateManager.java", "diffHunk": "@@ -247,23 +247,29 @@ ContainerInfo allocateContainer(final PipelineManager pipelineManager,\n       final HddsProtos.ReplicationType type,\n       final HddsProtos.ReplicationFactor replicationFactor, final String owner)\n       throws IOException {\n-\n+    final List<Pipeline> pipelines = pipelineManager\n+        .getPipelines(type, replicationFactor, Pipeline.PipelineState.OPEN);\n     Pipeline pipeline;\n-    try {\n-      // TODO: #CLUTIL remove creation logic when all replication types and\n-      // factors are handled by pipeline creator job.\n-      pipeline = pipelineManager.createPipeline(type, replicationFactor);\n-      pipelineManager.waitPipelineReady(pipeline.getId(), 0);\n-    } catch (IOException e) {\n-      final List<Pipeline> pipelines = pipelineManager\n-          .getPipelines(type, replicationFactor, Pipeline.PipelineState.OPEN);\n-      if (pipelines.isEmpty()) {\n-        throw new IOException(\"Could not allocate container. Cannot get any\" +\n-            \" matching pipeline for Type:\" + type +\n-            \", Factor:\" + replicationFactor + \", State:PipelineState.OPEN\");\n-      }\n+\n+    if (!pipelines.isEmpty() && replicationFactor == ReplicationFactor.THREE\n+        && type == ReplicationType.RATIS) {\n+      // Let background create Ratis THREE pipelines.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM0OTUwNw=="}, "originalCommit": {"oid": "ab3f2a047e424d51f63e77d3a4da190f14344d55"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4814, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}