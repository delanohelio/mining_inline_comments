{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MzkzMDQ4", "number": 1244, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjowNjowMFrOERR5gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjowOTozMFrOERR7Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTU0NDk5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjowNjowMFrOG16FQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjowNjowMFrOG16FQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE3OTMzMQ==", "bodyText": "Please remove the extra blank line.", "url": "https://github.com/apache/ozone/pull/1244#discussion_r459179331", "createdAt": "2020-07-23T02:06:00Z", "author": {"login": "maobaolong"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -1911,10 +1912,45 @@ public void testAbortUploadFail() throws Exception {\n     volume.createBucket(bucketName);\n     OzoneBucket bucket = volume.getBucket(bucketName);\n \n-    OzoneTestUtils.expectOmException(ResultCodes.NO_SUCH_MULTIPART_UPLOAD_ERROR,\n+    OzoneTestUtils.expectOmException(NO_SUCH_MULTIPART_UPLOAD_ERROR,\n         () -> bucket.abortMultipartUpload(keyName, \"random\"));\n   }\n \n+  @Test\n+  public void testAbortUploadFailWithInProgressPartUpload() throws Exception {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    String keyName = UUID.randomUUID().toString();\n+\n+    store.createVolume(volumeName);\n+    OzoneVolume volume = store.getVolume(volumeName);\n+    volume.createBucket(bucketName);\n+    OzoneBucket bucket = volume.getBucket(bucketName);\n+\n+    OmMultipartInfo omMultipartInfo = bucket.initiateMultipartUpload(keyName,\n+        STAND_ALONE, ONE);\n+\n+    Assert.assertNotNull(omMultipartInfo.getUploadID());\n+\n+    // Do not close output stream.\n+    byte[] data = \"data\".getBytes(UTF_8);\n+    OzoneOutputStream ozoneOutputStream = bucket.createMultipartKey(keyName,\n+        data.length, 1, omMultipartInfo.getUploadID());\n+    ozoneOutputStream.write(data, 0, data.length);\n+\n+    // Abort before completing part upload.\n+    bucket.abortMultipartUpload(keyName, omMultipartInfo.getUploadID());\n+\n+    try {\n+      ozoneOutputStream.close();\n+    } catch (IOException ex) {\n+      assertTrue(ex instanceof OMException);\n+      assertEquals(NO_SUCH_MULTIPART_UPLOAD_ERROR,\n+          ((OMException) ex).getResult());\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9f82671a671e44caf53263f3f80b0d6907e3354"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTU0OTY3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjowOTozMFrOG16H_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjowOTozMFrOG16H_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4MDAyOA==", "bodyText": "Please add a fail() here", "url": "https://github.com/apache/ozone/pull/1244#discussion_r459180028", "createdAt": "2020-07-23T02:09:30Z", "author": {"login": "maobaolong"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -1911,10 +1912,45 @@ public void testAbortUploadFail() throws Exception {\n     volume.createBucket(bucketName);\n     OzoneBucket bucket = volume.getBucket(bucketName);\n \n-    OzoneTestUtils.expectOmException(ResultCodes.NO_SUCH_MULTIPART_UPLOAD_ERROR,\n+    OzoneTestUtils.expectOmException(NO_SUCH_MULTIPART_UPLOAD_ERROR,\n         () -> bucket.abortMultipartUpload(keyName, \"random\"));\n   }\n \n+  @Test\n+  public void testAbortUploadFailWithInProgressPartUpload() throws Exception {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    String keyName = UUID.randomUUID().toString();\n+\n+    store.createVolume(volumeName);\n+    OzoneVolume volume = store.getVolume(volumeName);\n+    volume.createBucket(bucketName);\n+    OzoneBucket bucket = volume.getBucket(bucketName);\n+\n+    OmMultipartInfo omMultipartInfo = bucket.initiateMultipartUpload(keyName,\n+        STAND_ALONE, ONE);\n+\n+    Assert.assertNotNull(omMultipartInfo.getUploadID());\n+\n+    // Do not close output stream.\n+    byte[] data = \"data\".getBytes(UTF_8);\n+    OzoneOutputStream ozoneOutputStream = bucket.createMultipartKey(keyName,\n+        data.length, 1, omMultipartInfo.getUploadID());\n+    ozoneOutputStream.write(data, 0, data.length);\n+\n+    // Abort before completing part upload.\n+    bucket.abortMultipartUpload(keyName, omMultipartInfo.getUploadID());\n+\n+    try {\n+      ozoneOutputStream.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9f82671a671e44caf53263f3f80b0d6907e3354"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4024, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}