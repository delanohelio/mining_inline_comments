{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2MTcyNzg2", "number": 1464, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNToxNTowOFrOEphbDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNToxNTowOFrOEphbDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTc0NjcwOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/utils/RatisVersionInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNToxNTowOFrOHbPRUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNToxNTowOFrOHbPRUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyMzc5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LoggerFactory.getLogger(getClass()).warn(\"Could not read '\" +\n          \n          \n            \n                      RATIS_VERSION_PROPERTIES, ex);\n          \n          \n            \n                  LoggerFactory.getLogger(getClass()).warn(\"Could not read \" +\n          \n          \n            \n                      RATIS_VERSION_PROPERTIES, ex);", "url": "https://github.com/apache/ozone/pull/1464#discussion_r498323795", "createdAt": "2020-10-01T15:15:08Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/utils/RatisVersionInfo.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.utils;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Properties;\n+\n+import org.apache.hadoop.util.ThreadUtil;\n+\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This class returns build information about Ratis projects.\n+ */\n+public class RatisVersionInfo {\n+\n+  private static final String RATIS_VERSION_PROPERTIES =\n+      \"ratis-version.properties\";\n+\n+  private final Properties info = new Properties();\n+\n+  public RatisVersionInfo() {\n+    try (InputStream is = ThreadUtil.getResourceAsStream(\n+        getClass().getClassLoader(),\n+        RATIS_VERSION_PROPERTIES)) {\n+      info.load(is);\n+    } catch (IOException ex) {\n+      LoggerFactory.getLogger(getClass()).warn(\"Could not read '\" +\n+          RATIS_VERSION_PROPERTIES, ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32a14068799573b02b55549c566964804033d597"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4958, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}