{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTAyNjAy", "number": 1737, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQyMjo0NTozOVrOFJMYOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwNTozODowNVrOFN_kKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTg0MzE0OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/transport/server/ratis/XceiverServerRatis.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQyMjo0NTozOVrOILfV6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNDozODo0NlrOIMdP_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkxODc2MA==", "bodyText": "This part of a change is contained in master (#1728)", "url": "https://github.com/apache/ozone/pull/1737#discussion_r548918760", "createdAt": "2020-12-25T22:45:39Z", "author": {"login": "amaliujia"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/transport/server/ratis/XceiverServerRatis.java", "diffHunk": "@@ -516,6 +515,15 @@ public RaftServer getServer() {\n     return server;\n   }\n \n+  public RaftServer.Division getServerDivision() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee5e166c956b9bf698102c6ae4ad5ec36ffe7cd6"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzMzA1NA==", "bodyText": "I see. so this is from the cherry picked commit from master.", "url": "https://github.com/apache/ozone/pull/1737#discussion_r549933054", "createdAt": "2020-12-30T04:38:46Z", "author": {"login": "amaliujia"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/transport/server/ratis/XceiverServerRatis.java", "diffHunk": "@@ -516,6 +515,15 @@ public RaftServer getServer() {\n     return server;\n   }\n \n+  public RaftServer.Division getServerDivision() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkxODc2MA=="}, "originalCommit": {"oid": "ee5e166c956b9bf698102c6ae4ad5ec36ffe7cd6"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTg0ODY4OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/ha/SCMStateMachine.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQyMjo1Mzo0MVrOILfYPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwMzo1Mjo1OVrOINk5xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkxOTM1OQ==", "bodyText": "Will it make sense to use SCMContext to get current term?", "url": "https://github.com/apache/ozone/pull/1737#discussion_r548919359", "createdAt": "2020-12-25T22:53:41Z", "author": {"login": "amaliujia"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/ha/SCMStateMachine.java", "diffHunk": "@@ -89,4 +103,27 @@ private Message process(final SCMRatisRequest request)\n     }\n   }\n \n+  @Override\n+  public void notifyNotLeader(Collection<TransactionContext> pendingEntries) {\n+    LOG.info(\"current leader SCM steps down.\");\n+    scm.getScmContext().updateIsLeaderAndTerm(false, 0);\n+  }\n+\n+  @Override\n+  public void notifyLeaderChanged(RaftGroupMemberId groupMemberId,\n+                                  RaftPeerId newLeaderId) {\n+    if (!groupMemberId.getPeerId().equals(newLeaderId)) {\n+      LOG.info(\"leader changed, yet current SCM is still follower.\");\n+      return;\n+    }\n+\n+    long term = scm.getScmHAManager()\n+        .getRatisServer()\n+        .getDivision()\n+        .getInfo()\n+        .getCurrentTerm();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee5e166c956b9bf698102c6ae4ad5ec36ffe7cd6"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEwNzAxNA==", "bodyText": "We use SCMContext to encapsulate raft related info, so that components in SCM won't need to hold a reference of SCMHAManager or SCMRatisServer.\nFor non-HA mode or unit test, we just need an empty SCMContext, instead of a mocked SCMHAManager or a mocked SCMRatisServer.", "url": "https://github.com/apache/ozone/pull/1737#discussion_r551107014", "createdAt": "2021-01-04T03:52:59Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/ha/SCMStateMachine.java", "diffHunk": "@@ -89,4 +103,27 @@ private Message process(final SCMRatisRequest request)\n     }\n   }\n \n+  @Override\n+  public void notifyNotLeader(Collection<TransactionContext> pendingEntries) {\n+    LOG.info(\"current leader SCM steps down.\");\n+    scm.getScmContext().updateIsLeaderAndTerm(false, 0);\n+  }\n+\n+  @Override\n+  public void notifyLeaderChanged(RaftGroupMemberId groupMemberId,\n+                                  RaftPeerId newLeaderId) {\n+    if (!groupMemberId.getPeerId().equals(newLeaderId)) {\n+      LOG.info(\"leader changed, yet current SCM is still follower.\");\n+      return;\n+    }\n+\n+    long term = scm.getScmHAManager()\n+        .getRatisServer()\n+        .getDivision()\n+        .getInfo()\n+        .getCurrentTerm();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkxOTM1OQ=="}, "originalCommit": {"oid": "ee5e166c956b9bf698102c6ae4ad5ec36ffe7cd6"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NTg4MjU0OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/block/SCMBlockDeletingService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQwMzowMDozMVrOINUVOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwMzo1Mzo1N1rOINk6rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDgzNTUxNA==", "bodyText": "Could we also catch the NotLeaderException like other places does?  There are some other places we don't catch this exception that is swallowed by IOException.\n        } catch (NotLeaderException nle) {\n\n        }  catch (IOException e) {\n          // We may tolerate a number of failures for sometime\n          // but if it continues to fail, at some point we need to raise\n          // an exception and probably fail the SCM ? At present, it simply\n          // continues to retry the scanning.\n          LOG.error(\"Failed to get block deletion transactions from delTX log\",\n              e);\n          return EmptyTaskResult.newResult();\n        }", "url": "https://github.com/apache/ozone/pull/1737#discussion_r550835514", "createdAt": "2021-01-02T03:00:31Z", "author": {"login": "linyiqun"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/block/SCMBlockDeletingService.java", "diffHunk": "@@ -146,9 +151,10 @@ public EmptyTaskResult call() throws Exception {\n               // We should stop caching new commands if num of un-processed\n               // command is bigger than a limit, e.g 50. In case datanode goes\n               // offline for sometime, the cached commands be flooded.\n+              SCMCommand<?> command = new DeleteBlocksCommand(dnTXs);\n+              command.setTerm(scmContext.getTerm());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee5e166c956b9bf698102c6ae4ad5ec36ffe7cd6"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEwNzI0NA==", "bodyText": "Sure, I will fix them in the next patch.", "url": "https://github.com/apache/ozone/pull/1737#discussion_r551107244", "createdAt": "2021-01-04T03:53:57Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/block/SCMBlockDeletingService.java", "diffHunk": "@@ -146,9 +151,10 @@ public EmptyTaskResult call() throws Exception {\n               // We should stop caching new commands if num of un-processed\n               // command is bigger than a limit, e.g 50. In case datanode goes\n               // offline for sometime, the cached commands be flooded.\n+              SCMCommand<?> command = new DeleteBlocksCommand(dnTXs);\n+              command.setTerm(scmContext.getTerm());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDgzNTUxNA=="}, "originalCommit": {"oid": "ee5e166c956b9bf698102c6ae4ad5ec36ffe7cd6"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMjE3MjU3OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/ha/TestSCMContext.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwNTozODowNVrOISgQJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xN1QxNjoxMzoxNlrOIVTBYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI3MzcwMg==", "bodyText": "Nit: will it better to replace constructor by a builder for creating instances of SCMContext? It could improve readability when constructing a SCMContext. E.g. setting as a follower for SCMContext versus setting as a leader, a setLeader(true/false) is more understandable. Also using constructor with multiple parameters  in multiple places is a signal to use builder pattern.", "url": "https://github.com/apache/ozone/pull/1737#discussion_r556273702", "createdAt": "2021-01-13T05:38:05Z", "author": {"login": "amaliujia"}, "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/ha/TestSCMContext.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.ha;\n+\n+import org.apache.hadoop.hdds.scm.safemode.SCMSafeModeManager.SafeModeStatus;\n+import org.apache.ratis.protocol.exceptions.NotLeaderException;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.fail;\n+\n+/**\n+ * Test for SCMContext.\n+ */\n+public class TestSCMContext {\n+  @Test\n+  public void testRaftOperations() {\n+    // start as follower\n+    SCMContext scmContext = new SCMContext(false, 0, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b38236c86bcbd16cb41bdf35281c229542b2fc94"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAxNTUyMQ==", "bodyText": "Agree. Will fix in #1784.", "url": "https://github.com/apache/ozone/pull/1737#discussion_r557015521", "createdAt": "2021-01-14T03:08:50Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/ha/TestSCMContext.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.ha;\n+\n+import org.apache.hadoop.hdds.scm.safemode.SCMSafeModeManager.SafeModeStatus;\n+import org.apache.ratis.protocol.exceptions.NotLeaderException;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.fail;\n+\n+/**\n+ * Test for SCMContext.\n+ */\n+public class TestSCMContext {\n+  @Test\n+  public void testRaftOperations() {\n+    // start as follower\n+    SCMContext scmContext = new SCMContext(false, 0, null, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI3MzcwMg=="}, "originalCommit": {"oid": "b38236c86bcbd16cb41bdf35281c229542b2fc94"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODA4MDI3MQ==", "bodyText": "i agree.", "url": "https://github.com/apache/ozone/pull/1737#discussion_r558080271", "createdAt": "2021-01-15T09:01:26Z", "author": {"login": "bshashikant"}, "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/ha/TestSCMContext.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.ha;\n+\n+import org.apache.hadoop.hdds.scm.safemode.SCMSafeModeManager.SafeModeStatus;\n+import org.apache.ratis.protocol.exceptions.NotLeaderException;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.fail;\n+\n+/**\n+ * Test for SCMContext.\n+ */\n+public class TestSCMContext {\n+  @Test\n+  public void testRaftOperations() {\n+    // start as follower\n+    SCMContext scmContext = new SCMContext(false, 0, null, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI3MzcwMg=="}, "originalCommit": {"oid": "b38236c86bcbd16cb41bdf35281c229542b2fc94"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTIwMjY1Nw==", "bodyText": "If you have reviewed HDDS-4295. Add SCMServiceManager to SCM HA, please ignore this PR, since the first 4 commits of SCMServiceManager are exactly from this PR.\nbtw, I have added a builder for SCMContext in the latest commit of SCMServiceManager.", "url": "https://github.com/apache/ozone/pull/1737#discussion_r559202657", "createdAt": "2021-01-17T16:13:16Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/hdds/scm/ha/TestSCMContext.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.ha;\n+\n+import org.apache.hadoop.hdds.scm.safemode.SCMSafeModeManager.SafeModeStatus;\n+import org.apache.ratis.protocol.exceptions.NotLeaderException;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.fail;\n+\n+/**\n+ * Test for SCMContext.\n+ */\n+public class TestSCMContext {\n+  @Test\n+  public void testRaftOperations() {\n+    // start as follower\n+    SCMContext scmContext = new SCMContext(false, 0, null, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI3MzcwMg=="}, "originalCommit": {"oid": "b38236c86bcbd16cb41bdf35281c229542b2fc94"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4487, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}