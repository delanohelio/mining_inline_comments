{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4OTIxMTY3", "number": 1274, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTozOTozMFrOETmzlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTowMDoxMlrOEo795Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTk0MTk2OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/ScmConfigKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTozOTozMFrOG5bwWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTozOTozMFrOG5bwWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3Njc2MA==", "bodyText": "Should be added to ozone-default.xml, too (indicated by failure of TestOzoneConfigurationFields).", "url": "https://github.com/apache/ozone/pull/1274#discussion_r462876760", "createdAt": "2020-07-30T09:39:30Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/ScmConfigKeys.java", "diffHunk": "@@ -307,6 +307,10 @@\n       OZONE_SCM_KEY_VALUE_CONTAINER_DELETION_CHOOSING_POLICY =\n       \"ozone.scm.keyvalue.container.deletion-choosing.policy\";\n \n+  public static final String OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK =\n+      \"ozone.scm.pipeline.per.raft.log.disk\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05dad8bf4fcf8cc56fac9acd837f69e95939cc45"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTk4NTk0OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/main/resources/ozone-default.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo1MjoxMVrOG5cL7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo1MjoxMVrOG5cL7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4MzgyMQ==", "bodyText": "Shouldn't this be same as OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK_DEFAULT?", "url": "https://github.com/apache/ozone/pull/1274#discussion_r462883821", "createdAt": "2020-07-30T09:52:11Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/common/src/main/resources/ozone-default.xml", "diffHunk": "@@ -821,6 +821,13 @@\n     <description>Number of containers per owner per disk in a pipeline.\n     </description>\n   </property>\n+  <property>\n+    <name>ozone.scm.pipeline.per.raft.log.disk</name>\n+    <value>3</value>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a656dc79a01439a1dc00e7f5b30f9caa8f468b9f"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTcyOTc4OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/DatanodeInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoxOTowMFrOHZIQzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoxOTowMFrOHZIQzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMTgyMg==", "bodyText": "Rename suggestion: getMetadataVolumeCount()", "url": "https://github.com/apache/ozone/pull/1274#discussion_r496111822", "createdAt": "2020-09-28T17:19:00Z", "author": {"login": "nandakumar131"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/DatanodeInfo.java", "diffHunk": "@@ -121,6 +143,19 @@ public int getHealthyVolumeCount() {\n     }\n   }\n \n+  /**\n+   * Returns count of healthy raft log volumes reported from datanode.\n+   * @return count of healthy raft log volumes\n+   */\n+  public int getRaftLogVolumeCount() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddc28746bc31fcd52d3f8302e3f31c7e8bf1caa"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTgzMDUwOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo0Njo0MFrOHZJOiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzo1Mzo0MFrOHaRfeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyNzYyNA==", "bodyText": "Will this work in case of heterogeneous datanodes, where one datanode has 1 Raft log disk with 2 data disk and the other datanode has 5 Raft log disk with 10 data disk?\nAccording to the current logic getOpenContainerCountPerPipeline will return 10, if numContainerPerVolume and numPipelinesPerRaftLogDisk are set to 2.", "url": "https://github.com/apache/ozone/pull/1274#discussion_r496127624", "createdAt": "2020-09-28T17:46:40Z", "author": {"login": "nandakumar131"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -101,12 +103,23 @@ public SCMContainerManager(\n     this.numContainerPerVolume = conf\n         .getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT,\n             ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT_DEFAULT);\n+    this.numPipelinesPerRaftLogDisk = conf\n+        .getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK,\n+            ScmConfigKeys.OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK_DEFAULT);\n \n     loadExistingContainers();\n \n     scmContainerManagerMetrics = SCMContainerManagerMetrics.create();\n   }\n \n+  private int getOpenContainerCountPerPipeline(Pipeline pipeline) {\n+    int totalContainerCountPerDn = numContainerPerVolume *\n+        pipelineManager.getNumHealthyVolumes(pipeline);\n+    int maxPipelineCountPerDn = pipelineManager.maxPipelineLimit(pipeline);\n+    return (int) Math.ceil(\n+        ((double) totalContainerCountPerDn / maxPipelineCountPerDn));\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddc28746bc31fcd52d3f8302e3f31c7e8bf1caa"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM2MTQwMA==", "bodyText": "might need change pipeline placement policy to make sure that only allocating pipelines on homogeneous machiens.\nIt one pipeline connects a strong DN and weak DN, its open container number will be volumeNumOfStrongDN * 3 / pipelineNumOfWeakDN.\uff0cpipeline on the same DN may not be able to evenly distribute open containers of that DN.", "url": "https://github.com/apache/ozone/pull/1274#discussion_r496361400", "createdAt": "2020-09-29T03:48:42Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -101,12 +103,23 @@ public SCMContainerManager(\n     this.numContainerPerVolume = conf\n         .getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT,\n             ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT_DEFAULT);\n+    this.numPipelinesPerRaftLogDisk = conf\n+        .getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK,\n+            ScmConfigKeys.OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK_DEFAULT);\n \n     loadExistingContainers();\n \n     scmContainerManagerMetrics = SCMContainerManagerMetrics.create();\n   }\n \n+  private int getOpenContainerCountPerPipeline(Pipeline pipeline) {\n+    int totalContainerCountPerDn = numContainerPerVolume *\n+        pipelineManager.getNumHealthyVolumes(pipeline);\n+    int maxPipelineCountPerDn = pipelineManager.maxPipelineLimit(pipeline);\n+    return (int) Math.ceil(\n+        ((double) totalContainerCountPerDn / maxPipelineCountPerDn));\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyNzYyNA=="}, "originalCommit": {"oid": "3ddc28746bc31fcd52d3f8302e3f31c7e8bf1caa"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM5NDA3Ng==", "bodyText": "I agree with @GlenGeng here. The pipeline placement should choose homogeneous datanodes. The choice being made here, have many containers open on a minimal set of pipelines that we can have out of the set of datanodes in the pipelines.", "url": "https://github.com/apache/ozone/pull/1274#discussion_r496394076", "createdAt": "2020-09-29T04:48:37Z", "author": {"login": "bshashikant"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -101,12 +103,23 @@ public SCMContainerManager(\n     this.numContainerPerVolume = conf\n         .getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT,\n             ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT_DEFAULT);\n+    this.numPipelinesPerRaftLogDisk = conf\n+        .getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK,\n+            ScmConfigKeys.OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK_DEFAULT);\n \n     loadExistingContainers();\n \n     scmContainerManagerMetrics = SCMContainerManagerMetrics.create();\n   }\n \n+  private int getOpenContainerCountPerPipeline(Pipeline pipeline) {\n+    int totalContainerCountPerDn = numContainerPerVolume *\n+        pipelineManager.getNumHealthyVolumes(pipeline);\n+    int maxPipelineCountPerDn = pipelineManager.maxPipelineLimit(pipeline);\n+    return (int) Math.ceil(\n+        ((double) totalContainerCountPerDn / maxPipelineCountPerDn));\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyNzYyNA=="}, "originalCommit": {"oid": "3ddc28746bc31fcd52d3f8302e3f31c7e8bf1caa"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMxMTYxMA==", "bodyText": "Changed the logic to take the min of the data disks count of the set of dns in a pipeline while determining the open container limit.", "url": "https://github.com/apache/ozone/pull/1274#discussion_r497311610", "createdAt": "2020-09-30T07:53:40Z", "author": {"login": "bshashikant"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -101,12 +103,23 @@ public SCMContainerManager(\n     this.numContainerPerVolume = conf\n         .getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT,\n             ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT_DEFAULT);\n+    this.numPipelinesPerRaftLogDisk = conf\n+        .getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK,\n+            ScmConfigKeys.OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK_DEFAULT);\n \n     loadExistingContainers();\n \n     scmContainerManagerMetrics = SCMContainerManagerMetrics.create();\n   }\n \n+  private int getOpenContainerCountPerPipeline(Pipeline pipeline) {\n+    int totalContainerCountPerDn = numContainerPerVolume *\n+        pipelineManager.getNumHealthyVolumes(pipeline);\n+    int maxPipelineCountPerDn = pipelineManager.maxPipelineLimit(pipeline);\n+    return (int) Math.ceil(\n+        ((double) totalContainerCountPerDn / maxPipelineCountPerDn));\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyNzYyNA=="}, "originalCommit": {"oid": "3ddc28746bc31fcd52d3f8302e3f31c7e8bf1caa"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzI1NzIyOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/DatanodeInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMjo1NDo1MVrOHZWspQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMjo1NDo1MVrOHZWspQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM0ODMyNQ==", "bodyText": "may replace StorageContainerDatanodeProtocolProtos.MetadataStorageReportProto with MetadataStorageReportProto", "url": "https://github.com/apache/ozone/pull/1274#discussion_r496348325", "createdAt": "2020-09-29T02:54:51Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/DatanodeInfo.java", "diffHunk": "@@ -40,6 +43,8 @@\n   private long lastStatsUpdatedTime;\n \n   private List<StorageReportProto> storageReports;\n+  private List<StorageContainerDatanodeProtocolProtos.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddc28746bc31fcd52d3f8302e3f31c7e8bf1caa"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzI1OTE0OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/DatanodeInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMjo1NTo1MlrOHZWttA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMjo1NTo1MlrOHZWttA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM0ODU5Ng==", "bodyText": "stale java doc, suggestion: Updates the datanode metadata storage reports.", "url": "https://github.com/apache/ozone/pull/1274#discussion_r496348596", "createdAt": "2020-09-29T02:55:52Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/DatanodeInfo.java", "diffHunk": "@@ -94,6 +100,22 @@ public void updateStorageReports(List<StorageReportProto> reports) {\n     }\n   }\n \n+  /**\n+   * Updates the datanode storage reports.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddc28746bc31fcd52d3f8302e3f31c7e8bf1caa"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzI4MDQxOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/ScmConfigKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMzowODoyMlrOHZW6OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMzowODoyMlrOHZW6OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1MTgwMQ==", "bodyText": "How about OZONE_SCM_PIPELINE_PER_METADATA_DISK ?\nThere are both raft log disk and meta data storage report existing in the code context, they are similar to each other, bring in some redundancy.\nBTW, the former one may lead misunderstanding. One might think that each raft log disk contains one raft log, which is straightforwad, nevertheless, the raft log disk and the raft log is a OneToMany relationship.", "url": "https://github.com/apache/ozone/pull/1274#discussion_r496351801", "createdAt": "2020-09-29T03:08:22Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/ScmConfigKeys.java", "diffHunk": "@@ -308,6 +308,10 @@\n       OZONE_SCM_KEY_VALUE_CONTAINER_DELETION_CHOOSING_POLICY =\n       \"ozone.scm.keyvalue.container.deletion-choosing.policy\";\n \n+  public static final String OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddc28746bc31fcd52d3f8302e3f31c7e8bf1caa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzMxNTY2OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMzozMDoyMFrOHZXOuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMzozMDoyMFrOHZXOuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1NzA0OA==", "bodyText": "method name is maxPipelineLimit, but the logic calculates the min, which is a little bit weird. How about minPipelineLimit", "url": "https://github.com/apache/ozone/pull/1274#discussion_r496357048", "createdAt": "2020-09-29T03:30:20Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java", "diffHunk": "@@ -530,6 +540,43 @@ public int getNumHealthyVolumes(List<DatanodeDetails> dnList) {\n     return Collections.max(volumeCountList);\n   }\n \n+  /**\n+   * Returns the pipeline limit for the datanode.\n+   * if the datanode pipeline limit is set, consider that as the max\n+   * pipeline limit.\n+   * In case, the pipeline limit is not set, the max pipeline limit\n+   * will be based on the no of raft log volume reported and provided\n+   * that it has atleast one healthy data volume.\n+   */\n+  @Override\n+  public int maxPipelineLimit(DatanodeDetails dn) {\n+    try {\n+      if (heavyNodeCriteria > 0) {\n+        return heavyNodeCriteria;\n+      } else if (nodeStateManager.getNode(dn).getHealthyVolumeCount() > 0) {\n+        return numPipelinesPerRaftLogDisk *\n+            nodeStateManager.getNode(dn).getRaftLogVolumeCount();\n+      }\n+    } catch (NodeNotFoundException e) {\n+      LOG.warn(\"Cannot generate NodeStat, datanode {} not found.\",\n+          dn.getUuid());\n+    }\n+    return 0;\n+  }\n+\n+  /**\n+   * Returns the pipeline limit for set of datanodes.\n+   */\n+  @Override\n+  public int maxPipelineLimit(List<DatanodeDetails> dnList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddc28746bc31fcd52d3f8302e3f31c7e8bf1caa"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzMyNDE3OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMzozNTozNFrOHZXTlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMzozNTozNFrOHZXTlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1ODI5NQ==", "bodyText": "pipelineManager.getMaxHealthyVolumeNum(pipeline) / pipelineManager.getMinPipelineLimit(pipeline) may be more expressive.", "url": "https://github.com/apache/ozone/pull/1274#discussion_r496358295", "createdAt": "2020-09-29T03:35:34Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -101,12 +103,23 @@ public SCMContainerManager(\n     this.numContainerPerVolume = conf\n         .getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT,\n             ScmConfigKeys.OZONE_SCM_PIPELINE_OWNER_CONTAINER_COUNT_DEFAULT);\n+    this.numPipelinesPerRaftLogDisk = conf\n+        .getInt(ScmConfigKeys.OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK,\n+            ScmConfigKeys.OZONE_SCM_PIPELINE_PER_RAFT_LOG_DISK_DEFAULT);\n \n     loadExistingContainers();\n \n     scmContainerManagerMetrics = SCMContainerManagerMetrics.create();\n   }\n \n+  private int getOpenContainerCountPerPipeline(Pipeline pipeline) {\n+    int totalContainerCountPerDn = numContainerPerVolume *\n+        pipelineManager.getNumHealthyVolumes(pipeline);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddc28746bc31fcd52d3f8302e3f31c7e8bf1caa"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzU4ODU0OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwODo1NToxMFrOHaT12Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwODo1NToxMFrOHaT12Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM1MDEwNQ==", "bodyText": "method name suggestion: minHealthyVolumeNum", "url": "https://github.com/apache/ozone/pull/1274#discussion_r497350105", "createdAt": "2020-09-30T08:55:10Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java", "diffHunk": "@@ -511,7 +521,7 @@ private SCMNodeStat getNodeStatInternal(DatanodeDetails datanodeDetails) {\n   }\n \n   /**\n-   * Returns the max of no healthy volumes reported out of the set\n+   * Returns the min of no healthy volumes reported out of the set", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ef14e007f4410bde398bd0e66e617f5d674b239"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzU5MjU5OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwODo1NjowNFrOHaT4Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwODo1NjowNFrOHaT4Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM1MDY4Ng==", "bodyText": "name suggestion: totalContainerCountPerDn  -> minContainerCountPerDn", "url": "https://github.com/apache/ozone/pull/1274#discussion_r497350686", "createdAt": "2020-09-30T08:56:04Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/SCMContainerManager.java", "diffHunk": "@@ -107,6 +107,14 @@ public SCMContainerManager(\n     scmContainerManagerMetrics = SCMContainerManagerMetrics.create();\n   }\n \n+  private int getOpenContainerCountPerPipeline(Pipeline pipeline) {\n+    int totalContainerCountPerDn = numContainerPerVolume *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ef14e007f4410bde398bd0e66e617f5d674b239"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzYwMjg2OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwODo1ODozMVrOHaT-gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwODo1ODozMVrOHaT-gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM1MjMyMQ==", "bodyText": "member var name suggestion: numPipelinesPerMetadataVolume", "url": "https://github.com/apache/ozone/pull/1274#discussion_r497352321", "createdAt": "2020-09-30T08:58:31Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/SCMNodeManager.java", "diffHunk": "@@ -130,6 +133,11 @@ public SCMNodeManager(OzoneConfiguration conf,\n     this.useHostname = conf.getBoolean(\n         DFSConfigKeysLegacy.DFS_DATANODE_USE_DN_HOSTNAME,\n         DFSConfigKeysLegacy.DFS_DATANODE_USE_DN_HOSTNAME_DEFAULT);\n+    this.numPipelinesPerRaftLogDisk =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ef14e007f4410bde398bd0e66e617f5d674b239"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzYwOTk3OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/ScmConfigKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTowMDoxMlrOHaUC8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTowMDoxMlrOHaUC8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM1MzQ1OQ==", "bodyText": "name suggestion: OZONE_SCM_PIPELINE_PER_METADATA_VOLUME.\nWe'd better use concept volume instead of concept disk in SCM, the former one is a logical concept, the latter is physical one, and volume is already widely used in context.", "url": "https://github.com/apache/ozone/pull/1274#discussion_r497353459", "createdAt": "2020-09-30T09:00:12Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/ScmConfigKeys.java", "diffHunk": "@@ -308,6 +308,10 @@\n       OZONE_SCM_KEY_VALUE_CONTAINER_DELETION_CHOOSING_POLICY =\n       \"ozone.scm.keyvalue.container.deletion-choosing.policy\";\n \n+  public static final String OZONE_SCM_PIPELINE_PER_METADATA_DISK =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ef14e007f4410bde398bd0e66e617f5d674b239"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4970, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}