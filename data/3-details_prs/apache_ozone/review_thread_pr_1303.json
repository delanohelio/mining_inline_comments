{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NzcxNTE5", "number": 1303, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODowODo1NVrOEjteTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoxMDo1OVrOEjthHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODgwNjUzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/failover/TestOMFailovers.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODowODo1NlrOHSOB1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODowODo1NlrOHSOB1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg2NjI2MA==", "bodyText": "Minor: Can we use the default, if there is no special reason to use value 9", "url": "https://github.com/apache/ozone/pull/1303#discussion_r488866260", "createdAt": "2020-09-15T18:08:56Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/failover/TestOMFailovers.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om.failover;\n+\n+import com.google.protobuf.RpcController;\n+import com.google.protobuf.ServiceException;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+\n+import org.apache.hadoop.hdds.conf.ConfigurationSource;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.io.retry.RetryProxy;\n+import org.apache.hadoop.ozone.om.ha.OMFailoverProxyProvider;\n+import org.apache.hadoop.ozone.om.ha.OMProxyInfo;\n+import org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolPB;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OMResponse;\n+import org.apache.hadoop.security.AccessControlException;\n+import org.apache.hadoop.test.GenericTestUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.slf4j.event.Level;\n+\n+/**\n+ * Tests OM failover protocols using a Mock Failover provider and a Mock OM\n+ * Protocol.\n+ */\n+public class TestOMFailovers {\n+\n+  private ConfigurationSource conf = new OzoneConfiguration();\n+  private Exception testException;\n+\n+  @Test\n+  public void test1() throws Exception {\n+\n+    testException = new AccessControlException();\n+\n+    GenericTestUtils.setLogLevel(OMFailoverProxyProvider.LOG, Level.DEBUG);\n+    GenericTestUtils.LogCapturer logCapturer = GenericTestUtils.LogCapturer\n+        .captureLogs(OMFailoverProxyProvider.LOG);\n+\n+    MockFailoverProxyProvider failoverProxyProvider =\n+        new MockFailoverProxyProvider(conf);\n+\n+    OzoneManagerProtocolPB proxy = (OzoneManagerProtocolPB) RetryProxy\n+        .create(OzoneManagerProtocolPB.class, failoverProxyProvider,\n+            failoverProxyProvider.getRetryPolicy(9));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "389c401a1b0ed4736418beb79cf335cf2033c1c8"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODgxMzc1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/failover/TestOMFailovers.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoxMDo1OVrOHSOGQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoxMDo1OVrOHSOGQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg2NzM5Mg==", "bodyText": "Minor: Can we name test with the test it is trying to perform like testAccessControlException", "url": "https://github.com/apache/ozone/pull/1303#discussion_r488867392", "createdAt": "2020-09-15T18:10:59Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/failover/TestOMFailovers.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om.failover;\n+\n+import com.google.protobuf.RpcController;\n+import com.google.protobuf.ServiceException;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+\n+import org.apache.hadoop.hdds.conf.ConfigurationSource;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.io.retry.RetryProxy;\n+import org.apache.hadoop.ozone.om.ha.OMFailoverProxyProvider;\n+import org.apache.hadoop.ozone.om.ha.OMProxyInfo;\n+import org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolPB;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OMResponse;\n+import org.apache.hadoop.security.AccessControlException;\n+import org.apache.hadoop.test.GenericTestUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.slf4j.event.Level;\n+\n+/**\n+ * Tests OM failover protocols using a Mock Failover provider and a Mock OM\n+ * Protocol.\n+ */\n+public class TestOMFailovers {\n+\n+  private ConfigurationSource conf = new OzoneConfiguration();\n+  private Exception testException;\n+\n+  @Test\n+  public void test1() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "389c401a1b0ed4736418beb79cf335cf2033c1c8"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3860, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}