{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MDE2ODg3", "number": 1608, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzowMjozMlrOE8ti9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzowMjozMlrOE8ti9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDk2MjQ0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerRatisServer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzowMjozMlrOH4_0WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoxMTozM1rOH5kgFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyNzg5Ng==", "bodyText": "createWriteRaftClientRequest was creating a request with the same callId. Is that the bug here?\nIf that is the case we would also need to make changes in this function so that callId is different for every request.", "url": "https://github.com/apache/ozone/pull/1608#discussion_r529527896", "createdAt": "2020-11-24T13:02:32Z", "author": {"login": "lokeshj1703"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerRatisServer.java", "diffHunk": "@@ -126,15 +126,32 @@ private static long nextCallId() {\n   public OMResponse submitRequest(OMRequest omRequest) throws ServiceException {\n     RaftClientRequest raftClientRequest =\n         createWriteRaftClientRequest(omRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa857aab6d1f6822cf809a7226e7e86b049a021"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgzMzk2MA==", "bodyText": "When called from Client, Server.getCallID() will not return constant value RpcConstants.INVALID_RETRY_COUNT.\nWhere as when keydeletingService is called it is not coming thru RpcClient, directly calling server API submitRequest, so CallID will be same for each call.\nSo it is fine use createWriteRaftClientRequest for normal flow of requests, and the values ClientID and CallID can be fetched from Server.getClientID and Server.getCallID().", "url": "https://github.com/apache/ozone/pull/1608#discussion_r529833960", "createdAt": "2020-11-24T19:43:05Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerRatisServer.java", "diffHunk": "@@ -126,15 +126,32 @@ private static long nextCallId() {\n   public OMResponse submitRequest(OMRequest omRequest) throws ServiceException {\n     RaftClientRequest raftClientRequest =\n         createWriteRaftClientRequest(omRequest);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyNzg5Ng=="}, "originalCommit": {"oid": "cfa857aab6d1f6822cf809a7226e7e86b049a021"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDExNTk2OQ==", "bodyText": "Can we add an assertion to check that Server.getCallID() is not returning RpcConstants.INVALID_CALL_ID and Server.getClientId() is not returning RpcConstants.DUMMY_CLIENT_ID?", "url": "https://github.com/apache/ozone/pull/1608#discussion_r530115969", "createdAt": "2020-11-25T05:26:37Z", "author": {"login": "lokeshj1703"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerRatisServer.java", "diffHunk": "@@ -126,15 +126,32 @@ private static long nextCallId() {\n   public OMResponse submitRequest(OMRequest omRequest) throws ServiceException {\n     RaftClientRequest raftClientRequest =\n         createWriteRaftClientRequest(omRequest);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyNzg5Ng=="}, "originalCommit": {"oid": "cfa857aab6d1f6822cf809a7226e7e86b049a021"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEyODkxNw==", "bodyText": "Done.", "url": "https://github.com/apache/ozone/pull/1608#discussion_r530128917", "createdAt": "2020-11-25T06:11:33Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerRatisServer.java", "diffHunk": "@@ -126,15 +126,32 @@ private static long nextCallId() {\n   public OMResponse submitRequest(OMRequest omRequest) throws ServiceException {\n     RaftClientRequest raftClientRequest =\n         createWriteRaftClientRequest(omRequest);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyNzg5Ng=="}, "originalCommit": {"oid": "cfa857aab6d1f6822cf809a7226e7e86b049a021"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4500, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}