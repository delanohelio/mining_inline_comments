{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODg5NTQ4", "number": 806, "title": "HDDS-3374. OMVolumeSetOwnerRequest doesn't check if user is already the owner", "bodyText": "What changes were proposed in this pull request?\nOMVolumeSetOwnerRequest doesn't check if the user is already the owner.\nIf the user is already the owner, it shouldn't proceed to the update logic, otherwise the resulting volume list for that user in UserVolumeInfo would have duplicate volume entry. As demonstrated in the test case.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3374\nHow was this patch tested?\nThe test case (setOwner twice on the same volume with the same user) should pass.", "createdAt": "2020-04-10T12:27:06Z", "url": "https://github.com/apache/ozone/pull/806", "merged": true, "mergeCommit": {"oid": "ac5fb0f46f41e19e68d70673157e7fe439f1c9af"}, "closed": true, "closedAt": "2020-04-14T17:54:03Z", "author": {"login": "smengcl"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWQNIBAH2gAyNDAxODg5NTQ4OmI3MWMxYWY3NzRmMDY5NTFiYjU4Zjk3YjI4MTM4ODM5MjVhNjg0MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXlY5GgFqTM5MzA1Mzg3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b71c1af774f06951bb58f97b2813883925a6842e", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/b71c1af774f06951bb58f97b2813883925a6842e", "committedDate": "2020-04-10T12:25:14Z", "message": "Add check in OMVolumeRequest; Add test case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ec933472213f4204edd2a4c7ded798402cb1149", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/3ec933472213f4204edd2a4c7ded798402cb1149", "committedDate": "2020-04-10T13:05:01Z", "message": "Initial fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTY5OTM4", "url": "https://github.com/apache/ozone/pull/806#pullrequestreview-391569938", "createdAt": "2020-04-10T17:41:06Z", "commit": {"oid": "3ec933472213f4204edd2a4c7ded798402cb1149"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0MTowNlrOGEBFwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0MzoyNVrOGEBJpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2NTM0NQ==", "bodyText": "Instead of throwing exception here, I was wondering if we can instead perform the subsequent \"add new volume to list\" if !prevVolList.contains(volume) and complement with WARN log.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Sanity check, a user should not own same volume twice\n          \n          \n            \n                //  TODO: May want to remove this due to perf if user owns a lot of volumes.\n          \n          \n            \n                if (prevVolList.contains(volume)) {\n          \n          \n            \n                  throw new IOException(\"Invalid operation: User \" + owner +\n          \n          \n            \n                      \" is about to own a same volume \" + volume + \" twice!\" +\n          \n          \n            \n                      \" Check for DB consistency error.\");\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Add the new volume to the list\n          \n          \n            \n                prevVolList.add(volume);\n          \n          \n            \n                // Avoid adding a user to the same volume twice\n          \n          \n            \n                if (!prevVolList.contains(volume)) {\n          \n          \n            \n                  // Add the new volume to the list\n          \n          \n            \n                  prevVolList.add(volume);\n          \n          \n            \n                  UserVolumeInfo newVolList = UserVolumeInfo.newBuilder()\n          \n          \n            \n                      .setObjectID(objectID)\n          \n          \n            \n                      .setUpdateID(txID)\n          \n          \n            \n                      .addAllVolumeNames(prevVolList).build();\n          \n          \n            \n                }", "url": "https://github.com/apache/ozone/pull/806#discussion_r406865345", "createdAt": "2020-04-10T17:41:06Z", "author": {"login": "dineshchitlangia"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeRequest.java", "diffHunk": "@@ -106,6 +106,13 @@ protected UserVolumeInfo addVolumeToOwnerList(UserVolumeInfo volumeList,\n       objectID = volumeList.getObjectID();\n     }\n \n+    // Sanity check, a user should not own same volume twice\n+    //  TODO: May want to remove this due to perf if user owns a lot of volumes.\n+    if (prevVolList.contains(volume)) {\n+      throw new IOException(\"Invalid operation: User \" + owner +\n+          \" is about to own a same volume \" + volume + \" twice!\" +\n+          \" Check for DB consistency error.\");\n+    }\n \n     // Add the new volume to the list\n     prevVolList.add(volume);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ec933472213f4204edd2a4c7ded798402cb1149"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2NjM0Mw==", "bodyText": "Like previous comment, we can make similar change here too.", "url": "https://github.com/apache/ozone/pull/806#discussion_r406866343", "createdAt": "2020-04-10T17:43:25Z", "author": {"login": "dineshchitlangia"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeSetOwnerRequest.java", "diffHunk": "@@ -143,6 +143,11 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       oldOwner = omVolumeArgs.getOwnerName();\n \n+      if (oldOwner.equals(newOwner)) {\n+        throw new OMException(\"Owner of volume \" + volume + \" is already \" +\n+            newOwner, OMException.ResultCodes.ACCESS_DENIED);\n+      }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ec933472213f4204edd2a4c7ded798402cb1149"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTcxNjMw", "url": "https://github.com/apache/ozone/pull/806#pullrequestreview-391571630", "createdAt": "2020-04-10T17:44:38Z", "commit": {"oid": "3ec933472213f4204edd2a4c7ded798402cb1149"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0NDozOFrOGEBLhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0NTozOFrOGEBNGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2NjgyMw==", "bodyText": "I am thinking instead of returning an error like AccessDenied, can we return a code that this owner is already owner for this volume.\nBecause access Denied looks not proper here.", "url": "https://github.com/apache/ozone/pull/806#discussion_r406866823", "createdAt": "2020-04-10T17:44:38Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/OMVolumeRequest.java", "diffHunk": "@@ -106,6 +106,13 @@ protected UserVolumeInfo addVolumeToOwnerList(UserVolumeInfo volumeList,\n       objectID = volumeList.getObjectID();\n     }\n \n+    // Sanity check, a user should not own same volume twice\n+    //  TODO: May want to remove this due to perf if user owns a lot of volumes.\n+    if (prevVolList.contains(volume)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ec933472213f4204edd2a4c7ded798402cb1149"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2NzIyNw==", "bodyText": "We don't need an IT test to test this behavior. We have a UT TestOMVolumeSetOwnerRequest which we can use this to cover this test.", "url": "https://github.com/apache/ozone/pull/806#discussion_r406867227", "createdAt": "2020-04-10T17:45:38Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerSetOwner.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om;\n+\n+import java.io.IOException;\n+import java.util.UUID;\n+\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.client.ObjectStore;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.client.protocol.ClientProtocol;\n+import org.apache.hadoop.ozone.om.exceptions.OMException;\n+import org.apache.hadoop.security.UserGroupInformation;\n+\n+import static org.apache.hadoop.hdds.scm.ScmConfigKeys.OZONE_SCM_RATIS_PIPELINE_LIMIT;\n+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_ACL_AUTHORIZER_CLASS;\n+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_ACL_AUTHORIZER_CLASS_NATIVE;\n+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_ACL_ENABLED;\n+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_ADMINISTRATORS;\n+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.Timeout;\n+\n+/**\n+ * Test OzoneManager list volume operation under combinations of configs.\n+ */\n+public class TestOzoneManagerSetOwner {\n+\n+  @Rule\n+  public Timeout timeout = new Timeout(120_000);\n+\n+  private UserGroupInformation loginUser;\n+\n+  @Before\n+  public void init() throws Exception {\n+    loginUser = UserGroupInformation.getLoginUser();\n+  }\n+\n+  /**\n+   * Create a MiniDFSCluster for testing.\n+   */\n+  private MiniOzoneCluster startCluster(boolean aclEnabled) throws Exception {\n+\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    String clusterId = UUID.randomUUID().toString();\n+    String scmId = UUID.randomUUID().toString();\n+    String omId = UUID.randomUUID().toString();\n+    conf.setInt(OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS, 2);\n+    conf.set(OZONE_ADMINISTRATORS, \"user1\");\n+    conf.setInt(OZONE_SCM_RATIS_PIPELINE_LIMIT, 10);\n+\n+    // Use native impl here, default impl doesn't do actual checks\n+    conf.set(OZONE_ACL_AUTHORIZER_CLASS, OZONE_ACL_AUTHORIZER_CLASS_NATIVE);\n+    // Note: OM doesn't support live config reloading\n+    conf.setBoolean(OZONE_ACL_ENABLED, aclEnabled);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ec933472213f4204edd2a4c7ded798402cb1149"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22f5ce8015116ef0dd890306dc67fbdbd9e3f2f3", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/22f5ce8015116ef0dd890306dc67fbdbd9e3f2f3", "committedDate": "2020-04-13T03:07:26Z", "message": "Don't throw in OMVolumeRequest. `LOG.warn` instead."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "448cbbe84a04992398d5d8c2235ca8c1f0ddf4d5", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/448cbbe84a04992398d5d8c2235ca8c1f0ddf4d5", "committedDate": "2020-04-13T03:08:15Z", "message": "Also warn in OMVolumeSetOwnerRequest. See comment inline."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fa6ba1a50231ae2f45c38a32c9d5f2bae5ba8bb", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/8fa6ba1a50231ae2f45c38a32c9d5f2bae5ba8bb", "committedDate": "2020-04-13T04:19:55Z", "message": "Add unit test testOwnSameVolumeTwice."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a5c9ba6c7cb1d8eb33876cfd2b688b86f195fc6", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/7a5c9ba6c7cb1d8eb33876cfd2b688b86f195fc6", "committedDate": "2020-04-13T23:42:22Z", "message": "validateAndUpdateCache: Return OK immediately if newOwner is the same as oldOwner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a08a0332286b72c9468d4acb471982769925457f", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/a08a0332286b72c9468d4acb471982769925457f", "committedDate": "2020-04-13T23:42:31Z", "message": "Remove integration test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bc36bcaabcddfd97564f9e825d534cb214cac9c", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/7bc36bcaabcddfd97564f9e825d534cb214cac9c", "committedDate": "2020-04-13T23:49:25Z", "message": "addVolumeToOwnerList: Use Set instead of List to avoid existence checking. Should improve performance."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b1d26e5e8c823dd3edcb9210da29bb37a9bfbcb", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/5b1d26e5e8c823dd3edcb9210da29bb37a9bfbcb", "committedDate": "2020-04-13T23:55:25Z", "message": "Fix checkstyle."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDQzOTE5", "url": "https://github.com/apache/ozone/pull/806#pullrequestreview-393043919", "createdAt": "2020-04-14T15:29:18Z", "commit": {"oid": "5b1d26e5e8c823dd3edcb9210da29bb37a9bfbcb"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyOToxOFrOGFUWQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTozNDo1MVrOGFUmJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyOTQ0Mg==", "bodyText": "should we remove this comment as checkStatusNotOK is now conditioned with success=true? Also, do we redirect existing callers for success=false case appropriately?", "url": "https://github.com/apache/ozone/pull/806#discussion_r408229442", "createdAt": "2020-04-14T15:29:18Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/volume/OMVolumeSetOwnerResponse.java", "diffHunk": "@@ -55,11 +56,27 @@ public OMVolumeSetOwnerResponse(@Nonnull OMResponse omResponse,\n \n   /**\n    * For when the request is not successful or it is a replay transaction.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1d26e5e8c823dd3edcb9210da29bb37a9bfbcb"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzMzUwOA==", "bodyText": "I think the reply response is taken care by createReplayOMResponse now. So we can safely clean up the comments above.", "url": "https://github.com/apache/ozone/pull/806#discussion_r408233508", "createdAt": "2020-04-14T15:34:51Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/volume/OMVolumeSetOwnerResponse.java", "diffHunk": "@@ -55,11 +56,27 @@ public OMVolumeSetOwnerResponse(@Nonnull OMResponse omResponse,\n \n   /**\n    * For when the request is not successful or it is a replay transaction.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyOTQ0Mg=="}, "originalCommit": {"oid": "5b1d26e5e8c823dd3edcb9210da29bb37a9bfbcb"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDUzODc3", "url": "https://github.com/apache/ozone/pull/806#pullrequestreview-393053877", "createdAt": "2020-04-14T15:40:01Z", "commit": {"oid": "5b1d26e5e8c823dd3edcb9210da29bb37a9bfbcb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3345, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}