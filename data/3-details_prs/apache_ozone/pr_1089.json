{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTA1NDI2", "number": 1089, "title": "HDDS-3705. [OFS] Implement getTrashRoots for trash cleanup", "bodyText": "What changes were proposed in this pull request?\nImplement getTrashRoots for trash cleanup\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3705\nHow was this patch tested?\nWill add a new test.", "createdAt": "2020-06-17T21:27:59Z", "url": "https://github.com/apache/ozone/pull/1089", "merged": true, "mergeCommit": {"oid": "8704365ccb47446d7d38f32234f926140fa54c7c"}, "closed": true, "closedAt": "2020-07-08T00:16:19Z", "author": {"login": "smengcl"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwaUxYAH2gAyNDM2MTA1NDI2OjkyOTAxZGQwZjM3ZGViMmQwMmE4ODAzMDU0NzllNjg4ZDI5YWY4YTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcysASdAH2gAyNDM2MTA1NDI2OjE5NDBmOTlmNTI0ZWY1ODliMmM1YTE2MTMwMzFmM2NiN2IxMDY2YjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "92901dd0f37deb2d02a880305479e688d29af8a8", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/92901dd0f37deb2d02a880305479e688d29af8a8", "committedDate": "2020-06-30T18:54:40Z", "message": "Crude implementation of getTrashRoots for OFS. Untested.\n\n(cherry picked from commit c563260011aa00a36568c57cda7254e82c15c59c)\n\nConflicts:\nhadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "03d6f1506c2805747561911a27d780a450a7b993", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/03d6f1506c2805747561911a27d780a450a7b993", "committedDate": "2020-06-17T21:25:39Z", "message": "Crude implementation of getTrashRoots for OFS. Untested.\n\n(cherry picked from commit c563260011aa00a36568c57cda7254e82c15c59c)\n\nConflicts:\nhadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java"}, "afterCommit": {"oid": "92901dd0f37deb2d02a880305479e688d29af8a8", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/92901dd0f37deb2d02a880305479e688d29af8a8", "committedDate": "2020-06-30T18:54:40Z", "message": "Crude implementation of getTrashRoots for OFS. Untested.\n\n(cherry picked from commit c563260011aa00a36568c57cda7254e82c15c59c)\n\nConflicts:\nhadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f84de37a42191dac1ba6f033f987c8d6304df90", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/3f84de37a42191dac1ba6f033f987c8d6304df90", "committedDate": "2020-07-01T07:07:16Z", "message": "Check if trash path is a directory.\n\nChange-Id: Ib429ea98bfc3c9d088dc5ce88fe48d0447963713"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0ac17309148900370d4672fdb17f49dc638479b", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/d0ac17309148900370d4672fdb17f49dc638479b", "committedDate": "2020-07-01T07:07:25Z", "message": "Add new test.\n\nChange-Id: Ib9f27fb1f75829befd48643b203cabb637830343"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "001a897284260a3666b55c19b460026e710da2b7", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/001a897284260a3666b55c19b460026e710da2b7", "committedDate": "2020-07-01T07:21:14Z", "message": "Add getTrashRoots java doc.\n\nChange-Id: I166339f3740475920880ef9f7b338f06d1902c85"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a4f20a53317403f080a5d48ff41839a36f4a42d", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/3a4f20a53317403f080a5d48ff41839a36f4a42d", "committedDate": "2020-07-01T07:21:33Z", "message": "Amend ObjectStore#listVolumesByUser java doc.\n\nChange-Id: I8cc0f28f3f6c8c92304c7795635fb3d68e01d2fe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e163f2c26ea5ed74150dc19a68a4eaeeb40fe780", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/e163f2c26ea5ed74150dc19a68a4eaeeb40fe780", "committedDate": "2020-07-07T18:12:40Z", "message": "Fix test.\n\nChange-Id: Ia8ba7a528332f3bc8b4e73cb636f753080e5105b"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTk4MjEz", "url": "https://github.com/apache/ozone/pull/1089#pullrequestreview-444198213", "createdAt": "2020-07-07T19:46:04Z", "commit": {"oid": "e163f2c26ea5ed74150dc19a68a4eaeeb40fe780"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTo0NjowNFrOGuNGcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTo0NjowNFrOGuNGcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEwMjMyMQ==", "bodyText": "NIT: forEach is unnecessary as we have assert the size is 1.", "url": "https://github.com/apache/ozone/pull/1089#discussion_r451102321", "createdAt": "2020-07-07T19:46:04Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -871,4 +876,103 @@ public void testFailToDeleteRoot() throws IOException {\n     Assert.assertFalse(fs.delete(new Path(\"/\"), true));\n   }\n \n+  /**\n+   * Test getTrashRoots() in OFS. Different from the existing test for o3fs.\n+   */\n+  @Test\n+  public void testGetTrashRoots() throws IOException {\n+    String username = UserGroupInformation.getCurrentUser().getShortUserName();\n+    OzoneVolume volume1 = objectStore.getVolume(volumeName);\n+    String prevOwner = volume1.getOwner();\n+    // Set owner of the volume to current user, so it will show up in vol list\n+    Assert.assertTrue(volume1.setOwner(username));\n+\n+    Path trashRoot1 = new Path(bucketPath, TRASH_PREFIX);\n+    Path user1Trash1 = new Path(trashRoot1, username);\n+    // When user trash dir isn't been created\n+    Assert.assertEquals(0, fs.getTrashRoots(false).size());\n+    Assert.assertEquals(0, fs.getTrashRoots(true).size());\n+    // Let's create our first user1 (current user) trash dir.\n+    fs.mkdirs(user1Trash1);\n+    // Results should be getTrashRoots(false)=1, gTR(true)=1\n+    Collection<FileStatus> res = fs.getTrashRoots(false);\n+    Assert.assertEquals(1, res.size());\n+    res.forEach(e -> Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e163f2c26ea5ed74150dc19a68a4eaeeb40fe780"}, "originalPosition": 159}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTk5MjE3", "url": "https://github.com/apache/ozone/pull/1089#pullrequestreview-444199217", "createdAt": "2020-07-07T19:47:41Z", "commit": {"oid": "e163f2c26ea5ed74150dc19a68a4eaeeb40fe780"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTo0Nzo0MVrOGuNJ5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTo0Nzo0MVrOGuNJ5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEwMzIwNw==", "bodyText": "Can we assert the trash roots is for user one with invoke getTrashRoots(false)?", "url": "https://github.com/apache/ozone/pull/1089#discussion_r451103207", "createdAt": "2020-07-07T19:47:41Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -871,4 +876,103 @@ public void testFailToDeleteRoot() throws IOException {\n     Assert.assertFalse(fs.delete(new Path(\"/\"), true));\n   }\n \n+  /**\n+   * Test getTrashRoots() in OFS. Different from the existing test for o3fs.\n+   */\n+  @Test\n+  public void testGetTrashRoots() throws IOException {\n+    String username = UserGroupInformation.getCurrentUser().getShortUserName();\n+    OzoneVolume volume1 = objectStore.getVolume(volumeName);\n+    String prevOwner = volume1.getOwner();\n+    // Set owner of the volume to current user, so it will show up in vol list\n+    Assert.assertTrue(volume1.setOwner(username));\n+\n+    Path trashRoot1 = new Path(bucketPath, TRASH_PREFIX);\n+    Path user1Trash1 = new Path(trashRoot1, username);\n+    // When user trash dir isn't been created\n+    Assert.assertEquals(0, fs.getTrashRoots(false).size());\n+    Assert.assertEquals(0, fs.getTrashRoots(true).size());\n+    // Let's create our first user1 (current user) trash dir.\n+    fs.mkdirs(user1Trash1);\n+    // Results should be getTrashRoots(false)=1, gTR(true)=1\n+    Collection<FileStatus> res = fs.getTrashRoots(false);\n+    Assert.assertEquals(1, res.size());\n+    res.forEach(e -> Assert.assertEquals(\n+        user1Trash1.toString(), e.getPath().toUri().getPath()));\n+    res = fs.getTrashRoots(true);\n+    Assert.assertEquals(1, res.size());\n+    res.forEach(e -> Assert.assertEquals(\n+        user1Trash1.toString(), e.getPath().toUri().getPath()));\n+\n+    // Create one more trash for user2 in the same bucket\n+    Path user2Trash1 = new Path(trashRoot1, \"testuser2\");\n+    fs.mkdirs(user2Trash1);\n+    // Results should be getTrashRoots(false)=1, gTR(true)=2\n+    Assert.assertEquals(1, fs.getTrashRoots(false).size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e163f2c26ea5ed74150dc19a68a4eaeeb40fe780"}, "originalPosition": 170}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTk5ODI4", "url": "https://github.com/apache/ozone/pull/1089#pullrequestreview-444199828", "createdAt": "2020-07-07T19:48:34Z", "commit": {"oid": "e163f2c26ea5ed74150dc19a68a4eaeeb40fe780"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTo0ODozNVrOGuNLwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTo0ODozNVrOGuNLwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEwMzY4Mg==", "bodyText": "I see you have the assertion here for user1Trash1. So you can ignore the previous comment.", "url": "https://github.com/apache/ozone/pull/1089#discussion_r451103682", "createdAt": "2020-07-07T19:48:35Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -871,4 +876,103 @@ public void testFailToDeleteRoot() throws IOException {\n     Assert.assertFalse(fs.delete(new Path(\"/\"), true));\n   }\n \n+  /**\n+   * Test getTrashRoots() in OFS. Different from the existing test for o3fs.\n+   */\n+  @Test\n+  public void testGetTrashRoots() throws IOException {\n+    String username = UserGroupInformation.getCurrentUser().getShortUserName();\n+    OzoneVolume volume1 = objectStore.getVolume(volumeName);\n+    String prevOwner = volume1.getOwner();\n+    // Set owner of the volume to current user, so it will show up in vol list\n+    Assert.assertTrue(volume1.setOwner(username));\n+\n+    Path trashRoot1 = new Path(bucketPath, TRASH_PREFIX);\n+    Path user1Trash1 = new Path(trashRoot1, username);\n+    // When user trash dir isn't been created\n+    Assert.assertEquals(0, fs.getTrashRoots(false).size());\n+    Assert.assertEquals(0, fs.getTrashRoots(true).size());\n+    // Let's create our first user1 (current user) trash dir.\n+    fs.mkdirs(user1Trash1);\n+    // Results should be getTrashRoots(false)=1, gTR(true)=1\n+    Collection<FileStatus> res = fs.getTrashRoots(false);\n+    Assert.assertEquals(1, res.size());\n+    res.forEach(e -> Assert.assertEquals(\n+        user1Trash1.toString(), e.getPath().toUri().getPath()));\n+    res = fs.getTrashRoots(true);\n+    Assert.assertEquals(1, res.size());\n+    res.forEach(e -> Assert.assertEquals(\n+        user1Trash1.toString(), e.getPath().toUri().getPath()));\n+\n+    // Create one more trash for user2 in the same bucket\n+    Path user2Trash1 = new Path(trashRoot1, \"testuser2\");\n+    fs.mkdirs(user2Trash1);\n+    // Results should be getTrashRoots(false)=1, gTR(true)=2\n+    Assert.assertEquals(1, fs.getTrashRoots(false).size());\n+    Assert.assertEquals(2, fs.getTrashRoots(true).size());\n+\n+    // Create a new bucket in the same volume\n+    final String bucketName2 = \"trashroottest2\";\n+    volume1.createBucket(bucketName2);\n+    Path bucketPath2 = new Path(volumePath, bucketName2);\n+    Path trashRoot2 = new Path(bucketPath2, TRASH_PREFIX);\n+    Path user1Trash2 = new Path(trashRoot2, username);\n+    // Create a file at the trash location, it shouldn't be recognized as trash\n+    try (FSDataOutputStream out1 = fs.create(user1Trash2)) {\n+      out1.write(123);\n+    }\n+    // Results should still be getTrashRoots(false)=1, gTR(true)=2\n+    Assert.assertEquals(1, fs.getTrashRoots(false).size());\n+    res.forEach(e -> Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e163f2c26ea5ed74150dc19a68a4eaeeb40fe780"}, "originalPosition": 185}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MjExNDI0", "url": "https://github.com/apache/ozone/pull/1089#pullrequestreview-444211424", "createdAt": "2020-07-07T20:06:00Z", "commit": {"oid": "e163f2c26ea5ed74150dc19a68a4eaeeb40fe780"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMDowNjowMVrOGuNvBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMDowNjowMVrOGuNvBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTExMjcxMQ==", "bodyText": "I don't think we should throw RuntimeException here. We can log a warning and return an empty collection instead.", "url": "https://github.com/apache/ozone/pull/1089#discussion_r451112711", "createdAt": "2020-07-07T20:06:01Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -516,6 +520,62 @@ public FileStatusAdapter getFileStatus(String path, URI uri,\n     }\n   }\n \n+  /**\n+   * Get trash roots for current user or all users.\n+   *\n+   * Note:\n+   * 1. When allUsers flag is false, this only returns the trash roots for\n+   * those that the current user has access to.\n+   * 2. Also it is not particularly efficient to use this API when there are\n+   * a lot of volumes and buckets as the client has to iterate through all\n+   * buckets in all volumes.\n+   *\n+   * @param allUsers return trashRoots of all users if true, used by emptier\n+   * @param fs Pointer to the current OFS FileSystem\n+   * @return\n+   */\n+  public Collection<FileStatus> getTrashRoots(boolean allUsers,\n+      BasicRootedOzoneFileSystem fs) {\n+    List<FileStatus> ret = new ArrayList<>();\n+    try {\n+      Iterator<? extends OzoneVolume> iterVol;\n+      String username = UserGroupInformation.getCurrentUser().getUserName();\n+      if (allUsers) {\n+        iterVol = objectStore.listVolumes(\"\");\n+      } else {\n+        iterVol = objectStore.listVolumesByUser(username, \"\", \"\");\n+      }\n+      while (iterVol.hasNext()) {\n+        OzoneVolume volume = iterVol.next();\n+        Path volumePath = new Path(OZONE_URI_DELIMITER, volume.getName());\n+        Iterator<? extends OzoneBucket> bucketIter = volume.listBuckets(\"\");\n+        while (bucketIter.hasNext()) {\n+          OzoneBucket bucket = bucketIter.next();\n+          Path bucketPath = new Path(volumePath, bucket.getName());\n+          Path trashRoot = new Path(bucketPath, FileSystem.TRASH_PREFIX);\n+          if (allUsers) {\n+            if (fs.exists(trashRoot)) {\n+              for (FileStatus candidate : fs.listStatus(trashRoot)) {\n+                if (fs.exists(candidate.getPath()) && candidate.isDirectory()) {\n+                  ret.add(candidate);\n+                }\n+              }\n+            }\n+          } else {\n+            Path userTrash = new Path(trashRoot, username);\n+            if (fs.exists(userTrash) &&\n+                fs.getFileStatus(userTrash).isDirectory()) {\n+              ret.add(fs.getFileStatus(userTrash));\n+            }\n+          }\n+        }\n+      }\n+    } catch (IOException ex) {\n+      throw new RuntimeException(ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e163f2c26ea5ed74150dc19a68a4eaeeb40fe780"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d997ac0fb09b0145824ae8196e6b9bb47956c086", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/d997ac0fb09b0145824ae8196e6b9bb47956c086", "committedDate": "2020-07-07T20:07:24Z", "message": "res.forEach -> checkFirstFileStatusPath\n\nChange-Id: I4b855a3e6f44b53c77aab6d4b782c98a8efdf295"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebf104b3d6b0c6531ce2bec33fe00c996fcb16cf", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/ebf104b3d6b0c6531ce2bec33fe00c996fcb16cf", "committedDate": "2020-07-07T20:33:52Z", "message": "Check owner for fs.getTrashRoots(false).\n\nChange-Id: I2bc42ad1d50dccc227f615daca2b86434fffc523"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1940f99f524ef589b2c5a1613031f3cb7b1066b4", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/1940f99f524ef589b2c5a1613031f3cb7b1066b4", "committedDate": "2020-07-07T20:38:26Z", "message": "getTrashRoots: Log and return empty on IOException instead of throwing RuntimeException.\n\nChange-Id: Id6c705e62ac6c66ffc25ae468a4288d79e0c03df"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2979, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}