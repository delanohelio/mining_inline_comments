{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5Nzg4Nzgx", "number": 605, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDoxNzo0MVrODk_GKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDoyMDozNlrODk_J-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTA5MDk4OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/StorageContainerManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDoxNzo0MVrOFxnaWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTowNToxNlrOFx516w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3MDI2NA==", "bodyText": "We can save this step as most likely it's still in safe mode at the time.", "url": "https://github.com/apache/ozone/pull/605#discussion_r387570264", "createdAt": "2020-03-04T10:17:41Z", "author": {"login": "ChenSammi"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/StorageContainerManager.java", "diffHunk": "@@ -358,6 +358,9 @@ public StorageContainerManager(OzoneConfiguration conf,\n     eventQueue.addHandler(SCMEvents.PIPELINE_ACTIONS, pipelineActionHandler);\n     eventQueue.addHandler(SCMEvents.PIPELINE_REPORT, pipelineReportHandler);\n     eventQueue.addHandler(SCMEvents.SAFE_MODE_STATUS, safeModeHandler);\n+\n+    // Emit initial safe mode status, as now handlers are registered.\n+    scmSafeModeManager.emitSafeModeStatus();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96c35a6b0fd4600c03f09821e83ea1e0f0dcc3c6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3MjIzNQ==", "bodyText": "This is there here, so that in all Managers and protocolServer where we need safeModeStatus will get the value accordingly.\n    isInSafeMode.set(safeModeStatus.getSafeModeStatus());\n    scmClientProtocolServer.setSafeModeStatus(isInSafeMode.get());\n    scmBlockManager.setSafeModeStatus(isInSafeMode.get());\n    scmPipelineManager.setSafeModeStatus(isInSafeMode.get());\n\nWith the current code, we don't need it but in the future, if some manager has not read the HDDS_SCM_SAFEMODE_ENABLED and waiting for this to set the initial safemode status and then take specific actions it will help.", "url": "https://github.com/apache/ozone/pull/605#discussion_r387872235", "createdAt": "2020-03-04T19:05:16Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/StorageContainerManager.java", "diffHunk": "@@ -358,6 +358,9 @@ public StorageContainerManager(OzoneConfiguration conf,\n     eventQueue.addHandler(SCMEvents.PIPELINE_ACTIONS, pipelineActionHandler);\n     eventQueue.addHandler(SCMEvents.PIPELINE_REPORT, pipelineReportHandler);\n     eventQueue.addHandler(SCMEvents.SAFE_MODE_STATUS, safeModeHandler);\n+\n+    // Emit initial safe mode status, as now handlers are registered.\n+    scmSafeModeManager.emitSafeModeStatus();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3MDI2NA=="}, "originalCommit": {"oid": "96c35a6b0fd4600c03f09821e83ea1e0f0dcc3c6"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTEwMDczOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/safemode/SafeModeHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDoyMDozNlrOFxngmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOToyODo0NlrOFx6nwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3MTg2Ng==", "bodyText": "Thanks @bharatviswa504 for the detail explanation.\nWhen add triggerPipelineCreation() here,  we'd better remove the pipelineManager.startPipelineCreator(); in SCMSafeModeManager#exitSafeMode, otherwise, the time wait actually doesn't has effect on pipeline scrubber in PipelineManager.\nAlso, I would suggest move the scmPipelineManager.setSafeModeStatus(isInSafeMode.get()); into the safeModeExitThread run.", "url": "https://github.com/apache/ozone/pull/605#discussion_r387571866", "createdAt": "2020-03-04T10:20:36Z", "author": {"login": "ChenSammi"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/safemode/SafeModeHandler.java", "diffHunk": "@@ -115,7 +113,7 @@ public void onMessage(SafeModeStatus safeModeStatus,\n           Thread.currentThread().interrupt();\n         }\n         replicationManager.start();\n-        cleanupPipelines();\n+        scmPipelineManager.triggerPipelineCreation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96c35a6b0fd4600c03f09821e83ea1e0f0dcc3c6"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg4NDk5Mg==", "bodyText": "pipelineManager.startPipelineCreator(); is there in exitSafeMode so that once after we are out of safeMode schedule a periodic task to create pipelines.\ntriggerPipelineCreation will schedule a task if no pipeline creator is running when the call happened, as previously here we used to destroy pipelines, now replaced it with a call to trigger pipeline creation.\nAnd also we want to run scrubber after safe mode exit, but I think we should be fine to scrub pipelines after an additional safeModewait time. Addressed this.", "url": "https://github.com/apache/ozone/pull/605#discussion_r387884992", "createdAt": "2020-03-04T19:28:46Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/safemode/SafeModeHandler.java", "diffHunk": "@@ -115,7 +113,7 @@ public void onMessage(SafeModeStatus safeModeStatus,\n           Thread.currentThread().interrupt();\n         }\n         replicationManager.start();\n-        cleanupPipelines();\n+        scmPipelineManager.triggerPipelineCreation();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3MTg2Ng=="}, "originalCommit": {"oid": "96c35a6b0fd4600c03f09821e83ea1e0f0dcc3c6"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4925, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}