{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDcxMjMz", "number": 569, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjo1NzoyMVrODhmoqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoyNDowOVrODhnNQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTYyNjAyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconContainerManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjo1NzoyMVrOFsbZdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo0NzoyN1rOFskRVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzMDU1MQ==", "bodyText": "I think adding containerId to the message might be helpful.", "url": "https://github.com/apache/ozone/pull/569#discussion_r382130551", "createdAt": "2020-02-20T16:57:21Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconContainerManager.java", "diffHunk": "@@ -75,6 +80,7 @@ public void addNewContainer(long containerId,\n           getPipelineManager(), containerWithPipeline.getPipeline());\n       addContainerToDB(containerInfo);\n     } catch (IOException ex) {\n+      LOG.info(\"Exception while adding container.\", ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeafa978b7af743cc6196d821552980d010e3981"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3NTkyNQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ozone/pull/569#discussion_r382275925", "createdAt": "2020-02-20T21:47:27Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconContainerManager.java", "diffHunk": "@@ -75,6 +80,7 @@ public void addNewContainer(long containerId,\n           getPipelineManager(), containerWithPipeline.getPipeline());\n       addContainerToDB(containerInfo);\n     } catch (IOException ex) {\n+      LOG.info(\"Exception while adding container.\", ex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzMDU1MQ=="}, "originalCommit": {"oid": "aeafa978b7af743cc6196d821552980d010e3981"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTcxNTYyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconNewNodeHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoyMjo1N1rOFscRxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoyMjo1N1rOFscRxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0NDk2NA==", "bodyText": "Wouldn't it be safer to change the parameter type to ReconNodeManager?", "url": "https://github.com/apache/ozone/pull/569#discussion_r382144964", "createdAt": "2020-02-20T17:22:57Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconNewNodeHandler.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon.scm;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.scm.node.NodeManager;\n+import org.apache.hadoop.hdds.server.events.EventHandler;\n+import org.apache.hadoop.hdds.server.events.EventPublisher;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Adds the new node to Recon Node DB. Since we are not dependent on this\n+ * update, we do this in async.\n+ */\n+public class ReconNewNodeHandler implements EventHandler<DatanodeDetails> {\n+\n+  private static final Logger LOG = LoggerFactory\n+      .getLogger(ReconNewNodeHandler.class);\n+  private ReconNodeManager nodeManager;\n+\n+  public ReconNewNodeHandler(NodeManager nodeManager) {\n+    this.nodeManager = (ReconNodeManager) nodeManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeafa978b7af743cc6196d821552980d010e3981"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTcxOTcwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconNewNodeHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoyNDowOVrOFscUcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoyNDowOVrOFscUcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0NTY1MA==", "bodyText": "Including part of datanode info and the exception might be helpful.", "url": "https://github.com/apache/ozone/pull/569#discussion_r382145650", "createdAt": "2020-02-20T17:24:09Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconNewNodeHandler.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon.scm;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.scm.node.NodeManager;\n+import org.apache.hadoop.hdds.server.events.EventHandler;\n+import org.apache.hadoop.hdds.server.events.EventPublisher;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Adds the new node to Recon Node DB. Since we are not dependent on this\n+ * update, we do this in async.\n+ */\n+public class ReconNewNodeHandler implements EventHandler<DatanodeDetails> {\n+\n+  private static final Logger LOG = LoggerFactory\n+      .getLogger(ReconNewNodeHandler.class);\n+  private ReconNodeManager nodeManager;\n+\n+  public ReconNewNodeHandler(NodeManager nodeManager) {\n+    this.nodeManager = (ReconNodeManager) nodeManager;\n+  }\n+\n+  @Override\n+  public void onMessage(DatanodeDetails datanodeDetails,\n+                        EventPublisher publisher) {\n+    try {\n+      nodeManager.addNodeToDB(datanodeDetails);\n+    } catch (IOException e) {\n+      LOG.error(\"Unable to add new node to Node DB.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "571d0fe4d9729533c84e6105d4253c06ac2a7b58"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4901, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}