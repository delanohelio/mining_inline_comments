{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MDY4MzIw", "number": 1673, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzowMjoxMFrOFCKEFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoyODo1MFrOFCKoKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODA2MzU5OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/OzoneConsts.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzowMjoxMFrOIBKBPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODoxNDowOFrOIBMgsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA4MzY0NA==", "bodyText": "Both usages of GDPR_CHARSET are in calls to methods where both String and Charset versions exist, so we can make this change:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static final String GDPR_CHARSET = StandardCharsets.UTF_8.name();\n          \n          \n            \n              public static final Charset GDPR_CHARSET = StandardCharsets.UTF_8;\n          \n      \n    \n    \n  \n\nSince it is only used in GDPRSymmetricKey, I would also consider inlining this constant.  I don't think we need to define it globally.", "url": "https://github.com/apache/ozone/pull/1673#discussion_r538083644", "createdAt": "2020-12-08T07:02:10Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/OzoneConsts.java", "diffHunk": "@@ -351,7 +352,7 @@ private OzoneConsts() {\n   public static final String GDPR_FLAG = \"gdprEnabled\";\n   public static final String GDPR_ALGORITHM_NAME = \"AES\";\n   public static final int GDPR_DEFAULT_RANDOM_SECRET_LENGTH = 16;\n-  public static final String GDPR_CHARSET = \"UTF-8\";\n+  public static final String GDPR_CHARSET = StandardCharsets.UTF_8.name();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bc56de0838ae178bb506dddc163782baa10e2d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEyNDQ2Nw==", "bodyText": "I think keep GDPR_CHARSET here is better, because define constants about GDPR here.", "url": "https://github.com/apache/ozone/pull/1673#discussion_r538124467", "createdAt": "2020-12-08T08:14:08Z", "author": {"login": "lamberken"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/OzoneConsts.java", "diffHunk": "@@ -351,7 +352,7 @@ private OzoneConsts() {\n   public static final String GDPR_FLAG = \"gdprEnabled\";\n   public static final String GDPR_ALGORITHM_NAME = \"AES\";\n   public static final int GDPR_DEFAULT_RANDOM_SECRET_LENGTH = 16;\n-  public static final String GDPR_CHARSET = \"UTF-8\";\n+  public static final String GDPR_CHARSET = StandardCharsets.UTF_8.name();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA4MzY0NA=="}, "originalCommit": {"oid": "87bc56de0838ae178bb506dddc163782baa10e2d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODEwNjA2OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/framework/src/test/java/org/apache/hadoop/hdds/security/x509/certificate/client/TestDefaultCertificateClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoxNTowN1rOIBKYIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODowOTo0NlrOIBMUYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA4OTUwNQ==", "bodyText": "This is used in two kinds of calls:\n\nRandomStringUtils.random: its chars parameter is not intended for charsets, rather the set of characters to use.  Eg. for \"UTF-8\" it will generate strings like \"--8F8T8U8T\".  Since we don't need this special kind of random string, this usage can be simply removed.\nIOUtils.toInputStream: can accept Charset, too.\n\nAfter removing the first kind of usage, we can convert this constant to Charset.  (I would also inline it, ie. simply use UTF_8.)", "url": "https://github.com/apache/ozone/pull/1673#discussion_r538089505", "createdAt": "2020-12-08T07:15:07Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/framework/src/test/java/org/apache/hadoop/hdds/security/x509/certificate/client/TestDefaultCertificateClient.java", "diffHunk": "@@ -75,7 +76,7 @@\n   private Path dnMetaDirPath;\n   private SecurityConfig omSecurityConfig;\n   private SecurityConfig dnSecurityConfig;\n-  private final static String UTF = \"UTF-8\";\n+  private final static String UTF = StandardCharsets.UTF_8.name();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bc56de0838ae178bb506dddc163782baa10e2d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEyMTMxNQ==", "bodyText": "done", "url": "https://github.com/apache/ozone/pull/1673#discussion_r538121315", "createdAt": "2020-12-08T08:09:46Z", "author": {"login": "lamberken"}, "path": "hadoop-hdds/framework/src/test/java/org/apache/hadoop/hdds/security/x509/certificate/client/TestDefaultCertificateClient.java", "diffHunk": "@@ -75,7 +76,7 @@\n   private Path dnMetaDirPath;\n   private SecurityConfig omSecurityConfig;\n   private SecurityConfig dnSecurityConfig;\n-  private final static String UTF = \"UTF-8\";\n+  private final static String UTF = StandardCharsets.UTF_8.name();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA4OTUwNQ=="}, "originalCommit": {"oid": "87bc56de0838ae178bb506dddc163782baa10e2d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODExOTkwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/security/AWSV4AuthValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoxODo0M1rOIBKfcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoxODo0M1rOIBKfcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5MTM3Nw==", "bodyText": "Nit: this constant can be replaced with import static java.nio.charset.StandardCharsets.UTF_8;.", "url": "https://github.com/apache/ozone/pull/1673#discussion_r538091377", "createdAt": "2020-12-08T07:18:43Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/security/AWSV4AuthValidator.java", "diffHunk": "@@ -42,7 +42,7 @@\n   private final static Logger LOG =\n       LoggerFactory.getLogger(AWSV4AuthValidator.class);\n   private static final String HMAC_SHA256_ALGORITHM = \"HmacSHA256\";\n-  private static final Charset UTF_8 = Charset.forName(\"utf-8\");\n+  private static final Charset UTF_8 = StandardCharsets.UTF_8;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bc56de0838ae178bb506dddc163782baa10e2d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODE1MTk3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/SignatureProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoyNzo0NVrOIBKwqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoyNzo0NVrOIBKwqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5NTc4NQ==", "bodyText": "Nit: usages of this constant can be replaced with the one from StandardCharsets.", "url": "https://github.com/apache/ozone/pull/1673#discussion_r538095785", "createdAt": "2020-12-08T07:27:45Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/SignatureProcessor.java", "diffHunk": "@@ -32,7 +33,7 @@\n   String X_AMAZ_DATE = \"X-Amz-Date\";\n   String CONTENT_MD5 = \"content-md5\";\n   String AUTHORIZATION_HEADER = \"Authorization\";\n-  Charset UTF_8 = Charset.forName(\"utf-8\");\n+  Charset UTF_8 = StandardCharsets.UTF_8;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bc56de0838ae178bb506dddc163782baa10e2d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODE1NTkyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/scm/cli/SQLCLI.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoyODo1MFrOIBKy_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoyODo1MFrOIBKy_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5NjM4MA==", "bodyText": "encoding is unused, can be removed.", "url": "https://github.com/apache/ozone/pull/1673#discussion_r538096380", "createdAt": "2020-12-08T07:28:50Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/scm/cli/SQLCLI.java", "diffHunk": "@@ -72,7 +73,7 @@\n \n   private Options options;\n   private BasicParser parser;\n-  private final Charset encoding = Charset.forName(\"UTF-8\");\n+  private final Charset encoding = StandardCharsets.UTF_8;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bc56de0838ae178bb506dddc163782baa10e2d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4586, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}