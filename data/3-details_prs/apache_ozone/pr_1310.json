{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NTUwOTk1", "number": 1310, "title": "HDDS-4094. Support byte-level write in Freon HadoopFsGenerator", "bodyText": "What changes were proposed in this pull request?\nTeragen seems to use the byte level write method of FSDataOutputStream (write(byte) is used instead of write(byte[], int, int)).\nIt seems to be a good idea to extend existing ContentGenerator of ozone to support the write in smaller chunks to make it easier to reproduce performance problems.\nNote: statistics from FileSystem instance:\nClosing file system instance: 1257412274\n   write.call: 100001066\n   write.allTime: 215951\n   hsync.call: 1\n   hsync.allTime: 3\n   hflush.call: 0\n   hflush.allTime: 0\n   close.call: 4\n   close.allTime: 62\n\nThis was a teragen test with 1GB data (and statistics from one container). write method seems to be called multiple times which means smaller write buffer.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4094\nHow was this patch tested?\nExecuted Freon test with or without turning on the new flag:\nhttps://elek.github.io/ozone-notes/performance/19_hcfs/", "createdAt": "2020-08-10T14:52:31Z", "url": "https://github.com/apache/ozone/pull/1310", "merged": true, "mergeCommit": {"oid": "1abbfed254b34d1fb85cf8e34ec3463f91323c10"}, "closed": true, "closedAt": "2020-08-24T13:14:42Z", "author": {"login": "elek"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9h7EfgH2gAyNDY1NTUwOTk1OmNjODkzOTUxNzA5NmYyNjRjZTVmNjRiNWU3OWEyNjU5ZmY3MzM5ZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_jF9jAFqTQ2ODA4ODkwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cc8939517096f264ce5f64b5e79a2659ff7339ff", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/cc8939517096f264ce5f64b5e79a2659ff7339ff", "committedDate": "2020-08-10T13:06:51Z", "message": "HDDS-4094. Support byte-leve write in Freon HadoopFsGenerator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83d834563150f40cc50e266da063e371e27fa980", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/83d834563150f40cc50e266da063e371e27fa980", "committedDate": "2020-08-11T13:52:41Z", "message": "fix findbugs problem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MDcxOTM1", "url": "https://github.com/apache/ozone/pull/1310#pullrequestreview-465071935", "createdAt": "2020-08-11T13:37:30Z", "commit": {"oid": "cc8939517096f264ce5f64b5e79a2659ff7339ff"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMzozNzozMFrOG-4JuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMDowN1rOG-5o3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU4NDg4OA==", "bodyText": "outputStream.write(buffer, i, results in IndexOutOfBoundsException if bufferSize < keySize.\nI think it should be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (int i = 0; i < nrRemaining; i += copyBufferSize) {\n          \n          \n            \n                      outputStream.write(buffer, i,\n          \n          \n            \n                          Math.min(copyBufferSize, (int) (nrRemaining - i)));\n          \n          \n            \n                    for (int i = 0; i < curSize; i += copyBufferSize) {\n          \n          \n            \n                      outputStream.write(buffer, i,\n          \n          \n            \n                          Math.min(copyBufferSize, curSize - i));\n          \n      \n    \n    \n  \n\nCan you please add a test case in TestContentGenerator for this?", "url": "https://github.com/apache/ozone/pull/1310#discussion_r468584888", "createdAt": "2020-08-11T13:37:30Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/ContentGenerator.java", "diffHunk": "@@ -56,7 +64,20 @@ public void write(OutputStream outputStream) throws IOException {\n     for (long nrRemaining = keySize;\n          nrRemaining > 0; nrRemaining -= bufferSize) {\n       int curSize = (int) Math.min(bufferSize, nrRemaining);\n-      outputStream.write(buffer, 0, curSize);\n+      if (copyBufferSize == 1) {\n+        for (int i = 0; i < curSize; i++) {\n+          outputStream.write(buffer[i]);\n+        }\n+      } else {\n+        for (int i = 0; i < nrRemaining; i += copyBufferSize) {\n+          outputStream.write(buffer, i,\n+              Math.min(copyBufferSize, (int) (nrRemaining - i)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc8939517096f264ce5f64b5e79a2659ff7339ff"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYwOTI0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            }\n          \n          \n            \n            \n          \n          \n            \n              @Test\n          \n          \n            \n              public void writeWithDistinctSizes() throws IOException {\n          \n          \n            \n                ContentGenerator generator = new ContentGenerator(20, 8, 3);\n          \n          \n            \n                ByteArrayOutputStream output = new ByteArrayOutputStream();\n          \n          \n            \n            \n          \n          \n            \n                generator.write(output);\n          \n          \n            \n            \n          \n          \n            \n                byte[] expected = new byte[20];\n          \n          \n            \n                byte[] buffer = generator.getBuffer();\n          \n          \n            \n                System.arraycopy(buffer, 0, expected, 0, buffer.length);\n          \n          \n            \n                System.arraycopy(buffer, 0, expected, 8, buffer.length);\n          \n          \n            \n                System.arraycopy(buffer, 0, expected, 16, 4);\n          \n          \n            \n                Assert.assertArrayEquals(expected, output.toByteArray());\n          \n          \n            \n              }\n          \n          \n            \n            }", "url": "https://github.com/apache/ozone/pull/1310#discussion_r468609247", "createdAt": "2020-08-11T14:10:07Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/test/java/org/apache/hadoop/ozone/freon/TestContentGenerator.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.apache.hadoop.ozone.freon;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Tests for the ContentGenerator class of Freon.\n+ */\n+public class TestContentGenerator {\n+\n+  @Test\n+  public void writeWrite() throws IOException {\n+    ContentGenerator generator = new ContentGenerator(1024, 1024);\n+    ByteArrayOutputStream output = new ByteArrayOutputStream();\n+\n+    generator.write(output);\n+    Assert.assertArrayEquals(generator.getBuffer(), output.toByteArray());\n+  }\n+\n+  @Test\n+  public void writeWithByteLevelWrite() throws IOException {\n+    ContentGenerator generator = new ContentGenerator(1024, 1024, 1);\n+    ByteArrayOutputStream output = new ByteArrayOutputStream();\n+\n+    generator.write(output);\n+    Assert.assertArrayEquals(generator.getBuffer(), output.toByteArray());\n+  }\n+\n+  @Test\n+  public void writeWithSmallBuffer() throws IOException {\n+    ContentGenerator generator = new ContentGenerator(1024, 1024, 10);\n+    ByteArrayOutputStream output = new ByteArrayOutputStream();\n+\n+    generator.write(output);\n+    Assert.assertArrayEquals(generator.getBuffer(), output.toByteArray());\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc8939517096f264ce5f64b5e79a2659ff7339ff"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MTA2NzUy", "url": "https://github.com/apache/ozone/pull/1310#pullrequestreview-465106752", "createdAt": "2020-08-11T14:12:37Z", "commit": {"oid": "83d834563150f40cc50e266da063e371e27fa980"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMjozN1rOG-5wLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMjozN1rOG-5wLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYxMTExOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Number of bytes to write in one call. Should be less than the bufferSize.\n          \n          \n            \n               * Number of bytes to write in one call. Should be no larger than the bufferSize.", "url": "https://github.com/apache/ozone/pull/1310#discussion_r468611118", "createdAt": "2020-08-11T14:12:37Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/ContentGenerator.java", "diffHunk": "@@ -38,15 +39,23 @@\n    */\n   private int bufferSize;\n \n+  /**\n+   * Number of bytes to write in one call. Should be less than the bufferSize.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d834563150f40cc50e266da063e371e27fa980"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c6fe66ea2e680c6bd868ec0bcb9cfab686d7c43", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/2c6fe66ea2e680c6bd868ec0bcb9cfab686d7c43", "committedDate": "2020-08-14T17:44:22Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Doroszlai, Attila <6454655+adoroszlai@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19c5cf4e213bbe01040e6b667756437fd81a90b8", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/19c5cf4e213bbe01040e6b667756437fd81a90b8", "committedDate": "2020-08-14T17:46:23Z", "message": "add one more unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "190300951e66edb524b55cd7c667bd84fca08ce4", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/190300951e66edb524b55cd7c667bd84fca08ce4", "committedDate": "2020-08-14T17:47:03Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDg4OTA1", "url": "https://github.com/apache/ozone/pull/1310#pullrequestreview-468088905", "createdAt": "2020-08-16T19:36:30Z", "commit": {"oid": "190300951e66edb524b55cd7c667bd84fca08ce4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2708, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}