{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTU1MzU2", "number": 1051, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzoxNzoyNFrOEEY8qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxNDoxMTowN1rOEFQYYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDM4NTA0OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/pipeline/ListPipelinesSubcommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzoxNzoyNFrOGh-1IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzoxNzoyNFrOGh-1IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4NTYwMA==", "bodyText": "Please reduce the indent to fix the checkstyle failure.", "url": "https://github.com/apache/ozone/pull/1051#discussion_r438285600", "createdAt": "2020-06-10T17:17:24Z", "author": {"login": "maobaolong"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/pipeline/ListPipelinesSubcommand.java", "diffHunk": "@@ -54,17 +54,13 @@\n   @Override\n   public Void call() throws Exception {\n     try (ScmClient scmClient = parent.getParent().createScmClient()) {\n-      if (Strings.isNullOrEmpty(factor) && Strings.isNullOrEmpty(state)) {\n-        scmClient.listPipelines().forEach(System.out::println);\n-      } else {\n-        scmClient.listPipelines().stream()\n-            .filter(p -> ((Strings.isNullOrEmpty(factor) ||\n-                (p.getFactor().toString().compareToIgnoreCase(factor) == 0))\n-                && (Strings.isNullOrEmpty(state) ||\n-                (p.getPipelineState().toString().compareToIgnoreCase(state)\n-                    == 0))))\n+       scmClient.listPipelines().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af290e2e401277e9e548b5bda3eebd4a3866fe77"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTQ2NzIxOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/pipeline/ListPipelinesSubcommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxNDoxMTowN1rOGjXuIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMzo1Mzo1OVrOGmHNdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0MTk4Nw==", "bodyText": "Structuring this as below would reduce duplication, and make it easier to add further filters if needed:\nStream<...> stream = scmClient.listPipelines().stream();\nif (!isNullOrEmpty(factor)) {\n  stream = stream.filter(...);\n}\nif (!isNullOrEmpty(state)) {\n  stream = stream.filter(...);\n}\nstream.forEach(...);", "url": "https://github.com/apache/ozone/pull/1051#discussion_r439741987", "createdAt": "2020-06-13T14:11:07Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/pipeline/ListPipelinesSubcommand.java", "diffHunk": "@@ -54,17 +54,12 @@\n   @Override\n   public Void call() throws Exception {\n     try (ScmClient scmClient = parent.getParent().createScmClient()) {\n-      if (Strings.isNullOrEmpty(factor) && Strings.isNullOrEmpty(state)) {\n-        scmClient.listPipelines().forEach(System.out::println);\n-      } else {\n-        scmClient.listPipelines().stream()\n-            .filter(p -> ((Strings.isNullOrEmpty(factor) ||\n-                (p.getFactor().toString().compareToIgnoreCase(factor) == 0))\n-                && (Strings.isNullOrEmpty(state) ||\n-                (p.getPipelineState().toString().compareToIgnoreCase(state)\n-                    == 0))))\n-            .forEach(System.out::println);\n-      }\n+      scmClient.listPipelines().stream()\n+          .filter(p -> ((Strings.isNullOrEmpty(factor)\n+              || (p.getFactor().toString().compareToIgnoreCase(factor) == 0))\n+              && (Strings.isNullOrEmpty(state) || (p.getPipelineState()\n+                  .toString().compareToIgnoreCase(state) == 0))))\n+          .forEach(System.out::println);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45d9b2760fe5ebe904890385cd52f9c55fbd25d1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYxNzIwNw==", "bodyText": "@bhemanthkumar i think the changes within the try block @adoroszlai is\n      Stream<Pipeline> stream = scmClient.listPipelines().stream();\n      if (!Strings.isNullOrEmpty(factor)) {\n        stream =\n            stream.filter(p -> p.getFactor().toString()\n                .compareToIgnoreCase(factor) == 0);\n      }\n      if (!Strings.isNullOrEmpty(state)) {\n        stream =\n            stream.filter(p -> p.getPipelineState().toString()\n                .compareToIgnoreCase(state) == 0);\n      }\n      stream.forEach(System.out::println);", "url": "https://github.com/apache/ozone/pull/1051#discussion_r442617207", "createdAt": "2020-06-19T03:53:59Z", "author": {"login": "maobaolong"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/pipeline/ListPipelinesSubcommand.java", "diffHunk": "@@ -54,17 +54,12 @@\n   @Override\n   public Void call() throws Exception {\n     try (ScmClient scmClient = parent.getParent().createScmClient()) {\n-      if (Strings.isNullOrEmpty(factor) && Strings.isNullOrEmpty(state)) {\n-        scmClient.listPipelines().forEach(System.out::println);\n-      } else {\n-        scmClient.listPipelines().stream()\n-            .filter(p -> ((Strings.isNullOrEmpty(factor) ||\n-                (p.getFactor().toString().compareToIgnoreCase(factor) == 0))\n-                && (Strings.isNullOrEmpty(state) ||\n-                (p.getPipelineState().toString().compareToIgnoreCase(state)\n-                    == 0))))\n-            .forEach(System.out::println);\n-      }\n+      scmClient.listPipelines().stream()\n+          .filter(p -> ((Strings.isNullOrEmpty(factor)\n+              || (p.getFactor().toString().compareToIgnoreCase(factor) == 0))\n+              && (Strings.isNullOrEmpty(state) || (p.getPipelineState()\n+                  .toString().compareToIgnoreCase(state) == 0))))\n+          .forEach(System.out::println);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0MTk4Nw=="}, "originalCommit": {"oid": "45d9b2760fe5ebe904890385cd52f9c55fbd25d1"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4241, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}