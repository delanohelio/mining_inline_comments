{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4OTY4NzM0", "number": 1571, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxODo1MDozMFrOE31Nkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxODo1MDozMFrOE31Nkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTc4OTYyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOmMetrics.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxODo1MDozMFrOHxaBDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMDowNToxOFrOHxjJAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU2ODUyNA==", "bodyText": "I wonder if it is really necessary to call this again and again. Doesn't look needed.", "url": "https://github.com/apache/ozone/pull/1571#discussion_r521568524", "createdAt": "2020-11-11T18:50:30Z", "author": {"login": "jojochuang"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOmMetrics.java", "diffHunk": "@@ -318,6 +326,42 @@ public void testKeyOps() throws IOException {\n \n   }\n \n+  @Test\n+  public void testAclOperations() throws IOException {\n+    try {\n+      // Create a volume.\n+      cluster.getClient().getObjectStore().createVolume(\"volumeacl\");\n+\n+      OzoneObj volObj = new OzoneObjInfo.Builder().setVolumeName(\"volumeacl\")\n+          .setResType(VOLUME).setStoreType(OZONE).build();\n+\n+      // Test getAcl\n+      List<OzoneAcl> acls = ozoneManager.getAcl(volObj);\n+      MetricsRecordBuilder omMetrics = getMetrics(\"OMMetrics\");\n+      assertCounter(\"NumGetAcl\", 1L, omMetrics);\n+\n+      // Test addAcl\n+      ozoneManager.addAcl(volObj,\n+          new OzoneAcl(IAccessAuthorizer.ACLIdentityType.USER, \"ozoneuser\",\n+              IAccessAuthorizer.ACLType.ALL, ACCESS));\n+      omMetrics = getMetrics(\"OMMetrics\");\n+      assertCounter(\"NumAddAcl\", 1L, omMetrics);\n+\n+      // Test setAcl\n+      ozoneManager.setAcl(volObj, acls);\n+      omMetrics = getMetrics(\"OMMetrics\");\n+      assertCounter(\"NumSetAcl\", 1L, omMetrics);\n+\n+      // Test removeAcl\n+      ozoneManager.removeAcl(volObj, acls.get(0));\n+      omMetrics = getMetrics(\"OMMetrics\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5accb019bf1e0560e40a19b688e112d995f4df37"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5ODg1MQ==", "bodyText": "Well, I also thought the same, it should be required only once, But my test itself fails without that. If you observe the tests above. testVolumeOps, testBucketOps and testKeyOps they too are also calling getMetrics(\"OMMetrics\"); before asserting.\nThe getMetrics seems to fetch the values and keep it. it doesn't seems to be updating.", "url": "https://github.com/apache/ozone/pull/1571#discussion_r521698851", "createdAt": "2020-11-11T23:23:27Z", "author": {"login": "ayushtkn"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOmMetrics.java", "diffHunk": "@@ -318,6 +326,42 @@ public void testKeyOps() throws IOException {\n \n   }\n \n+  @Test\n+  public void testAclOperations() throws IOException {\n+    try {\n+      // Create a volume.\n+      cluster.getClient().getObjectStore().createVolume(\"volumeacl\");\n+\n+      OzoneObj volObj = new OzoneObjInfo.Builder().setVolumeName(\"volumeacl\")\n+          .setResType(VOLUME).setStoreType(OZONE).build();\n+\n+      // Test getAcl\n+      List<OzoneAcl> acls = ozoneManager.getAcl(volObj);\n+      MetricsRecordBuilder omMetrics = getMetrics(\"OMMetrics\");\n+      assertCounter(\"NumGetAcl\", 1L, omMetrics);\n+\n+      // Test addAcl\n+      ozoneManager.addAcl(volObj,\n+          new OzoneAcl(IAccessAuthorizer.ACLIdentityType.USER, \"ozoneuser\",\n+              IAccessAuthorizer.ACLType.ALL, ACCESS));\n+      omMetrics = getMetrics(\"OMMetrics\");\n+      assertCounter(\"NumAddAcl\", 1L, omMetrics);\n+\n+      // Test setAcl\n+      ozoneManager.setAcl(volObj, acls);\n+      omMetrics = getMetrics(\"OMMetrics\");\n+      assertCounter(\"NumSetAcl\", 1L, omMetrics);\n+\n+      // Test removeAcl\n+      ozoneManager.removeAcl(volObj, acls.get(0));\n+      omMetrics = getMetrics(\"OMMetrics\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU2ODUyNA=="}, "originalCommit": {"oid": "5accb019bf1e0560e40a19b688e112d995f4df37"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcxODAxNw==", "bodyText": "ok thx for the clarification", "url": "https://github.com/apache/ozone/pull/1571#discussion_r521718017", "createdAt": "2020-11-12T00:05:18Z", "author": {"login": "jojochuang"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOmMetrics.java", "diffHunk": "@@ -318,6 +326,42 @@ public void testKeyOps() throws IOException {\n \n   }\n \n+  @Test\n+  public void testAclOperations() throws IOException {\n+    try {\n+      // Create a volume.\n+      cluster.getClient().getObjectStore().createVolume(\"volumeacl\");\n+\n+      OzoneObj volObj = new OzoneObjInfo.Builder().setVolumeName(\"volumeacl\")\n+          .setResType(VOLUME).setStoreType(OZONE).build();\n+\n+      // Test getAcl\n+      List<OzoneAcl> acls = ozoneManager.getAcl(volObj);\n+      MetricsRecordBuilder omMetrics = getMetrics(\"OMMetrics\");\n+      assertCounter(\"NumGetAcl\", 1L, omMetrics);\n+\n+      // Test addAcl\n+      ozoneManager.addAcl(volObj,\n+          new OzoneAcl(IAccessAuthorizer.ACLIdentityType.USER, \"ozoneuser\",\n+              IAccessAuthorizer.ACLType.ALL, ACCESS));\n+      omMetrics = getMetrics(\"OMMetrics\");\n+      assertCounter(\"NumAddAcl\", 1L, omMetrics);\n+\n+      // Test setAcl\n+      ozoneManager.setAcl(volObj, acls);\n+      omMetrics = getMetrics(\"OMMetrics\");\n+      assertCounter(\"NumSetAcl\", 1L, omMetrics);\n+\n+      // Test removeAcl\n+      ozoneManager.removeAcl(volObj, acls.get(0));\n+      omMetrics = getMetrics(\"OMMetrics\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU2ODUyNA=="}, "originalCommit": {"oid": "5accb019bf1e0560e40a19b688e112d995f4df37"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4715, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}