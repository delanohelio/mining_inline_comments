{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMjI5Mjgw", "number": 886, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODowMTozOVrOD372iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxODo1NlrOD6HxKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTc4ODg5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/debug/ChunkKeyHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODowMTozOVrOGOeKtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODowMTozOVrOGOeKtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgyNzUwOA==", "bodyText": "lets convert this if into a switch case, in case new CHunkLayoutVersions are added later, there should be an option of adding it later. Also for default case lets throw an exception.", "url": "https://github.com/apache/ozone/pull/886#discussion_r417827508", "createdAt": "2020-04-30T08:01:39Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/debug/ChunkKeyHandler.java", "diffHunk": "@@ -128,17 +131,23 @@ protected void execute(OzoneClient client, OzoneAddress address)\n         chunkDetails.setChunkName(chunkInfo.getChunkName());\n         chunkDetails.setChunkOffset(chunkInfo.getOffset());\n         chunkDetailsList.add(chunkDetails);\n-        chunkPaths.add(getChunkLocationPath(containerData.getContainerPath())\n-              + File.separator\n-              + chunkInfo.getChunkName());\n+        if (chunkLayOutVersion == ChunkLayOutVersion.FILE_PER_CHUNK) {\n+          chunkPaths.add(getChunkLocationPath(containerData.getContainerPath())\n+                  + File.separator\n+                  + chunkInfo.getChunkName());\n+        } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eeb17470661372bc0a26305041735ba9626590a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTc5MDcxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/dist/src/main/smoketest/basic/ozone-shell.robot", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODowMjoxNVrOGOeL9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDowMzowOVrOGQB0IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgyNzgzMQ==", "bodyText": "Can this command be executed on the datanode container and lets do a check that the file exists.", "url": "https://github.com/apache/ozone/pull/886#discussion_r417827831", "createdAt": "2020-04-30T08:02:15Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/dist/src/main/smoketest/basic/ozone-shell.robot", "diffHunk": "@@ -121,7 +121,7 @@ Test key handling\n     ${result} =     Execute             ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name==\"key1\")'\n                     Should contain      ${result}       creationTime\n     ${result} =     Execute             ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'\n-                    Should contain      ${result}       chunks\n+                    Should contain      ${result}       files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eeb17470661372bc0a26305041735ba9626590a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2MDEyOQ==", "bodyText": "I have included a separate robot test that checks whether the file is present in the datanode.", "url": "https://github.com/apache/ozone/pull/886#discussion_r419460129", "createdAt": "2020-05-04T14:03:09Z", "author": {"login": "sadanand48"}, "path": "hadoop-ozone/dist/src/main/smoketest/basic/ozone-shell.robot", "diffHunk": "@@ -121,7 +121,7 @@ Test key handling\n     ${result} =     Execute             ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name==\"key1\")'\n                     Should contain      ${result}       creationTime\n     ${result} =     Execute             ozone debug chunkinfo ${protocol}${server}/${volume}/bb1/key1 | jq -r '.[]'\n-                    Should contain      ${result}       chunks\n+                    Should contain      ${result}       files", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgyNzgzMQ=="}, "originalCommit": {"oid": "8eeb17470661372bc0a26305041735ba9626590a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzcxNTE1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/debug/ChunkKeyHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjowMjoxMVrOGQbcbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjowMjoxMVrOGQbcbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MDA0NQ==", "bodyText": "I think we should move the code to give the chunk file path given the containerID/ContainerData into some common utilities class and use it across client/server so that any further changes won't break it..", "url": "https://github.com/apache/ozone/pull/886#discussion_r419880045", "createdAt": "2020-05-05T06:02:11Z", "author": {"login": "bshashikant"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/debug/ChunkKeyHandler.java", "diffHunk": "@@ -128,17 +132,31 @@ protected void execute(OzoneClient client, OzoneAddress address)\n         chunkDetails.setChunkName(chunkInfo.getChunkName());\n         chunkDetails.setChunkOffset(chunkInfo.getOffset());\n         chunkDetailsList.add(chunkDetails);\n-        chunkPaths.add(getChunkLocationPath(containerData.getContainerPath())\n-              + File.separator\n-              + chunkInfo.getChunkName());\n+        switch (chunkLayOutVersion) {\n+        case FILE_PER_CHUNK:\n+          chunkPaths.add(getChunkLocationPath(containerData\n+                  .getContainerPath())\n+                  + File.separator\n+                  + chunkInfo.getChunkName());\n+          break;\n+        case FILE_PER_BLOCK:\n+          chunkPaths.add(getChunkLocationPath(containerData\n+                  .getContainerPath())\n+                  + File.separator\n+                  + keyLocation.getLocalID() + \".block\");\n+          break;\n+        default:\n+          throw new StorageContainerException(\"chunk strategy does not exist\",\n+                  ContainerProtos.Result.UNABLE_TO_FIND_CHUNK);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e7103a3286df0b5d75f705eebffb024de479d3"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzk0ODE2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/debug/ChunkFileUtility.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzozMjozNFrOGQdmBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDozOTo1OFrOGQjsmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNTI3MA==", "bodyText": "I'd prefer taking chunk file path directly from ChunkLayOutVersion.getChunkFile() instead of the switch.  This way if a new enum constant is introduced, this code will work without any changes.\nThis needs a minor refactoring in ChunkLayOutVersion, which accepts a ContainerData object, to work directly with the chunk dir:\n--- hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/impl/ChunkLayOutVersion.java\n+++ hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/impl/ChunkLayOutVersion.java\n@@ -40,17 +40,15 @@\n\n   FILE_PER_CHUNK(1, \"One file per chunk\") {\n     @Override\n-    public File getChunkFile(ContainerData containerData, BlockID blockID,\n-        ChunkInfo info) throws StorageContainerException {\n-      File chunksLoc = verifyChunkDirExists(containerData);\n-      return chunksLoc.toPath().resolve(info.getChunkName()).toFile();\n+    public File getChunkFile(File chunkDir, BlockID blockID,\n+        ChunkInfo info) {\n+      return chunkDir.toPath().resolve(info.getChunkName()).toFile();\n     }\n   },\n   FILE_PER_BLOCK(2, \"One file per block\") {\n     @Override\n-    public File getChunkFile(ContainerData containerData, BlockID blockID,\n-        ChunkInfo info) throws StorageContainerException {\n-      File chunkDir = verifyChunkDirExists(containerData);\n+    public File getChunkFile(File chunkDir, BlockID blockID,\n+        ChunkInfo info) {\n       return new File(chunkDir, blockID.getLocalID() + \".block\");\n     }\n   };\n@@ -118,8 +116,14 @@ public String getDescription() {\n     return description;\n   }\n\n-  public abstract File getChunkFile(ContainerData containerData,\n-      BlockID blockID, ChunkInfo info) throws StorageContainerException;\n+  public abstract File getChunkFile(File chunksDir,\n+      BlockID blockID, ChunkInfo info);\n+\n+  public File getChunkFile(ContainerData containerData,\n+      BlockID blockID, ChunkInfo info) throws StorageContainerException {\n+    File chunksLoc = verifyChunkDirExists(containerData);\n+    return getChunkFile(chunksLoc, blockID, info);\n+  }\n\n   @Override\n   public String toString() {", "url": "https://github.com/apache/ozone/pull/886#discussion_r419915270", "createdAt": "2020-05-05T07:32:34Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/debug/ChunkFileUtility.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.apache.hadoop.ozone.debug;\n+\n+import org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos;\n+import org.apache.hadoop.hdds.scm.container.common.helpers.StorageContainerException;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.container.common.impl.ChunkLayOutVersion;\n+import org.apache.hadoop.ozone.om.helpers.OmKeyLocationInfo;\n+\n+import java.io.File;\n+\n+\n+public final class ChunkFileUtility {\n+\n+    static String getChunkLocationPath(String containerLocation) {\n+        return containerLocation + File.separator + OzoneConsts.STORAGE_DIR_CHUNKS;\n+    }\n+\n+    public static String getChunkFilePath(ContainerProtos.ChunkInfo\n+      chunkInfo, OmKeyLocationInfo keyLocation,\n+      ContainerProtos.ContainerDataProto data,\n+      ChunkLayOutVersion layOutVersion)\n+      throws StorageContainerException {\n+        switch (layOutVersion) {\n+        case FILE_PER_CHUNK:\n+          return  getChunkLocationPath(data\n+                  .getContainerPath())\n+                  + File.separator\n+                  + chunkInfo.getChunkName();\n+        case FILE_PER_BLOCK:\n+          return  getChunkLocationPath(data\n+                  .getContainerPath())\n+                  + File.separator\n+                  + keyLocation.getLocalID() + \".block\";\n+        default:\n+          throw new StorageContainerException(\"chunk strategy does not exist\",\n+                  ContainerProtos.Result.UNABLE_TO_FIND_CHUNK);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b9c097cdc240ea63d35cb2964945d26970ac4d6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAxNTI1Nw==", "bodyText": "Thankyou @adoroszlai for the review. Addressed review comments .", "url": "https://github.com/apache/ozone/pull/886#discussion_r420015257", "createdAt": "2020-05-05T10:39:58Z", "author": {"login": "sadanand48"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/debug/ChunkFileUtility.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.apache.hadoop.ozone.debug;\n+\n+import org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos;\n+import org.apache.hadoop.hdds.scm.container.common.helpers.StorageContainerException;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.container.common.impl.ChunkLayOutVersion;\n+import org.apache.hadoop.ozone.om.helpers.OmKeyLocationInfo;\n+\n+import java.io.File;\n+\n+\n+public final class ChunkFileUtility {\n+\n+    static String getChunkLocationPath(String containerLocation) {\n+        return containerLocation + File.separator + OzoneConsts.STORAGE_DIR_CHUNKS;\n+    }\n+\n+    public static String getChunkFilePath(ContainerProtos.ChunkInfo\n+      chunkInfo, OmKeyLocationInfo keyLocation,\n+      ContainerProtos.ContainerDataProto data,\n+      ChunkLayOutVersion layOutVersion)\n+      throws StorageContainerException {\n+        switch (layOutVersion) {\n+        case FILE_PER_CHUNK:\n+          return  getChunkLocationPath(data\n+                  .getContainerPath())\n+                  + File.separator\n+                  + chunkInfo.getChunkName();\n+        case FILE_PER_BLOCK:\n+          return  getChunkLocationPath(data\n+                  .getContainerPath())\n+                  + File.separator\n+                  + keyLocation.getLocalID() + \".block\";\n+        default:\n+          throw new StorageContainerException(\"chunk strategy does not exist\",\n+                  ContainerProtos.Result.UNABLE_TO_FIND_CHUNK);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNTI3MA=="}, "originalCommit": {"oid": "7b9c097cdc240ea63d35cb2964945d26970ac4d6"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjY5MDUwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/dist/src/main/smoketest/debug/ozone-debug.robot", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxMTo0N1rOGRxR2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxMTo0N1rOGRxR2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4NjM2Mw==", "bodyText": "I think this should be a Suite Setup instead of a Test Case, but it's OK to improve in a followup Jira.", "url": "https://github.com/apache/ozone/pull/886#discussion_r421286363", "createdAt": "2020-05-07T07:11:47Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/smoketest/debug/ozone-debug.robot", "diffHunk": "@@ -0,0 +1,37 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+*** Settings ***\n+Documentation       Test ozone Debug CLI\n+Library             OperatingSystem\n+Resource            ../commonlib.robot\n+Test Timeout        2 minute\n+\n+*** Variables ***\n+\n+\n+*** Test Cases ***\n+Create Volume,Bucket and put key\n+   Execute             ozone sh volume create o3://om/vol1 --quota 100TB\n+   Execute             ozone sh bucket create o3://om/vol1/bucket1\n+   Execute             ozone sh key put o3://om/vol1/bucket1/debugKey /opt/hadoop/NOTICE.txt", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3758b77e7ccf1e99511cfc92405e6ac4d85a0e31"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjcxMjczOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/dist/src/main/smoketest/debug/ozone-debug.robot", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxODo1NlrOGRxf0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxODo1NlrOGRxf0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4OTkzNw==", "bodyText": "Execute checks the return code of the command, so I think this should be enough to verify that the file exists:\n                    Execute             test -f ${result}\n\nBetter yet, there is a Robot keyword for the same: File Should Exist\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ${result3} =    Execute             echo \"exists\"\n          \n          \n            \n                ${result2} =    Execute             test -f ${result} && echo \"exists\"\n          \n          \n            \n                                Should Be Equal     ${result2}       ${result3}\n          \n          \n            \n                                File Should Exist             ${result}", "url": "https://github.com/apache/ozone/pull/886#discussion_r421289937", "createdAt": "2020-05-07T07:18:56Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/smoketest/debug/ozone-debug.robot", "diffHunk": "@@ -0,0 +1,37 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+*** Settings ***\n+Documentation       Test ozone Debug CLI\n+Library             OperatingSystem\n+Resource            ../commonlib.robot\n+Test Timeout        2 minute\n+\n+*** Variables ***\n+\n+\n+*** Test Cases ***\n+Create Volume,Bucket and put key\n+   Execute             ozone sh volume create o3://om/vol1 --quota 100TB\n+   Execute             ozone sh bucket create o3://om/vol1/bucket1\n+   Execute             ozone sh key put o3://om/vol1/bucket1/debugKey /opt/hadoop/NOTICE.txt\n+\n+Test ozone debug\n+    ${result} =     Execute             ozone debug chunkinfo o3://om/vol1/bucket1/debugKey | jq -r '.[]'\n+                    Should contain      ${result}       files\n+    ${result} =     Execute             ozone debug chunkinfo o3://om/vol1/bucket1/debugKey | jq -r '.[].files[0]'\n+    ${result3} =    Execute             echo \"exists\"\n+    ${result2} =    Execute             test -f ${result} && echo \"exists\"\n+                    Should Be Equal     ${result2}       ${result3}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3758b77e7ccf1e99511cfc92405e6ac4d85a0e31"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4279, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}