{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NzY5NzYz", "number": 1371, "title": "HDDS-2922. Balance ratis leader distribution in datanodes", "bodyText": "What changes were proposed in this pull request?\nWhat's the problem ?\nWhen enable multi-raft, the leader distribution in datanodes is not balance. In my test, there are 72 datanodes, each datanode\nengage in 6 pipelines, so there are 144 pipelines. As the image shows, the leader number of the 4 datanodes is 0, 0, 4, 2, it's not balance. Because ratis leader not only accept client request, but also replicate log to 2 followers, and follower only replicate log from leader, so the leader's load is at least 3 times of follower. So we need to balance leader.\n\nHow to improve ?\nWith the guidance of @szetszwo , I implement RATIS-967, which not only support priority in leader election, but also support lower priority leader try to yield leadership to higher priority peer when  higher priority peer's log catch up, to address the higher priority leader lose the leadership.\nSo in ozone\n\nassign the suggested leader with higher priority, and 2 followers with lower priority, then we can achieve leader distribution's balance.\nrecord the suggested leader in Pipeline, when create new pipeline, choose 3 datanodes,  find pipelines on each datanode, calculate the suggested leader count on each datanode, then choose the datanode which has the minum suggested leader count as the leader.\nto avoid we lose the suggested leader of pipeline in SCM when SCM restart, we store the suggested leader in pipeline table.\n\nAs the following image shows, there are 72 datanodes, each datanode engage in 6 pipelines, so there are 144 pipelines.\nThe leader count of each datanode is 2, there is no exception, we achieve the leader distribution's balance.\n\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-2922\nHow was this patch tested?\nadd new ut.", "createdAt": "2020-09-01T02:43:14Z", "url": "https://github.com/apache/ozone/pull/1371", "merged": true, "mergeCommit": {"oid": "8fab5f21c5e9bcfb1ce9b55a4179b8c958a53b25"}, "closed": true, "closedAt": "2020-10-19T03:44:11Z", "author": {"login": "runzhiwang"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE1_iXABqjM3MTgwNTg3Nzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSE6ILgFqTUwNzIyNzQ5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc6c7ec53907b1812c4f8fc3677d4ce13e147122", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/cc6c7ec53907b1812c4f8fc3677d4ce13e147122", "committedDate": "2020-09-01T02:26:57Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}, "afterCommit": {"oid": "d5b2d64c58484324136ab99d5ec4e2d57e487886", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/d5b2d64c58484324136ab99d5ec4e2d57e487886", "committedDate": "2020-09-02T06:26:52Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5b2d64c58484324136ab99d5ec4e2d57e487886", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/d5b2d64c58484324136ab99d5ec4e2d57e487886", "committedDate": "2020-09-02T06:26:52Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}, "afterCommit": {"oid": "73b86226a0ad4efffdc7efab2568ac447f6651fe", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/73b86226a0ad4efffdc7efab2568ac447f6651fe", "committedDate": "2020-09-02T06:28:19Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de96abe338b9b36d3fd6e6b2781335476f628b17", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/de96abe338b9b36d3fd6e6b2781335476f628b17", "committedDate": "2020-09-02T08:21:49Z", "message": "triger ci"}, "afterCommit": {"oid": "73b86226a0ad4efffdc7efab2568ac447f6651fe", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/73b86226a0ad4efffdc7efab2568ac447f6651fe", "committedDate": "2020-09-02T06:28:19Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77b3209ae75b17ea6b9327fe13589678f7474603", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/77b3209ae75b17ea6b9327fe13589678f7474603", "committedDate": "2020-09-02T12:11:42Z", "message": "triger ci"}, "afterCommit": {"oid": "73b86226a0ad4efffdc7efab2568ac447f6651fe", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/73b86226a0ad4efffdc7efab2568ac447f6651fe", "committedDate": "2020-09-02T06:28:19Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73b86226a0ad4efffdc7efab2568ac447f6651fe", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/73b86226a0ad4efffdc7efab2568ac447f6651fe", "committedDate": "2020-09-02T06:28:19Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}, "afterCommit": {"oid": "ed22ef0fae3e2ae00e6bab725cc21b73c643e87b", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/ed22ef0fae3e2ae00e6bab725cc21b73c643e87b", "committedDate": "2020-09-03T12:15:39Z", "message": "triger ci"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed22ef0fae3e2ae00e6bab725cc21b73c643e87b", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/ed22ef0fae3e2ae00e6bab725cc21b73c643e87b", "committedDate": "2020-09-03T12:15:39Z", "message": "triger ci"}, "afterCommit": {"oid": "e10cf62c22791f1be675d3e26f32b792934c96ea", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/e10cf62c22791f1be675d3e26f32b792934c96ea", "committedDate": "2020-09-06T03:44:25Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e10cf62c22791f1be675d3e26f32b792934c96ea", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/e10cf62c22791f1be675d3e26f32b792934c96ea", "committedDate": "2020-09-06T03:44:25Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}, "afterCommit": {"oid": "904a161b628b3a6837b735d0fa6d09178a7cc4f0", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/904a161b628b3a6837b735d0fa6d09178a7cc4f0", "committedDate": "2020-09-06T05:52:04Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18e99a8ae0fb7cacae01c1939f2734ee96194a9f", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/18e99a8ae0fb7cacae01c1939f2734ee96194a9f", "committedDate": "2020-09-06T07:07:04Z", "message": "triger ci"}, "afterCommit": {"oid": "904a161b628b3a6837b735d0fa6d09178a7cc4f0", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/904a161b628b3a6837b735d0fa6d09178a7cc4f0", "committedDate": "2020-09-06T05:52:04Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "904a161b628b3a6837b735d0fa6d09178a7cc4f0", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/904a161b628b3a6837b735d0fa6d09178a7cc4f0", "committedDate": "2020-09-06T05:52:04Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}, "afterCommit": {"oid": "8fc9e0c2426cbf439af3fdcfa80060512b4ef1d8", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/8fc9e0c2426cbf439af3fdcfa80060512b4ef1d8", "committedDate": "2020-09-07T01:11:33Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fc9e0c2426cbf439af3fdcfa80060512b4ef1d8", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/8fc9e0c2426cbf439af3fdcfa80060512b4ef1d8", "committedDate": "2020-09-07T01:11:33Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}, "afterCommit": {"oid": "ae548311a722ba992d32d389475d2a67b9983581", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/ae548311a722ba992d32d389475d2a67b9983581", "committedDate": "2020-09-07T04:45:08Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae548311a722ba992d32d389475d2a67b9983581", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/ae548311a722ba992d32d389475d2a67b9983581", "committedDate": "2020-09-07T04:45:08Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}, "afterCommit": {"oid": "b58df38136f0b76262cfc5b6a0fe4282375462d3", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/b58df38136f0b76262cfc5b6a0fe4282375462d3", "committedDate": "2020-09-07T23:43:17Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NjA1Mjcz", "url": "https://github.com/apache/ozone/pull/1371#pullrequestreview-485605273", "createdAt": "2020-09-10T06:03:07Z", "commit": {"oid": "b58df38136f0b76262cfc5b6a0fe4282375462d3"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNjowNTo1MlrOHPkVgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNjo1OTowMVrOHPltcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4NjAxOA==", "bodyText": "miss java doc for these public method.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r486086018", "createdAt": "2020-09-10T06:05:52Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/protocol/DatanodeDetails.java", "diffHunk": "@@ -190,6 +195,18 @@ public Port getPort(Port.Name name) {\n     return null;\n   }\n \n+  public int getSuggestedLeaderCount() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58df38136f0b76262cfc5b6a0fe4282375462d3"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5MDMxMw==", "bodyText": "sanity check for peers.size() == priorityList.size()", "url": "https://github.com/apache/ozone/pull/1371#discussion_r486090313", "createdAt": "2020-09-10T06:17:26Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/ratis/RatisHelper.java", "diffHunk": "@@ -125,6 +131,17 @@ private static RaftGroup newRaftGroup(Collection<RaftPeer> peers) {\n         : RaftGroup.valueOf(DUMMY_GROUP_ID, peers);\n   }\n \n+  public static RaftGroup newRaftGroup(RaftGroupId groupId,\n+      List<DatanodeDetails> peers, List<Integer> priorityList) {\n+    final List<RaftPeer> newPeers = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58df38136f0b76262cfc5b6a0fe4282375462d3"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5MTcwNw==", "bodyText": "how about suggestedLeaderId ?", "url": "https://github.com/apache/ozone/pull/1371#discussion_r486091707", "createdAt": "2020-09-10T06:20:57Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/pipeline/Pipeline.java", "diffHunk": "@@ -61,6 +61,7 @@\n   private UUID leaderId;\n   // Timestamp for pipeline upon creation\n   private Instant creationTimestamp;\n+  private UUID suggestedLeader;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58df38136f0b76262cfc5b6a0fe4282375462d3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5MjE0Mw==", "bodyText": "miss java doc for public method.\nWhy not set suggestedLeader in Ctor and remove the getter/setter ? I guess, it would be final/immutable after creating, just like type/factor.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r486092143", "createdAt": "2020-09-10T06:22:09Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/pipeline/Pipeline.java", "diffHunk": "@@ -123,6 +124,14 @@ public Instant getCreationTimestamp() {\n     return creationTimestamp;\n   }\n \n+  public void setSuggestedLeader(UUID suggestedLeader) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58df38136f0b76262cfc5b6a0fe4282375462d3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5ODAwNg==", "bodyText": "increase the counter after successfully created the pipeline ? Might throw exception during the creation.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r486098006", "createdAt": "2020-09-10T06:36:34Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/commandhandler/CreatePipelineCommandHandler.java", "diffHunk": "@@ -82,18 +104,22 @@ public void handle(SCMCommand command, OzoneContainer ozoneContainer,\n     final CreatePipelineCommandProto createCommand =\n         ((CreatePipelineCommand)command).getProto();\n     final HddsProtos.PipelineID pipelineID = createCommand.getPipelineID();\n-    final Collection<DatanodeDetails> peers =\n+    final List<DatanodeDetails> peers =\n         createCommand.getDatanodeList().stream()\n             .map(DatanodeDetails::getFromProtoBuf)\n             .collect(Collectors.toList());\n+    final List<Integer> priorityList = createCommand.getPriorityList();\n+\n+    incSuggestedLeaderCount(priorityList, peers, dn);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58df38136f0b76262cfc5b6a0fe4282375462d3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEwMjkxMA==", "bodyText": "List<Integer> priorityList = new ArrayList<>(peers.size()); for (...)\nso that won't be bothered by unused var dn", "url": "https://github.com/apache/ozone/pull/1371#discussion_r486102910", "createdAt": "2020-09-10T06:47:18Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/transport/server/ratis/XceiverServerRatis.java", "diffHunk": "@@ -711,10 +711,23 @@ private long calculatePipelineBytesWritten(HddsProtos.PipelineID pipelineID) {\n \n   @Override\n   public void addGroup(HddsProtos.PipelineID pipelineId,\n-      Collection<DatanodeDetails> peers) throws IOException {\n+      List<DatanodeDetails> peers) throws IOException {\n+    List<Integer> priorityList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58df38136f0b76262cfc5b6a0fe4282375462d3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEwNDU4MQ==", "bodyText": "ditto", "url": "https://github.com/apache/ozone/pull/1371#discussion_r486104581", "createdAt": "2020-09-10T06:50:48Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/protocol/commands/CreatePipelineCommand.java", "diffHunk": "@@ -48,16 +50,34 @@ public CreatePipelineCommand(final PipelineID pipelineID,\n     this.factor = factor;\n     this.type = type;\n     this.nodelist = datanodeList;\n+    this.priorityList = new ArrayList<>();\n+    for (DatanodeDetails dn : datanodeList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58df38136f0b76262cfc5b6a0fe4282375462d3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEwODUyOQ==", "bodyText": "as suggested by idea, range for\nfor (dn : dns)", "url": "https://github.com/apache/ozone/pull/1371#discussion_r486108529", "createdAt": "2020-09-10T06:59:01Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/RatisPipelineProvider.java", "diffHunk": "@@ -98,8 +102,40 @@ private boolean exceedPipelineNumberLimit(ReplicationFactor factor) {\n     return false;\n   }\n \n+  private DatanodeDetails getSuggestedLeader(List<DatanodeDetails> dns) {\n+    int minLeaderCount = Integer.MAX_VALUE;\n+    DatanodeDetails suggestedLeader = null;\n+\n+    for (int i = 0; i < dns.size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58df38136f0b76262cfc5b6a0fe4282375462d3"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "405dd40895723fffb7c583845ab09c304c95cc66", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/405dd40895723fffb7c583845ab09c304c95cc66", "committedDate": "2020-09-10T23:42:18Z", "message": "fix code review"}, "afterCommit": {"oid": "7ac9dc8c698829b24876d31a7825d806ee0d0b84", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/7ac9dc8c698829b24876d31a7825d806ee0d0b84", "committedDate": "2020-09-10T23:55:49Z", "message": "fix code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ac9dc8c698829b24876d31a7825d806ee0d0b84", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/7ac9dc8c698829b24876d31a7825d806ee0d0b84", "committedDate": "2020-09-10T23:55:49Z", "message": "fix code review"}, "afterCommit": {"oid": "289a38010c8a449139558b3f4b9ba74cfc2aaf9e", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/289a38010c8a449139558b3f4b9ba74cfc2aaf9e", "committedDate": "2020-09-11T00:38:54Z", "message": "fix code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "289a38010c8a449139558b3f4b9ba74cfc2aaf9e", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/289a38010c8a449139558b3f4b9ba74cfc2aaf9e", "committedDate": "2020-09-11T00:38:54Z", "message": "fix code review"}, "afterCommit": {"oid": "da89a36934ca8688d0d13d7bab60201a9e096d4a", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/da89a36934ca8688d0d13d7bab60201a9e096d4a", "committedDate": "2020-09-11T06:48:45Z", "message": "fix code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bce470677bacaddd8dce402b359c3118705af21", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/3bce470677bacaddd8dce402b359c3118705af21", "committedDate": "2020-09-11T08:09:00Z", "message": "triger ci"}, "afterCommit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/a1a7f4e22dd8b1cdf16f839b3678acadf534ec30", "committedDate": "2020-09-11T10:58:57Z", "message": "fix code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDQyMDEy", "url": "https://github.com/apache/ozone/pull/1371#pullrequestreview-490042012", "createdAt": "2020-09-16T21:44:13Z", "commit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo0NDoxNFrOHTFTdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo0NDoxNFrOHTFTdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MTg5Mw==", "bodyText": "NIT: can we have a static default priority list here?", "url": "https://github.com/apache/ozone/pull/1371#discussion_r489771893", "createdAt": "2020-09-16T21:44:14Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/transport/server/ratis/XceiverServerRatis.java", "diffHunk": "@@ -711,10 +712,20 @@ private long calculatePipelineBytesWritten(HddsProtos.PipelineID pipelineID) {\n \n   @Override\n   public void addGroup(HddsProtos.PipelineID pipelineId,\n-      Collection<DatanodeDetails> peers) throws IOException {\n+      List<DatanodeDetails> peers) throws IOException {\n+    List<Integer> priorityList =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDQ5NDQz", "url": "https://github.com/apache/ozone/pull/1371#pullrequestreview-490049443", "createdAt": "2020-09-16T21:58:45Z", "commit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo1ODo0NlrOHTFrjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo1ODo0NlrOHTFrjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3ODA2Mg==", "bodyText": "should we use getLeaderId() instead of getSuggestedLeaderId() here to reflect the actual leader count?", "url": "https://github.com/apache/ozone/pull/1371#discussion_r489778062", "createdAt": "2020-09-16T21:58:46Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/RatisPipelineProvider.java", "diffHunk": "@@ -98,8 +105,65 @@ private boolean exceedPipelineNumberLimit(ReplicationFactor factor) {\n     return false;\n   }\n \n+  private Map<DatanodeDetails, Integer> getSuggestedLeaderCount(\n+      List<DatanodeDetails> dns) {\n+    Map<DatanodeDetails, Integer> suggestedLeaderCount = new HashMap<>();\n+    for (DatanodeDetails dn : dns) {\n+      suggestedLeaderCount.put(dn, 0);\n+\n+      Set<PipelineID> pipelineIDSet = getNodeManager().getPipelines(dn);\n+      for (PipelineID pipelineID : pipelineIDSet) {\n+        try {\n+          Pipeline pipeline = getPipelineStateManager().getPipeline(pipelineID);\n+          if (!pipeline.isClosed()\n+              && dn.getUuid().equals(pipeline.getSuggestedLeaderId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDUwOTg1", "url": "https://github.com/apache/ozone/pull/1371#pullrequestreview-490050985", "createdAt": "2020-09-16T22:02:00Z", "commit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMjowMjowMVrOHTFwlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMjowODowNVrOHTF5cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3OTM0OQ==", "bodyText": "And the method name can be changed to getLeaderCount() so that the suggest leader is determined by the actual leader count.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r489779349", "createdAt": "2020-09-16T22:02:01Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/RatisPipelineProvider.java", "diffHunk": "@@ -98,8 +105,65 @@ private boolean exceedPipelineNumberLimit(ReplicationFactor factor) {\n     return false;\n   }\n \n+  private Map<DatanodeDetails, Integer> getSuggestedLeaderCount(\n+      List<DatanodeDetails> dns) {\n+    Map<DatanodeDetails, Integer> suggestedLeaderCount = new HashMap<>();\n+    for (DatanodeDetails dn : dns) {\n+      suggestedLeaderCount.put(dn, 0);\n+\n+      Set<PipelineID> pipelineIDSet = getNodeManager().getPipelines(dn);\n+      for (PipelineID pipelineID : pipelineIDSet) {\n+        try {\n+          Pipeline pipeline = getPipelineStateManager().getPipeline(pipelineID);\n+          if (!pipeline.isClosed()\n+              && dn.getUuid().equals(pipeline.getSuggestedLeaderId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3ODA2Mg=="}, "originalCommit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc4MDY3NA==", "bodyText": "Does Ratis have guarantee to have the highpriority node act as leader?", "url": "https://github.com/apache/ozone/pull/1371#discussion_r489780674", "createdAt": "2020-09-16T22:05:43Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/RatisPipelineProvider.java", "diffHunk": "@@ -98,8 +105,65 @@ private boolean exceedPipelineNumberLimit(ReplicationFactor factor) {\n     return false;\n   }\n \n+  private Map<DatanodeDetails, Integer> getSuggestedLeaderCount(\n+      List<DatanodeDetails> dns) {\n+    Map<DatanodeDetails, Integer> suggestedLeaderCount = new HashMap<>();\n+    for (DatanodeDetails dn : dns) {\n+      suggestedLeaderCount.put(dn, 0);\n+\n+      Set<PipelineID> pipelineIDSet = getNodeManager().getPipelines(dn);\n+      for (PipelineID pipelineID : pipelineIDSet) {\n+        try {\n+          Pipeline pipeline = getPipelineStateManager().getPipeline(pipelineID);\n+          if (!pipeline.isClosed()\n+              && dn.getUuid().equals(pipeline.getSuggestedLeaderId())) {\n+            suggestedLeaderCount.put(dn, suggestedLeaderCount.get(dn) + 1);\n+          }\n+        } catch (PipelineNotFoundException e) {\n+          LOG.debug(\"Pipeline not found in pipeline state manager : {}\",\n+              pipelineID, e);\n+        }\n+      }\n+    }\n+\n+    return suggestedLeaderCount;\n+  }\n+\n+  private DatanodeDetails getSuggestedLeader(List<DatanodeDetails> dns) {\n+    Map<DatanodeDetails, Integer> suggestedLeaderCount =\n+        getSuggestedLeaderCount(dns);\n+    int minLeaderCount = Integer.MAX_VALUE;\n+    DatanodeDetails suggestedLeader = null;\n+\n+    for (Map.Entry<DatanodeDetails, Integer> entry :\n+        suggestedLeaderCount.entrySet()) {\n+      if (entry.getValue() < minLeaderCount) {\n+        minLeaderCount = entry.getValue();\n+        suggestedLeader = entry.getKey();\n+      }\n+    }\n+\n+    return suggestedLeader;\n+  }\n+\n+  private List<Integer> getPriorityList(\n+      List<DatanodeDetails> dns, DatanodeDetails suggestedLeader) {\n+    List<Integer> priorityList = new ArrayList<>();\n+\n+    for (DatanodeDetails dn : dns) {\n+      if (dn.getUuid().equals(suggestedLeader.getUuid())) {\n+        priorityList.add(HIGH_PRIORITY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc4MTYxNg==", "bodyText": "Does the new logic cause more timeout without increasing this?", "url": "https://github.com/apache/ozone/pull/1371#discussion_r489781616", "createdAt": "2020-09-16T22:08:05Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/TestMiniOzoneCluster.java", "diffHunk": "@@ -102,7 +102,7 @@ public static void afterClass() {\n     FileUtils.deleteQuietly(READ_TMP);\n   }\n \n-  @Test(timeout = 30000)\n+  @Test(timeout = 60000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NTIwMDk2", "url": "https://github.com/apache/ozone/pull/1371#pullrequestreview-488520096", "createdAt": "2020-09-15T09:56:39Z", "commit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo1NjozOVrOHR6J9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDowMDozNFrOHR6TZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU0MDY2MA==", "bodyText": "can we remove this commented out lines?", "url": "https://github.com/apache/ozone/pull/1371#discussion_r488540660", "createdAt": "2020-09-15T09:56:39Z", "author": {"login": "bshashikant"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/hdds/scm/pipeline/TestRatisPipelineCreateAndDestroy.java", "diffHunk": "@@ -92,11 +98,128 @@ public void testAutomaticPipelineCreationOnPipelineDestroy()\n     waitForPipelines(2);\n   }\n \n+  private void checkLeaderBalance(int dnNum, int leaderNumOfEachDn)\n+      throws Exception {\n+    List<Pipeline> pipelines = pipelineManager\n+        .getPipelines(HddsProtos.ReplicationType.RATIS,\n+            HddsProtos.ReplicationFactor.THREE, Pipeline.PipelineState.OPEN);\n+\n+    for (Pipeline pipeline : pipelines) {\n+      LambdaTestUtils.await(30000, 500, () ->\n+          pipeline.getLeaderId().equals(pipeline.getSuggestedLeaderId()));\n+    }\n+\n+    Map<UUID, Integer> leaderCount = new HashMap<>();\n+    for (Pipeline pipeline : pipelines) {\n+      UUID leader = pipeline.getLeaderId();\n+      if (!leaderCount.containsKey(leader)) {\n+        leaderCount.put(leader, 0);\n+      }\n+\n+      leaderCount.put(leader, leaderCount.get(leader) + 1);\n+    }\n+\n+    Assert.assertTrue(leaderCount.size() == dnNum);\n+    for (UUID key : leaderCount.keySet()) {\n+      Assert.assertTrue(leaderCount.get(key) == leaderNumOfEachDn);\n+    }\n+  }\n+\n+  @Test(timeout = 360000)\n+  public void testRestoreSuggestedLeader() throws Exception {\n+    conf.setBoolean(OZONE_SCM_PIPELINE_AUTO_CREATE_FACTOR_ONE, false);\n+    int dnNum = 3;\n+    int dnPipelineLimit = 3;\n+    int leaderNumOfEachDn = dnPipelineLimit / dnNum;\n+    int pipelineNum = 3;\n+\n+    init(dnNum, dnPipelineLimit);\n+    // make sure two pipelines are created\n+    waitForPipelines(pipelineNum);\n+    // No Factor ONE pipeline is auto created.\n+    Assert.assertEquals(0, pipelineManager.getPipelines(\n+        HddsProtos.ReplicationType.RATIS,\n+        HddsProtos.ReplicationFactor.ONE).size());\n+\n+    // pipelineNum pipelines in 3 datanodes,\n+    // each datanode has leaderNumOfEachDn leaders after balance\n+    checkLeaderBalance(dnNum, leaderNumOfEachDn);\n+    List<Pipeline> pipelinesBeforeRestart =\n+        cluster.getStorageContainerManager().getPipelineManager()\n+            .getPipelines();\n+\n+    cluster.restartStorageContainerManager(true);\n+\n+    checkLeaderBalance(dnNum, leaderNumOfEachDn);\n+    List<Pipeline> pipelinesAfterRestart =\n+        cluster.getStorageContainerManager().getPipelineManager()\n+            .getPipelines();\n+\n+    Assert.assertEquals(\n+        pipelinesBeforeRestart.size(), pipelinesAfterRestart.size());\n+\n+    for (Pipeline p : pipelinesBeforeRestart) {\n+      boolean equal = false;\n+      for (Pipeline q : pipelinesAfterRestart) {\n+        if (p.getId().equals(q.getId())\n+            && p.getSuggestedLeaderId().equals(q.getSuggestedLeaderId())) {\n+          equal = true;\n+        }\n+      }\n+\n+      Assert.assertTrue(equal);\n+    }\n+  }\n+\n+  @Test(timeout = 360000)\n+  public void testPipelineLeaderBalance() throws Exception {\n+    conf.setBoolean(OZONE_SCM_PIPELINE_AUTO_CREATE_FACTOR_ONE, false);\n+    int dnNum = 3;\n+    int dnPipelineLimit = 3;\n+    int leaderNumOfEachDn = dnPipelineLimit / dnNum;\n+    int pipelineNum = 3;\n+\n+    init(dnNum, dnPipelineLimit);\n+    // make sure two pipelines are created\n+    waitForPipelines(pipelineNum);\n+    // No Factor ONE pipeline is auto created.\n+    Assert.assertEquals(0, pipelineManager.getPipelines(\n+        HddsProtos.ReplicationType.RATIS,\n+        HddsProtos.ReplicationFactor.ONE).size());\n+\n+    // pipelineNum pipelines in 3 datanodes,\n+    // each datanode has leaderNumOfEachDn leaders after balance\n+    checkLeaderBalance(dnNum, leaderNumOfEachDn);\n+\n+    //cluster.restartStorageContainerManager(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU0MzA3OQ==", "bodyText": "I think suggested leader selection can be made a policy driven change.\n\ndefault policy can be Min leader election count\nIt can also be driven by factors like memory/resource availability on a datanode\nCan be determined by the topology as well. The node nearest to the client can be made the leader .\n\nIts better to make it a pluggable model like this.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r488543079", "createdAt": "2020-09-15T10:00:34Z", "author": {"login": "bshashikant"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/RatisPipelineProvider.java", "diffHunk": "@@ -98,8 +105,65 @@ private boolean exceedPipelineNumberLimit(ReplicationFactor factor) {\n     return false;\n   }\n \n+  private Map<DatanodeDetails, Integer> getSuggestedLeaderCount(\n+      List<DatanodeDetails> dns) {\n+    Map<DatanodeDetails, Integer> suggestedLeaderCount = new HashMap<>();\n+    for (DatanodeDetails dn : dns) {\n+      suggestedLeaderCount.put(dn, 0);\n+\n+      Set<PipelineID> pipelineIDSet = getNodeManager().getPipelines(dn);\n+      for (PipelineID pipelineID : pipelineIDSet) {\n+        try {\n+          Pipeline pipeline = getPipelineStateManager().getPipeline(pipelineID);\n+          if (!pipeline.isClosed()\n+              && dn.getUuid().equals(pipeline.getSuggestedLeaderId())) {\n+            suggestedLeaderCount.put(dn, suggestedLeaderCount.get(dn) + 1);\n+          }\n+        } catch (PipelineNotFoundException e) {\n+          LOG.debug(\"Pipeline not found in pipeline state manager : {}\",\n+              pipelineID, e);\n+        }\n+      }\n+    }\n+\n+    return suggestedLeaderCount;\n+  }\n+\n+  private DatanodeDetails getSuggestedLeader(List<DatanodeDetails> dns) {\n+    Map<DatanodeDetails, Integer> suggestedLeaderCount =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a7f4e22dd8b1cdf16f839b3678acadf534ec30"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MTc2NDc0", "url": "https://github.com/apache/ozone/pull/1371#pullrequestreview-498176474", "createdAt": "2020-09-29T07:40:20Z", "commit": {"oid": "317591ba9b3ab855305ad9095381001be4ae298c"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzo0MDoyMFrOHZe5ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODozNDo0N1rOHZiADA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ4Mjc0Ng==", "bodyText": "Return the suggested leaderId which has a high priority among DNs of the pipeline.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r496482746", "createdAt": "2020-09-29T07:40:20Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/pipeline/Pipeline.java", "diffHunk": "@@ -123,6 +126,15 @@ public Instant getCreationTimestamp() {\n     return creationTimestamp;\n   }\n \n+  /**\n+   * Return the suggested leaderId with high priority of pipeline.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317591ba9b3ab855305ad9095381001be4ae298c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ5MjUwMg==", "bodyText": "why we need this DEFAULT_PRIORITY_LIST ?\nAt all the locations it appears, it dn number does not equal to it, you always create a new list.\nSuggest to remove this static var.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r496492502", "createdAt": "2020-09-29T07:56:33Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/transport/server/ratis/XceiverServerRatis.java", "diffHunk": "@@ -115,6 +116,9 @@\n   private static final Logger LOG = LoggerFactory\n       .getLogger(XceiverServerRatis.class);\n   private static final AtomicLong CALL_ID_COUNTER = new AtomicLong();\n+  public static final List<Integer> DEFAULT_PRIORITY_LIST =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317591ba9b3ab855305ad9095381001be4ae298c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ5NjUzMQ==", "bodyText": "just forward to the Ctor with priorityList .\nthis(pipelineID, factor, type, datanodeList,\n    new ArrayList<>(Collections.nCopies(datanodeList.size(), 0))", "url": "https://github.com/apache/ozone/pull/1371#discussion_r496496531", "createdAt": "2020-09-29T08:00:24Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/protocol/commands/CreatePipelineCommand.java", "diffHunk": "@@ -48,16 +52,37 @@ public CreatePipelineCommand(final PipelineID pipelineID,\n     this.factor = factor;\n     this.type = type;\n     this.nodelist = datanodeList;\n+    if (datanodeList.size() ==\n+        XceiverServerRatis.DEFAULT_PRIORITY_LIST.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317591ba9b3ab855305ad9095381001be4ae298c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ5OTY4OA==", "bodyText": "revert unnecessary change.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r496499688", "createdAt": "2020-09-29T08:03:25Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelineStateManager.java", "diffHunk": "@@ -59,7 +59,8 @@ void addContainerToPipeline(PipelineID pipelineId, ContainerID containerID)\n     pipelineStateMap.addContainerToPipeline(pipelineId, containerID);\n   }\n \n-  Pipeline getPipeline(PipelineID pipelineID) throws PipelineNotFoundException {\n+  public Pipeline getPipeline(PipelineID pipelineID)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317591ba9b3ab855305ad9095381001be4ae298c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUwNzQ1Ng==", "bodyText": "why not use DatanodeDetails.equals() ?", "url": "https://github.com/apache/ozone/pull/1371#discussion_r496507456", "createdAt": "2020-09-29T08:10:53Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/RatisPipelineProvider.java", "diffHunk": "@@ -98,8 +115,28 @@ private boolean exceedPipelineNumberLimit(ReplicationFactor factor) {\n     return false;\n   }\n \n+  @VisibleForTesting\n+  public LeaderChoosePolicy getLeaderChoosePolicy() {\n+    return leaderChoosePolicy;\n+  }\n+  private List<Integer> getPriorityList(\n+      List<DatanodeDetails> dns, DatanodeDetails suggestedLeader) {\n+    List<Integer> priorityList = new ArrayList<>();\n+\n+    for (DatanodeDetails dn : dns) {\n+      if (dn.getUuid().equals(suggestedLeader.getUuid())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317591ba9b3ab855305ad9095381001be4ae298c"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUxMjA4Ng==", "bodyText": "make node manager and pipeline manager be member of leaderChoosePolicy, so that leaderChoosePolicy can has it own state, which will make future extension easier.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r496512086", "createdAt": "2020-09-29T08:15:05Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/RatisPipelineProvider.java", "diffHunk": "@@ -121,18 +158,24 @@ public Pipeline create(ReplicationFactor factor) throws IOException {\n       throw new IllegalStateException(\"Unknown factor: \" + factor.name());\n     }\n \n+    DatanodeDetails suggestedLeader = leaderChoosePolicy.chooseLeader(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317591ba9b3ab855305ad9095381001be4ae298c"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUxNDkzMg==", "bodyText": "why need this change ?  The sequence of sending SCMCommand and removing state may affect SCM HA.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r496514932", "createdAt": "2020-09-29T08:17:41Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/SCMPipelineManager.java", "diffHunk": "@@ -619,9 +619,9 @@ private void finalizePipeline(PipelineID pipelineId) throws IOException {\n    * @throws IOException\n    */\n   protected void destroyPipeline(Pipeline pipeline) throws IOException {\n-    pipelineFactory.close(pipeline.getType(), pipeline);\n     // remove the pipeline from the pipeline manager\n     removePipeline(pipeline.getId());\n+    pipelineFactory.close(pipeline.getType(), pipeline);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317591ba9b3ab855305ad9095381001be4ae298c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUzMzUxNg==", "bodyText": "I consider that, should move RatisPipelineProvider.getPriorityList(), HIGH_PRIORITY, LOW_PRIORITY here, and replace priorityList in Ctor param as suggestedLeader.\nWe can minimize the existence of priorityList, and the calculation logic of priority in RatisPipelineProvider is a little bit weird.", "url": "https://github.com/apache/ozone/pull/1371#discussion_r496533516", "createdAt": "2020-09-29T08:34:47Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/protocol/commands/CreatePipelineCommand.java", "diffHunk": "@@ -39,6 +42,7 @@\n   private final ReplicationFactor factor;\n   private final ReplicationType type;\n   private final List<DatanodeDetails> nodelist;\n+  private final List<Integer> priorityList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317591ba9b3ab855305ad9095381001be4ae298c"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "758a736bf58fbd3122545ce0f64216dcd83f9db2", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/758a736bf58fbd3122545ce0f64216dcd83f9db2", "committedDate": "2020-10-06T02:48:51Z", "message": "HDDS-2922. Balance ratis leader distribution in datanodes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3e118243193936a7a83353ab94136b99add5ad4", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/e3e118243193936a7a83353ab94136b99add5ad4", "committedDate": "2020-10-06T02:49:22Z", "message": "fix code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fb1cb01e58f804c72b6ec79ee86fce382659e22", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/4fb1cb01e58f804c72b6ec79ee86fce382659e22", "committedDate": "2020-10-06T02:49:22Z", "message": "change priorityList to static DEFAULT_PRIORITY_LIST"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4c84fffae0d05bd53fe64fa695830c64ae3805e", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/b4c84fffae0d05bd53fe64fa695830c64ae3805e", "committedDate": "2020-10-06T02:51:16Z", "message": "add choose leader policy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "317591ba9b3ab855305ad9095381001be4ae298c", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/317591ba9b3ab855305ad9095381001be4ae298c", "committedDate": "2020-09-29T07:22:03Z", "message": "triger ci"}, "afterCommit": {"oid": "dce2d2e2b1fd1ca15d4c9df7ae7cc131f7895554", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/dce2d2e2b1fd1ca15d4c9df7ae7cc131f7895554", "committedDate": "2020-10-06T04:30:07Z", "message": "fix code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dce2d2e2b1fd1ca15d4c9df7ae7cc131f7895554", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/dce2d2e2b1fd1ca15d4c9df7ae7cc131f7895554", "committedDate": "2020-10-06T04:30:07Z", "message": "fix code review"}, "afterCommit": {"oid": "da9214825b2a6f2b8e79e59c03cf7cf564ffd345", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/da9214825b2a6f2b8e79e59c03cf7cf564ffd345", "committedDate": "2020-10-06T04:48:55Z", "message": "fix code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da9214825b2a6f2b8e79e59c03cf7cf564ffd345", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/da9214825b2a6f2b8e79e59c03cf7cf564ffd345", "committedDate": "2020-10-06T04:48:55Z", "message": "fix code review"}, "afterCommit": {"oid": "4f79a711f525eec16c973fd8af3f416b41620e41", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/4f79a711f525eec16c973fd8af3f416b41620e41", "committedDate": "2020-10-06T06:35:15Z", "message": "fix code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f79a711f525eec16c973fd8af3f416b41620e41", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/4f79a711f525eec16c973fd8af3f416b41620e41", "committedDate": "2020-10-06T06:35:15Z", "message": "fix code review"}, "afterCommit": {"oid": "9ad8da58a2f87b47e8755b32b535971af261af68", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/9ad8da58a2f87b47e8755b32b535971af261af68", "committedDate": "2020-10-06T08:43:18Z", "message": "fix code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ad8da58a2f87b47e8755b32b535971af261af68", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/9ad8da58a2f87b47e8755b32b535971af261af68", "committedDate": "2020-10-06T08:43:18Z", "message": "fix code review"}, "afterCommit": {"oid": "8eee20ed82bd6a667e7be78d3895bf36fc2291f3", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/8eee20ed82bd6a667e7be78d3895bf36fc2291f3", "committedDate": "2020-10-06T08:49:56Z", "message": "fix code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8eee20ed82bd6a667e7be78d3895bf36fc2291f3", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/8eee20ed82bd6a667e7be78d3895bf36fc2291f3", "committedDate": "2020-10-06T08:49:56Z", "message": "fix code review"}, "afterCommit": {"oid": "eefb81936c3c620e4aedeb57dc57f8b4b7cfe831", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/eefb81936c3c620e4aedeb57dc57f8b4b7cfe831", "committedDate": "2020-10-06T08:51:41Z", "message": "fix code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f573b4a8b45f4463f0bcb95971a45789bda91d5c", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/f573b4a8b45f4463f0bcb95971a45789bda91d5c", "committedDate": "2020-10-06T08:56:35Z", "message": "fix code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eefb81936c3c620e4aedeb57dc57f8b4b7cfe831", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/eefb81936c3c620e4aedeb57dc57f8b4b7cfe831", "committedDate": "2020-10-06T08:51:41Z", "message": "fix code review"}, "afterCommit": {"oid": "f573b4a8b45f4463f0bcb95971a45789bda91d5c", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/f573b4a8b45f4463f0bcb95971a45789bda91d5c", "committedDate": "2020-10-06T08:56:35Z", "message": "fix code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01627b53d075fe36f728ff1d4c56f2edcfa6308a", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/01627b53d075fe36f728ff1d4c56f2edcfa6308a", "committedDate": "2020-10-07T09:24:10Z", "message": "rename RandomLeaderChoosePolicy"}, "afterCommit": {"oid": "e405f4f9d2d967415ac1d89279bf4e2e3e772e09", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/e405f4f9d2d967415ac1d89279bf4e2e3e772e09", "committedDate": "2020-10-07T09:44:11Z", "message": "rename RandomLeaderChoosePolicy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3a7ad09ccf0dae3c1cc1d962728acf6f13834c5", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/d3a7ad09ccf0dae3c1cc1d962728acf6f13834c5", "committedDate": "2020-10-07T10:56:18Z", "message": "rename RandomLeaderChoosePolicy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e405f4f9d2d967415ac1d89279bf4e2e3e772e09", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/e405f4f9d2d967415ac1d89279bf4e2e3e772e09", "committedDate": "2020-10-07T09:44:11Z", "message": "rename RandomLeaderChoosePolicy"}, "afterCommit": {"oid": "d3a7ad09ccf0dae3c1cc1d962728acf6f13834c5", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/d3a7ad09ccf0dae3c1cc1d962728acf6f13834c5", "committedDate": "2020-10-07T10:56:18Z", "message": "rename RandomLeaderChoosePolicy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c264e3734fe4643ddc327254e21249001458ae31", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/c264e3734fe4643ddc327254e21249001458ae31", "committedDate": "2020-10-07T12:11:40Z", "message": "triger ci"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjI3NDkx", "url": "https://github.com/apache/ozone/pull/1371#pullrequestreview-507227491", "createdAt": "2020-10-13T09:10:59Z", "commit": {"oid": "c264e3734fe4643ddc327254e21249001458ae31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2410, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}