{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMTQ4OTc3", "number": 1533, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzozMzozOVrOE24DYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzozMzozOVrOE24DYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTc2OTMxOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/DatanodeStateMachine.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzozMzozOVrOHv54TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDoxNzo0MlrOHwLIrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5MzQyMA==", "bodyText": "Would it be better for the DN to just self-terminate if there is an uncaught exception in the state machine thread? Do we know what was the exact uncaught exception?", "url": "https://github.com/apache/ozone/pull/1533#discussion_r519993420", "createdAt": "2020-11-09T17:33:39Z", "author": {"login": "arp7"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/DatanodeStateMachine.java", "diffHunk": "@@ -399,18 +390,27 @@ public boolean isTransitionAllowedTo(DatanodeStates newState) {\n    * Start datanode state machine as a single thread daemon.\n    */\n   public void startDaemon() {\n-    Runnable startStateMachineTask = () -> {\n-      try {\n-        start();\n-        LOG.info(\"Ozone container server started.\");\n-      } catch (Exception ex) {\n-        LOG.error(\"Unable to start the DatanodeState Machine\", ex);\n-      }\n-    };\n+    reportManager.init();\n+    initCommandHandlerThread(conf);\n+\n+    // Start jvm monitor\n+    jvmPauseMonitor = new JvmPauseMonitor();\n+    jvmPauseMonitor\n+        .init(LegacyHadoopConfigurationSource.asHadoopConfiguration(conf));\n+    jvmPauseMonitor.start();\n+\n     stateMachineThread =  new ThreadFactoryBuilder()\n         .setDaemon(true)\n         .setNameFormat(\"Datanode State Machine Thread - %d\")\n-        .build().newThread(startStateMachineTask);\n+        .setUncaughtExceptionHandler((Thread t, Throwable e) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e88b00b43f496d7daa237c1669b52ce704fb2c7"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3NjE0Mg==", "bodyText": "Yes, we know the uncaught exception, it is the OOM due to queued reports for a dead Recon. You may find the detail from above conversations.\nEither a HA solution or a fast fail solution is fine to me.\nBTW, the restart thread solution is already used in cmdProcessThread and leaseMonitorThread.", "url": "https://github.com/apache/ozone/pull/1533#discussion_r520276142", "createdAt": "2020-11-10T04:17:42Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/DatanodeStateMachine.java", "diffHunk": "@@ -399,18 +390,27 @@ public boolean isTransitionAllowedTo(DatanodeStates newState) {\n    * Start datanode state machine as a single thread daemon.\n    */\n   public void startDaemon() {\n-    Runnable startStateMachineTask = () -> {\n-      try {\n-        start();\n-        LOG.info(\"Ozone container server started.\");\n-      } catch (Exception ex) {\n-        LOG.error(\"Unable to start the DatanodeState Machine\", ex);\n-      }\n-    };\n+    reportManager.init();\n+    initCommandHandlerThread(conf);\n+\n+    // Start jvm monitor\n+    jvmPauseMonitor = new JvmPauseMonitor();\n+    jvmPauseMonitor\n+        .init(LegacyHadoopConfigurationSource.asHadoopConfiguration(conf));\n+    jvmPauseMonitor.start();\n+\n     stateMachineThread =  new ThreadFactoryBuilder()\n         .setDaemon(true)\n         .setNameFormat(\"Datanode State Machine Thread - %d\")\n-        .build().newThread(startStateMachineTask);\n+        .setUncaughtExceptionHandler((Thread t, Throwable e) -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5MzQyMA=="}, "originalCommit": {"oid": "4e88b00b43f496d7daa237c1669b52ce704fb2c7"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4660, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}