{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNjA0NjY0", "number": 1601, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo0MTowOVrOE7KyZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzozMzozMlrOE8jWmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDc4MTgyOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo0MTowOVrOH2qNWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOToxOTo1OVrOH2t8PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NjY5OQ==", "bodyText": "I see that this is a new logical condition here. When a new report publisher is added, explicit changes are needed here. If not, we can keep Line 237 as a simple else.", "url": "https://github.com/apache/ozone/pull/1601#discussion_r527076699", "createdAt": "2020-11-19T17:41:09Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -190,16 +217,32 @@ void setShutdownGracefully() {\n   public boolean getShutdownOnError() {\n     return shutdownOnError;\n   }\n+\n   /**\n    * Adds the report to report queue.\n    *\n    * @param report report to be added\n    */\n   public void addReport(GeneratedMessage report) {\n     if (report != null) {\n-      synchronized (reports) {\n-        for (InetSocketAddress endpoint : endpoints) {\n-          reports.get(endpoint).add(report);\n+      final String reportType = report.getDescriptorForType().getFullName();\n+      for (InetSocketAddress endpoint : endpoints) {\n+        // Check report type\n+        if (reportType.equals(containerReportsProtoName)) {\n+          containerReport = report;\n+        } else if (reportType.equals(nodeReportProtoName)) {\n+          nodeReport = report;\n+        } else if (reportType.equals(pipelineReportsProtoName)) {\n+          pipelineReport = report;\n+        } else if (reportType.equals(commandStatusReportsProtoName) ||\n+            reportType.equals(incrementalContainerReportProtoName)) {\n+          // report type is CommandStatusReports or IncrementalContainerReport\n+          synchronized (reports) {\n+            reports.get(endpoint).add(report);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cb1635bf632d5adfa0fef3f5425a161f1365507"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEzNzg1Mg==", "bodyText": "Yes else would work here. I was pushing this as an assertion check here just for now to see if I will get any UT failures. Will remove later.", "url": "https://github.com/apache/ozone/pull/1601#discussion_r527137852", "createdAt": "2020-11-19T19:19:59Z", "author": {"login": "smengcl"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -190,16 +217,32 @@ void setShutdownGracefully() {\n   public boolean getShutdownOnError() {\n     return shutdownOnError;\n   }\n+\n   /**\n    * Adds the report to report queue.\n    *\n    * @param report report to be added\n    */\n   public void addReport(GeneratedMessage report) {\n     if (report != null) {\n-      synchronized (reports) {\n-        for (InetSocketAddress endpoint : endpoints) {\n-          reports.get(endpoint).add(report);\n+      final String reportType = report.getDescriptorForType().getFullName();\n+      for (InetSocketAddress endpoint : endpoints) {\n+        // Check report type\n+        if (reportType.equals(containerReportsProtoName)) {\n+          containerReport = report;\n+        } else if (reportType.equals(nodeReportProtoName)) {\n+          nodeReport = report;\n+        } else if (reportType.equals(pipelineReportsProtoName)) {\n+          pipelineReport = report;\n+        } else if (reportType.equals(commandStatusReportsProtoName) ||\n+            reportType.equals(incrementalContainerReportProtoName)) {\n+          // report type is CommandStatusReports or IncrementalContainerReport\n+          synchronized (reports) {\n+            reports.get(endpoint).add(report);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NjY5OQ=="}, "originalCommit": {"oid": "2cb1635bf632d5adfa0fef3f5425a161f1365507"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDc4ODc1OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/endpoint/HeartbeatEndpointTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo0Mjo1MlrOH2qRhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo0Mjo1MlrOH2qRhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3Nzc2NQ==", "bodyText": "Yes, it looks like we can break out here.", "url": "https://github.com/apache/ozone/pull/1601#discussion_r527077765", "createdAt": "2020-11-19T17:42:52Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/endpoint/HeartbeatEndpointTask.java", "diffHunk": "@@ -184,15 +181,30 @@ private void addReports(SCMHeartbeatRequestProto.Builder requestBuilder) {\n     for (GeneratedMessage report :\n         context.getAllAvailableReports(rpcEndpoint.getAddress())) {\n       String reportName = report.getDescriptorForType().getFullName();\n+      // Example reportName = hadoop.hdds.NodeReportProto\n+\n       for (Descriptors.FieldDescriptor descriptor :\n           SCMHeartbeatRequestProto.getDescriptor().getFields()) {\n+\n         String heartbeatFieldName = descriptor.getMessageType().getFullName();\n+        // Possible heartbeatFieldName =\n+        //  hadoop.hdds.DatanodeDetailsProto\n+        //  hadoop.hdds.NodeReportProto\n+        //  hadoop.hdds.ContainerReportsProto\n+        //  hadoop.hdds.IncrementalContainerReportProto\n+        //  hadoop.hdds.CommandStatusReportsProto\n+        //  hadoop.hdds.ContainerActionsProto\n+        //  hadoop.hdds.PipelineActionsProto\n+        //  hadoop.hdds.PipelineReportsProto\n         if (heartbeatFieldName.equals(reportName)) {\n           if (descriptor.isRepeated()) {\n             requestBuilder.addRepeatedField(descriptor, report);\n           } else {\n             requestBuilder.setField(descriptor, report);\n           }\n+          // TODO: We can exit loop early here since we have a match already,\n+          //  right? Double check.\n+          break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cb1635bf632d5adfa0fef3f5425a161f1365507"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzI1ODE1OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNjo0MjozNlrOH3CUoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTowNjozNVrOH8JfAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ3MTc3Ng==", "bodyText": "Do we need to synchronize the get/set on these containerReport/nodeReport/pipelineReport ?", "url": "https://github.com/apache/ozone/pull/1601#discussion_r527471776", "createdAt": "2020-11-20T06:42:36Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -190,16 +211,29 @@ void setShutdownGracefully() {\n   public boolean getShutdownOnError() {\n     return shutdownOnError;\n   }\n+\n   /**\n    * Adds the report to report queue.\n    *\n    * @param report report to be added\n    */\n   public void addReport(GeneratedMessage report) {\n     if (report != null) {\n-      synchronized (reports) {\n-        for (InetSocketAddress endpoint : endpoints) {\n-          reports.get(endpoint).add(report);\n+      // TODO: Check report.getDescriptorForType() != null as well?\n+      final String reportType = report.getDescriptorForType().getFullName();\n+      for (InetSocketAddress endpoint : endpoints) {\n+        // We only keep the latest container, node and pipeline report\n+        if (reportType.equals(CONTAINER_REPORTS_PROTO_NAME)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b2bbd322405ece0a0b9f59cd9136ce9a61e71c8"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAwMjk3NA==", "bodyText": "No, container/node/pipeline should be fine. We need synchroized on reports because we want Map get and add not to get messed in between.", "url": "https://github.com/apache/ozone/pull/1601#discussion_r528002974", "createdAt": "2020-11-20T22:24:23Z", "author": {"login": "smengcl"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -190,16 +211,29 @@ void setShutdownGracefully() {\n   public boolean getShutdownOnError() {\n     return shutdownOnError;\n   }\n+\n   /**\n    * Adds the report to report queue.\n    *\n    * @param report report to be added\n    */\n   public void addReport(GeneratedMessage report) {\n     if (report != null) {\n-      synchronized (reports) {\n-        for (InetSocketAddress endpoint : endpoints) {\n-          reports.get(endpoint).add(report);\n+      // TODO: Check report.getDescriptorForType() != null as well?\n+      final String reportType = report.getDescriptorForType().getFullName();\n+      for (InetSocketAddress endpoint : endpoints) {\n+        // We only keep the latest container, node and pipeline report\n+        if (reportType.equals(CONTAINER_REPORTS_PROTO_NAME)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ3MTc3Ng=="}, "originalCommit": {"oid": "5b2bbd322405ece0a0b9f59cd9136ce9a61e71c8"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ5MzQ2MA==", "bodyText": "one thread write containerReport and another thread read containerReport, it's not thread safe, we can use AtomicReference<GeneratedMessage> containerReports", "url": "https://github.com/apache/ozone/pull/1601#discussion_r528493460", "createdAt": "2020-11-23T06:39:07Z", "author": {"login": "runzhiwang"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -190,16 +211,29 @@ void setShutdownGracefully() {\n   public boolean getShutdownOnError() {\n     return shutdownOnError;\n   }\n+\n   /**\n    * Adds the report to report queue.\n    *\n    * @param report report to be added\n    */\n   public void addReport(GeneratedMessage report) {\n     if (report != null) {\n-      synchronized (reports) {\n-        for (InetSocketAddress endpoint : endpoints) {\n-          reports.get(endpoint).add(report);\n+      // TODO: Check report.getDescriptorForType() != null as well?\n+      final String reportType = report.getDescriptorForType().getFullName();\n+      for (InetSocketAddress endpoint : endpoints) {\n+        // We only keep the latest container, node and pipeline report\n+        if (reportType.equals(CONTAINER_REPORTS_PROTO_NAME)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ3MTc3Ng=="}, "originalCommit": {"oid": "5b2bbd322405ece0a0b9f59cd9136ce9a61e71c8"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMjAwMA==", "bodyText": "done", "url": "https://github.com/apache/ozone/pull/1601#discussion_r532832000", "createdAt": "2020-11-30T19:06:35Z", "author": {"login": "smengcl"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -190,16 +211,29 @@ void setShutdownGracefully() {\n   public boolean getShutdownOnError() {\n     return shutdownOnError;\n   }\n+\n   /**\n    * Adds the report to report queue.\n    *\n    * @param report report to be added\n    */\n   public void addReport(GeneratedMessage report) {\n     if (report != null) {\n-      synchronized (reports) {\n-        for (InetSocketAddress endpoint : endpoints) {\n-          reports.get(endpoint).add(report);\n+      // TODO: Check report.getDescriptorForType() != null as well?\n+      final String reportType = report.getDescriptorForType().getFullName();\n+      for (InetSocketAddress endpoint : endpoints) {\n+        // We only keep the latest container, node and pipeline report\n+        if (reportType.equals(CONTAINER_REPORTS_PROTO_NAME)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ3MTc3Ng=="}, "originalCommit": {"oid": "5b2bbd322405ece0a0b9f59cd9136ce9a61e71c8"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMzk2MjkzOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwMToyODo1MlrOH39QZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNjozNDo0N1rOH4AnZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQzNzM1MQ==", "bodyText": "@VisiableForTesting ?", "url": "https://github.com/apache/ozone/pull/1601#discussion_r528437351", "createdAt": "2020-11-23T01:28:52Z", "author": {"login": "runzhiwang"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -583,4 +631,16 @@ public void addEndpoint(InetSocketAddress endpoint) {\n       this.reports.put(endpoint, new LinkedList<>());\n     }\n   }\n+\n+  public GeneratedMessage getContainerReports() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23d25cb7ab47bef872c99af6e9c460e96ecbc74e"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ5MjM5MQ==", "bodyText": "done", "url": "https://github.com/apache/ozone/pull/1601#discussion_r528492391", "createdAt": "2020-11-23T06:34:47Z", "author": {"login": "smengcl"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -583,4 +631,16 @@ public void addEndpoint(InetSocketAddress endpoint) {\n       this.reports.put(endpoint, new LinkedList<>());\n     }\n   }\n+\n+  public GeneratedMessage getContainerReports() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQzNzM1MQ=="}, "originalCommit": {"oid": "23d25cb7ab47bef872c99af6e9c460e96ecbc74e"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxOTI5MjQwOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzozMzozMlrOH4vRTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToyMjo1OFrOH6BDUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI1Njc4MA==", "bodyText": "You may make them to be volatile, which is simpler but thread safe as well,", "url": "https://github.com/apache/ozone/pull/1601#discussion_r529256780", "createdAt": "2020-11-24T07:33:32Z", "author": {"login": "GlenGeng"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -72,7 +101,13 @@\n   private final AtomicLong stateExecutionCount;\n   private final ConfigurationSource conf;\n   private final Set<InetSocketAddress> endpoints;\n-  private final Map<InetSocketAddress, List<GeneratedMessage>> reports;\n+  // Only the latest full report of each type is kept\n+  private final AtomicReference<GeneratedMessage> containerReports;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdc582315c024e1cbbd1897b69858107df4fe20a"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5NjY5MA==", "bodyText": "Thanks for the tip. I will keep atomic for now as the report is not updated so frequently on DNs (low performance impact).", "url": "https://github.com/apache/ozone/pull/1601#discussion_r530596690", "createdAt": "2020-11-25T19:22:58Z", "author": {"login": "smengcl"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -72,7 +101,13 @@\n   private final AtomicLong stateExecutionCount;\n   private final ConfigurationSource conf;\n   private final Set<InetSocketAddress> endpoints;\n-  private final Map<InetSocketAddress, List<GeneratedMessage>> reports;\n+  // Only the latest full report of each type is kept\n+  private final AtomicReference<GeneratedMessage> containerReports;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI1Njc4MA=="}, "originalCommit": {"oid": "fdc582315c024e1cbbd1897b69858107df4fe20a"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4742, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}