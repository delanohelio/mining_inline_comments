{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MDU2NTk5", "number": 830, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMjo1OTo1NFrODyUXwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzozODoxM1rODym1GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDg5MTUyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMjo1OTo1NFrOGGSxAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToyOTozNVrOGG0Fhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjA5Nw==", "bodyText": "If we could fail the client earlier without the request adding to request log, that can avoid adding the request to ratis log as it will fail application any way.", "url": "https://github.com/apache/ozone/pull/830#discussion_r409252097", "createdAt": "2020-04-16T02:59:54Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java", "diffHunk": "@@ -451,4 +446,62 @@ protected void checkKeyAclsInOpenKeyTable(OzoneManager ozoneManager,\n     checkKeyAcls(ozoneManager, volume, bucket, keyNameForAclCheck,\n           aclType, OzoneObj.ResourceType.KEY);\n   }\n+\n+  /**\n+   * Generate EncryptionInfo and set in to newKeyArgs.\n+   * @param keyArgs\n+   * @param newKeyArgs\n+   * @param ozoneManager\n+   */\n+  protected void generateRequiredEncryptionInfo(KeyArgs keyArgs,\n+      KeyArgs.Builder newKeyArgs, OzoneManager ozoneManager)\n+      throws IOException {\n+\n+    String volumeName = keyArgs.getVolumeName();\n+    String bucketName = keyArgs.getBucketName();\n+\n+    boolean acquireLock = false;\n+    OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();\n+\n+    // When TDE is enabled, we are doing a DB read in pre-execute. As for\n+    // most of the operations we don't read from DB because of our isLeader\n+    // semantics. This issue will be solved with implementation of leader\n+    // leases which provider strong leader semantics in the system.\n+\n+    // If KMS is not enabled, follow the normal approach of execution of not\n+    // reading DB in pre-execute.\n+    if (ozoneManager.getKmsProvider() != null) {\n+      try {\n+        acquireLock = omMetadataManager.getLock().acquireReadLock(\n+            BUCKET_LOCK, volumeName, bucketName);\n+\n+\n+        OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n+            omMetadataManager.getBucketKey(volumeName, bucketName));\n+\n+\n+        // Don't throw exception of bucket not found when bucketinfo is not\n+        // null. If bucketinfo is null, later when request\n+        // is submitted and if bucket does not really exist it will fail in\n+        // applyTransaction step. Why we are doing this is if OM thinks it is\n+        // the leader, but it is not, we don't want to fail request in this\n+        // case. As anyway when it submits request to ratis it will fail with", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a38bbd2b185c116c8a5862673b84230a5c87b728"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI4NjE4Ng==", "bodyText": "We are doing this because of our current isLeader semantics.\nThe same is explained in the comments, once after strong leader semantics, we can revisit this.", "url": "https://github.com/apache/ozone/pull/830#discussion_r409286186", "createdAt": "2020-04-16T05:13:29Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java", "diffHunk": "@@ -451,4 +446,62 @@ protected void checkKeyAclsInOpenKeyTable(OzoneManager ozoneManager,\n     checkKeyAcls(ozoneManager, volume, bucket, keyNameForAclCheck,\n           aclType, OzoneObj.ResourceType.KEY);\n   }\n+\n+  /**\n+   * Generate EncryptionInfo and set in to newKeyArgs.\n+   * @param keyArgs\n+   * @param newKeyArgs\n+   * @param ozoneManager\n+   */\n+  protected void generateRequiredEncryptionInfo(KeyArgs keyArgs,\n+      KeyArgs.Builder newKeyArgs, OzoneManager ozoneManager)\n+      throws IOException {\n+\n+    String volumeName = keyArgs.getVolumeName();\n+    String bucketName = keyArgs.getBucketName();\n+\n+    boolean acquireLock = false;\n+    OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();\n+\n+    // When TDE is enabled, we are doing a DB read in pre-execute. As for\n+    // most of the operations we don't read from DB because of our isLeader\n+    // semantics. This issue will be solved with implementation of leader\n+    // leases which provider strong leader semantics in the system.\n+\n+    // If KMS is not enabled, follow the normal approach of execution of not\n+    // reading DB in pre-execute.\n+    if (ozoneManager.getKmsProvider() != null) {\n+      try {\n+        acquireLock = omMetadataManager.getLock().acquireReadLock(\n+            BUCKET_LOCK, volumeName, bucketName);\n+\n+\n+        OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n+            omMetadataManager.getBucketKey(volumeName, bucketName));\n+\n+\n+        // Don't throw exception of bucket not found when bucketinfo is not\n+        // null. If bucketinfo is null, later when request\n+        // is submitted and if bucket does not really exist it will fail in\n+        // applyTransaction step. Why we are doing this is if OM thinks it is\n+        // the leader, but it is not, we don't want to fail request in this\n+        // case. As anyway when it submits request to ratis it will fail with", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjA5Nw=="}, "originalCommit": {"oid": "a38bbd2b185c116c8a5862673b84230a5c87b728"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczNDAyMQ==", "bodyText": "Sounds good to me. Do we have a JIRA to track the leader lease?", "url": "https://github.com/apache/ozone/pull/830#discussion_r409734021", "createdAt": "2020-04-16T17:38:48Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java", "diffHunk": "@@ -451,4 +446,62 @@ protected void checkKeyAclsInOpenKeyTable(OzoneManager ozoneManager,\n     checkKeyAcls(ozoneManager, volume, bucket, keyNameForAclCheck,\n           aclType, OzoneObj.ResourceType.KEY);\n   }\n+\n+  /**\n+   * Generate EncryptionInfo and set in to newKeyArgs.\n+   * @param keyArgs\n+   * @param newKeyArgs\n+   * @param ozoneManager\n+   */\n+  protected void generateRequiredEncryptionInfo(KeyArgs keyArgs,\n+      KeyArgs.Builder newKeyArgs, OzoneManager ozoneManager)\n+      throws IOException {\n+\n+    String volumeName = keyArgs.getVolumeName();\n+    String bucketName = keyArgs.getBucketName();\n+\n+    boolean acquireLock = false;\n+    OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();\n+\n+    // When TDE is enabled, we are doing a DB read in pre-execute. As for\n+    // most of the operations we don't read from DB because of our isLeader\n+    // semantics. This issue will be solved with implementation of leader\n+    // leases which provider strong leader semantics in the system.\n+\n+    // If KMS is not enabled, follow the normal approach of execution of not\n+    // reading DB in pre-execute.\n+    if (ozoneManager.getKmsProvider() != null) {\n+      try {\n+        acquireLock = omMetadataManager.getLock().acquireReadLock(\n+            BUCKET_LOCK, volumeName, bucketName);\n+\n+\n+        OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n+            omMetadataManager.getBucketKey(volumeName, bucketName));\n+\n+\n+        // Don't throw exception of bucket not found when bucketinfo is not\n+        // null. If bucketinfo is null, later when request\n+        // is submitted and if bucket does not really exist it will fail in\n+        // applyTransaction step. Why we are doing this is if OM thinks it is\n+        // the leader, but it is not, we don't want to fail request in this\n+        // case. As anyway when it submits request to ratis it will fail with", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjA5Nw=="}, "originalCommit": {"oid": "a38bbd2b185c116c8a5862673b84230a5c87b728"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5ODAyMw==", "bodyText": "I will open a jira for this also.", "url": "https://github.com/apache/ozone/pull/830#discussion_r409798023", "createdAt": "2020-04-16T19:29:35Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java", "diffHunk": "@@ -451,4 +446,62 @@ protected void checkKeyAclsInOpenKeyTable(OzoneManager ozoneManager,\n     checkKeyAcls(ozoneManager, volume, bucket, keyNameForAclCheck,\n           aclType, OzoneObj.ResourceType.KEY);\n   }\n+\n+  /**\n+   * Generate EncryptionInfo and set in to newKeyArgs.\n+   * @param keyArgs\n+   * @param newKeyArgs\n+   * @param ozoneManager\n+   */\n+  protected void generateRequiredEncryptionInfo(KeyArgs keyArgs,\n+      KeyArgs.Builder newKeyArgs, OzoneManager ozoneManager)\n+      throws IOException {\n+\n+    String volumeName = keyArgs.getVolumeName();\n+    String bucketName = keyArgs.getBucketName();\n+\n+    boolean acquireLock = false;\n+    OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();\n+\n+    // When TDE is enabled, we are doing a DB read in pre-execute. As for\n+    // most of the operations we don't read from DB because of our isLeader\n+    // semantics. This issue will be solved with implementation of leader\n+    // leases which provider strong leader semantics in the system.\n+\n+    // If KMS is not enabled, follow the normal approach of execution of not\n+    // reading DB in pre-execute.\n+    if (ozoneManager.getKmsProvider() != null) {\n+      try {\n+        acquireLock = omMetadataManager.getLock().acquireReadLock(\n+            BUCKET_LOCK, volumeName, bucketName);\n+\n+\n+        OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n+            omMetadataManager.getBucketKey(volumeName, bucketName));\n+\n+\n+        // Don't throw exception of bucket not found when bucketinfo is not\n+        // null. If bucketinfo is null, later when request\n+        // is submitted and if bucket does not really exist it will fail in\n+        // applyTransaction step. Why we are doing this is if OM thinks it is\n+        // the leader, but it is not, we don't want to fail request in this\n+        // case. As anyway when it submits request to ratis it will fail with", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjA5Nw=="}, "originalCommit": {"oid": "a38bbd2b185c116c8a5862673b84230a5c87b728"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDg5Njg4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMzowMzoxMVrOGGS0JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNToyNTo0NVrOGGVENA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjkwMA==", "bodyText": "encryptionInfo.orNull() should be removed as the keyArgs now have the data encryption key info.", "url": "https://github.com/apache/ozone/pull/830#discussion_r409252900", "createdAt": "2020-04-16T03:03:11Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -213,7 +214,6 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n           omMetadataManager.getBucketKey(volumeName, bucketName));\n-      encryptionInfo = getFileEncryptionInfo(ozoneManager, bucketInfo);\n \n       omKeyInfo = prepareKeyInfo(omMetadataManager, keyArgs, dbKeyInfo,\n           keyArgs.getDataSize(), locations, encryptionInfo.orNull(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a38bbd2b185c116c8a5862673b84230a5c87b728"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI4OTc4MA==", "bodyText": "Done.", "url": "https://github.com/apache/ozone/pull/830#discussion_r409289780", "createdAt": "2020-04-16T05:25:45Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -213,7 +214,6 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n           omMetadataManager.getBucketKey(volumeName, bucketName));\n-      encryptionInfo = getFileEncryptionInfo(ozoneManager, bucketInfo);\n \n       omKeyInfo = prepareKeyInfo(omMetadataManager, keyArgs, dbKeyInfo,\n           keyArgs.getDataSize(), locations, encryptionInfo.orNull(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MjkwMA=="}, "originalCommit": {"oid": "a38bbd2b185c116c8a5862673b84230a5c87b728"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzkxNTc2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzozODoxM1rOGGwKEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTozMTo1OVrOGG0KWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczMzY1MQ==", "bodyText": "NIT: Given we have pass keyArgs, we can reduce the number of arguments here to  avoid @SuppressWarnings(\"parameternumber\") for prepareKeyInfo().", "url": "https://github.com/apache/ozone/pull/830#discussion_r409733651", "createdAt": "2020-04-16T17:38:13Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -213,10 +213,9 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n           omMetadataManager.getBucketKey(volumeName, bucketName));\n-      encryptionInfo = getFileEncryptionInfo(ozoneManager, bucketInfo);\n \n       omKeyInfo = prepareKeyInfo(omMetadataManager, keyArgs, dbKeyInfo,\n-          keyArgs.getDataSize(), locations, encryptionInfo.orNull(),\n+          keyArgs.getDataSize(), locations,  getFileEncryptionInfo(keyArgs),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac83fb91b042b1db7dfadced5d014bb86b56bafa"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5MTI3Mg==", "bodyText": "By removing the encryptionInfo and size, we cannot remove @SuppressWarnings(\"parameternumber\"). I will leave for now. I will open a new jira to refactor this.", "url": "https://github.com/apache/ozone/pull/830#discussion_r409791272", "createdAt": "2020-04-16T19:17:16Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -213,10 +213,9 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n           omMetadataManager.getBucketKey(volumeName, bucketName));\n-      encryptionInfo = getFileEncryptionInfo(ozoneManager, bucketInfo);\n \n       omKeyInfo = prepareKeyInfo(omMetadataManager, keyArgs, dbKeyInfo,\n-          keyArgs.getDataSize(), locations, encryptionInfo.orNull(),\n+          keyArgs.getDataSize(), locations,  getFileEncryptionInfo(keyArgs),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczMzY1MQ=="}, "originalCommit": {"oid": "ac83fb91b042b1db7dfadced5d014bb86b56bafa"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5MjQzNg==", "bodyText": "Jira to track this\nhttps://issues.apache.org/jira/browse/HDDS-3407", "url": "https://github.com/apache/ozone/pull/830#discussion_r409792436", "createdAt": "2020-04-16T19:19:20Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -213,10 +213,9 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n           omMetadataManager.getBucketKey(volumeName, bucketName));\n-      encryptionInfo = getFileEncryptionInfo(ozoneManager, bucketInfo);\n \n       omKeyInfo = prepareKeyInfo(omMetadataManager, keyArgs, dbKeyInfo,\n-          keyArgs.getDataSize(), locations, encryptionInfo.orNull(),\n+          keyArgs.getDataSize(), locations,  getFileEncryptionInfo(keyArgs),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczMzY1MQ=="}, "originalCommit": {"oid": "ac83fb91b042b1db7dfadced5d014bb86b56bafa"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5OTI1OA==", "bodyText": "Ok to me.  Let's fix that later. +1.", "url": "https://github.com/apache/ozone/pull/830#discussion_r409799258", "createdAt": "2020-04-16T19:31:59Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -213,10 +213,9 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       OmBucketInfo bucketInfo = omMetadataManager.getBucketTable().get(\n           omMetadataManager.getBucketKey(volumeName, bucketName));\n-      encryptionInfo = getFileEncryptionInfo(ozoneManager, bucketInfo);\n \n       omKeyInfo = prepareKeyInfo(omMetadataManager, keyArgs, dbKeyInfo,\n-          keyArgs.getDataSize(), locations, encryptionInfo.orNull(),\n+          keyArgs.getDataSize(), locations,  getFileEncryptionInfo(keyArgs),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTczMzY1MQ=="}, "originalCommit": {"oid": "ac83fb91b042b1db7dfadced5d014bb86b56bafa"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4402, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}