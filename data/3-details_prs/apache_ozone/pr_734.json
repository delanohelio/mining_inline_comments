{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTg3NDU5", "number": 734, "title": "HDDS-3240. Improve write efficiency by creating container in parallel", "bodyText": "What changes were proposed in this pull request?\nWhat's the problem ?\nNow follower cannot create container until leader finish creating container. But follower and leader can create container in parallel when leader can  getCachedStateMachineData from cache, rather than in sequential.\nWhy leader and follower create container in sequential now ?\n\n\nFrom the code,  the future thread do getCachedStateMachineData  in readStateMachineData and the future thread do createContainer in writeStateMachineData are the same thread. Because writeStateMachineData  called before readStateMachineData. So leader must wait createContainer finish then getCachedStateMachineData and append logs to the follower, so follower must wait leader finish createContainer.\n\n\nFrom the jaeger UI, you can also see follower create container after leader finishing it currently.\n\n\n\nHow to improve it ?\n\n\nThis order can be improved by distinguishing the thread used by getCachedStateMachineData   and createContainer , and  data = readStateMachineData(requestProto, term, logIndex)  use same thread with createContainer . If stateMachineDataCache.get(logIndex) does not return null,  leader can get stateMachineData from cache and need not wait createContainer finish, thus leader and follower can be independent. But if it return null, leader must finish createContainer and then apennd logs to the follower, so I think data = readStateMachineData(requestProto, term, logIndex) should use the same thread with createContainer rather than the whole getCachedStateMachineData\n\n\nFrom the jaeger UI, you can see leader and follower create container in parallel.\n\n\n\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3240\nHow was this patch tested?\nExisted UT and IT", "createdAt": "2020-03-29T02:54:59Z", "url": "https://github.com/apache/ozone/pull/734", "merged": true, "mergeCommit": {"oid": "8d4aa8dd6e78dfdb5b3a7a10c0a57325f6da0c52"}, "closed": true, "closedAt": "2020-04-02T11:32:25Z", "author": {"login": "runzhiwang"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSQrztgH2gAyMzk1MTg3NDU5OjNjYTNlNzM4Mjc0MjExYjUyYWQ4YTBiNTk0YjhiZDZiMzUxZTZjMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTqpntgFqTM4NjMzNzg0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3ca3e738274211b52ad8a0b594b8bd6b351e6c06", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/3ca3e738274211b52ad8a0b594b8bd6b351e6c06", "committedDate": "2020-03-29T02:43:03Z", "message": "HDDS-3240. Improve write efficiency by creating container in parallel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "060df37309c39874b905a14d77f9f0558f7e7b74", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/060df37309c39874b905a14d77f9f0558f7e7b74", "committedDate": "2020-03-29T06:06:11Z", "message": "add config in ozone-default.xml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzk0NDA4", "url": "https://github.com/apache/ozone/pull/734#pullrequestreview-383394408", "createdAt": "2020-03-29T10:18:16Z", "commit": {"oid": "060df37309c39874b905a14d77f9f0558f7e7b74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMDoxODoxNlrOF9QZAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMDoxODoxNlrOF9QZAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3NjAwMg==", "bodyText": "Instead of introducing another set of executors for read chunk operation, can the cache lookup be executed in the per-container executor returned by getCommandExecutor?", "url": "https://github.com/apache/ozone/pull/734#discussion_r399776002", "createdAt": "2020-03-29T10:18:16Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/transport/server/ratis/ContainerStateMachine.java", "diffHunk": "@@ -664,12 +689,12 @@ private ByteString getCachedStateMachineData(Long logIndex, long term,\n             future.complete(\n                 getCachedStateMachineData(entry.getIndex(), entry.getTerm(),\n                     requestProto));\n-          } catch (IOException e) {\n+          } catch (Exception e) {\n             metrics.incNumReadStateMachineFails();\n             future.completeExceptionally(e);\n           }\n           return future;\n-        }, getChunkExecutor(requestProto.getWriteChunk()));\n+        }, getReadChunkExecutor(requestProto.getWriteChunk()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "060df37309c39874b905a14d77f9f0558f7e7b74"}, "originalPosition": 94}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98916bb1961a777e412fc82697607a24d45606d2", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/98916bb1961a777e412fc82697607a24d45606d2", "committedDate": "2020-04-02T00:42:37Z", "message": "fix code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b006cad7f4d39c66c3e4bfb6a64c3361a44e3ea3", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/b006cad7f4d39c66c3e4bfb6a64c3361a44e3ea3", "committedDate": "2020-04-02T02:12:01Z", "message": "retrigger build with empty commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaebd38b68e06235d42b107f61cef81c8a511834", "author": {"user": {"login": "runzhiwang", "name": null}}, "url": "https://github.com/apache/ozone/commit/eaebd38b68e06235d42b107f61cef81c8a511834", "committedDate": "2020-04-02T09:37:53Z", "message": "retrigger build with empty commit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzI0ODgx", "url": "https://github.com/apache/ozone/pull/734#pullrequestreview-386324881", "createdAt": "2020-04-02T11:10:42Z", "commit": {"oid": "eaebd38b68e06235d42b107f61cef81c8a511834"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzM3ODQ0", "url": "https://github.com/apache/ozone/pull/734#pullrequestreview-386337844", "createdAt": "2020-04-02T11:32:07Z", "commit": {"oid": "eaebd38b68e06235d42b107f61cef81c8a511834"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3555, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}