{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMjQxOTU1", "number": 1146, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzoyNToxOFrOEJkTsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzoyNjoxMlrOEJkVFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDY3NTA2OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/test/java/org/apache/hadoop/hdds/utils/TestResourceLimitCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzoyNToxOFrOGqH6qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzo0NTowN1rOGqIhYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgyMzA4MA==", "bodyText": "pool is currently unused, I think you intended to pass it to supplyAsync:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                });\n          \n          \n            \n                }, pool);", "url": "https://github.com/apache/ozone/pull/1146#discussion_r446823080", "createdAt": "2020-06-29T07:25:18Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/common/src/test/java/org/apache/hadoop/hdds/utils/TestResourceLimitCache.java", "diffHunk": "@@ -60,25 +58,27 @@ public void testResourceLimitCache()\n     resourceCache.remove(4);\n \n     GenericTestUtils.waitFor(future::isDone, 100, 1000);\n-    // map has the ket 1\n+    // map has the key 1\n     Assert.assertTrue(future.isDone() && !future.isCompletedExceptionally());\n     Assert.assertNotNull(resourceCache.get(1));\n \n     // Create a future which blocks to put 4. Currently map has acquired 7\n     // permits out of 10\n+    ExecutorService pool = Executors.newCachedThreadPool();\n     future = CompletableFuture.supplyAsync(() -> {\n       try {\n         return resourceCache.put(4, \"a\");\n       } catch (InterruptedException e) {\n-        e.printStackTrace();\n+        return null;\n       }\n-      return null;\n     });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8ac88f73a4f72819b889e2e327afe58efb5f05"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzMjk5NA==", "bodyText": "Thanks @adoroszlai for the notification.\nAfter testing, I want to re-apply this modification in a new branch, and I missed it.", "url": "https://github.com/apache/ozone/pull/1146#discussion_r446832994", "createdAt": "2020-06-29T07:45:07Z", "author": {"login": "cku328"}, "path": "hadoop-hdds/common/src/test/java/org/apache/hadoop/hdds/utils/TestResourceLimitCache.java", "diffHunk": "@@ -60,25 +58,27 @@ public void testResourceLimitCache()\n     resourceCache.remove(4);\n \n     GenericTestUtils.waitFor(future::isDone, 100, 1000);\n-    // map has the ket 1\n+    // map has the key 1\n     Assert.assertTrue(future.isDone() && !future.isCompletedExceptionally());\n     Assert.assertNotNull(resourceCache.get(1));\n \n     // Create a future which blocks to put 4. Currently map has acquired 7\n     // permits out of 10\n+    ExecutorService pool = Executors.newCachedThreadPool();\n     future = CompletableFuture.supplyAsync(() -> {\n       try {\n         return resourceCache.put(4, \"a\");\n       } catch (InterruptedException e) {\n-        e.printStackTrace();\n+        return null;\n       }\n-      return null;\n     });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgyMzA4MA=="}, "originalCommit": {"oid": "8a8ac88f73a4f72819b889e2e327afe58efb5f05"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDY3ODYxOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/test/java/org/apache/hadoop/hdds/utils/TestResourceLimitCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzoyNjoxMlrOGqH8wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoyMzo0NVrOGqJ0Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgyMzYxNw==", "bodyText": "Nit: please avoid * import.", "url": "https://github.com/apache/ozone/pull/1146#discussion_r446823617", "createdAt": "2020-06-29T07:26:12Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/common/src/test/java/org/apache/hadoop/hdds/utils/TestResourceLimitCache.java", "diffHunk": "@@ -20,9 +20,7 @@\n import org.junit.Assert;\n import org.junit.Test;\n \n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8ac88f73a4f72819b889e2e327afe58efb5f05"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1NDIxNA==", "bodyText": "Thanks! I'll avoid using it.", "url": "https://github.com/apache/ozone/pull/1146#discussion_r446854214", "createdAt": "2020-06-29T08:23:45Z", "author": {"login": "cku328"}, "path": "hadoop-hdds/common/src/test/java/org/apache/hadoop/hdds/utils/TestResourceLimitCache.java", "diffHunk": "@@ -20,9 +20,7 @@\n import org.junit.Assert;\n import org.junit.Test;\n \n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgyMzYxNw=="}, "originalCommit": {"oid": "8a8ac88f73a4f72819b889e2e327afe58efb5f05"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4145, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}