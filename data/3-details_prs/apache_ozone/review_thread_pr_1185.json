{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MjE3Njgy", "number": 1185, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODoyOToyN1rOEOKHxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNjoyMjo0OVrOEQ5-Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjgxMzUwOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/main/resources/ozone-default.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODoyOToyN1rOGxJqrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODo1OToxNVrOGx07Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MTc5MA==", "bodyText": "Can we add more details about what's the proper value for this proerpty if user want to change it?", "url": "https://github.com/apache/ozone/pull/1185#discussion_r454191790", "createdAt": "2020-07-14T08:29:27Z", "author": {"login": "ChenSammi"}, "path": "hadoop-hdds/common/src/main/resources/ozone-default.xml", "diffHunk": "@@ -268,6 +268,13 @@\n       datanode periodically send node report to SCM. Unit could be\n       defined with postfix (ns,ms,s,m,h,d)</description>\n   </property>\n+  <property>\n+    <name>hdds.statemachine.endpoint.task.thread.count</name>\n+    <value>2</value>\n+    <tag>OZONE, DATANODE, MANAGEMENT</tag>\n+    <description>Maximum number of threads in the thread pool that Datanode\n+      will use for GETVERSION, REGISTER, HEARTBEAT to SCMs.</description>\n+  </property>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d15f95a64181e04300518db3046ebf0bcf70387"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkwMDU0Ng==", "bodyText": "I remove this config, and get thread pool size by add number of scm and recon.", "url": "https://github.com/apache/ozone/pull/1185#discussion_r454900546", "createdAt": "2020-07-15T08:59:15Z", "author": {"login": "runzhiwang"}, "path": "hadoop-hdds/common/src/main/resources/ozone-default.xml", "diffHunk": "@@ -268,6 +268,13 @@\n       datanode periodically send node report to SCM. Unit could be\n       defined with postfix (ns,ms,s,m,h,d)</description>\n   </property>\n+  <property>\n+    <name>hdds.statemachine.endpoint.task.thread.count</name>\n+    <value>2</value>\n+    <tag>OZONE, DATANODE, MANAGEMENT</tag>\n+    <description>Maximum number of threads in the thread pool that Datanode\n+      will use for GETVERSION, REGISTER, HEARTBEAT to SCMs.</description>\n+  </property>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MTc5MA=="}, "originalCommit": {"oid": "2d15f95a64181e04300518db3046ebf0bcf70387"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjgxODYwOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODozMDo0NlrOGxJtow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODozMDo0NlrOGxJtow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MjU0Nw==", "bodyText": "Instead of cancel the future, I would suggest to skip the next time execution, and let the current future finish it.  Also, please add LOG if this case happens.", "url": "https://github.com/apache/ozone/pull/1185#discussion_r454192547", "createdAt": "2020-07-14T08:30:46Z", "author": {"login": "ChenSammi"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java", "diffHunk": "@@ -200,22 +203,31 @@ public void execute(ExecutorService executor) {\n   @Override\n   public DatanodeStateMachine.DatanodeStates\n       await(long duration, TimeUnit timeUnit)\n-      throws InterruptedException, ExecutionException, TimeoutException {\n+      throws InterruptedException {\n     int count = connectionManager.getValues().size();\n     int returned = 0;\n-    long timeLeft = timeUnit.toMillis(duration);\n+    long durationMS = timeUnit.toMillis(duration);\n     long startTime = Time.monotonicNow();\n-    List<Future<EndPointStates>> results = new LinkedList<>();\n-\n-    while (returned < count && timeLeft > 0) {\n-      Future<EndPointStates> result =\n-          ecs.poll(timeLeft, TimeUnit.MILLISECONDS);\n-      if (result != null) {\n-        results.add(result);\n-        returned++;\n+    Set<Future<EndPointStates>> results = new HashSet<>();\n+\n+    while (returned < count\n+        && (durationMS - (Time.monotonicNow() - startTime))> 0) {\n+      for (Future<EndPointStates> future : futures) {\n+        if (future != null && future.isDone() && !results.contains(future)) {\n+          results.add(future);\n+          returned++;\n+        }\n       }\n-      timeLeft = timeLeft - (Time.monotonicNow() - startTime);\n+\n+      Thread.sleep(durationMS / 10);\n     }\n+\n+    for (Future<EndPointStates> future : futures) {\n+      if (future != null && !future.isDone()) {\n+        future.cancel(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d15f95a64181e04300518db3046ebf0bcf70387"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTM0NDg2OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDozNTozMVrOGzBY3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNTo1MDo1OVrOGz5oww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzMxMA==", "bodyText": "In a similar case of endpoint task locked up, will we end up with flooding of warning logs here?", "url": "https://github.com/apache/ozone/pull/1185#discussion_r456153310", "createdAt": "2020-07-17T00:35:31Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -415,7 +431,14 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n       if (this.isEntering()) {\n         task.onEnter();\n       }\n-      task.execute(service);\n+\n+      if (isThreadPoolAvailable(service)) {\n+        task.execute(service);\n+      } else {\n+        LOG.warn(\"No available thread in pool, duration:\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ff1d5299c2c44cb0790ecde0112336ef7028fe8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE5NTI1NQ==", "bodyText": "@xiaoyuyao Thanks for review and reasonable suggestion. How about add metrics for thread pool available and unavailable times ?", "url": "https://github.com/apache/ozone/pull/1185#discussion_r456195255", "createdAt": "2020-07-17T03:16:45Z", "author": {"login": "runzhiwang"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -415,7 +431,14 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n       if (this.isEntering()) {\n         task.onEnter();\n       }\n-      task.execute(service);\n+\n+      if (isThreadPoolAvailable(service)) {\n+        task.execute(service);\n+      } else {\n+        LOG.warn(\"No available thread in pool, duration:\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzMxMA=="}, "originalCommit": {"oid": "9ff1d5299c2c44cb0790ecde0112336ef7028fe8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwMDI0MQ==", "bodyText": "There is a  EndpointStateMachine#logIfNeeded function.   We can leverage this function to reduce the same warning logs logged.  @runzhiwang", "url": "https://github.com/apache/ozone/pull/1185#discussion_r456200241", "createdAt": "2020-07-17T03:37:47Z", "author": {"login": "ChenSammi"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -415,7 +431,14 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n       if (this.isEntering()) {\n         task.onEnter();\n       }\n-      task.execute(service);\n+\n+      if (isThreadPoolAvailable(service)) {\n+        task.execute(service);\n+      } else {\n+        LOG.warn(\"No available thread in pool, duration:\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzMxMA=="}, "originalCommit": {"oid": "9ff1d5299c2c44cb0790ecde0112336ef7028fe8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3NDg4Mw==", "bodyText": "@ChenSammi @xiaoyuyao  Thanks for review. I have updated the PR, because  EndpointStateMachine#logIfNeeded can not be accessed there, and it's can not be refactored to use, so I did not use it.", "url": "https://github.com/apache/ozone/pull/1185#discussion_r457074883", "createdAt": "2020-07-20T05:50:59Z", "author": {"login": "runzhiwang"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -415,7 +431,14 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n       if (this.isEntering()) {\n         task.onEnter();\n       }\n-      task.execute(service);\n+\n+      if (isThreadPoolAvailable(service)) {\n+        task.execute(service);\n+      } else {\n+        LOG.warn(\"No available thread in pool, duration:\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzMxMA=="}, "originalCommit": {"oid": "9ff1d5299c2c44cb0790ecde0112336ef7028fe8"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTYyNDk0OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNjoyMjo0OVrOG1UViA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNjo1MDowNFrOG1U__g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU2MDkwNA==", "bodyText": "Can we switch theset two statement?", "url": "https://github.com/apache/ozone/pull/1185#discussion_r458560904", "createdAt": "2020-07-22T06:22:49Z", "author": {"login": "ChenSammi"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -434,9 +438,14 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n \n       if (isThreadPoolAvailable(service)) {\n         task.execute(service);\n+        threadPoolNotAvailableCount.set(0);\n       } else {\n-        LOG.warn(\"No available thread in pool, duration:\" +\n-            unit.toMillis(time));\n+        threadPoolNotAvailableCount.incrementAndGet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c381fa32eed28861e3c7970eebe6663199c4b66"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU3MTc3NA==", "bodyText": "Updated", "url": "https://github.com/apache/ozone/pull/1185#discussion_r458571774", "createdAt": "2020-07-22T06:50:04Z", "author": {"login": "runzhiwang"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/StateContext.java", "diffHunk": "@@ -434,9 +438,14 @@ public void execute(ExecutorService service, long time, TimeUnit unit)\n \n       if (isThreadPoolAvailable(service)) {\n         task.execute(service);\n+        threadPoolNotAvailableCount.set(0);\n       } else {\n-        LOG.warn(\"No available thread in pool, duration:\" +\n-            unit.toMillis(time));\n+        threadPoolNotAvailableCount.incrementAndGet();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU2MDkwNA=="}, "originalCommit": {"oid": "2c381fa32eed28861e3c7970eebe6663199c4b66"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3960, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}