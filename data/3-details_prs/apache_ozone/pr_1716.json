{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMTU0MDY3", "number": 1716, "title": "HDDS-4606. Detect and handle duplicate ACLs when set default ACLs", "bodyText": "HDDS-4606. Got wrong ACL(s) when set default ACL(s) on volume for repeatedly\nWhat changes were proposed in this pull request?\nignored duplicate entity when adding volume default ACL(s)\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4606\nHow was this patch tested?\nupdating ACL(s) repeatedly, then using ozone CLI to check ACL(s), it's not repeating -- passed", "createdAt": "2020-12-16T13:09:36Z", "url": "https://github.com/apache/ozone/pull/1716", "merged": true, "mergeCommit": {"oid": "b91c1f9973b8035fbe7c0bca6372c0d04890cc90"}, "closed": true, "closedAt": "2020-12-24T03:21:50Z", "author": {"login": "masstter"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmulaHgH2gAyNTQxMTU0MDY3OjAyODY2YTIyZDlhZTdjYzZhODJmMGI5ODIyNzRkZDE1OTMwY2ExNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdo6E1lgBqjQxNDMwMTYyMjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "02866a22d9ae7cc6a82f0b982274dd15930ca164", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/02866a22d9ae7cc6a82f0b982274dd15930ca164", "committedDate": "2020-12-16T13:02:51Z", "message": "HDDS-4606. Got wrong acls when set default Acl(s) on volume for repeatedly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7cb5ebc25e50ed106cbacd17d03592d9f00bec7", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/e7cb5ebc25e50ed106cbacd17d03592d9f00bec7", "committedDate": "2020-12-17T01:08:52Z", "message": "HDDS-4606. Got wrong acls when set default Acl(s) on volume for repeatedly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDcxMTgw", "url": "https://github.com/apache/ozone/pull/1716#pullrequestreview-556071180", "createdAt": "2020-12-20T23:18:00Z", "commit": {"oid": "e7cb5ebc25e50ed106cbacd17d03592d9f00bec7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "740a5f784f86a4037b208529f59ce76408421e79", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/740a5f784f86a4037b208529f59ce76408421e79", "committedDate": "2020-12-21T05:24:00Z", "message": "HDDS-4606. Got wrong acls when set default Acl(s) on volume for repeatedly, add handle adding different acl rights to existing acl entry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "610b540b9705e063973de044a2d84c946d5c75a2", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/610b540b9705e063973de044a2d84c946d5c75a2", "committedDate": "2020-12-21T05:31:58Z", "message": "HDDS-4606. Got wrong acls when set default Acl(s) on volume for repeatedly, add handle adding different acl rights to existing acl entry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3Njc0NzM5", "url": "https://github.com/apache/ozone/pull/1716#pullrequestreview-557674739", "createdAt": "2020-12-23T06:53:45Z", "commit": {"oid": "d0f2cfdb21a54f3ecb5e97608457f010b53e0a40"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo1Mzo0NVrOIKWeDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzowNDowOVrOIKW_Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNDgxNA==", "bodyText": "currBitSet  -> curBitSet", "url": "https://github.com/apache/ozone/pull/1716#discussion_r547724814", "createdAt": "2020-12-23T06:53:45Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "diffHunk": "@@ -100,28 +97,58 @@ private BitSet getAcl(OzoneAclType type, String user) {\n   // Add a new acl to the map\n   public void addAcl(OzoneAcl acl) throws OMException {\n     Objects.requireNonNull(acl, \"Acl should not be null.\");\n+    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (acl.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {\n-      defaultAclList.add(OzoneAcl.toProtobuf(acl));\n+      addDefaultAcl(acl);\n       return;\n     }\n \n-    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (!getAccessAclMap(aclType).containsKey(acl.getName())) {\n       getAccessAclMap(aclType).put(acl.getName(), acl.getAclBitSet());\n     } else {\n-      // Check if we are adding new rights to existing acl.\n-      BitSet temp = (BitSet) acl.getAclBitSet().clone();\n-      BitSet curRights = (BitSet) getAccessAclMap(aclType).\n-          get(acl.getName()).clone();\n-      temp.or(curRights);\n-\n-      if (temp.equals(curRights)) {\n-        // throw exception if acl is already added.\n-        throw new OMException(\"Acl \" + acl + \" already exist.\",\n-            INVALID_REQUEST);\n+      BitSet currBitSet = getAccessAclMap(aclType).get(acl.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0f2cfdb21a54f3ecb5e97608457f010b53e0a40"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNjI3NQ==", "bodyText": "New line indent is 2. Here second line of a long line is 4.", "url": "https://github.com/apache/ozone/pull/1716#discussion_r547726275", "createdAt": "2020-12-23T06:55:24Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "diffHunk": "@@ -100,28 +97,58 @@ private BitSet getAcl(OzoneAclType type, String user) {\n   // Add a new acl to the map\n   public void addAcl(OzoneAcl acl) throws OMException {\n     Objects.requireNonNull(acl, \"Acl should not be null.\");\n+    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (acl.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {\n-      defaultAclList.add(OzoneAcl.toProtobuf(acl));\n+      addDefaultAcl(acl);\n       return;\n     }\n \n-    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (!getAccessAclMap(aclType).containsKey(acl.getName())) {\n       getAccessAclMap(aclType).put(acl.getName(), acl.getAclBitSet());\n     } else {\n-      // Check if we are adding new rights to existing acl.\n-      BitSet temp = (BitSet) acl.getAclBitSet().clone();\n-      BitSet curRights = (BitSet) getAccessAclMap(aclType).\n-          get(acl.getName()).clone();\n-      temp.or(curRights);\n-\n-      if (temp.equals(curRights)) {\n-        // throw exception if acl is already added.\n-        throw new OMException(\"Acl \" + acl + \" already exist.\",\n-            INVALID_REQUEST);\n+      BitSet currBitSet = getAccessAclMap(aclType).get(acl.getName());\n+      BitSet bitSet = checkAndGet(acl, currBitSet);\n+      getAccessAclMap(aclType).replace(acl.getName(), bitSet);\n+    }\n+  }\n+\n+  private void addDefaultAcl(OzoneAcl acl) throws OMException {\n+    OzoneAclInfo ozoneAclInfo = OzoneAcl.toProtobuf(acl);\n+    if (defaultAclList.contains(ozoneAclInfo)) {\n+      aclExistsError(acl);\n+    } else {\n+      for (int i = 0; i < defaultAclList.size(); i++) {\n+        OzoneAclInfo old = defaultAclList.get(i);\n+        if (old.getType() == ozoneAclInfo.getType() && old.getName().equals(\n+                ozoneAclInfo.getName())) {\n+          BitSet currBitSet = BitSet.valueOf(old.getRights().toByteArray());\n+          BitSet bitSet = checkAndGet(acl, currBitSet);\n+          ozoneAclInfo = OzoneAclInfo.newBuilder(ozoneAclInfo).setRights(\n+                  ByteString.copyFrom(bitSet.toByteArray())).build();\n+          defaultAclList.remove(i);\n+          defaultAclList.add(ozoneAclInfo);\n+          return;\n+        }\n       }\n-      getAccessAclMap(aclType).replace(acl.getName(), temp);\n     }\n+    defaultAclList.add(ozoneAclInfo);\n+  }\n+\n+  private void aclExistsError(OzoneAcl acl) throws OMException {\n+    // throw exception if acl is already added.\n+    throw new OMException(\"Acl \" + acl + \" already exist.\", INVALID_REQUEST);\n+  }\n+\n+  private BitSet checkAndGet(OzoneAcl acl, BitSet currBitSet)\n+          throws OMException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0f2cfdb21a54f3ecb5e97608457f010b53e0a40"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNjQ2Nw==", "bodyText": "currBitSet -> curBitSet", "url": "https://github.com/apache/ozone/pull/1716#discussion_r547726467", "createdAt": "2020-12-23T06:55:36Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "diffHunk": "@@ -100,28 +97,58 @@ private BitSet getAcl(OzoneAclType type, String user) {\n   // Add a new acl to the map\n   public void addAcl(OzoneAcl acl) throws OMException {\n     Objects.requireNonNull(acl, \"Acl should not be null.\");\n+    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (acl.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {\n-      defaultAclList.add(OzoneAcl.toProtobuf(acl));\n+      addDefaultAcl(acl);\n       return;\n     }\n \n-    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (!getAccessAclMap(aclType).containsKey(acl.getName())) {\n       getAccessAclMap(aclType).put(acl.getName(), acl.getAclBitSet());\n     } else {\n-      // Check if we are adding new rights to existing acl.\n-      BitSet temp = (BitSet) acl.getAclBitSet().clone();\n-      BitSet curRights = (BitSet) getAccessAclMap(aclType).\n-          get(acl.getName()).clone();\n-      temp.or(curRights);\n-\n-      if (temp.equals(curRights)) {\n-        // throw exception if acl is already added.\n-        throw new OMException(\"Acl \" + acl + \" already exist.\",\n-            INVALID_REQUEST);\n+      BitSet currBitSet = getAccessAclMap(aclType).get(acl.getName());\n+      BitSet bitSet = checkAndGet(acl, currBitSet);\n+      getAccessAclMap(aclType).replace(acl.getName(), bitSet);\n+    }\n+  }\n+\n+  private void addDefaultAcl(OzoneAcl acl) throws OMException {\n+    OzoneAclInfo ozoneAclInfo = OzoneAcl.toProtobuf(acl);\n+    if (defaultAclList.contains(ozoneAclInfo)) {\n+      aclExistsError(acl);\n+    } else {\n+      for (int i = 0; i < defaultAclList.size(); i++) {\n+        OzoneAclInfo old = defaultAclList.get(i);\n+        if (old.getType() == ozoneAclInfo.getType() && old.getName().equals(\n+                ozoneAclInfo.getName())) {\n+          BitSet currBitSet = BitSet.valueOf(old.getRights().toByteArray());\n+          BitSet bitSet = checkAndGet(acl, currBitSet);\n+          ozoneAclInfo = OzoneAclInfo.newBuilder(ozoneAclInfo).setRights(\n+                  ByteString.copyFrom(bitSet.toByteArray())).build();\n+          defaultAclList.remove(i);\n+          defaultAclList.add(ozoneAclInfo);\n+          return;\n+        }\n       }\n-      getAccessAclMap(aclType).replace(acl.getName(), temp);\n     }\n+    defaultAclList.add(ozoneAclInfo);\n+  }\n+\n+  private void aclExistsError(OzoneAcl acl) throws OMException {\n+    // throw exception if acl is already added.\n+    throw new OMException(\"Acl \" + acl + \" already exist.\", INVALID_REQUEST);\n+  }\n+\n+  private BitSet checkAndGet(OzoneAcl acl, BitSet currBitSet)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0f2cfdb21a54f3ecb5e97608457f010b53e0a40"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzczMzM0Nw==", "bodyText": "Could you replace other same expection codes in this class using this aclExistsError function?", "url": "https://github.com/apache/ozone/pull/1716#discussion_r547733347", "createdAt": "2020-12-23T07:04:09Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmOzoneAclMap.java", "diffHunk": "@@ -100,28 +97,58 @@ private BitSet getAcl(OzoneAclType type, String user) {\n   // Add a new acl to the map\n   public void addAcl(OzoneAcl acl) throws OMException {\n     Objects.requireNonNull(acl, \"Acl should not be null.\");\n+    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (acl.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {\n-      defaultAclList.add(OzoneAcl.toProtobuf(acl));\n+      addDefaultAcl(acl);\n       return;\n     }\n \n-    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());\n     if (!getAccessAclMap(aclType).containsKey(acl.getName())) {\n       getAccessAclMap(aclType).put(acl.getName(), acl.getAclBitSet());\n     } else {\n-      // Check if we are adding new rights to existing acl.\n-      BitSet temp = (BitSet) acl.getAclBitSet().clone();\n-      BitSet curRights = (BitSet) getAccessAclMap(aclType).\n-          get(acl.getName()).clone();\n-      temp.or(curRights);\n-\n-      if (temp.equals(curRights)) {\n-        // throw exception if acl is already added.\n-        throw new OMException(\"Acl \" + acl + \" already exist.\",\n-            INVALID_REQUEST);\n+      BitSet currBitSet = getAccessAclMap(aclType).get(acl.getName());\n+      BitSet bitSet = checkAndGet(acl, currBitSet);\n+      getAccessAclMap(aclType).replace(acl.getName(), bitSet);\n+    }\n+  }\n+\n+  private void addDefaultAcl(OzoneAcl acl) throws OMException {\n+    OzoneAclInfo ozoneAclInfo = OzoneAcl.toProtobuf(acl);\n+    if (defaultAclList.contains(ozoneAclInfo)) {\n+      aclExistsError(acl);\n+    } else {\n+      for (int i = 0; i < defaultAclList.size(); i++) {\n+        OzoneAclInfo old = defaultAclList.get(i);\n+        if (old.getType() == ozoneAclInfo.getType() && old.getName().equals(\n+                ozoneAclInfo.getName())) {\n+          BitSet currBitSet = BitSet.valueOf(old.getRights().toByteArray());\n+          BitSet bitSet = checkAndGet(acl, currBitSet);\n+          ozoneAclInfo = OzoneAclInfo.newBuilder(ozoneAclInfo).setRights(\n+                  ByteString.copyFrom(bitSet.toByteArray())).build();\n+          defaultAclList.remove(i);\n+          defaultAclList.add(ozoneAclInfo);\n+          return;\n+        }\n       }\n-      getAccessAclMap(aclType).replace(acl.getName(), temp);\n     }\n+    defaultAclList.add(ozoneAclInfo);\n+  }\n+\n+  private void aclExistsError(OzoneAcl acl) throws OMException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0f2cfdb21a54f3ecb5e97608457f010b53e0a40"}, "originalPosition": 103}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52a975bb90a6362dcb3e0da3248eddbe29d5973a", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/52a975bb90a6362dcb3e0da3248eddbe29d5973a", "committedDate": "2020-12-23T07:32:14Z", "message": "HDDS-4606. Detect and handle duplicate ACLs when set default ACLs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e37dd5e609bb513b969adbda62f564c1563a5c8", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/5e37dd5e609bb513b969adbda62f564c1563a5c8", "committedDate": "2020-12-23T07:32:45Z", "message": "Merge branch 'master' of https://github.com/apache/ozone into HDDS-4606"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d0f2cfdb21a54f3ecb5e97608457f010b53e0a40", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/d0f2cfdb21a54f3ecb5e97608457f010b53e0a40", "committedDate": "2020-12-21T05:32:15Z", "message": "Merge remote-tracking branch 'origin/HDDS-4606' into HDDS-4606\n\n# Conflicts:\n#\thadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestOmOzoneAclMap.java"}, "afterCommit": {"oid": "5e37dd5e609bb513b969adbda62f564c1563a5c8", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/5e37dd5e609bb513b969adbda62f564c1563a5c8", "committedDate": "2020-12-23T07:32:45Z", "message": "Merge branch 'master' of https://github.com/apache/ozone into HDDS-4606"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1864, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}