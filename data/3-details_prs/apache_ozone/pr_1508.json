{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2OTg2ODIz", "number": 1508, "title": "HDDS-4342. Add DataNode state and transitions for a node going through upgrade.", "bodyText": "What changes were proposed in this pull request?\nAdd DataNode state and transitions for a node going through upgrade\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4342\nHow was this patch tested?\nUTs. I will fix any CI failure.", "createdAt": "2020-10-20T17:47:49Z", "url": "https://github.com/apache/ozone/pull/1508", "merged": true, "mergeCommit": {"oid": "7a262504dcbe701773624cc12bf4fef06212ec53"}, "closed": true, "closedAt": "2020-11-14T23:20:38Z", "author": {"login": "prashantpogde"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdU55q3ABqjM5MDY5MzQzNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcTNuRAH2gAyNTA2OTg2ODIzOjNhNzczNGFlY2M0OGFkYzZiMDlkNGQ0ZmEyM2FiYTE2NGE0NzdhY2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "366efbd00fbe69342abab446328f75c1e99c9f0b", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/366efbd00fbe69342abab446328f75c1e99c9f0b", "committedDate": "2020-10-20T17:45:27Z", "message": "HDDS-4342. Add DataNode state and transitions for a node going through upgrade."}, "afterCommit": {"oid": "bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45", "committedDate": "2020-10-22T04:01:49Z", "message": "HDDS-4342. Add DataNode state and transitions for a node going through upgrade."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDI1NTY4", "url": "https://github.com/apache/ozone/pull/1508#pullrequestreview-523425568", "createdAt": "2020-11-04T14:41:51Z", "commit": {"oid": "bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0MTo1MlrOHtbKiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0MTo1MlrOHtbKiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5MzAzMw==", "bodyText": "Is that right we just log an error log here and doesn't take action for the read-only node?\nSuppose here we should let these pipelines only allowed to be used for read operations rather than write operations.", "url": "https://github.com/apache/ozone/pull/1508#discussion_r517393033", "createdAt": "2020-11-04T14:41:52Z", "author": {"login": "linyiqun"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/NonHealthyToReadOnlyHealthyNodeHandler.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.scm.node;\n+\n+import java.util.Set;\n+\n+import org.apache.hadoop.hdds.conf.ConfigurationSource;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineID;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineManager;\n+import org.apache.hadoop.hdds.server.events.EventHandler;\n+import org.apache.hadoop.hdds.server.events.EventPublisher;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Handles Stale node event.\n+ */\n+public class NonHealthyToReadOnlyHealthyNodeHandler\n+    implements EventHandler<DatanodeDetails> {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(NonHealthyToReadOnlyHealthyNodeHandler.class);\n+  private final PipelineManager pipelineManager;\n+  private final NodeManager nodeManager;\n+  private final ConfigurationSource conf;\n+\n+  public NonHealthyToReadOnlyHealthyNodeHandler(\n+      NodeManager nodeManager, PipelineManager pipelineManager,\n+      OzoneConfiguration conf) {\n+    this.pipelineManager = pipelineManager;\n+    this.nodeManager = nodeManager;\n+    this.conf = conf;\n+  }\n+\n+  @Override\n+  public void onMessage(DatanodeDetails datanodeDetails,\n+      EventPublisher publisher) {\n+    Set<PipelineID> pipelineIds =\n+        nodeManager.getPipelines(datanodeDetails);\n+    LOG.info(\"Datanode {} moved to HEALTH READ ONLY state.\",\n+        datanodeDetails);\n+    if (!pipelineIds.isEmpty()) {\n+      LOG.error(\"Datanode {} is part of pipelines {} in HEALTH READ ONLY \" +\n+              \"state.\",\n+          datanodeDetails, pipelineIds);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NjYxNzM4", "url": "https://github.com/apache/ozone/pull/1508#pullrequestreview-526661738", "createdAt": "2020-11-09T21:18:03Z", "commit": {"oid": "bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMToxODowM1rOHwB-AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMzoxOToxMFrOHwFdHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyNTk1Mg==", "bodyText": "Why cannot we pass the layout version from DN registration to this 'DatanodeInfo' constructor? Instead of initializing with layout version '0'.", "url": "https://github.com/apache/ozone/pull/1508#discussion_r520125952", "createdAt": "2020-11-09T21:18:03Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/DatanodeInfo.java", "diffHunk": "@@ -53,6 +56,11 @@ public DatanodeInfo(DatanodeDetails datanodeDetails) {\n     super(datanodeDetails);\n     this.lock = new ReentrantReadWriteLock();\n     this.lastHeartbeatTime = Time.monotonicNow();\n+    lastKnownLayoutVersion =\n+        LayoutVersionProto.newBuilder()\n+            .setMetadataLayoutVersion(0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyNjY5OQ==", "bodyText": "Nit. Should we combine this with the operation in 'updateLastHeartbeatTime'? We are taking a write lock in both the cases and doing minimal work.", "url": "https://github.com/apache/ozone/pull/1508#discussion_r520126699", "createdAt": "2020-11-09T21:19:27Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/DatanodeInfo.java", "diffHunk": "@@ -69,6 +77,24 @@ public void updateLastHeartbeatTime() {\n     }\n   }\n \n+  /**\n+   * Updates the last LayoutVersion.\n+   */\n+  public void updateLastKnownLayoutVersion(LayoutVersionProto version) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEzMDIzMA==", "bodyText": "Nit. Javadoc needs update.", "url": "https://github.com/apache/ozone/pull/1508#discussion_r520130230", "createdAt": "2020-11-09T21:26:09Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/node/NonHealthyToReadOnlyHealthyNodeHandler.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.scm.node;\n+\n+import java.util.Set;\n+\n+import org.apache.hadoop.hdds.conf.ConfigurationSource;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineID;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineManager;\n+import org.apache.hadoop.hdds.server.events.EventHandler;\n+import org.apache.hadoop.hdds.server.events.EventPublisher;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Handles Stale node event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE4MzA2OA==", "bodyText": "Can we change the test so that it still verifies the presence of \"HealthyNodes\" in the SCM eventually?", "url": "https://github.com/apache/ozone/pull/1508#discussion_r520183068", "createdAt": "2020-11-09T23:19:10Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/server-scm/src/test/java/org/apache/hadoop/ozone/scm/node/TestSCMNodeMetrics.java", "diffHunk": "@@ -182,7 +196,7 @@ public void testNodeCountAndInfoMetricsReported() throws Exception {\n \n     MetricsRecordBuilder metricsSource = getMetrics(SCMNodeMetrics.SOURCE_NAME);\n \n-    assertGauge(\"HealthyNodes\", 1, metricsSource);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "687334d91a866e329a4052ec8ba046b2e72a185a", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/687334d91a866e329a4052ec8ba046b2e72a185a", "committedDate": "2020-11-10T19:34:52Z", "message": "HDDS-4342. Add DataNode state and transitions for a node going through upgrade."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5b00891eca44cc57dbde2d4b7a2798ad307d3c5", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/a5b00891eca44cc57dbde2d4b7a2798ad307d3c5", "committedDate": "2020-11-10T19:53:46Z", "message": "HDDS-4342. Addressing review comments. part 1."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/bbabe0ff063836ff596d71d9cce2f8cdc7a9ad45", "committedDate": "2020-10-22T04:01:49Z", "message": "HDDS-4342. Add DataNode state and transitions for a node going through upgrade."}, "afterCommit": {"oid": "a5b00891eca44cc57dbde2d4b7a2798ad307d3c5", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/a5b00891eca44cc57dbde2d4b7a2798ad307d3c5", "committedDate": "2020-11-10T19:53:46Z", "message": "HDDS-4342. Addressing review comments. part 1."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc8d7a88797f8a5f20ab01a3d60b22b9ee8ccb73", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/bc8d7a88797f8a5f20ab01a3d60b22b9ee8ccb73", "committedDate": "2020-11-13T19:49:41Z", "message": "HDDS-4342. Addressing review comments: part 2."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a7734aecc48adc6b09d4d4fa23aba164a477acc", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/3a7734aecc48adc6b09d4d4fa23aba164a477acc", "committedDate": "2020-11-14T03:30:18Z", "message": "HDDS-4342. Addressing CI failure."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2149, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}