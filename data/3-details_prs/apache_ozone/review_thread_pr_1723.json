{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMzA1MTY5", "number": 1723, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNDozMjoyNVrOFHaapQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNTo1Njo1MlrOFICLcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzE3MTU3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNDozMjoyNVrOII4yYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNDozMjoyNVrOII4yYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE4OTkyMA==", "bodyText": "Nit: will it better to use more descriptive names than variable names. For example, replace quotaInBytes by space quota?", "url": "https://github.com/apache/ozone/pull/1723#discussion_r546189920", "createdAt": "2020-12-19T04:32:25Z", "author": {"login": "amaliujia"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "diffHunk": "@@ -228,6 +228,13 @@ public boolean checkQuotaBytesValid(OMMetadataManager metadataManager,\n       throws IOException {\n     long quotaInBytes = omBucketArgs.getQuotaInBytes();\n \n+    if (quotaInBytes == OzoneConsts.QUOTA_RESET &&\n+        omVolumeArgs.getQuotaInBytes() != OzoneConsts.QUOTA_RESET) {\n+      throw new OMException(\"Before clear bucket quotaInBytes,\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331219c104a833d4d5b7207097789e4d40250c0c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzE3MTkyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNDozMjo0OVrOII4yhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxMDo1ODoxMlrOII659w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE4OTk1OQ==", "bodyText": "Nit: same, maybe replace quotaInNamespace by namespace quota?", "url": "https://github.com/apache/ozone/pull/1723#discussion_r546189959", "createdAt": "2020-12-19T04:32:49Z", "author": {"login": "amaliujia"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "diffHunk": "@@ -259,9 +266,16 @@ public boolean checkQuotaBytesValid(OMMetadataManager metadataManager,\n   }\n \n   public boolean checkQuotaNamespaceValid(OmVolumeArgs omVolumeArgs,\n-      OmBucketArgs omBucketArgs) {\n+      OmBucketArgs omBucketArgs) throws IOException{\n     long quotaInNamespace = omBucketArgs.getQuotaInNamespace();\n \n+    if (quotaInNamespace == OzoneConsts.QUOTA_RESET &&\n+        omVolumeArgs.getQuotaInNamespace() != OzoneConsts.QUOTA_RESET) {\n+      throw new OMException(\"Before clear bucket \" +\n+          \"quotaInNamespace, volume quotaInNamespace need to be clear first.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331219c104a833d4d5b7207097789e4d40250c0c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIyNDYzMQ==", "bodyText": "Agreed with @amaliujia 's suggestion. I also prefer to do below rename changing for more readable:\nquotaInNamespace -> namespaceQuota\nquotaInNamespace -> spaceQuota", "url": "https://github.com/apache/ozone/pull/1723#discussion_r546224631", "createdAt": "2020-12-19T10:58:12Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "diffHunk": "@@ -259,9 +266,16 @@ public boolean checkQuotaBytesValid(OMMetadataManager metadataManager,\n   }\n \n   public boolean checkQuotaNamespaceValid(OmVolumeArgs omVolumeArgs,\n-      OmBucketArgs omBucketArgs) {\n+      OmBucketArgs omBucketArgs) throws IOException{\n     long quotaInNamespace = omBucketArgs.getQuotaInNamespace();\n \n+    if (quotaInNamespace == OzoneConsts.QUOTA_RESET &&\n+        omVolumeArgs.getQuotaInNamespace() != OzoneConsts.QUOTA_RESET) {\n+      throw new OMException(\"Before clear bucket \" +\n+          \"quotaInNamespace, volume quotaInNamespace need to be clear first.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE4OTk1OQ=="}, "originalCommit": {"oid": "331219c104a833d4d5b7207097789e4d40250c0c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTY3NjkyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNTo1Mjo0NFrOIJvQzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNTo1Mjo0NFrOIJvQzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4MjQ0NA==", "bodyText": "Can try something like this -\n  LambdaTestUtils.intercept(IOException.class, \"Before clear bucket \"\n            + \"quotaInBytes, volume quotaInBytes need to be clear first.\",\n        () -> ozoneBucket.clearSpaceQuota());\n\nShall save lines and looks better", "url": "https://github.com/apache/ozone/pull/1723#discussion_r547082444", "createdAt": "2020-12-22T05:52:44Z", "author": {"login": "ayushtkn"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -311,6 +311,23 @@ public void testSetAndClrQuota() throws IOException {\n         ozoneBucket.getQuotaInBytes());\n     Assert.assertEquals(1000L, ozoneBucket.getQuotaInNamespace());\n \n+    try {\n+      ozoneBucket.clearSpaceQuota();\n+      Assert.fail(\"clear quota should be failed\");\n+    } catch (IOException ex) {\n+      GenericTestUtils.assertExceptionContains(\"Before clear bucket \" +\n+          \"quotaInBytes, volume quotaInBytes need to be clear first.\", ex);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331219c104a833d4d5b7207097789e4d40250c0c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTY3ODI4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNTo1MzoyMFrOIJvRjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNTo1MzoyMFrOIJvRjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4MjYzOA==", "bodyText": "Similarly here -\n    LambdaTestUtils.intercept(IOException.class, \"Before clear bucket \"\n            + \"quotaInNamespace, volume quotaInNamespace need to be clear first.\",\n        () -> ozoneBucket.clearCountQuota());", "url": "https://github.com/apache/ozone/pull/1723#discussion_r547082638", "createdAt": "2020-12-22T05:53:20Z", "author": {"login": "ayushtkn"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -311,6 +311,23 @@ public void testSetAndClrQuota() throws IOException {\n         ozoneBucket.getQuotaInBytes());\n     Assert.assertEquals(1000L, ozoneBucket.getQuotaInNamespace());\n \n+    try {\n+      ozoneBucket.clearSpaceQuota();\n+      Assert.fail(\"clear quota should be failed\");\n+    } catch (IOException ex) {\n+      GenericTestUtils.assertExceptionContains(\"Before clear bucket \" +\n+          \"quotaInBytes, volume quotaInBytes need to be clear first.\", ex);\n+    }\n+\n+    try {\n+      ozoneBucket.clearCountQuota();\n+      Assert.fail(\"clear quota should be failed\");\n+    } catch (IOException ex) {\n+      GenericTestUtils.assertExceptionContains(\"Before clear bucket \" +\n+          \"quotaInNamespace, volume quotaInNamespace need to be clear first.\",\n+          ex);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331219c104a833d4d5b7207097789e4d40250c0c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTY4NjI2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNTo1Njo1MlrOIJvV8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNTo1Njo1MlrOIJvV8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4Mzc2MQ==", "bodyText": "Seems some grammatical  error in the message, Can you check and reframe if possible,\nMay be something like a warning, Can not clear bucket namespace quota because volume namespace quota is not unset. Or may be something better....", "url": "https://github.com/apache/ozone/pull/1723#discussion_r547083761", "createdAt": "2020-12-22T05:56:52Z", "author": {"login": "ayushtkn"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "diffHunk": "@@ -259,9 +266,16 @@ public boolean checkQuotaBytesValid(OMMetadataManager metadataManager,\n   }\n \n   public boolean checkQuotaNamespaceValid(OmVolumeArgs omVolumeArgs,\n-      OmBucketArgs omBucketArgs) {\n+      OmBucketArgs omBucketArgs) throws IOException{\n     long quotaInNamespace = omBucketArgs.getQuotaInNamespace();\n \n+    if (quotaInNamespace == OzoneConsts.QUOTA_RESET &&\n+        omVolumeArgs.getQuotaInNamespace() != OzoneConsts.QUOTA_RESET) {\n+      throw new OMException(\"Before clear bucket \" +\n+          \"quotaInNamespace, volume quotaInNamespace need to be clear first.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331219c104a833d4d5b7207097789e4d40250c0c"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4468, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}