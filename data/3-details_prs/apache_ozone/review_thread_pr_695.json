{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjQ4MjAw", "number": 695, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDo0MToxOVrODpRXww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDo0MzowMFrODpRZ4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjAyODE5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMProxyInfo.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDo0MToxOVrOF4WGVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMjo0Mzo1MlrOF4ZcOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNjY0NQ==", "bodyText": "should we attempt this iif rpcAddr.isUnresolved()is false?", "url": "https://github.com/apache/ozone/pull/695#discussion_r394626645", "createdAt": "2020-03-18T20:41:19Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMProxyInfo.java", "diffHunk": "@@ -21,23 +21,48 @@\n import org.apache.hadoop.io.Text;\n import org.apache.hadoop.net.NetUtils;\n import org.apache.hadoop.security.SecurityUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.net.InetSocketAddress;\n \n /**\n  * Class to store OM proxy information.\n  */\n public class OMProxyInfo {\n+  private String serviceId;\n   private String nodeId;\n   private String rpcAddrStr;\n   private InetSocketAddress rpcAddr;\n   private Text dtService;\n \n-  OMProxyInfo(String nodeID, String rpcAddress) {\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(OMProxyInfo.class);\n+\n+  OMProxyInfo(String serviceID, String nodeID, String rpcAddress) {\n+    this.serviceId = serviceID;\n     this.nodeId = nodeID;\n     this.rpcAddrStr = rpcAddress;\n     this.rpcAddr = NetUtils.createSocketAddr(rpcAddrStr);\n-    this.dtService = SecurityUtil.buildTokenService(rpcAddr);\n+    if (rpcAddr.isUnresolved()) {\n+      LOG.warn(\"OzoneManager address {} for serviceID {} remains unresolved \" +\n+          \"for node ID {} Check your ozone-site.xml file to ensure ozone \" +\n+          \"manager addresses are configured properly.\",\n+          rpcAddress, serviceId, nodeId);\n+    }\n+\n+    // This issue will be a problem with docker/kubernetes world where one of\n+    // the container is killed, and that OM address will be unresolved. For now\n+    // skip the unresolved OM address setting it to the token service field.\n+\n+    // TODo: Retry rpcAddr when unresolved during getProxy which will be used\n+    //  until next fail over. Fix setting of dtService also at that time.\n+    try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "793c61e78d9a6d5c2240b3e91ff18977bf07c237"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY4MTQwMQ==", "bodyText": "Yes, good idea. done.", "url": "https://github.com/apache/ozone/pull/695#discussion_r394681401", "createdAt": "2020-03-18T22:43:52Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMProxyInfo.java", "diffHunk": "@@ -21,23 +21,48 @@\n import org.apache.hadoop.io.Text;\n import org.apache.hadoop.net.NetUtils;\n import org.apache.hadoop.security.SecurityUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.net.InetSocketAddress;\n \n /**\n  * Class to store OM proxy information.\n  */\n public class OMProxyInfo {\n+  private String serviceId;\n   private String nodeId;\n   private String rpcAddrStr;\n   private InetSocketAddress rpcAddr;\n   private Text dtService;\n \n-  OMProxyInfo(String nodeID, String rpcAddress) {\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(OMProxyInfo.class);\n+\n+  OMProxyInfo(String serviceID, String nodeID, String rpcAddress) {\n+    this.serviceId = serviceID;\n     this.nodeId = nodeID;\n     this.rpcAddrStr = rpcAddress;\n     this.rpcAddr = NetUtils.createSocketAddr(rpcAddrStr);\n-    this.dtService = SecurityUtil.buildTokenService(rpcAddr);\n+    if (rpcAddr.isUnresolved()) {\n+      LOG.warn(\"OzoneManager address {} for serviceID {} remains unresolved \" +\n+          \"for node ID {} Check your ozone-site.xml file to ensure ozone \" +\n+          \"manager addresses are configured properly.\",\n+          rpcAddress, serviceId, nodeId);\n+    }\n+\n+    // This issue will be a problem with docker/kubernetes world where one of\n+    // the container is killed, and that OM address will be unresolved. For now\n+    // skip the unresolved OM address setting it to the token service field.\n+\n+    // TODo: Retry rpcAddr when unresolved during getProxy which will be used\n+    //  until next fail over. Fix setting of dtService also at that time.\n+    try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNjY0NQ=="}, "originalCommit": {"oid": "793c61e78d9a6d5c2240b3e91ff18977bf07c237"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjAzMzYwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDo0MzowMFrOF4WJzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMjozNjoxOVrOF5Cteg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNzUzNQ==", "bodyText": "As we discussed offline, can you add a TODO to fix the computed DTService when the dtService is temporarily avialable due to OM instance reboot, DNS issue?", "url": "https://github.com/apache/ozone/pull/695#discussion_r394627535", "createdAt": "2020-03-18T20:43:00Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java", "diffHunk": "@@ -191,20 +192,19 @@ public Text getCurrentProxyDelegationToken() {\n   private Text computeDelegationTokenService() {\n     // For HA, this will return \",\" separated address of all OM's.\n     StringBuilder rpcAddress = new StringBuilder();\n-    int count = 0;\n+\n     for (Map.Entry<String, OMProxyInfo> omProxyInfoSet :\n         omProxyInfos.entrySet()) {\n-      count++;\n-      rpcAddress =\n-          rpcAddress.append(\n-              omProxyInfoSet.getValue().getDelegationTokenService());\n+      Text dtService = omProxyInfoSet.getValue().getDelegationTokenService();\n \n-      if (omProxyInfos.size() != count) {\n-        rpcAddress.append(\",\");\n+      // dtService can be null when during client object creation when one of\n+      // the OM configured address in unreachable.\n+      if (dtService != null) {\n+        rpcAddress.append(\",\").append(rpcAddress);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "793c61e78d9a6d5c2240b3e91ff18977bf07c237"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY4MTY0Nw==", "bodyText": "I have added TODO in OMProxyInfo.java. Based on @arp7 offline comments removed TODO and create a Jira to resolve this.\nhttps://issues.apache.org/jira/browse/HDDS-3233", "url": "https://github.com/apache/ozone/pull/695#discussion_r394681647", "createdAt": "2020-03-18T22:44:38Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java", "diffHunk": "@@ -191,20 +192,19 @@ public Text getCurrentProxyDelegationToken() {\n   private Text computeDelegationTokenService() {\n     // For HA, this will return \",\" separated address of all OM's.\n     StringBuilder rpcAddress = new StringBuilder();\n-    int count = 0;\n+\n     for (Map.Entry<String, OMProxyInfo> omProxyInfoSet :\n         omProxyInfos.entrySet()) {\n-      count++;\n-      rpcAddress =\n-          rpcAddress.append(\n-              omProxyInfoSet.getValue().getDelegationTokenService());\n+      Text dtService = omProxyInfoSet.getValue().getDelegationTokenService();\n \n-      if (omProxyInfos.size() != count) {\n-        rpcAddress.append(\",\");\n+      // dtService can be null when during client object creation when one of\n+      // the OM configured address in unreachable.\n+      if (dtService != null) {\n+        rpcAddress.append(\",\").append(rpcAddress);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNzUzNQ=="}, "originalCommit": {"oid": "793c61e78d9a6d5c2240b3e91ff18977bf07c237"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM1NzU2Mg==", "bodyText": "I have an in-progress patch for HDDS-3233. I need to test out the scenario, and I see few in cases not resolving the address. Still looking into that part, will post the change as part of HDDS-3233.", "url": "https://github.com/apache/ozone/pull/695#discussion_r395357562", "createdAt": "2020-03-19T22:36:19Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/ha/OMFailoverProxyProvider.java", "diffHunk": "@@ -191,20 +192,19 @@ public Text getCurrentProxyDelegationToken() {\n   private Text computeDelegationTokenService() {\n     // For HA, this will return \",\" separated address of all OM's.\n     StringBuilder rpcAddress = new StringBuilder();\n-    int count = 0;\n+\n     for (Map.Entry<String, OMProxyInfo> omProxyInfoSet :\n         omProxyInfos.entrySet()) {\n-      count++;\n-      rpcAddress =\n-          rpcAddress.append(\n-              omProxyInfoSet.getValue().getDelegationTokenService());\n+      Text dtService = omProxyInfoSet.getValue().getDelegationTokenService();\n \n-      if (omProxyInfos.size() != count) {\n-        rpcAddress.append(\",\");\n+      // dtService can be null when during client object creation when one of\n+      // the OM configured address in unreachable.\n+      if (dtService != null) {\n+        rpcAddress.append(\",\").append(rpcAddress);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNzUzNQ=="}, "originalCommit": {"oid": "793c61e78d9a6d5c2240b3e91ff18977bf07c237"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4856, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}