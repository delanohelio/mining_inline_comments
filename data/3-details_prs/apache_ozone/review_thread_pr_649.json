{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDQ3OTU3", "number": 649, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTozMDoxMlrODmbwlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMDo0NDoxMVrODm2UBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjI3Mjg2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OzoneClientKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTozMDoxMlrOFz2ZKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjo1MzozOVrOF0X-YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMjg3NA==", "bodyText": "What's the reason for changing to try-finally here?", "url": "https://github.com/apache/ozone/pull/649#discussion_r389912874", "createdAt": "2020-03-09T19:30:12Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OzoneClientKeyGenerator.java", "diffHunk": "@@ -86,22 +91,24 @@ public Void call() throws Exception {\n \n     OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n \n-    ensureVolumeAndBucketExist(ozoneConfiguration, volumeName, bucketName);\n \n     contentGenerator = new ContentGenerator(keySize, bufferSize);\n     metadata = new HashMap<>();\n \n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n-\n-      bucket =\n-          rpcClient.getObjectStore().getVolume(volumeName)\n-              .getBucket(bucketName);\n+    OzoneClient rpcClient = null;\n+    try {\n+      rpcClient = createOzoneClient(omServiceID, ozoneConfiguration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ2MzA3Mg==", "bodyText": "Initially I was using if,else to create OzoneClient, later moved the code to a method. Used try with resource.", "url": "https://github.com/apache/ozone/pull/649#discussion_r390463072", "createdAt": "2020-03-10T16:53:39Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OzoneClientKeyGenerator.java", "diffHunk": "@@ -86,22 +91,24 @@ public Void call() throws Exception {\n \n     OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n \n-    ensureVolumeAndBucketExist(ozoneConfiguration, volumeName, bucketName);\n \n     contentGenerator = new ContentGenerator(keySize, bufferSize);\n     metadata = new HashMap<>();\n \n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n-\n-      bucket =\n-          rpcClient.getObjectStore().getVolume(volumeName)\n-              .getBucket(bucketName);\n+    OzoneClient rpcClient = null;\n+    try {\n+      rpcClient = createOzoneClient(omServiceID, ozoneConfiguration);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMjg3NA=="}, "originalCommit": {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjI5MTU2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTozNTo1M1rOFz2klA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTozNTo1M1rOFz2klA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxNTc5Ng==", "bodyText": "Now that rpcClient is passed as a parameter, can we merge this block and ensureVolumeExists?", "url": "https://github.com/apache/ozone/pull/649#discussion_r389915796", "createdAt": "2020-03-09T19:35:53Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "diffHunk": "@@ -374,53 +369,45 @@ public String generateObjectName(long counter) {\n   /**\n    * Create missing target volume/bucket.\n    */\n-  public void ensureVolumeAndBucketExist(OzoneConfiguration ozoneConfiguration,\n+  public void ensureVolumeAndBucketExist(OzoneClient rpcClient,\n       String volumeName, String bucketName) throws IOException {\n \n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n-\n-      OzoneVolume volume = null;\n-      try {\n+    OzoneVolume volume = null;\n+    try {\n+      volume = rpcClient.getObjectStore().getVolume(volumeName);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n+        rpcClient.getObjectStore().createVolume(volumeName);\n         volume = rpcClient.getObjectStore().getVolume(volumeName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n-          rpcClient.getObjectStore().createVolume(volumeName);\n-          volume = rpcClient.getObjectStore().getVolume(volumeName);\n-        } else {\n-          throw ex;\n-        }\n+      } else {\n+        throw ex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjMzNjM5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmBucketGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTo0OTo0MVrOFz3AUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTo0OTo0MVrOFz3AUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyMjg5Ng==", "bodyText": "Please reuse createOzoneClient from parent class.", "url": "https://github.com/apache/ozone/pull/649#discussion_r389922896", "createdAt": "2020-03-09T19:49:41Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmBucketGenerator.java", "diffHunk": "@@ -46,24 +48,49 @@\n       defaultValue = \"vol1\")\n   private String volumeName;\n \n+  @Option(\n+      names = \"--om-service-id\",\n+      description = \"OM Service ID\"\n+  )\n+  private String omServiceID = null;\n+\n   private OzoneManagerProtocol ozoneManagerClient;\n \n   private Timer bucketCreationTimer;\n \n   @Override\n   public Void call() throws Exception {\n \n-    init();\n+    OzoneClient ozoneClient = null;\n+    try {\n+      init();\n+\n+      OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+\n+      ozoneManagerClient = createOmClient(ozoneConfiguration, omServiceID);\n+\n+      if (omServiceID != null) {\n+        ozoneClient = OzoneClientFactory.getRpcClient(omServiceID,\n+            ozoneConfiguration);\n+      } else {\n+        ozoneClient = OzoneClientFactory.getRpcClient(ozoneConfiguration);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjM0OTk0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTo1MzozN1rOFz3IsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTo1MzozN1rOFz3IsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyNTA0MQ==", "bodyText": "Leftover debug.", "url": "https://github.com/apache/ozone/pull/649#discussion_r389925041", "createdAt": "2020-03-09T19:53:37Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmKeyGenerator.java", "diffHunk": "@@ -62,24 +63,44 @@\n   )\n   private ReplicationFactor factor = ReplicationFactor.THREE;\n \n+  @Option(\n+      names = \"--om-service-id\",\n+      description = \"OM Service ID\"\n+  )\n+  private String omServiceID = null;\n+\n   private OzoneManagerProtocol ozoneManagerClient;\n \n   private Timer timer;\n \n   @Override\n   public Void call() throws Exception {\n \n-    init();\n+    OzoneClient rpcClient = null;\n+    try {\n+      init();\n+\n+      OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+\n+      rpcClient = createOzoneClient(omServiceID, ozoneConfiguration);\n \n-    OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+      ensureVolumeAndBucketExist(rpcClient, volumeName, bucketName);\n \n-    ensureVolumeAndBucketExist(ozoneConfiguration, volumeName, bucketName);\n+      System.out.print(\"Bharat \" + omServiceID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjM1MTk2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTo1NDoxNFrOFz3J_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTo1NDoxNFrOFz3J_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyNTM3Mw==", "bodyText": "Can rpcClient be closed right after creating volume/bucket?  Probably best to wrap in \"try-with-resources\" block.", "url": "https://github.com/apache/ozone/pull/649#discussion_r389925373", "createdAt": "2020-03-09T19:54:14Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmKeyGenerator.java", "diffHunk": "@@ -62,24 +63,44 @@\n   )\n   private ReplicationFactor factor = ReplicationFactor.THREE;\n \n+  @Option(\n+      names = \"--om-service-id\",\n+      description = \"OM Service ID\"\n+  )\n+  private String omServiceID = null;\n+\n   private OzoneManagerProtocol ozoneManagerClient;\n \n   private Timer timer;\n \n   @Override\n   public Void call() throws Exception {\n \n-    init();\n+    OzoneClient rpcClient = null;\n+    try {\n+      init();\n+\n+      OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+\n+      rpcClient = createOzoneClient(omServiceID, ozoneConfiguration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjM1NjAzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmBucketGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTo1NTozNlrOFz3MnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTo1NTozNlrOFz3MnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyNjA0NQ==", "bodyText": "Can ozoneClient be closed right after creating volume?", "url": "https://github.com/apache/ozone/pull/649#discussion_r389926045", "createdAt": "2020-03-09T19:55:36Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmBucketGenerator.java", "diffHunk": "@@ -46,24 +48,49 @@\n       defaultValue = \"vol1\")\n   private String volumeName;\n \n+  @Option(\n+      names = \"--om-service-id\",\n+      description = \"OM Service ID\"\n+  )\n+  private String omServiceID = null;\n+\n   private OzoneManagerProtocol ozoneManagerClient;\n \n   private Timer bucketCreationTimer;\n \n   @Override\n   public Void call() throws Exception {\n \n-    init();\n+    OzoneClient ozoneClient = null;\n+    try {\n+      init();\n+\n+      OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+\n+      ozoneManagerClient = createOmClient(ozoneConfiguration, omServiceID);\n+\n+      if (omServiceID != null) {\n+        ozoneClient = OzoneClientFactory.getRpcClient(omServiceID,\n+            ozoneConfiguration);\n+      } else {\n+        ozoneClient = OzoneClientFactory.getRpcClient(ozoneConfiguration);\n+      }\n+      ensureVolumeExists(ozoneClient, volumeName);\n \n-    OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+      bucketCreationTimer = getMetrics().timer(\"bucket-create\");\n \n-    ozoneManagerClient = createOmClient(ozoneConfiguration);\n+      runTests(this::createBucket);\n \n-    ensureVolumeExists(ozoneConfiguration, volumeName);\n+    } finally {\n \n-    bucketCreationTimer = getMetrics().timer(\"bucket-create\");\n+      if (ozoneClient != null) {\n+        ozoneClient.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjM5MzA0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMDowNzo0NlrOFz3j-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjo1MjozM1rOF0X7Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzMjAyNg==", "bodyText": "I think here getClient should be used to validate presence of --om-service-id param.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return OzoneClientFactory.getRpcClient(conf);\n          \n          \n            \n                  return OzoneClientFactory.getClient(conf);\n          \n      \n    \n    \n  \n\nThere are two methods in OzoneClientFactory that take Configuration and return OzoneClient:\n\ngetClient(Configuration) throws exception if configuration has OM service ID, but\ngetRpcClient(Configuration) does not\n\nI'm getting timeout on OM HA cluster when --om-service-id is omitted.\n$ ozone freon ockg -n 1 -t 1\n...\n[main] INFO ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:9862. Already tried 0 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)\n...\n[main] ERROR ha.OMFailoverProxyProvider: Failed to connect to OMs: [nodeId=null,nodeAddress=0.0.0.0:9862]. Attempted 15 failovers.\n\nAfter making the suggested change locally, I get the error message as expected:\n$ ozone freon ockg -n 1 -t 1\n...\nFollowing ServiceID's [id1] are defined in the configuration. Use the method getClient which takes serviceID and configuration as param", "url": "https://github.com/apache/ozone/pull/649#discussion_r389932026", "createdAt": "2020-03-09T20:07:46Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "diffHunk": "@@ -469,4 +456,13 @@ public AtomicLong getAttemptCounter() {\n   public int getThreadNo() {\n     return threadNo;\n   }\n+\n+  protected OzoneClient createOzoneClient(String omServiceID,\n+      OzoneConfiguration conf) throws Exception {\n+    if (omServiceID != null) {\n+      return OzoneClientFactory.getRpcClient(omServiceID, conf);\n+    } else {\n+      return OzoneClientFactory.getRpcClient(conf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ2MjI5MA==", "bodyText": "Removed getClient, and used getRpcClient, to avoid these kind of mistakes instead of duplicating the same code in multiple functions.", "url": "https://github.com/apache/ozone/pull/649#discussion_r390462290", "createdAt": "2020-03-10T16:52:33Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "diffHunk": "@@ -469,4 +456,13 @@ public AtomicLong getAttemptCounter() {\n   public int getThreadNo() {\n     return threadNo;\n   }\n+\n+  protected OzoneClient createOzoneClient(String omServiceID,\n+      OzoneConfiguration conf) throws Exception {\n+    if (omServiceID != null) {\n+      return OzoneClientFactory.getRpcClient(omServiceID, conf);\n+    } else {\n+      return OzoneClientFactory.getRpcClient(conf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzMjAyNg=="}, "originalCommit": {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDYyMzQwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMDo0NDoxMVrOF0gSIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMTowMDo1NVrOF0g18w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU5OTIwMQ==", "bodyText": "Should throw ex in else branch, otherwise volume creation fails silently and will run into NPE elsewhere.", "url": "https://github.com/apache/ozone/pull/649#discussion_r390599201", "createdAt": "2020-03-10T20:44:11Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "diffHunk": "@@ -374,53 +369,37 @@ public String generateObjectName(long counter) {\n   /**\n    * Create missing target volume/bucket.\n    */\n-  public void ensureVolumeAndBucketExist(OzoneConfiguration ozoneConfiguration,\n+  public void ensureVolumeAndBucketExist(OzoneClient rpcClient,\n       String volumeName, String bucketName) throws IOException {\n \n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n+    OzoneVolume volume;\n+    ensureVolumeExists(rpcClient, volumeName);\n+    volume = rpcClient.getObjectStore().getVolume(volumeName);\n \n-      OzoneVolume volume = null;\n-      try {\n-        volume = rpcClient.getObjectStore().getVolume(volumeName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n-          rpcClient.getObjectStore().createVolume(volumeName);\n-          volume = rpcClient.getObjectStore().getVolume(volumeName);\n-        } else {\n-          throw ex;\n-        }\n-      }\n-\n-      try {\n-        volume.getBucket(bucketName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.BUCKET_NOT_FOUND) {\n-          volume.createBucket(bucketName);\n-        } else {\n-          throw ex;\n-        }\n+    try {\n+      volume.getBucket(bucketName);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == ResultCodes.BUCKET_NOT_FOUND) {\n+        volume.createBucket(bucketName);\n+      } else {\n+        throw ex;\n       }\n     }\n+\n   }\n \n   /**\n    * Create missing target volume.\n    */\n   public void ensureVolumeExists(\n-      OzoneConfiguration ozoneConfiguration,\n+      OzoneClient rpcClient,\n       String volumeName) throws IOException {\n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n-\n-      try {\n-        rpcClient.getObjectStore().getVolume(volumeName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n-          rpcClient.getObjectStore().createVolume(volumeName);\n-        }\n+    try {\n+      rpcClient.getObjectStore().getVolume(volumeName);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n+        rpcClient.getObjectStore().createVolume(volumeName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c181ce87cb447c35450f6e4ca7329a8cfe4f1aee"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYwODM3MQ==", "bodyText": "Nice catch. But that should fail in the next steps in our case like during getVolume/CreateBucket. But it is better to throw an exception from here. Addressed in the latest commit.", "url": "https://github.com/apache/ozone/pull/649#discussion_r390608371", "createdAt": "2020-03-10T21:00:55Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "diffHunk": "@@ -374,53 +369,37 @@ public String generateObjectName(long counter) {\n   /**\n    * Create missing target volume/bucket.\n    */\n-  public void ensureVolumeAndBucketExist(OzoneConfiguration ozoneConfiguration,\n+  public void ensureVolumeAndBucketExist(OzoneClient rpcClient,\n       String volumeName, String bucketName) throws IOException {\n \n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n+    OzoneVolume volume;\n+    ensureVolumeExists(rpcClient, volumeName);\n+    volume = rpcClient.getObjectStore().getVolume(volumeName);\n \n-      OzoneVolume volume = null;\n-      try {\n-        volume = rpcClient.getObjectStore().getVolume(volumeName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n-          rpcClient.getObjectStore().createVolume(volumeName);\n-          volume = rpcClient.getObjectStore().getVolume(volumeName);\n-        } else {\n-          throw ex;\n-        }\n-      }\n-\n-      try {\n-        volume.getBucket(bucketName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.BUCKET_NOT_FOUND) {\n-          volume.createBucket(bucketName);\n-        } else {\n-          throw ex;\n-        }\n+    try {\n+      volume.getBucket(bucketName);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == ResultCodes.BUCKET_NOT_FOUND) {\n+        volume.createBucket(bucketName);\n+      } else {\n+        throw ex;\n       }\n     }\n+\n   }\n \n   /**\n    * Create missing target volume.\n    */\n   public void ensureVolumeExists(\n-      OzoneConfiguration ozoneConfiguration,\n+      OzoneClient rpcClient,\n       String volumeName) throws IOException {\n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n-\n-      try {\n-        rpcClient.getObjectStore().getVolume(volumeName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n-          rpcClient.getObjectStore().createVolume(volumeName);\n-        }\n+    try {\n+      rpcClient.getObjectStore().getVolume(volumeName);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n+        rpcClient.getObjectStore().createVolume(volumeName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU5OTIwMQ=="}, "originalCommit": {"oid": "c181ce87cb447c35450f6e4ca7329a8cfe4f1aee"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4960, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}