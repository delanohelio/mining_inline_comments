{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTYwNDIy", "number": 1385, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzo1ODowNFrOEgSFbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTowODoyNVrOEgTlwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjg2MTkxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzo1ODowNFrOHNDoow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTo0Nzo1NlrOHSpFGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ1MzA5MQ==", "bodyText": "I think refreshPipeline condition was removed intentionally in HDDS-3658 and should not be restored.  (This is also causing failure of TestKeyManagerUnit.testLookupFileWithDnFailure unit test.)", "url": "https://github.com/apache/ozone/pull/1385#discussion_r483453091", "createdAt": "2020-09-04T07:58:04Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1783,7 +1802,9 @@ private OzoneFileStatus getOzoneFileStatus(String volumeName,\n \n       // if the key is a file then do refresh pipeline info in OM by asking SCM\n       if (fileKeyInfo != null) {\n-        refreshPipeline(fileKeyInfo);\n+        if (refreshPipeline) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ec0ee3c192b491b1bb43091f59f86e313f18db2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY0NTEwMQ==", "bodyText": "Thanks @adoroszlai again for the review help.\nYes, you are correct. Test passed locally without the if (refreshPipeline) condition.\nPoint-1) That means, the caller should callrefreshPipeline(OmKeyInfo value) method without the refreshPipeline condition.\nPoint-2) Also, I'm planning to move the refreshPipeline call outside BUCKET_LOCK and will be moving to here. Now, its a duplicate call added as part of HDDS-3658.\nDoes these two changes make sense to you?", "url": "https://github.com/apache/ozone/pull/1385#discussion_r483645101", "createdAt": "2020-09-04T14:19:18Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1783,7 +1802,9 @@ private OzoneFileStatus getOzoneFileStatus(String volumeName,\n \n       // if the key is a file then do refresh pipeline info in OM by asking SCM\n       if (fileKeyInfo != null) {\n-        refreshPipeline(fileKeyInfo);\n+        if (refreshPipeline) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ1MzA5MQ=="}, "originalCommit": {"oid": "0ec0ee3c192b491b1bb43091f59f86e313f18db2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY0OTQ4Nw==", "bodyText": "Yes, both points make sense.  Thanks for noticing the duplicate call.", "url": "https://github.com/apache/ozone/pull/1385#discussion_r483649487", "createdAt": "2020-09-04T14:26:38Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1783,7 +1802,9 @@ private OzoneFileStatus getOzoneFileStatus(String volumeName,\n \n       // if the key is a file then do refresh pipeline info in OM by asking SCM\n       if (fileKeyInfo != null) {\n-        refreshPipeline(fileKeyInfo);\n+        if (refreshPipeline) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ1MzA5MQ=="}, "originalCommit": {"oid": "0ec0ee3c192b491b1bb43091f59f86e313f18db2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwOTQ2Ng==", "bodyText": "OK, Done!", "url": "https://github.com/apache/ozone/pull/1385#discussion_r489309466", "createdAt": "2020-09-16T09:47:56Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1783,7 +1802,9 @@ private OzoneFileStatus getOzoneFileStatus(String volumeName,\n \n       // if the key is a file then do refresh pipeline info in OM by asking SCM\n       if (fileKeyInfo != null) {\n-        refreshPipeline(fileKeyInfo);\n+        if (refreshPipeline) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ1MzA5MQ=="}, "originalCommit": {"oid": "0ec0ee3c192b491b1bb43091f59f86e313f18db2"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjg2NDgxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzo1ODo1NVrOHNDqew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzo1ODo1NVrOHNDqew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ1MzU2Mw==", "bodyText": "@ChenSammi Was this instance of getRefreshPipeline condition retained in HDDS-3658 intentionally?", "url": "https://github.com/apache/ozone/pull/1385#discussion_r483453563", "createdAt": "2020-09-04T07:58:55Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -2144,10 +2166,14 @@ private void listStatusFindKeyInTableCache(\n       metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n           bucketName);\n     }\n-    if (args.getRefreshPipeline()) {\n-      for(OzoneFileStatus fileStatus : fileStatusList){\n+\n+    for (OzoneFileStatus fileStatus : fileStatusList) {\n+      if (args.getRefreshPipeline()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ec0ee3c192b491b1bb43091f59f86e313f18db2"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzEwODUwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/fs/OzoneManagerFS.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTowODoyNVrOHNF85g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTo0NzozN1rOHSpEFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5MTA0Ng==", "bodyText": "In my comment on the previous PR:\n\nShould we also keep the two original methods?\n\nI meant both getFileStatus and listStatus.  Sorry if it was unclear.", "url": "https://github.com/apache/ozone/pull/1385#discussion_r483491046", "createdAt": "2020-09-04T09:08:25Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/fs/OzoneManagerFS.java", "diffHunk": "@@ -49,6 +69,21 @@ OpenKeySession createFile(OmKeyArgs args, boolean isOverWrite,\n    */\n   OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress) throws IOException;\n \n+  /**\n+   * List the status for a file or a directory and its contents.\n+   *\n+   * @param keyArgs       the args of the key provided by client.\n+   * @param recursive     For a directory if true all the descendants of a\n+   *                      particular directory are listed\n+   * @param startKey      Key from which listing needs to start. If startKey\n+   *                      exists its status is included in the final list.\n+   * @param numEntries    Number of entries to list from the start key\n+   * @param clientAddress a hint to key manager, order the datanode in returned\n+   *                      pipeline by distance between client and datanode.\n+   * @return list of file status\n+   * @throws IOException if file or bucket or volume does not exist\n+   */\n   List<OzoneFileStatus> listStatus(OmKeyArgs keyArgs, boolean recursive,\n-      String startKey, long numEntries) throws IOException;\n+      String startKey, long numEntries, String clientAddress)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ec0ee3c192b491b1bb43091f59f86e313f18db2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY0NTUyMg==", "bodyText": "Sure, I will make the changes in my next commit.", "url": "https://github.com/apache/ozone/pull/1385#discussion_r483645522", "createdAt": "2020-09-04T14:20:02Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/fs/OzoneManagerFS.java", "diffHunk": "@@ -49,6 +69,21 @@ OpenKeySession createFile(OmKeyArgs args, boolean isOverWrite,\n    */\n   OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress) throws IOException;\n \n+  /**\n+   * List the status for a file or a directory and its contents.\n+   *\n+   * @param keyArgs       the args of the key provided by client.\n+   * @param recursive     For a directory if true all the descendants of a\n+   *                      particular directory are listed\n+   * @param startKey      Key from which listing needs to start. If startKey\n+   *                      exists its status is included in the final list.\n+   * @param numEntries    Number of entries to list from the start key\n+   * @param clientAddress a hint to key manager, order the datanode in returned\n+   *                      pipeline by distance between client and datanode.\n+   * @return list of file status\n+   * @throws IOException if file or bucket or volume does not exist\n+   */\n   List<OzoneFileStatus> listStatus(OmKeyArgs keyArgs, boolean recursive,\n-      String startKey, long numEntries) throws IOException;\n+      String startKey, long numEntries, String clientAddress)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5MTA0Ng=="}, "originalCommit": {"oid": "0ec0ee3c192b491b1bb43091f59f86e313f18db2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyNzg3MA==", "bodyText": "@adoroszlai , Sorry for re-opening the discussion on this comment. On a second thought listStatus is only used in one place in the source code and there won't be any other caller for listStatus() without ClientAddress. So, how about deleting the original method and can add it later if there is any need ?", "url": "https://github.com/apache/ozone/pull/1385#discussion_r483727870", "createdAt": "2020-09-04T16:26:29Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/fs/OzoneManagerFS.java", "diffHunk": "@@ -49,6 +69,21 @@ OpenKeySession createFile(OmKeyArgs args, boolean isOverWrite,\n    */\n   OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress) throws IOException;\n \n+  /**\n+   * List the status for a file or a directory and its contents.\n+   *\n+   * @param keyArgs       the args of the key provided by client.\n+   * @param recursive     For a directory if true all the descendants of a\n+   *                      particular directory are listed\n+   * @param startKey      Key from which listing needs to start. If startKey\n+   *                      exists its status is included in the final list.\n+   * @param numEntries    Number of entries to list from the start key\n+   * @param clientAddress a hint to key manager, order the datanode in returned\n+   *                      pipeline by distance between client and datanode.\n+   * @return list of file status\n+   * @throws IOException if file or bucket or volume does not exist\n+   */\n   List<OzoneFileStatus> listStatus(OmKeyArgs keyArgs, boolean recursive,\n-      String startKey, long numEntries) throws IOException;\n+      String startKey, long numEntries, String clientAddress)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5MTA0Ng=="}, "originalCommit": {"oid": "0ec0ee3c192b491b1bb43091f59f86e313f18db2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUxNzQyNg==", "bodyText": "listStatus is only used in one place in the source code\n\nIt is also used by several tests, which all pass null as address.", "url": "https://github.com/apache/ozone/pull/1385#discussion_r488517426", "createdAt": "2020-09-15T09:22:13Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/fs/OzoneManagerFS.java", "diffHunk": "@@ -49,6 +69,21 @@ OpenKeySession createFile(OmKeyArgs args, boolean isOverWrite,\n    */\n   OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress) throws IOException;\n \n+  /**\n+   * List the status for a file or a directory and its contents.\n+   *\n+   * @param keyArgs       the args of the key provided by client.\n+   * @param recursive     For a directory if true all the descendants of a\n+   *                      particular directory are listed\n+   * @param startKey      Key from which listing needs to start. If startKey\n+   *                      exists its status is included in the final list.\n+   * @param numEntries    Number of entries to list from the start key\n+   * @param clientAddress a hint to key manager, order the datanode in returned\n+   *                      pipeline by distance between client and datanode.\n+   * @return list of file status\n+   * @throws IOException if file or bucket or volume does not exist\n+   */\n   List<OzoneFileStatus> listStatus(OmKeyArgs keyArgs, boolean recursive,\n-      String startKey, long numEntries) throws IOException;\n+      String startKey, long numEntries, String clientAddress)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5MTA0Ng=="}, "originalCommit": {"oid": "0ec0ee3c192b491b1bb43091f59f86e313f18db2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwOTIwNA==", "bodyText": "OK, addressed in my new commit", "url": "https://github.com/apache/ozone/pull/1385#discussion_r489309204", "createdAt": "2020-09-16T09:47:37Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/fs/OzoneManagerFS.java", "diffHunk": "@@ -49,6 +69,21 @@ OpenKeySession createFile(OmKeyArgs args, boolean isOverWrite,\n    */\n   OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress) throws IOException;\n \n+  /**\n+   * List the status for a file or a directory and its contents.\n+   *\n+   * @param keyArgs       the args of the key provided by client.\n+   * @param recursive     For a directory if true all the descendants of a\n+   *                      particular directory are listed\n+   * @param startKey      Key from which listing needs to start. If startKey\n+   *                      exists its status is included in the final list.\n+   * @param numEntries    Number of entries to list from the start key\n+   * @param clientAddress a hint to key manager, order the datanode in returned\n+   *                      pipeline by distance between client and datanode.\n+   * @return list of file status\n+   * @throws IOException if file or bucket or volume does not exist\n+   */\n   List<OzoneFileStatus> listStatus(OmKeyArgs keyArgs, boolean recursive,\n-      String startKey, long numEntries) throws IOException;\n+      String startKey, long numEntries, String clientAddress)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5MTA0Ng=="}, "originalCommit": {"oid": "0ec0ee3c192b491b1bb43091f59f86e313f18db2"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4839, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}