{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MTI2MDcx", "number": 865, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowMzoyN1rOD5Gi7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoxMDozMFrOD5Gtpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjAyNjcxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractGetFileStatus.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowMzoyN1rOGQL1qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNDowNzo1OVrOGQrKdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNDM2Mw==", "bodyText": "Do we need to override teardown and createConfiguration or it is just for the additional LOG?", "url": "https://github.com/apache/ozone/pull/865#discussion_r419624363", "createdAt": "2020-05-04T18:03:27Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractGetFileStatus.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractGetFileStatusTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Ozone contract tests covering getFileStatus.\n+ */\n+public class ITestRootedOzoneContractGetFileStatus\n+    extends AbstractContractGetFileStatusTest {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(ITestRootedOzoneContractGetFileStatus.class);\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void teardown() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEzNzU5MA==", "bodyText": "Copied from o3fs contract test. I believe it is just for the log.\nWill remove this.", "url": "https://github.com/apache/ozone/pull/865#discussion_r420137590", "createdAt": "2020-05-05T14:07:59Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractGetFileStatus.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractGetFileStatusTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Ozone contract tests covering getFileStatus.\n+ */\n+public class ITestRootedOzoneContractGetFileStatus\n+    extends AbstractContractGetFileStatusTest {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(ITestRootedOzoneContractGetFileStatus.class);\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void teardown() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNDM2Mw=="}, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjAzMjc3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowNTowMFrOGQL5Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMDoxNDoyNVrOGQ53Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTMwMg==", "bodyText": "listEmptyRoot should be OK for OFS?", "url": "https://github.com/apache/ozone/pull/865#discussion_r419625302", "createdAt": "2020-05-04T18:05:00Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE0MDg0NQ==", "bodyText": "It fails because the test tries to delete dirs(volumes) at root:\n  @Test\n  public void testListEmptyRootDirectory() throws IOException {\n    skipIfUnsupported(TEST_ROOT_TESTS_ENABLED);\n    FileSystem fs = getFileSystem();\n    Path root = new Path(\"/\");\n    FileStatus[] statuses = fs.listStatus(root);\n    for (FileStatus status : statuses) {\n      ContractTestUtils.assertDeleted(fs, status.getPath(), true);\n    }\n  public static void assertDeleted(FileSystem fs,\n      Path file,\n      boolean recursive,\n      boolean allowRootOperations) throws IOException {\n    rejectRootOperation(file, allowRootOperations);\n    assertPathExists(fs, \"about to be deleted file\", file);\n    boolean deleted = fs.delete(file, recursive);", "url": "https://github.com/apache/ozone/pull/865#discussion_r420140845", "createdAt": "2020-05-05T14:12:16Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTMwMg=="}, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNTQ4Nw==", "bodyText": "are you seeing the root is not empty even though the test claim to list empty root dir?", "url": "https://github.com/apache/ozone/pull/865#discussion_r420335487", "createdAt": "2020-05-05T18:56:05Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTMwMg=="}, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3ODM3NA==", "bodyText": "Yes. I see testvol1, which is specified in RootedOzoneContract#getTestPath.", "url": "https://github.com/apache/ozone/pull/865#discussion_r420378374", "createdAt": "2020-05-05T20:14:25Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTMwMg=="}, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjAzNDQzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowNToyN1rOGQL6aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMDoxNToxOFrOGQ55Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTU3Nw==", "bodyText": "mkdirDepth1 should be OK for admin? Can we add some configuration to allow this?", "url": "https://github.com/apache/ozone/pull/865#discussion_r419625577", "createdAt": "2020-05-04T18:05:27Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testMkDirDepth1() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE0MTg3NQ==", "bodyText": "It failed during clean up (assertDeleted):\n  @Test\n  public void testMkDirDepth1() throws Throwable {\n    FileSystem fs = getFileSystem();\n    Path dir = new Path(\"/testmkdirdepth1\");\n    assertPathDoesNotExist(\"directory already exists\", dir);\n    fs.mkdirs(dir);\n    assertIsDirectory(dir);\n    assertPathExists(\"directory already exists\", dir);\n    assertDeleted(dir, true);\n  }", "url": "https://github.com/apache/ozone/pull/865#discussion_r420141875", "createdAt": "2020-05-05T14:13:41Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testMkDirDepth1() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTU3Nw=="}, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNTk5MA==", "bodyText": "this should be like create and delete an empty volume? why do we fail here?", "url": "https://github.com/apache/ozone/pull/865#discussion_r420335990", "createdAt": "2020-05-05T18:57:00Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testMkDirDepth1() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTU3Nw=="}, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3ODkyNw==", "bodyText": "Because OFS doesn't support deleting volumes (or buckets) at the moment. Even if they are empty.", "url": "https://github.com/apache/ozone/pull/865#discussion_r420378927", "createdAt": "2020-05-05T20:15:18Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testMkDirDepth1() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTU3Nw=="}, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjA1NDE1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/RootedOzoneContract.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoxMDozMFrOGQMGSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNDoxNToxMlrOGQrfxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyODYxNg==", "bodyText": "Is it possible to add contract test in the context of HA setup as well as the non-HA?", "url": "https://github.com/apache/ozone/pull/865#discussion_r419628616", "createdAt": "2020-05-04T18:10:30Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/RootedOzoneContract.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+import org.apache.hadoop.hdds.conf.DatanodeRatisServerConfig;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.ratis.RatisHelper;\n+import org.apache.hadoop.hdds.scm.ScmConfigKeys;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.om.OMConfigKeys;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * The contract of Rooted Ozone FileSystem (OFS).\n+ */\n+class RootedOzoneContract extends AbstractFSContract {\n+\n+  private static MiniOzoneCluster cluster;\n+  private static final String CONTRACT_XML = \"contract/ozone.xml\";\n+\n+  RootedOzoneContract(Configuration conf) {\n+    super(conf);\n+    //insert the base features\n+    addConfResource(CONTRACT_XML);\n+  }\n+\n+  @Override\n+  public String getScheme() {\n+    return OzoneConsts.OZONE_OFS_URI_SCHEME;\n+  }\n+\n+  @Override\n+  public Path getTestPath() {\n+    return new Path(\"/testvol1/testbucket1/test\");\n+  }\n+\n+  public static void createCluster() throws IOException {\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_SERVER_PREFIX_KEY + \".\" +\n+                    DatanodeRatisServerConfig.RATIS_SERVER_REQUEST_TIMEOUT_KEY,\n+            3, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_SERVER_PREFIX_KEY + \".\" +\n+                    DatanodeRatisServerConfig.\n+                            RATIS_SERVER_WATCH_REQUEST_TIMEOUT_KEY,\n+            10, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_CLIENT_PREFIX_KEY + \".\" +\n+                    \"rpc.request.timeout\",\n+            3, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_CLIENT_PREFIX_KEY + \".\" +\n+                    \"watch.request.timeout\",\n+            10, TimeUnit.SECONDS);\n+    conf.addResource(CONTRACT_XML);\n+\n+    cluster = MiniOzoneCluster.newBuilder(conf).setNumDatanodes(5).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE0MzA0Nw==", "bodyText": "I think we need another set of classes to do this but initialize with MiniOzoneHAClusterImpl instead.", "url": "https://github.com/apache/ozone/pull/865#discussion_r420143047", "createdAt": "2020-05-05T14:15:12Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/RootedOzoneContract.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+import org.apache.hadoop.hdds.conf.DatanodeRatisServerConfig;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.ratis.RatisHelper;\n+import org.apache.hadoop.hdds.scm.ScmConfigKeys;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.om.OMConfigKeys;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * The contract of Rooted Ozone FileSystem (OFS).\n+ */\n+class RootedOzoneContract extends AbstractFSContract {\n+\n+  private static MiniOzoneCluster cluster;\n+  private static final String CONTRACT_XML = \"contract/ozone.xml\";\n+\n+  RootedOzoneContract(Configuration conf) {\n+    super(conf);\n+    //insert the base features\n+    addConfResource(CONTRACT_XML);\n+  }\n+\n+  @Override\n+  public String getScheme() {\n+    return OzoneConsts.OZONE_OFS_URI_SCHEME;\n+  }\n+\n+  @Override\n+  public Path getTestPath() {\n+    return new Path(\"/testvol1/testbucket1/test\");\n+  }\n+\n+  public static void createCluster() throws IOException {\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_SERVER_PREFIX_KEY + \".\" +\n+                    DatanodeRatisServerConfig.RATIS_SERVER_REQUEST_TIMEOUT_KEY,\n+            3, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_SERVER_PREFIX_KEY + \".\" +\n+                    DatanodeRatisServerConfig.\n+                            RATIS_SERVER_WATCH_REQUEST_TIMEOUT_KEY,\n+            10, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_CLIENT_PREFIX_KEY + \".\" +\n+                    \"rpc.request.timeout\",\n+            3, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_CLIENT_PREFIX_KEY + \".\" +\n+                    \"watch.request.timeout\",\n+            10, TimeUnit.SECONDS);\n+    conf.addResource(CONTRACT_XML);\n+\n+    cluster = MiniOzoneCluster.newBuilder(conf).setNumDatanodes(5).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyODYxNg=="}, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4428, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}