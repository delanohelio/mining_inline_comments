{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MTIxMTQx", "number": 1542, "title": "HDDS-4417. Simplify Ozone client code with configuration object", "bodyText": "What changes were proposed in this pull request?\nIn HDDS-4185 we agreed  to introduce a new configuration for the Ozone client to adjust the behavior of incremental byte buffer.\nWhen I started to add it I realized the code is already very complex as all the required configuration values are propagated manually to the Key/Block/ChunkOutputstream as induvidual constructor parameters.\nIn this patch I simplify the structure with using only one POJO with configuration annotations.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4417\nHow was this patch tested?\nWith full CI on my fork.", "createdAt": "2020-11-02T15:05:44Z", "url": "https://github.com/apache/ozone/pull/1542", "merged": true, "mergeCommit": {"oid": "fdbd5da0d02e6447c91d34da7bb1809356fec71e"}, "closed": true, "closedAt": "2020-11-12T06:21:37Z", "author": {"login": "elek"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXRyyOgH2gAyNTE0MTIxMTQxOjU1ZGVmZjM3NjI2MGNhNTQ5NGFkZDc5Yjc1YzFkNjA1NGI3OGRiNmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbtDCPAFqTUyODc4NTQ4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "55deff376260ca5494add79b75c1d6054b78db6a", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/55deff376260ca5494add79b75c1d6054b78db6a", "committedDate": "2020-10-29T13:01:21Z", "message": "ozone client config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e28e737770ea1baf49ac1f45989be150a77d0bd9", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/e28e737770ea1baf49ac1f45989be150a77d0bd9", "committedDate": "2020-10-29T13:01:25Z", "message": "fix config handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f7808f2c4efe0817adaa9eaf88a0f203a92aab3", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/8f7808f2c4efe0817adaa9eaf88a0f203a92aab3", "committedDate": "2020-10-30T16:05:25Z", "message": "end"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4dd5632d8196eaefac66009b9c56a4109eccce3", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/b4dd5632d8196eaefac66009b9c56a4109eccce3", "committedDate": "2020-10-30T16:16:13Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "911706cfb7504a7fab98d4f5e1a202ae813dca0c", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/911706cfb7504a7fab98d4f5e1a202ae813dca0c", "committedDate": "2020-10-30T16:38:16Z", "message": "checkstyle fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2b553ba79dd894a17ef5e13b529fbbd3f6f5a43", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/d2b553ba79dd894a17ef5e13b529fbbd3f6f5a43", "committedDate": "2020-11-02T08:42:13Z", "message": "retrigger ci"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a755461af92abc89499920b3cd0d89f7e2a6176", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/2a755461af92abc89499920b3cd0d89f7e2a6176", "committedDate": "2020-11-02T11:24:03Z", "message": "finish block output stream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13f33106882691ecee99798b38f41c40b9335022", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/13f33106882691ecee99798b38f41c40b9335022", "committedDate": "2020-11-02T13:40:08Z", "message": "fix unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44a3aa67d87eeada76740a51264f90598a93ec66", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/44a3aa67d87eeada76740a51264f90598a93ec66", "committedDate": "2020-11-02T15:04:14Z", "message": "HDDS-4417. Simplify Ozone client code with configuration object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83a4fe071b1de0c71a259de81b6b62425ba31a4e", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/83a4fe071b1de0c71a259de81b6b62425ba31a4e", "committedDate": "2020-11-02T15:34:08Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-4417"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea7064c16d5f9e7440728fdee6f49bc5be8f8b81", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/ea7064c16d5f9e7440728fdee6f49bc5be8f8b81", "committedDate": "2020-11-11T09:46:26Z", "message": "Restore lines disappeared during the merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eef29d22f94dd1b7236c86bb4c3a64a4d9c38015", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/eef29d22f94dd1b7236c86bb4c3a64a4d9c38015", "committedDate": "2020-11-11T09:50:25Z", "message": "fix findbugs problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b7018eb8d1d7b2b00f8880a36b0490bdc312433", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/3b7018eb8d1d7b2b00f8880a36b0490bdc312433", "committedDate": "2020-11-11T10:36:13Z", "message": "fix copy paste typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76d62e56eb4a3bb08c0b26a4e68530109fc18dd3", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/76d62e56eb4a3bb08c0b26a4e68530109fc18dd3", "committedDate": "2020-11-11T13:48:52Z", "message": "retrigger build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4Nzc4MjEy", "url": "https://github.com/apache/ozone/pull/1542#pullrequestreview-528778212", "createdAt": "2020-11-12T06:21:21Z", "commit": {"oid": "76d62e56eb4a3bb08c0b26a4e68530109fc18dd3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4Nzg1NDgy", "url": "https://github.com/apache/ozone/pull/1542#pullrequestreview-528785482", "createdAt": "2020-11-12T06:39:07Z", "commit": {"oid": "76d62e56eb4a3bb08c0b26a4e68530109fc18dd3"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNjozOTowN1rOHxsaow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNjo1OTozMVrOHxs2XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2OTk4Nw==", "bodyText": "Currently validate() is unused.  I think it should have @PostConstruct annotation.", "url": "https://github.com/apache/ozone/pull/1542#discussion_r521869987", "createdAt": "2020-11-12T06:39:07Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/client/src/main/java/org/apache/hadoop/hdds/scm/OzoneClientConfig.java", "diffHunk": "@@ -0,0 +1,213 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.\u2002\u2002See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.\u2002\u2002The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.\u2002\u2002You may obtain a copy of the License at\n+ *\n+ * \u2002\u2002\u2002\u2002 http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.scm;\n+\n+import org.apache.hadoop.hdds.conf.Config;\n+import org.apache.hadoop.hdds.conf.ConfigGroup;\n+import org.apache.hadoop.hdds.conf.ConfigTag;\n+import org.apache.hadoop.hdds.conf.ConfigType;\n+import org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos.ChecksumType;\n+import org.apache.hadoop.ozone.OzoneConfigKeys;\n+\n+import com.google.common.base.Preconditions;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Configuration values for Ozone Client.\n+ */\n+@ConfigGroup(prefix = \"ozone.client\")\n+public class OzoneClientConfig {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(OzoneClientConfig.class);\n+\n+  @Config(key = \"stream.buffer.flush.size\",\n+      defaultValue = \"16MB\",\n+      type = ConfigType.SIZE,\n+      description = \"Size which determines at what buffer position a partial \"\n+          + \"flush will be initiated during write. It should be a multiple of\"\n+          + \" ozone.client.stream.buffer.size\",\n+      tags = ConfigTag.CLIENT)\n+  private long streamBufferFlushSize = 16 * 1024 * 1024;\n+\n+  @Config(key = \"stream.buffer.size\",\n+      defaultValue = \"4MB\",\n+      type = ConfigType.SIZE,\n+      description = \"The size of chunks the client will send to the server\",\n+      tags = ConfigTag.CLIENT)\n+  private int streamBufferSize = 4 * 1024 * 1024;\n+\n+  @Config(key = \"stream.buffer.flush.delay\",\n+      defaultValue = \"true\",\n+      description = \"Default true, when call flush() and determine whether \"\n+          + \"the data in the current buffer is greater than ozone.client\"\n+          + \".stream.buffer.size, if greater than then send buffer to the \"\n+          + \"datanode. You can  turn this off by setting this configuration \"\n+          + \"to false.\", tags = ConfigTag.CLIENT)\n+  private boolean streamBufferFlushDelay = true;\n+\n+  @Config(key = \"stream.buffer.max.size\",\n+      defaultValue = \"32MB\",\n+      type = ConfigType.SIZE,\n+      description = \"Size which determines at what buffer position write call\"\n+          + \" be blocked till acknowledgement of the first partial flush \"\n+          + \"happens by all servers.\",\n+      tags = ConfigTag.CLIENT)\n+  private long streamBufferMaxSize = 32 * 1024 * 1024;\n+\n+  @Config(key = \"max.retries\",\n+      defaultValue = \"5\",\n+      description = \"Maximum number of retries by Ozone Client on \"\n+          + \"encountering exception while writing a key\",\n+      tags = ConfigTag.CLIENT)\n+  private int maxRetryCount = 5;\n+\n+  @Config(key = \"retry.interval\",\n+      defaultValue = \"0\",\n+      description =\n+          \"Indicates the time duration a client will wait before retrying a \"\n+              + \"write key request on encountering an exception. By default \"\n+              + \"there is no wait\",\n+      tags = ConfigTag.CLIENT)\n+  private int retryInterval = 0;\n+\n+  @Config(key = \"checksum.type\",\n+      defaultValue = \"CRC32\",\n+      description = \"The checksum type [NONE/ CRC32/ CRC32C/ SHA256/ MD5] \"\n+          + \"determines which algorithm would be used to compute checksum for \"\n+          + \"chunk data. Default checksum type is CRC32.\",\n+      tags = ConfigTag.CLIENT)\n+  private String checksumType = ChecksumType.CRC32.name();\n+\n+  @Config(key = \"bytes.per.checksum\",\n+      defaultValue = \"1MB\",\n+      type = ConfigType.SIZE,\n+      description = \"Checksum will be computed for every bytes per checksum \"\n+          + \"number of bytes and stored sequentially. The minimum value for \"\n+          + \"this config is 256KB.\",\n+      tags = ConfigTag.CLIENT)\n+  private int bytesPerChecksum = 1024 * 1024;\n+\n+  @Config(key = \"verify.checksum\",\n+      defaultValue = \"true\",\n+      description = \"Ozone client to verify checksum of the checksum \"\n+          + \"blocksize data.\",\n+      tags = ConfigTag.CLIENT)\n+  private boolean checksumVerify = true;\n+\n+  public OzoneClientConfig() {\n+  }\n+\n+  private void validate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d62e56eb4a3bb08c0b26a4e68530109fc18dd3"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg3MjYxMg==", "bodyText": "This was removed on master in HDDS-4285.  I don't think it should have been restored in the merge.", "url": "https://github.com/apache/ozone/pull/1542#discussion_r521872612", "createdAt": "2020-11-12T06:46:40Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/BlockOutputStreamEntry.java", "diffHunk": "@@ -108,11 +96,12 @@ long getRemaining() {\n    */\n   private void checkStream() throws IOException {\n     if (this.outputStream == null) {\n+      if (getToken() != null) {\n+        UserGroupInformation.getCurrentUser().addToken(getToken());\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d62e56eb4a3bb08c0b26a4e68530109fc18dd3"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg3MzYwMg==", "bodyText": "This condition is not the same as previously.", "url": "https://github.com/apache/ozone/pull/1542#discussion_r521873602", "createdAt": "2020-11-12T06:49:34Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -715,7 +666,7 @@ public OzoneOutputStream createKey(\n       throws IOException {\n     verifyVolumeName(volumeName);\n     verifyBucketName(bucketName);\n-    if(checkKeyNameEnabled) {\n+    if (clientConfig.isStreamBufferFlushDelay()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d62e56eb4a3bb08c0b26a4e68530109fc18dd3"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg3NTgxMQ==", "bodyText": "Nit: two blocks of OzoneClientConfig can be merged:\n    OzoneClientConfig clientConfig = conf.getObject(OzoneClientConfig.class);\n    clientConfig.setChecksumType(ChecksumType.NONE);\n    clientConfig.setStreamBufferFlushDelay(false);\n    conf.setFromObject(clientConfig);", "url": "https://github.com/apache/ozone/pull/1542#discussion_r521875811", "createdAt": "2020-11-12T06:56:01Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestBlockOutputStream.java", "diffHunk": "@@ -85,13 +86,20 @@ public static void init() throws Exception {\n     flushSize = 2 * chunkSize;\n     maxFlushSize = 2 * flushSize;\n     blockSize = 2 * maxFlushSize;\n+    OzoneClientConfig config = new OzoneClientConfig();\n+    config.setChecksumType(ChecksumType.NONE);\n+    conf.setFromObject(config);\n+\n     conf.setTimeDuration(HDDS_SCM_WATCHER_TIMEOUT, 1000, TimeUnit.MILLISECONDS);\n     conf.setTimeDuration(OZONE_SCM_STALENODE_INTERVAL, 3, TimeUnit.SECONDS);\n-    conf.set(OzoneConfigKeys.OZONE_CLIENT_CHECKSUM_TYPE, \"NONE\");\n     conf.setQuietMode(false);\n     conf.setStorageSize(OzoneConfigKeys.OZONE_SCM_BLOCK_SIZE, 4,\n         StorageUnit.MB);\n-    conf.setBoolean(OZONE_CLIENT_STREAM_BUFFER_FLUSH_DELAY, false);\n+\n+    OzoneClientConfig clientConfig = conf.getObject(OzoneClientConfig.class);\n+    clientConfig.setStreamBufferFlushDelay(false);\n+    conf.setFromObject(clientConfig);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d62e56eb4a3bb08c0b26a4e68530109fc18dd3"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg3NzA4NQ==", "bodyText": "Nit: aren't defaults set automatically without this?", "url": "https://github.com/apache/ozone/pull/1542#discussion_r521877085", "createdAt": "2020-11-12T06:59:31Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClient.java", "diffHunk": "@@ -49,6 +51,7 @@\n   @BeforeClass\n   public static void init() throws Exception {\n     OzoneConfiguration conf = new OzoneConfiguration();\n+    conf.setFromObject(new OzoneClientConfig());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d62e56eb4a3bb08c0b26a4e68530109fc18dd3"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2218, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}