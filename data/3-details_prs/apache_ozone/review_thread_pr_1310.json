{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NTUwOTk1", "number": 1310, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMzozNzozMFrOEXNrTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMjozN1rOEXOr2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNzc2NzgzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/ContentGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMzozNzozMFrOG-4JuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzo1NDo0OVrOHA9lcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU4NDg4OA==", "bodyText": "outputStream.write(buffer, i, results in IndexOutOfBoundsException if bufferSize < keySize.\nI think it should be:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (int i = 0; i < nrRemaining; i += copyBufferSize) {\n          \n          \n            \n                      outputStream.write(buffer, i,\n          \n          \n            \n                          Math.min(copyBufferSize, (int) (nrRemaining - i)));\n          \n          \n            \n                    for (int i = 0; i < curSize; i += copyBufferSize) {\n          \n          \n            \n                      outputStream.write(buffer, i,\n          \n          \n            \n                          Math.min(copyBufferSize, curSize - i));\n          \n      \n    \n    \n  \n\nCan you please add a test case in TestContentGenerator for this?", "url": "https://github.com/apache/ozone/pull/1310#discussion_r468584888", "createdAt": "2020-08-11T13:37:30Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/ContentGenerator.java", "diffHunk": "@@ -56,7 +64,20 @@ public void write(OutputStream outputStream) throws IOException {\n     for (long nrRemaining = keySize;\n          nrRemaining > 0; nrRemaining -= bufferSize) {\n       int curSize = (int) Math.min(bufferSize, nrRemaining);\n-      outputStream.write(buffer, 0, curSize);\n+      if (copyBufferSize == 1) {\n+        for (int i = 0; i < curSize; i++) {\n+          outputStream.write(buffer[i]);\n+        }\n+      } else {\n+        for (int i = 0; i < nrRemaining; i += copyBufferSize) {\n+          outputStream.write(buffer, i,\n+              Math.min(copyBufferSize, (int) (nrRemaining - i)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc8939517096f264ce5f64b5e79a2659ff7339ff"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc3MTA1OQ==", "bodyText": "Thanks the suggestions. I also created a unit test when I saw that you already suggested one, slightly different so I kept both of them ;-)", "url": "https://github.com/apache/ozone/pull/1310#discussion_r470771059", "createdAt": "2020-08-14T17:54:49Z", "author": {"login": "elek"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/ContentGenerator.java", "diffHunk": "@@ -56,7 +64,20 @@ public void write(OutputStream outputStream) throws IOException {\n     for (long nrRemaining = keySize;\n          nrRemaining > 0; nrRemaining -= bufferSize) {\n       int curSize = (int) Math.min(bufferSize, nrRemaining);\n-      outputStream.write(buffer, 0, curSize);\n+      if (copyBufferSize == 1) {\n+        for (int i = 0; i < curSize; i++) {\n+          outputStream.write(buffer[i]);\n+        }\n+      } else {\n+        for (int i = 0; i < nrRemaining; i += copyBufferSize) {\n+          outputStream.write(buffer, i,\n+              Math.min(copyBufferSize, (int) (nrRemaining - i)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU4NDg4OA=="}, "originalCommit": {"oid": "cc8939517096f264ce5f64b5e79a2659ff7339ff"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNzkyMTE3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/test/java/org/apache/hadoop/ozone/freon/TestContentGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMDowN1rOG-5o3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMDowN1rOG-5o3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYwOTI0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            }\n          \n          \n            \n            \n          \n          \n            \n              @Test\n          \n          \n            \n              public void writeWithDistinctSizes() throws IOException {\n          \n          \n            \n                ContentGenerator generator = new ContentGenerator(20, 8, 3);\n          \n          \n            \n                ByteArrayOutputStream output = new ByteArrayOutputStream();\n          \n          \n            \n            \n          \n          \n            \n                generator.write(output);\n          \n          \n            \n            \n          \n          \n            \n                byte[] expected = new byte[20];\n          \n          \n            \n                byte[] buffer = generator.getBuffer();\n          \n          \n            \n                System.arraycopy(buffer, 0, expected, 0, buffer.length);\n          \n          \n            \n                System.arraycopy(buffer, 0, expected, 8, buffer.length);\n          \n          \n            \n                System.arraycopy(buffer, 0, expected, 16, 4);\n          \n          \n            \n                Assert.assertArrayEquals(expected, output.toByteArray());\n          \n          \n            \n              }\n          \n          \n            \n            }", "url": "https://github.com/apache/ozone/pull/1310#discussion_r468609247", "createdAt": "2020-08-11T14:10:07Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/test/java/org/apache/hadoop/ozone/freon/TestContentGenerator.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.apache.hadoop.ozone.freon;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Tests for the ContentGenerator class of Freon.\n+ */\n+public class TestContentGenerator {\n+\n+  @Test\n+  public void writeWrite() throws IOException {\n+    ContentGenerator generator = new ContentGenerator(1024, 1024);\n+    ByteArrayOutputStream output = new ByteArrayOutputStream();\n+\n+    generator.write(output);\n+    Assert.assertArrayEquals(generator.getBuffer(), output.toByteArray());\n+  }\n+\n+  @Test\n+  public void writeWithByteLevelWrite() throws IOException {\n+    ContentGenerator generator = new ContentGenerator(1024, 1024, 1);\n+    ByteArrayOutputStream output = new ByteArrayOutputStream();\n+\n+    generator.write(output);\n+    Assert.assertArrayEquals(generator.getBuffer(), output.toByteArray());\n+  }\n+\n+  @Test\n+  public void writeWithSmallBuffer() throws IOException {\n+    ContentGenerator generator = new ContentGenerator(1024, 1024, 10);\n+    ByteArrayOutputStream output = new ByteArrayOutputStream();\n+\n+    generator.write(output);\n+    Assert.assertArrayEquals(generator.getBuffer(), output.toByteArray());\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc8939517096f264ce5f64b5e79a2659ff7339ff"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNzkzMzA3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/ContentGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMjozN1rOG-5wLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxMjozN1rOG-5wLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYxMTExOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Number of bytes to write in one call. Should be less than the bufferSize.\n          \n          \n            \n               * Number of bytes to write in one call. Should be no larger than the bufferSize.", "url": "https://github.com/apache/ozone/pull/1310#discussion_r468611118", "createdAt": "2020-08-11T14:12:37Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/ContentGenerator.java", "diffHunk": "@@ -38,15 +39,23 @@\n    */\n   private int bufferSize;\n \n+  /**\n+   * Number of bytes to write in one call. Should be less than the bufferSize.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d834563150f40cc50e266da063e371e27fa980"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3876, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}