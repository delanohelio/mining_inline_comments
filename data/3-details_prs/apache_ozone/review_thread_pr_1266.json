{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MzY5MzIz", "number": 1266, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo0MToyNFrOETm2Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo0MToyNFrOETm2Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTk0ODk0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/freon/TestHadoopNestedDirGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo0MToyNFrOG5b0mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDozMTowM1rOG5dbSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3Nzg1MQ==", "bodyText": "Thanks @aryangupta1998 . Why do the no of datanodes matter here? can you explain?", "url": "https://github.com/apache/ozone/pull/1266#discussion_r462877851", "createdAt": "2020-07-30T09:41:24Z", "author": {"login": "bshashikant"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/freon/TestHadoopNestedDirGenerator.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.hadoop.ozone.freon;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.hadoop.fs.FileStatus;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.client.ObjectStore;\n+import org.apache.hadoop.ozone.client.OzoneClientFactory;\n+import org.apache.hadoop.ozone.client.OzoneVolume;\n+import org.apache.hadoop.test.GenericTestUtils;\n+import org.apache.ratis.server.impl.RaftServerImpl;\n+import org.apache.ratis.server.raftlog.RaftLog;\n+import java.util.LinkedList;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.slf4j.event.Level;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.net.URI;\n+\n+/**\n+ * Test for HadoopNestedDirGenerator.\n+ */\n+\n+public class TestHadoopNestedDirGenerator {\n+\n+  private String path;\n+  private OzoneConfiguration conf = null;\n+  private MiniOzoneCluster cluster = null;\n+  private ObjectStore store = null;\n+  private static final Logger LOG =\n+          LoggerFactory.getLogger(TestHadoopNestedDirGenerator.class);\n+  @Before\n+    public void setup() {\n+    path = GenericTestUtils\n+                .getTempPath(TestOzoneClientKeyGenerator.class.getSimpleName());\n+    GenericTestUtils.setLogLevel(RaftLog.LOG, Level.DEBUG);\n+    GenericTestUtils.setLogLevel(RaftServerImpl.LOG, Level.DEBUG);\n+    File baseDir = new File(path);\n+    baseDir.mkdirs();\n+  }\n+\n+    /**\n+     * Shutdown MiniDFSCluster.\n+     */\n+\n+  private void shutdown() throws IOException {\n+    if (cluster != null) {\n+      cluster.shutdown();\n+      FileUtils.deleteDirectory(new File(path));\n+    }\n+  }\n+\n+    /**\n+     * Create a MiniDFSCluster for testing.\n+     *\n+     * @throws IOException\n+     */\n+\n+    /**\n+     * Below we have 5 datanodes because only 5 tests are activated\n+     * As you need more tests increase the datanodes accordingly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0430d2fae32f55631f1ad391d0b0660fdbe8fca"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkwNDEzOQ==", "bodyText": "Thanks @bshashikant. Thanks for pointing out and sorry for the mistake. I have removed this javadoc.", "url": "https://github.com/apache/ozone/pull/1266#discussion_r462904139", "createdAt": "2020-07-30T10:31:03Z", "author": {"login": "aryangupta1998"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/freon/TestHadoopNestedDirGenerator.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.hadoop.ozone.freon;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.hadoop.fs.FileStatus;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.client.ObjectStore;\n+import org.apache.hadoop.ozone.client.OzoneClientFactory;\n+import org.apache.hadoop.ozone.client.OzoneVolume;\n+import org.apache.hadoop.test.GenericTestUtils;\n+import org.apache.ratis.server.impl.RaftServerImpl;\n+import org.apache.ratis.server.raftlog.RaftLog;\n+import java.util.LinkedList;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.slf4j.event.Level;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.net.URI;\n+\n+/**\n+ * Test for HadoopNestedDirGenerator.\n+ */\n+\n+public class TestHadoopNestedDirGenerator {\n+\n+  private String path;\n+  private OzoneConfiguration conf = null;\n+  private MiniOzoneCluster cluster = null;\n+  private ObjectStore store = null;\n+  private static final Logger LOG =\n+          LoggerFactory.getLogger(TestHadoopNestedDirGenerator.class);\n+  @Before\n+    public void setup() {\n+    path = GenericTestUtils\n+                .getTempPath(TestOzoneClientKeyGenerator.class.getSimpleName());\n+    GenericTestUtils.setLogLevel(RaftLog.LOG, Level.DEBUG);\n+    GenericTestUtils.setLogLevel(RaftServerImpl.LOG, Level.DEBUG);\n+    File baseDir = new File(path);\n+    baseDir.mkdirs();\n+  }\n+\n+    /**\n+     * Shutdown MiniDFSCluster.\n+     */\n+\n+  private void shutdown() throws IOException {\n+    if (cluster != null) {\n+      cluster.shutdown();\n+      FileUtils.deleteDirectory(new File(path));\n+    }\n+  }\n+\n+    /**\n+     * Create a MiniDFSCluster for testing.\n+     *\n+     * @throws IOException\n+     */\n+\n+    /**\n+     * Below we have 5 datanodes because only 5 tests are activated\n+     * As you need more tests increase the datanodes accordingly.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3Nzg1MQ=="}, "originalCommit": {"oid": "a0430d2fae32f55631f1ad391d0b0660fdbe8fca"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4055, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}