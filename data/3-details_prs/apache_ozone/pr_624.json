{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNTEzODc5", "number": 624, "title": "HDDS-3110. Fix race condition in Recon's container and pipeline handling.", "bodyText": "What changes were proposed in this pull request?\n\nBoth the Incremental container report handler and the regular container report handler add new containers from SCM whenever they see a new container. This test and add step must be synchronized between the 2 handlers to avoid any inconsistent metadata state.\nNodeStateMap in allow does not addition of a single container to the Map of Node -> Set of Containers since it instantiates with a Collections.emptySet(), and then relies on a map.put() to update the value. Changing this to a \"new HashSet\" allows addition of a container one by one which is possible in Recon.\nImprove logging in Recon Container Manager when it receives a container report from a node before receiving the pipeline report for a newly created pipeline.\n\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3110\nHow was this patch tested?\nUnit, integration and docker based testing.", "createdAt": "2020-03-02T17:32:48Z", "url": "https://github.com/apache/ozone/pull/624", "merged": true, "mergeCommit": {"oid": "e271250eeaf1f85875629049ab57f31a159850c7"}, "closed": true, "closedAt": "2020-03-03T17:24:34Z", "author": {"login": "avijayanhwx"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcI17sngH2gAyMzgyNTEzODc5OmUxMmFmMDkzOWY3ZTRhM2M1ZTM4OGU2MTU3NDIzMThkODg2ZTk2MmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJ9AwRAFqTM2Nzc0Mzk0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e12af0939f7e4a3c5e388e615742318d886e962b", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/e12af0939f7e4a3c5e388e615742318d886e962b", "committedDate": "2020-02-28T20:27:39Z", "message": "HDDS-3110. Fix race condition in Recon's container and pipeline handling."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40212dfb62477ff4f307061f124815599ccfd4b5", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/40212dfb62477ff4f307061f124815599ccfd4b5", "committedDate": "2020-03-02T17:21:41Z", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-3110-master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDI5Njg0", "url": "https://github.com/apache/ozone/pull/624#pullrequestreview-367429684", "createdAt": "2020-03-02T18:34:42Z", "commit": {"oid": "40212dfb62477ff4f307061f124815599ccfd4b5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1dd1f8a1d4ef451d4630ac5520be4c6b3203a23", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/e1dd1f8a1d4ef451d4630ac5520be4c6b3203a23", "committedDate": "2020-03-02T19:40:46Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd0744bef2fad20453fb0feff633563e30cadb97", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/bd0744bef2fad20453fb0feff633563e30cadb97", "committedDate": "2020-03-03T01:11:02Z", "message": "Remove duplicate code in PipelineReportHandler."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzQzOTQw", "url": "https://github.com/apache/ozone/pull/624#pullrequestreview-367743940", "createdAt": "2020-03-03T07:13:27Z", "commit": {"oid": "bd0744bef2fad20453fb0feff633563e30cadb97"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoxMzoyN1rOFw6b5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoxNjowOVrOFw6fIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzMzM4Mw==", "bodyText": "Looks like this block could be shared between the two container report handlers.", "url": "https://github.com/apache/ozone/pull/624#discussion_r386833383", "createdAt": "2020-03-03T07:13:27Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconIncrementalContainerReportHandler.java", "diffHunk": "@@ -70,19 +70,22 @@ public void onMessage(final IncrementalContainerReportFromDatanode report,\n         final DatanodeDetails dd = report.getDatanodeDetails();\n         final ContainerID id = ContainerID.valueof(\n             replicaProto.getContainerID());\n-        if (!getContainerManager().exists(id)) {\n-          LOG.info(\"New container {} got from {}.\", id,\n-              report.getDatanodeDetails());\n-          try {\n-            ContainerWithPipeline containerWithPipeline =\n-                scmClient.getContainerWithPipeline(id.getId());\n-            LOG.info(\"Verified new container from SCM {} \",\n-                containerWithPipeline.getContainerInfo().containerID());\n-            containerManager.addNewContainer(id.getId(), containerWithPipeline);\n-          } catch (IOException ioEx) {\n-            LOG.error(\"Exception while getting new container info from SCM\",\n-                ioEx);\n-            return;\n+        synchronized (containerManager) {\n+          if (!containerManager.exists(id)) {\n+            LOG.info(\"New container {} got from {}.\", id,\n+                report.getDatanodeDetails());\n+            try {\n+              ContainerWithPipeline containerWithPipeline =\n+                  scmClient.getContainerWithPipeline(id.getId());\n+              LOG.info(\"Verified new container from SCM {} \",\n+                  containerWithPipeline.getContainerInfo().containerID());\n+              containerManager\n+                  .addNewContainer(id.getId(), containerWithPipeline);\n+            } catch (IOException ioEx) {\n+              LOG.error(\"Exception while getting new container info from SCM\",\n+                  ioEx);\n+              return;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd0744bef2fad20453fb0feff633563e30cadb97"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNDIxMQ==", "bodyText": "Might this be improved in a followup to avoid RPC while holding the lock?", "url": "https://github.com/apache/ozone/pull/624#discussion_r386834211", "createdAt": "2020-03-03T07:16:09Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconContainerReportHandler.java", "diffHunk": "@@ -63,19 +63,21 @@ public void onMessage(final ContainerReportFromDatanode reportFromDatanode,\n     for (ContainerReplicaProto containerReplicaProto : reportsList) {\n       final ContainerID id = ContainerID.valueof(\n           containerReplicaProto.getContainerID());\n-      if (!getContainerManager().exists(id)) {\n-        LOG.info(\"New container {} got from {}.\", id,\n-            reportFromDatanode.getDatanodeDetails());\n-        try {\n-          ContainerWithPipeline containerWithPipeline =\n-              scmClient.getContainerWithPipeline(id.getId());\n-          LOG.debug(\"Verified new container from SCM {} \",\n-              containerWithPipeline.getContainerInfo().containerID());\n-          containerManager.addNewContainer(id.getId(), containerWithPipeline);\n-        } catch (IOException ioEx) {\n-          LOG.error(\"Exception while getting new container info from SCM\",\n-              ioEx);\n-          return;\n+      synchronized (containerManager) {\n+        if (!containerManager.exists(id)) {\n+          LOG.info(\"New container {} got from {}.\", id,\n+              reportFromDatanode.getDatanodeDetails());\n+          try {\n+            ContainerWithPipeline containerWithPipeline =\n+                scmClient.getContainerWithPipeline(id.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd0744bef2fad20453fb0feff633563e30cadb97"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3665, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}