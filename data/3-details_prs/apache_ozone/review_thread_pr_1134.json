{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNzM5OTM3", "number": 1134, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMTowMjoxNlrOEJ1GBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMTowMjoxNlrOEJ1GBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzQyNTM0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMTowMjoxNlrOGqiF9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjozMToxMVrOGqkvJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1MTk1Nw==", "bodyText": "should we check both existing and isDirectory before return?", "url": "https://github.com/apache/ozone/pull/1134#discussion_r447251957", "createdAt": "2020-06-29T21:02:16Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "diffHunk": "@@ -606,6 +607,52 @@ public String getUsername() {\n     return userName;\n   }\n \n+  /**\n+   * Get the root directory of Trash for a path.\n+   * Returns /.Trash/<username>\n+   * Caller appends either Current or checkpoint timestamp for trash destination\n+   * @param path the trash root of the path to be determined.\n+   * @return trash root\n+   */\n+  @Override\n+  public Path getTrashRoot(Path path) {\n+    final Path pathToTrash = new Path(OZONE_URI_DELIMITER, TRASH_PREFIX);\n+    return new Path(pathToTrash, getUsername());\n+  }\n+\n+  /**\n+   * Get all the trash roots for current user or all users.\n+   *\n+   * @param allUsers return trash roots for all users if true.\n+   * @return all the trash root directories.\n+   *         Returns .Trash of users if {@code /.Trash/$USER} exists.\n+   */\n+  @Override\n+  public Collection<FileStatus> getTrashRoots(boolean allUsers) {\n+    Path trashRoot = new Path(OZONE_URI_DELIMITER, TRASH_PREFIX);\n+    List<FileStatus> ret = new ArrayList<>();\n+    try {\n+      if (!allUsers) {\n+        Path userTrash = new Path(trashRoot, userName);\n+        if (exists(userTrash)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e67183caa063491029ce9186695d66a64b97af0"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI5NTI2OQ==", "bodyText": "Done.\nInterestingly Hadoop's default implementation doesn't check directories. But it would be nice to have.", "url": "https://github.com/apache/ozone/pull/1134#discussion_r447295269", "createdAt": "2020-06-29T22:31:11Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "diffHunk": "@@ -606,6 +607,52 @@ public String getUsername() {\n     return userName;\n   }\n \n+  /**\n+   * Get the root directory of Trash for a path.\n+   * Returns /.Trash/<username>\n+   * Caller appends either Current or checkpoint timestamp for trash destination\n+   * @param path the trash root of the path to be determined.\n+   * @return trash root\n+   */\n+  @Override\n+  public Path getTrashRoot(Path path) {\n+    final Path pathToTrash = new Path(OZONE_URI_DELIMITER, TRASH_PREFIX);\n+    return new Path(pathToTrash, getUsername());\n+  }\n+\n+  /**\n+   * Get all the trash roots for current user or all users.\n+   *\n+   * @param allUsers return trash roots for all users if true.\n+   * @return all the trash root directories.\n+   *         Returns .Trash of users if {@code /.Trash/$USER} exists.\n+   */\n+  @Override\n+  public Collection<FileStatus> getTrashRoots(boolean allUsers) {\n+    Path trashRoot = new Path(OZONE_URI_DELIMITER, TRASH_PREFIX);\n+    List<FileStatus> ret = new ArrayList<>();\n+    try {\n+      if (!allUsers) {\n+        Path userTrash = new Path(trashRoot, userName);\n+        if (exists(userTrash)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1MTk1Nw=="}, "originalCommit": {"oid": "3e67183caa063491029ce9186695d66a64b97af0"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4125, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}