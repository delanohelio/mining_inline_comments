{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzOTQ0OTEw", "number": 1672, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo1Mjo1NFrOFC73Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo1Mjo1NFrOFC73Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjIyMjU0OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/token/BlockTokenVerifier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo1Mjo1NFrOICVrNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODo1Nzo0MFrOICkc5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMzE5MQ==", "bodyText": "NIT: may be safer to throw an exception from a third, generic  }else {. Today there is no other option but if somebody implements a new message type, it will be forced to add condition for the new message.", "url": "https://github.com/apache/ozone/pull/1672#discussion_r539323191", "createdAt": "2020-12-09T13:52:54Z", "author": {"login": "elek"}, "path": "hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/token/BlockTokenVerifier.java", "diffHunk": "@@ -118,7 +125,19 @@ public void verify(String user, String tokenStr,\n           \" by user: \" + tokenUser);\n     }\n \n-    // TODO: check cmd type and the permissions(AccessMode) in the token\n+    if (cmd == ReadChunk || cmd == GetBlock || cmd == GetSmallFile) {\n+      if (!tokenId.getAccessModes().contains(\n+          HddsProtos.BlockTokenSecretProto.AccessModeProto.READ)) {\n+        throw new BlockTokenException(\"Block token with \" + id\n+            + \" doesn't have READ permission\");\n+      }\n+    } else if (cmd == WriteChunk || cmd == PutBlock || cmd == PutSmallFile) {\n+      if (!tokenId.getAccessModes().contains(\n+          HddsProtos.BlockTokenSecretProto.AccessModeProto.WRITE)) {\n+        throw new BlockTokenException(\"Block token with \" + id\n+            + \" doesn't have WRITE permission\");\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13486412b1d032fffa11508acdb3a11da92ec252"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU2NTI4Ng==", "bodyText": "good point. Even though the check block token was not currently done for other cmd, the third else will ensure proper handling is added if this is changed in future.", "url": "https://github.com/apache/ozone/pull/1672#discussion_r539565286", "createdAt": "2020-12-09T18:57:40Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/framework/src/main/java/org/apache/hadoop/hdds/security/token/BlockTokenVerifier.java", "diffHunk": "@@ -118,7 +125,19 @@ public void verify(String user, String tokenStr,\n           \" by user: \" + tokenUser);\n     }\n \n-    // TODO: check cmd type and the permissions(AccessMode) in the token\n+    if (cmd == ReadChunk || cmd == GetBlock || cmd == GetSmallFile) {\n+      if (!tokenId.getAccessModes().contains(\n+          HddsProtos.BlockTokenSecretProto.AccessModeProto.READ)) {\n+        throw new BlockTokenException(\"Block token with \" + id\n+            + \" doesn't have READ permission\");\n+      }\n+    } else if (cmd == WriteChunk || cmd == PutBlock || cmd == PutSmallFile) {\n+      if (!tokenId.getAccessModes().contains(\n+          HddsProtos.BlockTokenSecretProto.AccessModeProto.WRITE)) {\n+        throw new BlockTokenException(\"Block token with \" + id\n+            + \" doesn't have WRITE permission\");\n+      }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMzE5MQ=="}, "originalCommit": {"oid": "13486412b1d032fffa11508acdb3a11da92ec252"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4583, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}