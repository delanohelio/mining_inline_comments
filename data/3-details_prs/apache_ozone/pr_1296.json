{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MDM1NTk4", "number": 1296, "title": "HDDS-4053. Volume space: add quotaUsageInBytes and update it when write and delete key.", "bodyText": "What changes were proposed in this pull request?\nIn addition, the current Quota setting does not take effect. HDDS-541 gives all the work needed to perfect Quota.\nThis PR is a subtask of HDDS-541.\nFirst, we increase quotaUsageInBytes of volume. Later, we will judge whether the volume can be written based on this when we write the key.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4053\nHow was this patch tested?\nUT is added", "createdAt": "2020-08-06T13:41:37Z", "url": "https://github.com/apache/ozone/pull/1296", "merged": true, "mergeCommit": {"oid": "7beb2d09e34d7a20f1205a05b30112cc40fc25e4"}, "closed": true, "closedAt": "2020-09-16T04:02:20Z", "author": {"login": "captainzmc"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8QYbVABqjM2MjkyMjQ1Mzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJS4pTgH2gAyNDY0MDM1NTk4OjIwMzgwNGU2ZThkNDY2ZDA2YTcwMGJjNzViNjVhOTg3ODE1NTQ0Y2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a00b5669c5f6d2c0653a3d0aa9538be50f12c1d4", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/a00b5669c5f6d2c0653a3d0aa9538be50f12c1d4", "committedDate": "2020-08-06T13:18:14Z", "message": "add UT"}, "afterCommit": {"oid": "fe3011b9800194a0bff906188a0832a95bc6bb22", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/fe3011b9800194a0bff906188a0832a95bc6bb22", "committedDate": "2020-08-06T14:02:35Z", "message": "add UT"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe3011b9800194a0bff906188a0832a95bc6bb22", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/fe3011b9800194a0bff906188a0832a95bc6bb22", "committedDate": "2020-08-06T14:02:35Z", "message": "add UT"}, "afterCommit": {"oid": "07f7c17f3dceb19ef7aab0472a3c48a66e93a65a", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/07f7c17f3dceb19ef7aab0472a3c48a66e93a65a", "committedDate": "2020-08-06T14:15:32Z", "message": "add UT"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36601d94d589f159964df4357aa291d6b97647b4", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/36601d94d589f159964df4357aa291d6b97647b4", "committedDate": "2020-08-13T18:22:43Z", "message": "fix some issues."}, "afterCommit": {"oid": "642710a9464ac0919a988f762432294d6a8ef431", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/642710a9464ac0919a988f762432294d6a8ef431", "committedDate": "2020-08-13T18:28:33Z", "message": "fix some issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "642710a9464ac0919a988f762432294d6a8ef431", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/642710a9464ac0919a988f762432294d6a8ef431", "committedDate": "2020-08-13T18:28:33Z", "message": "fix some issues."}, "afterCommit": {"oid": "ce40e90197af2e827668b1b4edb480329bc70cf1", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/ce40e90197af2e827668b1b4edb480329bc70cf1", "committedDate": "2020-08-14T01:02:26Z", "message": "fix some issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d200a65c81c27b3faa9a2c8d2a311b3afdbe93e7", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/d200a65c81c27b3faa9a2c8d2a311b3afdbe93e7", "committedDate": "2020-09-03T09:17:23Z", "message": "use atomic operations instead of volume lock."}, "afterCommit": {"oid": "20b41048a85150adc94e7ab8cb1c1f0a52845124", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/20b41048a85150adc94e7ab8cb1c1f0a52845124", "committedDate": "2020-09-03T09:25:04Z", "message": "use atomic operations instead of volume lock."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20b41048a85150adc94e7ab8cb1c1f0a52845124", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/20b41048a85150adc94e7ab8cb1c1f0a52845124", "committedDate": "2020-09-03T09:25:04Z", "message": "use atomic operations instead of volume lock."}, "afterCommit": {"oid": "09807959ecfdafff7f6afddd6714a60056b8454e", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/09807959ecfdafff7f6afddd6714a60056b8454e", "committedDate": "2020-09-07T06:54:36Z", "message": "use atomic operations instead of volume lock."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b1cbe580f3cdb89d527b6d23698a76936144433", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/2b1cbe580f3cdb89d527b6d23698a76936144433", "committedDate": "2020-09-07T07:09:52Z", "message": "fix checkstyle."}, "afterCommit": {"oid": "a8251c38a3211b63210662147b6732e0cf5700a9", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/a8251c38a3211b63210662147b6732e0cf5700a9", "committedDate": "2020-09-07T07:28:49Z", "message": "fix issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8251c38a3211b63210662147b6732e0cf5700a9", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/a8251c38a3211b63210662147b6732e0cf5700a9", "committedDate": "2020-09-07T07:28:49Z", "message": "fix issues."}, "afterCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff", "committedDate": "2020-09-07T07:39:10Z", "message": "fix issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MzEwMTk5", "url": "https://github.com/apache/ozone/pull/1296#pullrequestreview-484310199", "createdAt": "2020-09-08T16:31:40Z", "commit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNjozMTo0MFrOHOlLpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNjozMTo0MFrOHOlLpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1MTMwMA==", "bodyText": "NIT: Can we add a builder to avoid managing constructors with different parameters?", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485051300", "createdAt": "2020-09-08T16:31:40Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/OzoneVolume.java", "diffHunk": "@@ -131,6 +133,18 @@ public OzoneVolume(ConfigurationSource conf, ClientProtocol proxy,\n     this.modificationTime = Instant.ofEpochMilli(modificationTime);\n   }\n \n+  @SuppressWarnings(\"parameternumber\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNzQ3NTY5", "url": "https://github.com/apache/ozone/pull/1296#pullrequestreview-483747569", "createdAt": "2020-09-08T01:45:23Z", "commit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMTo0NToyM1rOHOKE3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwMToyNzozMFrOHOzUvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYwNzE5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                optional uint64 quotaUsageInBytes = 12;\n          \n          \n            \n                optional uint64 quotaUsage = 12;", "url": "https://github.com/apache/ozone/pull/1296#discussion_r484607197", "createdAt": "2020-09-08T01:45:23Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/interface-client/src/main/proto/OmClientProtocol.proto", "diffHunk": "@@ -360,6 +360,8 @@ message VolumeInfo {\n     optional uint64 updateID = 9;\n     optional uint64 modificationTime = 10;\n     optional uint64 quotaInCounts = 11;\n+    optional uint64 quotaUsageInBytes = 12;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYwNzM4OQ==", "bodyText": "How do we use QUOTA_USAGE = \"quotaUsage\" here ?\nCould you please update the rest part if you agree the idea ?", "url": "https://github.com/apache/ozone/pull/1296#discussion_r484607389", "createdAt": "2020-09-08T01:46:17Z", "author": {"login": "cxorm"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/OzoneConsts.java", "diffHunk": "@@ -269,6 +269,7 @@ private OzoneConsts() {\n   public static final String KEY = \"key\";\n   public static final String SRC_KEY = \"srcKey\";\n   public static final String DST_KEY = \"dstKey\";\n+  public static final String QUOTA_USAGE_IN_BYTES = \"quotaUsageInBytes\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYwOTE3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                this(conf, proxy, name, admin, owner, quotaInBytes, quotaInCounts,\n          \n          \n            \n                    creationTime, acls, metadata);\n          \n          \n            \n                this.modificationTime = Instant.ofEpochMilli(modificationTime);\n          \n          \n            \n                this.quotaUsageInBytes = quotaUsageInBytes;\n          \n          \n            \n                this(conf, proxy, name, admin, owner, quotaInBytes, quotaInCounts,\n          \n          \n            \n                    creationTime, modificationTime, acls, metadata);\n          \n          \n            \n                this.quotaUsageInBytes = quotaUsageInBytes;", "url": "https://github.com/apache/ozone/pull/1296#discussion_r484609173", "createdAt": "2020-09-08T01:54:09Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/OzoneVolume.java", "diffHunk": "@@ -131,6 +133,18 @@ public OzoneVolume(ConfigurationSource conf, ClientProtocol proxy,\n     this.modificationTime = Instant.ofEpochMilli(modificationTime);\n   }\n \n+  @SuppressWarnings(\"parameternumber\")\n+  public OzoneVolume(ConfigurationSource conf, ClientProtocol proxy,\n+      String name, String admin, String owner, long quotaInBytes,\n+      long quotaInCounts, long creationTime, long modificationTime,\n+      List<OzoneAcl> acls, Map<String, String> metadata,\n+      long quotaUsageInBytes) {\n+    this(conf, proxy, name, admin, owner, quotaInBytes, quotaInCounts,\n+        creationTime, acls, metadata);\n+    this.modificationTime = Instant.ofEpochMilli(modificationTime);\n+    this.quotaUsageInBytes = quotaUsageInBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYxNDMwOQ==", "bodyText": "I'm fine with the LongAdder here.\nOut of curiosity,\nCould you be so kind to tell me why we use it here ?\n(Or please describe the bad pattern if we use just long or Long)", "url": "https://github.com/apache/ozone/pull/1296#discussion_r484614309", "createdAt": "2020-09-08T02:17:37Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmVolumeArgs.java", "diffHunk": "@@ -46,6 +47,7 @@\n   private long quotaInBytes;\n   private long quotaInCounts;\n   private final OmOzoneAclMap aclMap;\n+  private LongAdder quotaUsageInBytes = new LongAdder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzMjQ0OQ==", "bodyText": "Suggested change", "url": "https://github.com/apache/ozone/pull/1296#discussion_r484632449", "createdAt": "2020-09-08T03:38:11Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -222,6 +218,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       acquireLock = omMetadataManager.getLock().acquireWriteLock(BUCKET_LOCK,\n           volumeName, bucketName);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzNTY2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  long updateNum = newLocationList.size() * scmBlockSize\n          \n          \n            \n                  long preAllocatedSpace = newLocationList.size() * scmBlockSize", "url": "https://github.com/apache/ozone/pull/1296#discussion_r484635666", "createdAt": "2020-09-08T03:52:59Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -295,14 +293,28 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           new CacheKey<>(dbOpenKeyName),\n           new CacheValue<>(Optional.of(omKeyInfo), trxnLogIndex));\n \n+      long scmBlockSize = ozoneManager.getScmBlockSize();\n+      omVolumeArgs = getVolumeInfo(omMetadataManager, volumeName);\n+\n+      // Here we refer to the implementation of HDFS:\n+      // If the key size is 600MB, when createKey, keyLocationList is 3, and\n+      // the every pre-allocated block length is 256MB. If the number of factor\n+      // is 3, the total pre-allocated block size is 256MB*3*3.\n+      // We will allocate more 256MB*3* 3-600mb *3 = 504MB in advance, and we\n+      // will subtract this part when we finally commitKey.\n+      long updateNum = newLocationList.size() * scmBlockSize", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzNjE3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // Here we refer to the implementation of HDFS:\n          \n          \n            \n                  // If the key size is 600MB, when createKey, keyLocationList is 3, and\n          \n          \n            \n                  // the every pre-allocated block length is 256MB. If the number of factor\n          \n          \n            \n                  // is 3, the total pre-allocated block size is 256MB*3*3.\n          \n          \n            \n                  // We will allocate more 256MB*3* 3-600mb *3 = 504MB in advance, and we\n          \n          \n            \n                  // will subtract this part when we finally commitKey.\n          \n          \n            \n                  // Here we refer to the implementation of HDFS:\n          \n          \n            \n                  // If the key size is 600MB, when createKey, keyLocationInfo in keyLocationList is 3, and\n          \n          \n            \n                  // the every pre-allocated block length is 256MB. If the number of factor\n          \n          \n            \n                  // is 3, the total pre-allocated block size is 256MB * 3 * 3.\n          \n          \n            \n                  // We will allocate more 256MB * 3 * 3 - 600MB * 3 = 504MB in advance, and we\n          \n          \n            \n                  // will subtract this part when we finally commitKey.", "url": "https://github.com/apache/ozone/pull/1296#discussion_r484636173", "createdAt": "2020-09-08T03:55:21Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -295,14 +293,28 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           new CacheKey<>(dbOpenKeyName),\n           new CacheValue<>(Optional.of(omKeyInfo), trxnLogIndex));\n \n+      long scmBlockSize = ozoneManager.getScmBlockSize();\n+      omVolumeArgs = getVolumeInfo(omMetadataManager, volumeName);\n+\n+      // Here we refer to the implementation of HDFS:\n+      // If the key size is 600MB, when createKey, keyLocationList is 3, and\n+      // the every pre-allocated block length is 256MB. If the number of factor\n+      // is 3, the total pre-allocated block size is 256MB*3*3.\n+      // We will allocate more 256MB*3* 3-600mb *3 = 504MB in advance, and we\n+      // will subtract this part when we finally commitKey.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI3MTU4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  long totalKeySize = 0;\n          \n          \n            \n                  long quotaReleased = 0;\n          \n      \n    \n    \n  \n\nWe could name the variable in a proper meaning IMHO,\nfeel free to rename it if you have an idea.", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485271582", "createdAt": "2020-09-09T00:44:50Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyDeleteRequest.java", "diffHunk": "@@ -143,14 +143,25 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n               keyName)),\n           new CacheValue<>(Optional.absent(), trxnLogIndex));\n \n+      long totalKeySize = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI3MjQ5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // atom update quotaUsage.\n          \n          \n            \n                  // update quotaUsage atomically.", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485272494", "createdAt": "2020-09-09T00:48:17Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyDeleteRequest.java", "diffHunk": "@@ -143,14 +143,25 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n               keyName)),\n           new CacheValue<>(Optional.absent(), trxnLogIndex));\n \n+      long totalKeySize = 0;\n+      int keyFactor = omKeyInfo.getFactor().getNumber();\n+      omVolumeArgs = getVolumeInfo(omMetadataManager, volumeName);\n+      OmKeyLocationInfoGroup keyLocationGroup =\n+          omKeyInfo.getLatestVersionLocations();\n+      for(OmKeyLocationInfo locationInfo: keyLocationGroup.getLocationList()){\n+        totalKeySize += locationInfo.getLength() * keyFactor;\n+      }\n+      // atom update quotaUsage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI3Mjg0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  long totalKeySize = 0;\n          \n          \n            \n                  long quotaReleased = 0;", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485272842", "createdAt": "2020-09-09T00:49:45Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeysDeleteRequest.java", "diffHunk": "@@ -151,21 +154,32 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n         }\n       }\n \n+      long totalKeySize = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI3MzgzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // atom update quotaUsage.\n          \n          \n            \n                  // update quotaUsage atomically.", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485273836", "createdAt": "2020-09-09T00:53:28Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeysDeleteRequest.java", "diffHunk": "@@ -151,21 +154,32 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n         }\n       }\n \n+      long totalKeySize = 0;\n+      OmVolumeArgs omVolumeArgs = getVolumeInfo(omMetadataManager, volumeName);\n+\n       // Mark all keys which can be deleted, in cache as deleted.\n       for (OmKeyInfo omKeyInfo : omKeyInfoList) {\n         omMetadataManager.getKeyTable().addCacheEntry(\n             new CacheKey<>(omMetadataManager.getOzoneKey(volumeName, bucketName,\n                 omKeyInfo.getKeyName())),\n             new CacheValue<>(Optional.absent(), trxnLogIndex));\n+\n+        int keyFactor = omKeyInfo.getFactor().getNumber();\n+        OmKeyLocationInfoGroup keyLocationGroup =\n+            omKeyInfo.getLatestVersionLocations();\n+        for(OmKeyLocationInfo locationInfo: keyLocationGroup.getLocationList()){\n+          totalKeySize += locationInfo.getLength() * keyFactor;\n+        }\n       }\n+      // atom update quotaUsage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI3NDQyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            }\n          \n          \n            \n            }", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485274428", "createdAt": "2020-09-09T00:55:34Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeysDeleteResponse.java", "diffHunk": "@@ -105,5 +108,10 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getDeletedTable().putWithBatch(batchOperation,\n           deleteKey, repeatedOmKeyInfo);\n     }\n+\n+    // update volume quotaUsageInBytes.\n+    omMetadataManager.getVolumeTable().putWithBatch(batchOperation,\n+        omMetadataManager.getVolumeKey(omVolumeArgs.getVolume()),\n+        omVolumeArgs);\n   }\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI4MTMzOA==", "bodyText": "I'm confused about the meaning of the variable.\n(Please let me know the meaning of the variable if I miss something.)\nCould you please add some comments about it ?", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485281338", "createdAt": "2020-09-09T01:21:11Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -182,8 +179,16 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           new CacheKey<>(dbOzoneKey),\n           new CacheValue<>(Optional.of(omKeyInfo), trxnLogIndex));\n \n+      long scmBlockSize = ozoneManager.getScmBlockSize();\n+      int factor = omKeyInfo.getFactor().getNumber();\n+      omVolumeArgs = getVolumeInfo(omMetadataManager, volumeName);\n+      long updateNum = omKeyInfo.getDataSize() * factor -\n+          locationInfoList.size() * scmBlockSize * factor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI4MTYwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  long updateNum = newLocationList.size() * scmBlockSize\n          \n          \n            \n                  long preAllocatedSpace = newLocationList.size() * scmBlockSize", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485281603", "createdAt": "2020-09-09T01:22:11Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -292,14 +289,21 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           bucketName, Optional.absent(), Optional.of(missingParentInfos),\n           trxnLogIndex);\n \n+      long scmBlockSize = ozoneManager.getScmBlockSize();\n+      omVolumeArgs = getVolumeInfo(omMetadataManager, volumeName);\n+      long updateNum = newLocationList.size() * scmBlockSize", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI4MTg1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  long updateNum = newLocationList.size() * scmBlockSize\n          \n          \n            \n                  long preAllocatedSpace = newLocationList.size() * scmBlockSize", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485281859", "createdAt": "2020-09-09T01:23:11Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -210,10 +206,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           new CacheKey<>(openKeyName),\n           new CacheValue<>(Optional.of(openKeyInfo), trxnLogIndex));\n \n+      long scmBlockSize = ozoneManager.getScmBlockSize();\n+      omVolumeArgs = getVolumeInfo(omMetadataManager, volumeName);\n+      long updateNum = newLocationList.size() * scmBlockSize", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI4MjEwNA==", "bodyText": "The same as OMKeyCommitRequest", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485282104", "createdAt": "2020-09-09T01:24:14Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3MultipartUploadCommitPartRequest.java", "diffHunk": "@@ -207,13 +209,21 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           new CacheKey<>(openKey),\n           new CacheValue<>(Optional.absent(), trxnLogIndex));\n \n+      long scmBlockSize = ozoneManager.getScmBlockSize();\n+      int factor = omKeyInfo.getFactor().getNumber();\n+      omVolumeArgs = getVolumeInfo(omMetadataManager, volumeName);\n+      long updateNum = omKeyInfo.getDataSize() * factor -\n+          keyArgs.getKeyLocationsList().size() * scmBlockSize * factor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI4MzAwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // atom update quotaUsage.\n          \n          \n            \n                  // update quotaUsage atomically.", "url": "https://github.com/apache/ozone/pull/1296#discussion_r485283006", "createdAt": "2020-09-09T01:27:30Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -210,10 +206,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           new CacheKey<>(openKeyName),\n           new CacheValue<>(Optional.of(openKeyInfo), trxnLogIndex));\n \n+      long scmBlockSize = ozoneManager.getScmBlockSize();\n+      omVolumeArgs = getVolumeInfo(omMetadataManager, volumeName);\n+      long updateNum = newLocationList.size() * scmBlockSize\n+          * openKeyInfo.getFactor().getNumber();\n+      // atom update quotaUsage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2OTU3Mzkw", "url": "https://github.com/apache/ozone/pull/1296#pullrequestreview-486957390", "createdAt": "2020-09-11T16:36:10Z", "commit": {"oid": "411d86fe637b83e1979d9dd58fad86707702cbe4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MTI5OTk0", "url": "https://github.com/apache/ozone/pull/1296#pullrequestreview-475129994", "createdAt": "2020-08-26T03:45:33Z", "commit": {"oid": "ed56a8b216e642f5efde9cadfbfcff75c88945ac"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTozNTo0N1rOHOYz4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjowOTo0NlrOHOZ43A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0ODYwOQ==", "bodyText": "add final", "url": "https://github.com/apache/ozone/pull/1296#discussion_r484848609", "createdAt": "2020-09-08T11:35:47Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmVolumeArgs.java", "diffHunk": "@@ -46,6 +47,7 @@\n   private long quotaInBytes;\n   private long quotaInCounts;\n   private final OmOzoneAclMap aclMap;\n+  private LongAdder quotaUsageInBytes = new LongAdder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0ODk1MQ==", "bodyText": "setQuotaUsageInBytes -> increase***", "url": "https://github.com/apache/ozone/pull/1296#discussion_r484848951", "createdAt": "2020-09-08T11:36:28Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmVolumeArgs.java", "diffHunk": "@@ -172,6 +176,14 @@ public long getQuotaInCounts() {\n   public OmOzoneAclMap getAclMap() {\n     return aclMap;\n   }\n+\n+  public LongAdder getQuotaUsageInBytes() {\n+    return quotaUsageInBytes;\n+  }\n+\n+  public void setQuotaUsageInBytes(long quotaUsageInBytes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2NjI2OA==", "bodyText": "Should getObjectInfo also be changed?", "url": "https://github.com/apache/ozone/pull/1296#discussion_r484866268", "createdAt": "2020-09-08T12:09:46Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmVolumeArgs.java", "diffHunk": "@@ -386,7 +408,7 @@ public OmVolumeArgs copyObject() {\n     OmOzoneAclMap cloneAclMap = aclMap.copyObject();\n \n     return new OmVolumeArgs(adminName, ownerName, volume, quotaInBytes,\n-        quotaInCounts, cloneMetadata, cloneAclMap, creationTime,\n-        modificationTime, objectID, updateID);\n+        quotaInCounts, cloneMetadata, quotaUsageInBytes.sum(), cloneAclMap,\n+        creationTime, modificationTime, objectID, updateID);\n   }\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4327ad6b151ea3b86d549ccebcc7ecd50cfeff"}, "originalPosition": 122}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34277903759a624d6de4d614f700573795da2426", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/34277903759a624d6de4d614f700573795da2426", "committedDate": "2020-09-15T08:25:17Z", "message": "add volume quota usage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "411d86fe637b83e1979d9dd58fad86707702cbe4", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/411d86fe637b83e1979d9dd58fad86707702cbe4", "committedDate": "2020-09-09T13:20:31Z", "message": "fix review issues."}, "afterCommit": {"oid": "0117885333c1b4dad75fe8723a7cd904525b6973", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/0117885333c1b4dad75fe8723a7cd904525b6973", "committedDate": "2020-09-15T08:47:52Z", "message": "fix review issues and resolve conflict."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c272d010afa3b031682633f438bef89896fb61a7", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/c272d010afa3b031682633f438bef89896fb61a7", "committedDate": "2020-09-15T10:15:31Z", "message": "fix review issues and resolve conflict."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0117885333c1b4dad75fe8723a7cd904525b6973", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/0117885333c1b4dad75fe8723a7cd904525b6973", "committedDate": "2020-09-15T08:47:52Z", "message": "fix review issues and resolve conflict."}, "afterCommit": {"oid": "c272d010afa3b031682633f438bef89896fb61a7", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/c272d010afa3b031682633f438bef89896fb61a7", "committedDate": "2020-09-15T10:15:31Z", "message": "fix review issues and resolve conflict."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bce9bf4bd3b00d0843f46c21bc96a099c585777d", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/bce9bf4bd3b00d0843f46c21bc96a099c585777d", "committedDate": "2020-09-15T11:52:31Z", "message": "fix review issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "203804e6e8d466d06a700bc75b65a987815544cb", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/203804e6e8d466d06a700bc75b65a987815544cb", "committedDate": "2020-09-16T02:22:43Z", "message": "fix s3 MultipartUploadAbort."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2659, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}