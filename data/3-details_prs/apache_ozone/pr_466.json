{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MDk4NzM1", "number": 466, "title": "HDDS-2869. Handle pipeline bootstrap from SCM and create pipeline use case in Recon.", "bodyText": "What changes were proposed in this pull request?\n\nImplement SCM pipeline metadata bootstrap in Recon.\nHandle CREATE pipeline use case in Recon (Recon sees a new pipeline ID in Datanode heartbeat)\nStub out pipeline provider in Recon such that it can NEVER create a Ratis pipeline.\nAdded SCM RPC endpoint to get a single Pipeline info.\n\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-2869\nHow was this patch tested?\nManually tested on a 3 node docker cluster.\nAdded unit tests for new Recon methods.", "createdAt": "2020-01-21T05:14:13Z", "url": "https://github.com/apache/ozone/pull/466", "merged": true, "mergeCommit": {"oid": "ee7b4540bf8420fdabb2bd806064e4fb7f7b1511"}, "closed": true, "closedAt": "2020-01-29T17:19:47Z", "author": {"login": "avijayanhwx"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8aIDngH2gAyMzY1MDk4NzM1OjljYTYxZmNhMTdiZTEwZmFhMWU1YzBkOWM1MjVhNzg3ZmM5YjNlMjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_CFQ1gFqTM0OTk0NTUzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9ca61fca17be10faa1e5c0d9c525a787fc9b3e20", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/9ca61fca17be10faa1e5c0d9c525a787fc9b3e20", "committedDate": "2020-01-21T05:16:43Z", "message": "HDDS-2869. Handle pipeline bootstrap from SCM and create pipeline use case in Recon."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "871bf8ce7f3753fbea6ba2353a6391806f70e31b", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/871bf8ce7f3753fbea6ba2353a6391806f70e31b", "committedDate": "2020-01-21T05:03:13Z", "message": "HDDS-2869. Handle pipeline bootstrap from SCM and create pipeline use case in Recon."}, "afterCommit": {"oid": "9ca61fca17be10faa1e5c0d9c525a787fc9b3e20", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/9ca61fca17be10faa1e5c0d9c525a787fc9b3e20", "committedDate": "2020-01-21T05:16:43Z", "message": "HDDS-2869. Handle pipeline bootstrap from SCM and create pipeline use case in Recon."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b979312c6eb1dde06c5d4755a6aa1e956cf5e632", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/b979312c6eb1dde06c5d4755a6aa1e956cf5e632", "committedDate": "2020-01-21T17:36:12Z", "message": "HDDS-2869. Fix TestSCMPipelineManager unit test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "459ad5684d56c9fe2675f42b0f7f0baab8c19be8", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/459ad5684d56c9fe2675f42b0f7f0baab8c19be8", "committedDate": "2020-01-21T19:52:09Z", "message": "HDDS-2869. Fix findbugs and acceptance tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0a1c426d707f16ef8a638bcb36445691880b384", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/f0a1c426d707f16ef8a638bcb36445691880b384", "committedDate": "2020-01-22T05:41:01Z", "message": "HDDS-2869. Rafactoring."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76c67ff8cf46c2c486c40949ded5abba2535fe49", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/76c67ff8cf46c2c486c40949ded5abba2535fe49", "committedDate": "2020-01-27T05:42:46Z", "message": "Merge branch 'master' into HDDS-2869-master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "016192d98702a6cf4d09434e8e9c1ffe5b6acd32", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/016192d98702a6cf4d09434e8e9c1ffe5b6acd32", "committedDate": "2020-01-27T21:06:28Z", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-2869-master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/e8ffb3edce4817dc708470dce9b1839ba14c3ee5", "committedDate": "2020-01-27T21:06:57Z", "message": "Merge branch 'HDDS-2869-master' of github.com:avijayanhwx/hadoop-ozone into HDDS-2869-master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDUyMzUz", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349052353", "createdAt": "2020-01-27T23:43:44Z", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo0Mzo0NFrOFiVSXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo0Mzo0NFrOFiVSXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0NDY2OA==", "bodyText": "The access can be made package-private?", "url": "https://github.com/apache/ozone/pull/466#discussion_r371544668", "createdAt": "2020-01-27T23:43:44Z", "author": {"login": "swagle"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelineFactory.java", "diffHunk": "@@ -35,7 +35,7 @@\n /**\n  * Creates pipeline based on replication type.\n  */\n-public final class PipelineFactory {\n+public class PipelineFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDUzMzgx", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349053381", "createdAt": "2020-01-27T23:46:45Z", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo0Njo0NVrOFiVViQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo0Njo0NVrOFiVViQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0NTQ4MQ==", "bodyText": "For cleaner semantics, this can be renamed to setReportedDatanode.", "url": "https://github.com/apache/ozone/pull/466#discussion_r371545481", "createdAt": "2020-01-27T23:46:45Z", "author": {"login": "swagle"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/PipelineReportHandler.java", "diffHunk": "@@ -120,4 +116,24 @@ private void processPipelineReport(PipelineReport report, DatanodeDetails dn,\n       }\n     }\n   }\n+\n+\n+  protected void reportDatanode(Pipeline pipeline, DatanodeDetails dn)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDU0OTIy", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349054922", "createdAt": "2020-01-27T23:51:16Z", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1MToxNlrOFiVanQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1MToxNlrOFiVanQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0Njc4MQ==", "bodyText": "Instead of contains, we could have made the get return an Optional", "url": "https://github.com/apache/ozone/pull/466#discussion_r371546781", "createdAt": "2020-01-27T23:51:16Z", "author": {"login": "swagle"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/SCMPipelineManager.java", "diffHunk": "@@ -200,6 +210,16 @@ public Pipeline getPipeline(PipelineID pipelineID)\n     }\n   }\n \n+  @Override\n+  public boolean containsPipeline(PipelineID pipelineID) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDU1OTA1", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349055905", "createdAt": "2020-01-27T23:54:10Z", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1NDoxMFrOFiVd9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1NDoxMFrOFiVd9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0NzYzOA==", "bodyText": "Instead of a get on a lock object, it would make sense to make the reference accessible.", "url": "https://github.com/apache/ozone/pull/466#discussion_r371547638", "createdAt": "2020-01-27T23:54:10Z", "author": {"login": "swagle"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/SCMPipelineManager.java", "diffHunk": "@@ -523,4 +543,21 @@ protected File getPipelineDBPath(Configuration configuration) {\n     File metaDir = ServerUtils.getScmDbDir(configuration);\n     return new File(metaDir, SCM_PIPELINE_DB);\n   }\n+\n+  protected ReadWriteLock getLock() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDU2MzI1", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349056325", "createdAt": "2020-01-27T23:55:25Z", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1NToyNVrOFiVfSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1NToyNVrOFiVfSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0Nzk3Nw==", "bodyText": "This might not be appropriate for Audit since it is not client access, we should log it in debug mode IMO.", "url": "https://github.com/apache/ozone/pull/466#discussion_r371547977", "createdAt": "2020-01-27T23:55:25Z", "author": {"login": "swagle"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMClientProtocolServer.java", "diffHunk": "@@ -408,6 +408,15 @@ public Pipeline createReplicationPipeline(HddsProtos.ReplicationType type,\n     return scm.getPipelineManager().getPipelines();\n   }\n \n+  @Override\n+  public Pipeline getPipeline(HddsProtos.PipelineID pipelineID)\n+      throws IOException {\n+    AUDIT.logReadSuccess(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDU2NzI5", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349056729", "createdAt": "2020-01-27T23:56:34Z", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1NjozNVrOFiVgmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1NjozNVrOFiVgmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0ODMxNQ==", "bodyText": "Should we consider throwing a RuntimeException instead?", "url": "https://github.com/apache/ozone/pull/466#discussion_r371548315", "createdAt": "2020-01-27T23:56:35Z", "author": {"login": "swagle"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconPipelineFactory.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon.scm;\n+\n+import java.util.List;\n+\n+import org.apache.commons.collections.map.DefaultedMap;\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineFactory;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Class to stub out SCM's pipeline providers. This makes sure Recon can\n+ * never be on the pipeline CREATE or CLOSE path.\n+ */\n+public class ReconPipelineFactory extends PipelineFactory {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(ReconPipelineFactory.class);\n+\n+  ReconPipelineFactory() {\n+    ReconMockPipelineProvider reconMockPipelineProvider =\n+        new ReconMockPipelineProvider();\n+    setProviders(new DefaultedMap(reconMockPipelineProvider));\n+  }\n+\n+  static class ReconMockPipelineProvider implements PipelineProvider {\n+\n+    @Override\n+    public Pipeline create(HddsProtos.ReplicationFactor factor){\n+      LOG.warn(\"Trying to create pipeline in Recon, which is prohibited!\");\n+      return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDU3MDkw", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349057090", "createdAt": "2020-01-27T23:57:41Z", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1Nzo0MVrOFiVhvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1Nzo0MVrOFiVhvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0ODYwNA==", "bodyText": "I would avoid calling this a Mock since unit tests mocks have a different meaning as they return stubbed data structures.", "url": "https://github.com/apache/ozone/pull/466#discussion_r371548604", "createdAt": "2020-01-27T23:57:41Z", "author": {"login": "swagle"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconPipelineFactory.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon.scm;\n+\n+import java.util.List;\n+\n+import org.apache.commons.collections.map.DefaultedMap;\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineFactory;\n+import org.apache.hadoop.hdds.scm.pipeline.PipelineProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Class to stub out SCM's pipeline providers. This makes sure Recon can\n+ * never be on the pipeline CREATE or CLOSE path.\n+ */\n+public class ReconPipelineFactory extends PipelineFactory {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(ReconPipelineFactory.class);\n+\n+  ReconPipelineFactory() {\n+    ReconMockPipelineProvider reconMockPipelineProvider =\n+        new ReconMockPipelineProvider();\n+    setProviders(new DefaultedMap(reconMockPipelineProvider));\n+  }\n+\n+  static class ReconMockPipelineProvider implements PipelineProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDU4ODUy", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349058852", "createdAt": "2020-01-28T00:02:56Z", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMjo1NlrOFiVnag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMjo1NlrOFiVnag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MDA1OA==", "bodyText": "How about calling initialize from the constructor and make that idempotent using the flag.", "url": "https://github.com/apache/ozone/pull/466#discussion_r371550058", "createdAt": "2020-01-28T00:02:56Z", "author": {"login": "swagle"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/spi/impl/StorageContainerServiceProviderImpl.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon.spi.impl;\n+\n+import static org.apache.hadoop.hdds.scm.client.ContainerOperationClient.newContainerRpcClient;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;\n+import org.apache.hadoop.hdds.scm.protocol.StorageContainerLocationProtocol;\n+import org.apache.hadoop.ozone.recon.spi.StorageContainerServiceProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Implementation for StorageContainerServiceProvider that talks with actual\n+ * cluster SCM.\n+ */\n+public class StorageContainerServiceProviderImpl\n+    implements StorageContainerServiceProvider {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(StorageContainerServiceProviderImpl.class);\n+\n+  private OzoneConfiguration configuration;\n+  private StorageContainerLocationProtocol scmClient;\n+  private boolean isInitialized = false;\n+\n+  @Inject\n+  public StorageContainerServiceProviderImpl(OzoneConfiguration configuration,\n+      StorageContainerLocationProtocol scmClient) {\n+    this.configuration = configuration;\n+    this.scmClient = scmClient;\n+    if (this.scmClient != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDU4OTYz", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349058963", "createdAt": "2020-01-28T00:03:15Z", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMzoxNVrOFiVnyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMzoxNVrOFiVnyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MDE1NA==", "bodyText": "This should be declared volatile.", "url": "https://github.com/apache/ozone/pull/466#discussion_r371550154", "createdAt": "2020-01-28T00:03:15Z", "author": {"login": "swagle"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/spi/impl/StorageContainerServiceProviderImpl.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon.spi.impl;\n+\n+import static org.apache.hadoop.hdds.scm.client.ContainerOperationClient.newContainerRpcClient;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;\n+import org.apache.hadoop.hdds.scm.protocol.StorageContainerLocationProtocol;\n+import org.apache.hadoop.ozone.recon.spi.StorageContainerServiceProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Implementation for StorageContainerServiceProvider that talks with actual\n+ * cluster SCM.\n+ */\n+public class StorageContainerServiceProviderImpl\n+    implements StorageContainerServiceProvider {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(StorageContainerServiceProviderImpl.class);\n+\n+  private OzoneConfiguration configuration;\n+  private StorageContainerLocationProtocol scmClient;\n+  private boolean isInitialized = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDU5MjAw", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349059200", "createdAt": "2020-01-28T00:03:55Z", "commit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMzo1NVrOFiVojw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMzo1NVrOFiVojw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MDM1MQ==", "bodyText": "Same here, and next check becomes redundant.", "url": "https://github.com/apache/ozone/pull/466#discussion_r371550351", "createdAt": "2020-01-28T00:03:55Z", "author": {"login": "swagle"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/spi/impl/StorageContainerServiceProviderImpl.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon.spi.impl;\n+\n+import static org.apache.hadoop.hdds.scm.client.ContainerOperationClient.newContainerRpcClient;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;\n+import org.apache.hadoop.hdds.scm.protocol.StorageContainerLocationProtocol;\n+import org.apache.hadoop.ozone.recon.spi.StorageContainerServiceProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Implementation for StorageContainerServiceProvider that talks with actual\n+ * cluster SCM.\n+ */\n+public class StorageContainerServiceProviderImpl\n+    implements StorageContainerServiceProvider {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(StorageContainerServiceProviderImpl.class);\n+\n+  private OzoneConfiguration configuration;\n+  private StorageContainerLocationProtocol scmClient;\n+  private boolean isInitialized = false;\n+\n+  @Inject\n+  public StorageContainerServiceProviderImpl(OzoneConfiguration configuration,\n+      StorageContainerLocationProtocol scmClient) {\n+    this.configuration = configuration;\n+    this.scmClient = scmClient;\n+    if (this.scmClient != null) {\n+      isInitialized = true;\n+    }\n+  }\n+\n+  private void initialize() {\n+    try {\n+      this.scmClient = newContainerRpcClient(configuration);\n+    } catch (IOException ioEx) {\n+      LOG.error(\"Exception encountered while creating SCM client.\", ioEx);\n+    }\n+    isInitialized = true;\n+  }\n+\n+  @Override\n+  public List<Pipeline> getPipelines() throws IOException {\n+    if (!isInitialized) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ffb3edce4817dc708470dce9b1839ba14c3ee5"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be7a53771251c48bd6f1f5a9735aee97f838157c", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/be7a53771251c48bd6f1f5a9735aee97f838157c", "committedDate": "2020-01-28T15:27:49Z", "message": "HDDS-2869. Address review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e69ceb2d51a19cfe70084ec9c12538fc96b944ec", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/e69ceb2d51a19cfe70084ec9c12538fc96b944ec", "committedDate": "2020-01-28T15:31:51Z", "message": "HDDS-2869. Remove audit log line for getPipeline."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "686b669cdb954ab03dccec38b9388fb7f2e74117", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/686b669cdb954ab03dccec38b9388fb7f2e74117", "committedDate": "2020-01-28T17:33:32Z", "message": "HDDS-2869. Fix unit test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2758f46cb7dac0e6f1aaf31d2deef78f42eaa970", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/2758f46cb7dac0e6f1aaf31d2deef78f42eaa970", "committedDate": "2020-01-28T17:37:06Z", "message": "HDDS-2869. Remove integration test name change."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NjA0MjUw", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349604250", "createdAt": "2020-01-28T18:29:59Z", "commit": {"oid": "2758f46cb7dac0e6f1aaf31d2deef78f42eaa970"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NzQ2NTcz", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349746573", "createdAt": "2020-01-28T22:21:15Z", "commit": {"oid": "2758f46cb7dac0e6f1aaf31d2deef78f42eaa970"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoyMToxNlrOFi2rRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoyMToxNlrOFi2rRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5MTcxOA==", "bodyText": "Usually we add new fields at the end of enums.", "url": "https://github.com/apache/ozone/pull/466#discussion_r372091718", "createdAt": "2020-01-28T22:21:16Z", "author": {"login": "arp7"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/audit/SCMAction.java", "diffHunk": "@@ -32,6 +32,7 @@\n   GET_CONTAINER_WITH_PIPELINE,\n   LIST_CONTAINER,\n   LIST_PIPELINE,\n+  GET_PIPELINE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2758f46cb7dac0e6f1aaf31d2deef78f42eaa970"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NzQ3Mjg2", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349747286", "createdAt": "2020-01-28T22:22:39Z", "commit": {"oid": "2758f46cb7dac0e6f1aaf31d2deef78f42eaa970"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoyMjozOVrOFi2tcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoyMjozOVrOFi2tcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5MjI3Mg==", "bodyText": "Why is this removed?", "url": "https://github.com/apache/ozone/pull/466#discussion_r372092272", "createdAt": "2020-01-28T22:22:39Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/dist/src/main/compose/ozone/docker-compose.yaml", "diffHunk": "@@ -67,6 +67,5 @@ services:\n     ports:\n       - 9888:9888\n     environment:\n-      WAITFOR: om:9874", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2758f46cb7dac0e6f1aaf31d2deef78f42eaa970"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NzQ3MzY5", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349747369", "createdAt": "2020-01-28T22:22:48Z", "commit": {"oid": "2758f46cb7dac0e6f1aaf31d2deef78f42eaa970"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoyMjo0OFrOFi2tvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoyMjo0OFrOFi2tvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5MjM0OA==", "bodyText": "Same.", "url": "https://github.com/apache/ozone/pull/466#discussion_r372092348", "createdAt": "2020-01-28T22:22:48Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/dist/src/main/compose/ozonesecure/docker-compose.yaml", "diffHunk": "@@ -79,7 +79,6 @@ services:\n     env_file:\n       - ./docker-config\n     environment:\n-      WAITFOR: om:9874", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2758f46cb7dac0e6f1aaf31d2deef78f42eaa970"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NzQ3NzE2", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349747716", "createdAt": "2020-01-28T22:23:31Z", "commit": {"oid": "2758f46cb7dac0e6f1aaf31d2deef78f42eaa970"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52148c7dadbd0386970fd3c279d0ed2855de484b", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/52148c7dadbd0386970fd3c279d0ed2855de484b", "committedDate": "2020-01-28T22:30:20Z", "message": "Remove GET_PIPELINE SCMAction since the log line was removed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NzUyNTEx", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349752511", "createdAt": "2020-01-28T22:32:55Z", "commit": {"oid": "52148c7dadbd0386970fd3c279d0ed2855de484b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5OTQ1NTM4", "url": "https://github.com/apache/ozone/pull/466#pullrequestreview-349945538", "createdAt": "2020-01-29T08:57:43Z", "commit": {"oid": "52148c7dadbd0386970fd3c279d0ed2855de484b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3712, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}