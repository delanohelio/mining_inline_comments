{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NTYyMjM3", "number": 1164, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMDoyNDo1MFrOEMOtxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowODo1NlrOEOX3Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjU5NDYyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMDoyNDo1MFrOGuOUHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMjo1NjozOVrOGvP4dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyMjIwNA==", "bodyText": "should we order datanodes when the key is a file for caller like getFileStatus?", "url": "https://github.com/apache/ozone/pull/1164#discussion_r451122204", "createdAt": "2020-07-07T20:24:50Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1706,36 +1718,41 @@ public OzoneFileStatus getFileStatus(OmKeyArgs args) throws IOException {\n \n       // Check if the key is a file.\n       String fileKeyBytes = metadataManager.getOzoneKey(\n-          volumeName, bucketName, keyName);\n-      OmKeyInfo fileKeyInfo = metadataManager.getKeyTable().get(fileKeyBytes);\n+              volumeName, bucketName, keyName);\n+      fileKeyInfo = metadataManager.getKeyTable().get(fileKeyBytes);\n+\n+      // Check if the key is a directory.\n+      if (fileKeyInfo == null) {\n+        String dirKey = OzoneFSUtils.addTrailingSlashIfNeeded(keyName);\n+        String dirKeyBytes = metadataManager.getOzoneKey(\n+                volumeName, bucketName, dirKey);\n+        OmKeyInfo dirKeyInfo = metadataManager.getKeyTable().get(dirKeyBytes);\n+        if (dirKeyInfo != null) {\n+          return new OzoneFileStatus(dirKeyInfo, scmBlockSize, true);\n+        }\n+      }\n+    } finally {\n+      metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n+              bucketName);\n+\n+      // if the key is a file then do refresh pipeline info in OM by asking SCM\n       if (fileKeyInfo != null) {\n-        if (args.getRefreshPipeline()) {\n+        if (refreshPipeline) {\n           refreshPipeline(fileKeyInfo);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyNzY4Mw==", "bodyText": "Thanks for the review. Good point. For sorting dns, we need to introduce a new arg clientAddress to APIs listStatus, getFileStatus interfaces.\nNeed to pass a new argument clientAddress like lookupFile API. Can we do interface changes in a separate jira task ?", "url": "https://github.com/apache/ozone/pull/1164#discussion_r451327683", "createdAt": "2020-07-08T07:08:03Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1706,36 +1718,41 @@ public OzoneFileStatus getFileStatus(OmKeyArgs args) throws IOException {\n \n       // Check if the key is a file.\n       String fileKeyBytes = metadataManager.getOzoneKey(\n-          volumeName, bucketName, keyName);\n-      OmKeyInfo fileKeyInfo = metadataManager.getKeyTable().get(fileKeyBytes);\n+              volumeName, bucketName, keyName);\n+      fileKeyInfo = metadataManager.getKeyTable().get(fileKeyBytes);\n+\n+      // Check if the key is a directory.\n+      if (fileKeyInfo == null) {\n+        String dirKey = OzoneFSUtils.addTrailingSlashIfNeeded(keyName);\n+        String dirKeyBytes = metadataManager.getOzoneKey(\n+                volumeName, bucketName, dirKey);\n+        OmKeyInfo dirKeyInfo = metadataManager.getKeyTable().get(dirKeyBytes);\n+        if (dirKeyInfo != null) {\n+          return new OzoneFileStatus(dirKeyInfo, scmBlockSize, true);\n+        }\n+      }\n+    } finally {\n+      metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n+              bucketName);\n+\n+      // if the key is a file then do refresh pipeline info in OM by asking SCM\n       if (fileKeyInfo != null) {\n-        if (args.getRefreshPipeline()) {\n+        if (refreshPipeline) {\n           refreshPipeline(fileKeyInfo);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyMjIwNA=="}, "originalCommit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE5NjQ3MQ==", "bodyText": "@xiaoyuyao, IMHO, your proposal is unrelated to this perf changes and for focussed reviews/commits I have created HDDS-3947 jira to handle your comment. Hope this is fine with you. Thanks!", "url": "https://github.com/apache/ozone/pull/1164#discussion_r452196471", "createdAt": "2020-07-09T12:56:39Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1706,36 +1718,41 @@ public OzoneFileStatus getFileStatus(OmKeyArgs args) throws IOException {\n \n       // Check if the key is a file.\n       String fileKeyBytes = metadataManager.getOzoneKey(\n-          volumeName, bucketName, keyName);\n-      OmKeyInfo fileKeyInfo = metadataManager.getKeyTable().get(fileKeyBytes);\n+              volumeName, bucketName, keyName);\n+      fileKeyInfo = metadataManager.getKeyTable().get(fileKeyBytes);\n+\n+      // Check if the key is a directory.\n+      if (fileKeyInfo == null) {\n+        String dirKey = OzoneFSUtils.addTrailingSlashIfNeeded(keyName);\n+        String dirKeyBytes = metadataManager.getOzoneKey(\n+                volumeName, bucketName, dirKey);\n+        OmKeyInfo dirKeyInfo = metadataManager.getKeyTable().get(dirKeyBytes);\n+        if (dirKeyInfo != null) {\n+          return new OzoneFileStatus(dirKeyInfo, scmBlockSize, true);\n+        }\n+      }\n+    } finally {\n+      metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n+              bucketName);\n+\n+      // if the key is a file then do refresh pipeline info in OM by asking SCM\n       if (fileKeyInfo != null) {\n-        if (args.getRefreshPipeline()) {\n+        if (refreshPipeline) {\n           refreshPipeline(fileKeyInfo);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyMjIwNA=="}, "originalCommit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzE1NTgzOnYy", "diffSide": "LEFT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDowMjoxNlrOGuTnoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzoyNDoxMlrOGubWCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIwOTEyMQ==", "bodyText": "Can we also move the generation of the secret token also outside of the lock?", "url": "https://github.com/apache/ozone/pull/1164#discussion_r451209121", "createdAt": "2020-07-08T00:02:16Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -659,15 +660,6 @@ public OmKeyInfo lookupKey(OmKeyArgs args, String clientAddress)\n           });\n         }\n       }\n-      // Refresh container pipeline info from SCM", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzNTY4OA==", "bodyText": "Thanks for the review. Sure, will do it.", "url": "https://github.com/apache/ozone/pull/1164#discussion_r451335688", "createdAt": "2020-07-08T07:24:12Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -659,15 +660,6 @@ public OmKeyInfo lookupKey(OmKeyArgs args, String clientAddress)\n           });\n         }\n       }\n-      // Refresh container pipeline info from SCM", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIwOTEyMQ=="}, "originalCommit": {"oid": "ea1206929d39031343fc19969f5a475c65f46f75"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDk2MjIxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDozNzo1OFrOGw48Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNTowODowN1rOGxET6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxNzc3OA==", "bodyText": "The last parameter of getOzoneFileStatus() should have refreshPipeline handled already. Can we pass args.getRefreshPipeline() on line 1901?", "url": "https://github.com/apache/ozone/pull/1164#discussion_r453917778", "createdAt": "2020-07-13T20:37:58Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1877,26 +1897,18 @@ public OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress)\n     String volumeName = args.getVolumeName();\n     String bucketName = args.getBucketName();\n     String keyName = args.getKeyName();\n-\n-    metadataManager.getLock().acquireReadLock(BUCKET_LOCK, volumeName,\n-        bucketName);\n-    try {\n-      OzoneFileStatus fileStatus = getFileStatus(args);\n-      if (fileStatus.isFile()) {\n-        if (args.getRefreshPipeline()) {\n-          refreshPipeline(fileStatus.getKeyInfo());\n-        }\n-        if (args.getSortDatanodes()) {\n-          sortDatanodeInPipeline(fileStatus.getKeyInfo(), clientAddress);\n-        }\n-        return fileStatus.getKeyInfo();\n-      }\n+    OzoneFileStatus fileStatus = getOzoneFileStatus(volumeName, bucketName,\n+            keyName, false);\n       //if key is not of type file or if key is not found we throw an exception\n-    } finally {\n-      metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n-          bucketName);\n+    if (fileStatus != null && fileStatus.isFile()) {\n+      if (args.getRefreshPipeline()) {\n+        refreshPipeline(fileStatus.getKeyInfo());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35471063461c8978378b19ac7123e9f9b848aa59"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEwNDA0MQ==", "bodyText": "Done", "url": "https://github.com/apache/ozone/pull/1164#discussion_r454104041", "createdAt": "2020-07-14T05:08:07Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1877,26 +1897,18 @@ public OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress)\n     String volumeName = args.getVolumeName();\n     String bucketName = args.getBucketName();\n     String keyName = args.getKeyName();\n-\n-    metadataManager.getLock().acquireReadLock(BUCKET_LOCK, volumeName,\n-        bucketName);\n-    try {\n-      OzoneFileStatus fileStatus = getFileStatus(args);\n-      if (fileStatus.isFile()) {\n-        if (args.getRefreshPipeline()) {\n-          refreshPipeline(fileStatus.getKeyInfo());\n-        }\n-        if (args.getSortDatanodes()) {\n-          sortDatanodeInPipeline(fileStatus.getKeyInfo(), clientAddress);\n-        }\n-        return fileStatus.getKeyInfo();\n-      }\n+    OzoneFileStatus fileStatus = getOzoneFileStatus(volumeName, bucketName,\n+            keyName, false);\n       //if key is not of type file or if key is not found we throw an exception\n-    } finally {\n-      metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n-          bucketName);\n+    if (fileStatus != null && fileStatus.isFile()) {\n+      if (args.getRefreshPipeline()) {\n+        refreshPipeline(fileStatus.getKeyInfo());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxNzc3OA=="}, "originalCommit": {"oid": "35471063461c8978378b19ac7123e9f9b848aa59"}, "originalPosition": 193}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDk2NDM5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDozODozMVrOGw49iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNTowODoyMFrOGxEUMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxODA4OQ==", "bodyText": "NIT: sortDatanodes can be handled similarly in getOzoneFileStatus?", "url": "https://github.com/apache/ozone/pull/1164#discussion_r453918089", "createdAt": "2020-07-13T20:38:31Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1877,26 +1897,18 @@ public OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress)\n     String volumeName = args.getVolumeName();\n     String bucketName = args.getBucketName();\n     String keyName = args.getKeyName();\n-\n-    metadataManager.getLock().acquireReadLock(BUCKET_LOCK, volumeName,\n-        bucketName);\n-    try {\n-      OzoneFileStatus fileStatus = getFileStatus(args);\n-      if (fileStatus.isFile()) {\n-        if (args.getRefreshPipeline()) {\n-          refreshPipeline(fileStatus.getKeyInfo());\n-        }\n-        if (args.getSortDatanodes()) {\n-          sortDatanodeInPipeline(fileStatus.getKeyInfo(), clientAddress);\n-        }\n-        return fileStatus.getKeyInfo();\n-      }\n+    OzoneFileStatus fileStatus = getOzoneFileStatus(volumeName, bucketName,\n+            keyName, false);\n       //if key is not of type file or if key is not found we throw an exception\n-    } finally {\n-      metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n-          bucketName);\n+    if (fileStatus != null && fileStatus.isFile()) {\n+      if (args.getRefreshPipeline()) {\n+        refreshPipeline(fileStatus.getKeyInfo());\n+      }\n+      if (args.getSortDatanodes()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35471063461c8978378b19ac7123e9f9b848aa59"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEwNDExMw==", "bodyText": "Done", "url": "https://github.com/apache/ozone/pull/1164#discussion_r454104113", "createdAt": "2020-07-14T05:08:20Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -1877,26 +1897,18 @@ public OmKeyInfo lookupFile(OmKeyArgs args, String clientAddress)\n     String volumeName = args.getVolumeName();\n     String bucketName = args.getBucketName();\n     String keyName = args.getKeyName();\n-\n-    metadataManager.getLock().acquireReadLock(BUCKET_LOCK, volumeName,\n-        bucketName);\n-    try {\n-      OzoneFileStatus fileStatus = getFileStatus(args);\n-      if (fileStatus.isFile()) {\n-        if (args.getRefreshPipeline()) {\n-          refreshPipeline(fileStatus.getKeyInfo());\n-        }\n-        if (args.getSortDatanodes()) {\n-          sortDatanodeInPipeline(fileStatus.getKeyInfo(), clientAddress);\n-        }\n-        return fileStatus.getKeyInfo();\n-      }\n+    OzoneFileStatus fileStatus = getOzoneFileStatus(volumeName, bucketName,\n+            keyName, false);\n       //if key is not of type file or if key is not found we throw an exception\n-    } finally {\n-      metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n-          bucketName);\n+    if (fileStatus != null && fileStatus.isFile()) {\n+      if (args.getRefreshPipeline()) {\n+        refreshPipeline(fileStatus.getKeyInfo());\n+      }\n+      if (args.getSortDatanodes()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxODA4OQ=="}, "originalCommit": {"oid": "35471063461c8978378b19ac7123e9f9b848aa59"}, "originalPosition": 195}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTA2NDk0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowODo1NlrOGxfXNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDo1MDoxMVrOGxuKtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NzI1NA==", "bodyText": "I'm +1 on this JIRA.\nCan we file a follow up JIRA to allow batching refreshPipeline call instead of individual calls to save RPC traffic.", "url": "https://github.com/apache/ozone/pull/1164#discussion_r454547254", "createdAt": "2020-07-14T18:08:56Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -2083,6 +2092,11 @@ private void listStatusFindKeyInTableCache(\n       metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n           bucketName);\n     }\n+    if (args.getRefreshPipeline()) {\n+      for(OzoneFileStatus fileStatus : fileStatusList){\n+        refreshPipeline(fileStatus.getKeyInfo());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69a210011a6a62f856e1b81b5a8848685536fd7a"}, "originalPosition": 220}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4OTgxMw==", "bodyText": "Thanks @xiaoyuyao , I have raised HDDS-3961 to handle this case.", "url": "https://github.com/apache/ozone/pull/1164#discussion_r454789813", "createdAt": "2020-07-15T04:50:11Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -2083,6 +2092,11 @@ private void listStatusFindKeyInTableCache(\n       metadataManager.getLock().releaseReadLock(BUCKET_LOCK, volumeName,\n           bucketName);\n     }\n+    if (args.getRefreshPipeline()) {\n+      for(OzoneFileStatus fileStatus : fileStatusList){\n+        refreshPipeline(fileStatus.getKeyInfo());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NzI1NA=="}, "originalCommit": {"oid": "69a210011a6a62f856e1b81b5a8848685536fd7a"}, "originalPosition": 220}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4166, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}