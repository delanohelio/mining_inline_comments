{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTkyMjAy", "number": 610, "title": "HDDS-2929. Implement ofs://: temp directory mount", "bodyText": "What changes were proposed in this pull request?\nSupport client-side /tmp/ mount for convention / legacy application support. Each user will have their own temp bucket in this implementation.\nWe plan to have globally-shared temp bucket once sticky-bit is implemented in Ozone.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-2929\nHow was this patch tested?\nAdded new test testTempMount.\nNOTES\n\nAn admin must create volume named tmp (hard-coded at the moment) with world access ACL before any user can use /tmp/ correctly. i.e. Run the following for cluster initial setup:\n\nozone sh volume create tmp\nozone sh volume setacl tmp -al world::a\n\nWhen a user is trying to read or write under /tmp/, a bucket with that user's name will be automatically created under volume tmp during the first operation: This is outdated. Please follow \"Usage\" section for testing.\n\nbash-4.2$ HADOOP_USER_NAME=user2 ozone fs -ls ofs://om/tmp/\n2020-02-20 12:02:08,931 [main] INFO rpc.RpcClient: Creating Bucket: tmp/user2\n\nbash-4.2$ HADOOP_USER_NAME=user1 ozone fs -put README.md ofs://om/tmp/\n2020-02-20 12:02:26,945 [main] INFO rpc.RpcClient: Creating Bucket: tmp/user1\n\nbash-4.2$ HADOOP_USER_NAME=user1 ozone fs -ls ofs://om/tmp/\nFound 1 items\n-rw-rw-rw-   1 user1 user1       3813 2020-02-20 12:02 ofs://om/tmp/README.md\n\nbash-4.2$ HADOOP_USER_NAME=user2 ozone fs -ls ofs://om/tmp/\nUsage\nTo sum up, in order to use /tmp/ mount at the moment in OFS, there are two steps:\n\nAn admin need to run the below two commands during cluster setup. This only need to be done once.\n\nozone sh volume create tmp\nozone sh volume setacl tmp -al world::a\n\n\nEach user who wants to use /tmp/ mount need to run the following command once before using /tmp/:\n\nozone fs -mkdir ofs://om/tmp/", "createdAt": "2020-02-27T01:37:01Z", "url": "https://github.com/apache/ozone/pull/610", "merged": true, "mergeCommit": {"oid": "c410c4d329a839547bbf9491b5bf4562efcda59e"}, "closed": true, "closedAt": "2020-03-07T01:33:02Z", "author": {"login": "smengcl"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIZhgXAFqTM2NTYwMDk0Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLH6m6AFqTM3MDY2NjcwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NjAwOTQ2", "url": "https://github.com/apache/ozone/pull/610#pullrequestreview-365600946", "createdAt": "2020-02-27T11:18:26Z", "commit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMToxODoyN1rOFvOdrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMToyMDoxN1rOFvOguQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NDM2Ng==", "bodyText": "Is it better to have a 'DEFAULT_USER' string to replace a null input?", "url": "https://github.com/apache/ozone/pull/610#discussion_r385064366", "createdAt": "2020-02-27T11:18:27Z", "author": {"login": "timmylicheng"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -67,10 +75,9 @@ private void initOFSPath(String pathStr) {\n       // TODO: Compare a keyword list instead for future expansion.\n       if (firstToken.equals(OFS_MOUNT_NAME_TMP)) {\n         mountName = firstToken;\n-        // TODO: Retrieve volume and bucket of the mount from user protobuf.\n-        //  Leave them hard-coded just for now. Will be addressed in HDDS-2929\n-        volumeName = \"tempVolume\";\n-        bucketName = \"tempBucket\";\n+        // Future: retrieve volume and bucket from UserVolumeInfo\n+        volumeName = OFS_MOUNT_TMP_VOLUMENAME;\n+        bucketName = getTempMountBucketName(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NDcxMQ==", "bodyText": "Do you mean to comment a TODO here?", "url": "https://github.com/apache/ozone/pull/610#discussion_r385064711", "createdAt": "2020-02-27T11:19:17Z", "author": {"login": "timmylicheng"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -67,10 +75,9 @@ private void initOFSPath(String pathStr) {\n       // TODO: Compare a keyword list instead for future expansion.\n       if (firstToken.equals(OFS_MOUNT_NAME_TMP)) {\n         mountName = firstToken;\n-        // TODO: Retrieve volume and bucket of the mount from user protobuf.\n-        //  Leave them hard-coded just for now. Will be addressed in HDDS-2929\n-        volumeName = \"tempVolume\";\n-        bucketName = \"tempBucket\";\n+        // Future: retrieve volume and bucket from UserVolumeInfo", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NTE0NQ==", "bodyText": "NIT. 'conf' may be a more consistent choice of naming in Ozone repo.", "url": "https://github.com/apache/ozone/pull/610#discussion_r385065145", "createdAt": "2020-02-27T11:20:17Z", "author": {"login": "timmylicheng"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -113,12 +125,12 @@ public void teardown() {\n \n   @Test\n   public void testOzoneFsServiceLoader() throws IOException {\n-    OzoneConfiguration conf = new OzoneConfiguration();\n+    OzoneConfiguration cfg = new OzoneConfiguration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10703f7a39e6bca0ed39f40c489525657c51eecb", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/10703f7a39e6bca0ed39f40c489525657c51eecb", "committedDate": "2020-02-28T21:19:50Z", "message": "Implement simple client-side only version of temp mount.\n\n1. An admin must create volume \"tmp\" with world access ACL before any user can use /tmp/\n2. When a user is trying to write under /tmp/, a bucket with that user's name will be automatically created under volume \"tmp\"\n\n(cherry picked from commit 53416c52717ad788516000831d2df96e171f4ba0)\n\nConflicts:\nhadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java\nhadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae1623a6ce118512dd8644c71488b1c015ca37ff", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/ae1623a6ce118512dd8644c71488b1c015ca37ff", "committedDate": "2020-02-28T21:19:50Z", "message": "getBucket: Always create bucket if volumeStr matches \"tmp\". This implies that any operations that reads /tmp/ will also create bucket for that user. Tested in shell:\n\n# Prep\nbash-4.2$ ozone sh volume create tmp\nbash-4.2$ ozone sh volume getacl tmp\n[ {\n  \"type\" : \"USER\",\n  \"name\" : \"hadoop\",\n  \"aclScope\" : \"ACCESS\",\n  \"aclList\" : [ \"ALL\" ]\n}, {\n  \"type\" : \"GROUP\",\n  \"name\" : \"users\",\n  \"aclScope\" : \"ACCESS\",\n  \"aclList\" : [ \"ALL\" ]\n} ]\nbash-4.2$ ozone sh volume setacl tmp -al world::all\nAcl set successfully.\nbash-4.2$ ozone sh volume getacl tmp\n[ {\n  \"type\" : \"WORLD\",\n  \"name\" : \"WORLD\",\n  \"aclScope\" : \"ACCESS\",\n  \"aclList\" : [ \"LIST\", \"ALL\" ]\n} ]\n\n# Commands\nbash-4.2$ HADOOP_USER_NAME=user2 ozone fs -ls ofs://om/tmp/\n2020-02-20 12:02:08,931 [main] INFO rpc.RpcClient: Creating Bucket: tmp/user2\nbash-4.2$ HADOOP_USER_NAME=user1 ozone fs -put README.md ofs://om/tmp/\n2020-02-20 12:02:26,945 [main] INFO rpc.RpcClient: Creating Bucket: tmp/user1\nbash-4.2$ HADOOP_USER_NAME=user1 ozone fs -ls ofs://om/tmp/\nFound 1 items\n-rw-rw-rw-   1 user1 user1       3813 2020-02-20 12:02 ofs://om/tmp/README.md\nbash-4.2$ HADOOP_USER_NAME=user2 ozone fs -ls ofs://om/tmp/\n(empty result, proves that user1 and user2 have separate temp bucket)\n\n(cherry picked from commit dc512dcfad3bbc21f1e6e7119047edc6fd0afaf0)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26ad79e803a85f5392548bb04acaa12448af10ae", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/26ad79e803a85f5392548bb04acaa12448af10ae", "committedDate": "2020-02-28T21:19:50Z", "message": "getTempMountBucketName: Return MD5 hash of username instead to avoid invalid characters in username for a bucket name. e.g. om/om@EXAMPLE.COM\n\n(cherry picked from commit e756323e3d8bf2cb29394bab838a7ca2e4a8118f)\n\nConflicts:\nhadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9410e763b70689c774457835e3643d74d1c3057", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/e9410e763b70689c774457835e3643d74d1c3057", "committedDate": "2020-02-28T21:19:50Z", "message": "Remove unused imports.\n\n(cherry picked from commit e83fdc4d0d663207ad957df1b8fbf7848d73e12c)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86da4e0cd1d8e6faaa7d984cb553f074ec0787d7", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/86da4e0cd1d8e6faaa7d984cb553f074ec0787d7", "committedDate": "2020-02-28T21:19:50Z", "message": "Add OFS impl in ozonesecure docker-config for manual testing and robot tests.\n\n(cherry picked from commit 16eb066d57efd165111ada01c16dee3d25a7e904)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c117a9875a1ce99c858dad79f28680044fe7bd72", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/c117a9875a1ce99c858dad79f28680044fe7bd72", "committedDate": "2020-02-28T21:20:12Z", "message": "Expand test to check file creation/existence."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0416d3c43e3ead38020ac1e8116d4b6c39ba92b", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/a0416d3c43e3ead38020ac1e8116d4b6c39ba92b", "committedDate": "2020-02-28T21:20:12Z", "message": "Rename cfg to confTestLoader."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eb3287314cd1ef2cdf92067bfeb09bb99731adc", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/9eb3287314cd1ef2cdf92067bfeb09bb99731adc", "committedDate": "2020-02-28T21:20:12Z", "message": "Add getTempMountBucketNameOfCurrentUser() to improve readability; improve comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156", "committedDate": "2020-02-28T21:20:12Z", "message": "Improve comment."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23ca1c19ee1d960a9bcca83236ea0c980d573561", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/23ca1c19ee1d960a9bcca83236ea0c980d573561", "committedDate": "2020-02-27T23:18:13Z", "message": "Improve comment."}, "afterCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156", "committedDate": "2020-02-28T21:20:12Z", "message": "Improve comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTcxMzMz", "url": "https://github.com/apache/ozone/pull/610#pullrequestreview-367571333", "createdAt": "2020-03-02T22:19:12Z", "commit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoxOToxMlrOFwxacQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoxOToxMlrOFwxacQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NTU1Mw==", "bodyText": "Do we create the tmp bucket even for read operation?", "url": "https://github.com/apache/ozone/pull/610#discussion_r386685553", "createdAt": "2020-03-02T22:19:12Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -213,7 +213,9 @@ private OzoneBucket getBucket(String volumeStr, String bucketStr,\n     try {\n       bucket = proxy.getBucketDetails(volumeStr, bucketStr);\n     } catch (OMException ex) {\n-      if (createIfNotExist) {\n+      // Note: always create bucket if volumeStr matches \"tmp\" so -put works\n+      if (createIfNotExist ||\n+          volumeStr.equals(OFSPath.OFS_MOUNT_TMP_VOLUMENAME)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTcyMTg1", "url": "https://github.com/apache/ozone/pull/610#pullrequestreview-367572185", "createdAt": "2020-03-02T22:20:34Z", "commit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoyMDozNFrOFwxc7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoyMDozNFrOFwxc7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NjE4OQ==", "bodyText": "How do we allow userA to access userB's tmp bucket? This may be needed for the ETL workload where an injest process run as user A and the process process run as user B.", "url": "https://github.com/apache/ozone/pull/610#discussion_r386686189", "createdAt": "2020-03-02T22:20:34Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -44,7 +48,7 @@\n    * /vol1/buc2/dir3/key4  vol1           buc2           (empty)      dir3/key4\n    * /vol1/buc2            vol1           buc2           (empty)      (empty)\n    * /vol1                 vol1           (empty)        (empty)      (empty)\n-   * /tmp/dir3/key4        tempVolume     tempBucket     tmp          dir3/key4\n+   * /tmp/dir3/key4        tmp            <username>     tmp          dir3/key4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTc0MDIx", "url": "https://github.com/apache/ozone/pull/610#pullrequestreview-367574021", "createdAt": "2020-03-02T22:24:01Z", "commit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoyNDowMlrOFwxi8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoyNDowMlrOFwxi8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NzczMA==", "bodyText": "why do we need to catch the exception here? This should not fail, if it does, the exception can bubble up directly.", "url": "https://github.com/apache/ozone/pull/610#discussion_r386687730", "createdAt": "2020-03-02T22:24:02Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -174,4 +181,32 @@ public boolean isRoot() {\n   public boolean isVolume() {\n     return this.getBucketName().isEmpty() && !this.getVolumeName().isEmpty();\n   }\n+\n+  /**\n+   * Get the bucket name of temp for given username.\n+   * @param username Input user name String. Mustn't be null.\n+   * @return Username MD5 hash in hex digits.\n+   */\n+  @VisibleForTesting\n+  static String getTempMountBucketName(String username) {\n+    Preconditions.checkNotNull(username);\n+    // TODO: Improve this to \"slugify(username)-md5(username)\" for better\n+    //  readability?\n+    return DigestUtils.md5Hex(username);\n+  }\n+\n+  /**\n+   * Get the bucket name of temp for the current user from UserGroupInformation.\n+   * @return Username MD5 hash in hex digits.\n+   */\n+  @VisibleForTesting\n+  static String getTempMountBucketNameOfCurrentUser() {\n+    String username;\n+    try {\n+      username = UserGroupInformation.getCurrentUser().getUserName();\n+    } catch (IOException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTc0MjUy", "url": "https://github.com/apache/ozone/pull/610#pullrequestreview-367574252", "createdAt": "2020-03-02T22:24:28Z", "commit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d4164b153386c5e476f27df6420512b60894d5d", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/1d4164b153386c5e476f27df6420512b60894d5d", "committedDate": "2020-03-02T23:57:03Z", "message": "Don't create temp bucket for read operations; make getTempMountBucketNameOfCurrentUser throw."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjY2MDcz", "url": "https://github.com/apache/ozone/pull/610#pullrequestreview-370666073", "createdAt": "2020-03-06T22:31:08Z", "commit": {"oid": "1d4164b153386c5e476f27df6420512b60894d5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjozMTowOFrOFzJZJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjozMTowOFrOFzJZJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE3NTU4OQ==", "bodyText": "NIT: should we update the comment to match with the code?", "url": "https://github.com/apache/ozone/pull/610#discussion_r389175589", "createdAt": "2020-03-06T22:31:08Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -44,7 +48,7 @@\n    * /vol1/buc2/dir3/key4  vol1           buc2           (empty)      dir3/key4\n    * /vol1/buc2            vol1           buc2           (empty)      (empty)\n    * /vol1                 vol1           (empty)        (empty)      (empty)\n-   * /tmp/dir3/key4        tempVolume     tempBucket     tmp          dir3/key4\n+   * /tmp/dir3/key4        tmp            <username>     tmp          dir3/key4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d4164b153386c5e476f27df6420512b60894d5d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjY2Mjc0", "url": "https://github.com/apache/ozone/pull/610#pullrequestreview-370666274", "createdAt": "2020-03-06T22:31:37Z", "commit": {"oid": "1d4164b153386c5e476f27df6420512b60894d5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjozMTozN1rOFzJZ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjozMTozN1rOFzJZ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE3NTc2NA==", "bodyText": "NIT: Can we use the name directly to make it more user friendly? Given it is transparent to the ofs client access, I think it is OK as-is to avoid confliction.", "url": "https://github.com/apache/ozone/pull/610#discussion_r389175764", "createdAt": "2020-03-06T22:31:37Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -174,4 +185,27 @@ public boolean isRoot() {\n   public boolean isVolume() {\n     return this.getBucketName().isEmpty() && !this.getVolumeName().isEmpty();\n   }\n+\n+  /**\n+   * Get the bucket name of temp for given username.\n+   * @param username Input user name String. Mustn't be null.\n+   * @return Username MD5 hash in hex digits.\n+   */\n+  @VisibleForTesting\n+  static String getTempMountBucketName(String username) {\n+    Preconditions.checkNotNull(username);\n+    // TODO: Improve this to \"slugify(username)-md5(username)\" for better\n+    //  readability?\n+    return DigestUtils.md5Hex(username);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d4164b153386c5e476f27df6420512b60894d5d"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjY2NzAy", "url": "https://github.com/apache/ozone/pull/610#pullrequestreview-370666702", "createdAt": "2020-03-06T22:32:36Z", "commit": {"oid": "1d4164b153386c5e476f27df6420512b60894d5d"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3639, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}