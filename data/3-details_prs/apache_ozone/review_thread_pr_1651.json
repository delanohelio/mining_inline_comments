{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMzQwODky", "number": 1651, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTowMzoyN1rOFA-lsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOTowMTowMVrOFD4kvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTY5Nzc4OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/StorageContainerManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTowMzoyN1rOH_h7EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjoyMDoyNFrOICsI-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM3ODEyOA==", "bodyText": "Nit. Can be UpgradeFinalizer<StorageContainerManager>.", "url": "https://github.com/apache/ozone/pull/1651#discussion_r536378128", "createdAt": "2020-12-04T21:03:27Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/StorageContainerManager.java", "diffHunk": "@@ -211,6 +214,7 @@\n   private PipelineChoosePolicy pipelineChoosePolicy;\n \n   private HDDSLayoutVersionManager scmLayoutVersionManager;\n+  private UpgradeFinalizer upgradeFinalizer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7bf9f4bddb37c5b24a845acd4dcd8764918650"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MTI1Nw==", "bodyText": "yup. Made the changes as suggested.", "url": "https://github.com/apache/ozone/pull/1651#discussion_r539691257", "createdAt": "2020-12-09T22:20:24Z", "author": {"login": "prashantpogde"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/StorageContainerManager.java", "diffHunk": "@@ -211,6 +214,7 @@\n   private PipelineChoosePolicy pipelineChoosePolicy;\n \n   private HDDSLayoutVersionManager scmLayoutVersionManager;\n+  private UpgradeFinalizer upgradeFinalizer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM3ODEyOA=="}, "originalCommit": {"oid": "ca7bf9f4bddb37c5b24a845acd4dcd8764918650"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTcwNzU4OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/ScmSubcommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTowNjozMFrOH_iAew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjoyMTowOVrOICsKdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM3OTUxNQ==", "bodyText": "Why do we need ScmSubCommand to extend FinalizeUpgradeBaseCommand? Shouldn't the inheritance be the other way?", "url": "https://github.com/apache/ozone/pull/1651#discussion_r536379515", "createdAt": "2020-12-04T21:06:30Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/ScmSubcommand.java", "diffHunk": "@@ -17,21 +17,25 @@\n  */\n package org.apache.hadoop.hdds.scm.cli;\n \n+import org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeBaseCommand;\n import org.apache.hadoop.hdds.scm.client.ScmClient;\n import picocli.CommandLine;\n \n import java.io.IOException;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutionException;\n \n /**\n  * Base class for admin commands that connect via SCM client.\n  */\n-public abstract class ScmSubcommand implements Callable<Void> {\n+public abstract class ScmSubcommand extends FinalizeUpgradeBaseCommand", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7bf9f4bddb37c5b24a845acd4dcd8764918650"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MTYzNw==", "bodyText": "I changed the structure as discussed over call so this is not applicable anymore.", "url": "https://github.com/apache/ozone/pull/1651#discussion_r539691637", "createdAt": "2020-12-09T22:21:09Z", "author": {"login": "prashantpogde"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/ScmSubcommand.java", "diffHunk": "@@ -17,21 +17,25 @@\n  */\n package org.apache.hadoop.hdds.scm.cli;\n \n+import org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeBaseCommand;\n import org.apache.hadoop.hdds.scm.client.ScmClient;\n import picocli.CommandLine;\n \n import java.io.IOException;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutionException;\n \n /**\n  * Base class for admin commands that connect via SCM client.\n  */\n-public abstract class ScmSubcommand implements Callable<Void> {\n+public abstract class ScmSubcommand extends FinalizeUpgradeBaseCommand", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM3OTUxNQ=="}, "originalCommit": {"oid": "ca7bf9f4bddb37c5b24a845acd4dcd8764918650"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTc1Mzc3OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/upgrade/FinalizeScmUpgradeSubcommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMToyMDozN1rOH_iadg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjoyNDoxOFrOICsRcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM4NjE2Ng==", "bodyText": "With this patch I see the CLI different for OM and SCM.\nFor SCM, it is something like ozone admin upgrade FinalizeSCM\nFor OM, it is ozone admin om finalizeupgrade\nCan we make sure it is common across OM and SCM? I believe the following are OK ->\nozone admin om/scm finalizeupgrade\nozone admin upgrade finalize-om-upgrade/finalize-scm-upgrade\nIn Ozone, the convention is to have CLI operations use lower case with \"-\" between words as needed.", "url": "https://github.com/apache/ozone/pull/1651#discussion_r536386166", "createdAt": "2020-12-04T21:20:37Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/upgrade/FinalizeScmUpgradeSubcommand.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.cli.upgrade;\n+\n+import java.io.IOException;\n+import java.util.UUID;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+\n+import org.apache.hadoop.hdds.cli.HddsVersionProvider;\n+import org.apache.hadoop.hdds.scm.cli.ScmSubcommand;\n+import org.apache.hadoop.hdds.scm.client.ScmClient;\n+import org.apache.hadoop.ozone.upgrade.UpgradeException;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer.StatusAndMessages;\n+\n+import picocli.CommandLine;\n+\n+/**\n+ * Handler of Finalize SCM command.\n+ */\n+@CommandLine.Command(\n+    name = \"FinalizeScm\",\n+    description = \"Finalize SCM Upgrade\",\n+    mixinStandardHelpOptions = true,\n+    versionProvider = HddsVersionProvider.class)\n+\n+public class FinalizeScmUpgradeSubcommand extends ScmSubcommand {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7bf9f4bddb37c5b24a845acd4dcd8764918650"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MzQyNw==", "bodyText": "yes! I changed  it to\nozone admin om/scm finalizeupgrade", "url": "https://github.com/apache/ozone/pull/1651#discussion_r539693427", "createdAt": "2020-12-09T22:24:18Z", "author": {"login": "prashantpogde"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/upgrade/FinalizeScmUpgradeSubcommand.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.cli.upgrade;\n+\n+import java.io.IOException;\n+import java.util.UUID;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+\n+import org.apache.hadoop.hdds.cli.HddsVersionProvider;\n+import org.apache.hadoop.hdds.scm.cli.ScmSubcommand;\n+import org.apache.hadoop.hdds.scm.client.ScmClient;\n+import org.apache.hadoop.ozone.upgrade.UpgradeException;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer.StatusAndMessages;\n+\n+import picocli.CommandLine;\n+\n+/**\n+ * Handler of Finalize SCM command.\n+ */\n+@CommandLine.Command(\n+    name = \"FinalizeScm\",\n+    description = \"Finalize SCM Upgrade\",\n+    mixinStandardHelpOptions = true,\n+    versionProvider = HddsVersionProvider.class)\n+\n+public class FinalizeScmUpgradeSubcommand extends ScmSubcommand {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM4NjE2Ng=="}, "originalCommit": {"oid": "ca7bf9f4bddb37c5b24a845acd4dcd8764918650"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODkyOTE5OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/upgrade/BasicUpgradeFinalizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzo0Mjo1NVrOICuoHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMTozMjozOFrOICxRyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTczMTk5Ng==", "bodyText": "If we add here, then OM finalization will also print out the message. Can we print out the message after the actual work is done (freeze pipeline creation, pipelines are closed etc)?", "url": "https://github.com/apache/ozone/pull/1651#discussion_r539731996", "createdAt": "2020-12-09T23:42:55Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/upgrade/BasicUpgradeFinalizer.java", "diffHunk": "@@ -218,14 +218,15 @@ private void persistStorage(Storage config) throws IOException {\n \n   protected void emitNOOPMsg(String feature) {\n     String msg = \"No finalization work defined for feature: \" + feature + \".\";\n-    String msg2 = \"Skipping.\";\n \n     logAndEmit(msg);\n-    logAndEmit(msg2);\n   }\n \n   protected void emitStartingMsg() {\n-    String msg = \"Finalization started.\";\n+    String msg = \"Finalization started.\\n\";\n+    msg += \"Existing pipelines and containers will be closed during Upgrade.\\n\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867a4b587f87aa35131ac826e600ed72f58422c6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc3NTQzNQ==", "bodyText": "yup, I thought I was making change in ScmFinalizer. Fixed now.", "url": "https://github.com/apache/ozone/pull/1651#discussion_r539775435", "createdAt": "2020-12-10T01:32:38Z", "author": {"login": "prashantpogde"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/upgrade/BasicUpgradeFinalizer.java", "diffHunk": "@@ -218,14 +218,15 @@ private void persistStorage(Storage config) throws IOException {\n \n   protected void emitNOOPMsg(String feature) {\n     String msg = \"No finalization work defined for feature: \" + feature + \".\";\n-    String msg2 = \"Skipping.\";\n \n     logAndEmit(msg);\n-    logAndEmit(msg2);\n   }\n \n   protected void emitStartingMsg() {\n-    String msg = \"Finalization started.\";\n+    String msg = \"Finalization started.\\n\";\n+    msg += \"Existing pipelines and containers will be closed during Upgrade.\\n\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTczMTk5Ng=="}, "originalCommit": {"oid": "867a4b587f87aa35131ac826e600ed72f58422c6"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDc2NjIwOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/upgrade/FinalizeScmUpgradeSubcommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMDoyMjo1NFrOIDjh2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNzo0MTo0NlrOIDsrjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5ODc0NQ==", "bodyText": "I think, here we should just throw the cause of the ExecutionException wrapped into an IOException here.\nI believe it is a better approach, as with that other subcommands are not forced to declare to throw two types of exceptions.\nHowever as an alternative I am absolutely fine with declaring execute to throw an Exception, and do not mark specific Exceptions to be thrown, as the problem I see is the number of exceptions that method needs to declare and seems to declare implicitly for all SCM subcommands.", "url": "https://github.com/apache/ozone/pull/1651#discussion_r540598745", "createdAt": "2020-12-11T00:22:54Z", "author": {"login": "fapifta"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/upgrade/FinalizeScmUpgradeSubcommand.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.cli.upgrade;\n+\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitCancellationMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitExitMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitFinishedMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitGeneralErrorMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.handleInvalidRequestAfterInitiatingFinalization;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isDone;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isFinalized;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isInprogress;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isStarting;\n+\n+import java.io.IOException;\n+import java.util.UUID;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+\n+import org.apache.hadoop.hdds.cli.HddsVersionProvider;\n+import org.apache.hadoop.hdds.scm.cli.ScmSubcommand;\n+import org.apache.hadoop.hdds.scm.client.ScmClient;\n+import org.apache.hadoop.ozone.upgrade.UpgradeException;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer.StatusAndMessages;\n+\n+import picocli.CommandLine;\n+\n+/**\n+ * Handler of Finalize SCM command.\n+ */\n+@CommandLine.Command(\n+    name = \"finalizeupgrade\",\n+    description = \"Finalize SCM Upgrade\",\n+    mixinStandardHelpOptions = true,\n+    versionProvider = HddsVersionProvider.class)\n+\n+public class FinalizeScmUpgradeSubcommand extends ScmSubcommand {\n+  @CommandLine.Option(\n+      names = {\"--takeover\"},\n+      description = \"Forces takeover of monitoring from another client, if \"\n+          + \"finalization has already been started and did not finish yet.\"\n+  )\n+  private boolean force;\n+\n+  @Override\n+  public void execute(ScmClient scmClient)\n+      throws IOException, ExecutionException {\n+    String upgradeClientID = \"Upgrade-Client-\" + UUID.randomUUID().toString();\n+    try {\n+      StatusAndMessages finalizationResponse =\n+          scmClient.finalizeScmUpgrade(upgradeClientID);\n+      if (isFinalized(finalizationResponse.status())){\n+        System.out.println(\"Upgrade has already been finalized.\");\n+        emitExitMsg();\n+        return;\n+      } else if (!isStarting(finalizationResponse.status())){\n+        System.err.println(\"Invalid response from Storage Container Manager.\");\n+        System.err.println(\n+            \"Current finalization status is: \" + finalizationResponse.status()\n+        );\n+        throw new IOException(\"Exiting...\");\n+      }\n+    } catch (UpgradeException e) {\n+      handleInvalidRequestAfterInitiatingFinalization(force, e);\n+    }\n+    monitorAndWaitFinalization(scmClient, upgradeClientID);\n+    return;\n+  }\n+\n+  private void monitorAndWaitFinalization(ScmClient client,\n+                                          String upgradeClientID) throws\n+      ExecutionException {\n+    ExecutorService exec = Executors.newSingleThreadExecutor();\n+    Future<?> monitor =\n+        exec.submit(new UpgradeMonitor(client, upgradeClientID, force));\n+    try {\n+      monitor.get();\n+      emitFinishedMsg(\"Storage Container Manager\");\n+    } catch (CancellationException |InterruptedException e) {\n+      emitCancellationMsg(\"Storage Container Manager\");\n+    } catch (ExecutionException e) {\n+      emitGeneralErrorMsg();\n+      throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39bf2c5aedbe2897c81590143d7d7f9c642ed9f1"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0ODY4Ng==", "bodyText": "yup, I will make the change.", "url": "https://github.com/apache/ozone/pull/1651#discussion_r540748686", "createdAt": "2020-12-11T07:41:46Z", "author": {"login": "prashantpogde"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/upgrade/FinalizeScmUpgradeSubcommand.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.cli.upgrade;\n+\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitCancellationMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitExitMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitFinishedMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitGeneralErrorMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.handleInvalidRequestAfterInitiatingFinalization;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isDone;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isFinalized;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isInprogress;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isStarting;\n+\n+import java.io.IOException;\n+import java.util.UUID;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+\n+import org.apache.hadoop.hdds.cli.HddsVersionProvider;\n+import org.apache.hadoop.hdds.scm.cli.ScmSubcommand;\n+import org.apache.hadoop.hdds.scm.client.ScmClient;\n+import org.apache.hadoop.ozone.upgrade.UpgradeException;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer.StatusAndMessages;\n+\n+import picocli.CommandLine;\n+\n+/**\n+ * Handler of Finalize SCM command.\n+ */\n+@CommandLine.Command(\n+    name = \"finalizeupgrade\",\n+    description = \"Finalize SCM Upgrade\",\n+    mixinStandardHelpOptions = true,\n+    versionProvider = HddsVersionProvider.class)\n+\n+public class FinalizeScmUpgradeSubcommand extends ScmSubcommand {\n+  @CommandLine.Option(\n+      names = {\"--takeover\"},\n+      description = \"Forces takeover of monitoring from another client, if \"\n+          + \"finalization has already been started and did not finish yet.\"\n+  )\n+  private boolean force;\n+\n+  @Override\n+  public void execute(ScmClient scmClient)\n+      throws IOException, ExecutionException {\n+    String upgradeClientID = \"Upgrade-Client-\" + UUID.randomUUID().toString();\n+    try {\n+      StatusAndMessages finalizationResponse =\n+          scmClient.finalizeScmUpgrade(upgradeClientID);\n+      if (isFinalized(finalizationResponse.status())){\n+        System.out.println(\"Upgrade has already been finalized.\");\n+        emitExitMsg();\n+        return;\n+      } else if (!isStarting(finalizationResponse.status())){\n+        System.err.println(\"Invalid response from Storage Container Manager.\");\n+        System.err.println(\n+            \"Current finalization status is: \" + finalizationResponse.status()\n+        );\n+        throw new IOException(\"Exiting...\");\n+      }\n+    } catch (UpgradeException e) {\n+      handleInvalidRequestAfterInitiatingFinalization(force, e);\n+    }\n+    monitorAndWaitFinalization(scmClient, upgradeClientID);\n+    return;\n+  }\n+\n+  private void monitorAndWaitFinalization(ScmClient client,\n+                                          String upgradeClientID) throws\n+      ExecutionException {\n+    ExecutorService exec = Executors.newSingleThreadExecutor();\n+    Future<?> monitor =\n+        exec.submit(new UpgradeMonitor(client, upgradeClientID, force));\n+    try {\n+      monitor.get();\n+      emitFinishedMsg(\"Storage Container Manager\");\n+    } catch (CancellationException |InterruptedException e) {\n+      emitCancellationMsg(\"Storage Container Manager\");\n+    } catch (ExecutionException e) {\n+      emitGeneralErrorMsg();\n+      throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5ODc0NQ=="}, "originalCommit": {"oid": "39bf2c5aedbe2897c81590143d7d7f9c642ed9f1"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjE2OTU4OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/upgrade/FinalizeScmUpgradeSubcommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOTowMTowMVrOIDvRhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo1OTo1N1rOIEF_fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc5MTE3Mw==", "bodyText": "Thank you for making this change, one more thing still regarding this part, I think it is more beneficial to do not swallow the stack trace of this exception and having it reported in the output, so can we provide e.getCause() instead of e.getMessage() here to the wrapping IOException?", "url": "https://github.com/apache/ozone/pull/1651#discussion_r540791173", "createdAt": "2020-12-11T09:01:01Z", "author": {"login": "fapifta"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/upgrade/FinalizeScmUpgradeSubcommand.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.cli.upgrade;\n+\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitCancellationMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitExitMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitFinishedMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitGeneralErrorMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.handleInvalidRequestAfterInitiatingFinalization;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isDone;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isFinalized;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isInprogress;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isStarting;\n+\n+import java.io.IOException;\n+import java.util.UUID;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+\n+import org.apache.hadoop.hdds.cli.HddsVersionProvider;\n+import org.apache.hadoop.hdds.scm.cli.ScmSubcommand;\n+import org.apache.hadoop.hdds.scm.client.ScmClient;\n+import org.apache.hadoop.ozone.upgrade.UpgradeException;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer.StatusAndMessages;\n+\n+import picocli.CommandLine;\n+\n+/**\n+ * Handler of Finalize SCM command.\n+ */\n+@CommandLine.Command(\n+    name = \"finalizeupgrade\",\n+    description = \"Finalize SCM Upgrade\",\n+    mixinStandardHelpOptions = true,\n+    versionProvider = HddsVersionProvider.class)\n+\n+public class FinalizeScmUpgradeSubcommand extends ScmSubcommand {\n+  @CommandLine.Option(\n+      names = {\"--takeover\"},\n+      description = \"Forces takeover of monitoring from another client, if \"\n+          + \"finalization has already been started and did not finish yet.\"\n+  )\n+  private boolean force;\n+\n+  @Override\n+  public void execute(ScmClient scmClient) throws IOException {\n+    String upgradeClientID = \"Upgrade-Client-\" + UUID.randomUUID().toString();\n+    try {\n+      StatusAndMessages finalizationResponse =\n+          scmClient.finalizeScmUpgrade(upgradeClientID);\n+      if (isFinalized(finalizationResponse.status())){\n+        System.out.println(\"Upgrade has already been finalized.\");\n+        emitExitMsg();\n+        return;\n+      } else if (!isStarting(finalizationResponse.status())){\n+        System.err.println(\"Invalid response from Storage Container Manager.\");\n+        System.err.println(\n+            \"Current finalization status is: \" + finalizationResponse.status()\n+        );\n+        throw new IOException(\"Exiting...\");\n+      }\n+    } catch (UpgradeException e) {\n+      handleInvalidRequestAfterInitiatingFinalization(force, e);\n+    }\n+    monitorAndWaitFinalization(scmClient, upgradeClientID);\n+    return;\n+  }\n+\n+  private void monitorAndWaitFinalization(ScmClient client,\n+                                          String upgradeClientID)\n+      throws IOException {\n+    ExecutorService exec = Executors.newSingleThreadExecutor();\n+    Future<?> monitor =\n+        exec.submit(new UpgradeMonitor(client, upgradeClientID, force));\n+    try {\n+      monitor.get();\n+      emitFinishedMsg(\"Storage Container Manager\");\n+    } catch (CancellationException |InterruptedException e) {\n+      emitCancellationMsg(\"Storage Container Manager\");\n+    } catch (ExecutionException e) {\n+      emitGeneralErrorMsg();\n+      throw new IOException(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "128ec4a824bb05972a6f524739516361b9bf80d4"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE2MzM4OA==", "bodyText": "Done.", "url": "https://github.com/apache/ozone/pull/1651#discussion_r541163388", "createdAt": "2020-12-11T18:59:57Z", "author": {"login": "prashantpogde"}, "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/upgrade/FinalizeScmUpgradeSubcommand.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hdds.scm.cli.upgrade;\n+\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitCancellationMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitExitMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitFinishedMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.emitGeneralErrorMsg;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.handleInvalidRequestAfterInitiatingFinalization;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isDone;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isFinalized;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isInprogress;\n+import static org.apache.hadoop.hdds.scm.cli.upgrade.FinalizeUpgradeCommandUtil.isStarting;\n+\n+import java.io.IOException;\n+import java.util.UUID;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+\n+import org.apache.hadoop.hdds.cli.HddsVersionProvider;\n+import org.apache.hadoop.hdds.scm.cli.ScmSubcommand;\n+import org.apache.hadoop.hdds.scm.client.ScmClient;\n+import org.apache.hadoop.ozone.upgrade.UpgradeException;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer;\n+import org.apache.hadoop.ozone.upgrade.UpgradeFinalizer.StatusAndMessages;\n+\n+import picocli.CommandLine;\n+\n+/**\n+ * Handler of Finalize SCM command.\n+ */\n+@CommandLine.Command(\n+    name = \"finalizeupgrade\",\n+    description = \"Finalize SCM Upgrade\",\n+    mixinStandardHelpOptions = true,\n+    versionProvider = HddsVersionProvider.class)\n+\n+public class FinalizeScmUpgradeSubcommand extends ScmSubcommand {\n+  @CommandLine.Option(\n+      names = {\"--takeover\"},\n+      description = \"Forces takeover of monitoring from another client, if \"\n+          + \"finalization has already been started and did not finish yet.\"\n+  )\n+  private boolean force;\n+\n+  @Override\n+  public void execute(ScmClient scmClient) throws IOException {\n+    String upgradeClientID = \"Upgrade-Client-\" + UUID.randomUUID().toString();\n+    try {\n+      StatusAndMessages finalizationResponse =\n+          scmClient.finalizeScmUpgrade(upgradeClientID);\n+      if (isFinalized(finalizationResponse.status())){\n+        System.out.println(\"Upgrade has already been finalized.\");\n+        emitExitMsg();\n+        return;\n+      } else if (!isStarting(finalizationResponse.status())){\n+        System.err.println(\"Invalid response from Storage Container Manager.\");\n+        System.err.println(\n+            \"Current finalization status is: \" + finalizationResponse.status()\n+        );\n+        throw new IOException(\"Exiting...\");\n+      }\n+    } catch (UpgradeException e) {\n+      handleInvalidRequestAfterInitiatingFinalization(force, e);\n+    }\n+    monitorAndWaitFinalization(scmClient, upgradeClientID);\n+    return;\n+  }\n+\n+  private void monitorAndWaitFinalization(ScmClient client,\n+                                          String upgradeClientID)\n+      throws IOException {\n+    ExecutorService exec = Executors.newSingleThreadExecutor();\n+    Future<?> monitor =\n+        exec.submit(new UpgradeMonitor(client, upgradeClientID, force));\n+    try {\n+      monitor.get();\n+      emitFinishedMsg(\"Storage Container Manager\");\n+    } catch (CancellationException |InterruptedException e) {\n+      emitCancellationMsg(\"Storage Container Manager\");\n+    } catch (ExecutionException e) {\n+      emitGeneralErrorMsg();\n+      throw new IOException(e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc5MTE3Mw=="}, "originalCommit": {"oid": "128ec4a824bb05972a6f524739516361b9bf80d4"}, "originalPosition": 103}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4550, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}