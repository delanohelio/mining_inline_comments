{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MjI0NjU3", "number": 510, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjo0MzozNFrODcJbuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjo1ODo1NlrODcJkZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODQxMjc1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeSetAclRequest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjo0MzozNFrOFkCmYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMzowMjo0MVrOFkaP8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzNTY0OQ==", "bodyText": "Now no use of exception here. Unused param", "url": "https://github.com/apache/ozone/pull/510#discussion_r373335649", "createdAt": "2020-01-31T06:43:34Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeSetAclRequest.java", "diffHunk": "@@ -80,29 +80,36 @@ public String getVolumeName() {\n \n   @Override\n   OMClientResponse onSuccess(OMResponse.Builder omResponse,\n-      OmVolumeArgs omVolumeArgs, boolean result){\n+      OmVolumeArgs omVolumeArgs, boolean aclApplied){\n     omResponse.setSetAclResponse(OzoneManagerProtocolProtos.SetAclResponse\n-        .newBuilder().setResponse(result).build());\n-    return new OMVolumeAclOpResponse(omVolumeArgs, omResponse.build());\n+        .newBuilder().setResponse(aclApplied).build());\n+    return new OMVolumeAclOpResponse(omResponse.build(), omVolumeArgs);\n   }\n \n   @Override\n   OMClientResponse onFailure(OMResponse.Builder omResponse,\n       IOException ex) {\n-    return new OMVolumeAclOpResponse(null,\n-        createErrorOMResponse(omResponse, ex));\n+    return new OMVolumeAclOpResponse(createErrorOMResponse(omResponse, ex));\n   }\n \n   @Override\n-  void onComplete(IOException ex) {\n-    if (ex == null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Set acls: {} to volume: {} success!\",\n-            getAcls(), getVolumeName());\n-      }\n-    } else {\n-      LOG.error(\"Set acls {} to volume {} failed!\",\n-          getAcls(), getVolumeName(), ex);\n+  void onComplete(Result result, IOException ex, long trxnLogIndex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f1f51fb225dc8526b9d9cc8e927069cb5e7b64"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzNTczNA==", "bodyText": "Same applies for all requests.", "url": "https://github.com/apache/ozone/pull/510#discussion_r373335734", "createdAt": "2020-01-31T06:43:51Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeSetAclRequest.java", "diffHunk": "@@ -80,29 +80,36 @@ public String getVolumeName() {\n \n   @Override\n   OMClientResponse onSuccess(OMResponse.Builder omResponse,\n-      OmVolumeArgs omVolumeArgs, boolean result){\n+      OmVolumeArgs omVolumeArgs, boolean aclApplied){\n     omResponse.setSetAclResponse(OzoneManagerProtocolProtos.SetAclResponse\n-        .newBuilder().setResponse(result).build());\n-    return new OMVolumeAclOpResponse(omVolumeArgs, omResponse.build());\n+        .newBuilder().setResponse(aclApplied).build());\n+    return new OMVolumeAclOpResponse(omResponse.build(), omVolumeArgs);\n   }\n \n   @Override\n   OMClientResponse onFailure(OMResponse.Builder omResponse,\n       IOException ex) {\n-    return new OMVolumeAclOpResponse(null,\n-        createErrorOMResponse(omResponse, ex));\n+    return new OMVolumeAclOpResponse(createErrorOMResponse(omResponse, ex));\n   }\n \n   @Override\n-  void onComplete(IOException ex) {\n-    if (ex == null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Set acls: {} to volume: {} success!\",\n-            getAcls(), getVolumeName());\n-      }\n-    } else {\n-      LOG.error(\"Set acls {} to volume {} failed!\",\n-          getAcls(), getVolumeName(), ex);\n+  void onComplete(Result result, IOException ex, long trxnLogIndex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzNTY0OQ=="}, "originalCommit": {"oid": "b7f1f51fb225dc8526b9d9cc8e927069cb5e7b64"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwNzQ4OA==", "bodyText": "We are using it to log the exception in case of FAILURE.", "url": "https://github.com/apache/ozone/pull/510#discussion_r373607488", "createdAt": "2020-01-31T17:56:58Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeSetAclRequest.java", "diffHunk": "@@ -80,29 +80,36 @@ public String getVolumeName() {\n \n   @Override\n   OMClientResponse onSuccess(OMResponse.Builder omResponse,\n-      OmVolumeArgs omVolumeArgs, boolean result){\n+      OmVolumeArgs omVolumeArgs, boolean aclApplied){\n     omResponse.setSetAclResponse(OzoneManagerProtocolProtos.SetAclResponse\n-        .newBuilder().setResponse(result).build());\n-    return new OMVolumeAclOpResponse(omVolumeArgs, omResponse.build());\n+        .newBuilder().setResponse(aclApplied).build());\n+    return new OMVolumeAclOpResponse(omResponse.build(), omVolumeArgs);\n   }\n \n   @Override\n   OMClientResponse onFailure(OMResponse.Builder omResponse,\n       IOException ex) {\n-    return new OMVolumeAclOpResponse(null,\n-        createErrorOMResponse(omResponse, ex));\n+    return new OMVolumeAclOpResponse(createErrorOMResponse(omResponse, ex));\n   }\n \n   @Override\n-  void onComplete(IOException ex) {\n-    if (ex == null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Set acls: {} to volume: {} success!\",\n-            getAcls(), getVolumeName());\n-      }\n-    } else {\n-      LOG.error(\"Set acls {} to volume {} failed!\",\n-          getAcls(), getVolumeName(), ex);\n+  void onComplete(Result result, IOException ex, long trxnLogIndex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzNTY0OQ=="}, "originalCommit": {"oid": "b7f1f51fb225dc8526b9d9cc8e927069cb5e7b64"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyMzEyMw==", "bodyText": "Yes, missed it.", "url": "https://github.com/apache/ozone/pull/510#discussion_r373723123", "createdAt": "2020-01-31T23:02:41Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeSetAclRequest.java", "diffHunk": "@@ -80,29 +80,36 @@ public String getVolumeName() {\n \n   @Override\n   OMClientResponse onSuccess(OMResponse.Builder omResponse,\n-      OmVolumeArgs omVolumeArgs, boolean result){\n+      OmVolumeArgs omVolumeArgs, boolean aclApplied){\n     omResponse.setSetAclResponse(OzoneManagerProtocolProtos.SetAclResponse\n-        .newBuilder().setResponse(result).build());\n-    return new OMVolumeAclOpResponse(omVolumeArgs, omResponse.build());\n+        .newBuilder().setResponse(aclApplied).build());\n+    return new OMVolumeAclOpResponse(omResponse.build(), omVolumeArgs);\n   }\n \n   @Override\n   OMClientResponse onFailure(OMResponse.Builder omResponse,\n       IOException ex) {\n-    return new OMVolumeAclOpResponse(null,\n-        createErrorOMResponse(omResponse, ex));\n+    return new OMVolumeAclOpResponse(createErrorOMResponse(omResponse, ex));\n   }\n \n   @Override\n-  void onComplete(IOException ex) {\n-    if (ex == null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Set acls: {} to volume: {} success!\",\n-            getAcls(), getVolumeName());\n-      }\n-    } else {\n-      LOG.error(\"Set acls {} to volume {} failed!\",\n-          getAcls(), getVolumeName(), ex);\n+  void onComplete(Result result, IOException ex, long trxnLogIndex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzNTY0OQ=="}, "originalCommit": {"oid": "b7f1f51fb225dc8526b9d9cc8e927069cb5e7b64"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODQxODczOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeAclRequest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjo0Nzo1M1rOFkCqFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMzowMjoyOFrOFkaPsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzNjU5OA==", "bodyText": "We need to set updateID even in the case of applyAcl false.\nScenario:\n\nAdd Acl T1\nAdd existing Acl T2\n\nNow replay T2 it will not be considered as replay as updateID will be still 1.", "url": "https://github.com/apache/ozone/pull/510#discussion_r373336598", "createdAt": "2020-01-31T06:47:53Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeAclRequest.java", "diffHunk": "@@ -73,53 +74,71 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n     OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();\n     boolean lockAcquired = false;\n+    Result result = null;\n     try {\n       // check Acl\n       if (ozoneManager.getAclsEnabled()) {\n         checkAcls(ozoneManager, OzoneObj.ResourceType.VOLUME,\n             OzoneObj.StoreType.OZONE, IAccessAuthorizer.ACLType.WRITE_ACL,\n             volume, null, null);\n       }\n-      lockAcquired =\n-          omMetadataManager.getLock().acquireWriteLock(VOLUME_LOCK, volume);\n+      lockAcquired = omMetadataManager.getLock().acquireWriteLock(\n+          VOLUME_LOCK, volume);\n       String dbVolumeKey = omMetadataManager.getVolumeKey(volume);\n       omVolumeArgs = omMetadataManager.getVolumeTable().get(dbVolumeKey);\n       if (omVolumeArgs == null) {\n         throw new OMException(OMException.ResultCodes.VOLUME_NOT_FOUND);\n       }\n \n+      // Check if this transaction is a replay of ratis logs.\n+      // If this is a replay, then the response has already been returned to\n+      // the client. So take no further action and return a dummy\n+      // OMClientResponse.\n+      if (isReplay(ozoneManager, omVolumeArgs.getUpdateID(),\n+          trxnLogIndex)) {\n+        throw new OMReplayException();\n+      }\n+\n       // result is false upon add existing acl or remove non-existing acl\n-      boolean result = true;\n+      boolean applyAcl = true;\n       try {\n         omVolumeAclOp.apply(ozoneAcls, omVolumeArgs);\n       } catch (OMException ex) {\n-        result = false;\n+        applyAcl = false;\n       }\n \n-      if (result) {\n+      if (applyAcl) {\n+        omVolumeArgs.setUpdateID(trxnLogIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f1f51fb225dc8526b9d9cc8e927069cb5e7b64"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwODQyMw==", "bodyText": "We do not update the DB in case applyAcl is false. So this would add an unnecessary DB op. Tradeoff is replay transaction would also check and reach the same decision - applyAcl false. So I think it should be ok here. Thoughts?", "url": "https://github.com/apache/ozone/pull/510#discussion_r373608423", "createdAt": "2020-01-31T17:59:12Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeAclRequest.java", "diffHunk": "@@ -73,53 +74,71 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n     OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();\n     boolean lockAcquired = false;\n+    Result result = null;\n     try {\n       // check Acl\n       if (ozoneManager.getAclsEnabled()) {\n         checkAcls(ozoneManager, OzoneObj.ResourceType.VOLUME,\n             OzoneObj.StoreType.OZONE, IAccessAuthorizer.ACLType.WRITE_ACL,\n             volume, null, null);\n       }\n-      lockAcquired =\n-          omMetadataManager.getLock().acquireWriteLock(VOLUME_LOCK, volume);\n+      lockAcquired = omMetadataManager.getLock().acquireWriteLock(\n+          VOLUME_LOCK, volume);\n       String dbVolumeKey = omMetadataManager.getVolumeKey(volume);\n       omVolumeArgs = omMetadataManager.getVolumeTable().get(dbVolumeKey);\n       if (omVolumeArgs == null) {\n         throw new OMException(OMException.ResultCodes.VOLUME_NOT_FOUND);\n       }\n \n+      // Check if this transaction is a replay of ratis logs.\n+      // If this is a replay, then the response has already been returned to\n+      // the client. So take no further action and return a dummy\n+      // OMClientResponse.\n+      if (isReplay(ozoneManager, omVolumeArgs.getUpdateID(),\n+          trxnLogIndex)) {\n+        throw new OMReplayException();\n+      }\n+\n       // result is false upon add existing acl or remove non-existing acl\n-      boolean result = true;\n+      boolean applyAcl = true;\n       try {\n         omVolumeAclOp.apply(ozoneAcls, omVolumeArgs);\n       } catch (OMException ex) {\n-        result = false;\n+        applyAcl = false;\n       }\n \n-      if (result) {\n+      if (applyAcl) {\n+        omVolumeArgs.setUpdateID(trxnLogIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzNjU5OA=="}, "originalCommit": {"oid": "b7f1f51fb225dc8526b9d9cc8e927069cb5e7b64"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyMzA1Nw==", "bodyText": "No when replay it will not be considered as replay as UpdateID will be less than transaction ID. As we are doing best effort to find all the replay cases, I think we can set updateID when applyAcl false and it will help in replay.\n\nSo this would add an unnecessary DB op.\n\nWe are using DoubleBuffer and Batch, so we should be fine here.", "url": "https://github.com/apache/ozone/pull/510#discussion_r373723057", "createdAt": "2020-01-31T23:02:28Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeAclRequest.java", "diffHunk": "@@ -73,53 +74,71 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n     OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();\n     boolean lockAcquired = false;\n+    Result result = null;\n     try {\n       // check Acl\n       if (ozoneManager.getAclsEnabled()) {\n         checkAcls(ozoneManager, OzoneObj.ResourceType.VOLUME,\n             OzoneObj.StoreType.OZONE, IAccessAuthorizer.ACLType.WRITE_ACL,\n             volume, null, null);\n       }\n-      lockAcquired =\n-          omMetadataManager.getLock().acquireWriteLock(VOLUME_LOCK, volume);\n+      lockAcquired = omMetadataManager.getLock().acquireWriteLock(\n+          VOLUME_LOCK, volume);\n       String dbVolumeKey = omMetadataManager.getVolumeKey(volume);\n       omVolumeArgs = omMetadataManager.getVolumeTable().get(dbVolumeKey);\n       if (omVolumeArgs == null) {\n         throw new OMException(OMException.ResultCodes.VOLUME_NOT_FOUND);\n       }\n \n+      // Check if this transaction is a replay of ratis logs.\n+      // If this is a replay, then the response has already been returned to\n+      // the client. So take no further action and return a dummy\n+      // OMClientResponse.\n+      if (isReplay(ozoneManager, omVolumeArgs.getUpdateID(),\n+          trxnLogIndex)) {\n+        throw new OMReplayException();\n+      }\n+\n       // result is false upon add existing acl or remove non-existing acl\n-      boolean result = true;\n+      boolean applyAcl = true;\n       try {\n         omVolumeAclOp.apply(ozoneAcls, omVolumeArgs);\n       } catch (OMException ex) {\n-        result = false;\n+        applyAcl = false;\n       }\n \n-      if (result) {\n+      if (applyAcl) {\n+        omVolumeArgs.setUpdateID(trxnLogIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzNjU5OA=="}, "originalCommit": {"oid": "b7f1f51fb225dc8526b9d9cc8e927069cb5e7b64"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODQzNDk1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeSetAclRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjo1ODo1NlrOFkCzYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjo1ODo1NlrOFkCzYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzODk3OA==", "bodyText": "Removed isDebugEnabled.\nNeed same in other requests also. (I see it is missing in other requests)", "url": "https://github.com/apache/ozone/pull/510#discussion_r373338978", "createdAt": "2020-01-31T06:58:56Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/volume/acl/OMVolumeSetAclRequest.java", "diffHunk": "@@ -80,29 +80,36 @@ public String getVolumeName() {\n \n   @Override\n   OMClientResponse onSuccess(OMResponse.Builder omResponse,\n-      OmVolumeArgs omVolumeArgs, boolean result){\n+      OmVolumeArgs omVolumeArgs, boolean aclApplied){\n     omResponse.setSetAclResponse(OzoneManagerProtocolProtos.SetAclResponse\n-        .newBuilder().setResponse(result).build());\n-    return new OMVolumeAclOpResponse(omVolumeArgs, omResponse.build());\n+        .newBuilder().setResponse(aclApplied).build());\n+    return new OMVolumeAclOpResponse(omResponse.build(), omVolumeArgs);\n   }\n \n   @Override\n   OMClientResponse onFailure(OMResponse.Builder omResponse,\n       IOException ex) {\n-    return new OMVolumeAclOpResponse(null,\n-        createErrorOMResponse(omResponse, ex));\n+    return new OMVolumeAclOpResponse(createErrorOMResponse(omResponse, ex));\n   }\n \n   @Override\n-  void onComplete(IOException ex) {\n-    if (ex == null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Set acls: {} to volume: {} success!\",\n-            getAcls(), getVolumeName());\n-      }\n-    } else {\n-      LOG.error(\"Set acls {} to volume {} failed!\",\n-          getAcls(), getVolumeName(), ex);\n+  void onComplete(Result result, IOException ex, long trxnLogIndex) {\n+    switch (result) {\n+    case SUCCESS:\n+      LOG.debug(\"Set acls: {} to volume: {} success!\", getAcls(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f1f51fb225dc8526b9d9cc8e927069cb5e7b64"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 37, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}