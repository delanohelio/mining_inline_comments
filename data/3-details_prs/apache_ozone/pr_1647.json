{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzkzMzU4", "number": 1647, "title": "HDDS-4265. Refactor OzoneQuota to make it easy to support more quota \u2026", "bodyText": "What changes were proposed in this pull request?\nThis task is to make it easy to support more quota type.\nI replaced the repeated judgment statements, and now just configure the new type 'setQuotaList' to complete the addition.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4265\nHow was this patch tested?\nAdded unit test.", "createdAt": "2020-12-02T06:47:58Z", "url": "https://github.com/apache/ozone/pull/1647", "merged": true, "mergeCommit": {"oid": "1e57d9e1e625305f438204fc5bc93c8948da8d5d"}, "closed": true, "closedAt": "2020-12-11T09:44:26Z", "author": {"login": "wycccccc"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiIgttAH2gAyNTMwNzkzMzU4OjMzYTQxYzAzMWQyZTQyYjNlMDI5ZTYzNTYyZWFlODc5NDU5YTBiNzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlEitfAFqTU0OTkzMzIxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "33a41c031d2e42b3e029e63562eae879459a0b78", "author": {"user": {"login": "wycccccc", "name": null}}, "url": "https://github.com/apache/ozone/commit/33a41c031d2e42b3e029e63562eae879459a0b78", "committedDate": "2020-12-02T06:25:38Z", "message": "HDDS-4265. Refactor OzoneQuota to make it easy to support more quota type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "843040234ce45d814746c5b47737d9c403201780", "author": {"user": {"login": "wycccccc", "name": null}}, "url": "https://github.com/apache/ozone/commit/843040234ce45d814746c5b47737d9c403201780", "committedDate": "2020-12-02T06:52:19Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "573799dfc2f792e2ce71feb89335b4a6445cda61", "author": {"user": {"login": "wycccccc", "name": null}}, "url": "https://github.com/apache/ozone/commit/573799dfc2f792e2ce71feb89335b4a6445cda61", "committedDate": "2020-12-02T06:54:27Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "author": {"user": {"login": "wycccccc", "name": null}}, "url": "https://github.com/apache/ozone/commit/9352dd27b9ae10be8fa2bea328cdedfc118af1f2", "committedDate": "2020-12-02T08:20:38Z", "message": "fix checkstyle again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODk5NTM0", "url": "https://github.com/apache/ozone/pull/1647#pullrequestreview-547899534", "createdAt": "2020-12-09T07:22:51Z", "commit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzoyMjo1MlrOICF-5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0MzozNVrOICGm0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2NjA4Ng==", "bodyText": "we can Initialize quotaList in static {}\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static QuotaList quotaList;\n          \n          \n            \n              private static QuotaList quotaList;\n          \n          \n            \n              static {\n          \n          \n            \n                 quotaList = new QuotaList();\n          \n          \n            \n                 quotaList.addQuotaList(OZONE_QUOTA_TB, Units.TB, TB);\n          \n          \n            \n                 quotaList.addQuotaList(OZONE_QUOTA_GB, Units.GB, GB);\n          \n          \n            \n                 quotaList.addQuotaList(OZONE_QUOTA_MB, Units.MB, MB);\n          \n          \n            \n                 quotaList.addQuotaList(OZONE_QUOTA_KB, Units.KB, KB);\n          \n          \n            \n                 quotaList.addQuotaList(OZONE_QUOTA_BYTES, Units.BYTES, 1L);\n          \n          \n            \n              }", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539066086", "createdAt": "2020-12-09T07:22:52Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -43,13 +43,25 @@\n   public static final String OZONE_QUOTA_TB = \"TB\";\n \n   /** Quota Units.*/\n-  public enum Units {UNDEFINED, BYTES, KB, MB, GB, TB}\n+  public enum Units {BYTES, KB, MB, GB, TB}\n \n   // Quota to decide how many buckets can be created.\n   private long quotaInCounts;\n   // Quota to decide how many storage space will be used in bytes.\n   private long quotaInBytes;\n   private RawQuotaInBytes rawQuotaInBytes;\n+  // Data class of Quota.\n+  private static QuotaList quotaList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2Njc3MQ==", "bodyText": "space\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for(Units quota:quotaList.getUnitQuotaArray()){\n          \n          \n            \n                  for(Units quota : quotaList.getUnitQuotaArray()){", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539066771", "createdAt": "2020-12-09T07:24:23Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -72,24 +84,18 @@ public long getSize() {\n     }\n \n     /**\n-     * Returns size in Bytes or -1 if there is no Quota.\n+     * Returns size in Bytes or negative num if there is no Quota.\n      */\n     public long sizeInBytes() {\n-      switch (this.unit) {\n-      case BYTES:\n-        return this.getSize();\n-      case KB:\n-        return this.getSize() * KB;\n-      case MB:\n-        return this.getSize() * MB;\n-      case GB:\n-        return this.getSize() * GB;\n-      case TB:\n-        return this.getSize() * TB;\n-      case UNDEFINED:\n-      default:\n-        return -1;\n+      long sQuote = -1L;\n+      setQuotaList();\n+      for(Units quota:quotaList.getUnitQuotaArray()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2Njk2OQ==", "bodyText": "space", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539066969", "createdAt": "2020-12-09T07:24:46Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +171,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota:quotaList.getOzoneQuotaArray()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2NzEwMw==", "bodyText": "space", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539067103", "createdAt": "2020-12-09T07:25:06Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -227,24 +210,15 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n    * @return OzoneQuota object\n    */\n   public static OzoneQuota getOzoneQuota(long quotaInBytes,\n-      long quotaInCounts) {\n-    long size;\n-    Units unit;\n-    if (quotaInBytes % TB == 0) {\n-      size = quotaInBytes / TB;\n-      unit = Units.TB;\n-    } else if (quotaInBytes % GB == 0) {\n-      size = quotaInBytes / GB;\n-      unit = Units.GB;\n-    } else if (quotaInBytes % MB == 0) {\n-      size = quotaInBytes / MB;\n-      unit = Units.MB;\n-    } else if (quotaInBytes % KB == 0) {\n-      size = quotaInBytes / KB;\n-      unit = Units.KB;\n-    } else {\n-      size = quotaInBytes;\n-      unit = Units.BYTES;\n+                                         long quotaInCounts) {\n+    long size = 1L;\n+    Units unit = Units.BYTES;\n+    setQuotaList();\n+    for (Long quota:quotaList.getSizeQuotaArray()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NDQxMA==", "bodyText": "indentation", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539074410", "createdAt": "2020-12-09T07:39:57Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -227,24 +210,15 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n    * @return OzoneQuota object\n    */\n   public static OzoneQuota getOzoneQuota(long quotaInBytes,\n-      long quotaInCounts) {\n-    long size;\n-    Units unit;\n-    if (quotaInBytes % TB == 0) {\n-      size = quotaInBytes / TB;\n-      unit = Units.TB;\n-    } else if (quotaInBytes % GB == 0) {\n-      size = quotaInBytes / GB;\n-      unit = Units.GB;\n-    } else if (quotaInBytes % MB == 0) {\n-      size = quotaInBytes / MB;\n-      unit = Units.MB;\n-    } else if (quotaInBytes % KB == 0) {\n-      size = quotaInBytes / KB;\n-      unit = Units.KB;\n-    } else {\n-      size = quotaInBytes;\n-      unit = Units.BYTES;\n+                                         long quotaInCounts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NDk4MQ==", "bodyText": "indentation", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539074981", "createdAt": "2020-12-09T07:41:06Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +171,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota:quotaList.getOzoneQuotaArray()){\n+        if (uppercase.endsWith((quota))){\n+          size = uppercase\n+                  .substring(0, uppercase.length() - quota.length());\n+          currUnit = quotaList.getUnits(quota);\n+          quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size),\n+                  quotaList.getQuotaSize(currUnit));\n+          break;\n+        }\n       }\n       nSize = Long.parseLong(size);\n     } catch (NumberFormatException e) {\n       throw new IllegalArgumentException(\"Invalid values for quota, to ensure\" +\n-          \" that the Quota format is legal(supported values are BYTES, KB, \" +\n-          \"MB, GB and TB).\");\n+              \" that the Quota format is legal(supported values are BYTES, \" +\n+              \" KB, MB, GB and TB).\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NTM4NQ==", "bodyText": "Should it be sQuota?", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539075385", "createdAt": "2020-12-09T07:41:48Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -72,24 +84,18 @@ public long getSize() {\n     }\n \n     /**\n-     * Returns size in Bytes or -1 if there is no Quota.\n+     * Returns size in Bytes or negative num if there is no Quota.\n      */\n     public long sizeInBytes() {\n-      switch (this.unit) {\n-      case BYTES:\n-        return this.getSize();\n-      case KB:\n-        return this.getSize() * KB;\n-      case MB:\n-        return this.getSize() * MB;\n-      case GB:\n-        return this.getSize() * GB;\n-      case TB:\n-        return this.getSize() * TB;\n-      case UNDEFINED:\n-      default:\n-        return -1;\n+      long sQuote = -1L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NjI0MA==", "bodyText": "indentation", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539076240", "createdAt": "2020-12-09T07:43:27Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +171,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota:quotaList.getOzoneQuotaArray()){\n+        if (uppercase.endsWith((quota))){\n+          size = uppercase\n+                  .substring(0, uppercase.length() - quota.length());\n+          currUnit = quotaList.getUnits(quota);\n+          quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size),\n+                  quotaList.getQuotaSize(currUnit));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NjMwNA==", "bodyText": "indentation", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539076304", "createdAt": "2020-12-09T07:43:35Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +171,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota:quotaList.getOzoneQuotaArray()){\n+        if (uppercase.endsWith((quota))){\n+          size = uppercase\n+                  .substring(0, uppercase.length() - quota.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "originalPosition": 109}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adf518fc93aec010fa1797a7fd7ef8ce05735900", "author": {"user": {"login": "wycccccc", "name": null}}, "url": "https://github.com/apache/ozone/commit/adf518fc93aec010fa1797a7fd7ef8ce05735900", "committedDate": "2020-12-10T05:47:07Z", "message": "Fix space and indentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4OTAzMzQw", "url": "https://github.com/apache/ozone/pull/1647#pullrequestreview-548903340", "createdAt": "2020-12-10T07:05:24Z", "commit": {"oid": "adf518fc93aec010fa1797a7fd7ef8ce05735900"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNzowNToyNFrOIC6FLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNzoxMDoyMFrOIC6WJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkxOTY2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                for (Long quota:quotaList.getSizeQuotaArray()){\n          \n          \n            \n                for (Long quota : quotaList.getSizeQuotaArray()) {", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539919663", "createdAt": "2020-12-10T07:05:24Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -227,24 +210,15 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n    * @return OzoneQuota object\n    */\n   public static OzoneQuota getOzoneQuota(long quotaInBytes,\n-      long quotaInCounts) {\n-    long size;\n-    Units unit;\n-    if (quotaInBytes % TB == 0) {\n-      size = quotaInBytes / TB;\n-      unit = Units.TB;\n-    } else if (quotaInBytes % GB == 0) {\n-      size = quotaInBytes / GB;\n-      unit = Units.GB;\n-    } else if (quotaInBytes % MB == 0) {\n-      size = quotaInBytes / MB;\n-      unit = Units.MB;\n-    } else if (quotaInBytes % KB == 0) {\n-      size = quotaInBytes / KB;\n-      unit = Units.KB;\n-    } else {\n-      size = quotaInBytes;\n-      unit = Units.BYTES;\n+                                         long quotaInCounts) {\n+    long size = 1L;\n+    Units unit = Units.BYTES;\n+    setQuotaList();\n+    for (Long quota:quotaList.getSizeQuotaArray()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2NzEwMw=="}, "originalCommit": {"oid": "9352dd27b9ae10be8fa2bea328cdedfc118af1f2"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyMTg4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if(quotaInBytes % quota == 0){\n          \n          \n            \n                  if (quotaInBytes % quota == 0) {", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539921885", "createdAt": "2020-12-10T07:07:51Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -228,23 +209,13 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n    */\n   public static OzoneQuota getOzoneQuota(long quotaInBytes,\n       long quotaInCounts) {\n-    long size;\n-    Units unit;\n-    if (quotaInBytes % TB == 0) {\n-      size = quotaInBytes / TB;\n-      unit = Units.TB;\n-    } else if (quotaInBytes % GB == 0) {\n-      size = quotaInBytes / GB;\n-      unit = Units.GB;\n-    } else if (quotaInBytes % MB == 0) {\n-      size = quotaInBytes / MB;\n-      unit = Units.MB;\n-    } else if (quotaInBytes % KB == 0) {\n-      size = quotaInBytes / KB;\n-      unit = Units.KB;\n-    } else {\n-      size = quotaInBytes;\n-      unit = Units.BYTES;\n+    long size = 1L;\n+    Units unit = Units.BYTES;\n+    for (Long quota:quotaList.getSizeQuotaArray()){\n+      if(quotaInBytes % quota == 0){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adf518fc93aec010fa1797a7fd7ef8ce05735900"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyMjc0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for(Units quota : quotaList.getUnitQuotaArray()){\n          \n          \n            \n                  for (Units quota : quotaList.getUnitQuotaArray()) {", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539922744", "createdAt": "2020-12-10T07:08:48Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -72,24 +84,17 @@ public long getSize() {\n     }\n \n     /**\n-     * Returns size in Bytes or -1 if there is no Quota.\n+     * Returns size in Bytes or negative num if there is no Quota.\n      */\n     public long sizeInBytes() {\n-      switch (this.unit) {\n-      case BYTES:\n-        return this.getSize();\n-      case KB:\n-        return this.getSize() * KB;\n-      case MB:\n-        return this.getSize() * MB;\n-      case GB:\n-        return this.getSize() * GB;\n-      case TB:\n-        return this.getSize() * TB;\n-      case UNDEFINED:\n-      default:\n-        return -1;\n+      long sQuota = -1L;\n+      for(Units quota : quotaList.getUnitQuotaArray()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adf518fc93aec010fa1797a7fd7ef8ce05735900"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyMjk4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(quota == this.unit){\n          \n          \n            \n                    if (quota == this.unit) {", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539922982", "createdAt": "2020-12-10T07:09:07Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -72,24 +84,17 @@ public long getSize() {\n     }\n \n     /**\n-     * Returns size in Bytes or -1 if there is no Quota.\n+     * Returns size in Bytes or negative num if there is no Quota.\n      */\n     public long sizeInBytes() {\n-      switch (this.unit) {\n-      case BYTES:\n-        return this.getSize();\n-      case KB:\n-        return this.getSize() * KB;\n-      case MB:\n-        return this.getSize() * MB;\n-      case GB:\n-        return this.getSize() * GB;\n-      case TB:\n-        return this.getSize() * TB;\n-      case UNDEFINED:\n-      default:\n-        return -1;\n+      long sQuota = -1L;\n+      for(Units quota : quotaList.getUnitQuotaArray()){\n+        if(quota == this.unit){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adf518fc93aec010fa1797a7fd7ef8ce05735900"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyMzQwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for(String quota : quotaList.getOzoneQuotaArray()){\n          \n          \n            \n                  for (String quota : quotaList.getOzoneQuotaArray()) {", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539923406", "createdAt": "2020-12-10T07:09:34Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +169,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota : quotaList.getOzoneQuotaArray()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adf518fc93aec010fa1797a7fd7ef8ce05735900"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyNDAwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (uppercase.endsWith((quota))){\n          \n          \n            \n                    if (uppercase.endsWith((quota))) {", "url": "https://github.com/apache/ozone/pull/1647#discussion_r539924007", "createdAt": "2020-12-10T07:10:20Z", "author": {"login": "captainzmc"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/client/OzoneQuota.java", "diffHunk": "@@ -164,45 +169,21 @@ public static OzoneQuota parseQuota(String quotaInBytes,\n     long quotaMultiplyExact = 0;\n \n     try {\n-      if (uppercase.endsWith(OZONE_QUOTA_KB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_KB.length());\n-        currUnit = Units.KB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), KB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_MB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_MB.length());\n-        currUnit = Units.MB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), MB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_GB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_GB.length());\n-        currUnit = Units.GB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), GB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_TB)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_TB.length());\n-        currUnit = Units.TB;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), TB);\n-      }\n-\n-      if (uppercase.endsWith(OZONE_QUOTA_BYTES)) {\n-        size = uppercase\n-            .substring(0, uppercase.length() - OZONE_QUOTA_BYTES.length());\n-        currUnit = Units.BYTES;\n-        quotaMultiplyExact = Math.multiplyExact(Long.parseLong(size), 1L);\n+      for(String quota : quotaList.getOzoneQuotaArray()){\n+        if (uppercase.endsWith((quota))){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adf518fc93aec010fa1797a7fd7ef8ce05735900"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00dab4c95ccd749a76bce6228ff1734d358b4690", "author": {"user": {"login": "wycccccc", "name": null}}, "url": "https://github.com/apache/ozone/commit/00dab4c95ccd749a76bce6228ff1734d358b4690", "committedDate": "2020-12-11T08:11:07Z", "message": "fix space issue again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5OTMzMjEy", "url": "https://github.com/apache/ozone/pull/1647#pullrequestreview-549933212", "createdAt": "2020-12-11T09:29:58Z", "commit": {"oid": "00dab4c95ccd749a76bce6228ff1734d358b4690"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2009, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}