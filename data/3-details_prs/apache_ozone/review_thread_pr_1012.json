{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTI2MTYw", "number": 1012, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMTozMzowN1rOENfklQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMTozODoxMFrOENflvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTg0MjEzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmKeyInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMTozMzowN1rOGwMR1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMTozMzowN1rOGwMR1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE4NjAwNw==", "bodyText": "OmKeyInfo was changed in #1034 to avoid streams.  keyLocationVersions is now converted in a loop:\nhttps://github.com/apache/hadoop-ozone/blob/2af6198686d81daa3ad0513f723118637d2945cf/hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmKeyInfo.java#L388-L391\nThat's where normal/compact protobuf conversion should happen depending on ignorePipeline parameter.", "url": "https://github.com/apache/ozone/pull/1012#discussion_r453186007", "createdAt": "2020-07-11T11:33:07Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmKeyInfo.java", "diffHunk": "@@ -408,6 +421,15 @@ public KeyInfo getProtobuf() {\n     if (encInfo != null) {\n       kb.setFileEncryptionInfo(OMPBHelper.convert(encInfo));\n     }\n+    if (ignorePipeline) {\n+      kb.addAllKeyLocationList(keyLocationVersions.stream()\n+          .map(OmKeyLocationInfoGroup::getCompactProtobuf)\n+          .collect(Collectors.toList()));\n+    } else {\n+      kb.addAllKeyLocationList(keyLocationVersions.stream()\n+          .map(OmKeyLocationInfoGroup::getProtobuf)\n+          .collect(Collectors.toList()));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c72dae5c72053e85cc81f085876585b38f71d8"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTg0MjczOnYy", "diffSide": "RIGHT", "path": "Dockerfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMTozNDoxMFrOGwMSIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMTozNDoxMFrOGwMSIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE4NjA4Mw==", "bodyText": "This dockerfile seems to be unrelated to the change in this PR.", "url": "https://github.com/apache/ozone/pull/1012#discussion_r453186083", "createdAt": "2020-07-11T11:34:10Z", "author": {"login": "adoroszlai"}, "path": "Dockerfile", "diffHunk": "@@ -0,0 +1,20 @@\n+ARG BASE=latest\n+FROM flokkr/base:35", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c72dae5c72053e85cc81f085876585b38f71d8"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTg0NTA5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmKeyLocationInfoGroup.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMTozODoxMFrOGwMTNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMTozODoxMFrOGwMTNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE4NjM1OA==", "bodyText": "Can we avoid duplication by extracting to a helper method that takes OmKeyLocationInfo conversion function (OmKeyLocationInfo::getCompactProtobuf or OmKeyLocationInfo::getProtobuf)?", "url": "https://github.com/apache/ozone/pull/1012#discussion_r453186358", "createdAt": "2020-07-11T11:38:10Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmKeyLocationInfoGroup.java", "diffHunk": "@@ -58,11 +58,22 @@ public long getVersion() {\n     return locationList;\n   }\n \n+  public KeyLocationList getCompactProtobuf() {\n+    return KeyLocationList.newBuilder()\n+        .setVersion(version)\n+        .addAllKeyLocations(\n+            locationList.stream().map(\n+                OmKeyLocationInfo::getCompactProtobuf)\n+                .collect(Collectors.toList()))\n+        .build();\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c72dae5c72053e85cc81f085876585b38f71d8"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4216, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}