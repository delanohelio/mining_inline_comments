{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MDI0MTY5", "number": 1000, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMzo0MDowOFrOECZPcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMzo0MDowOFrOECZPcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTQ2MTYyOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/AbstractContainerReportHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMzo0MDowOFrOGe0vHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMzo0MDowOFrOGe0vHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk3NDQ5NQ==", "bodyText": "NIT: Update javadocs", "url": "https://github.com/apache/ozone/pull/1000#discussion_r434974495", "createdAt": "2020-06-04T03:40:08Z", "author": {"login": "dineshchitlangia"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/container/AbstractContainerReportHandler.java", "diffHunk": "@@ -225,14 +218,35 @@ private void updateContainerState(final DatanodeDetails datanode,\n     }\n   }\n \n+  private void updateContainerReplica(final DatanodeDetails datanodeDetails,\n+                                      final ContainerID containerId,\n+                                      final ContainerReplicaProto replicaProto)\n+      throws ContainerNotFoundException, ContainerReplicaNotFoundException {\n+    final ContainerReplica replica = ContainerReplica.newBuilder()\n+        .setContainerID(containerId)\n+        .setContainerState(replicaProto.getState())\n+        .setDatanodeDetails(datanodeDetails)\n+        .setOriginNodeId(UUID.fromString(replicaProto.getOriginNodeId()))\n+        .setSequenceId(replicaProto.getBlockCommitSequenceId())\n+        .build();\n+\n+    if (replica.getState().equals(State.DELETED)) {\n+      containerManager.removeContainerReplica(containerId, replica);\n+    } else {\n+      containerManager.updateContainerReplica(containerId, replica);\n+    }\n+  }\n+\n   /**\n    * Returns true if the container replica is not marked as UNHEALTHY.\n    *\n    * @param replicaState State of the container replica.\n    * @return true if unhealthy, false otherwise\n    */\n   private boolean isUnhealthy(final Supplier<State> replicaState) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab84718cf4f99850982ca0c1c5627b2092b64c7d"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4203, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}