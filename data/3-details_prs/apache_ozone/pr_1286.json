{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTAwNjU3", "number": 1286, "title": "HDDS-4040. [OFS] BasicRootedOzoneFileSystem to support batchDelete", "bodyText": "What changes were proposed in this pull request?\nThis Jira is to use deleteObjects in OFS delete now that HDDS-3286 is committed.\nCurrently when ozone.om.enable.filesystem.paths is enabled it normalizes the path, so using deleteKey for delete directory will fail.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4040\nHow was this patch tested?\nAdded testFileDelete - mostly copied from o3fs test.", "createdAt": "2020-08-03T10:44:25Z", "url": "https://github.com/apache/ozone/pull/1286", "merged": true, "mergeCommit": {"oid": "b186b90f17dba40b24befa852bd3ce1a6ffe4788"}, "closed": true, "closedAt": "2020-08-12T06:53:58Z", "author": {"login": "smengcl"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7Pq8pAH2gAyNDYyMTAwNjU3OjE3MTcxN2ZjZThlODFlNTVkNjI1N2QxNDVkYjVkMzg5YmJmMGMwOGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc99sL2AH2gAyNDYyMTAwNjU3OjUxNDU2OTBiM2FiNTQwNDc1NDU1NDIyOWRlYTA4MjNkZWEzMmQyMDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "171717fce8e81e55d6257d145db5d389bbf0c08d", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/171717fce8e81e55d6257d145db5d389bbf0c08d", "committedDate": "2020-08-03T10:43:06Z", "message": "HDDS-4040. OFS should use deleteObjects when deleting directory\n\nChange-Id: I263cfbad1f552b3c505f5745975173f120e036e3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdbc71cdabcfa846d538878f80bb602a37a63528", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/fdbc71cdabcfa846d538878f80bb602a37a63528", "committedDate": "2020-08-03T11:14:44Z", "message": "Added test.\n\nChange-Id: I5213fc1267f8cdd3c40817f5913c565caa202c8e"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNDY5NTg3", "url": "https://github.com/apache/ozone/pull/1286#pullrequestreview-460469587", "createdAt": "2020-08-04T03:22:02Z", "commit": {"oid": "fdbc71cdabcfa846d538878f80bb602a37a63528"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMzoyMjowMlrOG7Ppww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMzoyMjowMlrOG7Ppww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc3NTYxOQ==", "bodyText": "Make this test parameterized to test with  \"ozone.om.enable.filesystem.paths\" enabled and disabled similar to TestOzoneFileSystem", "url": "https://github.com/apache/ozone/pull/1286#discussion_r464775619", "createdAt": "2020-08-04T03:22:02Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -1038,4 +1043,41 @@ public void testRenameToTrashDisabled() throws IOException {\n     ofs.delete(trashRoot, true);\n   }\n \n+  @Test\n+  public void testFileDelete() throws Exception {\n+    Path grandparent = new Path(bucketPath, \"testBatchDelete\");\n+    Path parent = new Path(grandparent, \"parent\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdbc71cdabcfa846d538878f80bb602a37a63528"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1eb6cde2293d0c66e8a504d782561d70e4900298", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/1eb6cde2293d0c66e8a504d782561d70e4900298", "committedDate": "2020-08-04T07:14:12Z", "message": "Parameterize TestRootedOzoneFileSystem for OZONE_OM_ENABLE_FILESYSTEM_PATHS.\n\nChange-Id: I3752de9a7f2167c9b7687971c8426db9368796b2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc8ae43c173cad67e97995d5c0bc28fa753b3985", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/fc8ae43c173cad67e97995d5c0bc28fa753b3985", "committedDate": "2020-08-06T06:20:58Z", "message": "Try increasing surefire.fork.timeout (forkedProcessTimeoutInSeconds) to 1000s.\nNot sure if this would have side effects. Have a try."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5865c2faa0fb51adbd48b9f2694b432c16aaaa79", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/5865c2faa0fb51adbd48b9f2694b432c16aaaa79", "committedDate": "2020-08-06T08:36:34Z", "message": "Try increasing test class global timeout.\n\nChange-Id: Ic8ed3460d7cee5cc3c732175643123bfc84ae7a9"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "244a4be86553ad2deb293c8532f8dbdb5aa2c67f", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/244a4be86553ad2deb293c8532f8dbdb5aa2c67f", "committedDate": "2020-08-06T18:00:25Z", "message": "Revert \"Try increasing test class global timeout.\"\n\nThis reverts commit 5865c2faa0fb51adbd48b9f2694b432c16aaaa79.\n\nChange-Id: I96c1777aa753be44bd57564e9af1a660589152d1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a130357be16e518f9f56b5b2ead99f2a68e844a", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/5a130357be16e518f9f56b5b2ead99f2a68e844a", "committedDate": "2020-08-06T18:00:59Z", "message": "Further increase surefire.fork.timeout to 1200s.\n\nChange-Id: I4eb115689bb9b99d44438b2b79e17a2cc93b4488"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNzc3Mzcw", "url": "https://github.com/apache/ozone/pull/1286#pullrequestreview-462777370", "createdAt": "2020-08-06T18:33:42Z", "commit": {"oid": "5a130357be16e518f9f56b5b2ead99f2a68e844a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODozMzo0MlrOG8_iOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODozMzo0MlrOG8_iOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwODY5OA==", "bodyText": "Is there a reason for return false, because BasicOzoneFileSystem does not return false when key list is empty.\nhttps://github.com/apache/hadoop-ozone/blob/master/hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java#L287", "url": "https://github.com/apache/ozone/pull/1286#discussion_r466608698", "createdAt": "2020-08-06T18:33:42Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -457,38 +458,79 @@ public boolean deleteObject(String path) {\n     }\n   }\n \n+  /**\n+   * Helper function to check if the list of key paths are in the same volume\n+   * and same bucket.\n+   */\n+  private boolean areInSameBucket(List<String> keyNameList) {\n+    if (keyNameList.size() == 0) {\n+      return true;\n+    }\n+    String firstKeyPath = keyNameList.get(0);\n+    final String volAndBucket = new OFSPath(firstKeyPath).getNonKeyPath();\n+    // If any key path's volume and bucket from the second element and on\n+    // in the list doesn't match the first element's, hasDifferentVolAndBucket\n+    // would be true\n+    boolean hasDifferentVolAndBucket = keyNameList.stream().skip(1)\n+        .anyMatch(p -> !(new OFSPath(p).getNonKeyPath().equals(volAndBucket)));\n+    return !hasDifferentVolAndBucket;\n+  }\n+\n   /**\n    * Helper method to delete an object specified by key name in bucket.\n    *\n-   * @param pathList key name list to be deleted\n+   * Only supports deleting keys in the same bucket in one call.\n+   *\n+   * Each item in the given list should be the String of an OFS path:\n+   * e.g. ofs://om/vol1/buck1/k1\n+   *\n+   * @param keyNameList key name list to be deleted\n    * @return true if the key is deleted, false otherwise\n    */\n   @Override\n-  public boolean deleteObjects(List<String> pathList) {\n-    // TODO: we will support deleteObjects in ofs.\n-    LOG.error(\"ofs currently does not support deleteObjects\");\n-    return false;\n+  public boolean deleteObjects(List<String> keyNameList) {\n+    LOG.trace(\"issuing delete for keys: {}\", keyNameList);\n+    if (keyNameList.size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a130357be16e518f9f56b5b2ead99f2a68e844a"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b0a7d9db47365585c2921e7b667b59648fc552a", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/4b0a7d9db47365585c2921e7b667b59648fc552a", "committedDate": "2020-08-06T20:32:21Z", "message": "Init test cluster once. Add cleanups to all tests.\n\nChange-Id: I0c6215ad65973de3ee6099618be830e2e65549c3"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNDU4MzA4", "url": "https://github.com/apache/ozone/pull/1286#pullrequestreview-463458308", "createdAt": "2020-08-07T16:48:45Z", "commit": {"oid": "4b0a7d9db47365585c2921e7b667b59648fc552a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjo0ODo0NVrOG9g1vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjo1NToxOVrOG9hCOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1NDM2Nw==", "bodyText": "should incrementCount for deletes by the number of keys in the list instead of 1?\nAlso, should we move the counter update if deleteKeys succeed", "url": "https://github.com/apache/ozone/pull/1286#discussion_r467154367", "createdAt": "2020-08-07T16:48:45Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -457,38 +458,79 @@ public boolean deleteObject(String path) {\n     }\n   }\n \n+  /**\n+   * Helper function to check if the list of key paths are in the same volume\n+   * and same bucket.\n+   */\n+  private boolean areInSameBucket(List<String> keyNameList) {\n+    if (keyNameList.size() == 0) {\n+      return true;\n+    }\n+    String firstKeyPath = keyNameList.get(0);\n+    final String volAndBucket = new OFSPath(firstKeyPath).getNonKeyPath();\n+    // If any key path's volume and bucket from the second element and on\n+    // in the list doesn't match the first element's, hasDifferentVolAndBucket\n+    // would be true\n+    boolean hasDifferentVolAndBucket = keyNameList.stream().skip(1)\n+        .anyMatch(p -> !(new OFSPath(p).getNonKeyPath().equals(volAndBucket)));\n+    return !hasDifferentVolAndBucket;\n+  }\n+\n   /**\n    * Helper method to delete an object specified by key name in bucket.\n    *\n-   * @param pathList key name list to be deleted\n+   * Only supports deleting keys in the same bucket in one call.\n+   *\n+   * Each item in the given list should be the String of an OFS path:\n+   * e.g. ofs://om/vol1/buck1/k1\n+   *\n+   * @param keyNameList key name list to be deleted\n    * @return true if the key is deleted, false otherwise\n    */\n   @Override\n-  public boolean deleteObjects(List<String> pathList) {\n-    // TODO: we will support deleteObjects in ofs.\n-    LOG.error(\"ofs currently does not support deleteObjects\");\n-    return false;\n+  public boolean deleteObjects(List<String> keyNameList) {\n+    LOG.trace(\"issuing delete for keys: {}\", keyNameList);\n+    if (keyNameList.size() == 0) {\n+      return false;\n+    }\n+    // Sanity check. Support only deleting a list of keys in the same bucket\n+    if (!areInSameBucket(keyNameList)) {\n+      LOG.error(\"Deleting keys from different buckets in a single batch \"\n+          + \"is not supported.\");\n+      return false;\n+    }\n+    try {\n+      OFSPath firstKeyPath = new OFSPath(keyNameList.get(0));\n+      OzoneBucket bucket = getBucket(firstKeyPath, false);\n+      return deleteObjects(bucket, keyNameList);\n+    } catch (IOException ioe) {\n+      LOG.error(\"delete key failed: {}\", ioe.getMessage());\n+      return false;\n+    }\n   }\n \n   /**\n    * Package-private helper function to reduce calls to getBucket().\n+   *\n+   * This will be faster than the public variant of the method since this\n+   * doesn't verify the same-bucket condition.\n+   *\n    * @param bucket Bucket to operate in.\n-   * @param path Path to delete.\n-   * @return true if operation succeeded, false upon IOException.\n+   * @param keyNameList key name list to be deleted.\n+   * @return true if operation succeeded, false on IOException.\n    */\n-  boolean deleteObject(OzoneBucket bucket, String path) {\n-    LOG.trace(\"issuing delete for path to key: {}\", path);\n-    incrementCounter(Statistic.OBJECTS_DELETED);\n-    OFSPath ofsPath = new OFSPath(path);\n-    String keyName = ofsPath.getKeyName();\n-    if (keyName.length() == 0) {\n-      return false;\n-    }\n+  boolean deleteObjects(OzoneBucket bucket, List<String> keyNameList) {\n+    LOG.trace(\"issuing delete in volume: {}, bucket: {} for keys: {}\",\n+        bucket.getVolumeName(), bucket.getName(), keyNameList);\n+    List<String> keyList = keyNameList.stream()\n+        .map(p -> new OFSPath(p).getKeyName())\n+        .collect(Collectors.toList());\n     try {\n-      bucket.deleteKey(keyName);\n+      incrementCounter(Statistic.OBJECTS_DELETED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b0a7d9db47365585c2921e7b667b59648fc552a"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1NjAzNw==", "bodyText": "Do we have a follow up JIRA to fix rename once the batch rename is ready?", "url": "https://github.com/apache/ozone/pull/1286#discussion_r467156037", "createdAt": "2020-08-07T16:52:11Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -255,9 +258,11 @@ public FSDataOutputStream append(Path f, int bufferSize,\n     }\n \n     @Override\n-    boolean processKeyPath(String keyPath) throws IOException {\n-      String newPath = dstPath.concat(keyPath.substring(srcPath.length()));\n-      adapterImpl.rename(this.bucket, keyPath, newPath);\n+    boolean processKeyPath(List<String> keyPathList) throws IOException {\n+      for (String keyPath : keyPathList) {\n+        String newPath = dstPath.concat(keyPath.substring(srcPath.length()));\n+        adapterImpl.rename(this.bucket, keyPath, newPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b0a7d9db47365585c2921e7b667b59648fc552a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1NzU2Mg==", "bodyText": "LOG.trace a keyNameList address does not provide much useful info. I would suggest either remove or expand the list.", "url": "https://github.com/apache/ozone/pull/1286#discussion_r467157562", "createdAt": "2020-08-07T16:55:19Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -457,38 +458,79 @@ public boolean deleteObject(String path) {\n     }\n   }\n \n+  /**\n+   * Helper function to check if the list of key paths are in the same volume\n+   * and same bucket.\n+   */\n+  private boolean areInSameBucket(List<String> keyNameList) {\n+    if (keyNameList.size() == 0) {\n+      return true;\n+    }\n+    String firstKeyPath = keyNameList.get(0);\n+    final String volAndBucket = new OFSPath(firstKeyPath).getNonKeyPath();\n+    // If any key path's volume and bucket from the second element and on\n+    // in the list doesn't match the first element's, hasDifferentVolAndBucket\n+    // would be true\n+    boolean hasDifferentVolAndBucket = keyNameList.stream().skip(1)\n+        .anyMatch(p -> !(new OFSPath(p).getNonKeyPath().equals(volAndBucket)));\n+    return !hasDifferentVolAndBucket;\n+  }\n+\n   /**\n    * Helper method to delete an object specified by key name in bucket.\n    *\n-   * @param pathList key name list to be deleted\n+   * Only supports deleting keys in the same bucket in one call.\n+   *\n+   * Each item in the given list should be the String of an OFS path:\n+   * e.g. ofs://om/vol1/buck1/k1\n+   *\n+   * @param keyNameList key name list to be deleted\n    * @return true if the key is deleted, false otherwise\n    */\n   @Override\n-  public boolean deleteObjects(List<String> pathList) {\n-    // TODO: we will support deleteObjects in ofs.\n-    LOG.error(\"ofs currently does not support deleteObjects\");\n-    return false;\n+  public boolean deleteObjects(List<String> keyNameList) {\n+    LOG.trace(\"issuing delete for keys: {}\", keyNameList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b0a7d9db47365585c2921e7b667b59648fc552a"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13a01ffd839fef9e68618a67a5c1d4cded2afd08", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/13a01ffd839fef9e68618a67a5c1d4cded2afd08", "committedDate": "2020-08-07T18:21:36Z", "message": "BROCAI#deleteObjects shall return true when the list is empty, indicating the operation is successful.\n\nChange-Id: I6d9ddc92299776e9f2aa07ab57c37b0f5a6af7a1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "167240be4f8b35dc8fae2bdc09cf8351f0376b51", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/167240be4f8b35dc8fae2bdc09cf8351f0376b51", "committedDate": "2020-08-07T18:25:26Z", "message": "Remove LOG.trace keyNameList in BROCAI#deleteObjects.\n\nChange-Id: I3e92d159c664eeea4c54db06a4bb8a8ce7959306"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d74023607d312cc079f6ccb7172cef8ee6fe929", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/8d74023607d312cc079f6ccb7172cef8ee6fe929", "committedDate": "2020-08-07T18:25:55Z", "message": "Also remove LOG.trace keyNameList in BOCAI#deleteObjects.\n\nChange-Id: I9e28debbd9be021b2e4dac46ab9d811ad41376b8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e65e0d517042ce2056758262b04adc68f989ea8b", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/e65e0d517042ce2056758262b04adc68f989ea8b", "committedDate": "2020-08-07T18:48:34Z", "message": "incrementCounter(Stat, Count) is now exposed to FS/Impl.\n\nChange-Id: I94531e4e57f11bd2cf3e8f9c956725f708c14ec4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a01be17ef294eabba10844ad4c18cb05cd2e240", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/8a01be17ef294eabba10844ad4c18cb05cd2e240", "committedDate": "2020-08-07T18:51:41Z", "message": "Compat fix for previous commit.\n\nChange-Id: I7174e0841c280ea8d9f41e1cdc6b67f76b0e0ad1"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNzIxODk0", "url": "https://github.com/apache/ozone/pull/1286#pullrequestreview-463721894", "createdAt": "2020-08-08T06:09:27Z", "commit": {"oid": "8a01be17ef294eabba10844ad4c18cb05cd2e240"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNjowOToyN1rOG9t4sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNzo1MTo0M1rOG9uXuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2ODExNA==", "bodyText": "Why is this being deprecated?  It could delegate to the new method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Deprecated\n          \n          \n            \n              protected void incrementCounter(Statistic objectsRead) {\n          \n          \n            \n                //noop: Use OzoneClientAdapterImpl which supports statistics.\n          \n          \n            \n              protected void incrementCounter(Statistic objectsRead) {\n          \n          \n            \n                incrementCounter(objectsRead, 1);", "url": "https://github.com/apache/ozone/pull/1286#discussion_r467368114", "createdAt": "2020-08-08T06:09:27Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneClientAdapterImpl.java", "diffHunk": "@@ -190,14 +190,19 @@ public InputStream readFile(String key) throws IOException {\n     }\n   }\n \n+  @Deprecated\n   protected void incrementCounter(Statistic objectsRead) {\n     //noop: Use OzoneClientAdapterImpl which supports statistics.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a01be17ef294eabba10844ad4c18cb05cd2e240"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2ODE3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Deprecated\n          \n          \n            \n              protected void incrementCounter(Statistic statistic) {\n          \n          \n            \n                //don't do anyting in this default implementation.\n          \n          \n            \n              protected void incrementCounter(Statistic statistic) {\n          \n          \n            \n                incrementCounter(statistic, 1);", "url": "https://github.com/apache/ozone/pull/1286#discussion_r467368170", "createdAt": "2020-08-08T06:10:04Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "diffHunk": "@@ -220,17 +220,22 @@ protected InputStream createFSInputStream(InputStream inputStream) {\n     return new OzoneFSInputStream(inputStream, statistics);\n   }\n \n+  @Deprecated\n   protected void incrementCounter(Statistic statistic) {\n     //don't do anyting in this default implementation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a01be17ef294eabba10844ad4c18cb05cd2e240"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2ODIxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Deprecated\n          \n          \n            \n              protected void incrementCounter(Statistic objectsRead) {\n          \n          \n            \n                //noop: Use OzoneClientAdapterImpl which supports statistics.\n          \n          \n            \n              protected void incrementCounter(Statistic objectsRead) {\n          \n          \n            \n                incrementCounter(objectsRead, 1);", "url": "https://github.com/apache/ozone/pull/1286#discussion_r467368213", "createdAt": "2020-08-08T06:10:34Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -301,14 +302,19 @@ public InputStream readFile(String pathStr) throws IOException {\n     }\n   }\n \n+  @Deprecated\n   protected void incrementCounter(Statistic objectsRead) {\n     //noop: Use OzoneClientAdapterImpl which supports statistics.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a01be17ef294eabba10844ad4c18cb05cd2e240"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2ODI2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Deprecated\n          \n          \n            \n              protected void incrementCounter(Statistic statistic) {\n          \n          \n            \n                //don't do anything in this default implementation.\n          \n          \n            \n              protected void incrementCounter(Statistic statistic) {\n          \n          \n            \n                incrementCounter(statistic, 1);", "url": "https://github.com/apache/ozone/pull/1286#discussion_r467368261", "createdAt": "2020-08-08T06:11:10Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -183,25 +186,30 @@ public String getScheme() {\n \n   @Override\n   public FSDataInputStream open(Path path, int bufferSize) throws IOException {\n-    incrementCounter(Statistic.INVOCATION_OPEN);\n+    incrementCounter(Statistic.INVOCATION_OPEN, 1);\n     statistics.incrementReadOps(1);\n     LOG.trace(\"open() path: {}\", path);\n     final String key = pathToKey(path);\n     return new FSDataInputStream(\n         new OzoneFSInputStream(adapter.readFile(key), statistics));\n   }\n \n+  @Deprecated\n   protected void incrementCounter(Statistic statistic) {\n     //don't do anything in this default implementation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a01be17ef294eabba10844ad4c18cb05cd2e240"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3NjAwMQ==", "bodyText": "Nit: we could save two negations by using allMatch().", "url": "https://github.com/apache/ozone/pull/1286#discussion_r467376001", "createdAt": "2020-08-08T07:50:55Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -457,45 +463,83 @@ public boolean deleteObject(String path) {\n     }\n   }\n \n+  /**\n+   * Helper function to check if the list of key paths are in the same volume\n+   * and same bucket.\n+   */\n+  private boolean areInSameBucket(List<String> keyNameList) {\n+    if (keyNameList.size() == 0) {\n+      return true;\n+    }\n+    String firstKeyPath = keyNameList.get(0);\n+    final String volAndBucket = new OFSPath(firstKeyPath).getNonKeyPath();\n+    // If any key path's volume and bucket from the second element and on\n+    // in the list doesn't match the first element's, hasDifferentVolAndBucket\n+    // would be true\n+    boolean hasDifferentVolAndBucket = keyNameList.stream().skip(1)\n+        .anyMatch(p -> !(new OFSPath(p).getNonKeyPath().equals(volAndBucket)));\n+    return !hasDifferentVolAndBucket;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a01be17ef294eabba10844ad4c18cb05cd2e240"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3NjA1Ng==", "bodyText": "Nit: Sonar prefers isEmpty() over size() == 0.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (keyNameList.size() == 0) {\n          \n          \n            \n                if (keyNameList.isEmpty()) {", "url": "https://github.com/apache/ozone/pull/1286#discussion_r467376056", "createdAt": "2020-08-08T07:51:43Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -457,45 +463,83 @@ public boolean deleteObject(String path) {\n     }\n   }\n \n+  /**\n+   * Helper function to check if the list of key paths are in the same volume\n+   * and same bucket.\n+   */\n+  private boolean areInSameBucket(List<String> keyNameList) {\n+    if (keyNameList.size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a01be17ef294eabba10844ad4c18cb05cd2e240"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73d8223563dd31e41c1aea40cb05d12a0cff945e", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/73d8223563dd31e41c1aea40cb05d12a0cff945e", "committedDate": "2020-08-10T21:00:27Z", "message": "Clean up `areInSameBucket`.\n\nChange-Id: I3cd47aed4e4c281bbbfddb3a865826d59fdd1449"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5145690b3ab5404754554229dea0823dea32d202", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/5145690b3ab5404754554229dea0823dea32d202", "committedDate": "2020-08-11T21:27:56Z", "message": "1. Remove Deprecated annotation from old incrementCounter;\n2. Overload incrementCounter only in BasicOzoneFileSystem / BasicRootedOzoneFileSystem, where the old method calls the new one, minimizing the code change.\n\nChange-Id: I0606951cac16b16118ff775fbda05c36f5f4155b"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2631, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}