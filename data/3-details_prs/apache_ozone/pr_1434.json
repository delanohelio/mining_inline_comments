{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4NTQ2MDE5", "number": 1434, "title": "HDDS-3727. Volume space: check quotaUsageInBytes when write key.", "bodyText": "What changes were proposed in this pull request?\nIn addition, the current Quota setting does not take effect. HDDS-541 gives all the work needed to perfect Quota.\nThis PR is a subtask of HDDS-541.\nVolume has implemented increase usedBytes when write, and this PR is based on #1296.\nIn this PR we judge whether the Volume can be written when we write the key if the volume space quota enable.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3727\nHow was this patch tested?\nUT added.", "createdAt": "2020-09-17T09:51:36Z", "url": "https://github.com/apache/ozone/pull/1434", "merged": true, "mergeCommit": {"oid": "525ecbbd6679f8024318c5a04c29098b903312cc"}, "closed": true, "closedAt": "2020-09-29T03:19:10Z", "author": {"login": "captainzmc"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLS5JngFqTQ5MzE5MDQ5Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNPPW0AH2gAyNDg4NTQ2MDE5OmZjNjFiNTY5NGQ3MTVjZTY2NTZiM2Q3YmI1MjlkMTI1YTgyNmM4N2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTkwNDk3", "url": "https://github.com/apache/ozone/pull/1434#pullrequestreview-493190497", "createdAt": "2020-09-22T07:31:07Z", "commit": {"oid": "ea519b5d35956b90a0e258b3c40a6e7f03e77582"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzozMTowN1rOHVtcxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzozMTowN1rOHVtcxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUyNjc5MA==", "bodyText": "QUOTA_CHECK_ERROR  -> QUOTA_EXCEEDED", "url": "https://github.com/apache/ozone/pull/1434#discussion_r492526790", "createdAt": "2020-09-22T07:31:07Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/exceptions/OMException.java", "diffHunk": "@@ -229,7 +229,9 @@ public String toString() {\n \n     NOT_SUPPORTED_OPERATION,\n \n-    PARTIAL_RENAME\n+    PARTIAL_RENAME,\n+\n+    QUOTA_CHECK_ERROR", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea519b5d35956b90a0e258b3c40a6e7f03e77582"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTk4OTMz", "url": "https://github.com/apache/ozone/pull/1434#pullrequestreview-493198933", "createdAt": "2020-09-22T07:43:32Z", "commit": {"oid": "ea519b5d35956b90a0e258b3c40a6e7f03e77582"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzo0MzozM1rOHVt1UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzo0MzozM1rOHVt1UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUzMzA3Mw==", "bodyText": "same as above.", "url": "https://github.com/apache/ozone/pull/1434#discussion_r492533073", "createdAt": "2020-09-22T07:43:33Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/interface-client/src/main/proto/OmClientProtocol.proto", "diffHunk": "@@ -314,6 +314,8 @@ enum Status {\n \n     PARTIAL_RENAME = 65;\n \n+    QUOTA_CHECK_ERROR = 66;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea519b5d35956b90a0e258b3c40a6e7f03e77582"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjUyMzAy", "url": "https://github.com/apache/ozone/pull/1434#pullrequestreview-493252302", "createdAt": "2020-09-22T08:53:55Z", "commit": {"oid": "ea519b5d35956b90a0e258b3c40a6e7f03e77582"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo1Mzo1NVrOHVwZlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo1Mzo1NVrOHVwZlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3NTEyNg==", "bodyText": "Can we add used bytes check in each test case?", "url": "https://github.com/apache/ozone/pull/1434#discussion_r492575126", "createdAt": "2020-09-22T08:53:55Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -707,6 +707,62 @@ public void testPutKey() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void testCheckUsedBytesQuota() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea519b5d35956b90a0e258b3c40a6e7f03e77582"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/8d94b314c26473eb20c56b181684041b239a2d29", "committedDate": "2020-09-24T07:10:06Z", "message": "add check volume quota in bytes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea519b5d35956b90a0e258b3c40a6e7f03e77582", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/ea519b5d35956b90a0e258b3c40a6e7f03e77582", "committedDate": "2020-09-17T11:46:39Z", "message": "fix ut"}, "afterCommit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/8d94b314c26473eb20c56b181684041b239a2d29", "committedDate": "2020-09-24T07:10:06Z", "message": "add check volume quota in bytes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDQ2MTY5", "url": "https://github.com/apache/ozone/pull/1434#pullrequestreview-497046169", "createdAt": "2020-09-27T03:06:17Z", "commit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzowNjoxN1rOHYkL-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzowNjoxN1rOHYkL-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyMDc2Mg==", "bodyText": "Can we add a isQuotaInBytesSet check in OmVolumeArgs and use this function instead?", "url": "https://github.com/apache/ozone/pull/1434#discussion_r495520762", "createdAt": "2020-09-27T03:06:17Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -277,6 +277,16 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           .collect(Collectors.toList());\n       omKeyInfo.appendNewBlocks(newLocationList, false);\n \n+      omVolumeArgs = getVolumeInfo(omMetadataManager, volumeName);\n+      omBucketInfo = getBucketInfo(omMetadataManager, volumeName, bucketName);\n+      // check volume quota\n+      long preAllocatedSpace = newLocationList.size()\n+          * ozoneManager.getScmBlockSize()\n+          * omKeyInfo.getFactor().getNumber();\n+      if (omVolumeArgs.getQuotaInBytes() > OzoneConsts.QUOTA_RESET) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDQ2Mzc0", "url": "https://github.com/apache/ozone/pull/1434#pullrequestreview-497046374", "createdAt": "2020-09-27T03:10:44Z", "commit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzoxMDo0NFrOHYkNQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzoxMDo0NFrOHYkNQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyMTA4OQ==", "bodyText": "If A object has multiple blocks, and quota_exceeded exception is thrown out at the last block, shall we only deduct the block space size at this step?", "url": "https://github.com/apache/ozone/pull/1434#discussion_r495521089", "createdAt": "2020-09-27T03:10:44Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -227,6 +232,18 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     } catch (IOException ex) {\n       omMetrics.incNumBlockAllocateCallFails();\n       exception = ex;\n+      if (exception.toString().contains(\n+          OMException.ResultCodes.QUOTA_EXCEEDED.toString())) {\n+        long keyAllocatedSpace = openKeyInfo.getLatestVersionLocations()\n+            .getLocationListCount() * ozoneManager.getScmBlockSize()\n+            * openKeyInfo.getFactor().getNumber();\n+        // Update usedBytes atomically. ErrorOMResponse does not persist the DB,\n+        // so we update the cache first. The next time another key is written,\n+        // volume Args will be persisted to the DB.\n+        // TODO: There is a delay in updating DB in this way, and if necessary\n+        //  we can modify the ErrorOMResponse to avoid it.\n+        omVolumeArgs.getUsedBytes().add(-keyAllocatedSpace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDQ2NDk3", "url": "https://github.com/apache/ozone/pull/1434#pullrequestreview-497046497", "createdAt": "2020-09-27T03:13:11Z", "commit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzoxMzoxMlrOHYkN5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzoxMzoxMlrOHYkN5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyMTI1Mw==", "bodyText": "Can we add a multiple block write case here\uff0cso the first few block will succeed\uff0c while the later block will fail due to quota exceed?", "url": "https://github.com/apache/ozone/pull/1434#discussion_r495521253", "createdAt": "2020-09-27T03:13:12Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -707,9 +707,71 @@ public void testPutKey() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void testCheckUsedBytesQuota() throws IOException {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    OzoneVolume volume = null;\n+\n+    String value = \"sample value\";\n+    int blockSize = (int) ozoneManager.getConfiguration().getStorageSize(\n+        OZONE_SCM_BLOCK_SIZE, OZONE_SCM_BLOCK_SIZE_DEFAULT, StorageUnit.BYTES);\n+    int valueLength = value.getBytes().length;\n+    int countException = 0;\n+\n+    store.createVolume(volumeName);\n+    volume = store.getVolume(volumeName);\n+    // Set quota In Bytes for a smaller value\n+    store.getVolume(volumeName).setQuota(\n+        OzoneQuota.parseQuota(\"1 Bytes\", 100));\n+    volume.createBucket(bucketName);\n+    OzoneBucket bucket = volume.getBucket(bucketName);\n+\n+    // Test write key.\n+    // The remaining quota does not satisfy a block size, so the write fails.\n+    try {\n+      writeKey(bucket, UUID.randomUUID().toString(), ONE, value, valueLength);\n+    } catch (IOException ex) {\n+      countException++;\n+      GenericTestUtils.assertExceptionContains(\"QUOTA_EXCEEDED\", ex);\n+    }\n+    // Write failed, volume usedBytes should be 0\n+    Assert.assertEquals(0L, store.getVolume(volumeName).getUsedBytes());\n+\n+    // Test write file.\n+    // The remaining quota does not satisfy a block size, so the write fails.\n+    try {\n+      writeFile(bucket, UUID.randomUUID().toString(), ONE, value, 0);\n+    } catch (IOException ex) {\n+      countException++;\n+      GenericTestUtils.assertExceptionContains(\"QUOTA_EXCEEDED\", ex);\n+    }\n+    // Write failed, volume usedBytes should be 0\n+    Assert.assertEquals(0L, store.getVolume(volumeName).getUsedBytes());\n+\n+    // Write large key, test allocateBlock fails.\n+    store.getVolume(volumeName).setQuota(\n+        OzoneQuota.parseQuota(blockSize + \"Bytes\", 100));\n+    try {\n+      OzoneOutputStream out = bucket.createKey(UUID.randomUUID().toString(),\n+          valueLength, STAND_ALONE, ONE, new HashMap<>());\n+      for(int i=0; i <= blockSize/value.length(); i++) {\n+        out.write(value.getBytes());\n+      }\n+      out.close();\n+    } catch (IOException ex) {\n+      countException++;\n+      GenericTestUtils.assertExceptionContains(\"QUOTA_EXCEEDED\", ex);\n+    }\n+    // AllocateBlock failed, volume usedBytes should be 0\n+    Assert.assertEquals(0L, store.getVolume(volumeName).getUsedBytes());\n+\n+    Assert.assertEquals(3, countException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDQ2Nzkw", "url": "https://github.com/apache/ozone/pull/1434#pullrequestreview-497046790", "createdAt": "2020-09-27T03:16:49Z", "commit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzoxNjo0OVrOHYkPIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzoxNjo0OVrOHYkPIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyMTU2OQ==", "bodyText": "unnessary empty line.", "url": "https://github.com/apache/ozone/pull/1434#discussion_r495521569", "createdAt": "2020-09-27T03:16:49Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java", "diffHunk": "@@ -533,6 +533,26 @@ protected FileEncryptionInfo getFileEncryptionInfo(KeyArgs keyArgs) {\n     return encryptionInfo;\n   }\n \n+  /**\n+   * Check volume quota in bytes.\n+   * @param omVolumeArgs\n+   * @param allocateSize\n+   * @throws IOException\n+   */\n+  protected void checkVolumeQuotaInBytes(OmVolumeArgs omVolumeArgs,\n+      long allocateSize) throws IOException {\n+    long usedBytes = omVolumeArgs.getUsedBytes().sum();\n+    long quotaInBytes = omVolumeArgs.getQuotaInBytes();\n+    if (quotaInBytes - usedBytes < allocateSize) {\n+      throw new OMException(\"The DiskSpace quota of volume:\"\n+          + omVolumeArgs.getVolume() + \"exceeded: quotaInBytes: \"\n+          + quotaInBytes + \" Bytes but diskspace consumed: \" + (usedBytes\n+          + allocateSize) + \" Bytes.\",\n+          OMException.ResultCodes.QUOTA_EXCEEDED);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDQ2OTg3", "url": "https://github.com/apache/ozone/pull/1434#pullrequestreview-497046987", "createdAt": "2020-09-27T03:21:11Z", "commit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzoyMToxMVrOHYkQag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMzoyMToxMVrOHYkQag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyMTg5OA==", "bodyText": "unnessary blank line.", "url": "https://github.com/apache/ozone/pull/1434#discussion_r495521898", "createdAt": "2020-09-27T03:21:11Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -239,8 +256,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     auditLog(auditLogger, buildAuditMessage(OMAction.ALLOCATE_BLOCK, auditMap,\n         exception, getOmRequest().getUserInfo()));\n \n-\n-\n     return omClientResponse;\n   }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d94b314c26473eb20c56b181684041b239a2d29"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a7351f482511db2dade0c4d83a815ba7ec46bff", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/6a7351f482511db2dade0c4d83a815ba7ec46bff", "committedDate": "2020-09-27T08:25:53Z", "message": "fix review issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc61b5694d715ce6656b3d7bb529d125a826c87d", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/fc61b5694d715ce6656b3d7bb529d125a826c87d", "committedDate": "2020-09-28T08:23:36Z", "message": "fix ut checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2547, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}