{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwODA5MDQ5", "number": 1706, "title": "HDDS-4277.  Support Bucket Namespace Quota Updates", "bodyText": "What changes were proposed in this pull request?\nadd namespaceQuotaUsage and update it when create and delete key in a bucket\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4277\nHow was this patch tested?\nUT", "createdAt": "2020-12-16T00:31:58Z", "url": "https://github.com/apache/ozone/pull/1706", "merged": true, "mergeCommit": {"oid": "a58d3f5a0046f836b30f246c3e98d51805addadd"}, "closed": true, "closedAt": "2020-12-24T08:47:45Z", "author": {"login": "amaliujia"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnEwkSgFqTU1NDY3MTkwNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdpFOH-gH2gAyNTQwODA5MDQ5OjBmZmE3ZjZlYjJiMTAzMDExYTYzYTBlZDBiYjllZDViOTNlZjFkODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NjcxOTA2", "url": "https://github.com/apache/ozone/pull/1706#pullrequestreview-554671906", "createdAt": "2020-12-17T14:46:21Z", "commit": {"oid": "926e30ec6b98747c39160fed547ab60cb520c54d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNDo0NjoyMVrOIH5Atg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNDo1MjoxOVrOIH5TbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NTAxNA==", "bodyText": "countException is not actually needed, we could add fail() after writeKey and ensure this exception should be happened.\n try {\n      writeKey(bucket, key3, ONE, value, value.length());\n      Assert.fail(\"Write key should be failed\")\n    } catch (IOException ex) {", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545145014", "createdAt": "2020-12-17T14:46:21Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -932,6 +932,50 @@ public void testVolumeUsedNamespace() throws IOException {\n     Assert.assertEquals(0L, volume.getUsedNamespace());\n   }\n \n+  @Test\n+  public void testBucketUsedNamespace() throws IOException {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    String key1 = UUID.randomUUID().toString();\n+    String key2 = UUID.randomUUID().toString();\n+    String key3 = UUID.randomUUID().toString();\n+    OzoneVolume volume = null;\n+    OzoneBucket bucket = null;\n+\n+    String value = \"sample value\";\n+    int countException = 0;\n+\n+    store.createVolume(volumeName);\n+    volume = store.getVolume(volumeName);\n+    volume.createBucket(bucketName);\n+    bucket = volume.getBucket(bucketName);\n+    bucket.setQuota(OzoneQuota.parseQuota(Long.MAX_VALUE + \" Bytes\", 2));\n+\n+    writeKey(bucket, key1, ONE, value, value.length());\n+    Assert.assertEquals(1L,\n+        store.getVolume(volumeName).getBucket(bucketName).getUsedNamespace());\n+\n+    writeKey(bucket, key2, ONE, value, value.length());\n+    Assert.assertEquals(2L,\n+        store.getVolume(volumeName).getBucket(bucketName).getUsedNamespace());\n+\n+    try {\n+      writeKey(bucket, key3, ONE, value, value.length());\n+    } catch (IOException ex) {\n+      countException++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926e30ec6b98747c39160fed547ab60cb520c54d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NTM4Nw==", "bodyText": "This comment should be updated", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545145387", "createdAt": "2020-12-17T14:46:49Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -932,6 +932,50 @@ public void testVolumeUsedNamespace() throws IOException {\n     Assert.assertEquals(0L, volume.getUsedNamespace());\n   }\n \n+  @Test\n+  public void testBucketUsedNamespace() throws IOException {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    String key1 = UUID.randomUUID().toString();\n+    String key2 = UUID.randomUUID().toString();\n+    String key3 = UUID.randomUUID().toString();\n+    OzoneVolume volume = null;\n+    OzoneBucket bucket = null;\n+\n+    String value = \"sample value\";\n+    int countException = 0;\n+\n+    store.createVolume(volumeName);\n+    volume = store.getVolume(volumeName);\n+    volume.createBucket(bucketName);\n+    bucket = volume.getBucket(bucketName);\n+    bucket.setQuota(OzoneQuota.parseQuota(Long.MAX_VALUE + \" Bytes\", 2));\n+\n+    writeKey(bucket, key1, ONE, value, value.length());\n+    Assert.assertEquals(1L,\n+        store.getVolume(volumeName).getBucket(bucketName).getUsedNamespace());\n+\n+    writeKey(bucket, key2, ONE, value, value.length());\n+    Assert.assertEquals(2L,\n+        store.getVolume(volumeName).getBucket(bucketName).getUsedNamespace());\n+\n+    try {\n+      writeKey(bucket, key3, ONE, value, value.length());\n+    } catch (IOException ex) {\n+      countException++;\n+      GenericTestUtils.assertExceptionContains(\"QUOTA_EXCEEDED\", ex);\n+    }\n+\n+    // Write failed, bucket usedBytes should remain as 1\n+    Assert.assertEquals(2L,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926e30ec6b98747c39160fed547ab60cb520c54d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0ODkwMA==", "bodyText": "We should move checkBucketQuotaInNamespace check after checkBucketQuotaInBytes. Here we add cache entry before quota check, this will lead the dirty data.", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545148900", "createdAt": "2020-12-17T14:51:14Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -299,6 +299,10 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       omBucketInfo.incrUsedBytes(preAllocatedSpace);\n \n+      // Update namespace quota\n+      checkBucketQuotaInNamespace(omBucketInfo, 1L);\n+      omBucketInfo.incrUsedNamespace(1L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926e30ec6b98747c39160fed547ab60cb520c54d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0OTgwNQ==", "bodyText": "Same comment like above.", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545149805", "createdAt": "2020-12-17T14:52:19Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -309,6 +309,10 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       omBucketInfo.incrUsedBytes(preAllocatedSpace);\n \n+      // Update namespace quota\n+      checkBucketQuotaInNamespace(omBucketInfo, 1L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926e30ec6b98747c39160fed547ab60cb520c54d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTMyNzk3", "url": "https://github.com/apache/ozone/pull/1706#pullrequestreview-555132797", "createdAt": "2020-12-18T02:32:06Z", "commit": {"oid": "a57c74b558aa3905849302312c14d03bc073c816"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMjozMjowN1rOIIQu2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMjozMjowN1rOIIQu2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzMzY1Nw==", "bodyText": "Nit: usedBytes -> usedNamespace", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545533657", "createdAt": "2020-12-18T02:32:07Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -961,19 +960,18 @@ public void testBucketUsedNamespace() throws IOException {\n \n     try {\n       writeKey(bucket, key3, ONE, value, value.length());\n+      Assert.fail(\"Write key should be failed\");\n     } catch (IOException ex) {\n-      countException++;\n       GenericTestUtils.assertExceptionContains(\"QUOTA_EXCEEDED\", ex);\n     }\n \n-    // Write failed, bucket usedBytes should remain as 1\n+    // Write failed, bucket usedBytes should remain as 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a57c74b558aa3905849302312c14d03bc073c816"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MjE5NDUw", "url": "https://github.com/apache/ozone/pull/1706#pullrequestreview-555219450", "createdAt": "2020-12-18T07:21:50Z", "commit": {"oid": "10762abbbb48fe396c17f6ab7bf2cda728e5e6f6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwNzoyMTo1MFrOIIVzLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwNzoyNTo1NVrOIIV5IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYxNjY4Ng==", "bodyText": "If the key is created successfully, but write failed before the commit key (for example, client crashes), then the key should not be counted.\nWe'd better  incrUsedNamespace(-1L), when we clean up this key in the background.", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545616686", "createdAt": "2020-12-18T07:21:50Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -308,6 +309,8 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           new CacheValue<>(Optional.of(omKeyInfo), trxnLogIndex));\n \n       omBucketInfo.incrUsedBytes(preAllocatedSpace);\n+      // Update namespace quota\n+      omBucketInfo.incrUsedNamespace(1L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10762abbbb48fe396c17f6ab7bf2cda728e5e6f6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYxODIwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (omBucketInfo.getQuotaInNamespace() != OzoneConsts.QUOTA_RESET) {\n          \n          \n            \n                if (omBucketInfo.getQuotaInNamespace() > OzoneConsts.QUOTA_RESET) {\n          \n      \n    \n    \n  \n\nThis unity has been changed: #1677 (comment)", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545618208", "createdAt": "2020-12-18T07:25:55Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java", "diffHunk": "@@ -589,6 +589,25 @@ protected void checkBucketQuotaInBytes(OmBucketInfo omBucketInfo,\n     }\n   }\n \n+  /**\n+   * Check namespace quota.\n+   */\n+  protected void checkBucketQuotaInNamespace(OmBucketInfo omBucketInfo,\n+      long allocatedNamespace) throws IOException {\n+    if (omBucketInfo.getQuotaInNamespace() != OzoneConsts.QUOTA_RESET) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13f3daa5d8a566a60823884ea5c8b29cdc231593"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3OTMzNDkz", "url": "https://github.com/apache/ozone/pull/1706#pullrequestreview-557933493", "createdAt": "2020-12-23T15:03:21Z", "commit": {"oid": "30813107ef60e01ed5a3078cb37c618f147a483e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3453adba3fda4f06b0640de2513fa9fe4074772a", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/3453adba3fda4f06b0640de2513fa9fe4074772a", "committedDate": "2020-12-23T18:35:35Z", "message": "HDDS-4277. Bucket Namespace: add namespaceQuotaUsage and update it when create and delete key in a bucket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d55d1da93163eceb5ad9ec9f20bbc763f29d33eb", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/d55d1da93163eceb5ad9ec9f20bbc763f29d33eb", "committedDate": "2020-12-23T18:35:37Z", "message": "fixup! fix wrong comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a8dafd979676816893b41b0112bbdd104dfa0de", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/8a8dafd979676816893b41b0112bbdd104dfa0de", "committedDate": "2020-12-23T18:35:37Z", "message": "fixup! address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb0609478f64842d7202ec22bac97ebf43045da0", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/eb0609478f64842d7202ec22bac97ebf43045da0", "committedDate": "2020-12-23T18:35:37Z", "message": "fixup! fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63d6ea6975d0995c1558ef4660a4ca51de3139a3", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/63d6ea6975d0995c1558ef4660a4ca51de3139a3", "committedDate": "2020-12-23T18:35:37Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65a68b1f36f8f766840fb10fbe1e385063d7d054", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/65a68b1f36f8f766840fb10fbe1e385063d7d054", "committedDate": "2020-12-23T18:35:37Z", "message": "fixup! address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37a632dc8f02df1049858c2e88870d2bfccf6cdd", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/37a632dc8f02df1049858c2e88870d2bfccf6cdd", "committedDate": "2020-12-23T18:35:37Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0eb571b2dff0e8d52a6040d8f23d89d547ec69af", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/0eb571b2dff0e8d52a6040d8f23d89d547ec69af", "committedDate": "2020-12-23T18:35:37Z", "message": "trigger new CI check"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30813107ef60e01ed5a3078cb37c618f147a483e", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/30813107ef60e01ed5a3078cb37c618f147a483e", "committedDate": "2020-12-23T02:24:21Z", "message": "trigger new CI check"}, "afterCommit": {"oid": "0eb571b2dff0e8d52a6040d8f23d89d547ec69af", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/0eb571b2dff0e8d52a6040d8f23d89d547ec69af", "committedDate": "2020-12-23T18:35:37Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ffa7f6eb2b103011a63a0ed0bb9ed5b93ef1d83", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/0ffa7f6eb2b103011a63a0ed0bb9ed5b93ef1d83", "committedDate": "2020-12-23T20:33:05Z", "message": "trigger new CI check"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2142, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}