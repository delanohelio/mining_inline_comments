{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTkyMjAy", "number": 610, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMToxODoyN1rODjbOpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjozMTozN1rODl9ikw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDcyODY4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMToxODoyN1rOFvOdrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzowNzoxN1rOFvkWXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NDM2Ng==", "bodyText": "Is it better to have a 'DEFAULT_USER' string to replace a null input?", "url": "https://github.com/apache/ozone/pull/610#discussion_r385064366", "createdAt": "2020-02-27T11:18:27Z", "author": {"login": "timmylicheng"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -67,10 +75,9 @@ private void initOFSPath(String pathStr) {\n       // TODO: Compare a keyword list instead for future expansion.\n       if (firstToken.equals(OFS_MOUNT_NAME_TMP)) {\n         mountName = firstToken;\n-        // TODO: Retrieve volume and bucket of the mount from user protobuf.\n-        //  Leave them hard-coded just for now. Will be addressed in HDDS-2929\n-        volumeName = \"tempVolume\";\n-        bucketName = \"tempBucket\";\n+        // Future: retrieve volume and bucket from UserVolumeInfo\n+        volumeName = OFS_MOUNT_TMP_VOLUMENAME;\n+        bucketName = getTempMountBucketName(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyMjk0MA==", "bodyText": "Thanks for the review and comment.\nYeah good point. null here doesn't have have good readability.\nAdded new function getTempMountBucketNameOfCurrentUser() in 5ed5cfa\nInitially I thought of overriding it but ended up adding a new function with a different name for even better code readability.", "url": "https://github.com/apache/ozone/pull/610#discussion_r385422940", "createdAt": "2020-02-27T23:07:17Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -67,10 +75,9 @@ private void initOFSPath(String pathStr) {\n       // TODO: Compare a keyword list instead for future expansion.\n       if (firstToken.equals(OFS_MOUNT_NAME_TMP)) {\n         mountName = firstToken;\n-        // TODO: Retrieve volume and bucket of the mount from user protobuf.\n-        //  Leave them hard-coded just for now. Will be addressed in HDDS-2929\n-        volumeName = \"tempVolume\";\n-        bucketName = \"tempBucket\";\n+        // Future: retrieve volume and bucket from UserVolumeInfo\n+        volumeName = OFS_MOUNT_TMP_VOLUMENAME;\n+        bucketName = getTempMountBucketName(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NDM2Ng=="}, "originalCommit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDczMTAwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMToxOToxN1rOFvOfBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzowNzoyNVrOFvkWgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NDcxMQ==", "bodyText": "Do you mean to comment a TODO here?", "url": "https://github.com/apache/ozone/pull/610#discussion_r385064711", "createdAt": "2020-02-27T11:19:17Z", "author": {"login": "timmylicheng"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -67,10 +75,9 @@ private void initOFSPath(String pathStr) {\n       // TODO: Compare a keyword list instead for future expansion.\n       if (firstToken.equals(OFS_MOUNT_NAME_TMP)) {\n         mountName = firstToken;\n-        // TODO: Retrieve volume and bucket of the mount from user protobuf.\n-        //  Leave them hard-coded just for now. Will be addressed in HDDS-2929\n-        volumeName = \"tempVolume\";\n-        bucketName = \"tempBucket\";\n+        // Future: retrieve volume and bucket from UserVolumeInfo", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyMjk3OQ==", "bodyText": "Done in 5ed5cfa", "url": "https://github.com/apache/ozone/pull/610#discussion_r385422979", "createdAt": "2020-02-27T23:07:25Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -67,10 +75,9 @@ private void initOFSPath(String pathStr) {\n       // TODO: Compare a keyword list instead for future expansion.\n       if (firstToken.equals(OFS_MOUNT_NAME_TMP)) {\n         mountName = firstToken;\n-        // TODO: Retrieve volume and bucket of the mount from user protobuf.\n-        //  Leave them hard-coded just for now. Will be addressed in HDDS-2929\n-        volumeName = \"tempVolume\";\n-        bucketName = \"tempBucket\";\n+        // Future: retrieve volume and bucket from UserVolumeInfo", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NDcxMQ=="}, "originalCommit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDczMzc1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMToyMDoxN1rOFvOguQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjo1NTo1MlrOFvkGZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NTE0NQ==", "bodyText": "NIT. 'conf' may be a more consistent choice of naming in Ozone repo.", "url": "https://github.com/apache/ozone/pull/610#discussion_r385065145", "createdAt": "2020-02-27T11:20:17Z", "author": {"login": "timmylicheng"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -113,12 +125,12 @@ public void teardown() {\n \n   @Test\n   public void testOzoneFsServiceLoader() throws IOException {\n-    OzoneConfiguration conf = new OzoneConfiguration();\n+    OzoneConfiguration cfg = new OzoneConfiguration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxODMzMw==", "bodyText": "This is due to I put another conf in global. So IntelliJ is complaining this conf inside shadows the global conf in this function.\nAnyway, will rename it.", "url": "https://github.com/apache/ozone/pull/610#discussion_r385418333", "createdAt": "2020-02-27T22:54:19Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -113,12 +125,12 @@ public void teardown() {\n \n   @Test\n   public void testOzoneFsServiceLoader() throws IOException {\n-    OzoneConfiguration conf = new OzoneConfiguration();\n+    OzoneConfiguration cfg = new OzoneConfiguration();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NTE0NQ=="}, "originalCommit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxODg1NQ==", "bodyText": "Done in 28cedc4", "url": "https://github.com/apache/ozone/pull/610#discussion_r385418855", "createdAt": "2020-02-27T22:55:52Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestRootedOzoneFileSystem.java", "diffHunk": "@@ -113,12 +125,12 @@ public void teardown() {\n \n   @Test\n   public void testOzoneFsServiceLoader() throws IOException {\n-    OzoneConfiguration conf = new OzoneConfiguration();\n+    OzoneConfiguration cfg = new OzoneConfiguration();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NTE0NQ=="}, "originalCommit": {"oid": "c741140d9920858e9d339d7dbd8c4629b484e11b"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTQxNzAxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoxOToxMlrOFwxacQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzo1NzoxOVrOFwzsgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NTU1Mw==", "bodyText": "Do we create the tmp bucket even for read operation?", "url": "https://github.com/apache/ozone/pull/610#discussion_r386685553", "createdAt": "2020-03-02T22:19:12Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -213,7 +213,9 @@ private OzoneBucket getBucket(String volumeStr, String bucketStr,\n     try {\n       bucket = proxy.getBucketDetails(volumeStr, bucketStr);\n     } catch (OMException ex) {\n-      if (createIfNotExist) {\n+      // Note: always create bucket if volumeStr matches \"tmp\" so -put works\n+      if (createIfNotExist ||\n+          volumeStr.equals(OFSPath.OFS_MOUNT_TMP_VOLUMENAME)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY5MjQzMg==", "bodyText": "That's correct. This is my implementation decision.\nI initially only create temp bucket for write, as you would expect. Then I found Hadoop FS file write operations calls getFileStatus beforehand.", "url": "https://github.com/apache/ozone/pull/610#discussion_r386692432", "createdAt": "2020-03-02T22:34:34Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -213,7 +213,9 @@ private OzoneBucket getBucket(String volumeStr, String bucketStr,\n     try {\n       bucket = proxy.getBucketDetails(volumeStr, bucketStr);\n     } catch (OMException ex) {\n-      if (createIfNotExist) {\n+      // Note: always create bucket if volumeStr matches \"tmp\" so -put works\n+      if (createIfNotExist ||\n+          volumeStr.equals(OFSPath.OFS_MOUNT_TMP_VOLUMENAME)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NTU1Mw=="}, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMjI1OA==", "bodyText": "After some discussion, we decide to let user create their temp bucket manually upon first use. i.e. ozone fs -mkdir ofs://om/tmp/", "url": "https://github.com/apache/ozone/pull/610#discussion_r386722258", "createdAt": "2020-03-02T23:55:12Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -213,7 +213,9 @@ private OzoneBucket getBucket(String volumeStr, String bucketStr,\n     try {\n       bucket = proxy.getBucketDetails(volumeStr, bucketStr);\n     } catch (OMException ex) {\n-      if (createIfNotExist) {\n+      // Note: always create bucket if volumeStr matches \"tmp\" so -put works\n+      if (createIfNotExist ||\n+          volumeStr.equals(OFSPath.OFS_MOUNT_TMP_VOLUMENAME)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NTU1Mw=="}, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMjk0Nw==", "bodyText": "Addressed in 1d4164b", "url": "https://github.com/apache/ozone/pull/610#discussion_r386722947", "createdAt": "2020-03-02T23:57:19Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneClientAdapterImpl.java", "diffHunk": "@@ -213,7 +213,9 @@ private OzoneBucket getBucket(String volumeStr, String bucketStr,\n     try {\n       bucket = proxy.getBucketDetails(volumeStr, bucketStr);\n     } catch (OMException ex) {\n-      if (createIfNotExist) {\n+      // Note: always create bucket if volumeStr matches \"tmp\" so -put works\n+      if (createIfNotExist ||\n+          volumeStr.equals(OFSPath.OFS_MOUNT_TMP_VOLUMENAME)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NTU1Mw=="}, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTQyMDk5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoyMDozNFrOFwxc7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzoyMDoyOFrOFxaM6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NjE4OQ==", "bodyText": "How do we allow userA to access userB's tmp bucket? This may be needed for the ETL workload where an injest process run as user A and the process process run as user B.", "url": "https://github.com/apache/ozone/pull/610#discussion_r386686189", "createdAt": "2020-03-02T22:20:34Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -44,7 +48,7 @@\n    * /vol1/buc2/dir3/key4  vol1           buc2           (empty)      dir3/key4\n    * /vol1/buc2            vol1           buc2           (empty)      (empty)\n    * /vol1                 vol1           (empty)        (empty)      (empty)\n-   * /tmp/dir3/key4        tempVolume     tempBucket     tmp          dir3/key4\n+   * /tmp/dir3/key4        tmp            <username>     tmp          dir3/key4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMzQ5Nw==", "bodyText": "As of now userA can't access userB's temp with ofs:// . Because OFSPath parses ofs://tmp/dir1/dir2 into\nvolume=tmp\nbucketname=<USER_TEMP_BUCKET_NAME>\nkey(in bucket)=dir1/dir2", "url": "https://github.com/apache/ozone/pull/610#discussion_r386723497", "createdAt": "2020-03-02T23:59:08Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -44,7 +48,7 @@\n    * /vol1/buc2/dir3/key4  vol1           buc2           (empty)      dir3/key4\n    * /vol1/buc2            vol1           buc2           (empty)      (empty)\n    * /vol1                 vol1           (empty)        (empty)      (empty)\n-   * /tmp/dir3/key4        tempVolume     tempBucket     tmp          dir3/key4\n+   * /tmp/dir3/key4        tmp            <username>     tmp          dir3/key4", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NjE4OQ=="}, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMzg2OQ==", "bodyText": "I'm thinking of adding some .reserved like HDFS did to allow user to bypass the mount or add some options, if there is a need.\nAnyway this may not fit in this jira.", "url": "https://github.com/apache/ozone/pull/610#discussion_r386723869", "createdAt": "2020-03-03T00:00:25Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -44,7 +48,7 @@\n    * /vol1/buc2/dir3/key4  vol1           buc2           (empty)      dir3/key4\n    * /vol1/buc2            vol1           buc2           (empty)      (empty)\n    * /vol1                 vol1           (empty)        (empty)      (empty)\n-   * /tmp/dir3/key4        tempVolume     tempBucket     tmp          dir3/key4\n+   * /tmp/dir3/key4        tmp            <username>     tmp          dir3/key4", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NjE4OQ=="}, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1MzgzMw==", "bodyText": "agree, can you add the proposal to the design doc in the umbrella JIRA?", "url": "https://github.com/apache/ozone/pull/610#discussion_r387353833", "createdAt": "2020-03-03T23:20:28Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -44,7 +48,7 @@\n    * /vol1/buc2/dir3/key4  vol1           buc2           (empty)      dir3/key4\n    * /vol1/buc2            vol1           buc2           (empty)      (empty)\n    * /vol1                 vol1           (empty)        (empty)      (empty)\n-   * /tmp/dir3/key4        tempVolume     tempBucket     tmp          dir3/key4\n+   * /tmp/dir3/key4        tmp            <username>     tmp          dir3/key4", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NjE4OQ=="}, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTQzMTEwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoyNDowMlrOFwxi8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzo1NzozNFrOFwzsyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NzczMA==", "bodyText": "why do we need to catch the exception here? This should not fail, if it does, the exception can bubble up directly.", "url": "https://github.com/apache/ozone/pull/610#discussion_r386687730", "createdAt": "2020-03-02T22:24:02Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -174,4 +181,32 @@ public boolean isRoot() {\n   public boolean isVolume() {\n     return this.getBucketName().isEmpty() && !this.getVolumeName().isEmpty();\n   }\n+\n+  /**\n+   * Get the bucket name of temp for given username.\n+   * @param username Input user name String. Mustn't be null.\n+   * @return Username MD5 hash in hex digits.\n+   */\n+  @VisibleForTesting\n+  static String getTempMountBucketName(String username) {\n+    Preconditions.checkNotNull(username);\n+    // TODO: Improve this to \"slugify(username)-md5(username)\" for better\n+    //  readability?\n+    return DigestUtils.md5Hex(username);\n+  }\n+\n+  /**\n+   * Get the bucket name of temp for the current user from UserGroupInformation.\n+   * @return Username MD5 hash in hex digits.\n+   */\n+  @VisibleForTesting\n+  static String getTempMountBucketNameOfCurrentUser() {\n+    String username;\n+    try {\n+      username = UserGroupInformation.getCurrentUser().getUserName();\n+    } catch (IOException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMzAxNw==", "bodyText": "Done in 1d4164b", "url": "https://github.com/apache/ozone/pull/610#discussion_r386723017", "createdAt": "2020-03-02T23:57:34Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -174,4 +181,32 @@ public boolean isRoot() {\n   public boolean isVolume() {\n     return this.getBucketName().isEmpty() && !this.getVolumeName().isEmpty();\n   }\n+\n+  /**\n+   * Get the bucket name of temp for given username.\n+   * @param username Input user name String. Mustn't be null.\n+   * @return Username MD5 hash in hex digits.\n+   */\n+  @VisibleForTesting\n+  static String getTempMountBucketName(String username) {\n+    Preconditions.checkNotNull(username);\n+    // TODO: Improve this to \"slugify(username)-md5(username)\" for better\n+    //  readability?\n+    return DigestUtils.md5Hex(username);\n+  }\n+\n+  /**\n+   * Get the bucket name of temp for the current user from UserGroupInformation.\n+   * @return Username MD5 hash in hex digits.\n+   */\n+  @VisibleForTesting\n+  static String getTempMountBucketNameOfCurrentUser() {\n+    String username;\n+    try {\n+      username = UserGroupInformation.getCurrentUser().getUserName();\n+    } catch (IOException ex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NzczMA=="}, "originalCommit": {"oid": "e00e2ab742e06cd27a3c92c52b2ea2e6e7f99156"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTMyMDU3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjozMTowOFrOFzJZJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjo1MTo1NVrOFzJzZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE3NTU4OQ==", "bodyText": "NIT: should we update the comment to match with the code?", "url": "https://github.com/apache/ozone/pull/610#discussion_r389175589", "createdAt": "2020-03-06T22:31:08Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -44,7 +48,7 @@\n    * /vol1/buc2/dir3/key4  vol1           buc2           (empty)      dir3/key4\n    * /vol1/buc2            vol1           buc2           (empty)      (empty)\n    * /vol1                 vol1           (empty)        (empty)      (empty)\n-   * /tmp/dir3/key4        tempVolume     tempBucket     tmp          dir3/key4\n+   * /tmp/dir3/key4        tmp            <username>     tmp          dir3/key4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d4164b153386c5e476f27df6420512b60894d5d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4MjMxMQ==", "bodyText": "As discussed, will resolve in a follow up jira.", "url": "https://github.com/apache/ozone/pull/610#discussion_r389182311", "createdAt": "2020-03-06T22:51:55Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -44,7 +48,7 @@\n    * /vol1/buc2/dir3/key4  vol1           buc2           (empty)      dir3/key4\n    * /vol1/buc2            vol1           buc2           (empty)      (empty)\n    * /vol1                 vol1           (empty)        (empty)      (empty)\n-   * /tmp/dir3/key4        tempVolume     tempBucket     tmp          dir3/key4\n+   * /tmp/dir3/key4        tmp            <username>     tmp          dir3/key4", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE3NTU4OQ=="}, "originalCommit": {"oid": "1d4164b153386c5e476f27df6420512b60894d5d"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTMyMTc5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjozMTozN1rOFzJZ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjo1NzoyMVrOFzJ5aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE3NTc2NA==", "bodyText": "NIT: Can we use the name directly to make it more user friendly? Given it is transparent to the ofs client access, I think it is OK as-is to avoid confliction.", "url": "https://github.com/apache/ozone/pull/610#discussion_r389175764", "createdAt": "2020-03-06T22:31:37Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -174,4 +185,27 @@ public boolean isRoot() {\n   public boolean isVolume() {\n     return this.getBucketName().isEmpty() && !this.getVolumeName().isEmpty();\n   }\n+\n+  /**\n+   * Get the bucket name of temp for given username.\n+   * @param username Input user name String. Mustn't be null.\n+   * @return Username MD5 hash in hex digits.\n+   */\n+  @VisibleForTesting\n+  static String getTempMountBucketName(String username) {\n+    Preconditions.checkNotNull(username);\n+    // TODO: Improve this to \"slugify(username)-md5(username)\" for better\n+    //  readability?\n+    return DigestUtils.md5Hex(username);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d4164b153386c5e476f27df6420512b60894d5d"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4Mzg0OQ==", "bodyText": "As discussed, since other users' tmp buckets aren't visible to current user via ofs://. This could be addressed when the requirement of accessing other users' temp bucket happen.\nAnd there are several related future improvements. Like:\n\nAllowing users to access all volumes (that they have access to) via a special reserved path (e.g. ofs://om/.volumes/<volume_name>/.. or ofs://om/.reserved/..). Because at the moment, tmp mount is masking the existence of volume tmp in ofs:// because of the parsing logic in OFSPath.\nAlso, admins should be able to list all volumes, not just the ones they own.\nProvide a utility in Ozone Shell to access the users' temp buckets conveniently for admins.", "url": "https://github.com/apache/ozone/pull/610#discussion_r389183849", "createdAt": "2020-03-06T22:57:21Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozonefs/src/main/java/org/apache/hadoop/fs/ozone/OFSPath.java", "diffHunk": "@@ -174,4 +185,27 @@ public boolean isRoot() {\n   public boolean isVolume() {\n     return this.getBucketName().isEmpty() && !this.getVolumeName().isEmpty();\n   }\n+\n+  /**\n+   * Get the bucket name of temp for given username.\n+   * @param username Input user name String. Mustn't be null.\n+   * @return Username MD5 hash in hex digits.\n+   */\n+  @VisibleForTesting\n+  static String getTempMountBucketName(String username) {\n+    Preconditions.checkNotNull(username);\n+    // TODO: Improve this to \"slugify(username)-md5(username)\" for better\n+    //  readability?\n+    return DigestUtils.md5Hex(username);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE3NTc2NA=="}, "originalCommit": {"oid": "1d4164b153386c5e476f27df6420512b60894d5d"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4931, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}