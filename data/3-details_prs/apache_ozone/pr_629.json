{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTYzOTg5", "number": 629, "title": "HDDS-3071. Datanodes unable to connect to recon in Secure Environment", "bodyText": "What changes were proposed in this pull request?\nAdded Kerberos security between Datanodes and Recon RPC protocol.\nAddressed review comments from #624 .\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3071\nHow was this patch tested?\nManually tested on docker cluster.", "createdAt": "2020-03-03T20:40:40Z", "url": "https://github.com/apache/ozone/pull/629", "merged": true, "mergeCommit": {"oid": "dc8bfc261e36f9898122ca06e62f5c890e867a5e"}, "closed": true, "closedAt": "2020-03-06T22:17:07Z", "author": {"login": "avijayanhwx"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKIa5wgH2gAyMzgzMTYzOTg5OjQyOGEyYmE2MzBlOGExMDMyMGYyZjFmMWNjZWZhMWMwN2U4MTIyYzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLHsFOAFqTM3MDY2MDIyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "428a2ba630e8a10320f2f1f1ccefa1c07e8122c9", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/428a2ba630e8a10320f2f1f1ccefa1c07e8122c9", "committedDate": "2020-03-03T20:33:57Z", "message": "HDDS-3071. Datanodes unable to connect to recon in Secure Environment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb525e3bb507fce25eadcba65638df4840699170", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/fb525e3bb507fce25eadcba65638df4840699170", "committedDate": "2020-03-03T20:48:27Z", "message": "HDDS-3071. Fix rat check failure."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2727f3ebc2d99816eccf99e0e8f1482a0556444d", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/2727f3ebc2d99816eccf99e0e8f1482a0556444d", "committedDate": "2020-03-03T21:12:39Z", "message": "HDDS-3071. Fix findbugs failure."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/6a5481f2cb7bcd2d44e025bc13449eb5380e74ed", "committedDate": "2020-03-04T17:29:18Z", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-3071-master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDY3ODMy", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-369067832", "createdAt": "2020-03-04T19:40:59Z", "commit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTo0MDo1OVrOFx7CHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTo0NTo1MFrOFx7MWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg5MTc0MA==", "bodyText": "Can you add a description?", "url": "https://github.com/apache/ozone/pull/629#discussion_r387891740", "createdAt": "2020-03-04T19:40:59Z", "author": {"login": "vivekratnavel"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/recon/ReconConfig.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.recon;\n+\n+import org.apache.hadoop.hdds.conf.Config;\n+import org.apache.hadoop.hdds.conf.ConfigGroup;\n+import org.apache.hadoop.hdds.conf.ConfigTag;\n+import org.apache.hadoop.hdds.conf.ConfigType;\n+\n+/**\n+ * The configuration class for the Recon service.\n+ */\n+@ConfigGroup(prefix = \"ozone.recon\")\n+public class ReconConfig {\n+\n+  @Config(key = \"kerberos.principal\",\n+      type = ConfigType.STRING,\n+      defaultValue = \"\",\n+      tags = { ConfigTag.SECURITY, ConfigTag.OZONE },\n+      description = \"This Kerberos principal is used by the Recon service.\"\n+  )\n+  private String principal;\n+\n+  @Config(key = \"kerberos.keytab.file\",\n+      type = ConfigType.STRING,\n+      defaultValue = \"\",\n+      tags = { ConfigTag.SECURITY, ConfigTag.OZONE },\n+      description = \"The keytab file used by Recon daemon to login as \"+\n+          \"its service principal.\"\n+  )\n+  private String keytab;\n+\n+  @Config(key = \"security.client.datanode.container.protocol.acl\",\n+      type = ConfigType.STRING,\n+      defaultValue = \"\",\n+      tags = { ConfigTag.SECURITY, ConfigTag.OZONE },\n+      description = \"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg5MjQxOA==", "bodyText": "nit: fix typo", "url": "https://github.com/apache/ozone/pull/629#discussion_r387892418", "createdAt": "2020-03-04T19:42:15Z", "author": {"login": "vivekratnavel"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/protocol/ReconDatanodeProtocol.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.hadoop.ozone.protocol;\n+\n+import org.apache.hadoop.hdds.annotation.InterfaceAudience;\n+import org.apache.hadoop.hdds.recon.ReconConfig;\n+import org.apache.hadoop.security.KerberosInfo;\n+\n+/**\n+ * The protocol spoken between datanodes and Recon. For specifics please the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg5NDM2MQ==", "bodyText": "nit: supported?", "url": "https://github.com/apache/ozone/pull/629#discussion_r387894361", "createdAt": "2020-03-04T19:45:50Z", "author": {"login": "vivekratnavel"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/ReconServer.java", "diffHunk": "@@ -179,21 +179,21 @@ private static void loginReconUser(OzoneConfiguration conf)\n \n     if (SecurityUtil.getAuthenticationMethod(conf).equals(\n         UserGroupInformation.AuthenticationMethod.KERBEROS)) {\n-\n+      ReconConfig reconConfig = conf.getObject(ReconConfig.class);\n       LOG.info(\"Ozone security is enabled. Attempting login for Recon user. \"\n-              + \"Principal: {}, keytab: {}\", conf.get(\n-          OZONE_RECON_KERBEROS_PRINCIPAL_KEY),\n-          conf.get(OZONE_RECON_KERBEROS_KEYTAB_FILE_KEY));\n-      \n+              + \"Principal: {}, keytab: {}\",\n+          reconConfig.getKerberosPrincipal(),\n+          reconConfig.getKerberosKeytab());\n       UserGroupInformation.setConfiguration(conf);\n-\n       InetSocketAddress socAddr = HddsUtils.getReconAddresses(conf);\n-      SecurityUtil.login(conf, OZONE_RECON_KERBEROS_KEYTAB_FILE_KEY,\n-          OZONE_RECON_KERBEROS_PRINCIPAL_KEY, socAddr.getHostName());\n+      SecurityUtil.login(conf,\n+          OZONE_RECON_KERBEROS_KEYTAB_FILE_KEY,\n+          OZONE_RECON_KERBEROS_PRINCIPAL_KEY,\n+          socAddr.getHostName());\n     } else {\n       throw new AuthenticationException(SecurityUtil.getAuthenticationMethod(\n-          conf) + \" authentication method not supported. Recon user login \"\n-          + \"failed.\");\n+          conf) + \" authentication method not support. \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDgzNDM3", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-369083437", "createdAt": "2020-03-04T20:03:48Z", "commit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowMzo0OFrOFx7y7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowMzo0OFrOFx7y7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwNDIzNg==", "bodyText": "Can we add the newly introduced tag ConfigTag.RECON here for these keys?", "url": "https://github.com/apache/ozone/pull/629#discussion_r387904236", "createdAt": "2020-03-04T20:03:48Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/recon/ReconConfig.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.recon;\n+\n+import org.apache.hadoop.hdds.conf.Config;\n+import org.apache.hadoop.hdds.conf.ConfigGroup;\n+import org.apache.hadoop.hdds.conf.ConfigTag;\n+import org.apache.hadoop.hdds.conf.ConfigType;\n+\n+/**\n+ * The configuration class for the Recon service.\n+ */\n+@ConfigGroup(prefix = \"ozone.recon\")\n+public class ReconConfig {\n+\n+  @Config(key = \"kerberos.principal\",\n+      type = ConfigType.STRING,\n+      defaultValue = \"\",\n+      tags = { ConfigTag.SECURITY, ConfigTag.OZONE },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDg0MTA2", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-369084106", "createdAt": "2020-03-04T20:04:47Z", "commit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowNDo0N1rOFx70zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowNDo0N1rOFx70zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwNDcxNg==", "bodyText": "The default value here should be * instead of empty.", "url": "https://github.com/apache/ozone/pull/629#discussion_r387904716", "createdAt": "2020-03-04T20:04:47Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/recon/ReconConfig.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.recon;\n+\n+import org.apache.hadoop.hdds.conf.Config;\n+import org.apache.hadoop.hdds.conf.ConfigGroup;\n+import org.apache.hadoop.hdds.conf.ConfigTag;\n+import org.apache.hadoop.hdds.conf.ConfigType;\n+\n+/**\n+ * The configuration class for the Recon service.\n+ */\n+@ConfigGroup(prefix = \"ozone.recon\")\n+public class ReconConfig {\n+\n+  @Config(key = \"kerberos.principal\",\n+      type = ConfigType.STRING,\n+      defaultValue = \"\",\n+      tags = { ConfigTag.SECURITY, ConfigTag.OZONE },\n+      description = \"This Kerberos principal is used by the Recon service.\"\n+  )\n+  private String principal;\n+\n+  @Config(key = \"kerberos.keytab.file\",\n+      type = ConfigType.STRING,\n+      defaultValue = \"\",\n+      tags = { ConfigTag.SECURITY, ConfigTag.OZONE },\n+      description = \"The keytab file used by Recon daemon to login as \"+\n+          \"its service principal.\"\n+  )\n+  private String keytab;\n+\n+  @Config(key = \"security.client.datanode.container.protocol.acl\",\n+      type = ConfigType.STRING,\n+      defaultValue = \"\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDg0NjYw", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-369084660", "createdAt": "2020-03-04T20:05:40Z", "commit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowNTo0MVrOFx72XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowNTo0MVrOFx72XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwNTExNg==", "bodyText": "Do we miss the getter and setter for the acl?", "url": "https://github.com/apache/ozone/pull/629#discussion_r387905116", "createdAt": "2020-03-04T20:05:41Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/recon/ReconConfig.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hdds.recon;\n+\n+import org.apache.hadoop.hdds.conf.Config;\n+import org.apache.hadoop.hdds.conf.ConfigGroup;\n+import org.apache.hadoop.hdds.conf.ConfigTag;\n+import org.apache.hadoop.hdds.conf.ConfigType;\n+\n+/**\n+ * The configuration class for the Recon service.\n+ */\n+@ConfigGroup(prefix = \"ozone.recon\")\n+public class ReconConfig {\n+\n+  @Config(key = \"kerberos.principal\",\n+      type = ConfigType.STRING,\n+      defaultValue = \"\",\n+      tags = { ConfigTag.SECURITY, ConfigTag.OZONE },\n+      description = \"This Kerberos principal is used by the Recon service.\"\n+  )\n+  private String principal;\n+\n+  @Config(key = \"kerberos.keytab.file\",\n+      type = ConfigType.STRING,\n+      defaultValue = \"\",\n+      tags = { ConfigTag.SECURITY, ConfigTag.OZONE },\n+      description = \"The keytab file used by Recon daemon to login as \"+\n+          \"its service principal.\"\n+  )\n+  private String keytab;\n+\n+  @Config(key = \"security.client.datanode.container.protocol.acl\",\n+      type = ConfigType.STRING,\n+      defaultValue = \"\",\n+      tags = { ConfigTag.SECURITY, ConfigTag.OZONE },\n+      description = \"\"\n+  )\n+  private String acl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5809cb5fc8cd1e9cc19ac3f73f69dbd01239eaac", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/5809cb5fc8cd1e9cc19ac3f73f69dbd01239eaac", "committedDate": "2020-03-04T20:06:24Z", "message": "HDDS-3071. Address review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDg3MTQ3", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-369087147", "createdAt": "2020-03-04T20:09:32Z", "commit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowOTozMlrOFx794Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowOTozMlrOFx794Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwNzA0MQ==", "bodyText": "Given the reuse part is limited, it is better to move the new logic directly into addReconServer without introducing passiveSCM?", "url": "https://github.com/apache/ozone/pull/629#discussion_r387907041", "createdAt": "2020-03-04T20:09:32Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/SCMConnectionManager.java", "diffHunk": "@@ -160,22 +161,45 @@ private void addSCMServer(InetSocketAddress address, long sleepTime,\n             \"Ignoring the request.\");\n         return;\n       }\n-      RPC.setProtocolEngine(conf, StorageContainerDatanodeProtocolPB.class,\n-          ProtobufRpcEngine.class);\n-      long version =\n-          RPC.getProtocolVersion(StorageContainerDatanodeProtocolPB.class);\n-\n-      RetryPolicy retryPolicy =\n-          RetryPolicies.retryForeverWithFixedSleep(\n-              sleepTime, TimeUnit.MILLISECONDS);\n-      StorageContainerDatanodeProtocolPB rpcProxy = RPC.getProtocolProxy(\n-          StorageContainerDatanodeProtocolPB.class, version,\n-          address, UserGroupInformation.getCurrentUser(), conf,\n-          NetUtils.getDefaultSocketFactory(conf), getRpcTimeout(),\n-          retryPolicy).getProxy();\n-\n-      StorageContainerDatanodeProtocolClientSideTranslatorPB rpcClient =\n-          new StorageContainerDatanodeProtocolClientSideTranslatorPB(rpcProxy);\n+\n+      StorageContainerDatanodeProtocolClientSideTranslatorPB rpcClient;\n+      if (!passiveScm) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDkwNzUy", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-369090752", "createdAt": "2020-03-04T20:15:13Z", "commit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxNToxNFrOFx8Iog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxNToxNFrOFx8Iog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwOTc5NA==", "bodyText": "NIT: can you highlight the changes relate to the issue? Or the change in this file is a refactor?", "url": "https://github.com/apache/ozone/pull/629#discussion_r387909794", "createdAt": "2020-03-04T20:15:14Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMDatanodeProtocolServer.java", "diffHunk": "@@ -131,46 +133,24 @@ public SCMDatanodeProtocolServer(final OzoneConfiguration conf,\n \n     this.scm = scm;\n     this.eventPublisher = eventPublisher;\n-    final int handlerCount =\n-        conf.getInt(OZONE_SCM_HANDLER_COUNT_KEY,\n-            OZONE_SCM_HANDLER_COUNT_DEFAULT);\n \n     heartbeatDispatcher = new SCMDatanodeHeartbeatDispatcher(\n         scm.getScmNodeManager(), eventPublisher);\n \n-    RPC.setProtocolEngine(conf, StorageContainerDatanodeProtocolPB.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDkxODI4", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-369091828", "createdAt": "2020-03-04T20:17:05Z", "commit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxNzowNlrOFx8L_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxNzowNlrOFx8L_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxMDY1NQ==", "bodyText": "NIT: \"Recon user\" => \"Recon service\"", "url": "https://github.com/apache/ozone/pull/629#discussion_r387910655", "createdAt": "2020-03-04T20:17:06Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/ReconServer.java", "diffHunk": "@@ -179,21 +179,21 @@ private static void loginReconUser(OzoneConfiguration conf)\n \n     if (SecurityUtil.getAuthenticationMethod(conf).equals(\n         UserGroupInformation.AuthenticationMethod.KERBEROS)) {\n-\n+      ReconConfig reconConfig = conf.getObject(ReconConfig.class);\n       LOG.info(\"Ozone security is enabled. Attempting login for Recon user. \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDkyNzQ3", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-369092747", "createdAt": "2020-03-04T20:18:39Z", "commit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxODozOVrOFx8OzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxODozOVrOFx8OzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxMTM3Mg==", "bodyText": "datanodeDetails toString is very verbose. You may choose to just log the hostname/ip here.", "url": "https://github.com/apache/ozone/pull/629#discussion_r387911372", "createdAt": "2020-03-04T20:18:39Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconContainerManager.java", "diffHunk": "@@ -64,6 +69,22 @@ protected File getContainerDBPath(Configuration conf) {\n     return new File(metaDir, RECON_SCM_CONTAINER_DB);\n   }\n \n+  public void checkAndAddNewContainer(ContainerID containerID,\n+                                      DatanodeDetails datanodeDetails)\n+      throws IOException {\n+    if (!exists(containerID)) {\n+      LOG.info(\"New container {} got from {}.\", containerID, datanodeDetails);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDk5MDA3", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-369099007", "createdAt": "2020-03-04T20:29:11Z", "commit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoyOToxMVrOFx8hiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoyOToxMVrOFx8hiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNjE2OA==", "bodyText": "NIT: If we add a parameter Class<?> protocol for protocol? we don't need to overwrite getRpcServer in ReconDatanodeProtocolServer class.", "url": "https://github.com/apache/ozone/pull/629#discussion_r387916168", "createdAt": "2020-03-04T20:29:11Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMDatanodeProtocolServer.java", "diffHunk": "@@ -407,14 +387,48 @@ private static String flatten(String input) {\n         .replaceAll(\" +\", \" \");\n   }\n \n-  protected String getScmDatanodeAddressKey() {\n+  protected RPC.Server getRpcServer(OzoneConfiguration conf,\n+      InetSocketAddress datanodeRpcAddr,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a5481f2cb7bcd2d44e025bc13449eb5380e74ed"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDk5NjIz", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-369099623", "createdAt": "2020-03-04T20:30:08Z", "commit": {"oid": "5809cb5fc8cd1e9cc19ac3f73f69dbd01239eaac"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b43aa5b7a4f1e7c37964d629dd10d71057cfa50", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/0b43aa5b7a4f1e7c37964d629dd10d71057cfa50", "committedDate": "2020-03-04T21:35:26Z", "message": "HDDS-3071. Address review comments (2)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0022a271944444b161651b71db28e36633417a75", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/0022a271944444b161651b71db28e36633417a75", "committedDate": "2020-03-06T17:49:08Z", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-3071-master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjYwMjIz", "url": "https://github.com/apache/ozone/pull/629#pullrequestreview-370660223", "createdAt": "2020-03-06T22:16:44Z", "commit": {"oid": "0022a271944444b161651b71db28e36633417a75"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3678, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}