{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNDg5MDcz", "number": 1351, "title": "HDDS-4121. Implement OmMetadataMangerImpl#getExpiredOpenKeys.", "bodyText": "What changes were proposed in this pull request?\nCreate an implementation to the existing OmMetadataMangerImpl#getExpiredOpenKeys method stub as the first step towards completing parent Jira HDDS-4120. This method returns a list of key information for all keys in the OM open key table whose creation time is older than a time interval configurable with the existing ozone.open.key.expire.threshold setting. The existing default value for this setting (one day) was not changed.\nWhat is the link to the Apache JIRA\nHDDS-4121\nHow was this patch tested?\nThe unit test TestOmMetadataManager#testGetExpiredOpenKeys was added, which creates a mixture of expired and unexpired open keys, and tests whether the expired open keys are read correctly. Functionality was added to TestOMRequestUtils to allow setting customized creation times for keys to simulate expiration.", "createdAt": "2020-08-25T21:11:53Z", "url": "https://github.com/apache/ozone/pull/1351", "merged": true, "mergeCommit": {"oid": "34ee8311b0d0a37878fe1fd2e5d8c1b91aa8cc8f"}, "closed": true, "closedAt": "2020-08-31T21:57:44Z", "author": {"login": "errose28"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCDeOogH2gAyNDczNDg5MDczOmNiNDFhODFiZWM3YTI2ZDI4ZDJiOGRhMjMzOWIyMDFiMDA5NDJjZjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEaGhJgFqTQ3ODk4MzA5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb41a81bec7a26d28d2b8da2339b201b00942cf3", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/cb41a81bec7a26d28d2b8da2339b201b00942cf3", "committedDate": "2020-08-24T14:27:49Z", "message": "Add key count parameter to MetadataManager#getExipedOpenKeys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "341a641cf07fcbee42add43cbe9f707e2402fb0c", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/341a641cf07fcbee42add43cbe9f707e2402fb0c", "committedDate": "2020-08-24T14:36:12Z", "message": "Implement OMMetadataManagerImpl#getExpiredOpenKeys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64c275a3e39e630ae92c9965a1e0456860458e2b", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/64c275a3e39e630ae92c9965a1e0456860458e2b", "committedDate": "2020-08-24T14:39:29Z", "message": "Account for count parameter in OmMetadataManager#getExpiredOpenKeys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0476d4432f3b0db94952e6d7a1cca3e01ca98e0", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/a0476d4432f3b0db94952e6d7a1cca3e01ca98e0", "committedDate": "2020-08-24T15:44:09Z", "message": "Add count parameter for maximum number of open keys to return to KeyManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc3c3a99a7ea73f2ea0910ddf91bc574621d75d7", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/cc3c3a99a7ea73f2ea0910ddf91bc574621d75d7", "committedDate": "2020-08-24T21:00:46Z", "message": "Create draft of unit test for getExpiredOpenKeys\n\nAdd the ability to manually set the creation time of OmKeyInfo objects for testing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00d54be3e9ca112c7cbb93eb0b2db750f2302c65", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/00d54be3e9ca112c7cbb93eb0b2db750f2302c65", "committedDate": "2020-08-25T14:20:58Z", "message": "Unit test for OmMetadataManagerImpl#getExpiredOpenKeys implemented and passing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c2ddf5974d9a8cc9e64276760c3008db9f27a24", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/8c2ddf5974d9a8cc9e64276760c3008db9f27a24", "committedDate": "2020-08-25T14:58:16Z", "message": "Create open key names using existing helper method instead of manually"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54ca61b296bb28d67bfb03109161af568d2363bc", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/54ca61b296bb28d67bfb03109161af568d2363bc", "committedDate": "2020-08-25T19:45:06Z", "message": "Add comments about cache usage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "747f1c6241feede8f2f6bc1769eafddcba5c0640", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/747f1c6241feede8f2f6bc1769eafddcba5c0640", "committedDate": "2020-08-25T20:07:27Z", "message": "Fix checkstyle violations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ce889dae178eae6eab6ac2ac41f239520990d3f", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/2ce889dae178eae6eab6ac2ac41f239520990d3f", "committedDate": "2020-08-25T20:08:05Z", "message": "Merge branch 'master' into HDDS-4121\n\n* master:\n  HDDS-4111. Keep the CSI.zh.md consistent with CSI.md (#1320)\n  HDDS-3654. Let backgroundCreator create pipeline for the support replication factors alternately (#984)\n  HDDS-4112. Improve SCM webui page performance (#1323)\n  HDDS-4074. [OFS] Implement AbstractFileSystem for RootedOzoneFileSystem (#1330)\n  HDDS-4144. Update version info in hadoop client dependency readme (#1348)\n  HDDS-4139. Update version number in upgrade tests (#1347)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a2578ec3f898c0d5b9f12f727d8da762d11d7c3", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/4a2578ec3f898c0d5b9f12f727d8da762d11d7c3", "committedDate": "2020-08-25T20:59:14Z", "message": "Clean up changes after viewing diffs with master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0OTE0NTA5", "url": "https://github.com/apache/ozone/pull/1351#pullrequestreview-474914509", "createdAt": "2020-08-25T21:15:26Z", "commit": {"oid": "4a2578ec3f898c0d5b9f12f727d8da762d11d7c3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToxNToyNlrOHGqAFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToxNTo1N1rOHGqBIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MTY1Mw==", "bodyText": "Here, we can collect just expired KeyNames.", "url": "https://github.com/apache/ozone/pull/1351#discussion_r476741653", "createdAt": "2020-08-25T21:15:26Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManager.java", "diffHunk": "@@ -186,10 +186,11 @@ OmKeyLocationInfo allocateBlock(OmKeyArgs args, long clientID,\n    * the key name and all its associated block IDs. A pending open key has\n    * prefix #open# in OM DB.\n    *\n+   * @param count The maximum number of expired opne keys to return.\n    * @return a list of {@link BlockGroup} representing keys and blocks.\n    * @throws IOException\n    */\n-  List<BlockGroup> getExpiredOpenKeys() throws IOException;\n+  List<BlockGroup> getExpiredOpenKeys(int count) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2578ec3f898c0d5b9f12f727d8da762d11d7c3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MTkyMQ==", "bodyText": "And also I think we might need last expired key also, as in next iteration we need to start from that one.", "url": "https://github.com/apache/ozone/pull/1351#discussion_r476741921", "createdAt": "2020-08-25T21:15:57Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManager.java", "diffHunk": "@@ -186,10 +186,11 @@ OmKeyLocationInfo allocateBlock(OmKeyArgs args, long clientID,\n    * the key name and all its associated block IDs. A pending open key has\n    * prefix #open# in OM DB.\n    *\n+   * @param count The maximum number of expired opne keys to return.\n    * @return a list of {@link BlockGroup} representing keys and blocks.\n    * @throws IOException\n    */\n-  List<BlockGroup> getExpiredOpenKeys() throws IOException;\n+  List<BlockGroup> getExpiredOpenKeys(int count) throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MTY1Mw=="}, "originalCommit": {"oid": "4a2578ec3f898c0d5b9f12f727d8da762d11d7c3"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0OTE3OTgw", "url": "https://github.com/apache/ozone/pull/1351#pullrequestreview-474917980", "createdAt": "2020-08-25T21:17:20Z", "commit": {"oid": "4a2578ec3f898c0d5b9f12f727d8da762d11d7c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToxNzoyMVrOHGqD-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToxNzoyMVrOHGqD-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MjY0OA==", "bodyText": "opne -> open", "url": "https://github.com/apache/ozone/pull/1351#discussion_r476742648", "createdAt": "2020-08-25T21:17:21Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManager.java", "diffHunk": "@@ -186,10 +186,11 @@ OmKeyLocationInfo allocateBlock(OmKeyArgs args, long clientID,\n    * the key name and all its associated block IDs. A pending open key has\n    * prefix #open# in OM DB.\n    *\n+   * @param count The maximum number of expired opne keys to return.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2578ec3f898c0d5b9f12f727d8da762d11d7c3"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NTMzMDcz", "url": "https://github.com/apache/ozone/pull/1351#pullrequestreview-475533073", "createdAt": "2020-08-26T14:14:41Z", "commit": {"oid": "4a2578ec3f898c0d5b9f12f727d8da762d11d7c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDoxNDo0MVrOHHONNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDoxNDo0MVrOHHONNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMzNDgzNw==", "bodyText": "Is this line in the original documentation still relevant? It looks like open keys are placed in the open key table unprefixed.", "url": "https://github.com/apache/ozone/pull/1351#discussion_r477334837", "createdAt": "2020-08-26T14:14:41Z", "author": {"login": "errose28"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManager.java", "diffHunk": "@@ -186,10 +186,11 @@ OmKeyLocationInfo allocateBlock(OmKeyArgs args, long clientID,\n    * the key name and all its associated block IDs. A pending open key has\n    * prefix #open# in OM DB.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2578ec3f898c0d5b9f12f727d8da762d11d7c3"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46b7be70eddc997f5d4c8bda7aeb1e6dd564adb6", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/46b7be70eddc997f5d4c8bda7aeb1e6dd564adb6", "committedDate": "2020-08-26T15:11:45Z", "message": "Apply fixes from pull request comments\n\nMake getOpenExpiredKeys return a list of string key name strings instead of BlockGroups.\nFix documentation typo."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8b18d974044798013832c7bb53eb9fec889d2b8", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/e8b18d974044798013832c7bb53eb9fec889d2b8", "committedDate": "2020-08-26T17:42:06Z", "message": "Fix checkstyle and findbugs errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9a0d418c9fecddf758c4e19add96529c442a1cc", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/f9a0d418c9fecddf758c4e19add96529c442a1cc", "committedDate": "2020-08-26T17:48:52Z", "message": "Fix missed checkstyle violation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTU4ODk0", "url": "https://github.com/apache/ozone/pull/1351#pullrequestreview-477158894", "createdAt": "2020-08-27T23:59:56Z", "commit": {"oid": "f9a0d418c9fecddf758c4e19add96529c442a1cc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo1NDoxOVrOHJSvrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo1NDoxOVrOHJSvrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwNjM1MQ==", "bodyText": "Unused code line", "url": "https://github.com/apache/ozone/pull/1351#discussion_r479506351", "createdAt": "2020-08-28T19:54:19Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/TestOmMetadataManager.java", "diffHunk": "@@ -521,6 +527,80 @@ public void testListKeysWithFewDeleteEntriesInCache() throws Exception {\n \n   }\n \n+  @Test\n+  public void testGetExpiredOpenKeys() throws Exception {\n+    final String bucketName = \"bucket\";\n+    final String volumeName = \"volume\";\n+    final int numExpiredOpenKeys = 4;\n+    final int numUnexpiredOpenKeys = 1;\n+    final long clientID = 1000L;\n+    // To create expired keys, they will be assigned a creation time twice as\n+    // old as the minimum expiration time.\n+    final long minExpiredTimeSeconds = ozoneConfiguration.getInt(\n+            OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS,\n+            OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS_DEFAULT);\n+    final long expiredAgeMillis =\n+            Instant.now().minus(minExpiredTimeSeconds * 2,\n+                    ChronoUnit.SECONDS).toEpochMilli();\n+\n+    // Add expired keys to open key table.\n+    // The method under test does not check for expired open keys in the\n+    // cache, since they will be picked up once the cache is flushed.\n+    Set<String> expiredKeys = new HashSet<>();\n+    for (int i = 0; i < numExpiredOpenKeys; i++) {\n+      OmKeyInfo keyInfo = TestOMRequestUtils.createOmKeyInfo(volumeName,\n+              bucketName, \"expired\" + i, HddsProtos.ReplicationType.RATIS,\n+              HddsProtos.ReplicationFactor.ONE, 0L, expiredAgeMillis);\n+\n+      TestOMRequestUtils.addKeyToTable(true, false,\n+              keyInfo, clientID, 0L, omMetadataManager);\n+\n+      String groupID = omMetadataManager.getOpenKey(volumeName, bucketName,\n+              keyInfo.getKeyName(), clientID);\n+      expiredKeys.add(groupID);\n+    }\n+\n+    // Add unexpired keys to open key table.\n+    for (int i = 0; i < numUnexpiredOpenKeys; i++) {\n+      OmKeyInfo keyInfo = TestOMRequestUtils.createOmKeyInfo(volumeName,\n+              bucketName, \"unexpired\" + i, HddsProtos.ReplicationType.RATIS,\n+              HddsProtos.ReplicationFactor.ONE);\n+\n+      TestOMRequestUtils.addKeyToTable(true, false,\n+              keyInfo, clientID, 0L, omMetadataManager);\n+\n+      String groupID = omMetadataManager.getOpenKey(volumeName, bucketName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a0d418c9fecddf758c4e19add96529c442a1cc"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5189a167f1b5a8c9e9f8d1e369d362022fe55852", "author": {"user": {"login": "errose28", "name": "Ethan Rose"}}, "url": "https://github.com/apache/ozone/commit/5189a167f1b5a8c9e9f8d1e369d362022fe55852", "committedDate": "2020-08-28T20:12:04Z", "message": "Remove unused code line in TestOmMetadataManager#testGetExpiredOpenKeys"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4OTgzMDkz", "url": "https://github.com/apache/ozone/pull/1351#pullrequestreview-478983093", "createdAt": "2020-08-31T21:57:35Z", "commit": {"oid": "5189a167f1b5a8c9e9f8d1e369d362022fe55852"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2768, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}