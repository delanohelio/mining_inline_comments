{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMjcyMDI1", "number": 693, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNTozMzo1NFrODpKcWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo1NDo1M1rODpXoAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDg5MzA2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNTozMzo1NFrOF4Kn9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzoyMTowNlrOF4PSQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzODY0Nw==", "bodyText": "Wow is it wrapped that deeply? Can we make this check a bit more robust, if any of the nested exceptions is an instanceOf AccessControlException and also check in a loop while getCause returns non-null?", "url": "https://github.com/apache/ozone/pull/693#discussion_r394438647", "createdAt": "2020-03-18T15:33:54Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java", "diffHunk": "@@ -292,13 +295,30 @@ private RetryAction getRetryAction(RetryAction fallbackAction,\n     return proxy;\n   }\n \n+  /**\n+   * Unwrap exception to check if it is a {@link AccessControlException}.\n+   */\n+  private boolean isAccessControlException(Exception ex) {\n+    if (ex instanceof ServiceException) {\n+      Throwable t = ex.getCause();\n+      if (t instanceof IOException) {\n+        t = t.getCause();\n+        if (t instanceof IOException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d93fb1bf21a8e407351c5ac699331f3f77691043"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMDEzMg==", "bodyText": "null check is covered by instanceof operator which returns false if ex is null.\nMaking a change for checking ACE on each level.", "url": "https://github.com/apache/ozone/pull/693#discussion_r394500132", "createdAt": "2020-03-18T16:58:12Z", "author": {"login": "swagle"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java", "diffHunk": "@@ -292,13 +295,30 @@ private RetryAction getRetryAction(RetryAction fallbackAction,\n     return proxy;\n   }\n \n+  /**\n+   * Unwrap exception to check if it is a {@link AccessControlException}.\n+   */\n+  private boolean isAccessControlException(Exception ex) {\n+    if (ex instanceof ServiceException) {\n+      Throwable t = ex.getCause();\n+      if (t instanceof IOException) {\n+        t = t.getCause();\n+        if (t instanceof IOException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzODY0Nw=="}, "originalCommit": {"oid": "d93fb1bf21a8e407351c5ac699331f3f77691043"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMzk0Mg==", "bodyText": "I meant - can we keep checking for ACE until we finally get null? I am not sure if any server side changes could impact how the exception is wrapped e.g. introduce more nesting.", "url": "https://github.com/apache/ozone/pull/693#discussion_r394503942", "createdAt": "2020-03-18T17:03:50Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java", "diffHunk": "@@ -292,13 +295,30 @@ private RetryAction getRetryAction(RetryAction fallbackAction,\n     return proxy;\n   }\n \n+  /**\n+   * Unwrap exception to check if it is a {@link AccessControlException}.\n+   */\n+  private boolean isAccessControlException(Exception ex) {\n+    if (ex instanceof ServiceException) {\n+      Throwable t = ex.getCause();\n+      if (t instanceof IOException) {\n+        t = t.getCause();\n+        if (t instanceof IOException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzODY0Nw=="}, "originalCommit": {"oid": "d93fb1bf21a8e407351c5ac699331f3f77691043"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxNTAwOA==", "bodyText": "Oh yes, doing the same, thanks!", "url": "https://github.com/apache/ozone/pull/693#discussion_r394515008", "createdAt": "2020-03-18T17:21:06Z", "author": {"login": "swagle"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java", "diffHunk": "@@ -292,13 +295,30 @@ private RetryAction getRetryAction(RetryAction fallbackAction,\n     return proxy;\n   }\n \n+  /**\n+   * Unwrap exception to check if it is a {@link AccessControlException}.\n+   */\n+  private boolean isAccessControlException(Exception ex) {\n+    if (ex instanceof ServiceException) {\n+      Throwable t = ex.getCause();\n+      if (t instanceof IOException) {\n+        t = t.getCause();\n+        if (t instanceof IOException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzODY0Nw=="}, "originalCommit": {"oid": "d93fb1bf21a8e407351c5ac699331f3f77691043"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NzA1MjgzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo1NDo1M1rOF4gG3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNToxNjo0NlrOF4gaOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5MDYyMA==", "bodyText": "@swagle Why are we skipping the null check for cause here and in line 338 ?\nAside from this, rest of the code change LGTM.", "url": "https://github.com/apache/ozone/pull/693#discussion_r394790620", "createdAt": "2020-03-19T04:54:53Z", "author": {"login": "dineshchitlangia"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java", "diffHunk": "@@ -292,13 +295,29 @@ private RetryAction getRetryAction(RetryAction fallbackAction,\n     return proxy;\n   }\n \n+  /**\n+   * Unwrap exception to check if it is a {@link AccessControlException}.\n+   */\n+  private boolean isAccessControlException(Exception ex) {\n+    if (ex instanceof ServiceException) {\n+      Throwable t = ex.getCause();\n+      while (t != null) {\n+        if (t instanceof AccessControlException) {\n+          return true;\n+        }\n+        t = t.getCause();\n+      }\n+    }\n+    return false;\n+  }\n+  \n   /**\n    * Check if exception is a OMNotLeaderException.\n    * @return OMNotLeaderException.\n    */\n   private OMNotLeaderException getNotLeaderException(Exception exception) {\n     Throwable cause = exception.getCause();\n-    if (cause != null && cause instanceof RemoteException) {\n+    if (cause instanceof RemoteException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bdd446ad49d103556ff0155df121d9f9277f76f"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5NTU3OQ==", "bodyText": "@dineshchitlangia  Because the null check is redundant, instanceOf operator is null safe and returns false if obj reference is null.", "url": "https://github.com/apache/ozone/pull/693#discussion_r394795579", "createdAt": "2020-03-19T05:16:46Z", "author": {"login": "swagle"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/protocolPB/OzoneManagerProtocolClientSideTranslatorPB.java", "diffHunk": "@@ -292,13 +295,29 @@ private RetryAction getRetryAction(RetryAction fallbackAction,\n     return proxy;\n   }\n \n+  /**\n+   * Unwrap exception to check if it is a {@link AccessControlException}.\n+   */\n+  private boolean isAccessControlException(Exception ex) {\n+    if (ex instanceof ServiceException) {\n+      Throwable t = ex.getCause();\n+      while (t != null) {\n+        if (t instanceof AccessControlException) {\n+          return true;\n+        }\n+        t = t.getCause();\n+      }\n+    }\n+    return false;\n+  }\n+  \n   /**\n    * Check if exception is a OMNotLeaderException.\n    * @return OMNotLeaderException.\n    */\n   private OMNotLeaderException getNotLeaderException(Exception exception) {\n     Throwable cause = exception.getCause();\n-    if (cause != null && cause instanceof RemoteException) {\n+    if (cause instanceof RemoteException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc5MDYyMA=="}, "originalCommit": {"oid": "3bdd446ad49d103556ff0155df121d9f9277f76f"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4854, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}