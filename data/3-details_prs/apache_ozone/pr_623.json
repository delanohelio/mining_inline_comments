{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNDgxNDcz", "number": 623, "title": "HDDS-2941. file create : create key table entries for intermediate directories in the path", "bodyText": "What changes were proposed in this pull request?\nAs part of handling a Create File Request, create separate entries in Key Table for all intermediate directories in the file path. This is a follow-up to HDDS-2940 which does the same function in Mkdir. The other change in this patch is to remove the key table iterator during file create - the iterator is not required any longer because each directory is explicitly created as a separate entry in the key table.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-2941\nHow was this patch tested?\nUnit test TestOzoneFileInterfaces.testOzFsReadWrite has been modified to test for intermediate directories getting created after a file create.", "createdAt": "2020-03-02T16:28:53Z", "url": "https://github.com/apache/ozone/pull/623", "merged": true, "mergeCommit": {"oid": "56def9f0b8c89588a8008e21e299047e3cbeb37a"}, "closed": true, "closedAt": "2020-03-19T09:24:16Z", "author": {"login": "supratimdeka"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKsVIrABqjMxMDE0MDg4Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPHHihgFqTM3NzQ4NjkwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e709f48df4da064a356bd84b60f1bd52990056c8", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/e709f48df4da064a356bd84b60f1bd52990056c8", "committedDate": "2020-03-02T16:21:39Z", "message": "HDDS-2941. file create : create key table entries for intermediate directories in the path"}, "afterCommit": {"oid": "f001a1e7b4e52b0a4625c4ba3c79db53bf963361", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/f001a1e7b4e52b0a4625c4ba3c79db53bf963361", "committedDate": "2020-03-05T14:14:43Z", "message": "fixed file create test failures"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzQxODI3", "url": "https://github.com/apache/ozone/pull/623#pullrequestreview-370741827", "createdAt": "2020-03-07T12:34:06Z", "commit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxMjozNDowNlrOFzOCxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxMjozNDowNlrOFzOCxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1MTc4MQ==", "bodyText": "lets wrap around LOG.isDebugEnabled()", "url": "https://github.com/apache/ozone/pull/623#discussion_r389251781", "createdAt": "2020-03-07T12:34:06Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyCreateResponse.java", "diffHunk": "@@ -60,6 +68,22 @@ protected void addToDBBatch(OMMetadataManager omMetadataManager,\n         omKeyInfo.getBucketName(), omKeyInfo.getKeyName(), openKeySessionID);\n     omMetadataManager.getOpenKeyTable().putWithBatch(batchOperation,\n         openKey, omKeyInfo);\n+    /**\n+     * Create parent directory entries during Key Create - do not wait\n+     * for Key Commit request.\n+     * XXX handle stale directory entries.\n+     */\n+    if (parentKeyInfos != null) {\n+      for (OmKeyInfo parentKeyInfo : parentKeyInfos) {\n+        String parentKey = omMetadataManager\n+            .getOzoneDirKey(parentKeyInfo.getVolumeName(),\n+                parentKeyInfo.getBucketName(), parentKeyInfo.getKeyName());\n+        LOG.debug(\"putWithBatch adding parent : key {} info : {}\", parentKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzQzMTA5", "url": "https://github.com/apache/ozone/pull/623#pullrequestreview-370743109", "createdAt": "2020-03-07T13:04:39Z", "commit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxMzowNDozOVrOFzOJPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxNDo1NjoyNFrOFzOi8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1MzQzNg==", "bodyText": "createPrefixEntries can we rename this as prefixEntriesEnabled?", "url": "https://github.com/apache/ozone/pull/623#discussion_r389253436", "createdAt": "2020-03-07T13:04:39Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -379,6 +358,65 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     return omClientResponse;\n   }\n \n+  private void checkAllParentsExist(OzoneManager ozoneManager,\n+      KeyArgs keyArgs,\n+      OMFileRequest.OMPathInfo pathInfo) throws IOException {\n+    Boolean canBeCreated = false;\n+    String keyName = keyArgs.getKeyName();\n+    OMFileRequest.OMDirectoryResult omDirectoryResult =\n+        pathInfo.getDirectoryResult();\n+\n+    if (ozoneManager.createPrefixEntries()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1MzY0MQ==", "bodyText": "we can throw an exception here, as parent does not exsit.", "url": "https://github.com/apache/ozone/pull/623#discussion_r389253641", "createdAt": "2020-03-07T13:08:13Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -379,6 +358,65 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     return omClientResponse;\n   }\n \n+  private void checkAllParentsExist(OzoneManager ozoneManager,\n+      KeyArgs keyArgs,\n+      OMFileRequest.OMPathInfo pathInfo) throws IOException {\n+    Boolean canBeCreated = false;\n+    String keyName = keyArgs.getKeyName();\n+    OMFileRequest.OMDirectoryResult omDirectoryResult =\n+        pathInfo.getDirectoryResult();\n+\n+    if (ozoneManager.createPrefixEntries()) {\n+      // if immediate parent exists, assume higher level directories exist.\n+      if (pathInfo.getDirectParentExists()) {\n+        canBeCreated = true;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1MzY4Ng==", "bodyText": "The exception here should be something like file exists in the actual path.", "url": "https://github.com/apache/ozone/pull/623#discussion_r389253686", "createdAt": "2020-03-07T13:08:41Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -379,6 +358,65 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     return omClientResponse;\n   }\n \n+  private void checkAllParentsExist(OzoneManager ozoneManager,\n+      KeyArgs keyArgs,\n+      OMFileRequest.OMPathInfo pathInfo) throws IOException {\n+    Boolean canBeCreated = false;\n+    String keyName = keyArgs.getKeyName();\n+    OMFileRequest.OMDirectoryResult omDirectoryResult =\n+        pathInfo.getDirectoryResult();\n+\n+    if (ozoneManager.createPrefixEntries()) {\n+      // if immediate parent exists, assume higher level directories exist.\n+      if (pathInfo.getDirectParentExists()) {\n+        canBeCreated = true;\n+      }\n+    } else {\n+      String volumeName = keyArgs.getVolumeName();\n+      String bucketName = keyArgs.getBucketName();\n+\n+      // We cannot create a file if complete parent directories don't exist.\n+\n+      // verifyFilesInPath, checks only the path and its parent directories.\n+      // But there may be some keys below the given path. So this method\n+      // checks them.\n+\n+      // Example:\n+      // Existing keys in table\n+      // a/b/c/d/e\n+      // a/b/c/d/f\n+      // a/b\n+\n+      // Take an example if given key to be created with isRecursive set\n+      // to false is \"a/b/c/e\".\n+      // There is no key in keyTable with the provided path.\n+      // Check in case if there are keys exist in given path. (This can\n+      // happen if keys are directly created using key requests.)\n+\n+      // We need to do this check only in the case of non-recursive, so\n+      // not included the checks done in checkKeysUnderPath in\n+      // verifyFilesInPath method, as that method is common method for\n+      // directory and file create request. This also avoid's this\n+      // unnecessary check which is not required for those cases.\n+      if (omDirectoryResult == NONE ||\n+          omDirectoryResult == DIRECTORY_EXISTS_IN_GIVENPATH) {\n+        canBeCreated =\n+            checkKeysUnderPath(ozoneManager.getMetadataManager(), volumeName,\n+                bucketName, keyName);\n+      } else if (omDirectoryResult == FILE_EXISTS_IN_GIVENPATH) {\n+        canBeCreated = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1NjkyNA==", "bodyText": "Ideally, I feel we should create a directory prefix before the key/file prefix. this improves the readability.", "url": "https://github.com/apache/ozone/pull/623#discussion_r389256924", "createdAt": "2020-03-07T14:04:42Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyCreateResponse.java", "diffHunk": "@@ -60,6 +68,22 @@ protected void addToDBBatch(OMMetadataManager omMetadataManager,\n         omKeyInfo.getBucketName(), omKeyInfo.getKeyName(), openKeySessionID);\n     omMetadataManager.getOpenKeyTable().putWithBatch(batchOperation,\n         openKey, omKeyInfo);\n+    /**\n+     * Create parent directory entries during Key Create - do not wait", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1NzI0Mw==", "bodyText": "let's also follow the same order in DirectoryCreateResponse.", "url": "https://github.com/apache/ozone/pull/623#discussion_r389257243", "createdAt": "2020-03-07T14:09:50Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyCreateResponse.java", "diffHunk": "@@ -60,6 +68,22 @@ protected void addToDBBatch(OMMetadataManager omMetadataManager,\n         omKeyInfo.getBucketName(), omKeyInfo.getKeyName(), openKeySessionID);\n     omMetadataManager.getOpenKeyTable().putWithBatch(batchOperation,\n         openKey, omKeyInfo);\n+    /**\n+     * Create parent directory entries during Key Create - do not wait", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1NjkyNA=="}, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1NzM4OA==", "bodyText": "lets also add these to the cache as well.", "url": "https://github.com/apache/ozone/pull/623#discussion_r389257388", "createdAt": "2020-03-07T14:11:44Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -325,7 +304,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           .setOpenVersion(openVersion).build())\n           .setCmdType(Type.CreateFile);\n       omClientResponse = new OMFileCreateResponse(omResponse.build(),\n-          omKeyInfo, clientID);\n+          omKeyInfo, missingParentInfos, clientID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTAwNg==", "bodyText": "This should be false as this is a file and not a directory", "url": "https://github.com/apache/ozone/pull/623#discussion_r389259006", "createdAt": "2020-03-07T14:38:30Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileRequest.java", "diffHunk": "@@ -80,6 +91,7 @@ public static OMPathInfo verifyFilesInPath(\n         // Check if this is actual file or a file in the given path\n         if (dbKeyName.equals(fileNameFromDetails)) {\n           result = OMDirectoryResult.FILE_EXISTS;\n+          parentExists = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTUxNg==", "bodyText": "this is false always.", "url": "https://github.com/apache/ozone/pull/623#discussion_r389259516", "createdAt": "2020-03-07T14:47:28Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileRequest.java", "diffHunk": "@@ -105,24 +120,37 @@ public static OMPathInfo verifyFilesInPath(\n \n         LOG.trace(\"verifyFiles in Path : \" + \"/\" + volumeName\n             + \"/\" + bucketName + \"/\" + keyName + \":\" + result);\n-        return new OMPathInfo(missing, result, inheritAcls);\n+        // if file exists, so does the parent. Assert.\n+        Preconditions.checkState((result != OMDirectoryResult.FILE_EXISTS)\n+            || (parentExists));\n+\n+        return new OMPathInfo(missing, result, inheritAcls, parentExists);\n       }\n       keyPath = keyPath.getParent();\n     }\n \n     if (inheritAcls.isEmpty()) {\n-      String bucketKey = omMetadataManager.getBucketKey(volumeName, bucketName);\n-      inheritAcls = omMetadataManager.getBucketTable().get(bucketKey).getAcls();\n+      String bucketKey = omMetadataManager.getBucketKey(volumeName,\n+          bucketName);\n+      inheritAcls = omMetadataManager.getBucketTable().get(bucketKey)\n+          .getAcls();\n       LOG.trace(\"Acls inherited from bucket \" + bucketName + \" are : \"\n           + inheritAcls);\n     }\n \n     LOG.trace(\"verifyFiles in Path : \" + volumeName + \"/\" + bucketName + \"/\"\n         + keyName + \":\" + result);\n+    // parentExists always true if we are creating inside root dir\n+    Preconditions.checkState(!pathIsRootDir(immediateParentPath)\n+        || parentExists);\n     // Found no files/ directories in the given path.\n-    return new OMPathInfo(missing, OMDirectoryResult.NONE, inheritAcls);\n+    return new OMPathInfo(missing, OMDirectoryResult.NONE, inheritAcls,\n+        parentExists);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTc0Mg==", "bodyText": "The check for this is same as missingparents as null ?", "url": "https://github.com/apache/ozone/pull/623#discussion_r389259742", "createdAt": "2020-03-07T14:51:10Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -379,6 +358,65 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     return omClientResponse;\n   }\n \n+  private void checkAllParentsExist(OzoneManager ozoneManager,\n+      KeyArgs keyArgs,\n+      OMFileRequest.OMPathInfo pathInfo) throws IOException {\n+    Boolean canBeCreated = false;\n+    String keyName = keyArgs.getKeyName();\n+    OMFileRequest.OMDirectoryResult omDirectoryResult =\n+        pathInfo.getDirectoryResult();\n+\n+    if (ozoneManager.createPrefixEntries()) {\n+      // if immediate parent exists, assume higher level directories exist.\n+      if (pathInfo.getDirectParentExists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MDAxNw==", "bodyText": "both createDirectoryKeyInfoWithACL & createDirectoryKeyInfo can be collapsed into one function.", "url": "https://github.com/apache/ozone/pull/623#discussion_r389260017", "createdAt": "2020-03-07T14:56:24Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMDirectoryCreateRequest.java", "diffHunk": "@@ -347,7 +371,7 @@ private OmKeyInfo createDirectoryKeyInfoWithACL(OzoneManager ozoneManager,\n         .build();\n   }\n \n-  private OmKeyInfo createDirectoryKeyInfo(OzoneManager ozoneManager,\n+  private static OmKeyInfo createDirectoryKeyInfo(OzoneManager ozoneManager,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "168a8cadfe6b1348449c802207ddef1dfedb810b", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/168a8cadfe6b1348449c802207ddef1dfedb810b", "committedDate": "2020-03-15T13:31:36Z", "message": "HDDS-2941. file create : create key table entries for intermediate directories in the path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec794ce7de538740e4fb79a17c5f4e039110842b", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/ec794ce7de538740e4fb79a17c5f4e039110842b", "committedDate": "2020-03-15T13:31:36Z", "message": "fixed file create test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e35e5c8d4c86f76bdb77870f7c4853215cb3fea", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/4e35e5c8d4c86f76bdb77870f7c4853215cb3fea", "committedDate": "2020-03-15T13:31:36Z", "message": "checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b6b7096fd1bab0ddbfe683808210aea95ede644", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/1b6b7096fd1bab0ddbfe683808210aea95ede644", "committedDate": "2020-03-15T13:31:36Z", "message": "addressed review comments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d88b3d9d994fba01da45bea8f5036718000a0c28", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/d88b3d9d994fba01da45bea8f5036718000a0c28", "committedDate": "2020-03-05T14:40:46Z", "message": "checkstyle issues"}, "afterCommit": {"oid": "1b6b7096fd1bab0ddbfe683808210aea95ede644", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/1b6b7096fd1bab0ddbfe683808210aea95ede644", "committedDate": "2020-03-15T13:31:36Z", "message": "addressed review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ea6ce18f23602be122e3f3e87e0f61b5be470e5", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/4ea6ce18f23602be122e3f3e87e0f61b5be470e5", "committedDate": "2020-03-15T14:10:23Z", "message": "fixed findbugs and checkstyle."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f59ccf1eae54edad24d54d0bbd843b3ea3247eff", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/f59ccf1eae54edad24d54d0bbd843b3ea3247eff", "committedDate": "2020-03-16T03:21:43Z", "message": "fixed unit test failure after changing exception status code."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0ODE0MzA4", "url": "https://github.com/apache/ozone/pull/623#pullrequestreview-374814308", "createdAt": "2020-03-15T16:35:29Z", "commit": {"oid": "4ea6ce18f23602be122e3f3e87e0f61b5be470e5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxNjozNTozMFrOF2f7RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzowNTo1NFrOF3bURw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MDUwMA==", "bodyText": "Why is this test obsolete ?", "url": "https://github.com/apache/ozone/pull/623#discussion_r392690500", "createdAt": "2020-03-15T16:35:30Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestKeyManagerImpl.java", "diffHunk": "@@ -418,6 +412,8 @@ public void testOpenFile() throws IOException {\n   }\n \n   @Test\n+  @Ignore\n+  // TODO this test relies on KeyManagerImpl.createFile which is obsolete.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ea6ce18f23602be122e3f3e87e0f61b5be470e5"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MDUxNQ==", "bodyText": "Lets expand the wildcards.", "url": "https://github.com/apache/ozone/pull/623#discussion_r392690515", "createdAt": "2020-03-15T16:35:41Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestKeyManagerImpl.java", "diffHunk": "@@ -92,13 +92,7 @@\n import org.apache.hadoop.test.LambdaTestUtils;\n \n import org.apache.hadoop.util.Time;\n-import org.junit.After;\n-import org.junit.AfterClass;\n-import org.junit.Assert;\n-import org.junit.Assume;\n-import org.junit.BeforeClass;\n-import org.junit.Rule;\n-import org.junit.Test;\n+import org.junit.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ea6ce18f23602be122e3f3e87e0f61b5be470e5"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2MzU1OQ==", "bodyText": "lets wrap in isDebugEnabled", "url": "https://github.com/apache/ozone/pull/623#discussion_r393663559", "createdAt": "2020-03-17T13:05:54Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -175,7 +169,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n     // if isRecursive is true, file would be created even if parent\n     // directories does not exist.\n     boolean isRecursive = createFileRequest.getIsRecursive();\n-    LOG.info(\"File create for : \" + volumeName + \"/\" + bucketName + \"/\"\n+    LOG.debug(\"File create for : \" + volumeName + \"/\" + bucketName + \"/\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f59ccf1eae54edad24d54d0bbd843b3ea3247eff"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba656f89160964336a5ef484de36d7f20b040524", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/ba656f89160964336a5ef484de36d7f20b040524", "committedDate": "2020-03-18T13:18:49Z", "message": "review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDg2OTAz", "url": "https://github.com/apache/ozone/pull/623#pullrequestreview-377486903", "createdAt": "2020-03-19T07:52:31Z", "commit": {"oid": "ba656f89160964336a5ef484de36d7f20b040524"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3661, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}