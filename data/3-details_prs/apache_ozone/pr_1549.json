{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NzE3NDYx", "number": 1549, "title": "HDDS-4427. Avoid ContainerCache in ContainerReader at Datanode startup", "bodyText": "What changes were proposed in this pull request?\nTesting on a dense datanode (200k containers, 45 disks) I see contention around the ContainerCache. Most of the time most threads are running in parallel, but we see slowdowns where most threads get blocked waiting on the ContainerCache lock.\nExamining JStacks, we can see the runnable thread blocking others is typically evicting a RocksDB instance from the cache:\n\"Thread-37\" #131 prio=5 os_prio=0 tid=0x00007f8f49219800 nid=0x1c5e9 runnable [0x00007f86f7e78000]\n   java.lang.Thread.State: RUNNABLE\n        at org.rocksdb.RocksDB.closeDatabase(Native Method)\n        at org.rocksdb.RocksDB.close(RocksDB.java:468)\n        at org.apache.hadoop.hdds.utils.RocksDBStore.close(RocksDBStore.java:389)\n        at org.apache.hadoop.ozone.container.common.utils.ReferenceCountedDB.cleanup(ReferenceCountedDB.java:79)\n        at org.apache.hadoop.ozone.container.common.utils.ContainerCache.removeLRU(ContainerCache.java:106)\n        at org.apache.commons.collections.map.LRUMap.addMapping(LRUMap.java:242)\n        at org.apache.commons.collections.map.AbstractHashedMap.put(AbstractHashedMap.java:284)\n        at org.apache.hadoop.ozone.container.common.utils.ContainerCache.getDB(ContainerCache.java:167)\n        at org.apache.hadoop.ozone.container.keyvalue.helpers.BlockUtils.getDB(BlockUtils.java:63)\n        at org.apache.hadoop.ozone.container.keyvalue.helpers.KeyValueContainerUtil.parseKVContainerData(KeyValueContainerUtil.java:165)\n        at org.apache.hadoop.ozone.container.ozoneimpl.ContainerReader.verifyAndFixupContainerData(ContainerReader.java:183)\n        at org.apache.hadoop.ozone.container.ozoneimpl.ContainerReader.verifyContainerFile(ContainerReader.java:160)\n        at org.apache.hadoop.ozone.container.ozoneimpl.ContainerReader.readVolume(ContainerReader.java:137)\n        at org.apache.hadoop.ozone.container.ozoneimpl.ContainerReader.run(ContainerReader.java:91)\n        at java.lang.Thread.run(Thread.java:748)\n\nThe slowness seems to be driven by the RocksDB close call. It is generally fast, but is often around 1ms. Eg, here are some timings from that call after adding instrumentation to the code:\ngrep -a \"metric: closing DB took\" ozone-datanode.log | cut -d \":\" -f 6 | sort -n | uniq -c\n61940 0\n128155 1\n2786 2\n236 3\n53 4\n42 5\n17 6\n10 7\n8 8\n15 9\n\nThe timer was only at ms precision, so that is why many are zero. Even at 1ms per close, we can only close 1000 per second and this point of the code is serialized.\nAt startup time, there is no value in caching the open containers. All containers on the node need to be read in parallel, therefore we should simply open and close each container without caching the instance.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4427\nHow was this patch tested?\nExisting tests and small changes to TestContainerReader.java.", "createdAt": "2020-11-03T13:00:40Z", "url": "https://github.com/apache/ozone/pull/1549", "merged": true, "mergeCommit": {"oid": "58ec7f4a14dfbf2c8d798f4f9edbe9459281d359"}, "closed": true, "closedAt": "2020-11-19T11:37:39Z", "author": {"login": "sodonnel"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY5OI5gFqTUyMjQ5NTU4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbxl5eABqjM5ODgzOTcwNTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNDk1NTgz", "url": "https://github.com/apache/ozone/pull/1549#pullrequestreview-522495583", "createdAt": "2020-11-03T13:31:27Z", "commit": {"oid": "e69868db5d5e589851048e70b16e2584d91adc8f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNTA4NDU0", "url": "https://github.com/apache/ozone/pull/1549#pullrequestreview-522508454", "createdAt": "2020-11-03T13:46:33Z", "commit": {"oid": "e69868db5d5e589851048e70b16e2584d91adc8f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2Mjg4MjU2", "url": "https://github.com/apache/ozone/pull/1549#pullrequestreview-526288256", "createdAt": "2020-11-09T14:06:11Z", "commit": {"oid": "cc31909ba3e18a49c62cc0f6982e4f18e5a09bc7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDowNjoxMVrOHvwagw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDowNjoyN1rOHvwbLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzODMzOQ==", "bodyText": "What is the reason for removing this assertion, and opening a new ReferenceCountedDB after running the block deleting service?", "url": "https://github.com/apache/ozone/pull/1549#discussion_r519838339", "createdAt": "2020-11-09T14:06:11Z", "author": {"login": "errose28"}, "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/common/TestSchemaOneBackwardsCompatibility.java", "diffHunk": "@@ -269,29 +272,29 @@ public void testDelete() throws Exception {\n    */\n   @Test\n   public void testReadDeletedBlockChunkInfo() throws Exception {\n-    try(ReferenceCountedDB refCountedDB = BlockUtils.getDB(newKvData(), conf)) {\n+    KeyValueContainerData kvData = newKvData();\n+    List<? extends Table.KeyValue<String, ChunkInfoList>> deletedBlocks;\n+    Set<String> preUpgradeBlocks = new HashSet<>();\n+    try(ReferenceCountedDB refCountedDB = BlockUtils.getDB(kvData, conf)) {\n       // Read blocks that were already deleted before the upgrade.\n-      List<? extends Table.KeyValue<String, ChunkInfoList>> deletedBlocks =\n-              refCountedDB.getStore()\n-                      .getDeletedBlocksTable().getRangeKVs(null, 100);\n-\n-      Set<String> preUpgradeBlocks = new HashSet<>();\n+      deletedBlocks = refCountedDB.getStore()\n+          .getDeletedBlocksTable().getRangeKVs(null, 100);\n \n-      for(Table.KeyValue<String, ChunkInfoList> chunkListKV: deletedBlocks) {\n+      for (Table.KeyValue<String, ChunkInfoList> chunkListKV : deletedBlocks) {\n         preUpgradeBlocks.add(chunkListKV.getKey());\n         try {\n           chunkListKV.getValue();\n           Assert.fail(\"No exception thrown when trying to retrieve old \" +\n-                  \"deleted blocks values as chunk lists.\");\n-        } catch(IOException ex) {\n+              \"deleted blocks values as chunk lists.\");\n+        } catch (IOException ex) {\n           // Exception thrown as expected.\n         }\n       }\n+    }\n \n-      Assert.assertEquals(TestDB.NUM_DELETED_BLOCKS, preUpgradeBlocks.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc31909ba3e18a49c62cc0f6982e4f18e5a09bc7"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzODUwOQ==", "bodyText": "I think this is a typo.", "url": "https://github.com/apache/ozone/pull/1549#discussion_r519838509", "createdAt": "2020-11-09T14:06:27Z", "author": {"login": "errose28"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/metadata/DatanodeStore.java", "diffHunk": "@@ -47,7 +47,7 @@\n    */\n   void stop() throws Exception;\n \n-  /**\n+  /**TestSchemaOneBackwardsCompatibility.java", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc31909ba3e18a49c62cc0f6982e4f18e5a09bc7"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7918215b2daf823981a8db6ce1e45aa2ef2da5d0", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/7918215b2daf823981a8db6ce1e45aa2ef2da5d0", "committedDate": "2020-11-12T12:14:19Z", "message": "Avoid ContainerCache when starting the DN"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "725fafd1a4c29eeb1889bd665ce1adbf908a61f5", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/725fafd1a4c29eeb1889bd665ce1adbf908a61f5", "committedDate": "2020-11-12T12:14:19Z", "message": "Fix failing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45cfc53adf92e2385e250f8aa60959061469e0d5", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/45cfc53adf92e2385e250f8aa60959061469e0d5", "committedDate": "2020-11-12T12:14:19Z", "message": "Fix findbugs warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e23ee2c63f57dceed8e2b58b32dea3f6ba72d99", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/0e23ee2c63f57dceed8e2b58b32dea3f6ba72d99", "committedDate": "2020-11-12T12:14:19Z", "message": "Refactor to obtain the RocksDB instance from the ContainerCache if the uncached instance fails to open"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73f8f6356cda50b123bbd9d040bc1f18a1b5ccd6", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/73f8f6356cda50b123bbd9d040bc1f18a1b5ccd6", "committedDate": "2020-11-12T12:14:19Z", "message": "Revert changes to TestSchemaOneBackwardsCompatibility.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c53b02867bfd403b57ce48bcf1278ded526ce298", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/c53b02867bfd403b57ce48bcf1278ded526ce298", "committedDate": "2020-11-12T12:14:19Z", "message": "Fixed typo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f28a66a633e1343e83692e53d0b47412f0361506", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/f28a66a633e1343e83692e53d0b47412f0361506", "committedDate": "2020-11-09T16:02:32Z", "message": "Fixed typo"}, "afterCommit": {"oid": "c53b02867bfd403b57ce48bcf1278ded526ce298", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/c53b02867bfd403b57ce48bcf1278ded526ce298", "committedDate": "2020-11-12T12:14:19Z", "message": "Fixed typo"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2226, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}