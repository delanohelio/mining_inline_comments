{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTA5MjA4", "number": 727, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNToxMjowNlrODr7TFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNToxMjowNlrODr7TFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Mzg2OTAzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/OmUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNToxMjowNlrOF8jahg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNjoxMDoxN1rOF8kR6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzOTExMA==", "bodyText": "One minor comment. when for one of nodeId address is undefined, do we want to print \"unknown address\" instead of silently ignoring?", "url": "https://github.com/apache/ozone/pull/727#discussion_r399039110", "createdAt": "2020-03-27T05:12:06Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/OmUtils.java", "diffHunk": "@@ -89,6 +93,31 @@ public static InetSocketAddress getOmAddress(Configuration conf) {\n     return NetUtils.createSocketAddr(getOmRpcAddress(conf));\n   }\n \n+  /**\n+   * Return list of OM addresses by service ids - when HA is enabled.\n+   *\n+   * @param conf {@link Configuration}\n+   * @return {service.id -> [{@link InetSocketAddress}]}\n+   */\n+  public static Map<String, List<InetSocketAddress>> getOmHAAddressesById(\n+      Configuration conf) {\n+    Map<String, List<InetSocketAddress>> result = new HashMap<>();\n+    for (String serviceId : conf.getTrimmedStringCollection(\n+        OZONE_OM_SERVICE_IDS_KEY)) {\n+      if (!result.containsKey(serviceId)) {\n+        result.put(serviceId, new ArrayList<>());\n+      }\n+      for (String nodeId : getOMNodeIds(conf, serviceId)) {\n+        String rpcAddr = getOmRpcAddress(conf,\n+            addKeySuffixes(OZONE_OM_ADDRESS_KEY, serviceId, nodeId));\n+        if (rpcAddr != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34fec16ec66e0e8d19fef6a8f7c38e367d70ab22"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA1MzI4OQ==", "bodyText": "Thanks, Bharat for review.\nActually I modeled the method based on getOmAddress() and return InetSocketAddress so cannot put random string in the map, I added a log message instead.", "url": "https://github.com/apache/ozone/pull/727#discussion_r399053289", "createdAt": "2020-03-27T06:10:17Z", "author": {"login": "swagle"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/OmUtils.java", "diffHunk": "@@ -89,6 +93,31 @@ public static InetSocketAddress getOmAddress(Configuration conf) {\n     return NetUtils.createSocketAddr(getOmRpcAddress(conf));\n   }\n \n+  /**\n+   * Return list of OM addresses by service ids - when HA is enabled.\n+   *\n+   * @param conf {@link Configuration}\n+   * @return {service.id -> [{@link InetSocketAddress}]}\n+   */\n+  public static Map<String, List<InetSocketAddress>> getOmHAAddressesById(\n+      Configuration conf) {\n+    Map<String, List<InetSocketAddress>> result = new HashMap<>();\n+    for (String serviceId : conf.getTrimmedStringCollection(\n+        OZONE_OM_SERVICE_IDS_KEY)) {\n+      if (!result.containsKey(serviceId)) {\n+        result.put(serviceId, new ArrayList<>());\n+      }\n+      for (String nodeId : getOMNodeIds(conf, serviceId)) {\n+        String rpcAddr = getOmRpcAddress(conf,\n+            addKeySuffixes(OZONE_OM_ADDRESS_KEY, serviceId, nodeId));\n+        if (rpcAddr != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzOTExMA=="}, "originalCommit": {"oid": "34fec16ec66e0e8d19fef6a8f7c38e367d70ab22"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4885, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}