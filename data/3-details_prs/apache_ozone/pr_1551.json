{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0ODMxNjk2", "number": 1551, "title": "HDDS-4429. Create unit test for SimpleContainerDownloader.", "bodyText": "What changes were proposed in this pull request?\n@jojochuang  reported that in a specific case the Datanode tried to download / replicate containers multiple times from the same datanode.\nSimpleContainerDownload has a logic to try out all the available Datanodes: this Jira creates a unit test t make sure the logic works well.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4429\nHow was this patch tested?\nExecuted the new unit test.", "createdAt": "2020-11-03T15:57:04Z", "url": "https://github.com/apache/ozone/pull/1551", "merged": true, "mergeCommit": {"oid": "9c6f805c57ceaf42ed08341d9d575d3043119a55"}, "closed": true, "closedAt": "2020-11-30T19:16:25Z", "author": {"login": "elek"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY7RUaAH2gAyNTE0ODMxNjk2OjllMTVjZjMxYWE0ZWI0ODRjZWQ2ZjI0ZjI0MzA3MjVhOGIxNjNlYmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhnhEMgFqTU0MTA0ODQ5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9e15cf31aa4eb484ced6f24f2430725a8b163ebb", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/9e15cf31aa4eb484ced6f24f2430725a8b163ebb", "committedDate": "2020-11-03T15:54:44Z", "message": "HDDS-4429. Create unit test for SimpleContainerDownloader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MTMyNDUz", "url": "https://github.com/apache/ozone/pull/1551#pullrequestreview-528132453", "createdAt": "2020-11-11T12:35:05Z", "commit": {"oid": "9e15cf31aa4eb484ced6f24f2430725a8b163ebb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMjozNTowNVrOHxLTKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMjo0NDowOFrOHxLmWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMyNzQwMA==", "bodyText": "downloadContainer may fail in two ways: IOException may be thrown immediately or the returned CompletableFuture may be completed exceptionally.  These hit different code paths in getContainerDataFromReplicas.  I think we should cover both cases.", "url": "https://github.com/apache/ozone/pull/1551#discussion_r521327400", "createdAt": "2020-11-11T12:35:05Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.container.replication;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.hadoop.hdds.conf.ConfigurationSource;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.protocol.MockDatanodeDetails;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test SimpleContainerDownloader.\n+ */\n+public class TestSimpleContainerDownloader {\n+\n+  @Test\n+  public void testGetContainerDataFromReplicasHappyPath() throws Exception {\n+\n+    //GIVEN\n+    List<DatanodeDetails> datanodes = createDatanodes();\n+\n+    SimpleContainerDownloader downloader =\n+        createDownloaderWithPredefinedFailures();\n+\n+    //WHEN\n+    final Path result =\n+        downloader.getContainerDataFromReplicas(1L, datanodes)\n+            .get(1L, TimeUnit.SECONDS);\n+\n+    //THEN\n+    Assert.assertEquals(datanodes.get(0).getUuidString(), result.toString());\n+  }\n+\n+  @Test\n+  public void testGetContainerDataFromReplicasOneFailure() throws Exception {\n+\n+    //GIVEN\n+    List<DatanodeDetails> datanodes = createDatanodes();\n+\n+    SimpleContainerDownloader downloader =\n+        createDownloaderWithPredefinedFailures(datanodes.get(0));\n+\n+    //WHEN\n+    final Path result =\n+        downloader.getContainerDataFromReplicas(1L, datanodes)\n+            .get(1L, TimeUnit.SECONDS);\n+\n+    //THEN\n+    //first datanode is failed, second worked\n+    Assert.assertEquals(datanodes.get(1).getUuidString(), result.toString());\n+  }\n+\n+  /**\n+   * Creates downloader which fails with datanodes in the arguments.\n+   */\n+  private SimpleContainerDownloader createDownloaderWithPredefinedFailures(\n+      DatanodeDetails... failedDatanodes\n+  ) {\n+\n+    ConfigurationSource conf = new OzoneConfiguration();\n+\n+    final List<DatanodeDetails> datanodes =\n+        Arrays.asList(failedDatanodes);\n+\n+    return new SimpleContainerDownloader(conf, null) {\n+\n+      @Override\n+      protected CompletableFuture<Path> downloadContainer(\n+          long containerId,\n+          DatanodeDetails datanode\n+      ) throws IOException {\n+\n+        if (datanodes.contains(datanode)) {\n+          throw new IOException(\"Unavailable datanode\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e15cf31aa4eb484ced6f24f2430725a8b163ebb"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMzMjMxMw==", "bodyText": "Not introduced in this patch, but I think this should be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            } catch (IOException e) {\n          \n          \n            \n                              LOG.error(\"Error on replicating container: \" + containerId,\n          \n          \n            \n                                  t);\n          \n          \n            \n                            } catch (IOException e) {\n          \n          \n            \n                              LOG.error(\"Error on replicating container: \" + containerId,\n          \n          \n            \n                                  e);", "url": "https://github.com/apache/ozone/pull/1551#discussion_r521332313", "createdAt": "2020-11-11T12:44:08Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/SimpleContainerDownloader.java", "diffHunk": "@@ -74,21 +75,13 @@ public SimpleContainerDownloader(ConfigurationSource conf,\n     for (DatanodeDetails datanode : sourceDatanodes) {\n       try {\n         if (result == null) {\n-          GrpcReplicationClient grpcReplicationClient =\n-              new GrpcReplicationClient(datanode.getIpAddress(),\n-                  datanode.getPort(Name.STANDALONE).getValue(),\n-                  workingDirectory, securityConfig, caCert);\n-          result = grpcReplicationClient.download(containerId);\n+          result = downloadContainer(containerId, datanode);\n         } else {\n           result = result.thenApply(CompletableFuture::completedFuture)\n               .exceptionally(t -> {\n                 LOG.error(\"Error on replicating container: \" + containerId, t);\n                 try {\n-                  GrpcReplicationClient grpcReplicationClient =\n-                      new GrpcReplicationClient(datanode.getIpAddress(),\n-                          datanode.getPort(Name.STANDALONE).getValue(),\n-                          workingDirectory, securityConfig, caCert);\n-                  return grpcReplicationClient.download(containerId);\n+                  return downloadContainer(containerId, datanode);\n                 } catch (IOException e) {\n                   LOG.error(\"Error on replicating container: \" + containerId,\n                       t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e15cf31aa4eb484ced6f24f2430725a8b163ebb"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e96edd667182099017a043f90603fd06610eb14", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/1e96edd667182099017a043f90603fd06610eb14", "committedDate": "2020-11-12T09:07:35Z", "message": "Print out the right exception in LOG.error\n\nCo-authored-by: Doroszlai, Attila <6454655+adoroszlai@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17e50ae544ba2deb3b66183da9ebd3e3d8b3f854", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/17e50ae544ba2deb3b66183da9ebd3e3d8b3f854", "committedDate": "2020-11-12T09:18:14Z", "message": "test both direct and future wrapped exceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c149ce443e5c757ba451de7f837f5a829f12b220", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/c149ce443e5c757ba451de7f837f5a829f12b220", "committedDate": "2020-11-12T09:32:59Z", "message": "test both direct and future wrapped exceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "125f8ee80da94228a47777006a0e818111b14304", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/125f8ee80da94228a47777006a0e818111b14304", "committedDate": "2020-11-12T09:33:02Z", "message": "Merge commit 'c149ce443e5c757ba451de7f837f5a829f12b220'; commit '17e50ae544ba2deb3b66183da9ebd3e3d8b3f854' into HDDS-4429"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTI2OTc3", "url": "https://github.com/apache/ozone/pull/1551#pullrequestreview-529126977", "createdAt": "2020-11-12T14:15:59Z", "commit": {"oid": "125f8ee80da94228a47777006a0e818111b14304"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9adbce2ae1c96b455f46d88955c785565cd20114", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/9adbce2ae1c96b455f46d88955c785565cd20114", "committedDate": "2020-11-12T19:14:03Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eca4109b1d79b98f6eabaa4cb456d8823e5c7e3", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/9eca4109b1d79b98f6eabaa4cb456d8823e5c7e3", "committedDate": "2020-11-13T09:20:07Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-4429"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7fc88b29efc156909344de37b9897102a414bb7", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/a7fc88b29efc156909344de37b9897102a414bb7", "committedDate": "2020-11-13T09:54:07Z", "message": "Merge remote-tracking branch 'elek/HDDS-4429' into HDDS-4429"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzc2NTE4", "url": "https://github.com/apache/ozone/pull/1551#pullrequestreview-533776518", "createdAt": "2020-11-18T18:55:15Z", "commit": {"oid": "a7fc88b29efc156909344de37b9897102a414bb7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODo1NToxNVrOH19X0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODo1NToxNVrOH19X0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0MjA5Nw==", "bodyText": "Actually, these checks are no longer valid after 5e8aaee since SimpleContainerDownloader shuffles the datanodes.\n\n  \n    \n      ozone/hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/SimpleContainerDownloader.java\n    \n    \n        Lines 79 to 84\n      in\n      0aca5c7\n    \n    \n    \n    \n\n        \n          \n           //There is a chance for the download is successful but import is failed, \n        \n\n        \n          \n           //due to data corruption. We need a random selected datanode to have a \n        \n\n        \n          \n           //chance to succeed next time. \n        \n\n        \n          \n           final ArrayList<DatanodeDetails> shuffledDatanodes = \n        \n\n        \n          \n               new ArrayList<>(sourceDatanodes); \n        \n\n        \n          \n           Collections.shuffle(shuffledDatanodes);", "url": "https://github.com/apache/ozone/pull/1551#discussion_r526342097", "createdAt": "2020-11-18T18:55:15Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestSimpleContainerDownloader.java", "diffHunk": "@@ -21,24 +21,84 @@\n import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.List;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n \n+import org.apache.hadoop.hdds.conf.ConfigurationSource;\n import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n import org.apache.hadoop.hdds.protocol.MockDatanodeDetails;\n \n import org.junit.Assert;\n import org.junit.Test;\n \n-/**\n- * Test container downloader.\n+/*\n+ * Test SimpleContainerDownloader.\n  */\n public class TestSimpleContainerDownloader {\n \n   private static final String SUCCESS_PATH = \"downloaded\";\n \n+  @Test\n+  public void testGetContainerDataFromReplicasHappyPath() throws Exception {\n+\n+    //GIVEN\n+    List<DatanodeDetails> datanodes = createDatanodes();\n+\n+    SimpleContainerDownloader downloader =\n+        createDownloaderWithPredefinedFailures(true);\n+\n+    //WHEN\n+    final Path result =\n+        downloader.getContainerDataFromReplicas(1L, datanodes)\n+            .get(1L, TimeUnit.SECONDS);\n+\n+    //THEN\n+    Assert.assertEquals(datanodes.get(0).getUuidString(), result.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7fc88b29efc156909344de37b9897102a414bb7"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8d07ccc80681b6bb00d95c863b173254471cc59", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/e8d07ccc80681b6bb00d95c863b173254471cc59", "committedDate": "2020-11-23T11:55:14Z", "message": "Merge remote-tracking branch 'origin/master' into HDDS-4429"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62c34d7608b78cf417f1d70b07322764550425e1", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/62c34d7608b78cf417f1d70b07322764550425e1", "committedDate": "2020-11-23T12:31:29Z", "message": "fix retry test after HDDS-4453"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c54424b120dfb6c26ea2d70f370f789475b82e7c", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/c54424b120dfb6c26ea2d70f370f789475b82e7c", "committedDate": "2020-11-25T15:16:47Z", "message": "increased timeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38eee8a799db4a6b3bcd52a1d58ded105085787b", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/38eee8a799db4a6b3bcd52a1d58ded105085787b", "committedDate": "2020-11-25T17:05:27Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4Njk5NzMw", "url": "https://github.com/apache/ozone/pull/1551#pullrequestreview-538699730", "createdAt": "2020-11-25T17:05:43Z", "commit": {"oid": "38eee8a799db4a6b3bcd52a1d58ded105085787b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5ee7b62f05807b8132ae0522badeacbf8b715d3", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/e5ee7b62f05807b8132ae0522badeacbf8b715d3", "committedDate": "2020-11-25T21:17:18Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b66437098ba77ef65ad6ede3b64ebb109697f1c", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/2b66437098ba77ef65ad6ede3b64ebb109697f1c", "committedDate": "2020-11-26T14:51:04Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a280682b6a9301f73d8a5d2d2f832790b2dccd62", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/a280682b6a9301f73d8a5d2d2f832790b2dccd62", "committedDate": "2020-11-30T08:24:34Z", "message": "fix unit test and error handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cc31cf579fc0c231b4d7c4f8e54434fde4c6fad", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/2cc31cf579fc0c231b4d7c4f8e54434fde4c6fad", "committedDate": "2020-11-30T08:32:30Z", "message": "Merge remote-tracking branch 'elek/HDDS-4429' into HDDS-4429"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMDQ4NDk5", "url": "https://github.com/apache/ozone/pull/1551#pullrequestreview-541048499", "createdAt": "2020-11-30T15:59:08Z", "commit": {"oid": "a280682b6a9301f73d8a5d2d2f832790b2dccd62"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNTo1OTowOFrOH8Bw1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNTo1OTowOFrOH8Bw1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwNTQ5NA==", "bodyText": "So if replication was slow, the previous version may have closed the client prematurely?", "url": "https://github.com/apache/ozone/pull/1551#discussion_r532705494", "createdAt": "2020-11-30T15:59:08Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/SimpleContainerDownloader.java", "diffHunk": "@@ -128,12 +130,20 @@ public SimpleContainerDownloader(ConfigurationSource conf,\n       DatanodeDetails datanode\n   ) throws Exception {\n     CompletableFuture<Path> result;\n-    try (GrpcReplicationClient grpcReplicationClient =\n+    GrpcReplicationClient grpcReplicationClient =\n         new GrpcReplicationClient(datanode.getIpAddress(),\n             datanode.getPort(Name.STANDALONE).getValue(),\n-            workingDirectory, securityConfig, caCert)) {\n-      result = grpcReplicationClient.download(containerId);\n-    }\n+            workingDirectory, securityConfig, caCert);\n+    result = grpcReplicationClient.download(containerId)\n+        .thenApply(r -> {\n+          try {\n+            grpcReplicationClient.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a280682b6a9301f73d8a5d2d2f832790b2dccd62"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2229, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}