{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDM0Nzgw", "number": 895, "title": "HDDS-3518: Add a freon generator to create directory tree and create \u2026", "bodyText": "What changes were proposed in this pull request?\nThis Jira proposes to add a functionality to freon tool to create directories in tree structure.\nProposed structure:\n/*\nNested directories will be created like this,\nsuppose you pass depth=3, span=3 and number of tests=2\n  Directory Structure:-\n                        |-- Dir111\n                        |\n            |-- Dir11 --|-- Dir112\n            |           |\n            |           |-- Dir113\n            |\n            |\n            |           |-- Dir121\n            |           |\n   Dir1   --|-- Dir12 --|-- Dir122\n            |           |\n            |           |-- Dir123\n            |\n            |\n            |           |-- Dir131\n            |           |\n            |-- Dir13 --|-- Dir132\n                        |\n                        |-- Dir133\n\n In each directory 'c' number of files to be written in each directory with file size 'g' will be created.\n\n*/\nThis is basically useful to determine the performance evaluation of ozone, when creating defined number of nested directories and also create given number of files into each directory.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3518\nHow was this patch tested?\nAdded unit test case..", "createdAt": "2020-05-04T15:50:49Z", "url": "https://github.com/apache/ozone/pull/895", "merged": true, "mergeCommit": {"oid": "2e14e40677b86a62ab3c065dd0f68fc096ce747a"}, "closed": true, "closedAt": "2020-06-03T14:39:10Z", "author": {"login": "rakeshadr"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceBd_CAH2gAyNDEzMDM0NzgwOjIwZDZmYWYwNWVjZjNlNGViODNjYzEyMDE1ZTE3M2U2ODk3ZjhjZmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclslpAgH2gAyNDEzMDM0NzgwOmRhNGFmMDc1ZDY4MjEzZDIyNTVkNjAxZmNkZTE1MWVjYWU0ODNhMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "20d6faf05ecf3e4eb83cc12015e173e6897f8cfb", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/20d6faf05ecf3e4eb83cc12015e173e6897f8cfb", "committedDate": "2020-05-04T15:46:28Z", "message": "HDDS-3518: Add a freon generator to create directory tree and create files in each directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e222292dc62ea8ad7fd921013865de51b096ae37", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/e222292dc62ea8ad7fd921013865de51b096ae37", "committedDate": "2020-05-05T06:08:51Z", "message": "Fixed checkstyle and refactored code to avoid code duplication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed4308008971edeef256152c43914dd538c7ace8", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/ed4308008971edeef256152c43914dd538c7ace8", "committedDate": "2020-05-05T09:11:02Z", "message": "Fixed checkstyle.."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDQwMjUz", "url": "https://github.com/apache/ozone/pull/895#pullrequestreview-406040253", "createdAt": "2020-05-05T18:16:39Z", "commit": {"oid": "ed4308008971edeef256152c43914dd538c7ace8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODoxNjo0MFrOGQ10Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODoxNjo0MFrOGQ10Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxMjEyMw==", "bodyText": "Can we wrap this with try {} finally {shutdown (cluster)} so that the cluster is ensured to shutdown if any verification failed?", "url": "https://github.com/apache/ozone/pull/895#discussion_r420312123", "createdAt": "2020-05-05T18:16:40Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/freon/TestHadoopDirTreeGenerator.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.hadoop.ozone.freon;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.hadoop.fs.FileStatus;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.client.ObjectStore;\n+import org.apache.hadoop.ozone.client.OzoneClientFactory;\n+import org.apache.hadoop.ozone.client.OzoneVolume;\n+import org.apache.hadoop.ozone.om.OzoneManager;\n+import org.apache.hadoop.test.GenericTestUtils;\n+import org.apache.ratis.server.impl.RaftServerImpl;\n+import org.apache.ratis.server.raftlog.RaftLog;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.event.Level;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.net.URI;\n+\n+/**\n+ * Test for HadoopNestedDirTreeGenerator.\n+ */\n+public class TestHadoopDirTreeGenerator {\n+\n+  private String path;\n+\n+  /**\n+   * Create a MiniDFSCluster for testing.\n+   *\n+   * @throws IOException\n+   */\n+  @Before\n+  public void setup() {\n+    path = GenericTestUtils\n+            .getTempPath(TestOzoneClientKeyGenerator.class.getSimpleName());\n+    GenericTestUtils.setLogLevel(RaftLog.LOG, Level.DEBUG);\n+    GenericTestUtils.setLogLevel(RaftServerImpl.LOG, Level.DEBUG);\n+    File baseDir = new File(path);\n+    baseDir.mkdirs();\n+  }\n+\n+  /**\n+   * Shutdown MiniDFSCluster.\n+   */\n+  private void shutdown(MiniOzoneCluster cluster) throws IOException {\n+    if (cluster != null) {\n+      cluster.shutdown();\n+      FileUtils.deleteDirectory(new File(path));\n+    }\n+  }\n+\n+  private MiniOzoneCluster startCluster(OzoneConfiguration conf)\n+          throws Exception {\n+    if (conf == null) {\n+      conf = new OzoneConfiguration();\n+    }\n+    MiniOzoneCluster cluster = MiniOzoneCluster.newBuilder(conf)\n+            .setNumDatanodes(5)\n+            .build();\n+\n+    cluster.waitForClusterToBeReady();\n+    cluster.waitTobeOutOfSafeMode();\n+    return cluster;\n+  }\n+\n+  @Test\n+  public void testNestedDirTreeGeneration() throws Exception {\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    MiniOzoneCluster cluster = startCluster(conf);\n+    ObjectStore store =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed4308008971edeef256152c43914dd538c7ace8"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDQ0OTQx", "url": "https://github.com/apache/ozone/pull/895#pullrequestreview-406044941", "createdAt": "2020-05-05T18:23:11Z", "commit": {"oid": "ed4308008971edeef256152c43914dd538c7ace8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODoyMzoxMVrOGQ2Deg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODoyMzoxMVrOGQ2Deg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNjAyNg==", "bodyText": "\"Hadoop FS directory system path\" is a bit confusing, do you mean \"Hadoop FS root path\"?", "url": "https://github.com/apache/ozone/pull/895#discussion_r420316026", "createdAt": "2020-05-05T18:23:11Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/HadoopDirTreeGenerator.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership.  The ASF\n+ * licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.hadoop.ozone.freon;\n+\n+import org.apache.commons.lang3.RandomStringUtils;\n+import org.apache.hadoop.fs.FSDataOutputStream;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hdds.cli.HddsVersionProvider;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.Random;\n+import java.util.concurrent.Callable;\n+\n+/**\n+ * Directory & File Generator tool to test OM performance.\n+ */\n+@Command(name = \"dtsg\",\n+    aliases = \"dfs-tree-generator\",\n+    description =\n+        \"Create nested directories and create given number of files in each \" +\n+                \"dir in any dfs compatible file system.\",\n+    versionProvider = HddsVersionProvider.class,\n+    mixinStandardHelpOptions = true,\n+    showDefaultValues = true)\n+public class HadoopDirTreeGenerator extends BaseFreonGenerator\n+    implements Callable<Void> {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(HadoopDirTreeGenerator.class);\n+\n+  @Option(names = {\"-r\", \"--rpath\"},\n+      description = \"Hadoop FS directory system path\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed4308008971edeef256152c43914dd538c7ace8"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "658ace1fe6663f985ce64e7d3186496b2fe35e49", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/658ace1fe6663f985ce64e7d3186496b2fe35e49", "committedDate": "2020-05-06T12:22:43Z", "message": "Fixed review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ffca85594dfd948211def386ac32e792b34fe8e", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/8ffca85594dfd948211def386ac32e792b34fe8e", "committedDate": "2020-05-07T02:14:42Z", "message": "Fixed checkstyle comment - more than 7 parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15ef58f41830a3efbacfd00fe5925ea28585ac80", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/15ef58f41830a3efbacfd00fe5925ea28585ac80", "committedDate": "2020-05-07T04:54:50Z", "message": "Fixed checkstyle comment - unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "437652de00b41195eee25de0ca54935a44434b98", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/437652de00b41195eee25de0ca54935a44434b98", "committedDate": "2020-05-09T04:11:03Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98b60faec4fc958a8eb9c008d22c1d764b678cab", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/98b60faec4fc958a8eb9c008d22c1d764b678cab", "committedDate": "2020-05-18T10:11:08Z", "message": "Modified the file size unit to bytes from KB"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85661b1ac8e59cc06920769f6bff9891bbc3d75e", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/85661b1ac8e59cc06920769f6bff9891bbc3d75e", "committedDate": "2020-05-20T04:50:09Z", "message": "Fixed failed test case which was due to the KBs to bytes filesize changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NzUzMjA1", "url": "https://github.com/apache/ozone/pull/895#pullrequestreview-416753205", "createdAt": "2020-05-22T08:53:58Z", "commit": {"oid": "85661b1ac8e59cc06920769f6bff9891bbc3d75e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da4af075d68213d2255d601fcde151ecae483a21", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/da4af075d68213d2255d601fcde151ecae483a21", "committedDate": "2020-05-28T11:58:13Z", "message": "Addressing review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3220, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}