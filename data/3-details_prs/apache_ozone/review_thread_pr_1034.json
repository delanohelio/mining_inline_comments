{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwODUzODU5", "number": 1034, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTo1OTowNlrOEDzVxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMDowMDo1MFrOEDzYVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDIyMzQzOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/pipeline/Pipeline.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTo1OTowNlrOGhCFJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTo1OTowNlrOGhCFJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI5MDI3Nw==", "bodyText": "We don't need the temporary variable memberList.\nIt can be replaced with\nfor (DatanodeDetailsProto member : pipeline.getMembersList())", "url": "https://github.com/apache/ozone/pull/1034#discussion_r437290277", "createdAt": "2020-06-09T09:59:06Z", "author": {"login": "nandakumar131"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/pipeline/Pipeline.java", "diffHunk": "@@ -289,14 +290,20 @@ public boolean isEmpty() {\n   public static Pipeline getFromProtobuf(HddsProtos.Pipeline pipeline)\n       throws UnknownPipelineStateException {\n     Preconditions.checkNotNull(pipeline, \"Pipeline is null\");\n+\n+    List<DatanodeDetails> nodes = new ArrayList<>();\n+    List<DatanodeDetailsProto> membersList = pipeline.getMembersList();\n+    for (DatanodeDetailsProto member : membersList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6cf7b12420c38bbb64f587e087fc55b8853196d"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDIyODE2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmKeyInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMDowMDoyM1rOGhCIJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMDowMDoyM1rOGhCIJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI5MTA0NA==", "bodyText": "Temporary variable keyLocationLists can be removed.", "url": "https://github.com/apache/ozone/pull/1034#discussion_r437291044", "createdAt": "2020-06-09T10:00:23Z", "author": {"login": "nandakumar131"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmKeyInfo.java", "diffHunk": "@@ -411,13 +415,19 @@ public static OmKeyInfo getFromProtobuf(KeyInfo keyInfo) {\n     if (keyInfo == null) {\n       return null;\n     }\n+\n+    List<OmKeyLocationInfoGroup> omKeyLocationInfos = new ArrayList<>();\n+    List<KeyLocationList> keyLocationLists = keyInfo.getKeyLocationListList();\n+    for (KeyLocationList keyLocationList : keyLocationLists) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6cf7b12420c38bbb64f587e087fc55b8853196d"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDIyOTk5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMDowMDo1MFrOGhCJOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMDowMDo1MFrOGhCJOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI5MTMyMA==", "bodyText": "The temporary variable keyLocations  can be removed.", "url": "https://github.com/apache/ozone/pull/1034#discussion_r437291320", "createdAt": "2020-06-09T10:00:50Z", "author": {"login": "nandakumar131"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -132,10 +134,13 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           keyName, IAccessAuthorizer.ACLType.WRITE,\n           commitKeyRequest.getClientID());\n \n-      List<OmKeyLocationInfo> locationInfoList = commitKeyArgs\n-          .getKeyLocationsList().stream()\n-          .map(OmKeyLocationInfo::getFromProtobuf)\n-          .collect(Collectors.toList());\n+      List<OmKeyLocationInfo> locationInfoList = new ArrayList<>();\n+      List<KeyLocation> keyLocations = commitKeyArgs\n+          .getKeyLocationsList();\n+\n+      for (KeyLocation keyLocation : keyLocations) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6cf7b12420c38bbb64f587e087fc55b8853196d"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4235, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}