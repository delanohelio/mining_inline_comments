{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMzAyNTQ1", "number": 1223, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNTo0MDoxM1rOESPhpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzoxOTo0NlrOETWcSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTY0MTk4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/dist/src/main/k8s/examples/getting-started/test.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNTo0MDoxM1rOG3USWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjowNDozMlrOG3fiOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1NzI0MA==", "bodyText": "Argument is not needed since combine_reports uses pwd instead of parameter -- applies to all test.sh scripts.", "url": "https://github.com/apache/ozone/pull/1223#discussion_r460657240", "createdAt": "2020-07-27T05:40:13Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/getting-started/test.sh", "diffHunk": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+export K8S_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+cd \"$K8S_DIR\"\n+\n+# shellcheck source=/dev/null\n+source \"../testlib.sh\"\n+\n+rm -rf result\n+\n+regenerate_resources\n+\n+start_k8s_env\n+\n+execute_robot_test scm-0 smoketest/basic/basic.robot\n+\n+combine_reports 'getting-started'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg0MTUzMQ==", "bodyText": "Right, thanks. Removing them.", "url": "https://github.com/apache/ozone/pull/1223#discussion_r460841531", "createdAt": "2020-07-27T12:04:32Z", "author": {"login": "elek"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/getting-started/test.sh", "diffHunk": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+export K8S_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+cd \"$K8S_DIR\"\n+\n+# shellcheck source=/dev/null\n+source \"../testlib.sh\"\n+\n+rm -rf result\n+\n+regenerate_resources\n+\n+start_k8s_env\n+\n+execute_robot_test scm-0 smoketest/basic/basic.robot\n+\n+combine_reports 'getting-started'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1NzI0MA=="}, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTY3NDQxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/dist/src/main/k8s/examples/getting-started/test.sh", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNTo1NzoxN1rOG3UlLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo1Nzo0OVrOG5cX-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2MjA2Mg==", "bodyText": "If I understand correctly, this flekszible generate call is only needed when executed from source dir (hadoop-ozone/dist/src/main/k8s) to restore source files.  I propose it to be executed as part of stop_k8s_env:\n\nI ran tests from target/..., had some errors and tried to find out what's wrong.  It was confusing to see resource files referencing non-existent docker image apache/ozone:0.6.0-SNAPSHOT (plus other differences compared to the files actually used for the test).\nAvoid possible omission in new scripts.\nReduce code duplication.\nSave some very minimal runtime cost.", "url": "https://github.com/apache/ozone/pull/1223#discussion_r460662062", "createdAt": "2020-07-27T05:57:17Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/getting-started/test.sh", "diffHunk": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+export K8S_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+cd \"$K8S_DIR\"\n+\n+# shellcheck source=/dev/null\n+source \"../testlib.sh\"\n+\n+rm -rf result\n+\n+regenerate_resources\n+\n+start_k8s_env\n+\n+execute_robot_test scm-0 smoketest/basic/basic.robot\n+\n+combine_reports 'getting-started'\n+\n+stop_k8s_env\n+\n+flekszible generate", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg0OTYyOA==", "bodyText": "Here we have a main problem: some of the Kubernetes examples couldn't be started in the test environment. For example when the example is configured to schedule one datanode per real node, but we have only one node.\nTherefore, before the tests the resource files are heavily modified:\n\ninstead of using latest image, the current build is mounted to the /opt/ozone (similar to the docker tests)\nanti-affinity rules are removed (enable to run multiple datanode on the same node)\nreal persistence is removed\n\nThese are executed by the regenerate_resources step at the beginning of the test. Which is something like this:\nflekszible generate -t mount:hostPath=\"$OZONE_ROOT\",path=/opt/hadoop -t image:image=apache/ozone-runner:20200420-1 -t ozone/onenode\n\nAs you can see we define three new transformations on the fly:\n\n-t mount:hostPath=\"$OZONE_ROOT\",path=/opt/hadoop --> use the files from the current build\n-t image:image=apache/ozone-runner:20200420-1, use standard runner\n-t ozone/onenode enable to schedule more datanode to the same node\n\nThe line which is commented by you:\nflekszible generate\n\nIs 100% optional. After the test, it restores the original state of the files. It can be added to the stop_k8s_env (as it can always be added).\nBut based on the experience with the docker test.sh files, I would prefer to use more explicit lines in the test.sh.\nAs test.sh files are read frequently but modified only by a few times, I tend to make it slightly more verbose, but easier to understand (you can assume that stop_k8s_env stops kubernetes pods, but I wouldn't like to hide any hidden functionlaty there.\nBut theses are just my thought, as it's a beginning of new test, I am really open to modify to any direction.", "url": "https://github.com/apache/ozone/pull/1223#discussion_r460849628", "createdAt": "2020-07-27T12:20:23Z", "author": {"login": "elek"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/getting-started/test.sh", "diffHunk": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+export K8S_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+cd \"$K8S_DIR\"\n+\n+# shellcheck source=/dev/null\n+source \"../testlib.sh\"\n+\n+rm -rf result\n+\n+regenerate_resources\n+\n+start_k8s_env\n+\n+execute_robot_test scm-0 smoketest/basic/basic.robot\n+\n+combine_reports 'getting-started'\n+\n+stop_k8s_env\n+\n+flekszible generate", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2MjA2Mg=="}, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAxMjMxNQ==", "bodyText": "Thanks for confirming my guess.\nI'm fine with making test.sh more verbose at the cost of some duplication.  However, I propose extracting this optional flekszible generate to a function, and let it check if it's being run from src dir, to address my first point.", "url": "https://github.com/apache/ozone/pull/1223#discussion_r461012315", "createdAt": "2020-07-27T16:23:45Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/getting-started/test.sh", "diffHunk": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+export K8S_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+cd \"$K8S_DIR\"\n+\n+# shellcheck source=/dev/null\n+source \"../testlib.sh\"\n+\n+rm -rf result\n+\n+regenerate_resources\n+\n+start_k8s_env\n+\n+execute_robot_test scm-0 smoketest/basic/basic.robot\n+\n+combine_reports 'getting-started'\n+\n+stop_k8s_env\n+\n+flekszible generate", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2MjA2Mg=="}, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE2NDMxMg==", "bodyText": "and let it check if it's being run from src dir, to address my first point\n\n\nI ran tests from target/..., had some errors and tried to find out what's wrong.\n\nI am not sure what was the problem in your case. It supposed to work from the target directory. In fact hadoop-ozone/dev-support/checks/kubernetes.sh executes all the tests from target by default.\napache/ozone:0.6.0-SNAPSHOT is used because during the release it becomes apache/ozone:0.6.0 which is the distributed container.\n./test.sh (with the first flekszible generation) replaces all the images with a dev version (ozone-runner + mount).\nIt seems to be working for me and passed on the github CI, but if you see any error, please let me know as it should work everywhere (do you have the latest released flekszible?)", "url": "https://github.com/apache/ozone/pull/1223#discussion_r462164312", "createdAt": "2020-07-29T09:27:15Z", "author": {"login": "elek"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/getting-started/test.sh", "diffHunk": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+export K8S_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+cd \"$K8S_DIR\"\n+\n+# shellcheck source=/dev/null\n+source \"../testlib.sh\"\n+\n+rm -rf result\n+\n+regenerate_resources\n+\n+start_k8s_env\n+\n+execute_robot_test scm-0 smoketest/basic/basic.robot\n+\n+combine_reports 'getting-started'\n+\n+stop_k8s_env\n+\n+flekszible generate", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2MjA2Mg=="}, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyNjc4OQ==", "bodyText": "Let me clarify: I think the script would have worked fine, but I tried to use k3d (k3s in docker) instead of plain k3s.  Since the local dir was not available in the container, it failed.\nThe confusing part was that the resource files did not mention volume mounts, since they were converted back at the end.  So only by looking at regenerate_resources in testlib did I realize what's wrong.", "url": "https://github.com/apache/ozone/pull/1223#discussion_r462226789", "createdAt": "2020-07-29T11:24:13Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/getting-started/test.sh", "diffHunk": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+export K8S_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+cd \"$K8S_DIR\"\n+\n+# shellcheck source=/dev/null\n+source \"../testlib.sh\"\n+\n+rm -rf result\n+\n+regenerate_resources\n+\n+start_k8s_env\n+\n+execute_robot_test scm-0 smoketest/basic/basic.robot\n+\n+combine_reports 'getting-started'\n+\n+stop_k8s_env\n+\n+flekszible generate", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2MjA2Mg=="}, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4NjkwNw==", "bodyText": "Yes, that's what came into my mind, too.\nToday, it's not possible to run test on remote clusters (k3d is a remote cluster) as local mount doesn't work.\nI can introduce some options in the future (would be great to execute tests on real environments, too).\nFor now, I will add a log message to the regenerate_resource to print a warning to the stdout.", "url": "https://github.com/apache/ozone/pull/1223#discussion_r462886907", "createdAt": "2020-07-30T09:57:49Z", "author": {"login": "elek"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/getting-started/test.sh", "diffHunk": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+export K8S_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+cd \"$K8S_DIR\"\n+\n+# shellcheck source=/dev/null\n+source \"../testlib.sh\"\n+\n+rm -rf result\n+\n+regenerate_resources\n+\n+start_k8s_env\n+\n+execute_robot_test scm-0 smoketest/basic/basic.robot\n+\n+combine_reports 'getting-started'\n+\n+stop_k8s_env\n+\n+flekszible generate", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2MjA2Mg=="}, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTY5ODEwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/dist/src/main/k8s/examples/testlib.bats", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjowOToxMVrOG3UzCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjozMToxOFrOG3VREw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2NTYwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # bats gc_opts.bats (FROM THE CURRENT DIRECTORY)\n          \n          \n            \n            # bats testlib.bats (FROM THE CURRENT DIRECTORY)", "url": "https://github.com/apache/ozone/pull/1223#discussion_r460665608", "createdAt": "2020-07-27T06:09:11Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/testlib.bats", "diffHunk": "@@ -0,0 +1,61 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\n+\n+#\n+# Can be executed with bats (https://github.com/bats-core/bats-core)\n+# bats gc_opts.bats (FROM THE CURRENT DIRECTORY)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY3MzI5OQ==", "bodyText": "One more: doesn't this test belong to src/test?", "url": "https://github.com/apache/ozone/pull/1223#discussion_r460673299", "createdAt": "2020-07-27T06:31:18Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/testlib.bats", "diffHunk": "@@ -0,0 +1,61 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\n+\n+#\n+# Can be executed with bats (https://github.com/bats-core/bats-core)\n+# bats gc_opts.bats (FROM THE CURRENT DIRECTORY)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2NTYwOA=="}, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTcxMDY2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/dist/src/main/k8s/examples/testlib.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjoxNDo0NFrOG3U6Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNjoxMDowOFrOG3pbPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2NzQyMw==", "bodyText": "Is there any way to avoid hard-coding the image name?", "url": "https://github.com/apache/ozone/pull/1223#discussion_r460667423", "createdAt": "2020-07-27T06:14:44Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/testlib.sh", "diffHunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+retry() {\n+   n=0\n+   until [ $n -ge 30 ]\n+   do\n+      \"$@\" && break\n+      n=$[$n+1]\n+      echo \"$n '$@' is failed...\"\n+      sleep ${RETRY_SLEEP:-3}\n+   done\n+   if [ $n -eq 30 ]; then\n+      return 255\n+   fi\n+}\n+\n+grep_log() {\n+   CONTAINER=\"$1\"\n+   PATTERN=\"$2\"\n+   kubectl logs \"$1\"  | grep \"$PATTERN\"\n+}\n+\n+wait_for_startup(){\n+   print_phase \"Waiting until the k8s cluster is running\"\n+   retry all_pods_are_running\n+   retry grep_log scm-0 \"SCM exiting safe mode.\"\n+   retry grep_log om-0 \"HTTP server of ozoneManager listening\"\n+   print_phase \"Cluster is up and running\"\n+}\n+\n+all_pods_are_running() {\n+   RUNNING_COUNT=$(kubectl get pod --field-selector status.phase=Running | wc -l)\n+   ALL_COUNT=$(kubectl get pod | wc -l)\n+   RUNNING_COUNT=$((RUNNING_COUNT - 1))\n+   ALL_COUNT=$((ALL_COUNT - 1))\n+   if [ \"$RUNNING_COUNT\" -lt \"3\" ]; then\n+      echo \"$RUNNING_COUNT pods are running. Waiting for more.\"\n+      return 1\n+   elif [ \"$RUNNING_COUNT\" -ne \"$ALL_COUNT\" ]; then\n+      echo \"$RUNNING_COUNT pods are running out from the $ALL_COUNT\"\n+      return 2\n+   else\n+      STARTED=true\n+      return 0\n+   fi\n+}\n+\n+start_k8s_env() {\n+   print_phase \"Deleting existing k8s resources\"\n+   #reset environment\n+   kubectl delete pvc --all\n+   kubectl delete pv --all\n+   kubectl delete statefulset --all\n+   kubectl delete daemonset --all\n+   kubectl delete deployment --all\n+   kubectl delete service --all\n+   kubectl delete configmap --all\n+   kubectl delete pod --all\n+\n+   print_phase \"Applying k8s resources from $1\"\n+   kubectl apply -f .\n+   wait_for_startup\n+}\n+\n+stop_k8s_env() {\n+   if [ ! \"$KEEP_RUNNING\" ]; then\n+     kubectl delete -f .\n+   fi\n+}\n+\n+regenerate_resources() {\n+  PARENT_OF_PARENT=$(realpath ../..)\n+\n+  if [ $(basename $PARENT_OF_PARENT) == \"k8s\" ]; then\n+    #running from src dir\n+    OZONE_ROOT=$(realpath ../../../../../target/ozone-0.6.0-SNAPSHOT)\n+  else\n+    #running from dist\n+    OZONE_ROOT=$(realpath ../../..)\n+  fi\n+\n+  flekszible generate -t mount:hostPath=\"$OZONE_ROOT\",path=/opt/hadoop -t image:image=apache/ozone-runner:20200420-1 -t ozone/onenode", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg0Mzc2NQ==", "bodyText": "It can be replaced easily during build time, but today it's possible to execute the tests from src/min/k8s, which makes it harder. I can parse it from the pom.xml but it's only for development.\nI am not sure what is the most simple solution...", "url": "https://github.com/apache/ozone/pull/1223#discussion_r460843765", "createdAt": "2020-07-27T12:08:54Z", "author": {"login": "elek"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/testlib.sh", "diffHunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+retry() {\n+   n=0\n+   until [ $n -ge 30 ]\n+   do\n+      \"$@\" && break\n+      n=$[$n+1]\n+      echo \"$n '$@' is failed...\"\n+      sleep ${RETRY_SLEEP:-3}\n+   done\n+   if [ $n -eq 30 ]; then\n+      return 255\n+   fi\n+}\n+\n+grep_log() {\n+   CONTAINER=\"$1\"\n+   PATTERN=\"$2\"\n+   kubectl logs \"$1\"  | grep \"$PATTERN\"\n+}\n+\n+wait_for_startup(){\n+   print_phase \"Waiting until the k8s cluster is running\"\n+   retry all_pods_are_running\n+   retry grep_log scm-0 \"SCM exiting safe mode.\"\n+   retry grep_log om-0 \"HTTP server of ozoneManager listening\"\n+   print_phase \"Cluster is up and running\"\n+}\n+\n+all_pods_are_running() {\n+   RUNNING_COUNT=$(kubectl get pod --field-selector status.phase=Running | wc -l)\n+   ALL_COUNT=$(kubectl get pod | wc -l)\n+   RUNNING_COUNT=$((RUNNING_COUNT - 1))\n+   ALL_COUNT=$((ALL_COUNT - 1))\n+   if [ \"$RUNNING_COUNT\" -lt \"3\" ]; then\n+      echo \"$RUNNING_COUNT pods are running. Waiting for more.\"\n+      return 1\n+   elif [ \"$RUNNING_COUNT\" -ne \"$ALL_COUNT\" ]; then\n+      echo \"$RUNNING_COUNT pods are running out from the $ALL_COUNT\"\n+      return 2\n+   else\n+      STARTED=true\n+      return 0\n+   fi\n+}\n+\n+start_k8s_env() {\n+   print_phase \"Deleting existing k8s resources\"\n+   #reset environment\n+   kubectl delete pvc --all\n+   kubectl delete pv --all\n+   kubectl delete statefulset --all\n+   kubectl delete daemonset --all\n+   kubectl delete deployment --all\n+   kubectl delete service --all\n+   kubectl delete configmap --all\n+   kubectl delete pod --all\n+\n+   print_phase \"Applying k8s resources from $1\"\n+   kubectl apply -f .\n+   wait_for_startup\n+}\n+\n+stop_k8s_env() {\n+   if [ ! \"$KEEP_RUNNING\" ]; then\n+     kubectl delete -f .\n+   fi\n+}\n+\n+regenerate_resources() {\n+  PARENT_OF_PARENT=$(realpath ../..)\n+\n+  if [ $(basename $PARENT_OF_PARENT) == \"k8s\" ]; then\n+    #running from src dir\n+    OZONE_ROOT=$(realpath ../../../../../target/ozone-0.6.0-SNAPSHOT)\n+  else\n+    #running from dist\n+    OZONE_ROOT=$(realpath ../../..)\n+  fi\n+\n+  flekszible generate -t mount:hostPath=\"$OZONE_ROOT\",path=/opt/hadoop -t image:image=apache/ozone-runner:20200420-1 -t ozone/onenode", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2NzQyMw=="}, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAwMzU4MA==", "bodyText": "OK, I'm fine with including it here.  Maybe a note near the version property in pom.xml would be nice to avoid someone forgetting to update this.", "url": "https://github.com/apache/ozone/pull/1223#discussion_r461003580", "createdAt": "2020-07-27T16:10:08Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/testlib.sh", "diffHunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+retry() {\n+   n=0\n+   until [ $n -ge 30 ]\n+   do\n+      \"$@\" && break\n+      n=$[$n+1]\n+      echo \"$n '$@' is failed...\"\n+      sleep ${RETRY_SLEEP:-3}\n+   done\n+   if [ $n -eq 30 ]; then\n+      return 255\n+   fi\n+}\n+\n+grep_log() {\n+   CONTAINER=\"$1\"\n+   PATTERN=\"$2\"\n+   kubectl logs \"$1\"  | grep \"$PATTERN\"\n+}\n+\n+wait_for_startup(){\n+   print_phase \"Waiting until the k8s cluster is running\"\n+   retry all_pods_are_running\n+   retry grep_log scm-0 \"SCM exiting safe mode.\"\n+   retry grep_log om-0 \"HTTP server of ozoneManager listening\"\n+   print_phase \"Cluster is up and running\"\n+}\n+\n+all_pods_are_running() {\n+   RUNNING_COUNT=$(kubectl get pod --field-selector status.phase=Running | wc -l)\n+   ALL_COUNT=$(kubectl get pod | wc -l)\n+   RUNNING_COUNT=$((RUNNING_COUNT - 1))\n+   ALL_COUNT=$((ALL_COUNT - 1))\n+   if [ \"$RUNNING_COUNT\" -lt \"3\" ]; then\n+      echo \"$RUNNING_COUNT pods are running. Waiting for more.\"\n+      return 1\n+   elif [ \"$RUNNING_COUNT\" -ne \"$ALL_COUNT\" ]; then\n+      echo \"$RUNNING_COUNT pods are running out from the $ALL_COUNT\"\n+      return 2\n+   else\n+      STARTED=true\n+      return 0\n+   fi\n+}\n+\n+start_k8s_env() {\n+   print_phase \"Deleting existing k8s resources\"\n+   #reset environment\n+   kubectl delete pvc --all\n+   kubectl delete pv --all\n+   kubectl delete statefulset --all\n+   kubectl delete daemonset --all\n+   kubectl delete deployment --all\n+   kubectl delete service --all\n+   kubectl delete configmap --all\n+   kubectl delete pod --all\n+\n+   print_phase \"Applying k8s resources from $1\"\n+   kubectl apply -f .\n+   wait_for_startup\n+}\n+\n+stop_k8s_env() {\n+   if [ ! \"$KEEP_RUNNING\" ]; then\n+     kubectl delete -f .\n+   fi\n+}\n+\n+regenerate_resources() {\n+  PARENT_OF_PARENT=$(realpath ../..)\n+\n+  if [ $(basename $PARENT_OF_PARENT) == \"k8s\" ]; then\n+    #running from src dir\n+    OZONE_ROOT=$(realpath ../../../../../target/ozone-0.6.0-SNAPSHOT)\n+  else\n+    #running from dist\n+    OZONE_ROOT=$(realpath ../../..)\n+  fi\n+\n+  flekszible generate -t mount:hostPath=\"$OZONE_ROOT\",path=/opt/hadoop -t image:image=apache/ozone-runner:20200420-1 -t ozone/onenode", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2NzQyMw=="}, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTcxNTYyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/dist/src/main/k8s/examples/testlib.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjoxNjo1MlrOG3U84g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjoxNjo1MlrOG3U84g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2ODEzMA==", "bodyText": "$RANDOM: TIL, thanks. \ud83d\udc4d", "url": "https://github.com/apache/ozone/pull/1223#discussion_r460668130", "createdAt": "2020-07-27T06:16:52Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/dist/src/main/k8s/examples/testlib.sh", "diffHunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+retry() {\n+   n=0\n+   until [ $n -ge 30 ]\n+   do\n+      \"$@\" && break\n+      n=$[$n+1]\n+      echo \"$n '$@' is failed...\"\n+      sleep ${RETRY_SLEEP:-3}\n+   done\n+   if [ $n -eq 30 ]; then\n+      return 255\n+   fi\n+}\n+\n+grep_log() {\n+   CONTAINER=\"$1\"\n+   PATTERN=\"$2\"\n+   kubectl logs \"$1\"  | grep \"$PATTERN\"\n+}\n+\n+wait_for_startup(){\n+   print_phase \"Waiting until the k8s cluster is running\"\n+   retry all_pods_are_running\n+   retry grep_log scm-0 \"SCM exiting safe mode.\"\n+   retry grep_log om-0 \"HTTP server of ozoneManager listening\"\n+   print_phase \"Cluster is up and running\"\n+}\n+\n+all_pods_are_running() {\n+   RUNNING_COUNT=$(kubectl get pod --field-selector status.phase=Running | wc -l)\n+   ALL_COUNT=$(kubectl get pod | wc -l)\n+   RUNNING_COUNT=$((RUNNING_COUNT - 1))\n+   ALL_COUNT=$((ALL_COUNT - 1))\n+   if [ \"$RUNNING_COUNT\" -lt \"3\" ]; then\n+      echo \"$RUNNING_COUNT pods are running. Waiting for more.\"\n+      return 1\n+   elif [ \"$RUNNING_COUNT\" -ne \"$ALL_COUNT\" ]; then\n+      echo \"$RUNNING_COUNT pods are running out from the $ALL_COUNT\"\n+      return 2\n+   else\n+      STARTED=true\n+      return 0\n+   fi\n+}\n+\n+start_k8s_env() {\n+   print_phase \"Deleting existing k8s resources\"\n+   #reset environment\n+   kubectl delete pvc --all\n+   kubectl delete pv --all\n+   kubectl delete statefulset --all\n+   kubectl delete daemonset --all\n+   kubectl delete deployment --all\n+   kubectl delete service --all\n+   kubectl delete configmap --all\n+   kubectl delete pod --all\n+\n+   print_phase \"Applying k8s resources from $1\"\n+   kubectl apply -f .\n+   wait_for_startup\n+}\n+\n+stop_k8s_env() {\n+   if [ ! \"$KEEP_RUNNING\" ]; then\n+     kubectl delete -f .\n+   fi\n+}\n+\n+regenerate_resources() {\n+  PARENT_OF_PARENT=$(realpath ../..)\n+\n+  if [ $(basename $PARENT_OF_PARENT) == \"k8s\" ]; then\n+    #running from src dir\n+    OZONE_ROOT=$(realpath ../../../../../target/ozone-0.6.0-SNAPSHOT)\n+  else\n+    #running from dist\n+    OZONE_ROOT=$(realpath ../../..)\n+  fi\n+\n+  flekszible generate -t mount:hostPath=\"$OZONE_ROOT\",path=/opt/hadoop -t image:image=apache/ozone-runner:20200420-1 -t ozone/onenode\n+}\n+\n+execute_robot_test() {\n+   print_phase \"Executing robot tests $@\"\n+   mkdir -p result\n+\n+   CONTAINER=\"$1\"\n+   shift 1 #Remove first argument which was the container name\n+\n+   # shellcheck disable=SC2206\n+   ARGUMENTS=($@)\n+\n+   kubectl exec -it \"${CONTAINER}\" -- bash -c 'rm -rf /tmp/report'\n+   kubectl exec -it \"${CONTAINER}\" -- bash -c 'mkdir -p  /tmp/report'\n+   kubectl exec -it \"${CONTAINER}\" -- robot --nostatusrc -d /tmp/report ${ARGUMENTS[@]} || true\n+   kubectl cp \"${CONTAINER}\":/tmp/report/output.xml \"result/$CONTAINER-$RANDOM.xml\" || true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTcxODE0OnYy", "diffSide": "RIGHT", "path": ".github/workflows/post-commit.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjoxNzo1NFrOG3U-Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNjoxNzo1NFrOG3U-Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2ODQ5NQ==", "bodyText": "Nit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  - name: insstall robotframework\n          \n          \n            \n                  - name: install robotframework", "url": "https://github.com/apache/ozone/pull/1223#discussion_r460668495", "createdAt": "2020-07-27T06:17:54Z", "author": {"login": "adoroszlai"}, "path": ".github/workflows/post-commit.yml", "diffHunk": "@@ -224,3 +224,60 @@ jobs:\n          with:\n            name: coverage\n            path: target/coverage\n+  kubernetes:\n+    name: kubernetes\n+    runs-on: ubuntu-18.04\n+    steps:\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-repo-${{ hashFiles('**/pom.xml') }}\n+      - uses: actions/cache@v2\n+        with:\n+          path: |\n+            ~/.pnpm-store\n+            **/node_modules\n+          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-pnpm-\n+      - name: checkout to /mnt/ozone\n+        run: |\n+          sudo chmod 777 /mnt\n+          git clone https://github.com/${GITHUB_REPOSITORY}.git /mnt/ozone\n+          cd /mnt/ozone\n+          git fetch origin \"${GITHUB_REF}\"\n+          git checkout FETCH_HEAD\n+          git reset --hard\n+      - name: insstall robotframework", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9144ea93bc6adbb67610b9031d6b16f09b1cf5ab"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzI2MDkxOnYy", "diffSide": "RIGHT", "path": ".github/workflows/post-commit.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzoxOTo0NlrOG5CYfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDoxNjo0NlrOG5c_cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2MTA1Mg==", "bodyText": "Can you please update this with the fix from fd47f91?", "url": "https://github.com/apache/ozone/pull/1223#discussion_r462461052", "createdAt": "2020-07-29T17:19:46Z", "author": {"login": "adoroszlai"}, "path": ".github/workflows/post-commit.yml", "diffHunk": "@@ -238,3 +238,61 @@ jobs:\n            name: coverage\n            path: target/coverage\n          continue-on-error: true\n+  kubernetes:\n+    name: kubernetes\n+    runs-on: ubuntu-18.04\n+    steps:\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-repo-${{ hashFiles('**/pom.xml') }}\n+      - uses: actions/cache@v2\n+        with:\n+          path: |\n+            ~/.pnpm-store\n+            **/node_modules\n+          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-pnpm-\n+      - name: checkout to /mnt/ozone\n+        run: |\n+          sudo chmod 777 /mnt\n+          git clone https://github.com/${GITHUB_REPOSITORY}.git /mnt/ozone\n+          cd /mnt/ozone\n+          git fetch origin \"${GITHUB_REF}\"\n+          git checkout FETCH_HEAD", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddce73e1d051ed82902d311e2469c8fff2278aeb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg5NzAxMA==", "bodyText": "fair point. Replaced with the new version. (One more reason to move checkout logic to a separated script like https://github.com/elek/hadoop-ozone/blob/smart-checkout/.github/checkout.sh)", "url": "https://github.com/apache/ozone/pull/1223#discussion_r462897010", "createdAt": "2020-07-30T10:16:46Z", "author": {"login": "elek"}, "path": ".github/workflows/post-commit.yml", "diffHunk": "@@ -238,3 +238,61 @@ jobs:\n            name: coverage\n            path: target/coverage\n          continue-on-error: true\n+  kubernetes:\n+    name: kubernetes\n+    runs-on: ubuntu-18.04\n+    steps:\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-repo-${{ hashFiles('**/pom.xml') }}\n+      - uses: actions/cache@v2\n+        with:\n+          path: |\n+            ~/.pnpm-store\n+            **/node_modules\n+          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-pnpm-\n+      - name: checkout to /mnt/ozone\n+        run: |\n+          sudo chmod 777 /mnt\n+          git clone https://github.com/${GITHUB_REPOSITORY}.git /mnt/ozone\n+          cd /mnt/ozone\n+          git fetch origin \"${GITHUB_REF}\"\n+          git checkout FETCH_HEAD", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2MTA1Mg=="}, "originalCommit": {"oid": "ddce73e1d051ed82902d311e2469c8fff2278aeb"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4005, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}