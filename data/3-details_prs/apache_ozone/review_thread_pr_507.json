{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4OTI2MzI3", "number": 507, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMjo1NTozNFrODb51kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNDo1NDoxMlrODb8Yrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTg1NzQ1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/KeyOutputStream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMjo1NTozNFrOFjp58g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMjo1NTozNFrOFjp58g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkzMTA1OA==", "bodyText": "writeLen, goes in both as an agrument as well as a return value to the function. Can we change this to something like expectedWritelen, and writtenLen", "url": "https://github.com/apache/ozone/pull/507#discussion_r372931058", "createdAt": "2020-01-30T12:55:34Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/KeyOutputStream.java", "diffHunk": "@@ -201,7 +209,11 @@ private void handleWrite(byte[] b, int off, long len, boolean retry)\n         // comes via Exception path.\n         int writeLen = Math.min((int) len, (int) current.getRemaining());\n         long currentPos = current.getWrittenDataLength();\n-        writeToOutputStream(current, retry, len, b, writeLen, off, currentPos);\n+        // writeLen will be updated based on whether the write was succeeded\n+        // or if it sees an exception, how much the actual write was\n+        // acknowledged.\n+        writeLen = writeToOutputStream(current, retry, len, b, writeLen,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd753bcc4d6ce443e0687bec0990e791558bcb50"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTg2Mzg0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/KeyOutputStream.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMjo1NzoxM1rOFjp9cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTowNDo1MFrOFkFECQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkzMTk1Mg==", "bodyText": "Lets put\nisException &  throw new IOException(msg, exception); into one function. So that both of these are always updated together.", "url": "https://github.com/apache/ozone/pull/507#discussion_r372931952", "createdAt": "2020-01-30T12:57:13Z", "author": {"login": "mukul1987"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/KeyOutputStream.java", "diffHunk": "@@ -356,6 +370,7 @@ private void handleRetry(IOException exception, long len) throws IOException {\n         msg = \"Retry request failed. \" + action.reason;\n         LOG.error(msg, exception);\n       }\n+      isException = true;\n       throw new IOException(msg, exception);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd753bcc4d6ce443e0687bec0990e791558bcb50"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAwNDg3NA==", "bodyText": "Actually I would say this whole duplication is because RetryPolicy.shouldRetry has two fail states, one when it fails with an exception, and one when it fails with a fail status without an exception by contract.\nThe handling of this underlying speciality at once should go into some method, and perhaps we should use that method to throw an exception in all the cases, and handle the exception only in this code, and the utility method over RetryPolicy.shouldRetry can do the logging and tinkering with the exception message.\nWhat do you think?", "url": "https://github.com/apache/ozone/pull/507#discussion_r373004874", "createdAt": "2020-01-30T15:08:56Z", "author": {"login": "fapifta"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/KeyOutputStream.java", "diffHunk": "@@ -356,6 +370,7 @@ private void handleRetry(IOException exception, long len) throws IOException {\n         msg = \"Retry request failed. \" + action.reason;\n         LOG.error(msg, exception);\n       }\n+      isException = true;\n       throw new IOException(msg, exception);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkzMTk1Mg=="}, "originalCommit": {"oid": "dd753bcc4d6ce443e0687bec0990e791558bcb50"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NjAwOQ==", "bodyText": "Addressed in the latest patch..", "url": "https://github.com/apache/ozone/pull/507#discussion_r373376009", "createdAt": "2020-01-31T09:04:50Z", "author": {"login": "bshashikant"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/KeyOutputStream.java", "diffHunk": "@@ -356,6 +370,7 @@ private void handleRetry(IOException exception, long len) throws IOException {\n         msg = \"Retry request failed. \" + action.reason;\n         LOG.error(msg, exception);\n       }\n+      isException = true;\n       throw new IOException(msg, exception);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkzMTk1Mg=="}, "originalCommit": {"oid": "dd753bcc4d6ce443e0687bec0990e791558bcb50"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjI3NTAyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/KeyOutputStream.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNDo1NDoxMlrOFjt1tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTowNDoxOVrOFkFDTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk5NTUxMA==", "bodyText": "At this point in the code I am not the fan of throwing an IllegalArgumentException, wouldn't it be better to keep this as an IOException with a specific explaining message?", "url": "https://github.com/apache/ozone/pull/507#discussion_r372995510", "createdAt": "2020-01-30T14:54:12Z", "author": {"login": "fapifta"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/KeyOutputStream.java", "diffHunk": "@@ -484,6 +499,9 @@ public void close() throws IOException {\n     closed = true;\n     try {\n       handleFlushOrClose(StreamAction.CLOSE);\n+      if (!isException) {\n+        Preconditions.checkArgument(writeOffset == offset);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd753bcc4d6ce443e0687bec0990e791558bcb50"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3NTgyMg==", "bodyText": "I would prefer to have the precondition check intact, as its just in place to validate the logic. If its not met, the code is buggy. Also, throwing Runtime exception is okay as this exception does not need be caught and handled anywhere in general.", "url": "https://github.com/apache/ozone/pull/507#discussion_r373375822", "createdAt": "2020-01-31T09:04:19Z", "author": {"login": "bshashikant"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/io/KeyOutputStream.java", "diffHunk": "@@ -484,6 +499,9 @@ public void close() throws IOException {\n     closed = true;\n     try {\n       handleFlushOrClose(StreamAction.CLOSE);\n+      if (!isException) {\n+        Preconditions.checkArgument(writeOffset == offset);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk5NTUxMA=="}, "originalCommit": {"oid": "dd753bcc4d6ce443e0687bec0990e791558bcb50"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 31, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}