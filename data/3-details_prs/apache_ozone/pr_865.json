{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MTI2MDcx", "number": 865, "title": "HDDS-2969. Implement ofs://: Add contract test", "bodyText": "What changes were proposed in this pull request?\nAdd OFS contract tests.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-2969\nHow was this patch tested?\nBy the patch itself.", "createdAt": "2020-04-23T19:06:30Z", "url": "https://github.com/apache/ozone/pull/865", "merged": true, "mergeCommit": {"oid": "d6d31c688c53c5886f3b54cc4bc418ef223d1ed5"}, "closed": true, "closedAt": "2020-06-02T14:56:18Z", "author": {"login": "smengcl"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceDbZZgFqTQwNTIyMTUyMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcijI0YgH2gAyNDA4MTI2MDcxOjlkMDE2ZTZmN2IwYjZlZDIwNzlhOWY3Mzc2YzYwMmY0NWQyMTNkM2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MjIxNTIx", "url": "https://github.com/apache/ozone/pull/865#pullrequestreview-405221521", "createdAt": "2020-05-04T18:03:26Z", "commit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowMzoyN1rOGQL1qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowMzoyN1rOGQL1qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNDM2Mw==", "bodyText": "Do we need to override teardown and createConfiguration or it is just for the additional LOG?", "url": "https://github.com/apache/ozone/pull/865#discussion_r419624363", "createdAt": "2020-05-04T18:03:27Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractGetFileStatus.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractGetFileStatusTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Ozone contract tests covering getFileStatus.\n+ */\n+public class ITestRootedOzoneContractGetFileStatus\n+    extends AbstractContractGetFileStatusTest {\n+\n+  private static final Logger LOG =\n+      LoggerFactory.getLogger(ITestRootedOzoneContractGetFileStatus.class);\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void teardown() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MjIyNzA3", "url": "https://github.com/apache/ozone/pull/865#pullrequestreview-405222707", "createdAt": "2020-05-04T18:05:00Z", "commit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowNTowMFrOGQL5Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowNTowMFrOGQL5Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTMwMg==", "bodyText": "listEmptyRoot should be OK for OFS?", "url": "https://github.com/apache/ozone/pull/865#discussion_r419625302", "createdAt": "2020-05-04T18:05:00Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MjIzMDQz", "url": "https://github.com/apache/ozone/pull/865#pullrequestreview-405223043", "createdAt": "2020-05-04T18:05:27Z", "commit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowNToyN1rOGQL6aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowNToyN1rOGQL6aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNTU3Nw==", "bodyText": "mkdirDepth1 should be OK for admin? Can we add some configuration to allow this?", "url": "https://github.com/apache/ozone/pull/865#discussion_r419625577", "createdAt": "2020-05-04T18:05:27Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/ITestRootedOzoneContractRootDir.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+/**\n+ * Ozone contract test for ROOT directory operations.\n+ */\n+public class ITestRootedOzoneContractRootDir extends\n+    AbstractContractRootDirectoryTest {\n+\n+  @BeforeClass\n+  public static void createCluster() throws IOException {\n+    RootedOzoneContract.createCluster();\n+  }\n+\n+  @AfterClass\n+  public static void teardownCluster() throws IOException {\n+    RootedOzoneContract.destroyCluster();\n+  }\n+\n+  @Override\n+  protected AbstractFSContract createContract(Configuration conf) {\n+    return new RootedOzoneContract(conf);\n+  }\n+\n+  @Override\n+  public void testRmEmptyRootDirNonRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testRmRootRecursive() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testListEmptyRootDirectory() {\n+    // OFS doesn't support deleting volumes via rm\n+  }\n+\n+  @Override\n+  public void testMkDirDepth1() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MjI2NTUx", "url": "https://github.com/apache/ozone/pull/865#pullrequestreview-405226551", "createdAt": "2020-05-04T18:10:29Z", "commit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoxMDozMFrOGQMGSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoxMDozMFrOGQMGSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyODYxNg==", "bodyText": "Is it possible to add contract test in the context of HA setup as well as the non-HA?", "url": "https://github.com/apache/ozone/pull/865#discussion_r419628616", "createdAt": "2020-05-04T18:10:30Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/contract/rooted/RootedOzoneContract.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.fs.ozone.contract.rooted;\n+\n+import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.contract.AbstractFSContract;\n+import org.apache.hadoop.hdds.conf.DatanodeRatisServerConfig;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.hdds.ratis.RatisHelper;\n+import org.apache.hadoop.hdds.scm.ScmConfigKeys;\n+import org.apache.hadoop.ozone.MiniOzoneCluster;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.om.OMConfigKeys;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * The contract of Rooted Ozone FileSystem (OFS).\n+ */\n+class RootedOzoneContract extends AbstractFSContract {\n+\n+  private static MiniOzoneCluster cluster;\n+  private static final String CONTRACT_XML = \"contract/ozone.xml\";\n+\n+  RootedOzoneContract(Configuration conf) {\n+    super(conf);\n+    //insert the base features\n+    addConfResource(CONTRACT_XML);\n+  }\n+\n+  @Override\n+  public String getScheme() {\n+    return OzoneConsts.OZONE_OFS_URI_SCHEME;\n+  }\n+\n+  @Override\n+  public Path getTestPath() {\n+    return new Path(\"/testvol1/testbucket1/test\");\n+  }\n+\n+  public static void createCluster() throws IOException {\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_SERVER_PREFIX_KEY + \".\" +\n+                    DatanodeRatisServerConfig.RATIS_SERVER_REQUEST_TIMEOUT_KEY,\n+            3, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_SERVER_PREFIX_KEY + \".\" +\n+                    DatanodeRatisServerConfig.\n+                            RATIS_SERVER_WATCH_REQUEST_TIMEOUT_KEY,\n+            10, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_CLIENT_PREFIX_KEY + \".\" +\n+                    \"rpc.request.timeout\",\n+            3, TimeUnit.SECONDS);\n+    conf.setTimeDuration(\n+            RatisHelper.HDDS_DATANODE_RATIS_CLIENT_PREFIX_KEY + \".\" +\n+                    \"watch.request.timeout\",\n+            10, TimeUnit.SECONDS);\n+    conf.addResource(CONTRACT_XML);\n+\n+    cluster = MiniOzoneCluster.newBuilder(conf).setNumDatanodes(5).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MjI3ODAx", "url": "https://github.com/apache/ozone/pull/865#pullrequestreview-405227801", "createdAt": "2020-05-04T18:12:20Z", "commit": {"oid": "5ea7a6566f1c0c25dc1ab548b45daed6092b22c3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4fb02933f1d5c103d40561bfe84391b0796aaa8", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/a4fb02933f1d5c103d40561bfe84391b0796aaa8", "committedDate": "2020-05-06T19:12:44Z", "message": "Improve code readability."}, "afterCommit": {"oid": "3431ee262b49b81dd89b752a523c0c54d24d1553", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/3431ee262b49b81dd89b752a523c0c54d24d1553", "committedDate": "2020-05-05T14:39:57Z", "message": "Clean up code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3bbd7f90f246557768a1cec5e32294da30f1f59", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/c3bbd7f90f246557768a1cec5e32294da30f1f59", "committedDate": "2020-05-18T17:10:46Z", "message": "Copy."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb478c034eebb5c51826a277737190fdda5a2d28", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/bb478c034eebb5c51826a277737190fdda5a2d28", "committedDate": "2020-05-18T17:10:46Z", "message": "Rename."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07889dc8f04fc44a51b9f2a195e271eb7e5b0aeb", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/07889dc8f04fc44a51b9f2a195e271eb7e5b0aeb", "committedDate": "2020-05-18T17:10:46Z", "message": "Change scheme to OFS. Most tests pass. DistCp and RootDir has failures."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93208191910a8bcbd2d196a054348f240d338100", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/93208191910a8bcbd2d196a054348f240d338100", "committedDate": "2020-05-18T17:10:46Z", "message": "Handle DistCp /NONE path. DistCp contract passes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4c6246f117fb36f7132b5db2949be8d864eba38", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/a4c6246f117fb36f7132b5db2949be8d864eba38", "committedDate": "2020-05-18T17:10:46Z", "message": "getFileStatus should throw FileNotFoundException for VOLUME_NOT_FOUND or BUCKET_NOT_FOUND as well."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22b3c898b01bc9b1a595a17849b6429be5edd926", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/22b3c898b01bc9b1a595a17849b6429be5edd926", "committedDate": "2020-05-18T17:10:46Z", "message": "Disabled unsupported tests in RootDir contract since OFS doesn't support rm volumes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43157128b9e67682cec70838dff8e5d3fa48c080", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/43157128b9e67682cec70838dff8e5d3fa48c080", "committedDate": "2020-05-18T17:10:46Z", "message": "Retest for flaky tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6db0f90f09d6bd4a9eb9e1c0eee92a3098a4aa82", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/6db0f90f09d6bd4a9eb9e1c0eee92a3098a4aa82", "committedDate": "2020-05-18T17:10:46Z", "message": "Retest 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6db95b9ae4350659d0dcd83aa8fcf1fd471866e6", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/6db95b9ae4350659d0dcd83aa8fcf1fd471866e6", "committedDate": "2020-05-18T17:10:46Z", "message": "Retest 3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bb84e2cbd070ad8e324ff8e25fcf113b4a0724a", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/2bb84e2cbd070ad8e324ff8e25fcf113b4a0724a", "committedDate": "2020-05-18T17:10:46Z", "message": "Clean up code."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3431ee262b49b81dd89b752a523c0c54d24d1553", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/3431ee262b49b81dd89b752a523c0c54d24d1553", "committedDate": "2020-05-05T14:39:57Z", "message": "Clean up code."}, "afterCommit": {"oid": "2bb84e2cbd070ad8e324ff8e25fcf113b4a0724a", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/2bb84e2cbd070ad8e324ff8e25fcf113b4a0724a", "committedDate": "2020-05-18T17:10:46Z", "message": "Clean up code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d016e6f7b0b6ed2079a9f7376c602f45d213d3e", "author": {"user": {"login": "smengcl", "name": "Siyao Meng"}}, "url": "https://github.com/apache/ozone/commit/9d016e6f7b0b6ed2079a9f7376c602f45d213d3e", "committedDate": "2020-05-18T17:15:49Z", "message": "Enable testRmEmptyRootDirNonRecursive, testListEmptyRootDirectory and testMkDirDepth1 after rebase."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3417, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}