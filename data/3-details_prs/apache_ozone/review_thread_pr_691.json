{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMTM2MjYx", "number": 691, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjozNzowOFrOD0h15w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjo0Nzo1MVrOD0h_jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDA3MDE1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjozNzowOFrOGJgqgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOTowNDoyMVrOGKGcEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyNTUzNg==", "bodyText": "AtomicReference Do we need atomic here? As this is just used in a single thread.", "url": "https://github.com/apache/ozone/pull/691#discussion_r412625536", "createdAt": "2020-04-22T02:37:08Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "diffHunk": "@@ -135,10 +138,20 @@ private void flushTransactions() {\n           try(BatchOperation batchOperation = omMetadataManager.getStore()\n               .initBatchOperation()) {\n \n+            AtomicReference<String> lastTraceId = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4285520c082e5ef66dc3489aba397575ce5fb821"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI0NDQzNA==", "bodyText": "This is a workaround to update the lastTraceId from the lambda.  Java lambdas require the captured local variable must be final or effectively final.", "url": "https://github.com/apache/ozone/pull/691#discussion_r413244434", "createdAt": "2020-04-22T19:04:21Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "diffHunk": "@@ -135,10 +138,20 @@ private void flushTransactions() {\n           try(BatchOperation batchOperation = omMetadataManager.getStore()\n               .initBatchOperation()) {\n \n+            AtomicReference<String> lastTraceId = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyNTUzNg=="}, "originalCommit": {"oid": "4285520c082e5ef66dc3489aba397575ce5fb821"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDA5NDg3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjo0Nzo1MVrOGJg37w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMTowMDowMFrOGKR_Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyODk3NQ==", "bodyText": "One more question, here for DB commit Batch we are using last trace id, so DB Batch commit span will be linked with the last operation in the queue?", "url": "https://github.com/apache/ozone/pull/691#discussion_r412628975", "createdAt": "2020-04-22T02:47:51Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "diffHunk": "@@ -147,7 +160,11 @@ private void flushTransactions() {\n             });\n \n             long startTime = Time.monotonicNowNanos();\n-            omMetadataManager.getStore().commitBatchOperation(batchOperation);\n+            try (Scope s2 = TracingUtil.importAndCreateScope(\n+                \"DB-commitWriteBatch\", lastTraceId.get())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4285520c082e5ef66dc3489aba397575ce5fb821"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI0Njg2MQ==", "bodyText": "Yes. We are effectively piggy back commitWrite to the last Op that triggered the flush. The other choice is to do another loop of the ready buffers to add it to each of the individual Ops, which will have higher cost.", "url": "https://github.com/apache/ozone/pull/691#discussion_r413246861", "createdAt": "2020-04-22T19:08:08Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "diffHunk": "@@ -147,7 +160,11 @@ private void flushTransactions() {\n             });\n \n             long startTime = Time.monotonicNowNanos();\n-            omMetadataManager.getStore().commitBatchOperation(batchOperation);\n+            try (Scope s2 = TracingUtil.importAndCreateScope(\n+                \"DB-commitWriteBatch\", lastTraceId.get())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyODk3NQ=="}, "originalCommit": {"oid": "4285520c082e5ef66dc3489aba397575ce5fb821"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzMzYxMQ==", "bodyText": "Got it.", "url": "https://github.com/apache/ozone/pull/691#discussion_r413433611", "createdAt": "2020-04-23T01:00:00Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/ratis/OzoneManagerDoubleBuffer.java", "diffHunk": "@@ -147,7 +160,11 @@ private void flushTransactions() {\n             });\n \n             long startTime = Time.monotonicNowNanos();\n-            omMetadataManager.getStore().commitBatchOperation(batchOperation);\n+            try (Scope s2 = TracingUtil.importAndCreateScope(\n+                \"DB-commitWriteBatch\", lastTraceId.get())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyODk3NQ=="}, "originalCommit": {"oid": "4285520c082e5ef66dc3489aba397575ce5fb821"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4848, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}