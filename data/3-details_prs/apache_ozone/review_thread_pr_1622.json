{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NzYzNjQ4", "number": 1622, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDo0ODoxN1rOE86nvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDo0ODoxN1rOE86nvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzEwNDYwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDo0ODoxN1rOH5UlnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDo1MjoxM1rOH5Utag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2ODE4OQ==", "bodyText": "Bharat, in this scenario where the OM state was not reloaded with new checkpoint, it would be better to keep the backup also in place. Just in case the OM needs to be manually reversed back to old state.", "url": "https://github.com/apache/ozone/pull/1622#discussion_r529868189", "createdAt": "2020-11-24T20:48:17Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -3324,8 +3324,16 @@ TermIndex installCheckpoint(String leaderId, Path checkpointLocation,\n       omRatisServer.getOmStateMachine().unpause(lastAppliedIndex, term);\n       LOG.info(\"Reloaded OM state with Term: {} and Index: {}\", term,\n           lastAppliedIndex);\n-    } catch (IOException ex) {\n+    } catch (Exception ex) {\n       String errorMsg = \"Failed to reload OM state and instantiate services.\";\n+      // Delete the backup DB if exists and then terminate OM.\n+      try {\n+        if (dbBackup != null) {\n+          FileUtils.deleteFully(dbBackup);\n+        }\n+      } catch (Exception e) {\n+        LOG.error(\"Failed to delete the backup of the original DB {}\", dbBackup);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790503c40a50daff87e468c06418ecbac2977f1e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2OTYyOA==", "bodyText": "Ya thought of it, but my thought process here is when OM restarts it will get a new install Snapshot and try again. Because when OM it starts, anyway it cannot use this backup path, until some one manual replacing.\nBut I think to be on safer side, will remove this code for now.", "url": "https://github.com/apache/ozone/pull/1622#discussion_r529869628", "createdAt": "2020-11-24T20:50:55Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -3324,8 +3324,16 @@ TermIndex installCheckpoint(String leaderId, Path checkpointLocation,\n       omRatisServer.getOmStateMachine().unpause(lastAppliedIndex, term);\n       LOG.info(\"Reloaded OM state with Term: {} and Index: {}\", term,\n           lastAppliedIndex);\n-    } catch (IOException ex) {\n+    } catch (Exception ex) {\n       String errorMsg = \"Failed to reload OM state and instantiate services.\";\n+      // Delete the backup DB if exists and then terminate OM.\n+      try {\n+        if (dbBackup != null) {\n+          FileUtils.deleteFully(dbBackup);\n+        }\n+      } catch (Exception e) {\n+        LOG.error(\"Failed to delete the backup of the original DB {}\", dbBackup);\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2ODE4OQ=="}, "originalCommit": {"oid": "790503c40a50daff87e468c06418ecbac2977f1e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3MDE4Ng==", "bodyText": "Done.", "url": "https://github.com/apache/ozone/pull/1622#discussion_r529870186", "createdAt": "2020-11-24T20:52:13Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -3324,8 +3324,16 @@ TermIndex installCheckpoint(String leaderId, Path checkpointLocation,\n       omRatisServer.getOmStateMachine().unpause(lastAppliedIndex, term);\n       LOG.info(\"Reloaded OM state with Term: {} and Index: {}\", term,\n           lastAppliedIndex);\n-    } catch (IOException ex) {\n+    } catch (Exception ex) {\n       String errorMsg = \"Failed to reload OM state and instantiate services.\";\n+      // Delete the backup DB if exists and then terminate OM.\n+      try {\n+        if (dbBackup != null) {\n+          FileUtils.deleteFully(dbBackup);\n+        }\n+      } catch (Exception e) {\n+        LOG.error(\"Failed to delete the backup of the original DB {}\", dbBackup);\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2ODE4OQ=="}, "originalCommit": {"oid": "790503c40a50daff87e468c06418ecbac2977f1e"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4514, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}