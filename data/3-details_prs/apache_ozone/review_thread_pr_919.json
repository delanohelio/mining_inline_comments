{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NjgxMzIw", "number": 919, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDo0MTo0NVrOD8SLNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDo0Mzo1M1rOD8SMew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTM4OTMyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDo0MTo0NVrOGVIQkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzo0NTo1MVrOGVniiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwODU5Mw==", "bodyText": "Can be regular 'int' instead of 'AtomicInteger'.", "url": "https://github.com/apache/ozone/pull/919#discussion_r424808593", "createdAt": "2020-05-14T00:41:45Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java", "diffHunk": "@@ -81,31 +83,44 @@ public Response getDatanodes() {\n       String hostname = datanode.getHostName();\n       Set<PipelineID> pipelineIDs = nodeManager.getPipelines(datanode);\n       List<DatanodePipeline> pipelines = new ArrayList<>();\n+      AtomicInteger leaderCount = new AtomicInteger();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f82c8aec5c029d52673605ad2a4d1799ec579a7a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNDUxNw==", "bodyText": "I think this is to work around local variable in capturing lambdas must be final or effective final.", "url": "https://github.com/apache/ozone/pull/919#discussion_r425304517", "createdAt": "2020-05-14T17:19:06Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java", "diffHunk": "@@ -81,31 +83,44 @@ public Response getDatanodes() {\n       String hostname = datanode.getHostName();\n       Set<PipelineID> pipelineIDs = nodeManager.getPipelines(datanode);\n       List<DatanodePipeline> pipelines = new ArrayList<>();\n+      AtomicInteger leaderCount = new AtomicInteger();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwODU5Mw=="}, "originalCommit": {"oid": "f82c8aec5c029d52673605ad2a4d1799ec579a7a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxNjczOA==", "bodyText": "Ah yes. I am OK with using AtomicInteger then.", "url": "https://github.com/apache/ozone/pull/919#discussion_r425316738", "createdAt": "2020-05-14T17:39:34Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java", "diffHunk": "@@ -81,31 +83,44 @@ public Response getDatanodes() {\n       String hostname = datanode.getHostName();\n       Set<PipelineID> pipelineIDs = nodeManager.getPipelines(datanode);\n       List<DatanodePipeline> pipelines = new ArrayList<>();\n+      AtomicInteger leaderCount = new AtomicInteger();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwODU5Mw=="}, "originalCommit": {"oid": "f82c8aec5c029d52673605ad2a4d1799ec579a7a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMTA5OQ==", "bodyText": "@xiaoyuyao That is correct. Since increment happens inside the lambda, a regular int cannot be used.", "url": "https://github.com/apache/ozone/pull/919#discussion_r425321099", "createdAt": "2020-05-14T17:45:51Z", "author": {"login": "vivekratnavel"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java", "diffHunk": "@@ -81,31 +83,44 @@ public Response getDatanodes() {\n       String hostname = datanode.getHostName();\n       Set<PipelineID> pipelineIDs = nodeManager.getPipelines(datanode);\n       List<DatanodePipeline> pipelines = new ArrayList<>();\n+      AtomicInteger leaderCount = new AtomicInteger();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwODU5Mw=="}, "originalCommit": {"oid": "f82c8aec5c029d52673605ad2a4d1799ec579a7a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTM5MjU5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDo0Mzo1M1rOGVISpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDo0Mzo1M1rOGVISpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwOTEyNQ==", "bodyText": "UUID equality check is better here.\npipeline.getLeaderId().equals(datanode.getUuid())", "url": "https://github.com/apache/ozone/pull/919#discussion_r424809125", "createdAt": "2020-05-14T00:43:53Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/api/NodeEndpoint.java", "diffHunk": "@@ -81,31 +83,44 @@ public Response getDatanodes() {\n       String hostname = datanode.getHostName();\n       Set<PipelineID> pipelineIDs = nodeManager.getPipelines(datanode);\n       List<DatanodePipeline> pipelines = new ArrayList<>();\n+      AtomicInteger leaderCount = new AtomicInteger();\n+      DatanodeMetadata.Builder builder = DatanodeMetadata.newBuilder();\n       pipelineIDs.forEach(pipelineID -> {\n         try {\n           Pipeline pipeline = pipelineManager.getPipeline(pipelineID);\n+          String leaderNode = pipeline.getLeaderNode().getHostName();\n           DatanodePipeline datanodePipeline = new DatanodePipeline(\n               pipelineID.getId(),\n               pipeline.getType().toString(),\n-              pipeline.getFactor().getNumber()\n+              pipeline.getFactor().getNumber(),\n+              leaderNode\n           );\n           pipelines.add(datanodePipeline);\n+          if (leaderNode.equals(hostname)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f82c8aec5c029d52673605ad2a4d1799ec579a7a"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4303, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}