{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMDY5NjQ2", "number": 1489, "title": "HDDS-4308. Fix issue with quota update", "bodyText": "What changes were proposed in this pull request?\nCurrently volumeArgs using getCacheValue and put the same object in doubleBuffer, this might cause issue.\nLet's take the below scenario:\nInitialVolumeArgs quotaBytes -> 10000\n\nT1 -> Update VolumeArgs, and subtracting 1000 and put this updated volumeArgs to DoubleBuffer.\nT2-> Update VolumeArgs, and subtracting 2000 and has not still updated to double buffer.\n\nNow at the end of flushing these transactions, our DB should have 7000 as bytes used.\nNow T1 is picked by double Buffer and when it commits, and as it uses cached Object put into doubleBuffer, it flushes to DB with the updated value from T2(As it is a cache object) and update DB with bytesUsed as 7000.\nAnd now OM has restarted, and only DB has transactions till T1. (We get this info from TransactionInfo Table(https://issues.apache.org/jira/browse/HDDS-3685)\nNow T2 is again replayed, as it is not committed to DB, now DB will be again subtracted with 2000, and now DB will have 5000.\nBut after T2, the value should be 7000, so we have DB in an incorrect state.\nIssue here:\n\nAs we use a cached object and put the same cached object into double buffer this can cause this kind of issue.\n\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4308\nHow was this patch tested?\nUse the existing UT", "createdAt": "2020-10-13T07:45:47Z", "url": "https://github.com/apache/ozone/pull/1489", "merged": true, "mergeCommit": {"oid": "54cca0bf330460f4aa23d9275d732aaf11c28044"}, "closed": true, "closedAt": "2020-11-25T02:00:58Z", "author": {"login": "captainzmc"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSIJNHABqjM4NzExNTEwMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdf0gj7gFqTUzODEwMTQwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75a47a6a1189b43584899e155232c1399a1f475d", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/75a47a6a1189b43584899e155232c1399a1f475d", "committedDate": "2020-10-13T12:26:09Z", "message": "Fix acquire VOLUME_LOCK issue"}, "afterCommit": {"oid": "e6a0ecdacca868c781969b259be02ed6d0ee30c7", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/e6a0ecdacca868c781969b259be02ed6d0ee30c7", "committedDate": "2020-10-13T12:52:00Z", "message": "Fix acquire VOLUME_LOCK issue"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6a0ecdacca868c781969b259be02ed6d0ee30c7", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/e6a0ecdacca868c781969b259be02ed6d0ee30c7", "committedDate": "2020-10-13T12:52:00Z", "message": "Fix acquire VOLUME_LOCK issue"}, "afterCommit": {"oid": "f3744e77d31652cdbf237f073c1af17d27e74b18", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/f3744e77d31652cdbf237f073c1af17d27e74b18", "committedDate": "2020-10-14T02:02:18Z", "message": "Fix acquire VOLUME_LOCK issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NzgwNjMw", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-517780630", "createdAt": "2020-10-27T14:40:15Z", "commit": {"oid": "2614eeb893dc9c406764824aba73faafd56d4ded"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNDo0MDoxNVrOHo_xfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNDo0MDoxNVrOHo_xfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc0OTk1MA==", "bodyText": "I don't prefer to add new methods here, this makes current PR not clear to understand.\n@captainzmc , can you make the minor adjustment for getVolumeInfo as I suggested in JIRA HDDS-4308. After this, we can make few lines change I think.", "url": "https://github.com/apache/ozone/pull/1489#discussion_r512749950", "createdAt": "2020-10-27T14:40:15Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java", "diffHunk": "@@ -597,27 +596,40 @@ protected boolean checkDirectoryAlreadyExists(String volumeName,\n   }\n \n   /**\n-   * Return volume info for the specified volume. If the volume does not\n-   * exist, returns {@code null}.\n+   * Return volume info that updated usageBytes for the specified volume.\n    * @param omMetadataManager\n    * @param volume\n+   * @param updateUsage\n    * @return OmVolumeArgs\n    * @throws IOException\n    */\n-  protected OmVolumeArgs getVolumeInfo(OMMetadataManager omMetadataManager,\n-      String volume) {\n-\n-    OmVolumeArgs volumeArgs = null;\n-\n-    CacheValue<OmVolumeArgs> value =\n-        omMetadataManager.getVolumeTable().getCacheValue(\n-        new CacheKey<>(omMetadataManager.getVolumeKey(volume)));\n-\n-    if (value != null) {\n-      volumeArgs = value.getCacheValue();\n-    }\n+  protected static synchronized OmVolumeArgs syncUpdateUsage(\n+      OMMetadataManager omMetadataManager, String volume, long updateUsage) {\n+    OmVolumeArgs volumeArgs = omMetadataManager.getVolumeTable().getCacheValue(\n+        new CacheKey<>(omMetadataManager.getVolumeKey(volume)))\n+        .getCacheValue();\n+    volumeArgs.getUsedBytes().add(updateUsage);\n+    return volumeArgs.copyObject();\n+  }\n \n-    return volumeArgs;\n+  /**\n+   * Return volume info that updated usageBytes for the specified volume. And\n+   * check Volume usageBytes quota.\n+   * @param omMetadataManager\n+   * @param volume\n+   * @param updateUsage\n+   * @return OmVolumeArgs\n+   * @throws IOException\n+   */\n+  protected static synchronized OmVolumeArgs syncCheckAndUpdateUsage(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2614eeb893dc9c406764824aba73faafd56d4ded"}, "originalPosition": 61}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2614eeb893dc9c406764824aba73faafd56d4ded", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/2614eeb893dc9c406764824aba73faafd56d4ded", "committedDate": "2020-10-27T06:48:53Z", "message": "trigger CI"}, "afterCommit": {"oid": "f3744e77d31652cdbf237f073c1af17d27e74b18", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/f3744e77d31652cdbf237f073c1af17d27e74b18", "committedDate": "2020-10-14T02:02:18Z", "message": "Fix acquire VOLUME_LOCK issue"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23e93a0d46fafab96c367d4b6df0cec52d43c6f1", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/23e93a0d46fafab96c367d4b6df0cec52d43c6f1", "committedDate": "2020-10-29T06:04:32Z", "message": "LongAdder in OmVolumeArgs is unnecessary"}, "afterCommit": {"oid": "dcfdb763ba9d72fa6d36d3221d40f5cfe60c08b4", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/dcfdb763ba9d72fa6d36d3221d40f5cfe60c08b4", "committedDate": "2020-10-29T12:31:51Z", "message": "LongAdder in OmVolumeArgs is unnecessary"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dcfdb763ba9d72fa6d36d3221d40f5cfe60c08b4", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/dcfdb763ba9d72fa6d36d3221d40f5cfe60c08b4", "committedDate": "2020-10-29T12:31:51Z", "message": "LongAdder in OmVolumeArgs is unnecessary"}, "afterCommit": {"oid": "dfc8e50f63315ce8e915e1861309ab6766fe8004", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/dfc8e50f63315ce8e915e1861309ab6766fe8004", "committedDate": "2020-10-29T13:15:48Z", "message": "LongAdder in OmVolumeArgs is unnecessary"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzI0NDYx", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-520724461", "createdAt": "2020-10-30T14:31:44Z", "commit": {"oid": "dfc8e50f63315ce8e915e1861309ab6766fe8004"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDozMTo0NFrOHrRq9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo1Mzo1N1rOHrSu6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0MDM0MQ==", "bodyText": "Method name setUsedBytes seems confused, can we rename to incrUsedBytes(long bytes)", "url": "https://github.com/apache/ozone/pull/1489#discussion_r515140341", "createdAt": "2020-10-30T14:31:44Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmVolumeArgs.java", "diffHunk": "@@ -177,10 +176,14 @@ public OmOzoneAclMap getAclMap() {\n     return aclMap;\n   }\n \n-  public LongAdder getUsedBytes() {\n+  public long getUsedBytes() {\n     return usedBytes;\n   }\n \n+  public void setUsedBytes(long usedBytes) {\n+    this.usedBytes = this.usedBytes + usedBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc8e50f63315ce8e915e1861309ab6766fe8004"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0MzYzOA==", "bodyText": "We should not release volume lock until add omClientResponse into double buffer. So that we can make sure stale OmVolumeArgs in other OM request won't be earlier processed than this request. Here we should ensure that the OmVolumeArgs is updated in order.\nI prefer to add volume lock for the whole method. The same comment for other OM Request classes.", "url": "https://github.com/apache/ozone/pull/1489#discussion_r515143638", "createdAt": "2020-10-30T14:36:52Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -300,8 +302,26 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           trxnLogIndex);\n \n       // update usedBytes atomically.\n-      omVolumeArgs.getUsedBytes().add(preAllocatedSpace);\n       omBucketInfo.getUsedBytes().add(preAllocatedSpace);\n+      OmBucketInfo copyBucketInfo = omBucketInfo.copyObject();\n+      // We cannot acquire VOLUME_LOCK while holding BUCKET_LOCK. So\n+      // release BUCKET_LOCK first.\n+      if (acquiredLock) {\n+        omMetadataManager.getLock().releaseWriteLock(BUCKET_LOCK, volumeName,\n+            bucketName);\n+        acquiredLock = false;\n+      }\n+\n+      acquireVolumeLock = omMetadataManager.getLock().acquireWriteLock(\n+          VOLUME_LOCK, volumeName);\n+      omVolumeArgs.setUsedBytes(preAllocatedSpace);\n+      OmVolumeArgs copyVolumeArgs = omVolumeArgs.copyObject();\n+      if (acquireVolumeLock) {\n+        omMetadataManager.getLock().releaseWriteLock(VOLUME_LOCK, volumeName);\n+        acquireVolumeLock = false;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc8e50f63315ce8e915e1861309ab6766fe8004"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1MTU3OA==", "bodyText": "The similar concurrent update issue for bucket usedBytes will happens if we release bucket lock here and then try to acquire bucket lock again.\nAs mentioned above, we should both lock the volume and bucket lock for the whole method.", "url": "https://github.com/apache/ozone/pull/1489#discussion_r515151578", "createdAt": "2020-10-30T14:48:40Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -300,8 +302,26 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           trxnLogIndex);\n \n       // update usedBytes atomically.\n-      omVolumeArgs.getUsedBytes().add(preAllocatedSpace);\n       omBucketInfo.getUsedBytes().add(preAllocatedSpace);\n+      OmBucketInfo copyBucketInfo = omBucketInfo.copyObject();\n+      // We cannot acquire VOLUME_LOCK while holding BUCKET_LOCK. So\n+      // release BUCKET_LOCK first.\n+      if (acquiredLock) {\n+        omMetadataManager.getLock().releaseWriteLock(BUCKET_LOCK, volumeName,\n+            bucketName);\n+        acquiredLock = false;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc8e50f63315ce8e915e1861309ab6766fe8004"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1NzczOQ==", "bodyText": "We should also update below lines to use copyVolumeArgs,  copyBucketInfo.\n    } catch (IOException ex) {\n      result = Result.FAILURE;\n      exception = ex;\n      omClientResponse = new S3MultipartUploadCommitPartResponse(\n          createErrorOMResponse(omResponse, exception), multipartKey, openKey,\n          multipartKeyInfo, oldPartKeyInfo, omKeyInfo,\n          ozoneManager.isRatisEnabled(), omVolumeArgs, omBucketInfo);\n    } finally {\n    ...\n    }", "url": "https://github.com/apache/ozone/pull/1489#discussion_r515157739", "createdAt": "2020-10-30T14:53:57Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3MultipartUploadCommitPartRequest.java", "diffHunk": "@@ -222,16 +218,34 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       // be subtracted.\n       long correctedSpace = omKeyInfo.getDataSize() * factor -\n           keyArgs.getKeyLocationsList().size() * scmBlockSize * factor;\n-      omVolumeArgs.getUsedBytes().add(correctedSpace);\n       omBucketInfo.getUsedBytes().add(correctedSpace);\n+      OmBucketInfo copyBucketInfo = omBucketInfo.copyObject();\n+      // We cannot acquire VOLUME_LOCK while holding BUCKET_LOCK. So\n+      // release BUCKET_LOCK first.\n+      if (acquiredLock) {\n+        omMetadataManager.getLock().releaseWriteLock(BUCKET_LOCK, volumeName,\n+            bucketName);\n+        acquiredLock = false;\n+      }\n+\n+      acquireVolumeLock = omMetadataManager.getLock().acquireWriteLock(\n+          VOLUME_LOCK, volumeName);\n+      omVolumeArgs.setUsedBytes(correctedSpace);\n+      OmVolumeArgs copyVolumeArgs = omVolumeArgs.copyObject();\n+      if (acquireVolumeLock) {\n+        omMetadataManager.getLock().releaseWriteLock(VOLUME_LOCK, volumeName);\n+        acquireVolumeLock = false;\n+      }\n+      acquiredLock = omMetadataManager.getLock().acquireWriteLock(BUCKET_LOCK,\n+          volumeName, bucketName);\n \n       omResponse.setCommitMultiPartUploadResponse(\n           MultipartCommitUploadPartResponse.newBuilder()\n               .setPartName(partName));\n       omClientResponse = new S3MultipartUploadCommitPartResponse(\n           omResponse.build(), multipartKey, openKey,\n           multipartKeyInfo, oldPartKeyInfo, omKeyInfo,\n-          ozoneManager.isRatisEnabled(), omVolumeArgs, omBucketInfo);\n+          ozoneManager.isRatisEnabled(), copyVolumeArgs, copyBucketInfo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc8e50f63315ce8e915e1861309ab6766fe8004"}, "originalPosition": 75}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5a50dfd956f58822c2cb602dfad0e9052ca670b", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/b5a50dfd956f58822c2cb602dfad0e9052ca670b", "committedDate": "2020-11-02T11:35:45Z", "message": "fix review issues"}, "afterCommit": {"oid": "a3c5ba2e990603f66d3c737dcead759e8d5952a8", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/a3c5ba2e990603f66d3c737dcead759e8d5952a8", "committedDate": "2020-11-02T12:04:25Z", "message": "fix review issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTg1MDA4", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-521585008", "createdAt": "2020-11-02T12:30:28Z", "commit": {"oid": "a3c5ba2e990603f66d3c737dcead759e8d5952a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjozMDoyOFrOHsCZPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjozMDoyOFrOHsCZPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzODYyMA==", "bodyText": "The similar concurrent update issue for bucket usedBytes will happens if we release bucket lock here and then try to acquire bucket lock again.\nAs mentioned above, we should both lock the volume and bucket lock for the whole method.\n\n@captainzmc , can you address above comment, bucket lock is also needed since we also do the bucket used bytes update. Can you update this in all below places?\nOther change looks good to me.", "url": "https://github.com/apache/ozone/pull/1489#discussion_r515938620", "createdAt": "2020-11-02T12:30:28Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -206,8 +206,8 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           IAccessAuthorizer.ACLType.CREATE, OzoneObj.ResourceType.KEY);\n \n       // acquire lock\n-      acquiredLock = omMetadataManager.getLock().acquireWriteLock(BUCKET_LOCK,\n-          volumeName, bucketName);\n+      acquireVolumeLock = omMetadataManager.getLock().acquireWriteLock(\n+          VOLUME_LOCK, volumeName);\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3c5ba2e990603f66d3c737dcead759e8d5952a8"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzc0NDcw", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-521774470", "createdAt": "2020-11-02T16:10:58Z", "commit": {"oid": "325930137c02a41064a5d1f561477a8aa0052017"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoxMDo1OVrOHsLJhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoxMDo1OVrOHsLJhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4MjA1Mg==", "bodyText": "Nit: Can we rename all variable name of acquiredLock to acquireBucketLock in current PR change?", "url": "https://github.com/apache/ozone/pull/1489#discussion_r516082052", "createdAt": "2020-11-02T16:10:59Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -206,6 +208,8 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           IAccessAuthorizer.ACLType.CREATE, OzoneObj.ResourceType.KEY);\n \n       // acquire lock\n+      acquireVolumeLock = omMetadataManager.getLock().acquireWriteLock(\n+          VOLUME_LOCK, volumeName);\n       acquiredLock = omMetadataManager.getLock().acquireWriteLock(BUCKET_LOCK,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "325930137c02a41064a5d1f561477a8aa0052017"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzQzNjMw", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-522343630", "createdAt": "2020-11-03T10:05:35Z", "commit": {"oid": "f28b600505208f774f7736d92c407f4fc70b53c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyODAxMTg3", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-522801187", "createdAt": "2020-11-03T19:12:16Z", "commit": {"oid": "29c48523d27ac0e0a4702995f6972d00404ced64"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9d17aa72f7c5f459b55e87774699e9ca5757308", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/d9d17aa72f7c5f459b55e87774699e9ca5757308", "committedDate": "2020-11-05T14:42:58Z", "message": "Fix issue with quota update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29c48523d27ac0e0a4702995f6972d00404ced64", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/29c48523d27ac0e0a4702995f6972d00404ced64", "committedDate": "2020-11-03T12:29:54Z", "message": "trigger new CI check"}, "afterCommit": {"oid": "d9d17aa72f7c5f459b55e87774699e9ca5757308", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/d9d17aa72f7c5f459b55e87774699e9ca5757308", "committedDate": "2020-11-05T14:42:58Z", "message": "Fix issue with quota update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "357d513680f1d3b46660fd092e134f7a898e5586", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/357d513680f1d3b46660fd092e134f7a898e5586", "committedDate": "2020-11-05T16:10:36Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4428bfc07d20e351a23b936d48042201f1ea31c", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/f4428bfc07d20e351a23b936d48042201f1ea31c", "committedDate": "2020-11-19T13:40:52Z", "message": "fix review issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDQyMjMz", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-537042233", "createdAt": "2020-11-24T03:02:39Z", "commit": {"oid": "f4428bfc07d20e351a23b936d48042201f1ea31c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzowMjozOVrOH4qAIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzowMjozOVrOH4qAIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3MDQ2NQ==", "bodyText": "we do not need this comment any more.", "url": "https://github.com/apache/ozone/pull/1489#discussion_r529170465", "createdAt": "2020-11-24T03:02:39Z", "author": {"login": "runzhiwang"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeysDeleteRequest.java", "diffHunk": "@@ -171,15 +171,15 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n         quotaReleased += sumBlockLengths(omKeyInfo);\n       }\n       // update usedBytes atomically.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4428bfc07d20e351a23b936d48042201f1ea31c"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDQyODk0", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-537042894", "createdAt": "2020-11-24T03:04:29Z", "commit": {"oid": "f4428bfc07d20e351a23b936d48042201f1ea31c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzowNDoyOVrOH4qCRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzowNDoyOVrOH4qCRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3MTAxNA==", "bodyText": "this.usedBytes += bytes;", "url": "https://github.com/apache/ozone/pull/1489#discussion_r529171014", "createdAt": "2020-11-24T03:04:29Z", "author": {"login": "runzhiwang"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmBucketInfo.java", "diffHunk": "@@ -241,9 +240,14 @@ public String getSourceBucket() {\n   }\n \n \n-  public LongAdder getUsedBytes() {\n+  public long getUsedBytes() {\n     return usedBytes;\n   }\n+\n+  public void incrUsedBytes(long bytes) {\n+    this.usedBytes = this.usedBytes + bytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4428bfc07d20e351a23b936d48042201f1ea31c"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDQ0MzUx", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-537044351", "createdAt": "2020-11-24T03:08:43Z", "commit": {"oid": "f4428bfc07d20e351a23b936d48042201f1ea31c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzowODo0M1rOH4qHSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzowODo0M1rOH4qHSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3MjI5Nw==", "bodyText": "revert this line", "url": "https://github.com/apache/ozone/pull/1489#discussion_r529172297", "createdAt": "2020-11-24T03:08:43Z", "author": {"login": "runzhiwang"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -167,7 +167,6 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n         }\n       }\n \n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4428bfc07d20e351a23b936d48042201f1ea31c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDQ0Njg0", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-537044684", "createdAt": "2020-11-24T03:09:40Z", "commit": {"oid": "f4428bfc07d20e351a23b936d48042201f1ea31c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzowOTo0MFrOH4qIjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzowOTo0MFrOH4qIjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3MjYyMA==", "bodyText": "copyBucketInfo -> omBucketInfo.copyObject()", "url": "https://github.com/apache/ozone/pull/1489#discussion_r529172620", "createdAt": "2020-11-24T03:09:40Z", "author": {"login": "runzhiwang"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyDeleteRequest.java", "diffHunk": "@@ -158,7 +158,8 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       omClientResponse = new OMKeyDeleteResponse(omResponse\n           .setDeleteKeyResponse(DeleteKeyResponse.newBuilder()).build(),\n-          omKeyInfo, ozoneManager.isRatisEnabled(), omVolumeArgs, omBucketInfo);\n+          omKeyInfo, ozoneManager.isRatisEnabled(), omVolumeArgs,\n+          copyBucketInfo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4428bfc07d20e351a23b936d48042201f1ea31c"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9831c4ff632ec192cc30d7050076eabfcbddace", "author": {"user": {"login": "captainzmc", "name": "micah zhao"}}, "url": "https://github.com/apache/ozone/commit/f9831c4ff632ec192cc30d7050076eabfcbddace", "committedDate": "2020-11-24T12:19:10Z", "message": "fix review issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MTAxNDA5", "url": "https://github.com/apache/ozone/pull/1489#pullrequestreview-538101409", "createdAt": "2020-11-25T01:59:32Z", "commit": {"oid": "f9831c4ff632ec192cc30d7050076eabfcbddace"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2360, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}