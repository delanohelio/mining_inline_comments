{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMTQ4OTc3", "number": 1533, "title": "HDDS-4408: Datanode State Machine Thread should keep alive during the whole lifetime of Datanode", "bodyText": "What changes were proposed in this pull request?\nDatanode State Machine Thread should keep alive during the whole lifetime of Datanode, since it periodic generates heartbeat tasks which trigger DN to actively talk with DN. If this thread crashes, DN will become a zombie: although it is alive, heartbeats between itself and SCM are stopped.\nIn Tencent internal production environment, we got several dead DNs which can never come back without a restart.\n\u00a0\nWe found that the thread \"Datanode State Machine Thread - 0\" does not exist in the output of jstack, thus no HeartbeatEndpointTask will be created, \u00a0this DN will soon become dead and can not recover unless being restarted.\n\u00a0\nAfter checked the .out log, we saw that OOM occurred in thread \"Datanode State Machine Thread\", which should be responsible for this issue:\n300010.579: Total time for which application threads were stopped: 3.0848769 seconds, Stopping threads took: 0.0000943 seconds\nException in thread \"Datanode State Machine Thread - 0\" java.lang.OutOfMemoryError: Java heap space\n300010.579: Application time: 0.0001554 seconds\n300010.580: Total time for which application threads were stopped: 0.0015600 seconds, Stopping threads took: 0.0002747 seconds\n300010.581: Application time: 0.0004684 seconds\n{Heap before GC invocations=13766 (full 11664):\n PSYoungGen total 3441664K, used 3388416K [0x000000072ab00000, 0x0000000800000000, 0x0000000800000000)\n eden space 3388416K, 100% used [0x000000072ab00000,0x00000007f9800000,0x00000007f9800000)\n from space 53248K, 0% used [0x00000007fcc00000,0x00000007fcc00000,0x0000000800000000)\n to space 53248K, 0% used [0x00000007f9800000,0x00000007f9800000,0x00000007fcc00000)\n ParOldGen total 6990848K, used 6990848K [0x0000000580000000, 0x000000072ab00000, 0x000000072ab00000)\n object space 6990848K, 100% used [0x0000000580000000,0x000000072ab00000,0x000000072ab00000)\n Metaspace used 55150K, capacity 57816K, committed 59224K, reserved 1101824K\n class space used 5922K, capacity 6372K, committed 6744K, reserved 1048576K\n\nBTW, after running DN for more than a week, we see a lot of \"java.lang.OutOfMemoryError: GC overhead limit exceeded\" in DN's log. Since we configured a dead Recon, we guess this could be an evidence for HDDS-4404.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4408\nHow was this patch tested?\nCI", "createdAt": "2020-10-29T09:49:49Z", "url": "https://github.com/apache/ozone/pull/1533", "merged": true, "mergeCommit": {"oid": "277a5899283772d9b1c59d04f3148cdf38613edf"}, "closed": true, "closedAt": "2020-11-13T02:31:48Z", "author": {"login": "GlenGeng"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABda4SCTgFqTUyNjQ5MjE5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbwkh4ABqjM5ODgxMTgxNzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NDkyMTkz", "url": "https://github.com/apache/ozone/pull/1533#pullrequestreview-526492193", "createdAt": "2020-11-09T17:33:38Z", "commit": {"oid": "4e88b00b43f496d7daa237c1669b52ce704fb2c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzozMzozOVrOHv54TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzozMzozOVrOHv54TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5MzQyMA==", "bodyText": "Would it be better for the DN to just self-terminate if there is an uncaught exception in the state machine thread? Do we know what was the exact uncaught exception?", "url": "https://github.com/apache/ozone/pull/1533#discussion_r519993420", "createdAt": "2020-11-09T17:33:39Z", "author": {"login": "arp7"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/statemachine/DatanodeStateMachine.java", "diffHunk": "@@ -399,18 +390,27 @@ public boolean isTransitionAllowedTo(DatanodeStates newState) {\n    * Start datanode state machine as a single thread daemon.\n    */\n   public void startDaemon() {\n-    Runnable startStateMachineTask = () -> {\n-      try {\n-        start();\n-        LOG.info(\"Ozone container server started.\");\n-      } catch (Exception ex) {\n-        LOG.error(\"Unable to start the DatanodeState Machine\", ex);\n-      }\n-    };\n+    reportManager.init();\n+    initCommandHandlerThread(conf);\n+\n+    // Start jvm monitor\n+    jvmPauseMonitor = new JvmPauseMonitor();\n+    jvmPauseMonitor\n+        .init(LegacyHadoopConfigurationSource.asHadoopConfiguration(conf));\n+    jvmPauseMonitor.start();\n+\n     stateMachineThread =  new ThreadFactoryBuilder()\n         .setDaemon(true)\n         .setNameFormat(\"Datanode State Machine Thread - %d\")\n-        .build().newThread(startStateMachineTask);\n+        .setUncaughtExceptionHandler((Thread t, Throwable e) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e88b00b43f496d7daa237c1669b52ce704fb2c7"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeaa76a8f72e4ddbf584ae3bf1dac3d8932c5952", "author": {"user": {"login": "GlenGeng", "name": "Glen Geng"}}, "url": "https://github.com/apache/ozone/commit/aeaa76a8f72e4ddbf584ae3bf1dac3d8932c5952", "committedDate": "2020-11-12T11:07:30Z", "message": "HDDS-4408: terminate Datanode when Datanode State Machine Thread got uncaught exception."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e88b00b43f496d7daa237c1669b52ce704fb2c7", "author": {"user": {"login": "GlenGeng", "name": "Glen Geng"}}, "url": "https://github.com/apache/ozone/commit/4e88b00b43f496d7daa237c1669b52ce704fb2c7", "committedDate": "2020-10-29T11:57:00Z", "message": "HDDS-4408: a decent way to handle OOM"}, "afterCommit": {"oid": "aeaa76a8f72e4ddbf584ae3bf1dac3d8932c5952", "author": {"user": {"login": "GlenGeng", "name": "Glen Geng"}}, "url": "https://github.com/apache/ozone/commit/aeaa76a8f72e4ddbf584ae3bf1dac3d8932c5952", "committedDate": "2020-11-12T11:07:30Z", "message": "HDDS-4408: terminate Datanode when Datanode State Machine Thread got uncaught exception."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2193, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}