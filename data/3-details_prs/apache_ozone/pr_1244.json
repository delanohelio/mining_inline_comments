{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MzkzMDQ4", "number": 1244, "title": "HDDS-3999. OM Shutdown when Commit part tries to commit the part, after abort upload.", "bodyText": "What changes were proposed in this pull request?\nThis is caused by HDDS-3685. And the tests have not caught this because there is no test for the below scenario in our test suite.\n\nInitiate MPU\nPart Upload in progress\nAbort Upload\nPart upload close to commit the part.\n\n(Please fill in changes proposed in this fix)\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3999\nHow was this patch tested?\nAdded a test and confirmed now OM does not crash.", "createdAt": "2020-07-22T22:48:28Z", "url": "https://github.com/apache/ozone/pull/1244", "merged": true, "mergeCommit": {"oid": "32ac7bf79529e30f2ec170456bf3a8803a380edd"}, "closed": true, "closedAt": "2020-07-24T15:57:06Z", "author": {"login": "bharatviswa504"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3i0MfAH2gAyNDU1MzkzMDQ4OmI5ZjgyNjcxYTY3MWU0NGNhZjUzMjYzZjNmODBiMGQ2OTA3ZTMzNTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3-YmXAFqTQ1NDY2NjQ4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b9f82671a671e44caf53263f3f80b0d6907e3354", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/b9f82671a671e44caf53263f3f80b0d6907e3354", "committedDate": "2020-07-22T22:45:42Z", "message": "HDDS-3999. OM NPE and shutdown while S3MultipartUploadCommitPartResponse#checkAndUpdateDB."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNzk4Mjcy", "url": "https://github.com/apache/ozone/pull/1244#pullrequestreview-453798272", "createdAt": "2020-07-23T02:06:00Z", "commit": {"oid": "b9f82671a671e44caf53263f3f80b0d6907e3354"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjowNjowMFrOG16FQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjowOTozMFrOG16H_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE3OTMzMQ==", "bodyText": "Please remove the extra blank line.", "url": "https://github.com/apache/ozone/pull/1244#discussion_r459179331", "createdAt": "2020-07-23T02:06:00Z", "author": {"login": "maobaolong"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -1911,10 +1912,45 @@ public void testAbortUploadFail() throws Exception {\n     volume.createBucket(bucketName);\n     OzoneBucket bucket = volume.getBucket(bucketName);\n \n-    OzoneTestUtils.expectOmException(ResultCodes.NO_SUCH_MULTIPART_UPLOAD_ERROR,\n+    OzoneTestUtils.expectOmException(NO_SUCH_MULTIPART_UPLOAD_ERROR,\n         () -> bucket.abortMultipartUpload(keyName, \"random\"));\n   }\n \n+  @Test\n+  public void testAbortUploadFailWithInProgressPartUpload() throws Exception {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    String keyName = UUID.randomUUID().toString();\n+\n+    store.createVolume(volumeName);\n+    OzoneVolume volume = store.getVolume(volumeName);\n+    volume.createBucket(bucketName);\n+    OzoneBucket bucket = volume.getBucket(bucketName);\n+\n+    OmMultipartInfo omMultipartInfo = bucket.initiateMultipartUpload(keyName,\n+        STAND_ALONE, ONE);\n+\n+    Assert.assertNotNull(omMultipartInfo.getUploadID());\n+\n+    // Do not close output stream.\n+    byte[] data = \"data\".getBytes(UTF_8);\n+    OzoneOutputStream ozoneOutputStream = bucket.createMultipartKey(keyName,\n+        data.length, 1, omMultipartInfo.getUploadID());\n+    ozoneOutputStream.write(data, 0, data.length);\n+\n+    // Abort before completing part upload.\n+    bucket.abortMultipartUpload(keyName, omMultipartInfo.getUploadID());\n+\n+    try {\n+      ozoneOutputStream.close();\n+    } catch (IOException ex) {\n+      assertTrue(ex instanceof OMException);\n+      assertEquals(NO_SUCH_MULTIPART_UPLOAD_ERROR,\n+          ((OMException) ex).getResult());\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9f82671a671e44caf53263f3f80b0d6907e3354"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4MDAyOA==", "bodyText": "Please add a fail() here", "url": "https://github.com/apache/ozone/pull/1244#discussion_r459180028", "createdAt": "2020-07-23T02:09:30Z", "author": {"login": "maobaolong"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -1911,10 +1912,45 @@ public void testAbortUploadFail() throws Exception {\n     volume.createBucket(bucketName);\n     OzoneBucket bucket = volume.getBucket(bucketName);\n \n-    OzoneTestUtils.expectOmException(ResultCodes.NO_SUCH_MULTIPART_UPLOAD_ERROR,\n+    OzoneTestUtils.expectOmException(NO_SUCH_MULTIPART_UPLOAD_ERROR,\n         () -> bucket.abortMultipartUpload(keyName, \"random\"));\n   }\n \n+  @Test\n+  public void testAbortUploadFailWithInProgressPartUpload() throws Exception {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    String keyName = UUID.randomUUID().toString();\n+\n+    store.createVolume(volumeName);\n+    OzoneVolume volume = store.getVolume(volumeName);\n+    volume.createBucket(bucketName);\n+    OzoneBucket bucket = volume.getBucket(bucketName);\n+\n+    OmMultipartInfo omMultipartInfo = bucket.initiateMultipartUpload(keyName,\n+        STAND_ALONE, ONE);\n+\n+    Assert.assertNotNull(omMultipartInfo.getUploadID());\n+\n+    // Do not close output stream.\n+    byte[] data = \"data\".getBytes(UTF_8);\n+    OzoneOutputStream ozoneOutputStream = bucket.createMultipartKey(keyName,\n+        data.length, 1, omMultipartInfo.getUploadID());\n+    ozoneOutputStream.write(data, 0, data.length);\n+\n+    // Abort before completing part upload.\n+    bucket.abortMultipartUpload(keyName, omMultipartInfo.getUploadID());\n+\n+    try {\n+      ozoneOutputStream.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9f82671a671e44caf53263f3f80b0d6907e3354"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6b0d492ab01ff85628489ba657432988b9ba8b8", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/d6b0d492ab01ff85628489ba657432988b9ba8b8", "committedDate": "2020-07-23T17:59:19Z", "message": "address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e785b02f9f1591348d0632e99276c7cf78fd44a7", "author": {"user": {"login": "bharatviswa504", "name": "Bharat Viswanadham"}}, "url": "https://github.com/apache/ozone/commit/e785b02f9f1591348d0632e99276c7cf78fd44a7", "committedDate": "2020-07-23T18:26:51Z", "message": "add test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjY2NDg5", "url": "https://github.com/apache/ozone/pull/1244#pullrequestreview-454666489", "createdAt": "2020-07-24T06:52:54Z", "commit": {"oid": "e785b02f9f1591348d0632e99276c7cf78fd44a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2912, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}