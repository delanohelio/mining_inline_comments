{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODg3MzI5", "number": 480, "title": "HDDS-2927. Cache EndPoint tasks instead of creating them all the time in RunningDatanodeState", "bodyText": "What changes were proposed in this pull request?\nCache EndPoint tasks instead of creating them all the time in the class RunningDatanodeState.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-2927\nHow was this patch tested?\nThis is just a code refactoring change. Existed unit tests can cover this change.", "createdAt": "2020-01-22T14:35:14Z", "url": "https://github.com/apache/ozone/pull/480", "merged": true, "mergeCommit": {"oid": "01b30db7f7e4dbf376d5bcc0d35996e276dc84b5"}, "closed": true, "closedAt": "2020-02-20T19:07:55Z", "author": {"login": "linyiqun"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb82qoAgH2gAyMzY1ODg3MzI5OjY5NjUwOWQ1ZDA1MTJlYmEwZTZkMzQ5NzEyMjVkMzg2NzIyNjRjZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGP9y3AFqTM2MjE1NzYwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "696509d5d0512eba0e6d34971225d38672264cfc", "author": {"user": {"login": "linyiqun", "name": "Yiqun Lin"}}, "url": "https://github.com/apache/ozone/commit/696509d5d0512eba0e6d34971225d38672264cfc", "committedDate": "2020-01-22T14:31:49Z", "message": "HDDS-2927. Cache EndPoint tasks instead of creating them all the time."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NzUwOTcy", "url": "https://github.com/apache/ozone/pull/480#pullrequestreview-346750972", "createdAt": "2020-01-22T17:01:31Z", "commit": {"oid": "696509d5d0512eba0e6d34971225d38672264cfc"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0885a2b90b750e756698bdd16304d78429532eef", "author": {"user": {"login": "linyiqun", "name": "Yiqun Lin"}}, "url": "https://github.com/apache/ozone/commit/0885a2b90b750e756698bdd16304d78429532eef", "committedDate": "2020-01-23T02:35:49Z", "message": " HDDS-2927. Cache EndPoint tasks instead of creating them all the time."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NDM5Nzc2", "url": "https://github.com/apache/ozone/pull/480#pullrequestreview-347439776", "createdAt": "2020-01-23T16:33:32Z", "commit": {"oid": "0885a2b90b750e756698bdd16304d78429532eef"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjozMzozMlrOFhEyOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjozNzowNVrOFhE6uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNTcyMQ==", "bodyText": "Shouldn't this be state instead of endpoint.getState()?  Assuming the endpoint state is constant during initialization, wouldn't this create several instances of the same type (eg. RegisterEndpointTask) for each endpoint?", "url": "https://github.com/apache/ozone/pull/480#discussion_r370225721", "createdAt": "2020-01-23T16:33:32Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java", "diffHunk": "@@ -49,14 +52,62 @@\n   private final SCMConnectionManager connectionManager;\n   private final Configuration conf;\n   private final StateContext context;\n-  private CompletionService<EndpointStateMachine.EndPointStates> ecs;\n+  private CompletionService<EndPointStates> ecs;\n+  /** Cache the end point task per end point per end point state. */\n+  private Map<String, Map<EndPointStates,\n+      Callable<EndPointStates>>> endpointTasks;\n \n   public RunningDatanodeState(Configuration conf,\n       SCMConnectionManager connectionManager,\n       StateContext context) {\n     this.connectionManager = connectionManager;\n     this.conf = conf;\n     this.context = context;\n+    initEndPointTask();\n+  }\n+\n+  /**\n+   * Initialize end point tasks corresponding to each end point,\n+   * each end point state.\n+   */\n+  private void initEndPointTask() {\n+    endpointTasks = new HashMap<String, Map<EndPointStates,\n+        Callable<EndPointStates>>>();\n+    for (EndpointStateMachine endpoint : connectionManager.getValues()) {\n+      Map<EndPointStates, Callable<EndPointStates>> endpointTaskForState\n+          = new HashMap<EndPointStates, Callable<EndPointStates>>();\n+\n+      for (EndPointStates state : EndPointStates.values()) {\n+        Callable<EndPointStates> endPointTask = null;\n+        switch (endpoint.getState()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0885a2b90b750e756698bdd16304d78429532eef"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNjUzNw==", "bodyText": "Nit: no need to store null task for shutdown state.", "url": "https://github.com/apache/ozone/pull/480#discussion_r370226537", "createdAt": "2020-01-23T16:34:52Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java", "diffHunk": "@@ -49,14 +52,62 @@\n   private final SCMConnectionManager connectionManager;\n   private final Configuration conf;\n   private final StateContext context;\n-  private CompletionService<EndpointStateMachine.EndPointStates> ecs;\n+  private CompletionService<EndPointStates> ecs;\n+  /** Cache the end point task per end point per end point state. */\n+  private Map<String, Map<EndPointStates,\n+      Callable<EndPointStates>>> endpointTasks;\n \n   public RunningDatanodeState(Configuration conf,\n       SCMConnectionManager connectionManager,\n       StateContext context) {\n     this.connectionManager = connectionManager;\n     this.conf = conf;\n     this.context = context;\n+    initEndPointTask();\n+  }\n+\n+  /**\n+   * Initialize end point tasks corresponding to each end point,\n+   * each end point state.\n+   */\n+  private void initEndPointTask() {\n+    endpointTasks = new HashMap<String, Map<EndPointStates,\n+        Callable<EndPointStates>>>();\n+    for (EndpointStateMachine endpoint : connectionManager.getValues()) {\n+      Map<EndPointStates, Callable<EndPointStates>> endpointTaskForState\n+          = new HashMap<EndPointStates, Callable<EndPointStates>>();\n+\n+      for (EndPointStates state : EndPointStates.values()) {\n+        Callable<EndPointStates> endPointTask = null;\n+        switch (endpoint.getState()) {\n+        case GETVERSION:\n+          endPointTask = new VersionEndpointTask(endpoint, conf,\n+              context.getParent().getContainer());\n+          break;\n+        case REGISTER:\n+          endPointTask = RegisterEndpointTask.newBuilder()\n+              .setConfig(conf)\n+              .setEndpointStateMachine(endpoint)\n+              .setContext(context)\n+              .setDatanodeDetails(context.getParent().getDatanodeDetails())\n+              .setOzoneContainer(context.getParent().getContainer())\n+              .build();\n+          break;\n+        case HEARTBEAT:\n+          endPointTask = HeartbeatEndpointTask.newBuilder()\n+              .setConfig(conf)\n+              .setEndpointStateMachine(endpoint)\n+              .setDatanodeDetails(context.getParent().getDatanodeDetails())\n+              .setContext(context)\n+              .build();\n+          break;\n+        case SHUTDOWN:\n+          break;\n+        }\n+        endpointTaskForState.put(state, endPointTask);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0885a2b90b750e756698bdd16304d78429532eef"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNzA0Mw==", "bodyText": "Nit: EnumMap is better suited for maps keyed by enums.", "url": "https://github.com/apache/ozone/pull/480#discussion_r370227043", "createdAt": "2020-01-23T16:35:42Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java", "diffHunk": "@@ -49,14 +52,62 @@\n   private final SCMConnectionManager connectionManager;\n   private final Configuration conf;\n   private final StateContext context;\n-  private CompletionService<EndpointStateMachine.EndPointStates> ecs;\n+  private CompletionService<EndPointStates> ecs;\n+  /** Cache the end point task per end point per end point state. */\n+  private Map<String, Map<EndPointStates,\n+      Callable<EndPointStates>>> endpointTasks;\n \n   public RunningDatanodeState(Configuration conf,\n       SCMConnectionManager connectionManager,\n       StateContext context) {\n     this.connectionManager = connectionManager;\n     this.conf = conf;\n     this.context = context;\n+    initEndPointTask();\n+  }\n+\n+  /**\n+   * Initialize end point tasks corresponding to each end point,\n+   * each end point state.\n+   */\n+  private void initEndPointTask() {\n+    endpointTasks = new HashMap<String, Map<EndPointStates,\n+        Callable<EndPointStates>>>();\n+    for (EndpointStateMachine endpoint : connectionManager.getValues()) {\n+      Map<EndPointStates, Callable<EndPointStates>> endpointTaskForState\n+          = new HashMap<EndPointStates, Callable<EndPointStates>>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0885a2b90b750e756698bdd16304d78429532eef"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNzg5Ng==", "bodyText": "Can you please explain why a string-based map is better than using the endpoint itself as a key?", "url": "https://github.com/apache/ozone/pull/480#discussion_r370227896", "createdAt": "2020-01-23T16:37:05Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/states/datanode/RunningDatanodeState.java", "diffHunk": "@@ -98,35 +148,14 @@ public void execute(ExecutorService executor) {\n       }\n     }\n   }\n-  //TODO : Cache some of these tasks instead of creating them\n-  //all the time.\n-  private Callable<EndpointStateMachine.EndPointStates>\n-      getEndPointTask(EndpointStateMachine endpoint) {\n-    switch (endpoint.getState()) {\n-    case GETVERSION:\n-      return new VersionEndpointTask(endpoint, conf, context.getParent()\n-          .getContainer());\n-    case REGISTER:\n-      return  RegisterEndpointTask.newBuilder()\n-          .setConfig(conf)\n-          .setEndpointStateMachine(endpoint)\n-          .setContext(context)\n-          .setDatanodeDetails(context.getParent().getDatanodeDetails())\n-          .setOzoneContainer(context.getParent().getContainer())\n-          .build();\n-    case HEARTBEAT:\n-      return HeartbeatEndpointTask.newBuilder()\n-          .setConfig(conf)\n-          .setEndpointStateMachine(endpoint)\n-          .setDatanodeDetails(context.getParent().getDatanodeDetails())\n-          .setContext(context)\n-          .build();\n-    case SHUTDOWN:\n-      break;\n-    default:\n-      throw new IllegalArgumentException(\"Illegal Argument.\");\n+\n+  private Callable<EndPointStates> getEndPointTask(\n+      EndpointStateMachine endpoint) {\n+    if (endpointTasks.containsKey(endpoint.toString())) {\n+      return endpointTasks.get(endpoint.toString()).get(endpoint.getState());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0885a2b90b750e756698bdd16304d78429532eef"}, "originalPosition": 128}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fd43d26200eccf869de55a6c8b34a312e420154", "author": {"user": {"login": "linyiqun", "name": "Yiqun Lin"}}, "url": "https://github.com/apache/ozone/commit/9fd43d26200eccf869de55a6c8b34a312e420154", "committedDate": "2020-01-24T02:34:27Z", "message": "HDDS-2927. Address minor review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTU3NjAy", "url": "https://github.com/apache/ozone/pull/480#pullrequestreview-362157602", "createdAt": "2020-02-20T19:05:42Z", "commit": {"oid": "9fd43d26200eccf869de55a6c8b34a312e420154"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3740, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}