{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MzY3NjY2", "number": 1004, "title": "HDDS-3639. Maintain FileHandle Information in OMMetadataManager.", "bodyText": "What changes were proposed in this pull request?\nMaintain FileHandle Information in OMMetadataManager.\nWe are keeping a new field FileHandle in OM. The changes are related with\nstoring this information in OM table and updating it with various operations\neg key create, delete, rename etc.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3639\nHow was this patch tested?\nClean build and UTs.", "createdAt": "2020-06-02T05:58:03Z", "url": "https://github.com/apache/ozone/pull/1004", "merged": true, "mergeCommit": {"oid": "f76d35e6c7ad6dc5282d2b4e395aa02c4dd6c829"}, "closed": true, "closedAt": "2020-06-10T18:51:41Z", "author": {"login": "prashantpogde"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnOWuIgH2gAyNDI2MzY3NjY2OmU1MzlkMGJkNGMxODJhN2I2MGExOGQwOGY2NzJjZjliNWM5ZWU2NWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpUk4pAH2gAyNDI2MzY3NjY2OjJkOWM3N2I5OWExNDNmMjNiOGE2MDhlMjBhMjVjYzIxYWIyNjRkMzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f", "committedDate": "2020-06-02T05:52:37Z", "message": "HDDS-3639. Maintain FileHandle Information in OMMetadataManager."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyOTkyNDM4", "url": "https://github.com/apache/ozone/pull/1004#pullrequestreview-422992438", "createdAt": "2020-06-02T19:27:30Z", "commit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOToyNzozMFrOGeA6iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOToyODo0N1rOGeA9WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNTQ1MQ==", "bodyText": "Isn't this check already done inside createToKeyAndDeleteFromKey()?", "url": "https://github.com/apache/ozone/pull/1004#discussion_r434125451", "createdAt": "2020-06-02T19:27:30Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -88,11 +88,22 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n           omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n     } else if (createToKeyAndDeleteFromKey()) {\n       // If both from and toKeyName are equal do nothing\n-      omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n-      omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n-          newKeyInfo);\n+      if (!toKeyName.equals(fromKeyName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNjE2OA==", "bodyText": "What does it mean for the fileHandleInfo to be zero? If it is zero, we do not delete the old Id from the keyIdTable?", "url": "https://github.com/apache/ozone/pull/1004#discussion_r434126168", "createdAt": "2020-06-02T19:28:47Z", "author": {"login": "avijayanhwx"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -88,11 +88,22 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n           omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n     } else if (createToKeyAndDeleteFromKey()) {\n       // If both from and toKeyName are equal do nothing\n-      omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n-      omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n-          omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n-          newKeyInfo);\n+      if (!toKeyName.equals(fromKeyName)) {\n+        omMetadataManager.getKeyTable().deleteWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKey(volumeName, bucketName, fromKeyName));\n+        omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n+            newKeyInfo);\n+        // At this point we can also update the KeyIdTable.\n+        if (newKeyInfo.getFileHandleInfo() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17f347b7426f8e42339ca3c68a77a9f8abc0e9fb", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/17f347b7426f8e42339ca3c68a77a9f8abc0e9fb", "committedDate": "2020-06-03T18:47:07Z", "message": "HDDS-3639. Addressing review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/b44cbbb6ad66f27df4dee35f078868c75da69bdb", "committedDate": "2020-06-03T18:50:02Z", "message": "HDDS-3639. Checkstyle fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NzIzMDU5", "url": "https://github.com/apache/ozone/pull/1004#pullrequestreview-424723059", "createdAt": "2020-06-04T18:30:20Z", "commit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozMDoyMFrOGfSsdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTo0ODozOVrOGfVZvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NTMzMw==", "bodyText": "The Javadoc needs to be updated here. We are not passing the volume and bucket", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435465333", "createdAt": "2020-06-04T18:30:20Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OMMetadataManager.java", "diffHunk": "@@ -103,6 +103,16 @@\n \n   String getOzoneKey(String volume, String bucket, String key);\n \n+  /**\n+   * Given a volume, bucket, return the corresponding DB key.\n+   *\n+   * @param fileHandleInfo - unique keyId that is used by NFS to create a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ3OTc0Nw==", "bodyText": "Just a thought - should this table be named something else like FileHandle Table to avoid confusing this with Key Table? (It's just a thought. Please feel free to ignore if you think \"KeyId\" is the more appropriate name).", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435479747", "createdAt": "2020-06-04T18:51:05Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OmMetadataManagerImpl.java", "diffHunk": "@@ -118,12 +118,19 @@\n    * |----------------------------------------------------------------------|\n    * |  multipartInfoTable| /volumeName/bucketName/keyName/uploadId ->...   |\n    * |----------------------------------------------------------------------|\n+   * | keyIdTable         | /volumeName/bucketName/keyId -> KeyName         |\n+   * |----------------------------------------------------------------------|\n+   *\n+   * TBD : Renames need to be made keyIdTable aware. Also KeyId based lookups\n+   * should be able to handle any possible race with renames/deletes.\n+   *\n    */\n \n   public static final String USER_TABLE = \"userTable\";\n   public static final String VOLUME_TABLE = \"volumeTable\";\n   public static final String BUCKET_TABLE = \"bucketTable\";\n   public static final String KEY_TABLE = \"keyTable\";\n+  public static final String KEY_ID_TABLE = \"keyIdTable\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4Mzg4Ng==", "bodyText": "OzoneKey is already processed in line 79 (dirKey). That can be reused here.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435483886", "createdAt": "2020-06-04T18:58:37Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/file/OMDirectoryCreateResponse.java", "diffHunk": "@@ -81,6 +81,15 @@ protected void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation, dirKey,\n           dirKeyInfo);\n \n+      // We can also persist the fileHandle to KeyIdTable.\n+      if (dirKeyInfo.getFileHandleInfo() != 0) {\n+        omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKeyIdTableKey(\n+                dirKeyInfo.getFileHandleInfo()),\n+            omMetadataManager.getOzoneKey(dirKeyInfo.getVolumeName(),\n+                dirKeyInfo.getBucketName(),\n+                dirKeyInfo.getKeyName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5MDE2NQ==", "bodyText": "This keyId be added when the key is actually getting committed i.e. in OMKeyCommitResponse#validateAndUpdateCache()? Otherwise, KeyID could point to a key that does not exist.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435490165", "createdAt": "2020-06-04T19:10:31Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyCreateResponse.java", "diffHunk": "@@ -87,6 +87,15 @@ protected void addToDBBatch(OMMetadataManager omMetadataManager,\n         omKeyInfo.getBucketName(), omKeyInfo.getKeyName(), openKeySessionID);\n     omMetadataManager.getOpenKeyTable().putWithBatch(batchOperation,\n         openKey, omKeyInfo);\n+\n+    // We can also persist the fileHandle to KeyIdTable.\n+    if (omKeyInfo.getFileHandleInfo() != 0) {\n+      omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+          omMetadataManager.getOzoneKeyIdTableKey(\n+              omKeyInfo.getFileHandleInfo()),\n+          omMetadataManager.getOzoneKey(omKeyInfo.getVolumeName(),\n+              omKeyInfo.getBucketName(), omKeyInfo.getKeyName()));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e539d0bd4c182a7b60a18d08f672cf9b5c9ee65f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5ODIxNA==", "bodyText": "We are putting and deleting the same key from KeyID Table.\nThe delete operation is not required here as keyId -> fromKey will be overridden with keyId -> toKey.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435498214", "createdAt": "2020-06-04T19:26:16Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -93,6 +93,15 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation,\n           omMetadataManager.getOzoneKey(volumeName, bucketName, toKeyName),\n           newKeyInfo);\n+      // At this point we can also update the KeyIdTable.\n+      if (newKeyInfo.getFileHandleInfo() != 0) {\n+        omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKeyIdTableKey(\n+                newKeyInfo.getFileHandleInfo()), toKeyName);\n+        omMetadataManager.getKeyIdTable().deleteWithBatch(batchOperation,\n+            omMetadataManager.getOzoneKeyIdTableKey(\n+                newKeyInfo.getFileHandleInfo()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5OTkwNg==", "bodyText": "In the if case (deleteFromKeyOnly()) - toKey already exists but fromKey is created as part of replay. When the fromKey is being created, it would update KeyID to fromKey value. So KeyId Table should be updated with correct value (toKey) for this condition also.\n@bharatviswa504  is working on replay optimization after which we would not require to take care of replay scenarios. But let's fix it for now anyway till the old replay code is still in effect.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435499906", "createdAt": "2020-06-04T19:29:41Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/key/OMKeyRenameResponse.java", "diffHunk": "@@ -93,6 +93,15 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n       omMetadataManager.getKeyTable().putWithBatch(batchOperation,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUwMzk3Mg==", "bodyText": "FileHandleInfo in OmMultipartKeyInfo object is not used anywhere.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435503972", "createdAt": "2020-06-04T19:37:59Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/s3/multipart/S3InitiateMultipartUploadRequest.java", "diffHunk": "@@ -156,6 +156,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           .setReplicationFactor(keyArgs.getFactor())\n           .setObjectID(objectID)\n           .setUpdateID(transactionLogIndex)\n+          .setFileHandleInfo(objectID)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUwOTY5Mg==", "bodyText": "This keyId be added when the key is actually getting committed i.e. in S3MultipartUploadComplete#validateAndUpdateCache()? Otherwise, KeyID could point to a key that does not exist.", "url": "https://github.com/apache/ozone/pull/1004#discussion_r435509692", "createdAt": "2020-06-04T19:48:39Z", "author": {"login": "hanishakoneru"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/s3/multipart/S3InitiateMultipartUploadResponse.java", "diffHunk": "@@ -69,6 +69,16 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n         multipartKey, omKeyInfo);\n     omMetadataManager.getMultipartInfoTable().putWithBatch(batchOperation,\n         multipartKey, omMultipartKeyInfo);\n+\n+\n+    if (omKeyInfo.getFileHandleInfo() != 0) {\n+      omMetadataManager.getKeyIdTable().putWithBatch(batchOperation,\n+          omMetadataManager.getOzoneKeyIdTableKey(\n+              omKeyInfo.getFileHandleInfo()),\n+          omMetadataManager.getOzoneKey(omKeyInfo.getVolumeName(),\n+              omKeyInfo.getBucketName(),\n+              omKeyInfo.getKeyName()));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b44cbbb6ad66f27df4dee35f078868c75da69bdb"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d9c77b99a143f23b8a608e20a25cc21ab264d37", "author": {"user": {"login": "prashantpogde", "name": null}}, "url": "https://github.com/apache/ozone/commit/2d9c77b99a143f23b8a608e20a25cc21ab264d37", "committedDate": "2020-06-08T18:15:22Z", "message": "HDDS-3639. Addressing review comments."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3125, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}