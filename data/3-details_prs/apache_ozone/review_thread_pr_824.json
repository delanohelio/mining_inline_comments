{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNTc4Nzk0", "number": 824, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODoxNjowNVrODx9rLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODoxNjowNVrODx9rLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzE3Mjk1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODoxNjowNVrOGFuwJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMjoyNDoxOVrOGF3Nzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY2MjA1NA==", "bodyText": "Nit: can you please extract this logic into a helper method, to avoid duplication?", "url": "https://github.com/apache/ozone/pull/824#discussion_r408662054", "createdAt": "2020-04-15T08:16:05Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "diffHunk": "@@ -65,6 +68,110 @@\n   private int rootItemCount;\n \n   @Test(timeout = 300_000)\n+  public void testCreateFileShouldCheckTheExistenceOfDirWithSameName() throws Exception {\n+    /*\n+     * Op 1. create file -> /d1/d2/d3/d4/key2\n+     * Op 2. create dir -> /d1/d2/d3/d4/key2\n+     *\n+     * Reverse of the above steps\n+     * Op 2. create dir -> /d1/d2/d3/d4/key3\n+     * Op 1. create file -> /d1/d2/d3/d4/key3\n+     *\n+     * Op 3. create file -> /d1/d2/d3 (d3 as a file inside /d1/d2)\n+     */\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    cluster = MiniOzoneCluster.newBuilder(conf)\n+            .setNumDatanodes(3)\n+            .build();\n+    cluster.waitForClusterToBeReady();\n+    // create a volume and a bucket to be used by OzoneFileSystem\n+    OzoneBucket bucket = TestDataUtil.createVolumeAndBucket(cluster);\n+    volumeName = bucket.getVolumeName();\n+    bucketName = bucket.getName();\n+\n+    String rootPath = String.format(\"%s://%s.%s/\",\n+            OzoneConsts.OZONE_URI_SCHEME, bucket.getName(), bucket.getVolumeName());\n+\n+    // Set the fs.defaultFS and start the filesystem\n+    conf.set(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY, rootPath);\n+    fs = FileSystem.get(conf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82e583b8eeb31eed140e7a07449e6fbc8de8575d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgwMDcxOQ==", "bodyText": "Thanks for the comments. Uploaded the changes.", "url": "https://github.com/apache/ozone/pull/824#discussion_r408800719", "createdAt": "2020-04-15T12:24:19Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/fs/ozone/TestOzoneFileSystem.java", "diffHunk": "@@ -65,6 +68,110 @@\n   private int rootItemCount;\n \n   @Test(timeout = 300_000)\n+  public void testCreateFileShouldCheckTheExistenceOfDirWithSameName() throws Exception {\n+    /*\n+     * Op 1. create file -> /d1/d2/d3/d4/key2\n+     * Op 2. create dir -> /d1/d2/d3/d4/key2\n+     *\n+     * Reverse of the above steps\n+     * Op 2. create dir -> /d1/d2/d3/d4/key3\n+     * Op 1. create file -> /d1/d2/d3/d4/key3\n+     *\n+     * Op 3. create file -> /d1/d2/d3 (d3 as a file inside /d1/d2)\n+     */\n+    OzoneConfiguration conf = new OzoneConfiguration();\n+    cluster = MiniOzoneCluster.newBuilder(conf)\n+            .setNumDatanodes(3)\n+            .build();\n+    cluster.waitForClusterToBeReady();\n+    // create a volume and a bucket to be used by OzoneFileSystem\n+    OzoneBucket bucket = TestDataUtil.createVolumeAndBucket(cluster);\n+    volumeName = bucket.getVolumeName();\n+    bucketName = bucket.getName();\n+\n+    String rootPath = String.format(\"%s://%s.%s/\",\n+            OzoneConsts.OZONE_URI_SCHEME, bucket.getName(), bucket.getVolumeName());\n+\n+    // Set the fs.defaultFS and start the filesystem\n+    conf.set(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY, rootPath);\n+    fs = FileSystem.get(conf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY2MjA1NA=="}, "originalCommit": {"oid": "82e583b8eeb31eed140e7a07449e6fbc8de8575d"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4399, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}