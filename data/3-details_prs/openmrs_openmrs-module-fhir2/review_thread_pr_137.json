{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NTgzMTQ2", "number": 137, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0MTo0MFrODvKSnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNTowNTo0N1rODvLBFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzc4MjY4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/FhirConstants.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0MTo0MFrOGBbG5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0MTo0MFrOGBbG5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0NTg5Mg==", "bodyText": "Why are we adding this new extension here?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/137#discussion_r404145892", "createdAt": "2020-04-06T14:41:40Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirConstants.java", "diffHunk": "@@ -75,6 +75,9 @@\n \t\n \tpublic static final String OPENMRS_FHIR_EXT_MEDICINE = OPENMRS_FHIR_EXT_PREFIX + \"/medicine\";\n \t\n+\tpublic static final String OPENMRS_FHIR_EXT_RELATIONSHIP_IDENTIFIER = OPENMRS_FHIR_EXT_PREFIX\n+\t        + \"/Relationship/identifier\";\n+\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0f1e5a617271dea75fea27dbfdff4dabab6e95"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzkwMTY1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/RelatedPersonTranslatorImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNTowNTo0N1rOGBcRBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNTo0ODo1OFrOGBeRcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE2NDg2OQ==", "bodyText": "Why are we adding this new extension here?\n\nI am adding an identifier to refer to person-A by UUID. This is what I thought of. If you have a better way of doing this that would be great.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/137#discussion_r404164869", "createdAt": "2020-04-06T15:05:47Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/RelatedPersonTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import java.util.Date;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.RelatedPerson;\n+import org.openmrs.Person;\n+import org.openmrs.PersonAddress;\n+import org.openmrs.PersonName;\n+import org.openmrs.Relationship;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.api.translators.GenderTranslator;\n+import org.openmrs.module.fhir2.api.translators.PersonAddressTranslator;\n+import org.openmrs.module.fhir2.api.translators.PersonNameTranslator;\n+import org.openmrs.module.fhir2.api.translators.RelatedPersonTranslator;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class RelatedPersonTranslatorImpl implements RelatedPersonTranslator {\n+\t\n+\t@Autowired\n+\tprivate PersonNameTranslator nameTranslator;\n+\t\n+\t@Autowired\n+\tprivate PersonAddressTranslator addressTranslator;\n+\t\n+\t@Autowired\n+\tprivate GenderTranslator genderTranslator;\n+\t\n+\t/**\n+\t * @see org.openmrs.module.fhir2.api.translators.RelatedPersonTranslator#toFhirResource(org.openmrs.Relationship)\n+\t */\n+\t@Override\n+\tpublic RelatedPerson toFhirResource(Relationship relationship) {\n+\t\tif (relationship == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tPerson omrsRelatedPerson = relationship.getPersonA();\n+\t\tRelatedPerson relatedPerson = new RelatedPerson();\n+\t\t\n+\t\trelatedPerson.setId(relationship.getUuid());\n+\t\trelatedPerson.setBirthDate(omrsRelatedPerson.getBirthdate());\n+\t\t\n+\t\tif (omrsRelatedPerson.getGender() != null) {\n+\t\t\trelatedPerson.setGender(genderTranslator.toFhirResource(omrsRelatedPerson.getGender()));\n+\t\t}\n+\t\t\n+\t\tfor (PersonName name : omrsRelatedPerson.getNames()) {\n+\t\t\trelatedPerson.addName(nameTranslator.toFhirResource(name));\n+\t\t}\n+\t\t\n+\t\tfor (PersonAddress address : omrsRelatedPerson.getAddresses()) {\n+\t\t\trelatedPerson.addAddress(addressTranslator.toFhirResource(address));\n+\t\t}\n+\t\t\n+\t\t//identifier\n+\t\tIdentifier relationshipIdentifier = new Identifier();\n+\t\trelationshipIdentifier.setSystem(FhirConstants.OPENMRS_FHIR_EXT_RELATIONSHIP_IDENTIFIER);\n+\t\trelationshipIdentifier.setValue(omrsRelatedPerson.getUuid());\n+\t\trelatedPerson.addIdentifier(relationshipIdentifier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0f1e5a617271dea75fea27dbfdff4dabab6e95"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE5Nzc0NA==", "bodyText": "I can't think of a better way than using an extension off-hand, but what I would do is 1. rename this to something like \"RelatedPerson\" and 2. change the data stored into a proper reference, e.g., Person/<UUID>, so it's a little more like a standard FHIR data type.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/137#discussion_r404197744", "createdAt": "2020-04-06T15:48:58Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/RelatedPersonTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import java.util.Date;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.RelatedPerson;\n+import org.openmrs.Person;\n+import org.openmrs.PersonAddress;\n+import org.openmrs.PersonName;\n+import org.openmrs.Relationship;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.api.translators.GenderTranslator;\n+import org.openmrs.module.fhir2.api.translators.PersonAddressTranslator;\n+import org.openmrs.module.fhir2.api.translators.PersonNameTranslator;\n+import org.openmrs.module.fhir2.api.translators.RelatedPersonTranslator;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class RelatedPersonTranslatorImpl implements RelatedPersonTranslator {\n+\t\n+\t@Autowired\n+\tprivate PersonNameTranslator nameTranslator;\n+\t\n+\t@Autowired\n+\tprivate PersonAddressTranslator addressTranslator;\n+\t\n+\t@Autowired\n+\tprivate GenderTranslator genderTranslator;\n+\t\n+\t/**\n+\t * @see org.openmrs.module.fhir2.api.translators.RelatedPersonTranslator#toFhirResource(org.openmrs.Relationship)\n+\t */\n+\t@Override\n+\tpublic RelatedPerson toFhirResource(Relationship relationship) {\n+\t\tif (relationship == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tPerson omrsRelatedPerson = relationship.getPersonA();\n+\t\tRelatedPerson relatedPerson = new RelatedPerson();\n+\t\t\n+\t\trelatedPerson.setId(relationship.getUuid());\n+\t\trelatedPerson.setBirthDate(omrsRelatedPerson.getBirthdate());\n+\t\t\n+\t\tif (omrsRelatedPerson.getGender() != null) {\n+\t\t\trelatedPerson.setGender(genderTranslator.toFhirResource(omrsRelatedPerson.getGender()));\n+\t\t}\n+\t\t\n+\t\tfor (PersonName name : omrsRelatedPerson.getNames()) {\n+\t\t\trelatedPerson.addName(nameTranslator.toFhirResource(name));\n+\t\t}\n+\t\t\n+\t\tfor (PersonAddress address : omrsRelatedPerson.getAddresses()) {\n+\t\t\trelatedPerson.addAddress(addressTranslator.toFhirResource(address));\n+\t\t}\n+\t\t\n+\t\t//identifier\n+\t\tIdentifier relationshipIdentifier = new Identifier();\n+\t\trelationshipIdentifier.setSystem(FhirConstants.OPENMRS_FHIR_EXT_RELATIONSHIP_IDENTIFIER);\n+\t\trelationshipIdentifier.setValue(omrsRelatedPerson.getUuid());\n+\t\trelatedPerson.addIdentifier(relationshipIdentifier);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE2NDg2OQ=="}, "originalCommit": {"oid": "6f0f1e5a617271dea75fea27dbfdff4dabab6e95"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1146, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}