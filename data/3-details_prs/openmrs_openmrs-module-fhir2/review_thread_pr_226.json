{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MTY5MDQw", "number": 226, "reviewThreads": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoxMToyMlrOEIwONg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OTozMFrOEOytZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjE0MTM0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoxMToyMlrOGo5_Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDoxOToyMFrOGpKXWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0NjI4Nw==", "bodyText": "Change to R4 OperationOutcome", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445546287", "createdAt": "2020-06-25T13:11:22Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProvider.java", "diffHunk": "@@ -13,26 +13,36 @@\n \n import java.util.List;\n \n+import ca.uhn.fhir.rest.annotation.Create;\n+import ca.uhn.fhir.rest.annotation.Delete;\n import ca.uhn.fhir.rest.annotation.History;\n import ca.uhn.fhir.rest.annotation.IdParam;\n import ca.uhn.fhir.rest.annotation.OptionalParam;\n import ca.uhn.fhir.rest.annotation.Read;\n+import ca.uhn.fhir.rest.annotation.ResourceParam;\n import ca.uhn.fhir.rest.annotation.Search;\n import ca.uhn.fhir.rest.annotation.Sort;\n+import ca.uhn.fhir.rest.annotation.Update;\n+import ca.uhn.fhir.rest.api.MethodOutcome;\n import ca.uhn.fhir.rest.api.SortSpec;\n import ca.uhn.fhir.rest.api.server.IBundleProvider;\n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.StringAndListParam;\n import ca.uhn.fhir.rest.param.TokenAndListParam;\n import ca.uhn.fhir.rest.server.IResourceProvider;\n+import ca.uhn.fhir.rest.server.exceptions.InvalidRequestException;\n import ca.uhn.fhir.rest.server.exceptions.ResourceNotFoundException;\n import lombok.AccessLevel;\n import lombok.Setter;\n+\n+import org.hl7.fhir.convertors.conv30_40.Patient30_40;\n+import org.hl7.fhir.dstu3.model.OperationOutcome;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxNDYxNg==", "bodyText": "i have fixed it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445814616", "createdAt": "2020-06-25T20:19:20Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProvider.java", "diffHunk": "@@ -13,26 +13,36 @@\n \n import java.util.List;\n \n+import ca.uhn.fhir.rest.annotation.Create;\n+import ca.uhn.fhir.rest.annotation.Delete;\n import ca.uhn.fhir.rest.annotation.History;\n import ca.uhn.fhir.rest.annotation.IdParam;\n import ca.uhn.fhir.rest.annotation.OptionalParam;\n import ca.uhn.fhir.rest.annotation.Read;\n+import ca.uhn.fhir.rest.annotation.ResourceParam;\n import ca.uhn.fhir.rest.annotation.Search;\n import ca.uhn.fhir.rest.annotation.Sort;\n+import ca.uhn.fhir.rest.annotation.Update;\n+import ca.uhn.fhir.rest.api.MethodOutcome;\n import ca.uhn.fhir.rest.api.SortSpec;\n import ca.uhn.fhir.rest.api.server.IBundleProvider;\n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.StringAndListParam;\n import ca.uhn.fhir.rest.param.TokenAndListParam;\n import ca.uhn.fhir.rest.server.IResourceProvider;\n+import ca.uhn.fhir.rest.server.exceptions.InvalidRequestException;\n import ca.uhn.fhir.rest.server.exceptions.ResourceNotFoundException;\n import lombok.AccessLevel;\n import lombok.Setter;\n+\n+import org.hl7.fhir.convertors.conv30_40.Patient30_40;\n+import org.hl7.fhir.dstu3.model.OperationOutcome;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0NjI4Nw=="}, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjE1MDg2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoxMzo1MFrOGo6FFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDoxOTo0OFrOGpKYNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0Nzc5OQ==", "bodyText": "remove unnecessary spaces", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445547799", "createdAt": "2020-06-25T13:13:50Z", "author": {"login": "corneliouzbett"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,67 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), wrongPatient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() {\n+\t\tPatient newPatient = new Patient();\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(newPatient );\n+\n+\t\torg.hl7.fhir.dstu3.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getId(), equalTo(PATIENT_UUID));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\torg.hl7.fhir.dstu3.model.OperationOutcome patient = resourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());\n+\t}\n+\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.createPatient(patient);\n+\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\n+\t\n+\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxNDgzNw==", "bodyText": "i have removed them", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445814837", "createdAt": "2020-06-25T20:19:48Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,67 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), wrongPatient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() {\n+\t\tPatient newPatient = new Patient();\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(newPatient );\n+\n+\t\torg.hl7.fhir.dstu3.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getId(), equalTo(PATIENT_UUID));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\torg.hl7.fhir.dstu3.model.OperationOutcome patient = resourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());\n+\t}\n+\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.createPatient(patient);\n+\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\n+\t\n+\t", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0Nzc5OQ=="}, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjE2NDM4OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoxNzoxMFrOGo6NxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDoyMDowM1rOGpKYtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDAyMQ==", "bodyText": "import org.hl7.fhir.r4.model.OperationOutcome;", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445550021", "createdAt": "2020-06-25T13:17:10Z", "author": {"login": "corneliouzbett"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -34,7 +37,10 @@\n import ca.uhn.fhir.rest.param.TokenAndListParam;\n import lombok.AccessLevel;\n import lombok.Getter;\n+\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.time.DateUtils;\n+import org.hl7.fhir.dstu3.model.OperationOutcome;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxNDk2NQ==", "bodyText": "its done", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445814965", "createdAt": "2020-06-25T20:20:03Z", "author": {"login": "gitcliff"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -34,7 +37,10 @@\n import ca.uhn.fhir.rest.param.TokenAndListParam;\n import lombok.AccessLevel;\n import lombok.Getter;\n+\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.time.DateUtils;\n+import org.hl7.fhir.dstu3.model.OperationOutcome;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDAyMQ=="}, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjE2NzY2OnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithWrongId.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoxNzo1OFrOGo6Pzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDoyMDoxOFrOGpKZRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDU0Mg==", "bodyText": "Add newline at the of file", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445550542", "createdAt": "2020-06-25T13:17:58Z", "author": {"login": "corneliouzbett"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithWrongId.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-996e-4388-8f6f-34757ae2a3fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxNTExMA==", "bodyText": "i have added it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445815110", "createdAt": "2020-06-25T20:20:18Z", "author": {"login": "gitcliff"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithWrongId.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-996e-4388-8f6f-34757ae2a3fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+\n+}  ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDU0Mg=="}, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDE5ODAzOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithoutId.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1MDozNlrOGphqrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1MDozNlrOGphqrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE5NjM5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446196398", "createdAt": "2020-06-26T13:50:36Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithoutId.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+} \n+\n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDE5OTUyOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1MTowM1rOGphrpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1MTowM1rOGphrpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE5NjY0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            }  \n          \n          \n            \n            }", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446196647", "createdAt": "2020-06-26T13:51:03Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-776e-4388-8f6f-84357ae2a8fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjMwNjg5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PatientFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo0OToxNFrOGp1OMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo0OToxNFrOGp1OMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjc4Nw==", "bodyText": "ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516787", "createdAt": "2020-06-27T11:49:14Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PatientFhirResourceProvider.java", "diffHunk": "@@ -57,6 +61,37 @@ public Patient getPatientById(@IdParam @NotNull IdType id) {\n \t\treturn Patient30_40.convertPatient(patient);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPatient(@ResourceParam Patient patient) {\n+\t\treturn FhirProviderUtils.buildCreate(patientService.create(Patient30_40.convertPatient(patient)));\n+\t} \n+\t\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePatient(@IdParam IdType id, @ResourceParam Patient patient) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tpatient.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(patientService.update(id.getIdPart(),\n+\t\t    Patient30_40.convertPatient(patient)));\n+\t}\n+\t\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic org.hl7.fhir.r4.model.OperationOutcome deletePatient(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());\n+\t\tif (patient == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find patient to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(id.getIdPart());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjMwNzI2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo0OToyN1rOGp1OYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo0OToyN1rOGp1OYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjgzMg==", "bodyText": "ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516832", "createdAt": "2020-06-27T11:49:27Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProvider.java", "diffHunk": "@@ -60,6 +70,37 @@ public Patient getPatientById(@IdParam @NotNull IdType id) {\n \t\treturn patient;\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPatient(@ResourceParam Patient patient) {\n+\t\treturn FhirProviderUtils.buildCreate(patientService.create(patient));\n+\t} \n+\t\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePatient(@IdParam IdType id, @ResourceParam Patient patient) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tpatient.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(patientService.update(id.getIdPart(),patient));\n+\t}\n+\t\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePatient(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());\n+\t\tif (patient == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find patient to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\tOperationOutcome retVal = new OperationOutcome();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjMwNzU2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo0OTo1NFrOGp1OhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo0OTo1NFrOGp1OhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjg2OQ==", "bodyText": "updatePatient_shouldUpdateRequestedPatient", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516869", "createdAt": "2020-06-27T11:49:54Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjMwODEzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo1MDoyN1rOGp1Oxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOToxNDozNVrOGryRwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjkzNA==", "bodyText": "why do we need a new patient here ?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516934", "createdAt": "2020-06-27T11:50:27Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NTY5Nw==", "bodyText": "sure,,thanks", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r448565697", "createdAt": "2020-07-01T19:14:35Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjkzNA=="}, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjMwODQ1OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo1MTowM1rOGp1O7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo1MTowM1rOGp1O7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjk3NA==", "bodyText": "it make more sense if you use the same patient.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516974", "createdAt": "2020-06-27T11:51:03Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjMwODYxOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo1MToxM1rOGp1O_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo1MToxM1rOGp1O_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjk5MA==", "bodyText": "not needed.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516990", "createdAt": "2020-06-27T11:51:13Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), wrongPatient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() {\n+\t\tPatient newPatient = new Patient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjMwODc2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo1MTozM1rOGp1PEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo1MTozM1rOGp1PEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNzAxMA==", "bodyText": "deletePatient_shouldDeleteRequestedPatient", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446517010", "createdAt": "2020-06-27T11:51:33Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), wrongPatient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjMwODk5OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo1MTo0OFrOGp1PLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo1MTo0OFrOGp1PLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNzAzNw==", "bodyText": "ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446517037", "createdAt": "2020-06-27T11:51:48Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), wrongPatient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() {\n+\t\tPatient newPatient = new Patient();\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(newPatient );\n+\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getId(), equalTo(PATIENT_UUID));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\torg.hl7.fhir.r4.model.OperationOutcome patient = resourceProvider.deletePatient(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIwMjgxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PatientFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxODo0MFrOGwoIPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxODo0MFrOGwoIPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MjMwMQ==", "bodyText": "Please rewrite as FhirProviderUtils.buildDelete(Patient30_40.convertPatient(patient))", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453642301", "createdAt": "2020-07-13T13:18:40Z", "author": {"login": "varung-31"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PatientFhirResourceProvider.java", "diffHunk": "@@ -62,6 +72,34 @@ public Patient getPatientById(@IdParam @NotNull IdType id) {\n \t\treturn Patient30_40.convertPatient(patient);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPatient(@ResourceParam Patient patient) {\n+\t\treturn FhirProviderUtils.buildCreate(patientService.create(Patient30_40.convertPatient(patient)));\n+\t} \n+\t\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePatient(@IdParam IdType id, @ResourceParam Patient patient) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tpatient.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(patientService.update(id.getIdPart(),\n+\t\t    Patient30_40.convertPatient(patient)));\n+\t}\n+\t\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePatient(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());\n+\t\tif (patient == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find patient to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\treturn OperationOutcome30_40.convertOperationOutcome(FhirProviderUtils.buildDelete(patient));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIwMzQwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PatientFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxODo0OFrOGwoIlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxODo0OFrOGwoIlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MjM5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn OperationOutcome30_40.convertOperationOutcome(FhirProviderUtils.buildDelete(patient));\n          \n          \n            \n            \t\treturn FhirProviderUtils.buildDelete(Patient30_40.convertPatient(patient));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453642390", "createdAt": "2020-07-13T13:18:48Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PatientFhirResourceProvider.java", "diffHunk": "@@ -62,6 +72,34 @@ public Patient getPatientById(@IdParam @NotNull IdType id) {\n \t\treturn Patient30_40.convertPatient(patient);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPatient(@ResourceParam Patient patient) {\n+\t\treturn FhirProviderUtils.buildCreate(patientService.create(Patient30_40.convertPatient(patient)));\n+\t} \n+\t\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePatient(@IdParam IdType id, @ResourceParam Patient patient) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tpatient.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(patientService.update(id.getIdPart(),\n+\t\t    Patient30_40.convertPatient(patient)));\n+\t}\n+\t\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePatient(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());\n+\t\tif (patient == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find patient to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\treturn OperationOutcome30_40.convertOperationOutcome(FhirProviderUtils.buildDelete(patient));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIwNjEwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxOToyNVrOGwoKLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxOToyNVrOGwoKLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0Mjc5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());\n          \n          \n            \n            \t\tPatient patient = patientService.delete(id.getIdPart());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453642796", "createdAt": "2020-07-13T13:19:25Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProvider.java", "diffHunk": "@@ -60,6 +69,34 @@ public Patient getPatientById(@IdParam @NotNull IdType id) {\n \t\treturn patient;\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPatient(@ResourceParam Patient patient) {\n+\t\treturn FhirProviderUtils.buildCreate(patientService.create(patient));\n+\t} \n+\t\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePatient(@IdParam IdType id, @ResourceParam Patient patient) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tpatient.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(patientService.update(id.getIdPart(),patient));\n+\t}\n+\t\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePatient(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIwNzA3OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxOTozN1rOGwoKuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo1MzoxNlrOGwpk5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MjkzOQ==", "bodyText": "Typo in MissMatch, should be Mismatch instead", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453642939", "createdAt": "2020-07-13T13:19:37Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +566,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = post(\"/Patient\").jsonContent(jsonPatient)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateExistingPatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.update(anyString(), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldErrorForNoId() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldErrorForIdMissMatch() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1MDgyMQ==", "bodyText": "@varung-31 First, thanks for taking the time to do these detailed reviews. Second, you might want to take advantage of GitHub's suggestion feature for some of these changes. E.g.,\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void updatePatient_shouldErrorForIdMissMatch() throws Exception {\n          \n          \n            \n            \tpublic void updatePatient_shouldRaiseExceptionOnIdMismatch() throws Exception {", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453650821", "createdAt": "2020-07-13T13:31:07Z", "author": {"login": "ibacher"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +566,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = post(\"/Patient\").jsonContent(jsonPatient)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateExistingPatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.update(anyString(), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldErrorForNoId() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldErrorForIdMissMatch() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MjkzOQ=="}, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY2NjAyMQ==", "bodyText": "@ibacher  I was actually unaware about how to use it. I should maybe learn it to provide more helpful suggestions", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453666021", "createdAt": "2020-07-13T13:53:16Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +566,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = post(\"/Patient\").jsonContent(jsonPatient)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateExistingPatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.update(anyString(), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldErrorForNoId() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldErrorForIdMissMatch() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MjkzOQ=="}, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIwNzczOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxOTo0N1rOGwoLKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxOTo0N1rOGwoLKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MzA1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n          \n          \n            \n            \t\tassertThat(result, notNullValue());\n          \n          \n            \n            \t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t\tassertThat(result, notNullValue());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453643050", "createdAt": "2020-07-13T13:19:47Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -415,4 +423,70 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIwODgxOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMDowMFrOGwoLyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMDowMFrOGwoLyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MzIwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n          \n          \n            \n            \n          \n          \n            \n            \t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n          \n          \n            \n            \t\tassertThat(result, notNullValue());\n          \n          \n            \n            \t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n          \n          \n            \n            \n          \n          \n            \n            \t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t\tassertThat(result, notNullValue());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453643208", "createdAt": "2020-07-13T13:20:00Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -415,4 +423,70 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIwOTY1OnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMDowOVrOGwoMQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMDowOVrOGwoMQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MzMzMA==", "bodyText": "Please remove extra spaces throughout the PR.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453643330", "createdAt": "2020-07-13T13:20:09Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "diffHunk": "@@ -0,0 +1,16 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-776e-4388-8f6f-84357ae2a8fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+  \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIxMzA2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMDo1MFrOGwoOJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMDo1MFrOGwoOJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MzgxNA==", "bodyText": "We don't need an assertion when we have an expected exception.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tid.setValue(WRONG_PATIENT_UUID);\n          \n          \n            \n            \t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n          \n          \n            \n            \t\tassertThat(patient, nullValue());\n          \n          \n            \n            \t}\n          \n          \n            \n            \t\tid.setValue(WRONG_PATIENT_UUID);\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n          \n          \n            \n            \t}", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453643814", "createdAt": "2020-07-13T13:20:50Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -415,4 +423,70 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssue(), notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIxNDgzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMToxM1rOGwoPKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMToxM1rOGwoPKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NDA3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(patientService.delete(WRONG_PATIENT_UUID)).thenReturn(null);\n          \n          \n            \n            \t\tpatientFhirResourceProvider.deletePatient(new IdType().setValue(WRONG_PATIENT_UUID));\n          \n          \n            \n            \t\twhen(patientService.delete(WRONG_PATIENT_UUID)).thenReturn(null);\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t\tpatientFhirResourceProvider.deletePatient(new IdType().setValue(WRONG_PATIENT_UUID));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453644074", "createdAt": "2020-07-13T13:21:13Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -415,4 +423,70 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssue(), notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundExceptionWhenIdRefersToNonExistantPatient() {\n+\t\twhen(patientService.delete(WRONG_PATIENT_UUID)).thenReturn(null);\n+\t\tpatientFhirResourceProvider.deletePatient(new IdType().setValue(WRONG_PATIENT_UUID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIxNjg2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMTo0M1rOGwoQdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMTo0M1rOGwoQdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NDQwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tMethodOutcome result = patientFhirResourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID),\n          \n          \n            \n            \t\t\t\tPatient30_40.convertPatient(patient));\n          \n          \n            \n            \t\tassertThat(result, notNullValue());\n          \n          \n            \n            \t\tMethodOutcome result = patientFhirResourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID),\n          \n          \n            \n            \t\t\t\tPatient30_40.convertPatient(patient));\n          \n          \n            \n            \t\t\t\t\n          \n          \n            \n            \t\tassertThat(result, notNullValue());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453644404", "createdAt": "2020-07-13T13:21:43Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -415,4 +423,70 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssue(), notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundExceptionWhenIdRefersToNonExistantPatient() {\n+\t\twhen(patientService.delete(WRONG_PATIENT_UUID)).thenReturn(null);\n+\t\tpatientFhirResourceProvider.deletePatient(new IdType().setValue(WRONG_PATIENT_UUID));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateRequestedPatient() {\n+\t\twhen(patientService.update(eq(PATIENT_UUID), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID),\n+\t\t\t\tPatient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIxOTEwOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMjoxNlrOGwoR4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMjoxNlrOGwoR4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NDc3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n          \n          \n            \n            \n          \n          \n            \n            \t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n          \n          \n            \n            \t\t\n          \n          \n            \n                assertThat(result, notNullValue());\n          \n          \n            \n            \twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n          \n          \n            \n            \n          \n          \n            \n            \tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n          \n          \n            \n            \t\t\n          \n          \n            \n            \tassertThat(result, notNullValue());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453644770", "createdAt": "2020-07-13T13:22:16Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -409,11 +416,69 @@ public void getPatientResourceHistory_shouldReturnProvenanceResources() {\n \tpublic void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException() {\n \t\tIdType idType = new IdType();\n \t\tidType.setValue(WRONG_PATIENT_UUID);\n-\t\tassertThat(resourceProvider.getPatientResourceHistory(idType).isEmpty(), is(true));\n+\t\t\n+    assertThat(resourceProvider.getPatientResourceHistory(idType).isEmpty(), is(true));\n \t\tassertThat(resourceProvider.getPatientResourceHistory(idType).size(), equalTo(0));\n \t}\n \t\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateRequestedPatient() {\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\t\n+    assertThat(result, notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIxOTg4OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMjoyOVrOGwoSag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMjoyOVrOGwoSag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NDkwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n          \n          \n            \n            \t\tassertThat(result, notNullValue());\n          \n          \n            \n            \t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t\tassertThat(result, notNullValue());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453644906", "createdAt": "2020-07-13T13:22:29Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -409,11 +416,69 @@ public void getPatientResourceHistory_shouldReturnProvenanceResources() {\n \tpublic void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException() {\n \t\tIdType idType = new IdType();\n \t\tidType.setValue(WRONG_PATIENT_UUID);\n-\t\tassertThat(resourceProvider.getPatientResourceHistory(idType).isEmpty(), is(true));\n+\t\t\n+    assertThat(resourceProvider.getPatientResourceHistory(idType).isEmpty(), is(true));\n \t\tassertThat(resourceProvider.getPatientResourceHistory(idType).size(), equalTo(0));\n \t}\n \t\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateRequestedPatient() {\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\t\n+    assertThat(result, notNullValue());\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tpatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIyMjc5OnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithoutId.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMzoxMlrOGwoUNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMzoxMlrOGwoUNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NTM2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453645366", "createdAt": "2020-07-13T13:23:12Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithoutId.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+  \n+  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIyNTIxOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMzo0N1rOGwoVng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMzo0N1rOGwoVng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NTcyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453645726", "createdAt": "2020-07-13T13:23:47Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+  \n+  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIyNTk1OnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMzo1OFrOGwoWFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMzo1OFrOGwoWFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NTg0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            }  \n          \n          \n            \n            }", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453645846", "createdAt": "2020-07-13T13:23:58Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+  \n+  \n+}  \n+\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIyNzU1OnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyNDoxN1rOGwoW_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyNDoxN1rOGwoW_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NjA3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \n          \n          \n            \n            \n          \n          \n            \n            }  \n          \n          \n            \n            }", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453646078", "createdAt": "2020-07-13T13:24:17Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "diffHunk": "@@ -0,0 +1,16 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-776e-4388-8f6f-84357ae2a8fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+  \n+\n+}  \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODMzMDYyOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyNjo1MVrOGx-CQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyNjo1MVrOGx-CQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0OTc5NQ==", "bodyText": "Please remove this test. The test below achieves exactly the same purpose.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455049795", "createdAt": "2020-07-15T13:26:51Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -412,7 +425,78 @@ public void getPatientResourceHistory_shouldReturnProvenanceResources() {\n \tpublic void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException() {\n \t\tIdType idType = new IdType();\n \t\tidType.setValue(WRONG_PATIENT_UUID);\n+\t\t\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(patient));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssue(), notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\t\n+\t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODM4NzU2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MDowMFrOGx-muQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MDowMFrOGx-muQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA1OTEyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n          \n          \n            \n            \t\tOperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455059129", "createdAt": "2020-07-15T13:40:00Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -416,4 +422,60 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateRequestedPatient() {\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(patient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tpatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODM5NDA5OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MToyM1rOGx-qwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MToyM1rOGx-qwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDE2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tIdType id = new IdType();\n          \n          \n            \n            \t\tid.setValue(WRONG_PATIENT_UUID);\n          \n          \n            \n            \t\torg.hl7.fhir.r4.model.OperationOutcome patient = resourceProvider.deletePatient(id);\n          \n          \n            \n            \t\tassertThat(patient, nullValue());\n          \n          \n            \n            \t\twhen(patientService.delete(WRONG_PATIENT_UUID)).thenReturn(null);\n          \n          \n            \n            \n          \n          \n            \n            \t\tpatientFhirResourceProvider.deletePatient(new IdType().setValue(WRONG_PATIENT_UUID));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455060160", "createdAt": "2020-07-15T13:41:23Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -416,4 +422,60 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateRequestedPatient() {\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(patient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tpatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\torg.hl7.fhir.r4.model.OperationOutcome patient = resourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODM5NjUzOnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MTo1OVrOGx-sRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzozNzo1N1rOGyIwZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDU1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n          \n          \n            \n            \t\tPatient patient = new Patient();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455060551", "createdAt": "2020-07-15T13:41:59Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIyNTQ0NA==", "bodyText": "its done", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455225444", "createdAt": "2020-07-15T17:37:57Z", "author": {"login": "gitcliff"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDU1MQ=="}, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODM5NzE3OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MjowOVrOGx-ssA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MjowOVrOGx-ssA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDY1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n          \n          \n            \n            \t\twhen(patientService.create(any(Patient.class))).thenReturn(patient);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455060656", "createdAt": "2020-07-15T13:42:09Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODM5ODAwOnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MjoyMVrOGx-tRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MjoyMVrOGx-tRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDgwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n          \n          \n            \n            \t\tPatient patient = new Patient();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455060805", "createdAt": "2020-07-15T13:42:21Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = post(\"/Patient\").jsonContent(jsonPatient)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateExistingPatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODM5ODY2OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MjoyOVrOGx-tqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MjoyOVrOGx-tqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDkwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(patientService.update(anyString(), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n          \n          \n            \n            \t\twhen(patientService.update(anyString(), any(Patient.class))).thenReturn(patient);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455060907", "createdAt": "2020-07-15T13:42:29Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = post(\"/Patient\").jsonContent(jsonPatient)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateExistingPatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.update(anyString(), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODQwMDEwOnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0Mjo0N1rOGx-ujg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0Mjo0N1rOGx-ujg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MTEzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n          \n          \n            \n            \t\tPatient patient = new Patient();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455061134", "createdAt": "2020-07-15T13:42:47Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = post(\"/Patient\").jsonContent(jsonPatient)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateExistingPatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.update(anyString(), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldRaiseExceptionForNoId() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldRaiseExceptionOnIdMismatch() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader()\n+\t\t\t\t.getResourceAsStream(JSON_UPDATE_PATIENT_WRONG_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + BAD_PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element which matches the request URL\"));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() throws Exception {\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(PATIENT_UUID);\n+\t\tretVal.getText().setDivAsString(\"Deleted successfully\");\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTQ2MTEyOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithWrongId.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OTowNFrOGyJKFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OTowNFrOGyJKFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMjAyMw==", "bodyText": "Please add a new line", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455232023", "createdAt": "2020-07-15T17:49:04Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithWrongId.json", "diffHunk": "@@ -0,0 +1,13 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-996e-4388-8f6f-34757ae2a3fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e519b0b8c554f0e3197bd7ba3c1f958f13a14931"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTQ2MTUyOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithoutId.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OToxMVrOGyJKWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OToxMVrOGyJKWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMjA4OA==", "bodyText": "Ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455232088", "createdAt": "2020-07-15T17:49:11Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithoutId.json", "diffHunk": "@@ -0,0 +1,12 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+} ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e519b0b8c554f0e3197bd7ba3c1f958f13a14931"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTQ2MjI1OnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OToxOVrOGyJKtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OToxOVrOGyJKtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMjE4MQ==", "bodyText": "Ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455232181", "createdAt": "2020-07-15T17:49:19Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "diffHunk": "@@ -0,0 +1,13 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\" \n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e519b0b8c554f0e3197bd7ba3c1f958f13a14931"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTQ2MzQwOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OTozMFrOGyJLVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OTozMFrOGyJLVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMjM0Mw==", "bodyText": "Ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455232343", "createdAt": "2020-07-15T17:49:30Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "diffHunk": "@@ -0,0 +1,13 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-776e-4388-8f6f-84357ae2a8fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e519b0b8c554f0e3197bd7ba3c1f958f13a14931"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 983, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}