{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4Nzc0NDc3", "number": 230, "reviewThreads": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjozNzo1OVrOEIvaPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0NzowOFrOEOyp7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjAwODMwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjozNzo1OVrOGo4rAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOToxNDozNlrOGpIZrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNDczOQ==", "bodyText": "return FhirProviderUtils.buildDelete(person);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r445524739", "createdAt": "2020-06-25T12:37:59Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProvider.java", "diffHunk": "@@ -57,6 +61,38 @@ public Person getPersonById(@IdParam @NotNull IdType id) {\n \t\treturn Person30_40.convertPerson(person);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPerson(@ResourceParam Person person) {\n+\t\treturn FhirProviderUtils.buildCreate(personService.create(Person30_40.convertPerson(person)));\n+\t} \n+\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePerson(@IdParam IdType id, @ResourceParam Person person) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tperson.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(personService.update(id.getIdPart(),\n+\t\t    Person30_40.convertPerson(person)));\n+\t}\n+\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePerson(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Person person = personService.delete(id.getIdPart());\n+\t\tif (person == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find person to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(id.getIdPart());\n+\t\tretVal.getText().setDivAsString(\"Deleted successfully\");\n+\t\treturn retVal;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a720d690061df051efc6636409419b156895c164"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc4MjQ0NQ==", "bodyText": "I have fixed it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r445782445", "createdAt": "2020-06-25T19:14:36Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProvider.java", "diffHunk": "@@ -57,6 +61,38 @@ public Person getPersonById(@IdParam @NotNull IdType id) {\n \t\treturn Person30_40.convertPerson(person);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPerson(@ResourceParam Person person) {\n+\t\treturn FhirProviderUtils.buildCreate(personService.create(Person30_40.convertPerson(person)));\n+\t} \n+\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePerson(@IdParam IdType id, @ResourceParam Person person) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tperson.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(personService.update(id.getIdPart(),\n+\t\t    Person30_40.convertPerson(person)));\n+\t}\n+\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePerson(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Person person = personService.delete(id.getIdPart());\n+\t\tif (person == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find person to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(id.getIdPart());\n+\t\tretVal.getText().setDivAsString(\"Deleted successfully\");\n+\t\treturn retVal;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNDczOQ=="}, "originalCommit": {"oid": "a720d690061df051efc6636409419b156895c164"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjAxOTEzOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithWrongId.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0MTowMFrOGo4xyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOToxNToxOFrOGpIa-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNjQ3Mw==", "bodyText": "Newline at the end of the file", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r445526473", "createdAt": "2020-06-25T12:41:00Z", "author": {"login": "corneliouzbett"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithWrongId.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"id\": \"0b42f99b-996e-4388-8f6f-34757ae2a3fb\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+\n+}   ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a720d690061df051efc6636409419b156895c164"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc4Mjc3Ng==", "bodyText": "i have added it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r445782776", "createdAt": "2020-06-25T19:15:18Z", "author": {"login": "gitcliff"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithWrongId.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"id\": \"0b42f99b-996e-4388-8f6f-34757ae2a3fb\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+\n+}   ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNjQ3Mw=="}, "originalCommit": {"oid": "a720d690061df051efc6636409419b156895c164"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjA0NzM2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0ODozMVrOGo5DRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOToxNTo0M1rOGpIb1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMDk1MA==", "bodyText": "This the wrong import. It should be;\nimport org.hl7.fhir.r4.model.OperationOutcome;", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r445530950", "createdAt": "2020-06-25T12:48:31Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProvider.java", "diffHunk": "@@ -13,26 +13,36 @@\n \n import java.util.List;\n \n+import ca.uhn.fhir.rest.annotation.Create;\n+import ca.uhn.fhir.rest.annotation.Delete;\n import ca.uhn.fhir.rest.annotation.History;\n import ca.uhn.fhir.rest.annotation.IdParam;\n import ca.uhn.fhir.rest.annotation.OptionalParam;\n import ca.uhn.fhir.rest.annotation.Read;\n+import ca.uhn.fhir.rest.annotation.ResourceParam;\n import ca.uhn.fhir.rest.annotation.Search;\n import ca.uhn.fhir.rest.annotation.Sort;\n+import ca.uhn.fhir.rest.annotation.Update;\n+import ca.uhn.fhir.rest.api.MethodOutcome;\n import ca.uhn.fhir.rest.api.SortSpec;\n import ca.uhn.fhir.rest.api.server.IBundleProvider;\n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.StringAndListParam;\n import ca.uhn.fhir.rest.param.TokenAndListParam;\n import ca.uhn.fhir.rest.server.IResourceProvider;\n+import ca.uhn.fhir.rest.server.exceptions.InvalidRequestException;\n import ca.uhn.fhir.rest.server.exceptions.ResourceNotFoundException;\n import lombok.AccessLevel;\n import lombok.Setter;\n+\n+import org.hl7.fhir.convertors.conv30_40.Person30_40;\n+import org.hl7.fhir.dstu3.model.OperationOutcome;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a720d690061df051efc6636409419b156895c164"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc4Mjk5Ng==", "bodyText": "its done", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r445782996", "createdAt": "2020-06-25T19:15:43Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProvider.java", "diffHunk": "@@ -13,26 +13,36 @@\n \n import java.util.List;\n \n+import ca.uhn.fhir.rest.annotation.Create;\n+import ca.uhn.fhir.rest.annotation.Delete;\n import ca.uhn.fhir.rest.annotation.History;\n import ca.uhn.fhir.rest.annotation.IdParam;\n import ca.uhn.fhir.rest.annotation.OptionalParam;\n import ca.uhn.fhir.rest.annotation.Read;\n+import ca.uhn.fhir.rest.annotation.ResourceParam;\n import ca.uhn.fhir.rest.annotation.Search;\n import ca.uhn.fhir.rest.annotation.Sort;\n+import ca.uhn.fhir.rest.annotation.Update;\n+import ca.uhn.fhir.rest.api.MethodOutcome;\n import ca.uhn.fhir.rest.api.SortSpec;\n import ca.uhn.fhir.rest.api.server.IBundleProvider;\n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.StringAndListParam;\n import ca.uhn.fhir.rest.param.TokenAndListParam;\n import ca.uhn.fhir.rest.server.IResourceProvider;\n+import ca.uhn.fhir.rest.server.exceptions.InvalidRequestException;\n import ca.uhn.fhir.rest.server.exceptions.ResourceNotFoundException;\n import lombok.AccessLevel;\n import lombok.Setter;\n+\n+import org.hl7.fhir.convertors.conv30_40.Person30_40;\n+import org.hl7.fhir.dstu3.model.OperationOutcome;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMDk1MA=="}, "originalCommit": {"oid": "a720d690061df051efc6636409419b156895c164"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjA1MTg2OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0OTo0OVrOGo5GMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOToxNjowOFrOGpIchA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTY5Nw==", "bodyText": "It should be import org.hl7.fhir.r4.model.OperationOutcome; for R4", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r445531697", "createdAt": "2020-06-25T12:49:49Z", "author": {"login": "corneliouzbett"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -34,8 +37,11 @@\n import ca.uhn.fhir.rest.param.TokenAndListParam;\n import lombok.AccessLevel;\n import lombok.Getter;\n+\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.time.DateUtils;\n import org.hamcrest.MatcherAssert;\n+import org.hl7.fhir.dstu3.model.OperationOutcome;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a720d690061df051efc6636409419b156895c164"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc4MzE3Mg==", "bodyText": "i have added it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r445783172", "createdAt": "2020-06-25T19:16:08Z", "author": {"login": "gitcliff"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -34,8 +37,11 @@\n import ca.uhn.fhir.rest.param.TokenAndListParam;\n import lombok.AccessLevel;\n import lombok.Getter;\n+\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.time.DateUtils;\n import org.hamcrest.MatcherAssert;\n+import org.hl7.fhir.dstu3.model.OperationOutcome;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTY5Nw=="}, "originalCommit": {"oid": "a720d690061df051efc6636409419b156895c164"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjI1Njc5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDozMzo0NlrOGp03FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDozMzo0NlrOGp03FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMDg2OA==", "bodyText": "@gitcliff  change the operation outcome to use\nreturn FhirProviderUtils.buildDelete(person);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r446510868", "createdAt": "2020-06-27T10:33:46Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProvider.java", "diffHunk": "@@ -57,6 +61,38 @@ public Person getPersonById(@IdParam @NotNull IdType id) {\n \t\treturn Person30_40.convertPerson(person);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPerson(@ResourceParam Person person) {\n+\t\treturn FhirProviderUtils.buildCreate(personService.create(Person30_40.convertPerson(person)));\n+\t} \n+\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePerson(@IdParam IdType id, @ResourceParam Person person) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tperson.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(personService.update(id.getIdPart(),\n+\t\t    Person30_40.convertPerson(person)));\n+\t}\n+\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic org.hl7.fhir.r4.model.OperationOutcome deletePerson(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Person person = personService.delete(id.getIdPart());\n+\t\tif (person == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find person to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(id.getIdPart());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b600011433186a24887b42ddfb5c788e0a328be"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjI1NzI0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDozNDoxNFrOGp03Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDozNDoxNFrOGp03Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMDkxOA==", "bodyText": "ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r446510918", "createdAt": "2020-06-27T10:34:14Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProvider.java", "diffHunk": "@@ -60,6 +70,36 @@ public Person getPersonById(@IdParam IdType id) {\n \t\treturn person;\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPerson(@ResourceParam Person person) {\n+\t\treturn FhirProviderUtils.buildCreate(fhirPersonService.create(person));\n+\t} \n+\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePerson(@IdParam IdType id, @ResourceParam Person person) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tperson.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(fhirPersonService.update(id.getIdPart(),person));\n+\t}\n+\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePerson(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Person person = fhirPersonService.delete(id.getIdPart());\n+\t\tif (person == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find person to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(id.getIdPart());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b600011433186a24887b42ddfb5c788e0a328be"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjI1OTA2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDozNzowNFrOGp04HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMDozNzowNFrOGp04HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMTEzMg==", "bodyText": "change according to the util method.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r446511132", "createdAt": "2020-06-27T10:37:04Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "diffHunk": "@@ -283,4 +287,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getPersonHistoryById(idType).size(), equalTo(0));\n \t}\n \t\n+\t@Test\n+\tpublic void updatePerson_shouldUpdatePerson() {\n+\t\tPerson newPerson = person;\n+\t\t\n+\t\twhen(fhirPersonService.update(PERSON_UUID, person)).thenReturn(newPerson);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider.updatePerson(new IdType().setValue(PERSON_UUID), person);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPerson));\n+\t}\n+\t\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePerson_shouldThrowInvalidRequestExceptionForWrongPersonUuid() {\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(InvalidRequestException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePersonShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPerson wrongPerson = new Person();\n+\t\t\n+\t\twrongPerson.setId(WRONG_PERSON_UUID);\n+\t\t\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, wrongPerson)).thenThrow(MethodNotAllowedException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), wrongPerson);\n+\t}\n+\t\n+\t@Test\n+\tpublic void deletePerson_shouldDeletePerson() {\n+\t\tPerson newPerson = new Person();\n+\t\t\n+\t\twhen(fhirPersonService.delete(PERSON_UUID)).thenReturn(newPerson);\n+\t\t\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePerson(new IdType().setValue(PERSON_UUID));\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getId(), equalTo(PERSON_UUID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b600011433186a24887b42ddfb5c788e0a328be"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjI5MzM4OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMToyOTowNVrOGp1H8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODozNDo0MFrOGqdP3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNTE4Nw==", "bodyText": "you can use the same person object no need to create a new one", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r446515187", "createdAt": "2020-06-27T11:29:05Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "diffHunk": "@@ -283,4 +287,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getPersonHistoryById(idType).size(), equalTo(0));\n \t}\n \t\n+\t@Test\n+\tpublic void updatePerson_shouldUpdatePerson() {\n+\t\tPerson newPerson = person;\n+\t\t\n+\t\twhen(fhirPersonService.update(PERSON_UUID, person)).thenReturn(newPerson);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider.updatePerson(new IdType().setValue(PERSON_UUID), person);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPerson));\n+\t}\n+\t\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePerson_shouldThrowInvalidRequestExceptionForWrongPersonUuid() {\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(InvalidRequestException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePersonShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPerson wrongPerson = new Person();\n+\t\t\n+\t\twrongPerson.setId(WRONG_PERSON_UUID);\n+\t\t\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, wrongPerson)).thenThrow(MethodNotAllowedException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), wrongPerson);\n+\t}\n+\t\n+\t@Test\n+\tpublic void deletePerson_shouldDeletePerson() {\n+\t\tPerson newPerson = new Person();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b600011433186a24887b42ddfb5c788e0a328be"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE3MjU3Mg==", "bodyText": "thanks ,i have fixed it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r447172572", "createdAt": "2020-06-29T18:34:40Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "diffHunk": "@@ -283,4 +287,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getPersonHistoryById(idType).size(), equalTo(0));\n \t}\n \t\n+\t@Test\n+\tpublic void updatePerson_shouldUpdatePerson() {\n+\t\tPerson newPerson = person;\n+\t\t\n+\t\twhen(fhirPersonService.update(PERSON_UUID, person)).thenReturn(newPerson);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider.updatePerson(new IdType().setValue(PERSON_UUID), person);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPerson));\n+\t}\n+\t\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePerson_shouldThrowInvalidRequestExceptionForWrongPersonUuid() {\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(InvalidRequestException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePersonShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPerson wrongPerson = new Person();\n+\t\t\n+\t\twrongPerson.setId(WRONG_PERSON_UUID);\n+\t\t\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, wrongPerson)).thenThrow(MethodNotAllowedException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), wrongPerson);\n+\t}\n+\t\n+\t@Test\n+\tpublic void deletePerson_shouldDeletePerson() {\n+\t\tPerson newPerson = new Person();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNTE4Nw=="}, "originalCommit": {"oid": "4b600011433186a24887b42ddfb5c788e0a328be"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTYwNjU1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzowMzowOFrOGtLIQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxOToxMDoyMlrOGtj04Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyMTQ0Mg==", "bodyText": "return FhirProviderUtils.buildDelete(Person30_40.convertPerson(person)));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r450021442", "createdAt": "2020-07-06T07:03:08Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProvider.java", "diffHunk": "@@ -62,6 +72,34 @@ public Person getPersonById(@IdParam @NotNull IdType id) {\n \t\treturn Person30_40.convertPerson(person);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPerson(@ResourceParam Person person) {\n+\t\treturn FhirProviderUtils.buildCreate(personService.create(Person30_40.convertPerson(person)));\n+\t} \n+\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePerson(@IdParam IdType id, @ResourceParam Person person) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tperson.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(personService.update(id.getIdPart(), Person30_40.convertPerson(person)));\n+\t}\n+\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePerson(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Person person = personService.delete(id.getIdPart());\n+\t\tif (person == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find person to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\treturn OperationOutcome30_40.convertOperationOutcome(FhirProviderUtils.buildDelete(person));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b705e484ca827917f8ac8bf62720b87f4c94cae"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyNjA4MQ==", "bodyText": "@corneliouzbett i have fixed it ,,,kindly review", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r450426081", "createdAt": "2020-07-06T19:10:22Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProvider.java", "diffHunk": "@@ -62,6 +72,34 @@ public Person getPersonById(@IdParam @NotNull IdType id) {\n \t\treturn Person30_40.convertPerson(person);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPerson(@ResourceParam Person person) {\n+\t\treturn FhirProviderUtils.buildCreate(personService.create(Person30_40.convertPerson(person)));\n+\t} \n+\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePerson(@IdParam IdType id, @ResourceParam Person person) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tperson.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(personService.update(id.getIdPart(), Person30_40.convertPerson(person)));\n+\t}\n+\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePerson(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Person person = personService.delete(id.getIdPart());\n+\t\tif (person == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find person to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\treturn OperationOutcome30_40.convertOperationOutcome(FhirProviderUtils.buildDelete(person));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyMTQ0Mg=="}, "originalCommit": {"oid": "7b705e484ca827917f8ac8bf62720b87f4c94cae"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTYxMDYxOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_create.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzowNDozNVrOGtLKnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzowNDozNVrOGtLKnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyMjA0Nw==", "bodyText": "Add newline", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r450022047", "createdAt": "2020-07-06T07:04:35Z", "author": {"login": "corneliouzbett"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_create.json", "diffHunk": "@@ -0,0 +1,15 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+\n+\n+\n+}   \n+ \n+ \n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b705e484ca827917f8ac8bf62720b87f4c94cae"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTYxNTAzOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_update.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzowNjoxMFrOGtLNOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzowNjoxMFrOGtLNOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyMjcxMw==", "bodyText": "Remove unnecessary extra spaces/blank lines. This applies to other JSON files", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r450022713", "createdAt": "2020-07-06T07:06:10Z", "author": {"login": "corneliouzbett"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_update.json", "diffHunk": "@@ -0,0 +1,16 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"id\": \"8a849d5e-6011-4279-a124-40ada5a687de\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b705e484ca827917f8ac8bf62720b87f4c94cae"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjYwOTg1OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjoxMTozOFrOGtUqYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMjoxMTozOFrOGtUqYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE3NzYzMw==", "bodyText": "Thanks @gitcliff  for this , i know this method does not affect the code however  by following code convention, would suggest something different like Public void updatePerson_shouldReturnErrorForNoId()  you can frase it your way , take a look at that method", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r450177633", "createdAt": "2020-07-06T12:11:38Z", "author": {"login": "sherrif10"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -408,4 +424,89 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\t\t\n+\t\tMockHttpServletResponse response = post(\"/Person\").jsonContent(jsonPerson).accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldUpdateExistingPerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.update(anyString(), any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForNoId() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b705e484ca827917f8ac8bf62720b87f4c94cae"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTIxODk4OnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_update.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMjoxNFrOGwoR0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMjoxNFrOGwoR0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NDc1NQ==", "bodyText": "Please remove extra spaces throughout the PR.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r453644755", "createdAt": "2020-07-13T13:22:14Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_update.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"id\": \"8a849d5e-6011-4279-a124-40ada5a687de\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+\n+}  \n+\n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acdae666b91a64935791719f76321e195907ed61"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODIyNTY0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzowMjo0N1rOGx9CBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzowMjo0N1rOGx9CBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzMzM0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Person person = fhirPersonService.delete(id.getIdPart());\n          \n          \n            \n            \t\tPerson person = fhirPersonService.delete(id.getIdPart());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455033348", "createdAt": "2020-07-15T13:02:47Z", "author": {"login": "varung-31"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProvider.java", "diffHunk": "@@ -60,6 +69,33 @@ public Person getPersonById(@IdParam IdType id) {\n \t\treturn person;\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPerson(@ResourceParam Person person) {\n+\t\treturn FhirProviderUtils.buildCreate(fhirPersonService.create(person));\n+\t} \n+\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePerson(@IdParam IdType id, @ResourceParam Person person) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tperson.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(fhirPersonService.update(id.getIdPart(), person));\n+\t}\n+\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePerson(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Person person = fhirPersonService.delete(id.getIdPart());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODI1MDg2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzowOTowOFrOGx9Rpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzowOTowOFrOGx9Rpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzNzM1MA==", "bodyText": "We can remove this particular test because the test below is exactly the same.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455037350", "createdAt": "2020-07-15T13:09:08Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProviderTest.java", "diffHunk": "@@ -328,4 +337,71 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getPersonHistoryById(idType).size(), equalTo(0));\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreateNewPerson() {\n+\t\twhen(fhirPersonService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMethodOutcome result = resourceProvider.createPerson(Person30_40.convertPerson(person));\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(person));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePerson_shouldDeletePerson() {\n+\n+\t\twhen(fhirPersonService.delete(PERSON_UUID)).thenReturn(person);\n+\n+\t\tOperationOutcome result = resourceProvider.deletePerson(new IdType().setValue(PERSON_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssue(), notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePerson_shouldThrowResourceNotFoundException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODI1NTk2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxMDoxMFrOGx9UiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDozODozNVrOGyBStQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzODA4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void updatePersonShouldThrowMethodNotAllowedIfDoesNotExist() {\n          \n          \n            \n            \tpublic void updatePerson_shouldThrowMethodNotAllowedIfDoesNotExist() {", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455038089", "createdAt": "2020-07-15T13:10:10Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "diffHunk": "@@ -328,4 +333,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getPersonHistoryById(idType).size(), equalTo(0));\n \t}\n \t\n+\t@Test\n+\tpublic void updatePerson_shouldUpdatePerson() {\n+\t\t\n+\t\twhen(fhirPersonService.update(PERSON_UUID, person)).thenReturn(person);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider.updatePerson(new IdType().setValue(PERSON_UUID), person);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(person));\n+\t}\n+\t\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePerson_shouldThrowInvalidRequestExceptionForWrongPersonUuid() {\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(InvalidRequestException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePersonShouldThrowMethodNotAllowedIfDoesNotExist() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEwMzE1Nw==", "bodyText": "sure,fixed it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455103157", "createdAt": "2020-07-15T14:38:35Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "diffHunk": "@@ -328,4 +333,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getPersonHistoryById(idType).size(), equalTo(0));\n \t}\n \t\n+\t@Test\n+\tpublic void updatePerson_shouldUpdatePerson() {\n+\t\t\n+\t\twhen(fhirPersonService.update(PERSON_UUID, person)).thenReturn(person);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider.updatePerson(new IdType().setValue(PERSON_UUID), person);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(person));\n+\t}\n+\t\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePerson_shouldThrowInvalidRequestExceptionForWrongPersonUuid() {\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(InvalidRequestException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePersonShouldThrowMethodNotAllowedIfDoesNotExist() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzODA4OQ=="}, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODI1OTkzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxMTowOVrOGx9W6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxMTowOVrOGx9W6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzODY5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePerson(new IdType().setValue(PERSON_UUID));\n          \n          \n            \n            \t\tOperationOutcome result = resourceProvider.deletePerson(new IdType().setValue(PERSON_UUID));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455038696", "createdAt": "2020-07-15T13:11:09Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "diffHunk": "@@ -328,4 +333,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getPersonHistoryById(idType).size(), equalTo(0));\n \t}\n \t\n+\t@Test\n+\tpublic void updatePerson_shouldUpdatePerson() {\n+\t\t\n+\t\twhen(fhirPersonService.update(PERSON_UUID, person)).thenReturn(person);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider.updatePerson(new IdType().setValue(PERSON_UUID), person);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(person));\n+\t}\n+\t\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePerson_shouldThrowInvalidRequestExceptionForWrongPersonUuid() {\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(InvalidRequestException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePersonShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\t\n+\t\tperson.setId(WRONG_PERSON_UUID);\n+\t\t\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(MethodNotAllowedException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test\n+\tpublic void deletePerson_shouldDeletePerson() {\n+\n+\t\twhen(fhirPersonService.delete(PERSON_UUID)).thenReturn(person);\n+\t\t\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePerson(new IdType().setValue(PERSON_UUID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODI4MzU5OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxNjozN1rOGx9llA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDozNzoyNVrOGyBPeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0MjQ1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tIdType id = new IdType();\n          \n          \n            \n            \t\tid.setValue(WRONG_PERSON_UUID);\n          \n          \n            \n            \t\torg.hl7.fhir.r4.model.OperationOutcome person = resourceProvider.deletePerson(id);\n          \n          \n            \n            \t\tassertThat(person, nullValue());\n          \n          \n            \n            \t\twhen(fhirPersonService.delete(WRONG_PERSON_UUID)).thenReturn(null);\n          \n          \n            \n            \t\tresourceProvider.deletePerson(new IdType().setValue(WRONG_PERSON_UUID));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455042452", "createdAt": "2020-07-15T13:16:37Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "diffHunk": "@@ -328,4 +333,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getPersonHistoryById(idType).size(), equalTo(0));\n \t}\n \t\n+\t@Test\n+\tpublic void updatePerson_shouldUpdatePerson() {\n+\t\t\n+\t\twhen(fhirPersonService.update(PERSON_UUID, person)).thenReturn(person);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider.updatePerson(new IdType().setValue(PERSON_UUID), person);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(person));\n+\t}\n+\t\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePerson_shouldThrowInvalidRequestExceptionForWrongPersonUuid() {\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(InvalidRequestException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePersonShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\t\n+\t\tperson.setId(WRONG_PERSON_UUID);\n+\t\t\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(MethodNotAllowedException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test\n+\tpublic void deletePerson_shouldDeletePerson() {\n+\n+\t\twhen(fhirPersonService.delete(PERSON_UUID)).thenReturn(person);\n+\t\t\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePerson(new IdType().setValue(PERSON_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\t\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePerson_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PERSON_UUID);\n+\t\torg.hl7.fhir.r4.model.OperationOutcome person = resourceProvider.deletePerson(id);\n+\t\tassertThat(person, nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEwMjMyOQ==", "bodyText": "fixed it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455102329", "createdAt": "2020-07-15T14:37:25Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderTest.java", "diffHunk": "@@ -328,4 +333,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getPersonHistoryById(idType).size(), equalTo(0));\n \t}\n \t\n+\t@Test\n+\tpublic void updatePerson_shouldUpdatePerson() {\n+\t\t\n+\t\twhen(fhirPersonService.update(PERSON_UUID, person)).thenReturn(person);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider.updatePerson(new IdType().setValue(PERSON_UUID), person);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(person));\n+\t}\n+\t\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePerson_shouldThrowInvalidRequestExceptionForWrongPersonUuid() {\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(InvalidRequestException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePersonShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\t\n+\t\tperson.setId(WRONG_PERSON_UUID);\n+\t\t\n+\t\twhen(fhirPersonService.update(WRONG_PERSON_UUID, person)).thenThrow(MethodNotAllowedException.class);\n+\t\t\n+\t\tresourceProvider.updatePerson(new IdType().setValue(WRONG_PERSON_UUID), person);\n+\t}\n+\t\n+\t@Test\n+\tpublic void deletePerson_shouldDeletePerson() {\n+\n+\t\twhen(fhirPersonService.delete(PERSON_UUID)).thenReturn(person);\n+\t\t\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePerson(new IdType().setValue(PERSON_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\t\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePerson_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PERSON_UUID);\n+\t\torg.hl7.fhir.r4.model.OperationOutcome person = resourceProvider.deletePerson(id);\n+\t\tassertThat(person, nullValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0MjQ1Mg=="}, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODI4Nzc2OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxNzozOFrOGx9oRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxNzozOFrOGx9oRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0MzE0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void updatePerson_shouldErrorForNoId() throws Exception {\n          \n          \n            \n            \tpublic void updatePerson_shouldThrowErrorForNoId() throws Exception {", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455043143", "createdAt": "2020-07-15T13:17:38Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -441,4 +457,89 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\t\t\n+\t\tMockHttpServletResponse response = post(\"/Person\").jsonContent(jsonPerson).accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldUpdateExistingPerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.update(anyString(), any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForNoId() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODI5MTI2OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxODoyMFrOGx9qUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxODoyMFrOGx9qUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0MzY2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void updatePerson_shouldErrorForIdMissMatch() throws Exception {\n          \n          \n            \n            \tpublic void updatePerson_shouldThrowErrorForIdMisMatch() throws Exception {", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455043666", "createdAt": "2020-07-15T13:18:20Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r3/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -441,4 +457,89 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\t\t\n+\t\tMockHttpServletResponse response = post(\"/Person\").jsonContent(jsonPerson).accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldUpdateExistingPerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.update(anyString(), any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForNoId() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForIdMissMatch() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODI5NTUzOnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxOToxN1rOGx9s_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxOToxN1rOGx9s_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NDM1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n          \n          \n            \n            \t\tPerson person = new Person();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455044350", "createdAt": "2020-07-15T13:19:17Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -441,4 +457,88 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODI5NjQ2OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxOToyNVrOGx9tgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxOToyNVrOGx9tgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NDQ4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n          \n          \n            \n            \t\twhen(personService.create(any(Person.class))).thenReturn(person);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455044480", "createdAt": "2020-07-15T13:19:25Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -441,4 +457,88 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODI5Nzc1OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxOTozOVrOGx9uQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxOTozOVrOGx9uQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NDY3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n          \n          \n            \n            \t\tPerson person = new Person();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455044672", "createdAt": "2020-07-15T13:19:39Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -441,4 +457,88 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = post(\"/Person\").jsonContent(jsonPerson).accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldUpdateExistingPerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODI5ODUwOnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxOTo0N1rOGx9urg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoxOTo0N1rOGx9urg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NDc4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(personService.update(anyString(), any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n          \n          \n            \n            \t\twhen(personService.update(anyString(), any(Person.class))).thenReturn(person);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455044782", "createdAt": "2020-07-15T13:19:47Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -441,4 +457,88 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = post(\"/Person\").jsonContent(jsonPerson).accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldUpdateExistingPerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.update(anyString(), any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODMwMDQzOnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMDoxMFrOGx9v1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMDoxMFrOGx9v1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NTA3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void updatePerson_shouldErrorForNoId() throws Exception {\n          \n          \n            \n            \tpublic void updatePerson_shouldThrowErrorForNoId() throws Exception {", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455045076", "createdAt": "2020-07-15T13:20:10Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -441,4 +457,88 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = post(\"/Person\").jsonContent(jsonPerson).accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldUpdateExistingPerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.update(anyString(), any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForNoId() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODMwMjM2OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMDoyOVrOGx9w4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMDoyOVrOGx9w4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NTM0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void updatePerson_shouldErrorForIdMissMatch() throws Exception {\n          \n          \n            \n            \tpublic void updatePerson_shouldThrowErrorForIdMisMatch() throws Exception {", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455045347", "createdAt": "2020-07-15T13:20:29Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -441,4 +457,88 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = post(\"/Person\").jsonContent(jsonPerson).accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldUpdateExistingPerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.update(anyString(), any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForNoId() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForIdMissMatch() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODMwMzIxOnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMDo0MFrOGx9xag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDozNzoxMlrOGyBOzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NTQ4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n          \n          \n            \n            \t\tPerson person = new Person();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455045482", "createdAt": "2020-07-15T13:20:40Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -441,4 +457,88 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = post(\"/Person\").jsonContent(jsonPerson).accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldUpdateExistingPerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.update(anyString(), any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForNoId() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForIdMissMatch() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_WRONG_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + WRONG_PERSON_UUID).jsonContent(jsonPerson)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element which matches the request URL\"));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePerson_shouldDeletePerson() throws Exception {\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(PERSON_UUID);\n+\t\tretVal.getText().setDivAsString(\"Deleted successfully\");\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEwMjE1Nw==", "bodyText": "fixed it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455102157", "createdAt": "2020-07-15T14:37:12Z", "author": {"login": "gitcliff"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -441,4 +457,88 @@ private MockHttpServletResponse getPersonHistoryByIdRequest() throws IOException\n \t\treturn get(\"/Person/\" + PERSON_UUID + \"/_history\").accept(FhirMediaTypes.JSON).go();\n \t}\n \t\n+\t@Test\n+\tpublic void createPerson_shouldCreatePerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.create(any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = post(\"/Person\").jsonContent(jsonPerson).accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldUpdateExistingPerson() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();\n+\t\tperson.setId(PERSON_UUID);\n+\n+\t\twhen(personService.update(anyString(), any(org.hl7.fhir.r4.model.Person.class))).thenReturn(person);\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForNoId() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + PERSON_UUID).jsonContent(jsonPerson).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePerson_shouldErrorForIdMissMatch() throws Exception {\n+\t\tString jsonPerson;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PERSON_WRONG_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPerson = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Person/\" + WRONG_PERSON_UUID).jsonContent(jsonPerson)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element which matches the request URL\"));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePerson_shouldDeletePerson() throws Exception {\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(PERSON_UUID);\n+\t\tretVal.getText().setDivAsString(\"Deleted successfully\");\n+\n+\t\torg.hl7.fhir.r4.model.Person person = new org.hl7.fhir.r4.model.Person();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NTQ4Mg=="}, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODMwOTEyOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithWrongId.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMjowMFrOGx91AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMjowMFrOGx91AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NjQwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            } \n          \n          \n            \n             \n          \n          \n            \n            }", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455046400", "createdAt": "2020-07-15T13:22:00Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithWrongId.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"id\": \"0b42f99b-996e-4388-8f6f-34757ae2a3fb\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+} \n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODMxMTI0OnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithoutId.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMjoyNlrOGx92NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMjoyNlrOGx92NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0NjcwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            }\n          \n          \n            \n               \n          \n          \n            \n            }", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455046709", "createdAt": "2020-07-15T13:22:26Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithoutId.json", "diffHunk": "@@ -0,0 +1,10 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+}\n+   ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODMxMjkwOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_create.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMjo0OVrOGx93Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyMjo0OVrOGx93Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0Njk3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            }   \n          \n          \n            \n             \n          \n          \n            \n            }", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455046979", "createdAt": "2020-07-15T13:22:49Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_create.json", "diffHunk": "@@ -0,0 +1,10 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+}   \n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3ffaa6f7722dda94d061c582bcbac37297f1c1"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTQ1MzA0OnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithWrongId.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0Njo0MlrOGyJFIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0Njo0MlrOGyJFIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMDc1Mg==", "bodyText": "It's always good to end a file with a new line. Please add a new line here.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455230752", "createdAt": "2020-07-15T17:46:42Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithWrongId.json", "diffHunk": "@@ -0,0 +1,10 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"id\": \"0b42f99b-996e-4388-8f6f-34757ae2a3fb\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b384d3732bef71c66c07e877a570e74237e789"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTQ1MzQxOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithoutId.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0Njo1MFrOGyJFWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0Njo1MFrOGyJFWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMDgwOQ==", "bodyText": "Ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455230809", "createdAt": "2020-07-15T17:46:50Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_UpdateWithoutId.json", "diffHunk": "@@ -0,0 +1,9 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b384d3732bef71c66c07e877a570e74237e789"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTQ1Mzg2OnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_create.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0Njo1OVrOGyJFow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0Njo1OVrOGyJFow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMDg4Mw==", "bodyText": "Ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455230883", "createdAt": "2020-07-15T17:46:59Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_create.json", "diffHunk": "@@ -0,0 +1,9 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+}   ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b384d3732bef71c66c07e877a570e74237e789"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTQ1NDUzOnYy", "diffSide": "RIGHT", "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_update.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0NzowOFrOGyJGCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0NzowOFrOGyJGCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMDk4NA==", "bodyText": "Ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/230#discussion_r455230984", "createdAt": "2020-07-15T17:47:08Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PersonWebTest_update.json", "diffHunk": "@@ -0,0 +1,10 @@\n+{\n+  \"resourceType\": \"Person\",\n+  \"id\": \"8a849d5e-6011-4279-a124-40ada5a687de\",\n+  \"name\": \"adam\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b384d3732bef71c66c07e877a570e74237e789"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 995, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}