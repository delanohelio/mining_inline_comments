{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxOTYxNzMz", "number": 261, "title": "Add null checks to translators", "bodyText": "Description of what I changed\n\n\nThere were missing null checks at various points in the translators. This PR deals with adding them to avoid NullPointerExceptions.\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-07-18T14:31:26Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261", "merged": true, "mergeCommit": {"oid": "f8a0394d1f570e66553284bfd097809d680a7b4a"}, "closed": true, "closedAt": "2020-07-21T13:26:26Z", "author": {"login": "varung-31"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2x-U0gFqTQ1MTYxNzkyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc22-urgH2gAyNDUxOTYxNzMzOmQ0NmE5OTQ4ODgzZWUwMDU2ZTNjMTAzODgyYmFjN2NjZWNlZjY0MTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjE3OTI0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#pullrequestreview-451617924", "createdAt": "2020-07-20T13:43:37Z", "commit": {"oid": "6935bd650f3214698eacbcaa432dcd17d01cfcfb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMzo0MzozN1rOG0NRRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMzo1MDoxMFrOG0NnrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM5NjU1MA==", "bodyText": "I would rather assume \"ACTIVE\"", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457396550", "createdAt": "2020-07-20T13:43:37Z", "author": {"login": "ibacher"}, "path": "api-2.2/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ConditionClinicalStatusTranslatorImpl_2_2.java", "diffHunk": "@@ -49,6 +49,10 @@ public ConditionClinicalStatus toOpenmrsType(CodeableConcept codeableConcept) {\n \t}\n \t\n \tprivate ConditionClinicalStatus getClinicalStatus(Coding coding) {\n+\t\tif (coding.getCode() == null) {\n+\t\t\treturn ConditionClinicalStatus.INACTIVE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935bd650f3214698eacbcaa432dcd17d01cfcfb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM5ODE0OA==", "bodyText": "Could we instead make use of the Apache Commons Collections version of this class and method?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457398148", "createdAt": "2020-07-20T13:45:24Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -30,6 +30,7 @@\n import org.openmrs.module.fhir2.api.translators.ProvenanceTranslator;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n+import org.springframework.util.CollectionUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935bd650f3214698eacbcaa432dcd17d01cfcfb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM5OTE4NQ==", "bodyText": "It seems kind of silly to import StringUtils just to get a reference to the empty string.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tString display = (conceptName == null || conceptName.getName() == null) ? StringUtils.EMPTY : conceptName.getName();\n          \n          \n            \n            \t\tString display = (conceptName == null || conceptName.getName() == null) ? \"\" : conceptName.getName();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457399185", "createdAt": "2020-07-20T13:46:40Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ConceptTranslatorImpl.java", "diffHunk": "@@ -103,11 +106,11 @@ private void addConceptCoding(Coding coding, String system, String code, Concept\n \t\tcoding.setSystem(system);\n \t\tcoding.setCode(code);\n \t\tConceptName conceptName = concept.getName(userDefaultProperties.getDefaultLocale());\n-\t\tif (conceptName.getName() == null) {\n+\t\tif (conceptName == null || conceptName.getName() == null) {\n \t\t\tconceptName = concept.getName();\n \t\t}\n \t\t\n-\t\tString display = conceptName.getName() == null ? \"\" : conceptName.getName();\n+\t\tString display = (conceptName == null || conceptName.getName() == null) ? StringUtils.EMPTY : conceptName.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935bd650f3214698eacbcaa432dcd17d01cfcfb"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMTUyNQ==", "bodyText": "While we're adding error checking code:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tposition.setLatitude(Double.parseDouble(openmrsLocation.getLatitude()));\n          \n          \n            \n            \t\t\t\tdouble latitude = NumberUtils.toDouble(openmrsLocation.getLatitiude, -1.0d);\n          \n          \n            \n            \t\t\t\tif (latitude >= 0.0d) {\n          \n          \n            \n            \t\t\t\t\tposition.setLatitude(latitude);\n          \n          \n            \n            \t\t\t\t}", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457401525", "createdAt": "2020-07-20T13:49:27Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java", "diffHunk": "@@ -65,10 +66,10 @@ public Location toFhirResource(org.openmrs.Location openmrsLocation) {\n \t\t\tfhirLocation.setDescription(openmrsLocation.getDescription());\n \t\t\tfhirLocation.setAddress(locationAddressTranslator.toFhirResource(openmrsLocation));\n \t\t\t\n-\t\t\tif (openmrsLocation.getLatitude() != null) {\n+\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLatitude())) {\n \t\t\t\tposition.setLatitude(Double.parseDouble(openmrsLocation.getLatitude()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935bd650f3214698eacbcaa432dcd17d01cfcfb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMTgzMQ==", "bodyText": "As above...", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457401831", "createdAt": "2020-07-20T13:49:42Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java", "diffHunk": "@@ -65,10 +66,10 @@ public Location toFhirResource(org.openmrs.Location openmrsLocation) {\n \t\t\tfhirLocation.setDescription(openmrsLocation.getDescription());\n \t\t\tfhirLocation.setAddress(locationAddressTranslator.toFhirResource(openmrsLocation));\n \t\t\t\n-\t\t\tif (openmrsLocation.getLatitude() != null) {\n+\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLatitude())) {\n \t\t\t\tposition.setLatitude(Double.parseDouble(openmrsLocation.getLatitude()));\n \t\t\t}\n-\t\t\tif (openmrsLocation.getLongitude() != null) {\n+\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLongitude())) {\n \t\t\t\tposition.setLongitude(Double.parseDouble(openmrsLocation.getLongitude()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935bd650f3214698eacbcaa432dcd17d01cfcfb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMjI4NQ==", "bodyText": "Note that this also eliminates the need for the isNotEmpty() check as a null or empty value will result in the default value.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457402285", "createdAt": "2020-07-20T13:50:10Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java", "diffHunk": "@@ -65,10 +66,10 @@ public Location toFhirResource(org.openmrs.Location openmrsLocation) {\n \t\t\tfhirLocation.setDescription(openmrsLocation.getDescription());\n \t\t\tfhirLocation.setAddress(locationAddressTranslator.toFhirResource(openmrsLocation));\n \t\t\t\n-\t\t\tif (openmrsLocation.getLatitude() != null) {\n+\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLatitude())) {\n \t\t\t\tposition.setLatitude(Double.parseDouble(openmrsLocation.getLatitude()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMTUyNQ=="}, "originalCommit": {"oid": "6935bd650f3214698eacbcaa432dcd17d01cfcfb"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ece796d9c0c9a576682d41fb0a522781db666886", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/ece796d9c0c9a576682d41fb0a522781db666886", "committedDate": "2020-07-20T14:20:35Z", "message": "Add null checks to translators"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6935bd650f3214698eacbcaa432dcd17d01cfcfb", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/6935bd650f3214698eacbcaa432dcd17d01cfcfb", "committedDate": "2020-07-18T14:27:32Z", "message": "Add null checks to translators"}, "afterCommit": {"oid": "ece796d9c0c9a576682d41fb0a522781db666886", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/ece796d9c0c9a576682d41fb0a522781db666886", "committedDate": "2020-07-20T14:20:35Z", "message": "Add null checks to translators"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxOTA0MDIy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#pullrequestreview-451904022", "createdAt": "2020-07-20T19:40:25Z", "commit": {"oid": "ece796d9c0c9a576682d41fb0a522781db666886"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTo0MDoyNVrOG0cl7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTo0MDoyNVrOG0cl7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0NzU5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\n          \n          \n            \n            \t\t\t\tif (reaction.getReaction() != null) {\n          \n          \n            \n            \t\t\t\t\tmanifestations.add(\n          \n          \n            \n            \t\t\t\t\t    conceptTranslator.toFhirResource(reaction.getReaction()).setText(reaction.getReactionNonCoded()));\n          \n          \n            \n            \t\t\t\t}\n          \n          \n            \n            \t\t\t\t\n          \n          \n            \n            \t\t\t\tif (reaction.getReaction() != null) {\n          \n          \n            \n            \t\t\t\t\tmanifestations.add(\n          \n          \n            \n            \t\t\t\t\t    conceptTranslator.toFhirResource(reaction.getReaction()).setText(reaction.getReactionNonCoded()));\n          \n          \n            \n            \t\t\t\t}", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457647599", "createdAt": "2020-07-20T19:40:25Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceReactionComponentTranslatorImpl.java", "diffHunk": "@@ -83,9 +83,16 @@ private CodeableConcept getAllergySubstance(Allergen allergen) {\n \t\n \tprivate List<CodeableConcept> getManifestation(List<AllergyReaction> reactions) {\n \t\tList<CodeableConcept> manifestations = new ArrayList<>();\n-\t\tfor (AllergyReaction reaction : reactions) {\n-\t\t\tmanifestations\n-\t\t\t        .add(conceptTranslator.toFhirResource(reaction.getReaction()).setText(reaction.getReactionNonCoded()));\n+\t\t\n+\t\tif (reactions != null) {\n+\t\t\tfor (AllergyReaction reaction : reactions) {\n+\t\t\t\t\n+\t\t\t\tif (reaction.getReaction() != null) {\n+\t\t\t\t\tmanifestations.add(\n+\t\t\t\t\t    conceptTranslator.toFhirResource(reaction.getReaction()).setText(reaction.getReactionNonCoded()));\n+\t\t\t\t}\n+\t\t\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ece796d9c0c9a576682d41fb0a522781db666886"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d46a9948883ee0056e3c103882bac7ccecef6415", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d46a9948883ee0056e3c103882bac7ccecef6415", "committedDate": "2020-07-20T19:41:23Z", "message": "Update api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceReactionComponentTranslatorImpl.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4164, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}