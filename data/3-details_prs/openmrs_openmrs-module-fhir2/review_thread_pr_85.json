{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjE4Nzgw", "number": 85, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMDozNjoyNFrODiGsIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTo1MDowNlrODjlunQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDg3Nzc5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirPersonServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQyMDozNjoyNFrOFtMyqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMDoxNDo1N1rOFtbS-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzOTgxNw==", "bodyText": "@CaptainDaVinci I think we'll have to write something like what's written in FhirObservationDaoImpl @ibacher Please guide\n@Override\n\tpublic Collection<Obs> searchForObservations(ReferenceParam encounterReference, ReferenceParam patientReference,\n\t        TokenAndListParam code, SortSpec sort) {\n\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(Obs.class);\n\t\t\n\t\thandleEncounterReference(\"e\", encounterReference).ifPresent(c -> criteria.createAlias(\"encounter\", \"e\").add(c));\n\t\thandlePatientReference(criteria, patientReference);\n\t\thandleCodedConcept(criteria, code);\n\t\thandleSort(criteria, sort);\n\t\t\n\t\treturn criteria.list();\n\t}", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r382939817", "createdAt": "2020-02-22T20:36:24Z", "author": {"login": "VaishSiddharth"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirPersonServiceImpl.java", "diffHunk": "@@ -68,4 +72,13 @@ public Person getPersonByUuid(String uuid) {\n \t\treturn fhirPersonDao.findPersonsByGender(gender).stream().map(personTranslator::toFhirResource)\n \t\t        .collect(Collectors.toList());\n \t}\n+\t\n+\t@Override\n+\tpublic Collection<Person> searchForPeople(StringOrListParam name, TokenOrListParam identifier, TokenOrListParam gender,\n+\t        DateRangeParam birthDate, StringOrListParam city, StringOrListParam state, StringOrListParam postalCode,\n+\t        SortSpec sort) {\n+\t\t// TODO Auto-generated method stub", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6d78bd65b1d2cfab46379b2754b2a79802936a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE3NzQ2NA==", "bodyText": "Yes, I'm working on it. I'm using PatientDaoImpl as a reference.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r383177464", "createdAt": "2020-02-24T10:14:57Z", "author": {"login": "CaptainDaVinci"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirPersonServiceImpl.java", "diffHunk": "@@ -68,4 +72,13 @@ public Person getPersonByUuid(String uuid) {\n \t\treturn fhirPersonDao.findPersonsByGender(gender).stream().map(personTranslator::toFhirResource)\n \t\t        .collect(Collectors.toList());\n \t}\n+\t\n+\t@Override\n+\tpublic Collection<Person> searchForPeople(StringOrListParam name, TokenOrListParam identifier, TokenOrListParam gender,\n+\t        DateRangeParam birthDate, StringOrListParam city, StringOrListParam state, StringOrListParam postalCode,\n+\t        SortSpec sort) {\n+\t\t// TODO Auto-generated method stub", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzOTgxNw=="}, "originalCommit": {"oid": "7a6d78bd65b1d2cfab46379b2754b2a79802936a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzIwMTYzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzoyOTo1NFrOFtgnDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNDo0MDowNFrOFti7tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2NDUyNA==", "bodyText": "@CaptainDaVinci I would suggest you to write test for this as I am facing issues while implementing this for Encounters Don't know why but my tests are failing", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r383264524", "createdAt": "2020-02-24T13:29:54Z", "author": {"login": "VaishSiddharth"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "diffHunk": "@@ -74,4 +87,61 @@ public Person getPersonByUuid(String uuid) {\n \t\t        .createAlias(\"attributeType\", \"pat\").add(eq(\"pat.uuid\", personAttributeTypeUuid)).add(eq(\"voided\", false))\n \t\t        .list();\n \t}\n+\t\n+\t@Override\n+\tpublic Collection<Person> searchForPeople(StringOrListParam name, TokenOrListParam identifier, TokenOrListParam gender,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba294ba8e29673f591e1f059e4329ee48a48a4ca"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMwMjU4Mw==", "bodyText": "Thanks! I'll update the tests in sometime.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r383302583", "createdAt": "2020-02-24T14:40:04Z", "author": {"login": "CaptainDaVinci"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "diffHunk": "@@ -74,4 +87,61 @@ public Person getPersonByUuid(String uuid) {\n \t\t        .createAlias(\"attributeType\", \"pat\").add(eq(\"pat.uuid\", personAttributeTypeUuid)).add(eq(\"voided\", false))\n \t\t        .list();\n \t}\n+\t\n+\t@Override\n+\tpublic Collection<Person> searchForPeople(StringOrListParam name, TokenOrListParam identifier, TokenOrListParam gender,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2NDUyNA=="}, "originalCommit": {"oid": "ba294ba8e29673f591e1f059e4329ee48a48a4ca"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzUxNzkyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirPersonService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNDo1NzozNFrOFtjlxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzowODo0MFrOFtoncg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMxMzM0OA==", "bodyText": "We actually don't want to support \"identifier\" for Person, mainly because we are not currently mapping the identifier field for Person.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r383313348", "createdAt": "2020-02-24T14:57:34Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirPersonService.java", "diffHunk": "@@ -25,4 +29,9 @@\n \tCollection<Person> findPersonsByGender(String gender);\n \t\n \tCollection<Person> findPersonsByBirthDate(Date birthDate);\n+\t\n+\tCollection<Person> searchForPeople(StringOrListParam name, TokenOrListParam identifier, TokenOrListParam gender,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85dbc2fd3d8c7ae7f19bb142cb76fdcaca98fe51"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5MzU3OA==", "bodyText": "Will it be a good idea to return a \"Not Implemented\" response (not sure how) to a query on identifier field? In case we plan to map the field in future.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r383393578", "createdAt": "2020-02-24T17:04:41Z", "author": {"login": "CaptainDaVinci"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirPersonService.java", "diffHunk": "@@ -25,4 +29,9 @@\n \tCollection<Person> findPersonsByGender(String gender);\n \t\n \tCollection<Person> findPersonsByBirthDate(Date birthDate);\n+\t\n+\tCollection<Person> searchForPeople(StringOrListParam name, TokenOrListParam identifier, TokenOrListParam gender,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMxMzM0OA=="}, "originalCommit": {"oid": "85dbc2fd3d8c7ae7f19bb142cb76fdcaca98fe51"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5NTY5OA==", "bodyText": "So if we just don\u2019t provide an implementation of it at all (i.e., remove it from this method) the HAPI library will do that for us.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r383395698", "createdAt": "2020-02-24T17:08:40Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirPersonService.java", "diffHunk": "@@ -25,4 +29,9 @@\n \tCollection<Person> findPersonsByGender(String gender);\n \t\n \tCollection<Person> findPersonsByBirthDate(Date birthDate);\n+\t\n+\tCollection<Person> searchForPeople(StringOrListParam name, TokenOrListParam identifier, TokenOrListParam gender,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMxMzM0OA=="}, "originalCommit": {"oid": "85dbc2fd3d8c7ae7f19bb142cb76fdcaca98fe51"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzUyMTY3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirPersonService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNDo1ODoyMlrOFtjn9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNDo1ODoyMlrOFtjn9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMxMzkwOQ==", "bodyText": "We should also support address-country.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r383313909", "createdAt": "2020-02-24T14:58:22Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirPersonService.java", "diffHunk": "@@ -25,4 +29,9 @@\n \tCollection<Person> findPersonsByGender(String gender);\n \t\n \tCollection<Person> findPersonsByBirthDate(Date birthDate);\n+\t\n+\tCollection<Person> searchForPeople(StringOrListParam name, TokenOrListParam identifier, TokenOrListParam gender,\n+\t        DateRangeParam birthDate, StringOrListParam city, StringOrListParam state, StringOrListParam postalCode,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85dbc2fd3d8c7ae7f19bb142cb76fdcaca98fe51"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQxNjI1OnYy", "diffSide": "LEFT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPatientDaoImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDo1OTowNlrOFuu4Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDo1OTowNlrOFuu4Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU0Njg4Mw==", "bodyText": "Note to self: create ticket to add country as a search parameter to Patient.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r384546883", "createdAt": "2020-02-26T14:59:06Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPatientDaoImpl.java", "diffHunk": "@@ -88,7 +81,7 @@ public PatientIdentifierType getPatientIdentifierTypeByNameOrUuid(String name, S\n \t\thandleDateRange(\"birthdate\", birthDate).ifPresent(criteria::add);\n \t\thandleDateRange(\"deathdate\", deathDate).ifPresent(criteria::add);\n \t\thandleBoolean(\"dead\", deceased).ifPresent(criteria::add);\n-\t\thandlePersonAddress(\"pad\", city, state, postalCode).ifPresent(c -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e342172717cf2f872bd9bb0ef1924e231bc3ce04"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQyMTI1OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowMDoxOFrOFuu7cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyMjozNVrOFuv3KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU0NzY5Nw==", "bodyText": "Was this change necessary?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r384547697", "createdAt": "2020-02-26T15:00:18Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImplTest.java", "diffHunk": "@@ -62,18 +65,24 @@\n \t\n \tprivate static final String NOT_FOUND_NAME = \"not found name\";\n \t\n-\tprivate static final int PERSON_BIRTH_YEAR = 1999;\n-\t\n-\tprivate static final int WRONG_BIRTH_YEAR = 1000;\n-\t\n \tprivate static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat(\"yyyy-MM-dd\");\n \t\n \tprivate static final String BIRTH_DATE = \"1999-12-20\";\n \t\n-\tprivate static final String NOT_FOUND_BIRTH_DATE = \"1000-00-00\";\n+\tprivate static final String NOT_FOUND_BIRTH_DATE = \"0001-01-01\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e342172717cf2f872bd9bb0ef1924e231bc3ce04"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2Mjk4NQ==", "bodyText": "Yes, else the DataRangeParam threw an error on parsing.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r384562985", "createdAt": "2020-02-26T15:22:35Z", "author": {"login": "CaptainDaVinci"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImplTest.java", "diffHunk": "@@ -62,18 +65,24 @@\n \t\n \tprivate static final String NOT_FOUND_NAME = \"not found name\";\n \t\n-\tprivate static final int PERSON_BIRTH_YEAR = 1999;\n-\t\n-\tprivate static final int WRONG_BIRTH_YEAR = 1000;\n-\t\n \tprivate static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat(\"yyyy-MM-dd\");\n \t\n \tprivate static final String BIRTH_DATE = \"1999-12-20\";\n \t\n-\tprivate static final String NOT_FOUND_BIRTH_DATE = \"1000-00-00\";\n+\tprivate static final String NOT_FOUND_BIRTH_DATE = \"0001-01-01\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU0NzY5Nw=="}, "originalCommit": {"oid": "e342172717cf2f872bd9bb0ef1924e231bc3ce04"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQyNDQzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowMTowMFrOFuu9eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowMTowMFrOFuu9eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU0ODIxOA==", "bodyText": "I don't think we need a new-line here", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r384548218", "createdAt": "2020-02-26T15:01:00Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImplTest.java", "diffHunk": "@@ -187,4 +240,5 @@ public void getActiveAttributesByPersonAndAttributeTypeUuid_shouldReturnPersonAt\n \t\t\n \t\tassertThat(attributeList, notNullValue());\n \t}\n+\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e342172717cf2f872bd9bb0ef1924e231bc3ce04"}, "originalPosition": 204}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQyNzM4OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowMTo0NFrOFuu_bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowMTo0NFrOFuu_bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU0ODcxNg==", "bodyText": "Is it possible to add a test/tests here that searches by multiple parameters at the same time?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r384548716", "createdAt": "2020-02-26T15:01:44Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImplTest.java", "diffHunk": "@@ -27,9 +27,12 @@\n import java.text.ParseException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e342172717cf2f872bd9bb0ef1924e231bc3ce04"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQ1Nzc5OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/PersonFhirResourceProviderWebTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowOToxMlrOFuvSRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowOToxMlrOFuvSRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1MzU0Mw==", "bodyText": "I know this isn't in the model I provided, but it would be nice if this included a test or tests for \"complex\" queries such as /Person?given=Harold&gender=male,other.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r384553543", "createdAt": "2020-02-26T15:09:12Z", "author": {"login": "ibacher"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/PersonFhirResourceProviderWebTest.java", "diffHunk": "@@ -10,15 +10,33 @@\n package org.openmrs.module.fhir2.providers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e342172717cf2f872bd9bb0ef1924e231bc3ce04"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjA4MDk1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzo1NzoxMFrOFvbV0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODoxNDoxM1rOFvb3zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3NTM0NA==", "bodyText": "Again... this is creating the alias regardless of what is being queried, which is not what we want to do. I might change your paramToProp() to something like this:\nprotected String paramToProp(String param) {\n\t\tString prop = null;\n\n\t\tswitch (param) {\n\t\t\tcase \"name\":\n\t\t\t\tif (!containsAlias(criteria, \"pn\")) {\n\t\t\t\t\tcriteria.createAlias(\"names\", \"pn\");\n\t\t\t\t}\n\n\t\t\t\treturn \"pn.givenName\";\n\t\t\tcase \"birthDate\":\n\t\t\t\treturn \"birthdate\";\n\t\t\tcase \"city\":\n\t\t\t\tprop = \"pad.cityVillage\";\n\t\t\tcase \"state\":\n\t\t\t\tprop = \"pad.stateProvince\";\n\t\t\tcase \"postalCode\":\n\t\t\t\tprop = \"pad.postalCode\";\n\t\t\tcase \"country\":\n\t\t\t\tprop = \"pad.country\";\n                \n                if (!containsAlias(criteria, \"pad\")) {\n\t\t\t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn prop;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r385275344", "createdAt": "2020-02-27T17:57:10Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "diffHunk": "@@ -45,33 +49,56 @@ public Person getPersonByUuid(String uuid) {\n \t}\n \t\n \t@Override\n-\tpublic Collection<Person> findPersonsByName(String name) {\n-\t\treturn personService.getPeople(name, false);\n-\t}\n-\t\n-\t@Override\n-\t@SuppressWarnings(\"unchecked\")\n-\tpublic Collection<Person> findPersonsByBirthDate(Date birthDate) {\n-\t\treturn sessionFactory.getCurrentSession().createCriteria(Person.class).add(eq(\"birthdate\", birthDate)).list();\n+\tpublic List<PersonAttribute> getActiveAttributesByPersonAndAttributeTypeUuid(Person person,\n+\t        String personAttributeTypeUuid) {\n+\t\treturn (List<PersonAttribute>) sessionFactory.getCurrentSession().createCriteria(PersonAttribute.class)\n+\t\t        .createAlias(\"person\", \"p\", JoinType.INNER_JOIN, eq(\"p.id\", person.getId()))\n+\t\t        .createAlias(\"attributeType\", \"pat\").add(eq(\"pat.uuid\", personAttributeTypeUuid)).add(eq(\"voided\", false))\n+\t\t        .list();\n \t}\n \t\n \t@Override\n-\tpublic Collection<Person> findSimilarPeople(String name, Integer birthYear, String gender) {\n-\t\treturn personService.getSimilarPeople(name, birthYear, gender);\n+\tpublic Collection<Person> searchForPeople(StringOrListParam name, TokenOrListParam gender, DateRangeParam birthDate,\n+\t        StringOrListParam city, StringOrListParam state, StringOrListParam postalCode, StringOrListParam country,\n+\t        SortSpec sort) {\n+\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(Person.class);\n+\t\t\n+\t\thandleNames(criteria, name, null, null);\n+\t\thandleGender(\"gender\", gender).ifPresent(criteria::add);\n+\t\thandleDateRange(\"birthdate\", birthDate).ifPresent(criteria::add);\n+\t\thandlePersonAddress(\"pad\", city, state, postalCode, country).ifPresent(c -> {\n+\t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n+\t\t\tcriteria.add(c);\n+\t\t});\n+\t\tif (!containsAlias(criteria, \"pn\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6af11928c6a21d38e15beab6fadeb461bdf8ada7"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4NDA0NQ==", "bodyText": "Yes, I'm working on this right now.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r385284045", "createdAt": "2020-02-27T18:14:13Z", "author": {"login": "CaptainDaVinci"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "diffHunk": "@@ -45,33 +49,56 @@ public Person getPersonByUuid(String uuid) {\n \t}\n \t\n \t@Override\n-\tpublic Collection<Person> findPersonsByName(String name) {\n-\t\treturn personService.getPeople(name, false);\n-\t}\n-\t\n-\t@Override\n-\t@SuppressWarnings(\"unchecked\")\n-\tpublic Collection<Person> findPersonsByBirthDate(Date birthDate) {\n-\t\treturn sessionFactory.getCurrentSession().createCriteria(Person.class).add(eq(\"birthdate\", birthDate)).list();\n+\tpublic List<PersonAttribute> getActiveAttributesByPersonAndAttributeTypeUuid(Person person,\n+\t        String personAttributeTypeUuid) {\n+\t\treturn (List<PersonAttribute>) sessionFactory.getCurrentSession().createCriteria(PersonAttribute.class)\n+\t\t        .createAlias(\"person\", \"p\", JoinType.INNER_JOIN, eq(\"p.id\", person.getId()))\n+\t\t        .createAlias(\"attributeType\", \"pat\").add(eq(\"pat.uuid\", personAttributeTypeUuid)).add(eq(\"voided\", false))\n+\t\t        .list();\n \t}\n \t\n \t@Override\n-\tpublic Collection<Person> findSimilarPeople(String name, Integer birthYear, String gender) {\n-\t\treturn personService.getSimilarPeople(name, birthYear, gender);\n+\tpublic Collection<Person> searchForPeople(StringOrListParam name, TokenOrListParam gender, DateRangeParam birthDate,\n+\t        StringOrListParam city, StringOrListParam state, StringOrListParam postalCode, StringOrListParam country,\n+\t        SortSpec sort) {\n+\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(Person.class);\n+\t\t\n+\t\thandleNames(criteria, name, null, null);\n+\t\thandleGender(\"gender\", gender).ifPresent(criteria::add);\n+\t\thandleDateRange(\"birthdate\", birthDate).ifPresent(criteria::add);\n+\t\thandlePersonAddress(\"pad\", city, state, postalCode, country).ifPresent(c -> {\n+\t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n+\t\t\tcriteria.add(c);\n+\t\t});\n+\t\tif (!containsAlias(criteria, \"pn\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3NTM0NA=="}, "originalCommit": {"oid": "6af11928c6a21d38e15beab6fadeb461bdf8ada7"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjQ0NDc2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTo0ODo0OFrOFve85w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDowMDoxNVrOFvfTWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzNDUwMw==", "bodyText": "I still don't like this solution. For example, if I were to sort by \"birthdate\", I'd still get joins against PersonName and PersonAddress.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r385334503", "createdAt": "2020-02-27T19:48:48Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "diffHunk": "@@ -70,11 +70,13 @@ public Person getPersonByUuid(String uuid) {\n \t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n \t\t\tcriteria.add(c);\n \t\t});\n-\t\tif (!containsAlias(criteria, \"pn\")) {\n-\t\t\tcriteria.createAlias(\"names\", \"pn\");\n-\t\t}\n-\t\tif (!containsAlias(criteria, \"pad\")) {\n-\t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n+\t\tif (sort != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bbf03652278d6a9fb94887dbb1639894d405305"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzNzg4MQ==", "bodyText": "But the sort.getParamName().equals(...) condition will return false then, right?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r385337881", "createdAt": "2020-02-27T19:55:25Z", "author": {"login": "CaptainDaVinci"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "diffHunk": "@@ -70,11 +70,13 @@ public Person getPersonByUuid(String uuid) {\n \t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n \t\t\tcriteria.add(c);\n \t\t});\n-\t\tif (!containsAlias(criteria, \"pn\")) {\n-\t\t\tcriteria.createAlias(\"names\", \"pn\");\n-\t\t}\n-\t\tif (!containsAlias(criteria, \"pad\")) {\n-\t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n+\t\tif (sort != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzNDUwMw=="}, "originalCommit": {"oid": "6bbf03652278d6a9fb94887dbb1639894d405305"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzOTAzMw==", "bodyText": "Whoops! I missed that! Sorry, too much time staring at git diffs.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r385339033", "createdAt": "2020-02-27T19:57:46Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "diffHunk": "@@ -70,11 +70,13 @@ public Person getPersonByUuid(String uuid) {\n \t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n \t\t\tcriteria.add(c);\n \t\t});\n-\t\tif (!containsAlias(criteria, \"pn\")) {\n-\t\t\tcriteria.createAlias(\"names\", \"pn\");\n-\t\t}\n-\t\tif (!containsAlias(criteria, \"pad\")) {\n-\t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n+\t\tif (sort != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzNDUwMw=="}, "originalCommit": {"oid": "6bbf03652278d6a9fb94887dbb1639894d405305"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0MDI0OQ==", "bodyText": "It's alright, happens to me all the time! \ud83d\ude04", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r385340249", "createdAt": "2020-02-27T20:00:15Z", "author": {"login": "CaptainDaVinci"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "diffHunk": "@@ -70,11 +70,13 @@ public Person getPersonByUuid(String uuid) {\n \t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n \t\t\tcriteria.add(c);\n \t\t});\n-\t\tif (!containsAlias(criteria, \"pn\")) {\n-\t\t\tcriteria.createAlias(\"names\", \"pn\");\n-\t\t}\n-\t\tif (!containsAlias(criteria, \"pad\")) {\n-\t\t\tcriteria.createAlias(\"addresses\", \"pad\");\n+\t\tif (sort != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzNDUwMw=="}, "originalCommit": {"oid": "6bbf03652278d6a9fb94887dbb1639894d405305"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjQ0ODkzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTo1MDowN1rOFve_Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTo1MDowN1rOFve_Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzNTEyMw==", "bodyText": "This should be \"birthdate\" to match the name of the search parameter.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/85#discussion_r385335123", "createdAt": "2020-02-27T19:50:07Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirPersonDaoImpl.java", "diffHunk": "@@ -88,13 +90,13 @@ protected String paramToProp(String param) {\n \t\t\t\treturn \"pn.givenName\";\n \t\t\tcase \"birthDate\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bbf03652278d6a9fb94887dbb1639894d405305"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1076, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}