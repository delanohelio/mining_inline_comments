{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NTY5NDMx", "number": 77, "title": "FM2-75 Address gaps in supported elements for DiagnosticReport, Task, and ServiceRequest ", "bodyText": "Description of what I changed\n\n\nImplemented support for elements required for the Lab workflow in Task, DiagnosticReport, and ServiceRequest.\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-75\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My pull request only contains ONE single commit.\nNo? -> read here on how to squash multiple commits into one\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-02-20T06:10:48Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77", "merged": true, "mergeCommit": {"oid": "695f9ea84acfdb939785dc39af092a2341d8bcfd"}, "closed": true, "closedAt": "2020-03-06T17:11:58Z", "author": {"login": "pmanko"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHXyfVgBqjMwNjQyMzM1MzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLDUxPgFqTM3MDQ4ODA0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fdd1122c9ce36b4f6a4477a94568dbbc861aa589", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fdd1122c9ce36b4f6a4477a94568dbbc861aa589", "committedDate": "2020-02-20T06:06:04Z", "message": "Implemented required Task, ServiceRequest,\nand DiagnosticReport translations for FM2-75"}, "afterCommit": {"oid": "2afe6eea2d0eb3049683129faafe441910a3eeef", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2afe6eea2d0eb3049683129faafe441910a3eeef", "committedDate": "2020-02-24T06:46:02Z", "message": "Implemented required Task, ServiceRequest,\nand DiagnosticReport translations for FM2-75"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNDYwMDI4", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#pullrequestreview-363460028", "createdAt": "2020-02-24T15:10:13Z", "commit": {"oid": "2afe6eea2d0eb3049683129faafe441910a3eeef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToxMDoxM1rOFtkDog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToxMDoxM1rOFtkDog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMyMDk5NA==", "bodyText": "Change this to anything else. Even \"for_\" will work.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r383320994", "createdAt": "2020-02-24T15:10:13Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirTask.java", "diffHunk": "@@ -71,20 +71,47 @@\n \t * Referenced resources represented with relative resource identifier string in the format of\n \t * <ResourceName>/<ResourceId>.\n \t */\n+\t@ElementCollection\n+\t@CollectionTable(name = \"fhir_task_based_on\", joinColumns = @JoinColumn(name = \"task_id\"))\n \t@Column(name = \"based_on\")\n-\tprivate String basedOn;\n+\tprivate Collection<String> basedOnReferences;\n+\t\n+\t/**\n+\t * Referenced resources represented with relative resource identifier string in the format of\n+\t * <ResourceName>/<ResourceId>.\n+\t */\n+\t@Column(name = \"for\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2afe6eea2d0eb3049683129faafe441910a3eeef"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNDYxNjgz", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#pullrequestreview-363461683", "createdAt": "2020-02-24T15:12:15Z", "commit": {"oid": "2afe6eea2d0eb3049683129faafe441910a3eeef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToxMjoxNlrOFtkIdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToxMjoxNlrOFtkIdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMyMjIzMA==", "bodyText": "Might it be worth it to create our own Reference type that's marked as @Embedded or similar that can handle parsing the reference properly?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r383322230", "createdAt": "2020-02-24T15:12:16Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirTask.java", "diffHunk": "@@ -71,20 +71,47 @@\n \t * Referenced resources represented with relative resource identifier string in the format of\n \t * <ResourceName>/<ResourceId>.\n \t */\n+\t@ElementCollection\n+\t@CollectionTable(name = \"fhir_task_based_on\", joinColumns = @JoinColumn(name = \"task_id\"))\n \t@Column(name = \"based_on\")\n-\tprivate String basedOn;\n+\tprivate Collection<String> basedOnReferences;\n+\t\n+\t/**\n+\t * Referenced resources represented with relative resource identifier string in the format of\n+\t * <ResourceName>/<ResourceId>.\n+\t */\n+\t@Column(name = \"for\")\n+\tprivate String forReference;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2afe6eea2d0eb3049683129faafe441910a3eeef"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2afe6eea2d0eb3049683129faafe441910a3eeef", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2afe6eea2d0eb3049683129faafe441910a3eeef", "committedDate": "2020-02-24T06:46:02Z", "message": "Implemented required Task, ServiceRequest,\nand DiagnosticReport translations for FM2-75"}, "afterCommit": {"oid": "bbf43a264560746f09686f02c80a883dc6c9bf06", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/bbf43a264560746f09686f02c80a883dc6c9bf06", "committedDate": "2020-02-24T17:37:08Z", "message": "FM2-75 Address gaps for Lab workflow in DiagnosticReport, Task, and ServiceRequest."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c8ac5c18bbeecc6b761d6bf6e3053838c3656bd", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/6c8ac5c18bbeecc6b761d6bf6e3053838c3656bd", "committedDate": "2020-02-24T18:46:17Z", "message": "Test fixes"}, "afterCommit": {"oid": "b053ba200a375e2f66770d53667c786c27c10563", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/b053ba200a375e2f66770d53667c786c27c10563", "committedDate": "2020-02-24T18:47:11Z", "message": "FM2-75 Address gaps for Lab workflow in DiagnosticReport, Task, and ServiceRequest."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTUxODQ4", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#pullrequestreview-364151848", "createdAt": "2020-02-25T13:48:04Z", "commit": {"oid": "b053ba200a375e2f66770d53667c786c27c10563"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzo0ODowNVrOFuGqIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzo0ODowNVrOFuGqIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4NzkwNw==", "bodyText": "I think you need to add referencedColumnName", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r383887907", "createdAt": "2020-02-25T13:48:05Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirTask.java", "diffHunk": "@@ -68,23 +69,33 @@\n \tprivate TaskIntent intent;\n \t\n \t/**\n-\t * Referenced resources represented with relative resource identifier string in the format of\n-\t * <ResourceName>/<ResourceId>.\n+\t * BasedOn refers to a higher-level authorization that triggered the creation of the task. It\n+\t * references a \"request\" resource such as a ServiceRequest, MedicationRequest, ServiceRequest,\n+\t * CarePlan, etc. which is distinct from the \"request\" resource the task is seeking to fulfill. This\n+\t * latter resource is referenced by FocusOn. For example, based on a ServiceRequest (= BasedOn), a\n+\t * task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient.\n \t */\n-\t@Column(name = \"based_on\")\n-\tprivate String basedOn;\n+\t@OneToMany(cascade = CascadeType.ALL)\n+\t@JoinColumn(name = \"based_on_reference_id\", referencedColumnName = \"reference_id\")\n+\tprivate Collection<FhirReference> basedOnReferences;\n \t\n-\t@ElementCollection\n-\t@CollectionTable(name = \"fhir_task_inputs\", joinColumns = @JoinColumn(name = \"task_input_id\"))\n-\t@Column(name = \"input\")\n-\tprivate Collection<String> inputs;\n+\t@OneToOne(cascade = CascadeType.ALL)\n+\t@JoinColumn(name = \"for_reference_id\", referencedColumnName = \"reference_id\")\n+\tprivate FhirReference forReference;\n \t\n-\t@ElementCollection\n-\t@CollectionTable(name = \"fhir_task_outputs\", joinColumns = @JoinColumn(name = \"task_output_id\"))\n-\t@Column(name = \"output\")\n-\tprivate Collection<String> outputs;\n+\t@OneToOne(cascade = CascadeType.ALL)\n+\t@JoinColumn(name = \"encounter_reference_id\", referencedColumnName = \"reference_id\")\n+\tprivate FhirReference encounterReference;\n \t\n-\t@Column(name = \"description\")\n-\tprivate String description;\n+\t@OneToOne(cascade = CascadeType.ALL)\n+\t@JoinColumn(name = \"owner_reference_id\", referencedColumnName = \"reference_id\")\n+\tprivate FhirReference ownerReference;\n \t\n+\t@OneToMany(cascade = CascadeType.ALL)\n+\t@JoinColumn(name = \"task_id\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b053ba200a375e2f66770d53667c786c27c10563"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTUyMTA0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#pullrequestreview-364152104", "createdAt": "2020-02-25T13:48:26Z", "commit": {"oid": "b053ba200a375e2f66770d53667c786c27c10563"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzo0ODoyNlrOFuGrCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzo0ODoyNlrOFuGrCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4ODEzNw==", "bodyText": "This should almost certainly be @OneToMany", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r383888137", "createdAt": "2020-02-25T13:48:26Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirTaskParam.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.MappedSuperclass;\n+import javax.persistence.OneToOne;\n+\n+import java.util.Date;\n+\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+import lombok.NoArgsConstructor;\n+import org.openmrs.BaseOpenmrsData;\n+import org.openmrs.Concept;\n+\n+@Data(staticConstructor = \"of\")\n+@NoArgsConstructor\n+@EqualsAndHashCode(callSuper = true)\n+@MappedSuperclass\n+public abstract class FhirTaskParam extends BaseOpenmrsData {\n+\t\n+\t@OneToOne", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b053ba200a375e2f66770d53667c786c27c10563"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b053ba200a375e2f66770d53667c786c27c10563", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/b053ba200a375e2f66770d53667c786c27c10563", "committedDate": "2020-02-24T18:47:11Z", "message": "FM2-75 Address gaps for Lab workflow in DiagnosticReport, Task, and ServiceRequest."}, "afterCommit": {"oid": "4385da0cfd96ed35c126b47f55b39f2cc2d4b825", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/4385da0cfd96ed35c126b47f55b39f2cc2d4b825", "committedDate": "2020-02-26T20:18:58Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4385da0cfd96ed35c126b47f55b39f2cc2d4b825", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/4385da0cfd96ed35c126b47f55b39f2cc2d4b825", "committedDate": "2020-02-26T20:18:58Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "b7e8d0f7898306f906662c279b99908862113567", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/b7e8d0f7898306f906662c279b99908862113567", "committedDate": "2020-02-26T20:30:03Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7e8d0f7898306f906662c279b99908862113567", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/b7e8d0f7898306f906662c279b99908862113567", "committedDate": "2020-02-26T20:30:03Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d", "committedDate": "2020-02-26T21:10:01Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjMxMDE5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#pullrequestreview-365231019", "createdAt": "2020-02-26T20:49:38Z", "commit": {"oid": "b7e8d0f7898306f906662c279b99908862113567"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0OTozOFrOFu7r5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToyNjo1MlrOFu831w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NjcwOQ==", "bodyText": "For a final PR, we shouldn't have commented-out code.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r384756709", "createdAt": "2020-02-26T20:49:38Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirTask.java", "diffHunk": "@@ -56,35 +59,85 @@\n \t@Column(name = \"task_id\")\n \tprivate Integer id;\n \t\n+\t/**\n+\t * The current status of the task.\n+\t */\n \t@Column(name = \"status\")\n \t@Enumerated(EnumType.STRING)\n \tprivate TaskStatus status;\n \t\n+\t/**\n+\t * An explanation as to why this task is held, failed, was refused, etc.\n+\t */\n \t@Column(name = \"status_reason\")\n \tprivate String statusReason;\n \t\n+\t/**\n+\t * Indicates the \"level\" of actionability associated with the Task, i.e. i+R[9]Cs this a proposed\n+\t * task, a planned task, an actionable task, etc.\n+\t */\n \t@Column(name = \"intent\")\n \t@Enumerated(EnumType.STRING)\n \tprivate TaskIntent intent;\n \t\n \t/**\n-\t * Referenced resources represented with relative resource identifier string in the format of\n-\t * <ResourceName>/<ResourceId>.\n+\t * BasedOn refers to a higher-level authorization that triggered the creation of the task. It\n+\t * references a \"request\" resource such as a ServiceRequest, MedicationRequest, ServiceRequest,\n+\t * CarePlan, etc. which is distinct from the \"request\" resource the task is seeking to fulfill. This\n+\t * latter resource is referenced by FocusOn. For example, based on a ServiceRequest (= BasedOn), a\n+\t * task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient.\n+\t */\n+\t@OneToMany\n+\t@JoinTable(name = \"fhir_task_based_on_reference\", joinColumns = @JoinColumn(name = \"task_id\"), inverseJoinColumns = @JoinColumn(name = \"reference_id\"))\n+\tprivate Set<FhirReference> basedOnReferences;\n+\t\n+\t//\tpublic Collection<FhirReference> getBasedOn() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e8d0f7898306f906662c279b99908862113567"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1ODI5MA==", "bodyText": "Should we mark this field as nullable = false since, per the profile, its a required element?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r384758290", "createdAt": "2020-02-26T20:52:26Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirTask.java", "diffHunk": "@@ -56,35 +59,85 @@\n \t@Column(name = \"task_id\")\n \tprivate Integer id;\n \t\n+\t/**\n+\t * The current status of the task.\n+\t */\n \t@Column(name = \"status\")\n \t@Enumerated(EnumType.STRING)\n \tprivate TaskStatus status;\n \t\n+\t/**\n+\t * An explanation as to why this task is held, failed, was refused, etc.\n+\t */\n \t@Column(name = \"status_reason\")\n \tprivate String statusReason;\n \t\n+\t/**\n+\t * Indicates the \"level\" of actionability associated with the Task, i.e. i+R[9]Cs this a proposed\n+\t * task, a planned task, an actionable task, etc.\n+\t */\n \t@Column(name = \"intent\")\n \t@Enumerated(EnumType.STRING)\n \tprivate TaskIntent intent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e8d0f7898306f906662c279b99908862113567"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1ODMzNA==", "bodyText": "Should we mark this field as nullable = false since, per the profile, its a required element?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r384758334", "createdAt": "2020-02-26T20:52:32Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirTask.java", "diffHunk": "@@ -56,35 +59,85 @@\n \t@Column(name = \"task_id\")\n \tprivate Integer id;\n \t\n+\t/**\n+\t * The current status of the task.\n+\t */\n \t@Column(name = \"status\")\n \t@Enumerated(EnumType.STRING)\n \tprivate TaskStatus status;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e8d0f7898306f906662c279b99908862113567"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2OTM0NQ==", "bodyText": "It might be worth dropping this field. It's supposed to be a CodeableConcept, but there's no real terminology binding, so it's hard to assess what we need to store.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r384769345", "createdAt": "2020-02-26T21:14:46Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirTask.java", "diffHunk": "@@ -56,35 +59,72 @@\n \t@Column(name = \"task_id\")\n \tprivate Integer id;\n \t\n+\t/**\n+\t * The current status of the task.\n+\t */\n \t@Column(name = \"status\")\n \t@Enumerated(EnumType.STRING)\n \tprivate TaskStatus status;\n \t\n+\t/**\n+\t * An explanation as to why this task is held, failed, was refused, etc.\n+\t */\n \t@Column(name = \"status_reason\")\n \tprivate String statusReason;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MDIyNg==", "bodyText": "Assuming this is storing the UUID of the reference, we can safely limit this column down to 32 characters (size = 32)", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r384770226", "createdAt": "2020-02-26T21:16:06Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirReference.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+import lombok.NoArgsConstructor;\n+import org.openmrs.BaseOpenmrsMetadata;\n+\n+/**\n+ * FHIR Reference - https://www.hl7.org/fhir/references.html\n+ */\n+@Data(staticConstructor = \"of\")\n+@NoArgsConstructor\n+@EqualsAndHashCode(callSuper = true)\n+@Entity\n+@Table(name = \"fhir_reference\")\n+public class FhirReference extends BaseOpenmrsMetadata {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\t@Id\n+\t@GeneratedValue(strategy = GenerationType.AUTO)\n+\t@Column(name = \"reference_id\")\n+\tprivate Integer id;\n+\t\n+\t@Column(name = \"reference_type\")\n+\tprivate String type;\n+\t\n+\t@Column(name = \"reference\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MTM2OQ==", "bodyText": "I get what these are doing, but we should probably either 1) add a function here or 2) just add a Javadoc on the FhirTaskParam that doesn't explicitly reference input or output.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r384771369", "createdAt": "2020-02-26T21:17:57Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirTaskInput.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+import lombok.NoArgsConstructor;\n+import org.hl7.fhir.r4.model.Task;\n+\n+/**\n+ * FHIR Task.input - https://www.hl7.org/fhir/task-definitions.html#Task.input\n+ */\n+@Data(staticConstructor = \"of\")\n+@NoArgsConstructor\n+@EqualsAndHashCode(callSuper = true)\n+@Entity\n+@Table(name = \"fhir_task_input\")\n+public class FhirTaskInput extends FhirTaskParam {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\t@Id\n+\t@GeneratedValue(strategy = GenerationType.AUTO)\n+\t@Column(name = \"task_input_id\")\n+\tprivate Integer id;\n+\t\n+\t/**\n+\t * FhirTaskInput.type: A code or description indicating how the input is intended to be used as part", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MTg0MQ==", "bodyText": "This should probably be marked nullable = false", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r384771841", "createdAt": "2020-02-26T21:18:43Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirTaskParam.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.MappedSuperclass;\n+import javax.persistence.OneToOne;\n+\n+import java.util.Date;\n+\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+import lombok.NoArgsConstructor;\n+import org.openmrs.BaseOpenmrsMetadata;\n+import org.openmrs.Concept;\n+\n+@Data(staticConstructor = \"of\")\n+@NoArgsConstructor\n+@EqualsAndHashCode(callSuper = true)\n+@MappedSuperclass\n+public abstract class FhirTaskParam extends BaseOpenmrsMetadata {\n+\t\n+\t@ManyToOne\n+\t@JoinColumn(name = \"task_id\")\n+\tprotected FhirTask task;\n+\t\n+\t@Column(name = \"type_id\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NTA5Mw==", "bodyText": "Not a point for this PR, but maybe we should talk through this class. The more I look at it, the more I feel like its pretty tightly coupling ServiceRequest to Task which makes sense in the lab workflow, but I don't think is a good, generalizable thing.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r384775093", "createdAt": "2020-02-26T21:24:55Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/BaseServiceRequestTranslatorImpl.java", "diffHunk": "@@ -15,6 +15,7 @@\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NjE1MQ==", "bodyText": "Does this work if there is no effectiveStopDate? I'm not sure if this parameter makes sense in the context of a one-off non-medication order.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r384776151", "createdAt": "2020-02-26T21:26:52Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ServiceRequestTranslatorImpl.java", "diffHunk": "@@ -37,8 +49,20 @@ public ServiceRequest toFhirResource(TestOrder order) {\n \t\tserviceRequest.setId(order.getUuid());\n \t\t\n \t\tserviceRequest.setStatus(determineServiceRequestStatus(order.getUuid()));\n+\t\t\n \t\tserviceRequest.setCode(conceptTranslator.toFhirResource(order.getConcept()));\n+\t\t\n \t\tserviceRequest.setIntent(ServiceRequest.ServiceRequestIntent.ORDER);\n+\t\t\n+\t\tserviceRequest.setSubject(patientReferenceTranslator.toFhirResource(order.getPatient()));\n+\t\t\n+\t\tserviceRequest.setRequester(providerReferenceTranslator.toFhirResource(order.getOrderer()));\n+\t\t\n+\t\tserviceRequest.setPerformer(Collections.singletonList(determineServiceRequestPerformer(order.getUuid())));\n+\t\t\n+\t\tserviceRequest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d", "committedDate": "2020-02-26T21:10:01Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "94ab5d13fc2f30c66890634fe04f02d5d0f1e7c8", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/94ab5d13fc2f30c66890634fe04f02d5d0f1e7c8", "committedDate": "2020-02-27T22:29:04Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94ab5d13fc2f30c66890634fe04f02d5d0f1e7c8", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/94ab5d13fc2f30c66890634fe04f02d5d0f1e7c8", "committedDate": "2020-02-27T22:29:04Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "bf2d13c038284cb39ea7bbac2a5b3689010ce861", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/bf2d13c038284cb39ea7bbac2a5b3689010ce861", "committedDate": "2020-02-27T22:43:58Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf2d13c038284cb39ea7bbac2a5b3689010ce861", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/bf2d13c038284cb39ea7bbac2a5b3689010ce861", "committedDate": "2020-02-27T22:43:58Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "fad60a40e866b73ef9dcef10f3e9f36d2c1c27b5", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fad60a40e866b73ef9dcef10f3e9f36d2c1c27b5", "committedDate": "2020-02-28T06:13:31Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fad60a40e866b73ef9dcef10f3e9f36d2c1c27b5", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fad60a40e866b73ef9dcef10f3e9f36d2c1c27b5", "committedDate": "2020-02-28T06:13:31Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "f720dd6f3169130bf9fcd352a1707562040c2339", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f720dd6f3169130bf9fcd352a1707562040c2339", "committedDate": "2020-02-28T07:05:14Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f720dd6f3169130bf9fcd352a1707562040c2339", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f720dd6f3169130bf9fcd352a1707562040c2339", "committedDate": "2020-02-28T07:05:14Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "fee2983e1702b0d89447eee75b2d4b2a3169e045", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fee2983e1702b0d89447eee75b2d4b2a3169e045", "committedDate": "2020-02-28T07:20:14Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MTIyMjQx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#pullrequestreview-368122241", "createdAt": "2020-03-03T16:19:31Z", "commit": {"oid": "fee2983e1702b0d89447eee75b2d4b2a3169e045"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjoxOTozMVrOFxMwKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTowNDoxNFrOFxSqjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMzQ4MA==", "bodyText": "Good point", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r387133480", "createdAt": "2020-03-03T16:19:31Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirReference.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+import lombok.NoArgsConstructor;\n+import org.openmrs.BaseOpenmrsMetadata;\n+\n+/**\n+ * FHIR Reference - https://www.hl7.org/fhir/references.html\n+ */\n+@Data(staticConstructor = \"of\")\n+@NoArgsConstructor\n+@EqualsAndHashCode(callSuper = true)\n+@Entity\n+@Table(name = \"fhir_reference\")\n+public class FhirReference extends BaseOpenmrsMetadata {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\t@Id\n+\t@GeneratedValue(strategy = GenerationType.AUTO)\n+\t@Column(name = \"reference_id\")\n+\tprivate Integer id;\n+\t\n+\t@Column(name = \"reference_type\")\n+\tprivate String type;\n+\t\n+\t@Column(name = \"reference\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MDIyNg=="}, "originalCommit": {"oid": "21936e30c6c2eb5f0b5fd5c4a79672af5c407c8d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIyODYyNg==", "bodyText": "Just a suggestion, but:\nreturn (Collection<FhirTask>) sessionFactory.getCurrentSession().createCriteria(FhirTask.class)\n    .createAlias(\"basedOnReferences\", \"bo\").add(\"bo.type\", clazz.getAnnotation(ResourceDef.class).name())\n    .add(eq(\"bo.reference\", uuid)).list();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r387228626", "createdAt": "2020-03-03T19:00:57Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirTaskDaoImpl.java", "diffHunk": "@@ -53,7 +62,53 @@ public FhirTask getTaskByUuid(String uuid) {\n \t\n \t@Override\n \tpublic Collection<FhirTask> getTasksByBasedOnUuid(Class<? extends DomainResource> clazz, String uuid) {\n-\t\treturn (Collection<FhirTask>) sessionFactory.getCurrentSession().createCriteria(FhirTask.class)\n-\t\t        .add(Restrictions.eq(\"basedOn\", clazz.getSimpleName() + \"/\" + uuid)).list();\n+\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(FhirTask.class, \"task\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fee2983e1702b0d89447eee75b2d4b2a3169e045"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIyOTE0Nw==", "bodyText": "See above", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r387229147", "createdAt": "2020-03-03T19:01:54Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirTaskDaoImpl.java", "diffHunk": "@@ -53,7 +62,53 @@ public FhirTask getTaskByUuid(String uuid) {\n \t\n \t@Override\n \tpublic Collection<FhirTask> getTasksByBasedOnUuid(Class<? extends DomainResource> clazz, String uuid) {\n-\t\treturn (Collection<FhirTask>) sessionFactory.getCurrentSession().createCriteria(FhirTask.class)\n-\t\t        .add(Restrictions.eq(\"basedOn\", clazz.getSimpleName() + \"/\" + uuid)).list();\n+\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(FhirTask.class, \"task\");\n+\t\tCriteria resourceCriteria = criteria.createCriteria(\"basedOnReferences\");\n+\t\tresourceCriteria.add(Restrictions.eq(\"reference\", uuid));\n+\t\t\n+\t\treturn criteria.list();\n+\t}\n+\t\n+\t@Override\n+\tpublic Collection<FhirTask> searchForTasks(ReferenceParam basedOnReference, ReferenceParam ownerReference,\n+\t        TokenOrListParam status, SortSpec sort) {\n+\t\t\n+\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(FhirTask.class);\n+\t\t\n+\t\t// TODO: Refactor with BaseDaoImpl search support\n+\t\t// TODO: Handle optional params\n+\t\t// Task.basedOn\n+\t\tif (!(basedOnReference == null || basedOnReference.getIdPart() == null\n+\t\t        || basedOnReference.getResourceType() == null)) {\n+\t\t\tCriteria basedOnCriteria = criteria.createCriteria(\"basedOnReferences\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fee2983e1702b0d89447eee75b2d4b2a3169e045"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIyOTIyNA==", "bodyText": "See above", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r387229224", "createdAt": "2020-03-03T19:02:03Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirTaskDaoImpl.java", "diffHunk": "@@ -53,7 +62,53 @@ public FhirTask getTaskByUuid(String uuid) {\n \t\n \t@Override\n \tpublic Collection<FhirTask> getTasksByBasedOnUuid(Class<? extends DomainResource> clazz, String uuid) {\n-\t\treturn (Collection<FhirTask>) sessionFactory.getCurrentSession().createCriteria(FhirTask.class)\n-\t\t        .add(Restrictions.eq(\"basedOn\", clazz.getSimpleName() + \"/\" + uuid)).list();\n+\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(FhirTask.class, \"task\");\n+\t\tCriteria resourceCriteria = criteria.createCriteria(\"basedOnReferences\");\n+\t\tresourceCriteria.add(Restrictions.eq(\"reference\", uuid));\n+\t\t\n+\t\treturn criteria.list();\n+\t}\n+\t\n+\t@Override\n+\tpublic Collection<FhirTask> searchForTasks(ReferenceParam basedOnReference, ReferenceParam ownerReference,\n+\t        TokenOrListParam status, SortSpec sort) {\n+\t\t\n+\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(FhirTask.class);\n+\t\t\n+\t\t// TODO: Refactor with BaseDaoImpl search support\n+\t\t// TODO: Handle optional params\n+\t\t// Task.basedOn\n+\t\tif (!(basedOnReference == null || basedOnReference.getIdPart() == null\n+\t\t        || basedOnReference.getResourceType() == null)) {\n+\t\t\tCriteria basedOnCriteria = criteria.createCriteria(\"basedOnReferences\");\n+\t\t\tbasedOnCriteria.add(Restrictions.eq(\"reference\", basedOnReference.getIdPart()));\n+\t\t\tbasedOnCriteria.add(Restrictions.eq(\"type\", basedOnReference.getResourceType()));\n+\t\t}\n+\t\t\n+\t\t// Task.owner\n+\t\tif (!(ownerReference == null || ownerReference.getIdPart() == null || ownerReference.getResourceType() == null)) {\n+\t\t\tCriteria ownerCriteria = criteria.createCriteria(\"ownerReference\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fee2983e1702b0d89447eee75b2d4b2a3169e045"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIzMDM1MQ==", "bodyText": "I'd use the full reference, e.g., Patient/00000000000 for the name.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#discussion_r387230351", "createdAt": "2020-03-03T19:04:14Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ReferenceTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Reference;\n+import org.openmrs.module.fhir2.FhirReference;\n+import org.openmrs.module.fhir2.api.translators.ReferenceTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class ReferenceTranslatorImpl implements ReferenceTranslator {\n+\t\n+\t@Override\n+\tpublic Reference toFhirResource(FhirReference openmrsTask) {\n+\t\tReference fhirReference = null;\n+\t\t\n+\t\tif (openmrsTask != null) {\n+\t\t\tfhirReference = new Reference();\n+\t\t\tfhirReference.setType(openmrsTask.getType());\n+\t\t\tfhirReference.setReference(openmrsTask.getReference());\n+\t\t}\n+\t\t\n+\t\treturn fhirReference;\n+\t}\n+\t\n+\t@Override\n+\tpublic FhirReference toOpenmrsType(Reference fhirReference) {\n+\t\tFhirReference openmrsReference = null;\n+\t\t\n+\t\tif (fhirReference != null) {\n+\t\t\topenmrsReference = new FhirReference();\n+\t\t\topenmrsReference.setType(fhirReference.getType());\n+\t\t\topenmrsReference.setReference(fhirReference.getReference());\n+\t\t\t// TODO figure out what to use for the non-nullable Name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fee2983e1702b0d89447eee75b2d4b2a3169e045"}, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fee2983e1702b0d89447eee75b2d4b2a3169e045", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fee2983e1702b0d89447eee75b2d4b2a3169e045", "committedDate": "2020-02-28T07:20:14Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "f34ce84b9e8a66247b16a8f97a4c06b61bc39c83", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f34ce84b9e8a66247b16a8f97a4c06b61bc39c83", "committedDate": "2020-03-04T17:18:24Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f34ce84b9e8a66247b16a8f97a4c06b61bc39c83", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f34ce84b9e8a66247b16a8f97a4c06b61bc39c83", "committedDate": "2020-03-04T17:18:24Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "f86211e4ce1c3d84118e16a5bfa3349859be07ed", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f86211e4ce1c3d84118e16a5bfa3349859be07ed", "committedDate": "2020-03-04T18:59:04Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f86211e4ce1c3d84118e16a5bfa3349859be07ed", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f86211e4ce1c3d84118e16a5bfa3349859be07ed", "committedDate": "2020-03-04T18:59:04Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "2817be3fd11cd9b1977ccd2e94f7c753f7c703ca", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2817be3fd11cd9b1977ccd2e94f7c753f7c703ca", "committedDate": "2020-03-04T19:09:25Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2817be3fd11cd9b1977ccd2e94f7c753f7c703ca", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2817be3fd11cd9b1977ccd2e94f7c753f7c703ca", "committedDate": "2020-03-04T19:09:25Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "250bb0259dee6a0c09355b11857298c8a8fbd8aa", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/250bb0259dee6a0c09355b11857298c8a8fbd8aa", "committedDate": "2020-03-04T19:56:33Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "250bb0259dee6a0c09355b11857298c8a8fbd8aa", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/250bb0259dee6a0c09355b11857298c8a8fbd8aa", "committedDate": "2020-03-04T19:56:33Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "d53598af052415deb207262db993da4ccb54568b", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d53598af052415deb207262db993da4ccb54568b", "committedDate": "2020-03-04T20:15:00Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d53598af052415deb207262db993da4ccb54568b", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d53598af052415deb207262db993da4ccb54568b", "committedDate": "2020-03-04T20:15:00Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "10b99b735f2e28aa4815be4235de6b1560fad432", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/10b99b735f2e28aa4815be4235de6b1560fad432", "committedDate": "2020-03-05T00:23:53Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1be445cf8bba680fd7f27ce18435e01cf000019e", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/1be445cf8bba680fd7f27ce18435e01cf000019e", "committedDate": "2020-03-06T17:00:10Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10b99b735f2e28aa4815be4235de6b1560fad432", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/10b99b735f2e28aa4815be4235de6b1560fad432", "committedDate": "2020-03-05T00:23:53Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}, "afterCommit": {"oid": "1be445cf8bba680fd7f27ce18435e01cf000019e", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/1be445cf8bba680fd7f27ce18435e01cf000019e", "committedDate": "2020-03-06T17:00:10Z", "message": "FM2-75 Addresses gaps for Lab Workflow in Task, ServiceRequest, and DiagnosticReport"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDg4MDQy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/77#pullrequestreview-370488042", "createdAt": "2020-03-06T17:11:40Z", "commit": {"oid": "1be445cf8bba680fd7f27ce18435e01cf000019e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4194, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}