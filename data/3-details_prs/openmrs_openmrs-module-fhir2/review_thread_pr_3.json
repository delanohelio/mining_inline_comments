{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5OTk2NzU0", "number": 3, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzo1MjoxMVrODWQOjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNToyNDozNFrODWR8bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NjYxMTM0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirLocationDaoImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzo1MjoxMVrOFa57EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzo1MjoxMVrOFa57EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc1NjMwNQ==", "bodyText": "There seems to be unnecessary spacing before every line in this file", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/3#discussion_r363756305", "createdAt": "2020-01-07T13:52:11Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirLocationDaoImpl.java", "diffHunk": "@@ -0,0 +1,33 @@\n+\t/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f503d19a25ebefd1450320e27ab2a610afb1103"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NjYxMzc2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirLocationService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzo1MzowM1rOFa58mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzo1MzowM1rOFa58mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc1NjY5OQ==", "bodyText": "I'd prefer it if we had blank newlines at the end of files. It prevents some issues that can arise in git.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/3#discussion_r363756699", "createdAt": "2020-01-07T13:53:03Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirLocationService.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api;\n+\n+import org.hl7.fhir.r4.model.Location;\n+\n+import javax.validation.constraints.NotNull;\n+\n+public interface FhirLocationService {\n+\n+    Location getLocationByUuid(@NotNull String uuid);\n+} ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f503d19a25ebefd1450320e27ab2a610afb1103"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NjYxNTcwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/FhirLocationDao.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzo1Mzo0NlrOFa590w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzo1Mzo0NlrOFa590w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc1NzAxMQ==", "bodyText": "This method should be called getLocationByUuid", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/3#discussion_r363757011", "createdAt": "2020-01-07T13:53:46Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/FhirLocationDao.java", "diffHunk": "@@ -0,0 +1,20 @@\n+\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.dao;\n+\n+import org.openmrs.Location;\n+\n+import javax.validation.constraints.NotNull;\n+\n+public interface FhirLocationDao {\n+\n+    Location getLocationByuuid(@NotNull String uuid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f503d19a25ebefd1450320e27ab2a610afb1103"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NjYyNDIyOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzo1NzowOFrOFa6DWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzo1NzowOFrOFa6DWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc1ODQyNg==", "bodyText": "Could you add some tests for the corresponding toOpenmrsType() method since that appears to also be implemented in this PR.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/3#discussion_r363758426", "createdAt": "2020-01-07T13:57:08Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImplTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.runners.MockitoJUnitRunner;\n+import org.openmrs.Location;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class LocationTranslatorImplTest {\n+\n+    private static final String LOCATION_UUID = \"c0938432-1691-11df-97a5-7038c432aaba\";\n+\n+    private static final String LOCATION_NAME = \"Test location 1\";\n+\n+    private static final String LOCATION_DESCRIPTION = \"Test description\";\n+\n+    private LocationTranslatorImpl locationTranslator;\n+\n+    private Location omrsLocation;\n+\n+    @Before\n+    public void setup() {\n+        locationTranslator = new LocationTranslatorImpl();\n+        omrsLocation = new Location();\n+    }\n+\n+    @Test\n+    public void shouldTranslateOpenmrsLocationToFhirLocation() {\n+        org.hl7.fhir.r4.model.Location fhirLocation = locationTranslator.toFhirResource(omrsLocation);\n+        assertNotNull(omrsLocation);\n+        assertNotNull(fhirLocation);\n+        assertEquals(omrsLocation.getName(), fhirLocation.getName());\n+    }\n+\n+    @Test\n+    public void shouldTranslateLocationUuidToFhiIdType() {\n+        omrsLocation.setUuid(LOCATION_UUID);\n+        org.hl7.fhir.r4.model.Location fhirLocation = locationTranslator.toFhirResource(omrsLocation);\n+        assertNotNull(fhirLocation);\n+        assertNotNull(fhirLocation.getId());\n+        assertEquals(fhirLocation.getId(), LOCATION_UUID);\n+    }\n+\n+    @Test\n+    public void shouldTranslateLocationNameToFhirNameType() {\n+        omrsLocation.setName(LOCATION_NAME);\n+        org.hl7.fhir.r4.model.Location fhirLocation = locationTranslator.toFhirResource(omrsLocation);\n+        assertNotNull(fhirLocation);\n+        assertNotNull(fhirLocation.getName());\n+        assertEquals(fhirLocation.getName(), LOCATION_NAME);\n+    }\n+\n+    @Test\n+    public void shouldTranslateLocationDescriptionToFhirDescriptionType() {\n+        omrsLocation.setDescription(LOCATION_DESCRIPTION);\n+        org.hl7.fhir.r4.model.Location fhirLocation = locationTranslator.toFhirResource(omrsLocation);\n+        assertNotNull(fhirLocation);\n+        assertNotNull(fhirLocation.getDescription());\n+        assertEquals(fhirLocation.getDescription(), LOCATION_DESCRIPTION);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f503d19a25ebefd1450320e27ab2a610afb1103"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Njg5MjYzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/api/impl/FhirLocationServiceImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNToyNDozNFrOFa8pNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNToyNDozNFrOFa8pNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgwMDg4NQ==", "bodyText": "Add another assertion to check if returns location with correct uuid", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/3#discussion_r363800885", "createdAt": "2020-01-07T15:24:34Z", "author": {"login": "corneliouzbett"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/impl/FhirLocationServiceImplTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.impl;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+import org.openmrs.Location;\n+import org.openmrs.module.fhir2.api.dao.FhirLocationDao;\n+import org.openmrs.module.fhir2.api.translators.LocationTranslator;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.util.Date;\n+\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class FhirLocationServiceImplTest {\n+\n+    private static final String LOCATION_UUID = \"c0938432-1691-11df-97a5-7038c432aaba\";\n+\n+    private static final String LOCATION_NAME = \"Test location 1\";\n+\n+    private static final String LOCATION_DESCRIPTION = \"Test description\";\n+\n+    @Mock\n+    FhirLocationDao locationDao;\n+\n+    @Mock\n+    LocationTranslator locationTranslator;\n+\n+    private FhirLocationServiceImpl fhirLocationService;\n+\n+    @Before\n+    public void setUp() {\n+        fhirLocationService = new FhirLocationServiceImpl();\n+        fhirLocationService.setLocationDao(locationDao);\n+        fhirLocationService.setLocationTranslator(locationTranslator);\n+    }\n+\n+    @Test\n+    public void shouldGetLocationByUuid() {\n+        Location location = new Location();\n+        location.setUuid(LOCATION_UUID);\n+        location.setName(LOCATION_NAME);\n+        location.setDescription(LOCATION_DESCRIPTION);\n+        location.setDateCreated(new Date());\n+        location.setRetired(false);\n+\n+        when(locationDao.getLocationByuuid(LOCATION_UUID)).thenReturn(location);\n+\n+        org.hl7.fhir.r4.model.Location result = fhirLocationService.getLocationByUuid(LOCATION_UUID);\n+        assertNotNull(location);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f118da0840a17c27274110d0f433550c1f4ba2b"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1175, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}