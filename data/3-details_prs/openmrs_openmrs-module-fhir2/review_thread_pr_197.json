{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMDc0MDA4", "number": 197, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0ODo0N1rOEDaJJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo1NjowNlrOED65Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDA5NTEwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirMedicationRequestDaoImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0ODo0N1rOGgaK4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDo1Njo1MVrOGgijeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNjM4NA==", "bodyText": "@ibacher  Need some clarity especially on this case and this case   because I am still struggling to understand the two despite reading up from the documentation", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r436636384", "createdAt": "2020-06-08T11:48:47Z", "author": {"login": "reagan-meant"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirMedicationRequestDaoImpl.java", "diffHunk": "@@ -9,14 +9,62 @@\n  */\n package org.openmrs.module.fhir2.api.dao.impl;\n \n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n+import org.hibernate.Criteria;\n import org.openmrs.DrugOrder;\n+import org.openmrs.module.fhir2.FhirConstants;\n import org.openmrs.module.fhir2.api.dao.FhirMedicationRequestDao;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n public class FhirMedicationRequestDaoImpl extends BaseFhirDao<DrugOrder> implements FhirMedicationRequestDao {\n \t\n+\t@Override\n+\tprotected void setupSearchParams(Criteria criteria, SearchParameterMap theParams) {\n+\t\ttheParams.getParameters().forEach(entry -> {\n+\t\t\tswitch (entry.getKey()) {\n+\t\t\t\tcase FhirConstants.ENCOUNTER_REFERENCE_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(p -> handleEncounterReference(\"e\", (ReferenceAndListParam) p.getParam())\n+\t\t\t\t\t        .ifPresent(c -> criteria.createAlias(\"encounter\", \"e\").add(c)));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.PATIENT_REFERENCE_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(patientReference -> handlePatientReference(criteria,\n+\t\t\t\t\t    (ReferenceAndListParam) patientReference.getParam(), \"person\"));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.CODED_SEARCH_HANDLER:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f80ec983ab98a6284557879a385855041192580e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMjc5MQ==", "bodyText": "@reagan-meant They are intended to cover to slightly different types of cases. So the CODED_SEARCH_HANDLER should presumably be used where the code search parameter is provided and the MEDICATION_REFERENCE_SEARCH_HANDLER where a medication reference is provided. The difference between these is present because the medication requested can be represented either as a coded concept or as a reference to a Medication resource.\nSearches by code should look something like this: http://www.nlm.nih.gov/research/umls/rxnorm|206917 (this is the FHIR representation of the RxNORM code for concept 206917, which is an 800mg oral tablet of ibuprofen). Searches by medication, however, will be by a FHIR reference to the medication in question. That means they look like this: Medication/92035b29-ff19-44f2-a4cb-64beeb36b64d (this is the FHIR representation for a reference to the Medication\u2014OpenMRS Drug\u2014with a uuid of 92035b29-ff19-44f2-a4cb-64beeb36b64d; this could be the uuid of, say, an 800mg oral tablet of ibuprofen).\nThe query we want to generate for the former looks something like this:\nselect do.*\nfrom drug_order do\n    join drug d on do.drug_inventory_id = d.drug_id\n    join concept c on d.concept_id = c.concept_id\n    join concept_reference_map crm on c.concept_id = crm.concept_id\n    join concept_reference_term crt on crm.concept_reference_term_id = crt.concept_reference_term_id\n    join concept_source cs on crt.concept_source_id = cs.concept_source_id\n    join fhir_concept_source fcs on cs.concept_source_id = fcs.concept_source_id\nwhere fcs.url = 'http://www.nlm.nih.gov/research/umls/rxnorm' and crt.code = '206917'\nThe query we want to generate for the latter looks something like this:\nselect do.*\nfrom drug_order do\n    join drug d on do.drug_inventory_id = d.drug_id\nwhere d.uuid = '92035b29-ff19-44f2-a4cb-64beeb36b64d'\nDoes that clarify things a bit? Basically, we want to handle the code search parameter the way we handle other coded values, but the the medication search parameter the way we handle other reference values (like PARTICIPANT_REFERENCE_SEARCH_HANDLER)", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r436702791", "createdAt": "2020-06-08T13:31:22Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirMedicationRequestDaoImpl.java", "diffHunk": "@@ -9,14 +9,62 @@\n  */\n package org.openmrs.module.fhir2.api.dao.impl;\n \n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n+import org.hibernate.Criteria;\n import org.openmrs.DrugOrder;\n+import org.openmrs.module.fhir2.FhirConstants;\n import org.openmrs.module.fhir2.api.dao.FhirMedicationRequestDao;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n public class FhirMedicationRequestDaoImpl extends BaseFhirDao<DrugOrder> implements FhirMedicationRequestDao {\n \t\n+\t@Override\n+\tprotected void setupSearchParams(Criteria criteria, SearchParameterMap theParams) {\n+\t\ttheParams.getParameters().forEach(entry -> {\n+\t\t\tswitch (entry.getKey()) {\n+\t\t\t\tcase FhirConstants.ENCOUNTER_REFERENCE_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(p -> handleEncounterReference(\"e\", (ReferenceAndListParam) p.getParam())\n+\t\t\t\t\t        .ifPresent(c -> criteria.createAlias(\"encounter\", \"e\").add(c)));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.PATIENT_REFERENCE_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(patientReference -> handlePatientReference(criteria,\n+\t\t\t\t\t    (ReferenceAndListParam) patientReference.getParam(), \"person\"));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.CODED_SEARCH_HANDLER:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNjM4NA=="}, "originalCommit": {"oid": "f80ec983ab98a6284557879a385855041192580e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3Mzc1Mg==", "bodyText": "Thanks alot @ibacher , This makes a whole lot of sense now. will have a better PR soon", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r436773752", "createdAt": "2020-06-08T14:56:51Z", "author": {"login": "reagan-meant"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirMedicationRequestDaoImpl.java", "diffHunk": "@@ -9,14 +9,62 @@\n  */\n package org.openmrs.module.fhir2.api.dao.impl;\n \n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n+import org.hibernate.Criteria;\n import org.openmrs.DrugOrder;\n+import org.openmrs.module.fhir2.FhirConstants;\n import org.openmrs.module.fhir2.api.dao.FhirMedicationRequestDao;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n public class FhirMedicationRequestDaoImpl extends BaseFhirDao<DrugOrder> implements FhirMedicationRequestDao {\n \t\n+\t@Override\n+\tprotected void setupSearchParams(Criteria criteria, SearchParameterMap theParams) {\n+\t\ttheParams.getParameters().forEach(entry -> {\n+\t\t\tswitch (entry.getKey()) {\n+\t\t\t\tcase FhirConstants.ENCOUNTER_REFERENCE_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(p -> handleEncounterReference(\"e\", (ReferenceAndListParam) p.getParam())\n+\t\t\t\t\t        .ifPresent(c -> criteria.createAlias(\"encounter\", \"e\").add(c)));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.PATIENT_REFERENCE_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(patientReference -> handlePatientReference(criteria,\n+\t\t\t\t\t    (ReferenceAndListParam) patientReference.getParam(), \"person\"));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.CODED_SEARCH_HANDLER:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNjM4NA=="}, "originalCommit": {"oid": "f80ec983ab98a6284557879a385855041192580e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDUxODc5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirMedicationRequestServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozMTo0OFrOGgePag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMToyNTowMlrOGhEzwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMzA4Mg==", "bodyText": "Always have a newline at the end of a file", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r436703082", "createdAt": "2020-06-08T13:31:48Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirMedicationRequestServiceImpl.java", "diffHunk": "@@ -12,22 +12,54 @@\n import lombok.AccessLevel;\n import lombok.Getter;\n import lombok.Setter;\n+\n+import java.util.Collection;\n+\n import org.hl7.fhir.r4.model.MedicationRequest;\n+import org.openmrs.DrugOrder;\n+import org.openmrs.module.fhir2.FhirConstants;\n import org.openmrs.module.fhir2.api.FhirMedicationRequestService;\n+import org.openmrs.module.fhir2.api.dao.FhirDao;\n import org.openmrs.module.fhir2.api.dao.FhirMedicationRequestDao;\n+import org.openmrs.module.fhir2.api.search.SearchQuery;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n import org.openmrs.module.fhir2.api.translators.MedicationRequestTranslator;\n+import org.openmrs.module.fhir2.api.translators.OpenmrsFhirTranslator;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n+import ca.uhn.fhir.rest.api.server.IBundleProvider;\n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n+\n @Component\n @Setter(AccessLevel.PACKAGE)\n @Getter(AccessLevel.PROTECTED)\n-public class FhirMedicationRequestServiceImpl extends BaseFhirService<MedicationRequest, org.openmrs.DrugOrder> implements FhirMedicationRequestService {\n-\t\n+public class FhirMedicationRequestServiceImpl extends BaseFhirService<MedicationRequest, org.openmrs.DrugOrder>\n+\t\timplements FhirMedicationRequestService {\n+\n \t@Autowired\n \tprivate MedicationRequestTranslator translator;\n-\t\n+\n \t@Autowired\n \tprivate FhirMedicationRequestDao dao;\n+\n+\t@Autowired\n+\tprivate SearchQuery<DrugOrder, MedicationRequest, FhirMedicationRequestDao, MedicationRequestTranslator> searchQuery;\n+\n+\t@Override\n+\tpublic IBundleProvider searchForMedicationRequests(ReferenceAndListParam patientReference, ReferenceAndListParam encounterReference, TokenAndListParam code,\n+\t\t\tReferenceAndListParam participantReference, ReferenceAndListParam medicationReference) {\n+\n+\t\t\t\tSearchParameterMap theParams = new SearchParameterMap()\n+\t\t        .addParameter(FhirConstants.ENCOUNTER_REFERENCE_SEARCH_HANDLER, encounterReference)\n+\t\t        .addParameter(FhirConstants.PATIENT_REFERENCE_SEARCH_HANDLER, patientReference)\n+\t\t\t\t.addParameter(FhirConstants.CODED_SEARCH_HANDLER, code)\n+\t\t\t\t.addParameter(FhirConstants.PARTICIPANT_REFERENCE_SEARCH_HANDLER, participantReference)\n+\t\t\t\t.addParameter(FhirConstants.MEDICATION_REFERENCE_SEARCH_HANDLER, medicationReference);\n+\n+\t\treturn searchQuery.getQueryResults(theParams, dao, translator);\n+\t}\n+\n \t\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f80ec983ab98a6284557879a385855041192580e"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzNDk3Nw==", "bodyText": "Noted", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r437334977", "createdAt": "2020-06-09T11:25:02Z", "author": {"login": "reagan-meant"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirMedicationRequestServiceImpl.java", "diffHunk": "@@ -12,22 +12,54 @@\n import lombok.AccessLevel;\n import lombok.Getter;\n import lombok.Setter;\n+\n+import java.util.Collection;\n+\n import org.hl7.fhir.r4.model.MedicationRequest;\n+import org.openmrs.DrugOrder;\n+import org.openmrs.module.fhir2.FhirConstants;\n import org.openmrs.module.fhir2.api.FhirMedicationRequestService;\n+import org.openmrs.module.fhir2.api.dao.FhirDao;\n import org.openmrs.module.fhir2.api.dao.FhirMedicationRequestDao;\n+import org.openmrs.module.fhir2.api.search.SearchQuery;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n import org.openmrs.module.fhir2.api.translators.MedicationRequestTranslator;\n+import org.openmrs.module.fhir2.api.translators.OpenmrsFhirTranslator;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n+import ca.uhn.fhir.rest.api.server.IBundleProvider;\n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n+\n @Component\n @Setter(AccessLevel.PACKAGE)\n @Getter(AccessLevel.PROTECTED)\n-public class FhirMedicationRequestServiceImpl extends BaseFhirService<MedicationRequest, org.openmrs.DrugOrder> implements FhirMedicationRequestService {\n-\t\n+public class FhirMedicationRequestServiceImpl extends BaseFhirService<MedicationRequest, org.openmrs.DrugOrder>\n+\t\timplements FhirMedicationRequestService {\n+\n \t@Autowired\n \tprivate MedicationRequestTranslator translator;\n-\t\n+\n \t@Autowired\n \tprivate FhirMedicationRequestDao dao;\n+\n+\t@Autowired\n+\tprivate SearchQuery<DrugOrder, MedicationRequest, FhirMedicationRequestDao, MedicationRequestTranslator> searchQuery;\n+\n+\t@Override\n+\tpublic IBundleProvider searchForMedicationRequests(ReferenceAndListParam patientReference, ReferenceAndListParam encounterReference, TokenAndListParam code,\n+\t\t\tReferenceAndListParam participantReference, ReferenceAndListParam medicationReference) {\n+\n+\t\t\t\tSearchParameterMap theParams = new SearchParameterMap()\n+\t\t        .addParameter(FhirConstants.ENCOUNTER_REFERENCE_SEARCH_HANDLER, encounterReference)\n+\t\t        .addParameter(FhirConstants.PATIENT_REFERENCE_SEARCH_HANDLER, patientReference)\n+\t\t\t\t.addParameter(FhirConstants.CODED_SEARCH_HANDLER, code)\n+\t\t\t\t.addParameter(FhirConstants.PARTICIPANT_REFERENCE_SEARCH_HANDLER, participantReference)\n+\t\t\t\t.addParameter(FhirConstants.MEDICATION_REFERENCE_SEARCH_HANDLER, medicationReference);\n+\n+\t\treturn searchQuery.getQueryResults(theParams, dao, translator);\n+\t}\n+\n \t\n-}\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMzA4Mg=="}, "originalCommit": {"oid": "f80ec983ab98a6284557879a385855041192580e"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDUxOTc0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/MedicationRequestFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozMTo1OVrOGgeP9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMToyNDo0MFrOGhEzEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMzIyMw==", "bodyText": "Don't use * imports", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r436703223", "createdAt": "2020-06-08T13:31:59Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/MedicationRequestFhirResourceProvider.java", "diffHunk": "@@ -11,17 +11,28 @@\n \n import javax.validation.constraints.NotNull;\n \n-import ca.uhn.fhir.rest.annotation.IdParam;\n-import ca.uhn.fhir.rest.annotation.Read;\n+import ca.uhn.fhir.rest.annotation.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f80ec983ab98a6284557879a385855041192580e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzNDgwMw==", "bodyText": "Oooh yes...though I have noticed a couple of other resources where its being use...may need some simple refactor in them", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r437334803", "createdAt": "2020-06-09T11:24:40Z", "author": {"login": "reagan-meant"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/MedicationRequestFhirResourceProvider.java", "diffHunk": "@@ -11,17 +11,28 @@\n \n import javax.validation.constraints.NotNull;\n \n-import ca.uhn.fhir.rest.annotation.IdParam;\n-import ca.uhn.fhir.rest.annotation.Read;\n+import ca.uhn.fhir.rest.annotation.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMzIyMw=="}, "originalCommit": {"oid": "f80ec983ab98a6284557879a385855041192580e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDUyMzgwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/MedicationRequestFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozMzowMFrOGgeSjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDowMjoyOVrOGhLphA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMzg4NA==", "bodyText": "This should initially be developed in the R4 ResourceProvider and then added to R3 afterwards.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r436703884", "createdAt": "2020-06-08T13:33:00Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/MedicationRequestFhirResourceProvider.java", "diffHunk": "@@ -49,4 +60,28 @@ public MedicationRequest getMedicationRequestById(@IdParam @NotNull IdType id) {\n \t\t\n \t\treturn MedicationRequest30_40.convertMedicationRequest(medicationRequest);\n \t}\n+\n+\t@Search", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f80ec983ab98a6284557879a385855041192580e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzMzcwOA==", "bodyText": "Do you mean I shouldnt write code in the R3 providers? Because I have tried implementing it in both", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r437333708", "createdAt": "2020-06-09T11:22:25Z", "author": {"login": "reagan-meant"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/MedicationRequestFhirResourceProvider.java", "diffHunk": "@@ -49,4 +60,28 @@ public MedicationRequest getMedicationRequestById(@IdParam @NotNull IdType id) {\n \t\t\n \t\treturn MedicationRequest30_40.convertMedicationRequest(medicationRequest);\n \t}\n+\n+\t@Search", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMzg4NA=="}, "originalCommit": {"oid": "f80ec983ab98a6284557879a385855041192580e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0NzA0NA==", "bodyText": "No, I just don't see the R4 provider as part of this PR? At the end of the day, it's best if we have both.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r437447044", "createdAt": "2020-06-09T14:02:29Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/MedicationRequestFhirResourceProvider.java", "diffHunk": "@@ -49,4 +60,28 @@ public MedicationRequest getMedicationRequestById(@IdParam @NotNull IdType id) {\n \t\t\n \t\treturn MedicationRequest30_40.convertMedicationRequest(medicationRequest);\n \t}\n+\n+\t@Search", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMzg4NA=="}, "originalCommit": {"oid": "f80ec983ab98a6284557879a385855041192580e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTI2NTYzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/MedicationRequestFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDoxNTowOFrOGhMPMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoyNDowNlrOGh0nKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NjY5MA==", "bodyText": "@ibacher do you mean this for r4 ?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r437456690", "createdAt": "2020-06-09T14:15:08Z", "author": {"login": "reagan-meant"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/MedicationRequestFhirResourceProvider.java", "diffHunk": "@@ -48,4 +57,29 @@ public MedicationRequest getMedicationRequestByUuid(@IdParam @NotNull IdType id)\n \t\treturn medicationRequest;\n \t}\n \t\n+\t\n+\t@Search\n+\t@SuppressWarnings(\"unused\")\n+\tpublic IBundleProvider searchForMedicationRequests(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8b604465c83c40da25a96241365dc874cf165a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3NTcyNw==", "bodyText": "Yep!", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r437475727", "createdAt": "2020-06-09T14:39:50Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/MedicationRequestFhirResourceProvider.java", "diffHunk": "@@ -48,4 +57,29 @@ public MedicationRequest getMedicationRequestByUuid(@IdParam @NotNull IdType id)\n \t\treturn medicationRequest;\n \t}\n \t\n+\t\n+\t@Search\n+\t@SuppressWarnings(\"unused\")\n+\tpublic IBundleProvider searchForMedicationRequests(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NjY5MA=="}, "originalCommit": {"oid": "4e8b604465c83c40da25a96241365dc874cf165a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU0MTc4Nw==", "bodyText": "@ibacher does it satisfy the requirements?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r437541787", "createdAt": "2020-06-09T15:56:11Z", "author": {"login": "reagan-meant"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/MedicationRequestFhirResourceProvider.java", "diffHunk": "@@ -48,4 +57,29 @@ public MedicationRequest getMedicationRequestByUuid(@IdParam @NotNull IdType id)\n \t\treturn medicationRequest;\n \t}\n \t\n+\t\n+\t@Search\n+\t@SuppressWarnings(\"unused\")\n+\tpublic IBundleProvider searchForMedicationRequests(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NjY5MA=="}, "originalCommit": {"oid": "4e8b604465c83c40da25a96241365dc874cf165a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODExODE4Ng==", "bodyText": "It looks right to me", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r438118186", "createdAt": "2020-06-10T13:24:06Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/MedicationRequestFhirResourceProvider.java", "diffHunk": "@@ -48,4 +57,29 @@ public MedicationRequest getMedicationRequestByUuid(@IdParam @NotNull IdType id)\n \t\treturn medicationRequest;\n \t}\n \t\n+\t\n+\t@Search\n+\t@SuppressWarnings(\"unused\")\n+\tpublic IBundleProvider searchForMedicationRequests(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NjY5MA=="}, "originalCommit": {"oid": "4e8b604465c83c40da25a96241365dc874cf165a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTQ2MTM4OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/MedicationRequestFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo1NjowNlrOGhOM0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTo1NzozNlrOGhRftQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4ODg0OA==", "bodyText": "@reagan-meant  Can we have a get() method which just gets the resources once instead of querying the database repeatedly? Please use this comment throughout the PR.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r437488848", "createdAt": "2020-06-09T14:56:06Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/MedicationRequestFhirResourceProviderTest.java", "diffHunk": "@@ -73,4 +89,97 @@ public void getMedicationRequestByUuid_shouldThrowResourceNotFoundException() {\n \t\tMedicationRequest medicationRequest = resourceProvider.getMedicationRequestByUuid(id);\n \t\tassertThat(medicationRequest, nullValue());\n \t}\n+\n+\t\n+\t@Test\n+\tpublic void searchMedicationRequest_shouldReturnMatchingMedicationRequestUsingCode() {\n+\t\n+\t\twhen(fhirMedicationRequestService.searchForMedicationRequests(any(), any(), any(), any(), any()))\n+\t\t\t\t.thenReturn(new BaseFhirIBundleResourceProviderTest<>(Collections.singletonList(medicationRequest), 10, 1));\n+\t\t\n+\t\tTokenAndListParam code = new TokenAndListParam();\n+\t\tTokenParam codingToken = new TokenParam();\n+\t\tcodingToken.setValue(\"1000\");\n+\t\tcode.addAnd(codingToken);\n+\t\t\n+\t\tIBundleProvider results = resourceProvider.searchForMedicationRequests(null, null, null, code, null, null);\n+\t\tassertThat(results, notNullValue());\n+\t\tassertThat(results.getResources(1, 5), hasSize(equalTo(1)));\n+\t\tassertThat(results.getResources(1, 5).get(0), notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8b604465c83c40da25a96241365dc874cf165a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU0MjgzNw==", "bodyText": "Let me do so @varung-31", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/197#discussion_r437542837", "createdAt": "2020-06-09T15:57:36Z", "author": {"login": "reagan-meant"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/MedicationRequestFhirResourceProviderTest.java", "diffHunk": "@@ -73,4 +89,97 @@ public void getMedicationRequestByUuid_shouldThrowResourceNotFoundException() {\n \t\tMedicationRequest medicationRequest = resourceProvider.getMedicationRequestByUuid(id);\n \t\tassertThat(medicationRequest, nullValue());\n \t}\n+\n+\t\n+\t@Test\n+\tpublic void searchMedicationRequest_shouldReturnMatchingMedicationRequestUsingCode() {\n+\t\n+\t\twhen(fhirMedicationRequestService.searchForMedicationRequests(any(), any(), any(), any(), any()))\n+\t\t\t\t.thenReturn(new BaseFhirIBundleResourceProviderTest<>(Collections.singletonList(medicationRequest), 10, 1));\n+\t\t\n+\t\tTokenAndListParam code = new TokenAndListParam();\n+\t\tTokenParam codingToken = new TokenParam();\n+\t\tcodingToken.setValue(\"1000\");\n+\t\tcode.addAnd(codingToken);\n+\t\t\n+\t\tIBundleProvider results = resourceProvider.searchForMedicationRequests(null, null, null, code, null, null);\n+\t\tassertThat(results, notNullValue());\n+\t\tassertThat(results.getResources(1, 5), hasSize(equalTo(1)));\n+\t\tassertThat(results.getResources(1, 5).get(0), notNullValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4ODg0OA=="}, "originalCommit": {"oid": "4e8b604465c83c40da25a96241365dc874cf165a"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 922, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}