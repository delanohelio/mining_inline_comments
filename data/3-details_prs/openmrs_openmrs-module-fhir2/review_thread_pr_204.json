{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzODA2NTcy", "number": 204, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODo0ODozMVrOEFKH-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODo0ODozMVrOEFKH-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODQ0MjE2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PractitionerFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODo0ODozMVrOGjOWOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxOTowODoyM1rOGjO3dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4ODQwOQ==", "bodyText": "So we should also add support for searching by given and family as well as searching by address, address-city, address-country, address-postalcode, and address-state.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/204#discussion_r439588409", "createdAt": "2020-06-12T18:48:31Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PractitionerFhirResourceProvider.java", "diffHunk": "@@ -59,24 +60,16 @@ public Practitioner getPractitionerById(@IdParam @NotNull IdType id) {\n \t@History\n \t@SuppressWarnings(\"unused\")\n \tpublic List<Resource> getPractitionerHistoryById(@IdParam @NotNull IdType id) {\n-\t\tPractitioner practitioner = practitionerService.getPractitionerByUuid(id.getIdPart());\n+\t\tPractitioner practitioner = practitionerService.get(id.getIdPart());\n \t\tif (practitioner == null) {\n \t\t\tthrow new ResourceNotFoundException(\"Could not find practitioner with Id \" + id.getIdPart());\n \t\t}\n \t\treturn practitioner.getContained();\n \t}\n \t\n \t@Search\n-\t@SuppressWarnings(\"unused\")\n-\tpublic Bundle findPractitionersByName(@RequiredParam(name = Practitioner.SP_NAME) @NotNull String name) {\n-\t\treturn FhirProviderUtils.convertSearchResultsToBundle(practitionerService.findPractitionerByName(name));\n-\t}\n-\t\n-\t@Search\n-\t@SuppressWarnings(\"unused\")\n-\tpublic Bundle findPractitionersByIdentifier(\n-\t        @RequiredParam(name = Practitioner.SP_IDENTIFIER) @NotNull String identifier) {\n-\t\treturn FhirProviderUtils.convertSearchResultsToBundle(practitionerService.findPractitionerByIdentifier(identifier));\n+\tpublic IBundleProvider searchForPractitioners(@OptionalParam(name = Practitioner.SP_NAME) StringAndListParam name,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf748bd4afd7642aa15b2c52488a7075b4b80ce8"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5NjU2OQ==", "bodyText": "@ibacher Can i do that as a separate ticket? So that we atleast unblock the paging part.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/204#discussion_r439596569", "createdAt": "2020-06-12T19:07:35Z", "author": {"login": "varung-31"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PractitionerFhirResourceProvider.java", "diffHunk": "@@ -59,24 +60,16 @@ public Practitioner getPractitionerById(@IdParam @NotNull IdType id) {\n \t@History\n \t@SuppressWarnings(\"unused\")\n \tpublic List<Resource> getPractitionerHistoryById(@IdParam @NotNull IdType id) {\n-\t\tPractitioner practitioner = practitionerService.getPractitionerByUuid(id.getIdPart());\n+\t\tPractitioner practitioner = practitionerService.get(id.getIdPart());\n \t\tif (practitioner == null) {\n \t\t\tthrow new ResourceNotFoundException(\"Could not find practitioner with Id \" + id.getIdPart());\n \t\t}\n \t\treturn practitioner.getContained();\n \t}\n \t\n \t@Search\n-\t@SuppressWarnings(\"unused\")\n-\tpublic Bundle findPractitionersByName(@RequiredParam(name = Practitioner.SP_NAME) @NotNull String name) {\n-\t\treturn FhirProviderUtils.convertSearchResultsToBundle(practitionerService.findPractitionerByName(name));\n-\t}\n-\t\n-\t@Search\n-\t@SuppressWarnings(\"unused\")\n-\tpublic Bundle findPractitionersByIdentifier(\n-\t        @RequiredParam(name = Practitioner.SP_IDENTIFIER) @NotNull String identifier) {\n-\t\treturn FhirProviderUtils.convertSearchResultsToBundle(practitionerService.findPractitionerByIdentifier(identifier));\n+\tpublic IBundleProvider searchForPractitioners(@OptionalParam(name = Practitioner.SP_NAME) StringAndListParam name,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4ODQwOQ=="}, "originalCommit": {"oid": "bf748bd4afd7642aa15b2c52488a7075b4b80ce8"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5NjkxOQ==", "bodyText": "Ok", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/204#discussion_r439596919", "createdAt": "2020-06-12T19:08:23Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PractitionerFhirResourceProvider.java", "diffHunk": "@@ -59,24 +60,16 @@ public Practitioner getPractitionerById(@IdParam @NotNull IdType id) {\n \t@History\n \t@SuppressWarnings(\"unused\")\n \tpublic List<Resource> getPractitionerHistoryById(@IdParam @NotNull IdType id) {\n-\t\tPractitioner practitioner = practitionerService.getPractitionerByUuid(id.getIdPart());\n+\t\tPractitioner practitioner = practitionerService.get(id.getIdPart());\n \t\tif (practitioner == null) {\n \t\t\tthrow new ResourceNotFoundException(\"Could not find practitioner with Id \" + id.getIdPart());\n \t\t}\n \t\treturn practitioner.getContained();\n \t}\n \t\n \t@Search\n-\t@SuppressWarnings(\"unused\")\n-\tpublic Bundle findPractitionersByName(@RequiredParam(name = Practitioner.SP_NAME) @NotNull String name) {\n-\t\treturn FhirProviderUtils.convertSearchResultsToBundle(practitionerService.findPractitionerByName(name));\n-\t}\n-\t\n-\t@Search\n-\t@SuppressWarnings(\"unused\")\n-\tpublic Bundle findPractitionersByIdentifier(\n-\t        @RequiredParam(name = Practitioner.SP_IDENTIFIER) @NotNull String identifier) {\n-\t\treturn FhirProviderUtils.convertSearchResultsToBundle(practitionerService.findPractitionerByIdentifier(identifier));\n+\tpublic IBundleProvider searchForPractitioners(@OptionalParam(name = Practitioner.SP_NAME) StringAndListParam name,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4ODQwOQ=="}, "originalCommit": {"oid": "bf748bd4afd7642aa15b2c52488a7075b4b80ce8"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 937, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}