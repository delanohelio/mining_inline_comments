{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NDA1ODQ5", "number": 34, "title": "FM2-11 Implement the Observation Resource", "bodyText": "Description of what I changed\n\n\nThis is the initial implementation of the Observation Resource, supporting getting the Observation by UUID.\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-11\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My pull request only contains ONE single commit.\nNo? -> read here on how to squash multiple commits into one\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-01-21T16:48:45Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34", "merged": true, "mergeCommit": {"oid": "8289321969f6e1b7a1054ca693ccdcb54e34b07c"}, "closed": true, "closedAt": "2020-01-22T15:36:34Z", "author": {"login": "ibacher"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb80CF4AFqTM0NjM4MDAwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb83lJIAFqTM0NjY4MjQ5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MzgwMDAx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#pullrequestreview-346380001", "createdAt": "2020-01-22T07:09:51Z", "commit": {"oid": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzowOTo1MVrOFgSSQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzowOTo1MVrOFgSSQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM5ODMzOA==", "bodyText": "I think this should be:\n/**\n  * Maps an {@link org.hl7.fhir.r4.model.Observation.ObservationStatus} to an {@link Obs}\n  */", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369398338", "createdAt": "2020-01-22T07:09:51Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/ObservationStatusTranslator.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators;\n+\n+import org.hl7.fhir.r4.model.Observation;\n+import org.openmrs.Obs;\n+\n+public interface ObservationStatusTranslator extends ToFhirTranslator<Obs, Observation.ObservationStatus>, UpdatableOpenmrsTranslator<Obs, Observation.ObservationStatus> {\n+\t\n+\t/**\n+\t * Maps an {@link Obs} to an {@link org.hl7.fhir.r4.model.Observation.ObservationStatus}\n+\t * \n+\t * @param observation the observation to translate\n+\t * @return the corresponding observation status\n+\t */\n+\t@Override\n+\tObservation.ObservationStatus toFhirResource(Obs observation);\n+\t\n+\t/**\n+\t * Maps a FHIR resource to an OpenMRS data element\n+\t * ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NTU5MzM3", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#pullrequestreview-346559337", "createdAt": "2020-01-22T12:45:42Z", "commit": {"oid": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjo0NTo0MlrOFga1sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMzowNTo0MFrOFgbXTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzODQ4Mg==", "bodyText": "I would prefer this ordering of imports;\nblank, \njava.*, \nblank, \njavax.*, \nblank, \norg.*, \nblank, \ncom.*, \nblank, \nall other imports,\nblank,\nstatic all other\n\nWhat would you prefer?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369538482", "createdAt": "2020-01-22T12:45:42Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirObservationDaoImpl.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.dao.impl;\n+\n+import static org.hibernate.criterion.Restrictions.eq;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.hibernate.SessionFactory;\n+import org.openmrs.Obs;\n+import org.openmrs.module.fhir2.api.dao.FhirObservationDao;\n+import org.springframework.stereotype.Component;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NDg2MA==", "bodyText": "I think new Date() can be volatile", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369544860", "createdAt": "2020-01-22T13:00:40Z", "author": {"login": "corneliouzbett"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationValueTranslatorImplTest.java", "diffHunk": "@@ -0,0 +1,247 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.notNullValue;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.powermock.api.mockito.PowerMockito.mockStatic;\n+\n+import java.util.Date;\n+\n+import org.hl7.fhir.r4.model.BooleanType;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.DateTimeType;\n+import org.hl7.fhir.r4.model.IntegerType;\n+import org.hl7.fhir.r4.model.Quantity;\n+import org.hl7.fhir.r4.model.StringType;\n+import org.hl7.fhir.r4.model.Type;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.openmrs.Concept;\n+import org.openmrs.ConceptDatatype;\n+import org.openmrs.Obs;\n+import org.openmrs.api.ConceptService;\n+import org.openmrs.api.context.Context;\n+import org.openmrs.module.fhir2.api.translators.ConceptTranslator;\n+import org.powermock.core.classloader.annotations.PrepareOnlyThisForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+@RunWith(PowerMockRunner.class)\n+@PrepareOnlyThisForTest({ Context.class })\n+public class ObservationValueTranslatorImplTest {\n+\t\n+\tprivate static final String CONCEPT_VALUE_UUID = \"12345-abcde-54321\";\n+\t\n+\tprivate static final String OBS_STRING = \"An ingenious observation\";\n+\t\n+\t@Mock\n+\tprivate ConceptTranslator conceptTranslator;\n+\t\n+\tprivate Obs obs;\n+\t\n+\tprivate ObservationValueTranslatorImpl obsValueTranslator;\n+\t\n+\t@Before\n+\tpublic void setup() {\n+\t\tobsValueTranslator = new ObservationValueTranslatorImpl();\n+\t\tobsValueTranslator.setConceptTranslator(conceptTranslator);\n+\t\t\n+\t\tobs = new Obs();\n+\t}\n+\t\n+\t@Test\n+\tpublic void toFhirResource_shouldConvertObsWithCodedValueToCodeableConcept() {\n+\t\tConcept concept = new Concept();\n+\t\tconcept.setUuid(CONCEPT_VALUE_UUID);\n+\t\tobs.setValueCoded(concept);\n+\t\t\n+\t\tCodeableConcept codeableConcept = new CodeableConcept();\n+\t\tcodeableConcept.setId(CONCEPT_VALUE_UUID);\n+\t\twhen(conceptTranslator.toFhirResource(concept)).thenReturn(codeableConcept);\n+\t\t\n+\t\tType result = obsValueTranslator.toFhirResource(obs);\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result, instanceOf(CodeableConcept.class));\n+\t\tassertThat(result.getId(), equalTo(CONCEPT_VALUE_UUID));\n+\t}\n+\t\n+\t@Test\n+\tpublic void toFhirResource_shouldConvertObsWithDatetimeToDateTimeType() {\n+\t\tDate expected = new Date();\n+\t\tobs.setValueDate(expected);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NjQ5Ng==", "bodyText": "should add @Transactional\ncheckout this", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369546496", "createdAt": "2020-01-22T13:04:18Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.impl;\n+\n+import javax.inject.Inject;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Observation;\n+import org.openmrs.module.fhir2.api.FhirObservationService;\n+import org.openmrs.module.fhir2.api.dao.FhirObservationDao;\n+import org.openmrs.module.fhir2.api.translators.ObservationTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class FhirObservationServiceImpl implements FhirObservationService {\n+\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NzA4Ng==", "bodyText": "@Transactional(readOnly = true)", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369547086", "createdAt": "2020-01-22T13:05:40Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.impl;\n+\n+import javax.inject.Inject;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Observation;\n+import org.openmrs.module.fhir2.api.FhirObservationService;\n+import org.openmrs.module.fhir2.api.dao.FhirObservationDao;\n+import org.openmrs.module.fhir2.api.translators.ObservationTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class FhirObservationServiceImpl implements FhirObservationService {\n+\t\n+\t@Inject\n+\tFhirObservationDao dao;\n+\t\n+\t@Inject\n+\tObservationTranslator observationTranslator;\n+\t\n+\t@Override\n+\tpublic Observation getObservationByUuid(String uuid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/6f80745ccb36f84f46b16bc3e748a3d3d95f93cd", "committedDate": "2020-01-21T16:48:02Z", "message": "FM2-11 Implement the Observation Resource"}, "afterCommit": {"oid": "fe7a926e8121ed6e9dcc52744e3d01d676928597", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fe7a926e8121ed6e9dcc52744e3d01d676928597", "committedDate": "2020-01-22T14:12:27Z", "message": "FM2-11 Implement the Observation Resource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54b7579675f611bd533ae788294ef7f0cfcbf408", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/54b7579675f611bd533ae788294ef7f0cfcbf408", "committedDate": "2020-01-22T15:02:37Z", "message": "FM2-11 Implement the Observation Resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe7a926e8121ed6e9dcc52744e3d01d676928597", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fe7a926e8121ed6e9dcc52744e3d01d676928597", "committedDate": "2020-01-22T14:12:27Z", "message": "FM2-11 Implement the Observation Resource"}, "afterCommit": {"oid": "54b7579675f611bd533ae788294ef7f0cfcbf408", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/54b7579675f611bd533ae788294ef7f0cfcbf408", "committedDate": "2020-01-22T15:02:37Z", "message": "FM2-11 Implement the Observation Resource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83eaeec8acabd8f52308b3214bdaed6b2c633f29", "author": {"user": {"login": "corneliouzbett", "name": "Kipchumba C. Bett"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/83eaeec8acabd8f52308b3214bdaed6b2c633f29", "committedDate": "2020-01-22T15:21:21Z", "message": "Merge branch 'master' into FM2-11"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjgyNDk0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#pullrequestreview-346682494", "createdAt": "2020-01-22T15:35:44Z", "commit": {"oid": "83eaeec8acabd8f52308b3214bdaed6b2c633f29"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4358, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}