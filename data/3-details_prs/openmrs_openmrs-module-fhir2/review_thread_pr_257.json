{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTkzNzIw", "number": 257, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozODowMFrOEOw4jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMzozNlrOEO-g_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTE2NDI4OnYy", "diffSide": "RIGHT", "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozODowMFrOGyGMsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMDo1MDo0NVrOGzg0Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4MzUzOQ==", "bodyText": "It now adds the file: prefix if there is no prefix in the path, since the loadResource() method requires either classpath: or file: prefix.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455183539", "createdAt": "2020-07-15T16:38:00Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);\n+\t\n+\tprivate static boolean validatePropertiesFilePath(@NotNull String path) {\n+\t\t\n+\t\tif (path.startsWith(\"file:\")) {\n+\t\t\tString filepath = path.substring(\"file:\".length());\n+\t\t\t\n+\t\t\tif (filepath == null || filepath.trim().isEmpty()) {\n+\t\t\t\tLOGGER.error(\"Properties File path must not be empty\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\t\n+\t\t\tif (!filepath.endsWith(\".properties\")) {\n+\t\t\t\tLOGGER.error(\"Properties File must have extension '.properties'\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t} else if (path.startsWith(\"classpath:\")) {\n+\t\t\tString classpath = path.substring(\"classpath:\".length());\n+\t\t\t\n+\t\t\tif (classpath == null || classpath.trim().isEmpty()) {\n+\t\t\t\tLOGGER.error(\"Properties File classpath must not be empty\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\treturn true;\n+\t}\n+\t\n+\tpublic static String getValidatedPropertiesFilePath(String path) {\n+\t\tif (path == null || path.isEmpty()) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t\n+\t\tif (!(path.startsWith(\"file:\") || path.startsWith(\"classpath:\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxMTU5Mg==", "bodyText": "Two points on this:\n\nCould you add what you said above as a comment on this line of code.\nIsn't path = \"file:\" + path easier to read?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r456611592", "createdAt": "2020-07-17T18:38:27Z", "author": {"login": "ibacher"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);\n+\t\n+\tprivate static boolean validatePropertiesFilePath(@NotNull String path) {\n+\t\t\n+\t\tif (path.startsWith(\"file:\")) {\n+\t\t\tString filepath = path.substring(\"file:\".length());\n+\t\t\t\n+\t\t\tif (filepath == null || filepath.trim().isEmpty()) {\n+\t\t\t\tLOGGER.error(\"Properties File path must not be empty\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\t\n+\t\t\tif (!filepath.endsWith(\".properties\")) {\n+\t\t\t\tLOGGER.error(\"Properties File must have extension '.properties'\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t} else if (path.startsWith(\"classpath:\")) {\n+\t\t\tString classpath = path.substring(\"classpath:\".length());\n+\t\t\t\n+\t\t\tif (classpath == null || classpath.trim().isEmpty()) {\n+\t\t\t\tLOGGER.error(\"Properties File classpath must not be empty\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\treturn true;\n+\t}\n+\t\n+\tpublic static String getValidatedPropertiesFilePath(String path) {\n+\t\tif (path == null || path.isEmpty()) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t\n+\t\tif (!(path.startsWith(\"file:\") || path.startsWith(\"classpath:\"))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4MzUzOQ=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2MzAyNQ==", "bodyText": "Could you add what you said above as a comment on this line of code.\n\n\nOkay.\n\n\nIsn't path = \"file:\" + path easier to read?\n\n\nYeah, I'll change it to this.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r456663025", "createdAt": "2020-07-17T20:37:31Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);\n+\t\n+\tprivate static boolean validatePropertiesFilePath(@NotNull String path) {\n+\t\t\n+\t\tif (path.startsWith(\"file:\")) {\n+\t\t\tString filepath = path.substring(\"file:\".length());\n+\t\t\t\n+\t\t\tif (filepath == null || filepath.trim().isEmpty()) {\n+\t\t\t\tLOGGER.error(\"Properties File path must not be empty\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\t\n+\t\t\tif (!filepath.endsWith(\".properties\")) {\n+\t\t\t\tLOGGER.error(\"Properties File must have extension '.properties'\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t} else if (path.startsWith(\"classpath:\")) {\n+\t\t\tString classpath = path.substring(\"classpath:\".length());\n+\t\t\t\n+\t\t\tif (classpath == null || classpath.trim().isEmpty()) {\n+\t\t\t\tLOGGER.error(\"Properties File classpath must not be empty\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\treturn true;\n+\t}\n+\t\n+\tpublic static String getValidatedPropertiesFilePath(String path) {\n+\t\tif (path == null || path.isEmpty()) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t\n+\t\tif (!(path.startsWith(\"file:\") || path.startsWith(\"classpath:\"))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4MzUzOQ=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2ODI0Mg==", "bodyText": "@ibacher I've made the changes. PTAL.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r456668242", "createdAt": "2020-07-17T20:50:45Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);\n+\t\n+\tprivate static boolean validatePropertiesFilePath(@NotNull String path) {\n+\t\t\n+\t\tif (path.startsWith(\"file:\")) {\n+\t\t\tString filepath = path.substring(\"file:\".length());\n+\t\t\t\n+\t\t\tif (filepath == null || filepath.trim().isEmpty()) {\n+\t\t\t\tLOGGER.error(\"Properties File path must not be empty\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\t\n+\t\t\tif (!filepath.endsWith(\".properties\")) {\n+\t\t\t\tLOGGER.error(\"Properties File must have extension '.properties'\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t} else if (path.startsWith(\"classpath:\")) {\n+\t\t\tString classpath = path.substring(\"classpath:\".length());\n+\t\t\t\n+\t\t\tif (classpath == null || classpath.trim().isEmpty()) {\n+\t\t\t\tLOGGER.error(\"Properties File classpath must not be empty\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\treturn true;\n+\t}\n+\t\n+\tpublic static String getValidatedPropertiesFilePath(String path) {\n+\t\tif (path == null || path.isEmpty()) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t\n+\t\tif (!(path.startsWith(\"file:\") || path.startsWith(\"classpath:\"))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4MzUzOQ=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTE2NzYwOnYy", "diffSide": "RIGHT", "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozODo0NlrOGyGOqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozODo0NlrOGyGOqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4NDA0Mg==", "bodyText": "I've added few checks for the properties file.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455184042", "createdAt": "2020-07-15T16:38:46Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);\n+\t\n+\tprivate static boolean validatePropertiesFilePath(@NotNull String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTE3Mzg3OnYy", "diffSide": "RIGHT", "path": "omod/src/main/java/org/openmrs/module/fhir2/web/servlet/FhirRestServlet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo0MDozMFrOGyGSqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo0MDozMFrOGyGSqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4NTA2NQ==", "bodyText": "I've restructured this the way suggested here.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455185065", "createdAt": "2020-07-15T16:40:30Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/servlet/FhirRestServlet.java", "diffHunk": "@@ -62,8 +63,19 @@ protected void initialize() {\n \t\tsetDefaultResponseEncoding(EncodingEnum.JSON);\n \t\tregisterInterceptor(loggingInterceptor);\n \t\t\n-\t\tgetFhirContext().setNarrativeGenerator(new CustomThymeleafNarrativeGenerator(\n-\t\t        FhirConstants.HAPI_NARRATIVES_PROPERTY_FILE, FhirConstants.OPENMRS_NARRATIVES_PROPERTY_FILE));\n+\t\tString narrativesOverridePropertyFile = NarrativeUtils.getValidatedPropertiesFilePath(\n+\t\t    globalPropertyService.getGlobalProperty(FhirConstants.NARRATIVES_OVERRIDE_PROPERTY_FILE, \"\"));\n+\t\t\n+\t\tString[] narrativePropertiesFiles;\n+\t\tif (narrativesOverridePropertyFile != null) {\n+\t\t\tnarrativePropertiesFiles = new String[] { narrativesOverridePropertyFile,\n+\t\t\t        FhirConstants.HAPI_NARRATIVES_PROPERTY_FILE, FhirConstants.OPENMRS_NARRATIVES_PROPERTY_FILE };\n+\t\t} else {\n+\t\t\tnarrativePropertiesFiles = new String[] { FhirConstants.HAPI_NARRATIVES_PROPERTY_FILE,\n+\t\t\t        FhirConstants.OPENMRS_NARRATIVES_PROPERTY_FILE };\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTM4Nzg1OnYy", "diffSide": "RIGHT", "path": "omod/src/test/java/org/openmrs/module/fhir2/web/util/NarrativeUtilTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjowOToxN1rOGybZTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNzo1NDo1MFrOGyet5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMDgzMA==", "bodyText": "You could use shouldReturnNullWhenClassPathIsEmpty as the name of that method", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455530830", "createdAt": "2020-07-16T06:09:17Z", "author": {"login": "HerbertYiga"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/web/util/NarrativeUtilTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+import org.junit.Test;\n+\n+public class NarrativeUtilTest {\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenPathIsNull() {\n+\t\tString propFilePathGiven = null;\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, nullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenFilePathIsEmpty() {\n+\t\tString propFilePathGiven = \"file:\";\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, nullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenDoesNotEndWithProperties() {\n+\t\tString propFilePathGiven = \"file:somepath/which/does/not/end/with/properties/extension\";\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, nullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnFilePrefixedPathIfPrefixNotPresent() {\n+\t\tString propFilePathGiven = \"somepath/which/does/not/have/file/prefix/filename.properties\";\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, equalTo(String.join(\":\", \"file\", propFilePathGiven)));\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenClasspathIsEmpty() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU4NTI1NQ==", "bodyText": "Okay, will make the changes to this.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455585255", "createdAt": "2020-07-16T07:54:50Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/web/util/NarrativeUtilTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+import org.junit.Test;\n+\n+public class NarrativeUtilTest {\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenPathIsNull() {\n+\t\tString propFilePathGiven = null;\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, nullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenFilePathIsEmpty() {\n+\t\tString propFilePathGiven = \"file:\";\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, nullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenDoesNotEndWithProperties() {\n+\t\tString propFilePathGiven = \"file:somepath/which/does/not/end/with/properties/extension\";\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, nullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnFilePrefixedPathIfPrefixNotPresent() {\n+\t\tString propFilePathGiven = \"somepath/which/does/not/have/file/prefix/filename.properties\";\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, equalTo(String.join(\":\", \"file\", propFilePathGiven)));\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenClasspathIsEmpty() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMDgzMA=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTM5MzAxOnYy", "diffSide": "RIGHT", "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMTozMVrOGybcTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMDo1ODo1NVrOGzhBLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTU5OA==", "bodyText": "how do you see if we used logger instead of LOGGER", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455531598", "createdAt": "2020-07-16T06:11:31Z", "author": {"login": "HerbertYiga"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU4NDg5MA==", "bodyText": "Yeah, it's not a constant so I guess using logger is better. I'll use logger instead.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455584890", "createdAt": "2020-07-16T07:54:26Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTU5OA=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU5MjcwNQ==", "bodyText": "@HerbertYiga should I use log instead? I just saw that log has been used at other places in the repository.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455592705", "createdAt": "2020-07-16T08:02:13Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTU5OA=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU5NTYwMQ==", "bodyText": "true,use log", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455595601", "createdAt": "2020-07-16T08:05:09Z", "author": {"login": "HerbertYiga"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTU5OA=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYyODEzOA==", "bodyText": "@HerbertYiga I've made the changes. PTAL.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455628138", "createdAt": "2020-07-16T08:50:10Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTU5OA=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2NTA0OA==", "bodyText": "Actually, if I can suggest, just annotate the class with the @Slf4j annotation, which will magically generate the log variable for you. See here.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r456665048", "createdAt": "2020-07-17T20:42:48Z", "author": {"login": "ibacher"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTU5OA=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2ODg3Nw==", "bodyText": "Oh that's nice! Will do that.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r456668877", "createdAt": "2020-07-17T20:52:27Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTU5OA=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY3MTUzNQ==", "bodyText": "Have made the changes.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r456671535", "createdAt": "2020-07-17T20:58:55Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTU5OA=="}, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTM5Nzc0OnYy", "diffSide": "RIGHT", "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMzozNlrOGybfHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMzozNlrOGybfHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMjMxNg==", "bodyText": "hI @ibacher   How does this entire pr look to you?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455532316", "createdAt": "2020-07-16T06:13:36Z", "author": {"login": "HerbertYiga"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);\n+\t\n+\tprivate static boolean validatePropertiesFilePath(@NotNull String path) {\n+\t\t\n+\t\tif (path.startsWith(\"file:\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1022, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}