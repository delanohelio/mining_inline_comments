{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzODg4NjYy", "number": 308, "title": " FM2-307: Implementing Condition Resource for OpenMRS 2.1 And Below", "bodyText": "Description of what I changed\n\n\nIssue I worked on\n\n\n\n\nTicket: https://issues.openmrs.org/browse/FM2-307\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-11-19T11:47:24Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308", "merged": true, "mergeCommit": {"oid": "9e024e10854e76298c4bdb8936431599744d9772"}, "closed": true, "closedAt": "2021-02-01T14:42:51Z", "author": {"login": "mozzy11"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddbOJuAH2gAyNTIzODg4NjYyOjVhZDE0MDEwMjAyMzA3ZjdjNGM0MDMzOGRkNDA2NjY5NGM0YmM5YWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd14LgCAH2gAyNTIzODg4NjYyOjM0NzA0MGVjZDk2NmVkNWU5ZmI0NDZhMWNiZTUyOWY0YTIwN2I3YjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5ad14010202307f7c4c40338dd4066694c4bc9ad", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5ad14010202307f7c4c40338dd4066694c4bc9ad", "committedDate": "2020-11-17T15:23:56Z", "message": "FM2-311: Refactor to remove BaseServiceRequestTranslatorImpl (#304)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7099e872076db4c2701eefa2c6cda16dce528c36", "author": {"user": {"login": "mozzy11", "name": "Mutesasira Moses"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/7099e872076db4c2701eefa2c6cda16dce528c36", "committedDate": "2020-11-19T11:44:10Z", "message": "innitial work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44914287979a7c23e30b66e5f1b51da499007b27", "author": {"user": {"login": "mozzy11", "name": "Mutesasira Moses"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/44914287979a7c23e30b66e5f1b51da499007b27", "committedDate": "2020-12-01T19:03:48Z", "message": "clean up to fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed56c206bc4951e2fa1f9df243096b13cbc1a556", "author": {"user": {"login": "mozzy11", "name": "Mutesasira Moses"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/ed56c206bc4951e2fa1f9df243096b13cbc1a556", "committedDate": "2020-12-03T16:32:48Z", "message": "clean up and add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cae65bfabef9e6fe57e954ada5c385dab57b3966", "author": {"user": {"login": "mozzy11", "name": "Mutesasira Moses"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/cae65bfabef9e6fe57e954ada5c385dab57b3966", "committedDate": "2020-12-04T13:58:00Z", "message": "add serachQuery and Intergration Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f83bfe3af90c87f9bd46a2371922678c9b93438", "author": {"user": {"login": "mozzy11", "name": "Mutesasira Moses"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/7f83bfe3af90c87f9bd46a2371922678c9b93438", "committedDate": "2020-12-06T14:23:32Z", "message": " Intergration Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41f7b7e4aeade21f5c056a18286ea628e52789bf", "author": {"user": {"login": "mozzy11", "name": "Mutesasira Moses"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/41f7b7e4aeade21f5c056a18286ea628e52789bf", "committedDate": "2020-12-07T05:54:03Z", "message": "clean out tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MjY1ODM5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#pullrequestreview-546265839", "createdAt": "2020-12-07T15:35:06Z", "commit": {"oid": "41f7b7e4aeade21f5c056a18286ea628e52789bf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTozNTowNlrOIAsm4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo0NToyNFrOIAtFng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYwMTc2MA==", "bodyText": "Generally, we don't want to override getSearchResultsUuids() and change the implementation. The right way to do this is to add the custom logic we need to the setupSearchParams() method (which is overridable for just this purpose). That way we only keep this logic in one place.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#discussion_r537601760", "createdAt": "2020-12-07T15:35:06Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirConditionDaoImpl.java", "diffHunk": "@@ -0,0 +1,288 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.dao.impl;\n+\n+import static org.hibernate.criterion.Restrictions.and;\n+import static org.hibernate.criterion.Restrictions.eq;\n+import static org.hibernate.criterion.Restrictions.ge;\n+import static org.hibernate.criterion.Restrictions.le;\n+import static org.hibernate.criterion.Restrictions.not;\n+import static org.hibernate.criterion.Subqueries.propertyIn;\n+\n+import javax.annotation.Nonnull;\n+\n+import java.math.BigDecimal;\n+import java.time.Duration;\n+import java.time.LocalDateTime;\n+import java.time.Period;\n+import java.time.ZoneId;\n+import java.time.temporal.ChronoUnit;\n+import java.time.temporal.TemporalAmount;\n+import java.time.temporal.TemporalUnit;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import ca.uhn.fhir.rest.param.DateRangeParam;\n+import ca.uhn.fhir.rest.param.ParamPrefixEnum;\n+import ca.uhn.fhir.rest.param.QuantityAndListParam;\n+import ca.uhn.fhir.rest.param.QuantityParam;\n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hibernate.Criteria;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.criterion.Criterion;\n+import org.hibernate.criterion.DetachedCriteria;\n+import org.hibernate.criterion.Projections;\n+import org.openmrs.Obs;\n+import org.openmrs.Retireable;\n+import org.openmrs.Voidable;\n+import org.openmrs.annotation.Authorized;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.api.dao.FhirConditionDao;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n+import org.openmrs.module.fhir2.api.util.LocalDateTimeFactory;\n+import org.openmrs.util.PrivilegeConstants;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PUBLIC)\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.0.5 - 2.1.*\")\n+public class FhirConditionDaoImpl extends BaseFhirDao<Obs> implements FhirConditionDao<Obs> {\n+\t\n+\t@Qualifier(\"sessionFactory\")\n+\t@Autowired\n+\tprivate SessionFactory sessionFactory;\n+\t\n+\tprivate final boolean isRetireable;\n+\t\n+\tprivate final boolean isVoidable;\n+\t\n+\tprotected FhirConditionDaoImpl() {\n+\t\tthis.isRetireable = Retireable.class.isAssignableFrom(typeToken.getRawType());\n+\t\tthis.isVoidable = Voidable.class.isAssignableFrom(typeToken.getRawType());\n+\t};\n+\t\n+\tprivate LocalDateTimeFactory localDateTimeFactory;\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.GET_OBS)\n+\tpublic Obs get(@Nonnull String uuid) {\n+\t\treturn super.get(uuid);\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.EDIT_OBS)\n+\tpublic Obs createOrUpdate(@Nonnull Obs newEntry) {\n+\t\treturn super.createOrUpdate(newEntry);\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.DELETE_OBS)\n+\tpublic Obs delete(@Nonnull String uuid) {\n+\t\treturn super.delete(uuid);\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.GET_OBS)\n+\tpublic List<String> getSearchResultUuids(@Nonnull SearchParameterMap theParams) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41f7b7e4aeade21f5c056a18286ea628e52789bf"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYwNzEyOA==", "bodyText": "It would be safer to use the UUID for the concept (\"1284AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\") since we don't want to be relying on a concept having a given concept id (i.e., we don't want to rely on a dictionary having IDs in a certain order). Even better might be to just be to leverage the system for CIEL and the concept ID, via something like:\nTokenAndListParam problemList = new TokenAndListParam();\n\t\tproblemList.addAnd(new TokenParam().setSystem(\"https://openconceptlab.org/orgs/CIEL/sources/CIEL\").setValue(\"1284\"));\n\t\thandleCodeableConcept(criteria, problemList, \"c\", \"cm\", \"crt\");\nThen this \"1284\" string would have a place in the FhirConstants file.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#discussion_r537607128", "createdAt": "2020-12-07T15:42:06Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirConstants.java", "diffHunk": "@@ -277,4 +277,6 @@\n \tpublic static final String INCLUDE_RESULT_PARAM = \"result\";\n \t\n \tpublic static final String REVERSE_INCLUDE_SEARCH_HANDLER = \"_revinclude.search.handler\";\n+\t\n+\tpublic static final Integer CONDITION_OBSERVATION_CONCEPT_ID = 1284;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41f7b7e4aeade21f5c056a18286ea628e52789bf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYwNzM3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            </dataset>\n          \n          \n            \n            </dataset>", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#discussion_r537607373", "createdAt": "2020-12-07T15:42:23Z", "author": {"login": "ibacher"}, "path": "test-data/src/test/resources/org/openmrs/module/fhir2/api/dao/impl/FhirObsConditionDaoImplTest_initial_data.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<!--\n+    This Source Code Form is subject to the terms of the Mozilla Public License,\n+    v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+    obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+    the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+\n+    Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+    graphic logo is a trademark of OpenMRS Inc.\n+-->\n+<dataset>\n+    <concept concept_id=\"116128\" retired=\"false\" datatype_id=\"4\" class_id=\"4\" is_set=\"false\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" version=\"\" uuid=\"116128AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"/>\n+\t<concept_description concept_description_id=\"116128\" concept_id=\"116128\" description=\"Malaria\" locale=\"en_GB\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" uuid=\"4639FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"/>\n+\t<concept_name concept_name_id=\"116128\" concept_id=\"116128\" name=\"Malaria\" locale=\"en_GB\" concept_name_type=\"FULLY_SPECIFIED\" locale_preferred=\"1\" voided=\"false\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" uuid=\"16603BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"/>\n+\t<concept concept_id=\"1284\" retired=\"false\" datatype_id=\"4\" class_id=\"4\" is_set=\"false\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" version=\"\" uuid=\"1284AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"/>\n+\t<concept_description concept_description_id=\"1284\" concept_id=\"1284\" description=\"PROBLEM LIST\" locale=\"en_GB\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" uuid=\"1284FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"/>\n+\t<concept_name concept_name_id=\"1284\" concept_id=\"1284\" name=\"PROBLEM LIST\" locale=\"en_GB\" concept_name_type=\"FULLY_SPECIFIED\" locale_preferred=\"1\" voided=\"false\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" uuid=\"1284BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"/>\n+    <concept_map_type concept_map_type_id=\"1\" name=\"SAME-AS\" creator=\"1\" date_created=\"2020-04-02 00:00:00.0\" changed_by=\"1\" is_hidden=\"false\" retired=\"false\" retired_by=\"1\" uuid=\"35543629-7d8c-11e1-909d-c80aa9edcf4ex\"/>\n+    <concept_reference_source concept_source_id=\"1\" name=\"ICD-10-WHO\" description=\"SNOMED Preferred mapping\" hl7_code=\"SCT\" creator=\"1\" date_created=\"2009-11-19 20:19:16.0\" retired=\"false\" retired_by=\"1\" uuid=\"1ADDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\" />\n+    <concept_reference_term concept_reference_term_id=\"1\" concept_source_id=\"1\" code=\"C00\" creator=\"1\" date_created=\"2010-04-25 00:00:00.0\" changed_by=\"1\" retired=\"false\" retired_by=\"1\" uuid=\"8211fc83-6c63-38c1-b2ce-108aeee34ea6\"/>\n+    <concept_reference_map concept_map_id=\"93972\" creator=\"1\" date_created=\"2010-04-25 11:39:31.0\" concept_id=\"116128\" uuid=\"93972ABBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\" concept_reference_term_id=\"1\" concept_map_type_id=\"1\" changed_by=\"1\"/>\n+    <obs obs_id=\"30\" person_id=\"7\" concept_id=\"1284\" encounter_id=\"3\" obs_datetime=\"2008-07-01 00:00:00.0\" location_id=\"1\"  comments=\"\" creator=\"1\" date_created=\"2008-08-18 14:09:35.0\" voided=\"false\" value_coded=\"116128\"   uuid=\"86sgf-1f7d-4394-a316-0a458edf28c4\"/>\n+\t<obs obs_id=\"31\" person_id=\"7\" concept_id=\"1284\" encounter_id=\"3\" obs_datetime=\"2008-07-01 00:00:00.0\" location_id=\"1\"  comments=\"\" creator=\"1\" date_created=\"2008-08-18 14:09:35.0\" voided=\"false\" value_coded=\"116128\"   uuid=\"86sgf-1f7d-4394-a316-0a458edf28c7\"/>\n+    <obs obs_id=\"32\" person_id=\"7\" concept_id=\"116128\" encounter_id=\"3\" obs_datetime=\"2008-07-01 10:00:00.0\" location_id=\"1\"  comments=\"\" creator=\"1\" date_created=\"2008-08-18 14:09:35.0\" voided=\"false\"  value_coded=\"116128\" uuid=\"942ec003-a55d-43c4-ac7a-bd6d1ba63382\"/>\n+    <obs obs_id=\"33\" person_id=\"7\" concept_id=\"1284\" encounter_id=\"3\" obs_datetime=\"2008-07-01 10:00:00.0\" location_id=\"1\"  comments=\"\" creator=\"1\" date_voided=\"2010-09-03 14:09:35.0\" date_created=\"2008-08-18 14:09:35.0\" voided=\"true\"  value_coded=\"116128\" uuid=\"94dhs003-a55d-43c4-ac7a-bd6d1ba63388\"/>\t\n+    <fhir_concept_source fhir_concept_source_id=\"1\" name=\"Some Made-up Terminology\" url=\"http://made_up_concepts.info/sct\" concept_source_id=\"1\" creator=\"1\" date_created=\"2005-01-01 00:00:00.0\" retired=\"0\" uuid=\"0d30bea3-4ba2-4ab4-ac7b-5525840bde20\" />\t\n+</dataset>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41f7b7e4aeade21f5c056a18286ea628e52789bf"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYwOTYzMA==", "bodyText": "It might be better to refactor things so this method is in BaseDao and can be used from both this class and the 2.2 and later implementation.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#discussion_r537609630", "createdAt": "2020-12-07T15:45:24Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirConditionDaoImpl.java", "diffHunk": "@@ -0,0 +1,288 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.dao.impl;\n+\n+import static org.hibernate.criterion.Restrictions.and;\n+import static org.hibernate.criterion.Restrictions.eq;\n+import static org.hibernate.criterion.Restrictions.ge;\n+import static org.hibernate.criterion.Restrictions.le;\n+import static org.hibernate.criterion.Restrictions.not;\n+import static org.hibernate.criterion.Subqueries.propertyIn;\n+\n+import javax.annotation.Nonnull;\n+\n+import java.math.BigDecimal;\n+import java.time.Duration;\n+import java.time.LocalDateTime;\n+import java.time.Period;\n+import java.time.ZoneId;\n+import java.time.temporal.ChronoUnit;\n+import java.time.temporal.TemporalAmount;\n+import java.time.temporal.TemporalUnit;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import ca.uhn.fhir.rest.param.DateRangeParam;\n+import ca.uhn.fhir.rest.param.ParamPrefixEnum;\n+import ca.uhn.fhir.rest.param.QuantityAndListParam;\n+import ca.uhn.fhir.rest.param.QuantityParam;\n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hibernate.Criteria;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.criterion.Criterion;\n+import org.hibernate.criterion.DetachedCriteria;\n+import org.hibernate.criterion.Projections;\n+import org.openmrs.Obs;\n+import org.openmrs.Retireable;\n+import org.openmrs.Voidable;\n+import org.openmrs.annotation.Authorized;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.api.dao.FhirConditionDao;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n+import org.openmrs.module.fhir2.api.util.LocalDateTimeFactory;\n+import org.openmrs.util.PrivilegeConstants;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PUBLIC)\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.0.5 - 2.1.*\")\n+public class FhirConditionDaoImpl extends BaseFhirDao<Obs> implements FhirConditionDao<Obs> {\n+\t\n+\t@Qualifier(\"sessionFactory\")\n+\t@Autowired\n+\tprivate SessionFactory sessionFactory;\n+\t\n+\tprivate final boolean isRetireable;\n+\t\n+\tprivate final boolean isVoidable;\n+\t\n+\tprotected FhirConditionDaoImpl() {\n+\t\tthis.isRetireable = Retireable.class.isAssignableFrom(typeToken.getRawType());\n+\t\tthis.isVoidable = Voidable.class.isAssignableFrom(typeToken.getRawType());\n+\t};\n+\t\n+\tprivate LocalDateTimeFactory localDateTimeFactory;\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.GET_OBS)\n+\tpublic Obs get(@Nonnull String uuid) {\n+\t\treturn super.get(uuid);\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.EDIT_OBS)\n+\tpublic Obs createOrUpdate(@Nonnull Obs newEntry) {\n+\t\treturn super.createOrUpdate(newEntry);\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.DELETE_OBS)\n+\tpublic Obs delete(@Nonnull String uuid) {\n+\t\treturn super.delete(uuid);\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.GET_OBS)\n+\tpublic List<String> getSearchResultUuids(@Nonnull SearchParameterMap theParams) {\n+\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(Obs.class);\n+\t\tcriteria.add(eq(\"concept.conceptId\", FhirConstants.CONDITION_OBSERVATION_CONCEPT_ID));\n+\t\t\n+\t\tDetachedCriteria detachedCriteria = DetachedCriteria.forClass(Obs.class);\n+\t\tCriteria detachedExecutableCriteria = detachedCriteria.getExecutableCriteria(sessionFactory.getCurrentSession());\n+\t\t\n+\t\tif (isVoidable) {\n+\t\t\thandleVoidable(detachedExecutableCriteria);\n+\t\t} else if (isRetireable) {\n+\t\t\thandleRetireable(detachedExecutableCriteria);\n+\t\t}\n+\t\t\n+\t\tsetupSearchParams(detachedExecutableCriteria, theParams);\n+\t\thandleSort(detachedExecutableCriteria, theParams.getSortSpec());\n+\t\t\n+\t\tdetachedCriteria.setProjection(Projections.property(\"uuid\"));\n+\t\t\n+\t\tcriteria.add(propertyIn(\"uuid\", detachedCriteria));\n+\t\tcriteria.setProjection(Projections.groupProperty(\"uuid\"));\n+\t\t\n+\t\t@SuppressWarnings(\"unchecked\")\n+\t\tList<String> results = criteria.list();\n+\t\t\n+\t\treturn results;\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.GET_OBS)\n+\tpublic List<Obs> getSearchResults(@Nonnull SearchParameterMap theParams, @Nonnull List<String> matchingResourceUuids,\n+\t        int firstResult, int lastResult) {\n+\t\treturn super.getSearchResults(theParams, matchingResourceUuids, firstResult, lastResult);\n+\t}\n+\t\n+\tprivate Optional<Criterion> handleAgeByDateProperty(@Nonnull String datePropertyName, @Nonnull QuantityParam age) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41f7b7e4aeade21f5c056a18286ea628e52789bf"}, "originalPosition": 134}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35d725425cdb959f2db83d8eeb9ef9b9b74d5d8d", "author": {"user": {"login": "mozzy11", "name": "Mutesasira Moses"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/35d725425cdb959f2db83d8eeb9ef9b9b74d5d8d", "committedDate": "2020-12-08T13:44:35Z", "message": "refactor as per review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "313f73616026b7a699cc5409d7de9632377be03d", "author": {"user": {"login": "mozzy11", "name": "Mutesasira Moses"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/313f73616026b7a699cc5409d7de9632377be03d", "committedDate": "2020-12-08T14:06:15Z", "message": "pull latest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MzE3MzY2", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#pullrequestreview-547317366", "createdAt": "2020-12-08T15:00:32Z", "commit": {"oid": "313f73616026b7a699cc5409d7de9632377be03d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTowMDozMlrOIBhftw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTowMjo1NVrOIBhpjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ2ODI3OQ==", "bodyText": "In this case, because the clinicalStatus is not a required field and we do not really have a way of representing it solely from the Obs, I would prefer that this implementation just return null. That is, if we do not know the right value, we shouldn't lie about knowing the right value (unless we're forced to guess).", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#discussion_r538468279", "createdAt": "2020-12-08T15:00:32Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ConditionClinicalStatusTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.api.translators.ConditionClinicalStatusTranslator;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.0.5 - 2.1.*\")\n+public class ConditionClinicalStatusTranslatorImpl implements ConditionClinicalStatusTranslator<Obs> {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs clinicalStatus) {\n+\t\tCodeableConcept codeableConcept = new CodeableConcept();\n+\t\tcodeableConcept.addCoding().setCode(\"active\").setDisplay(\"active\")\n+\t\t        .setSystem(FhirConstants.CONDITION_CLINICAL_STATUS_SYSTEM_URI);\n+\t\treturn codeableConcept;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313f73616026b7a699cc5409d7de9632377be03d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ3MDc5OA==", "bodyText": "I'd prefer this to be aliased to \"c\" for consistency. Also, this should go before the forEach block.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#discussion_r538470798", "createdAt": "2020-12-08T15:02:55Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirConditionDaoImpl.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.dao.impl;\n+\n+import static org.hibernate.criterion.Restrictions.eq;\n+\n+import javax.annotation.Nonnull;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import ca.uhn.fhir.rest.param.DateRangeParam;\n+import ca.uhn.fhir.rest.param.QuantityAndListParam;\n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hibernate.Criteria;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.criterion.Criterion;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.Authorized;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.api.dao.FhirConditionDao;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n+import org.openmrs.util.PrivilegeConstants;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PUBLIC)\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.0.5 - 2.1.*\")\n+public class FhirConditionDaoImpl extends BaseFhirDao<Obs> implements FhirConditionDao<Obs> {\n+\t\n+\t@Qualifier(\"sessionFactory\")\n+\t@Autowired\n+\tprivate SessionFactory sessionFactory;\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.GET_OBS)\n+\tpublic Obs get(@Nonnull String uuid) {\n+\t\treturn super.get(uuid);\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.EDIT_OBS)\n+\tpublic Obs createOrUpdate(@Nonnull Obs newEntry) {\n+\t\treturn super.createOrUpdate(newEntry);\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.DELETE_OBS)\n+\tpublic Obs delete(@Nonnull String uuid) {\n+\t\treturn super.delete(uuid);\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.GET_OBS)\n+\tpublic List<String> getSearchResultUuids(@Nonnull SearchParameterMap theParams) {\n+\t\treturn super.getSearchResultUuids(theParams);\n+\t}\n+\t\n+\t@Override\n+\t@Authorized(PrivilegeConstants.GET_OBS)\n+\tpublic List<Obs> getSearchResults(@Nonnull SearchParameterMap theParams, @Nonnull List<String> matchingResourceUuids,\n+\t        int firstResult, int lastResult) {\n+\t\treturn super.getSearchResults(theParams, matchingResourceUuids, firstResult, lastResult);\n+\t}\n+\t\n+\t@Override\n+\tprotected void setupSearchParams(Criteria criteria, SearchParameterMap theParams) {\n+\t\ttheParams.getParameters().forEach(entry -> {\n+\t\t\tswitch (entry.getKey()) {\n+\t\t\t\tcase FhirConstants.PATIENT_REFERENCE_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(\n+\t\t\t\t\t    param -> handlePatientReference(criteria, (ReferenceAndListParam) param.getParam(), \"person\"));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.CODED_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(param -> handleCode(criteria, (TokenAndListParam) param.getParam()));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.DATE_RANGE_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue()\n+\t\t\t\t\t        .forEach(param -> handleDateRange(param.getPropertyName(), (DateRangeParam) param.getParam())\n+\t\t\t\t\t                .ifPresent(criteria::add));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.QUANTITY_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(param -> handleOnsetAge(criteria, (QuantityAndListParam) param.getParam()));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.COMMON_SEARCH_HANDLER:\n+\t\t\t\t\thandleCommonSearchParameters(entry.getValue()).ifPresent(criteria::add);\n+\t\t\t\t\tbreak;\n+\t\t\t}\n+\t\t});\n+\t\tcriteria.createAlias(\"concept\", \"conc\");\n+\t\tcriteria.add(eq(\"conc.uuid\", FhirConstants.CONDITION_OBSERVATION_CONCEPT_UUID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313f73616026b7a699cc5409d7de9632377be03d"}, "originalPosition": 104}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a9c3e20661b44bbe651341dc21bb853661d8e99", "author": {"user": {"login": "mozzy11", "name": "Mutesasira Moses"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/0a9c3e20661b44bbe651341dc21bb853661d8e99", "committedDate": "2020-12-08T17:09:32Z", "message": "remove condition clinical status"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68f538af6080e9bb16188c06c04101000e011dec", "author": {"user": {"login": "mozzy11", "name": "Mutesasira Moses"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/68f538af6080e9bb16188c06c04101000e011dec", "committedDate": "2020-12-08T17:54:33Z", "message": "fix failing test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwNDE5MTU2", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#pullrequestreview-580419156", "createdAt": "2021-02-01T14:41:30Z", "commit": {"oid": "68f538af6080e9bb16188c06c04101000e011dec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxNDo0MTozMFrOIdkWcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxNDo0MTozMFrOIdkWcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Nzg3NTE4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            </dataset>\n          \n          \n            \n            </dataset>", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#discussion_r567875185", "createdAt": "2021-02-01T14:41:30Z", "author": {"login": "ibacher"}, "path": "test-data/src/test/resources/org/openmrs/module/fhir2/api/dao/impl/FhirObsConditionDaoImplTest_initial_data.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<!--\n+    This Source Code Form is subject to the terms of the Mozilla Public License,\n+    v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+    obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+    the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+\n+    Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+    graphic logo is a trademark of OpenMRS Inc.\n+-->\n+<dataset>\n+    <concept concept_id=\"116128\" retired=\"false\" datatype_id=\"4\" class_id=\"4\" is_set=\"false\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" version=\"\" uuid=\"116128AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"/>\n+\t<concept_description concept_description_id=\"116128\" concept_id=\"116128\" description=\"Malaria\" locale=\"en_GB\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" uuid=\"4639FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"/>\n+\t<concept_name concept_name_id=\"116128\" concept_id=\"116128\" name=\"Malaria\" locale=\"en_GB\" concept_name_type=\"FULLY_SPECIFIED\" locale_preferred=\"1\" voided=\"false\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" uuid=\"16603BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"/>\n+\t<concept concept_id=\"1284\" retired=\"false\" datatype_id=\"4\" class_id=\"4\" is_set=\"false\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" version=\"\" uuid=\"1284AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"/>\n+\t<concept_description concept_description_id=\"1284\" concept_id=\"1284\" description=\"PROBLEM LIST\" locale=\"en_GB\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" uuid=\"1284FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"/>\n+\t<concept_name concept_name_id=\"1284\" concept_id=\"1284\" name=\"PROBLEM LIST\" locale=\"en_GB\" concept_name_type=\"FULLY_SPECIFIED\" locale_preferred=\"1\" voided=\"false\" creator=\"1\" date_created=\"2008-08-15 15:27:51.0\" uuid=\"1284BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"/>\n+    <concept_map_type concept_map_type_id=\"1\" name=\"SAME-AS\" creator=\"1\" date_created=\"2020-04-02 00:00:00.0\" changed_by=\"1\" is_hidden=\"false\" retired=\"false\" retired_by=\"1\" uuid=\"35543629-7d8c-11e1-909d-c80aa9edcf4ex\"/>\n+    <concept_reference_source concept_source_id=\"1\" name=\"ICD-10-WHO\" description=\"SNOMED Preferred mapping\" hl7_code=\"SCT\" creator=\"1\" date_created=\"2009-11-19 20:19:16.0\" retired=\"false\" retired_by=\"1\" uuid=\"1ADDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\" />\n+    <concept_reference_term concept_reference_term_id=\"1\" concept_source_id=\"1\" code=\"C00\" creator=\"1\" date_created=\"2010-04-25 00:00:00.0\" changed_by=\"1\" retired=\"false\" retired_by=\"1\" uuid=\"8211fc83-6c63-38c1-b2ce-108aeee34ea6\"/>\n+    <concept_reference_map concept_map_id=\"93972\" creator=\"1\" date_created=\"2010-04-25 11:39:31.0\" concept_id=\"116128\" uuid=\"93972ABBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\" concept_reference_term_id=\"1\" concept_map_type_id=\"1\" changed_by=\"1\"/>\n+    <obs obs_id=\"30\" person_id=\"7\" concept_id=\"1284\" encounter_id=\"3\" obs_datetime=\"2008-07-01 00:00:00.0\" location_id=\"1\"  comments=\"\" creator=\"1\" date_created=\"2008-08-18 14:09:35.0\" voided=\"false\" value_coded=\"116128\"   uuid=\"86sgf-1f7d-4394-a316-0a458edf28c4\"/>\n+\t<obs obs_id=\"31\" person_id=\"7\" concept_id=\"1284\" encounter_id=\"3\" obs_datetime=\"2008-07-01 00:00:00.0\" location_id=\"1\"  comments=\"\" creator=\"1\" date_created=\"2008-08-18 14:09:35.0\" voided=\"false\" value_coded=\"116128\"   uuid=\"86sgf-1f7d-4394-a316-0a458edf28c7\"/>\n+    <obs obs_id=\"32\" person_id=\"7\" concept_id=\"116128\" encounter_id=\"3\" obs_datetime=\"2008-07-01 10:00:00.0\" location_id=\"1\"  comments=\"\" creator=\"1\" date_created=\"2008-08-18 14:09:35.0\" voided=\"false\"  value_coded=\"116128\" uuid=\"942ec003-a55d-43c4-ac7a-bd6d1ba63382\"/>\n+    <obs obs_id=\"33\" person_id=\"7\" concept_id=\"1284\" encounter_id=\"3\" obs_datetime=\"2008-07-01 10:00:00.0\" location_id=\"1\"  comments=\"\" creator=\"1\" date_voided=\"2010-09-03 14:09:35.0\" date_created=\"2008-08-18 14:09:35.0\" voided=\"true\"  value_coded=\"116128\" uuid=\"94dhs003-a55d-43c4-ac7a-bd6d1ba63388\"/>\t\n+    <fhir_concept_source fhir_concept_source_id=\"1\" name=\"Some Made-up Terminology\" url=\"http://made_up_concepts.info/sct\" concept_source_id=\"1\" creator=\"1\" date_created=\"2005-01-01 00:00:00.0\" retired=\"0\" uuid=\"0d30bea3-4ba2-4ab4-ac7b-5525840bde20\" />\t\n+</dataset>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f538af6080e9bb16188c06c04101000e011dec"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwNDE5MzQ5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#pullrequestreview-580419349", "createdAt": "2021-02-01T14:41:40Z", "commit": {"oid": "68f538af6080e9bb16188c06c04101000e011dec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxNDo0MTo0MFrOIdkW6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxNDo0MTo0MFrOIdkW6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Nzg3NTMwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            </Condition>\n          \n          \n            \n            </Condition>", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#discussion_r567875305", "createdAt": "2021-02-01T14:41:40Z", "author": {"login": "ibacher"}, "path": "test-data/src/test/resources/org/openmrs/module/fhir2/providers/ConditionWebTest_create_r3.xml", "diffHunk": "@@ -27,5 +27,5 @@\n         </identifier>\n         <display value=\"Horatio Hornblower (OpenMRS ID:101-6)\"/>\n     </subject>\n-    <recordedDate value=\"2019-06-18T06:37:26+03:00\"/>\n+    <onsetDateTime value=\"2019-06-18T06:37:26+03:00\"/>\n </Condition>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f538af6080e9bb16188c06c04101000e011dec"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwNDE5NTMy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/308#pullrequestreview-580419532", "createdAt": "2021-02-01T14:41:51Z", "commit": {"oid": "68f538af6080e9bb16188c06c04101000e011dec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "347040ecd966ed5e9fb446a1cbe529f4a207b7b2", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/347040ecd966ed5e9fb446a1cbe529f4a207b7b2", "committedDate": "2021-02-01T14:42:28Z", "message": "Apply suggestions from code review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4002, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}