{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMDA1MzQ2", "number": 199, "title": "FM2-205: Update medication resource to support paging", "bodyText": "Description of what I changed\n\n\nUpdate medication resource to return paged search results\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-205\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-06-09T18:59:54Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/199", "merged": true, "mergeCommit": {"oid": "253622b77ede8521a80420c5147ce23f249a178f"}, "closed": true, "closedAt": "2020-06-26T14:11:29Z", "author": {"login": "varung-31"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpp2cSgFqTQyNzQ1NjY2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvDHzvABqjM0ODY1NzM3MjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NDU2NjY3", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/199#pullrequestreview-427456667", "createdAt": "2020-06-09T19:02:33Z", "commit": {"oid": "0da995b551fa1f59437825d2088de05add07dd6e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTowMjozM1rOGhYO1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTowMjozM1rOGhYO1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY1MzIwNQ==", "bodyText": "@ibacher I added the following implementation to allow search by ingredient_code. But while running the unit tests, I get an  Ambiguous column name \"CONCEPT_ID\"; error. Not sure why this is happening.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/199#discussion_r437653205", "createdAt": "2020-06-09T19:02:33Z", "author": {"login": "varung-31"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirMedicationDaoImpl.java", "diffHunk": "@@ -34,18 +34,36 @@ public Drug createOrUpdate(Drug drug) {\n \t\t\n \t\treturn drug;\n \t}\n-\t\n+\n \t@Override\n-\tpublic Collection<Drug> searchForMedications(TokenAndListParam code, TokenAndListParam dosageForm,\n-\t        TokenAndListParam ingredientCode, TokenAndListParam status) {\n-\t\tCriteria criteria = getSessionFactory().getCurrentSession().createCriteria(Drug.class);\n-\t\thandleMedicationCode(criteria, code);\n-\t\thandleMedicationDosageForm(criteria, dosageForm);\n-\t\thandleBoolean(\"retired\", convertStringStatusToBoolean(status)).ifPresent(criteria::add);\n-\t\t\n-\t\treturn criteria.list();\n+\tprotected void setupSearchParams(Criteria criteria, SearchParameterMap theParams) {\n+\t\ttheParams.getParameters().forEach(entry -> {\n+\t\t\tswitch (entry.getKey()) {\n+\t\t\t\tcase FhirConstants.CODED_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(param -> handleMedicationCode(criteria, (TokenAndListParam) param.getParam()));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.DOSAGE_FORM_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(param -> handleMedicationDosageForm(criteria, (TokenAndListParam) param.getParam()));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.INGREDIENT_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(param -> handleIngredientCode(criteria, (TokenAndListParam) param.getParam()));\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase FhirConstants.BOOLEAN_SEARCH_HANDLER:\n+\t\t\t\t\tentry.getValue().forEach(param -> handleBoolean(\"retired\", convertStringStatusToBoolean((TokenAndListParam) param.getParam())).ifPresent(criteria::add));\n+\t\t\t\t\tbreak;\n+\t\t\t}\n+\t\t});\n \t}\n-\t\n+\n+\tprivate void handleIngredientCode(Criteria criteria, TokenAndListParam ingredientCode) {\n+\t\tif (ingredientCode != null) {\n+\t\t\tcriteria.createAlias(\"ingredients\", \"i\");\n+\t\t\tcriteria.createAlias(\"i.ingredient\", \"ic\");\n+\n+\t\t\thandleCodeableConcept(criteria, ingredientCode, \"ic\", \"icm\", \"icrt\").ifPresent(criteria::add);\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0da995b551fa1f59437825d2088de05add07dd6e"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NDU3OTk3", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/199#pullrequestreview-427457997", "createdAt": "2020-06-09T19:04:20Z", "commit": {"oid": "0da995b551fa1f59437825d2088de05add07dd6e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTowNDoyMFrOGhYSlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTowNDoyMFrOGhYSlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY1NDE2Ng==", "bodyText": "This is the test which gives me the ambiguous column name error.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/199#discussion_r437654166", "createdAt": "2020-06-09T19:04:20Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/MedicationSearchQueryImplTest.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package org.openmrs.module.fhir2.api.search;\n+\n+import static org.hamcrest.CoreMatchers.equalTo;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+\n+import java.util.List;\n+\n+import ca.uhn.fhir.rest.api.server.IBundleProvider;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n+import ca.uhn.fhir.rest.param.TokenOrListParam;\n+import ca.uhn.fhir.rest.param.TokenParam;\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.Medication;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.Drug;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.TestFhirSpringConfiguration;\n+import org.openmrs.module.fhir2.api.dao.FhirMedicationDao;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n+import org.openmrs.module.fhir2.api.translators.MedicationTranslator;\n+import org.openmrs.test.BaseModuleContextSensitiveTest;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+\n+@ContextConfiguration(classes = TestFhirSpringConfiguration.class, inheritLocations = false)\n+public class MedicationSearchQueryImplTest extends BaseModuleContextSensitiveTest {\n+\n+\tprivate static final String CONCEPT_UUID = \"0f97e14e-cdc2-49ac-9255-b5126f8a5147\";\n+\n+\tprivate static final String WRONG_CONCEPT_UUID = \"0f97e14e-gdsh-49ac-9255-b5126f8a5147\";\n+\n+\tprivate static final String DOSAGE_FORM_UUID = \"e10ffe54-5184-4efe-8960-cd565ec1cdf8\";\n+\n+\tprivate static final String WRONG_DOSAGE_FORM_UUID = \"e10ffe54-5184-4efe-8960-cd565ds1cdf8\";\n+\n+\tprivate static final String INGREDIENT_CODE_UUID = \"d198bec0-d9c5-11e3-9c1a-0800200c9a66\";\n+\n+\tprivate static final String WRONG_INGREDIENT_CODE_UUID = \"d198bec0-d9c5-11e3-9c1a-dsh0200c9a66\";\n+\n+\tprivate static final String MEDICATION_INITIAL_DATA_XML = \"org/openmrs/module/fhir2/api/dao/impl/FhirMedicationDaoImplTest_initial_data.xml\";\n+\n+\tprivate static final int START_INDEX = 0;\n+\n+\tprivate static final int END_INDEX = 10;\n+\n+\t@Autowired\n+\tprivate FhirMedicationDao dao;\n+\n+\t@Autowired\n+\tprivate MedicationTranslator translator;\n+\n+\t@Autowired\n+\tprivate SearchQuery<Drug, Medication, FhirMedicationDao, MedicationTranslator> searchQuery;\n+\n+\t@Before\n+\tpublic void setup() throws Exception {\n+\t\texecuteDataSet(MEDICATION_INITIAL_DATA_XML);\n+\t}\n+\n+\tprivate IBundleProvider search(SearchParameterMap theParams) {\n+\t\treturn searchQuery.getQueryResults(theParams, dao, translator);\n+\t}\n+\n+\tprivate List<IBaseResource> get(IBundleProvider results) {\n+\t\treturn results.getResources(START_INDEX, END_INDEX);\n+\t}\n+\n+\t@Test\n+\tpublic void searchForMedications_shouldSearchMedicationsByCode() {\n+\t\tTokenAndListParam code = new TokenAndListParam();\n+\t\tcode.addAnd(new TokenOrListParam().addOr(new TokenParam().setValue(CONCEPT_UUID)));\n+\n+\t\tSearchParameterMap theParams = new SearchParameterMap().addParameter(FhirConstants.CODED_SEARCH_HANDLER, code);\n+\n+\t\tIBundleProvider result = search(theParams);\n+\n+\t\tList<IBaseResource> resultList = get(result);\n+\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(resultList.size(), greaterThanOrEqualTo(1));\n+\t\tassertThat(((Medication) resultList.iterator().next()).getCode().getCodingFirstRep().getCode(), equalTo(CONCEPT_UUID));\n+\t}\n+\n+\t@Test\n+\tpublic void searchForMedications_shouldSearchMedicationsByWrongCode() {\n+\t\tTokenAndListParam code = new TokenAndListParam();\n+\t\tcode.addAnd(new TokenOrListParam().addOr(new TokenParam().setValue(WRONG_CONCEPT_UUID)));\n+\n+\t\tSearchParameterMap theParams = new SearchParameterMap().addParameter(FhirConstants.CODED_SEARCH_HANDLER, code);\n+\n+\t\tIBundleProvider result = search(theParams);\n+\n+\t\tList<IBaseResource> resultList = get(result);\n+\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(resultList.size(), equalTo(0));\n+\t}\n+\n+\t@Test\n+\tpublic void searchForMedications_shouldSearchMedicationsByDosageForm() {\n+\t\tTokenAndListParam dosageForm = new TokenAndListParam();\n+\t\tdosageForm.addAnd(new TokenOrListParam().addOr(new TokenParam().setValue(DOSAGE_FORM_UUID)));\n+\n+\t\tSearchParameterMap theParams = new SearchParameterMap().addParameter(FhirConstants.DOSAGE_FORM_SEARCH_HANDLER, dosageForm);\n+\n+\t\tIBundleProvider result = search(theParams);\n+\n+\t\tList<IBaseResource> resultList = get(result);\n+\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(resultList.size(), greaterThanOrEqualTo(1));\n+\t\tassertThat(((Medication) resultList.iterator().next()).getForm().getCodingFirstRep().getCode(), equalTo(DOSAGE_FORM_UUID));\n+\t}\n+\n+\t@Test\n+\tpublic void searchForMedications_shouldSearchMedicationsByWrongDosageForm() {\n+\t\tTokenAndListParam dosageForm = new TokenAndListParam();\n+\t\tdosageForm.addAnd(new TokenOrListParam().addOr(new TokenParam().setValue(WRONG_DOSAGE_FORM_UUID)));\n+\n+\t\tSearchParameterMap theParams = new SearchParameterMap().addParameter(FhirConstants.DOSAGE_FORM_SEARCH_HANDLER, dosageForm);\n+\n+\t\tIBundleProvider result = search(theParams);\n+\n+\t\tList<IBaseResource> resultList = get(result);\n+\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(resultList.size(), equalTo(0));\n+\t}\n+\n+\t@Test\n+\tpublic void searchForMedications_shouldSearchMedicationsByIngredientCode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0da995b551fa1f59437825d2088de05add07dd6e"}, "originalPosition": 134}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0da995b551fa1f59437825d2088de05add07dd6e", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/0da995b551fa1f59437825d2088de05add07dd6e", "committedDate": "2020-06-09T18:57:38Z", "message": "FM2-205: Update medication resource to support paging"}, "afterCommit": {"oid": "2dc3860c68247705f5002b01607d0c0a6b728b7f", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2dc3860c68247705f5002b01607d0c0a6b728b7f", "committedDate": "2020-06-20T13:19:59Z", "message": "FM2-205: Update medication resource to support paging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MDM3NDg5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/199#pullrequestreview-438037489", "createdAt": "2020-06-26T06:14:31Z", "commit": {"oid": "2dc3860c68247705f5002b01607d0c0a6b728b7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26867ff7a5118bc1d3d96f992e5ef337e51d7134", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/26867ff7a5118bc1d3d96f992e5ef337e51d7134", "committedDate": "2020-06-26T13:16:38Z", "message": "FM2-205: Update medication resource to support paging"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2dc3860c68247705f5002b01607d0c0a6b728b7f", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2dc3860c68247705f5002b01607d0c0a6b728b7f", "committedDate": "2020-06-20T13:19:59Z", "message": "FM2-205: Update medication resource to support paging"}, "afterCommit": {"oid": "26867ff7a5118bc1d3d96f992e5ef337e51d7134", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/26867ff7a5118bc1d3d96f992e5ef337e51d7134", "committedDate": "2020-06-26T13:16:38Z", "message": "FM2-205: Update medication resource to support paging"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4058, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}