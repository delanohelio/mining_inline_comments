{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwOTM0NTYw", "number": 233, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoxNzoyNlrOEJlaoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoxNzoyNlrOEJlaoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDg1NjY1OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/DiagnosticReportSearchQueryImplTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoxNzoyNlrOGqJm6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMTozNDo1NVrOGqMsbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1MDc5Mg==", "bodyText": "Remove the comments", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/233#discussion_r446850792", "createdAt": "2020-06-29T08:17:26Z", "author": {"login": "corneliouzbett"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/DiagnosticReportSearchQueryImplTest.java", "diffHunk": "@@ -333,6 +335,24 @@ public void searchForDiagnosticReports_shouldReturnCorrectObsByPatientName() {\n \t\t    equalTo(DIAGNOSTIC_REPORT_UUID));\n \t}\n \t\n+\t@Test\n+\tpublic void searchForDiagnosticReports_shouldSearchForUniqueObsByPatientName() {\n+\t\tReferenceParam patientReference = new ReferenceParam(Patient.SP_NAME, \"Horatio Hornblower\");\n+\t\tReferenceAndListParam patientList = new ReferenceAndListParam();\n+\t\tpatientList.addValue(new ReferenceOrListParam().add(patientReference));\n+\t\t\n+\t\tSearchParameterMap theParams = new SearchParameterMap().addParameter(FhirConstants.PATIENT_REFERENCE_SEARCH_HANDLER,\n+\t\t    patientList);\n+\t\t\n+\t\tIBundleProvider results = search(theParams);\n+\t\t\n+\t\tassertThat(results, notNullValue());\n+\t\tassertThat(results.size(), equalTo(1));\n+\t\t\n+\t\tSet<String> resultSet = new HashSet<>(dao.getResultUuids(theParams));\n+\t\tassertThat(resultSet.size(), equalTo(1)); // 3 with repetitions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb51db7a4a131cb8ec0f0ae7f9172af4dda98932"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1ODUzNQ==", "bodyText": "I think the comments here justify that we are indeed not getting repeated results and should be kept. What do you think?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/233#discussion_r446858535", "createdAt": "2020-06-29T08:30:44Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/DiagnosticReportSearchQueryImplTest.java", "diffHunk": "@@ -333,6 +335,24 @@ public void searchForDiagnosticReports_shouldReturnCorrectObsByPatientName() {\n \t\t    equalTo(DIAGNOSTIC_REPORT_UUID));\n \t}\n \t\n+\t@Test\n+\tpublic void searchForDiagnosticReports_shouldSearchForUniqueObsByPatientName() {\n+\t\tReferenceParam patientReference = new ReferenceParam(Patient.SP_NAME, \"Horatio Hornblower\");\n+\t\tReferenceAndListParam patientList = new ReferenceAndListParam();\n+\t\tpatientList.addValue(new ReferenceOrListParam().add(patientReference));\n+\t\t\n+\t\tSearchParameterMap theParams = new SearchParameterMap().addParameter(FhirConstants.PATIENT_REFERENCE_SEARCH_HANDLER,\n+\t\t    patientList);\n+\t\t\n+\t\tIBundleProvider results = search(theParams);\n+\t\t\n+\t\tassertThat(results, notNullValue());\n+\t\tassertThat(results.size(), equalTo(1));\n+\t\t\n+\t\tSet<String> resultSet = new HashSet<>(dao.getResultUuids(theParams));\n+\t\tassertThat(resultSet.size(), equalTo(1)); // 3 with repetitions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1MDc5Mg=="}, "originalCommit": {"oid": "bb51db7a4a131cb8ec0f0ae7f9172af4dda98932"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkwMTM1Ng==", "bodyText": "That's fine with me \ud83d\udc4c", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/233#discussion_r446901356", "createdAt": "2020-06-29T11:34:55Z", "author": {"login": "corneliouzbett"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/DiagnosticReportSearchQueryImplTest.java", "diffHunk": "@@ -333,6 +335,24 @@ public void searchForDiagnosticReports_shouldReturnCorrectObsByPatientName() {\n \t\t    equalTo(DIAGNOSTIC_REPORT_UUID));\n \t}\n \t\n+\t@Test\n+\tpublic void searchForDiagnosticReports_shouldSearchForUniqueObsByPatientName() {\n+\t\tReferenceParam patientReference = new ReferenceParam(Patient.SP_NAME, \"Horatio Hornblower\");\n+\t\tReferenceAndListParam patientList = new ReferenceAndListParam();\n+\t\tpatientList.addValue(new ReferenceOrListParam().add(patientReference));\n+\t\t\n+\t\tSearchParameterMap theParams = new SearchParameterMap().addParameter(FhirConstants.PATIENT_REFERENCE_SEARCH_HANDLER,\n+\t\t    patientList);\n+\t\t\n+\t\tIBundleProvider results = search(theParams);\n+\t\t\n+\t\tassertThat(results, notNullValue());\n+\t\tassertThat(results.size(), equalTo(1));\n+\t\t\n+\t\tSet<String> resultSet = new HashSet<>(dao.getResultUuids(theParams));\n+\t\tassertThat(resultSet.size(), equalTo(1)); // 3 with repetitions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1MDc5Mg=="}, "originalCommit": {"oid": "bb51db7a4a131cb8ec0f0ae7f9172af4dda98932"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 997, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}