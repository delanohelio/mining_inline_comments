{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NjIyMzI4", "number": 111, "title": "Optimize database operations in allergy intolerance resource", "bodyText": "Description of what I changed\nI optimize database operations in allergy intolerance resource\n\n\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-113\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My pull request only contains ONE single commit.\nNo? -> read here on how to squash multiple commits into one\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-03-09T14:30:48Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111", "merged": true, "mergeCommit": {"oid": "283323a083d50a801b25146db20fa0b4e94f1f24"}, "closed": true, "closedAt": "2020-03-17T17:59:21Z", "author": {"login": "jecihjoy"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMLp_wAFqTM3MTY4NDU1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOmlekgFqTM3NjI3NjQ2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNjg0NTUy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#pullrequestreview-371684552", "createdAt": "2020-03-10T05:08:54Z", "commit": {"oid": "809d6aca01956975da40f6ead0aa5f94fdb0b9c7"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNTowODo1NFrOF0BrKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNToyNzozNlrOF0B7iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5NzcwNg==", "bodyText": "Is this part of the optimization? If not, You should remove it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r390097706", "createdAt": "2020-03-10T05:08:54Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirTaskDaoImpl.java", "diffHunk": "@@ -78,7 +78,8 @@ public FhirTask getTaskByUuid(String uuid) {\n \t\t// TODO: Handle optional params\n \t\t// Task.basedOn\n \t\tif (validReferenceParam(basedOnReference)) {\n-\t\t\tcriteria.createAlias(\"basedOnReferences\", \"bo\").add(Restrictions.eq(\"bo.reference\", basedOnReference.getIdPart()))\n+\t\t\tcriteria.createAlias(\"basedOnReferences\", \"bo\")\n+\t\t\t        .add(Restrictions.eq(\"bo.reference\", basedOnReference.getIdPart()))\n \t\t\t        .add(Restrictions.eq(\"bo.type\", basedOnReference.getResourceType()));\n \t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "809d6aca01956975da40f6ead0aa5f94fdb0b9c7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMDI4NA==", "bodyText": "What if  severityConceptUuids.size() == 3. This will return null which should not be the case. It should still return switch for the 3 UUIDs in the array and return there the concept", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r390100284", "createdAt": "2020-03-10T05:20:56Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -213,49 +215,46 @@ private CodeableConcept getManifestation(List<AllergyReaction> reactions) {\n \t}\n \t\n \tprivate AllergyIntolerance.AllergyIntoleranceSeverity getFhirSeverity(Concept severityConcept) {\n-\t\tif (severityConcept == null) {\n+\t\tgetSeverityConceptUuids();\n+\t\t\n+\t\tif (severityConcept == null || severityConceptUuids.size() < 4) {\n \t\t\treturn null;\n \t\t}\n \t\t\n-\t\tif (globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_MILD, \"\")\n-\t\t        .equals(severityConcept.getUuid())) {\n+\t\tif (severityConcept.getUuid().equals(severityConceptUuids.get(0))) {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.MILD;\n-\t\t} else if (globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_MODERATE, \"\")\n-\t\t        .equals(severityConcept.getUuid())) {\n+\t\t} else if (severityConcept.getUuid().equals(severityConceptUuids.get(1))) {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.MODERATE;\n-\t\t} else if (globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_SEVERE, \"\")\n-\t\t        .equals(severityConcept.getUuid())) {\n+\t\t} else if (severityConcept.getUuid().equals(severityConceptUuids.get(2))) {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.SEVERE;\n \t\t} else {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.NULL;\n \t\t}\n \t}\n \t\n \tprivate Concept getOpenmrsSeverity(AllergyIntolerance.AllergyIntoleranceSeverity severity) {\n-\t\tConcept concept;\n+\t\tgetSeverityConceptUuids();\n+\t\t\n+\t\tif (severityConceptUuids.size() < 4) {\n+\t\t\treturn null;\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "809d6aca01956975da40f6ead0aa5f94fdb0b9c7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMTE2NQ==", "bodyText": "You should be checking if the severityConceptUuids array is not empty", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r390101165", "createdAt": "2020-03-10T05:24:28Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -213,49 +215,46 @@ private CodeableConcept getManifestation(List<AllergyReaction> reactions) {\n \t}\n \t\n \tprivate AllergyIntolerance.AllergyIntoleranceSeverity getFhirSeverity(Concept severityConcept) {\n-\t\tif (severityConcept == null) {\n+\t\tgetSeverityConceptUuids();\n+\t\t\n+\t\tif (severityConcept == null || severityConceptUuids.size() < 4) {\n \t\t\treturn null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "809d6aca01956975da40f6ead0aa5f94fdb0b9c7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMTg5Nw==", "bodyText": "globalPropertyService.getGlobalProperties(FhirConstants.GLOBAL_PROPERTY_MILD,\n\t\t    FhirConstants.GLOBAL_PROPERTY_MODERATE, FhirConstants.GLOBAL_PROPERTY_SEVERE,\n\t\t    FhirConstants.GLOBAL_PROPERTY_OTHER);\nThis method filters out null global properties. So there is a probability that size of results will not be 4 always", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r390101897", "createdAt": "2020-03-10T05:27:36Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -213,49 +215,46 @@ private CodeableConcept getManifestation(List<AllergyReaction> reactions) {\n \t}\n \t\n \tprivate AllergyIntolerance.AllergyIntoleranceSeverity getFhirSeverity(Concept severityConcept) {\n-\t\tif (severityConcept == null) {\n+\t\tgetSeverityConceptUuids();\n+\t\t\n+\t\tif (severityConcept == null || severityConceptUuids.size() < 4) {\n \t\t\treturn null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMTE2NQ=="}, "originalCommit": {"oid": "809d6aca01956975da40f6ead0aa5f94fdb0b9c7"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "809d6aca01956975da40f6ead0aa5f94fdb0b9c7", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/809d6aca01956975da40f6ead0aa5f94fdb0b9c7", "committedDate": "2020-03-09T14:29:55Z", "message": "Optimize database operations in allergy intolerance resource"}, "afterCommit": {"oid": "d4aebd0a7672c258f7055994edc51a1491192fd7", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d4aebd0a7672c258f7055994edc51a1491192fd7", "committedDate": "2020-03-10T10:28:01Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4aebd0a7672c258f7055994edc51a1491192fd7", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d4aebd0a7672c258f7055994edc51a1491192fd7", "committedDate": "2020-03-10T10:28:01Z", "message": "Optimize database operations in allergy intolerance resource"}, "afterCommit": {"oid": "393fdd0bb6b971681d5407c6e8209c82b9cb2dad", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/393fdd0bb6b971681d5407c6e8209c82b9cb2dad", "committedDate": "2020-03-10T10:28:28Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "393fdd0bb6b971681d5407c6e8209c82b9cb2dad", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/393fdd0bb6b971681d5407c6e8209c82b9cb2dad", "committedDate": "2020-03-10T10:28:28Z", "message": "Optimize database operations in allergy intolerance resource"}, "afterCommit": {"oid": "55c0d0148d6404d500ec76d07b11ab47e5060521", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/55c0d0148d6404d500ec76d07b11ab47e5060521", "committedDate": "2020-03-10T10:36:16Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55c0d0148d6404d500ec76d07b11ab47e5060521", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/55c0d0148d6404d500ec76d07b11ab47e5060521", "committedDate": "2020-03-10T10:36:16Z", "message": "Optimize database operations in allergy intolerance resource"}, "afterCommit": {"oid": "1bb9d60a24965ab9b4e344842ea33a1b5104d8e8", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/1bb9d60a24965ab9b4e344842ea33a1b5104d8e8", "committedDate": "2020-03-10T11:58:21Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1bb9d60a24965ab9b4e344842ea33a1b5104d8e8", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/1bb9d60a24965ab9b4e344842ea33a1b5104d8e8", "committedDate": "2020-03-10T11:58:21Z", "message": "Optimize database operations in allergy intolerance resource"}, "afterCommit": {"oid": "839dac94b469f5ceca9363e82136ae1fbc3e5f12", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/839dac94b469f5ceca9363e82136ae1fbc3e5f12", "committedDate": "2020-03-10T11:59:07Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "839dac94b469f5ceca9363e82136ae1fbc3e5f12", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/839dac94b469f5ceca9363e82136ae1fbc3e5f12", "committedDate": "2020-03-10T11:59:07Z", "message": "Optimize database operations in allergy intolerance resource"}, "afterCommit": {"oid": "d03a6eb063bb80e69d403601653f6a0d1da66f99", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d03a6eb063bb80e69d403601653f6a0d1da66f99", "committedDate": "2020-03-10T12:14:50Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxOTMwOTk5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#pullrequestreview-371930999", "createdAt": "2020-03-10T13:05:49Z", "commit": {"oid": "d03a6eb063bb80e69d403601653f6a0d1da66f99"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzowNTo0OVrOF0N3uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzowNTo0OVrOF0N3uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI5NzUzMQ==", "bodyText": "Instead, utilize Stream API\nglobalProperties.stream().filter(p -> p != null).map(GlobalProperty::getPropertyValue)\n\t\t        .collect(Collectors.toMap(p::getProperty(), p::getPropertyValue()));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r390297531", "createdAt": "2020-03-10T13:05:49Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirGlobalPropertyDaoImpl.java", "diffHunk": "@@ -47,10 +46,16 @@ public GlobalProperty getGlobalPropertyObject(String property) {\n \t}\n \t\n \t@Override\n-\tpublic List<String> getGlobalProperties(String... properties) {\n+\tpublic HashMap<String, String> getGlobalProperties(String... properties) {\n+\t\tHashMap<String, String> globalPropertiesMap = new HashMap<>();\n+\t\t\n \t\tCollection<GlobalProperty> globalProperties = (sessionFactory.getCurrentSession()\n \t\t        .createCriteria(GlobalProperty.class).add(Restrictions.in(\"property\", properties)).list());\n-\t\treturn globalProperties.stream().filter(p -> p != null).map(GlobalProperty::getPropertyValue)\n-\t\t        .collect(Collectors.toList());\n+\t\t\n+\t\tfor (GlobalProperty property : globalProperties) {\n+\t\t\tglobalPropertiesMap.put(property.getProperty(), property.getPropertyValue());\n+\t\t}\n+\t\t\n+\t\treturn globalPropertiesMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d03a6eb063bb80e69d403601653f6a0d1da66f99"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDQ2MjE3", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#pullrequestreview-373046217", "createdAt": "2020-03-11T19:06:11Z", "commit": {"oid": "d03a6eb063bb80e69d403601653f6a0d1da66f99"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTowNjoxMVrOF1E5aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTowNzoyM1rOF1E72Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5OTA4MQ==", "bodyText": "Prefer Map to HashMap here", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r391199081", "createdAt": "2020-03-11T19:06:11Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirGlobalPropertyService.java", "diffHunk": "@@ -9,7 +9,7 @@\n  */\n package org.openmrs.module.fhir2.api;\n \n-import java.util.List;\n+import java.util.HashMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d03a6eb063bb80e69d403601653f6a0d1da66f99"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5OTQzMw==", "bodyText": "I'd still have this return a Map<String, String> rather than HashMap<String, String>", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r391199433", "createdAt": "2020-03-11T19:06:53Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirGlobalPropertyDaoImpl.java", "diffHunk": "@@ -47,10 +46,16 @@ public GlobalProperty getGlobalPropertyObject(String property) {\n \t}\n \t\n \t@Override\n-\tpublic List<String> getGlobalProperties(String... properties) {\n+\tpublic HashMap<String, String> getGlobalProperties(String... properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d03a6eb063bb80e69d403601653f6a0d1da66f99"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5OTcwNQ==", "bodyText": "I'd take these out of the PR. It's going to be changed in a different commit and will just cause a conflict later.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r391199705", "createdAt": "2020-03-11T19:07:23Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirTaskDaoImpl.java", "diffHunk": "@@ -78,7 +78,8 @@ public FhirTask getTaskByUuid(String uuid) {\n \t\t// TODO: Handle optional params\n \t\t// Task.basedOn\n \t\tif (validReferenceParam(basedOnReference)) {\n-\t\t\tcriteria.createAlias(\"basedOnReferences\", \"bo\").add(Restrictions.eq(\"bo.reference\", basedOnReference.getIdPart()))\n+\t\t\tcriteria.createAlias(\"basedOnReferences\", \"bo\")\n+\t\t\t        .add(Restrictions.eq(\"bo.reference\", basedOnReference.getIdPart()))\n \t\t\t        .add(Restrictions.eq(\"bo.type\", basedOnReference.getResourceType()));\n \t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5NzcwNg=="}, "originalCommit": {"oid": "809d6aca01956975da40f6ead0aa5f94fdb0b9c7"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d03a6eb063bb80e69d403601653f6a0d1da66f99", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d03a6eb063bb80e69d403601653f6a0d1da66f99", "committedDate": "2020-03-10T12:14:50Z", "message": "Optimize database operations in allergy intolerance resource"}, "afterCommit": {"oid": "f400fac1f75da11b5c68a6b14443b2d64280cded", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f400fac1f75da11b5c68a6b14443b2d64280cded", "committedDate": "2020-03-12T12:13:16Z", "message": "Optimize application reloads using spring dev tools"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjI5MTE2", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#pullrequestreview-373629116", "createdAt": "2020-03-12T14:54:52Z", "commit": {"oid": "f400fac1f75da11b5c68a6b14443b2d64280cded"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1NDo1M1rOF1iHUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTowMjoyNFrOF1icbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3Nzc3Nw==", "bodyText": "We should first check if the severityConcept is null and abort if that's the case.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r391677777", "createdAt": "2020-03-12T14:54:53Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -213,49 +216,52 @@ private CodeableConcept getManifestation(List<AllergyReaction> reactions) {\n \t}\n \t\n \tprivate AllergyIntolerance.AllergyIntoleranceSeverity getFhirSeverity(Concept severityConcept) {\n-\t\tif (severityConcept == null) {\n+\t\t\n+\t\tgetSeverityConceptUuids();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f400fac1f75da11b5c68a6b14443b2d64280cded"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3ODc3OA==", "bodyText": "I'd also add an exit condition upfront for if severity is null.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r391678778", "createdAt": "2020-03-12T14:56:13Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -213,49 +216,52 @@ private CodeableConcept getManifestation(List<AllergyReaction> reactions) {\n \t}\n \t\n \tprivate AllergyIntolerance.AllergyIntoleranceSeverity getFhirSeverity(Concept severityConcept) {\n-\t\tif (severityConcept == null) {\n+\t\t\n+\t\tgetSeverityConceptUuids();\n+\t\t\n+\t\tif (severityConcept == null || severityConceptUuids.isEmpty()) {\n \t\t\treturn null;\n \t\t}\n \t\t\n-\t\tif (globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_MILD, \"\")\n-\t\t        .equals(severityConcept.getUuid())) {\n+\t\tif (severityConcept.getUuid().equals(severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_MILD))) {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.MILD;\n-\t\t} else if (globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_MODERATE, \"\")\n-\t\t        .equals(severityConcept.getUuid())) {\n+\t\t} else if (severityConcept.getUuid().equals(severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_MODERATE))) {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.MODERATE;\n-\t\t} else if (globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_SEVERE, \"\")\n-\t\t        .equals(severityConcept.getUuid())) {\n+\t\t} else if (severityConcept.getUuid().equals(severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_SEVERE))) {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.SEVERE;\n \t\t} else {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.NULL;\n \t\t}\n \t}\n \t\n \tprivate Concept getOpenmrsSeverity(AllergyIntolerance.AllergyIntoleranceSeverity severity) {\n-\t\tConcept concept;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f400fac1f75da11b5c68a6b14443b2d64280cded"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY4MzE4Mw==", "bodyText": "Could we add some tests that cover the handleServerity method, especially for the different severity levels?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r391683183", "createdAt": "2020-03-12T15:02:24Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirAllergyIntoleranceDaoImpl.java", "diffHunk": "@@ -129,13 +129,13 @@ private void handleAllergen(Criteria criteria, TokenOrListParam code) {\n \t\t\t\t        .fromCode(token.getValue());\n \t\t\t\tswitch (severity) {\n \t\t\t\t\tcase MILD:\n-\t\t\t\t\t\treturn Optional.of(eq(\"c.uuid\", severityConceptUuids.get(0)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f400fac1f75da11b5c68a6b14443b2d64280cded"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f400fac1f75da11b5c68a6b14443b2d64280cded", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f400fac1f75da11b5c68a6b14443b2d64280cded", "committedDate": "2020-03-12T12:13:16Z", "message": "Optimize application reloads using spring dev tools"}, "afterCommit": {"oid": "8ed7e56370e5ab21326797da033922042bd927ee", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/8ed7e56370e5ab21326797da033922042bd927ee", "committedDate": "2020-03-13T13:41:54Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ed7e56370e5ab21326797da033922042bd927ee", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/8ed7e56370e5ab21326797da033922042bd927ee", "committedDate": "2020-03-13T13:41:54Z", "message": "Optimize database operations in allergy intolerance resource"}, "afterCommit": {"oid": "2cf766748e629924e4dc255314f0a02f2f1adad0", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2cf766748e629924e4dc255314f0a02f2f1adad0", "committedDate": "2020-03-13T13:54:00Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cf766748e629924e4dc255314f0a02f2f1adad0", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2cf766748e629924e4dc255314f0a02f2f1adad0", "committedDate": "2020-03-13T13:54:00Z", "message": "Optimize database operations in allergy intolerance resource"}, "afterCommit": {"oid": "ed7618ef008723ef52357fbd2a022ddb1ce28671", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/ed7618ef008723ef52357fbd2a022ddb1ce28671", "committedDate": "2020-03-17T14:39:51Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MTA0MTIz", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#pullrequestreview-376104123", "createdAt": "2020-03-17T14:46:22Z", "commit": {"oid": "ed7618ef008723ef52357fbd2a022ddb1ce28671"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo0NjoyMlrOF3flAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1MDoxOFrOF3fwig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczMzM3Nw==", "bodyText": "I don't think we want this as a class variable. It should just be a local variable in the one function that uses it.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r393733377", "createdAt": "2020-03-17T14:46:22Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirAllergyIntoleranceDaoImpl.java", "diffHunk": "@@ -45,7 +46,7 @@\n \t@Inject\n \tprivate FhirGlobalPropertyService globalPropertyService;\n \t\n-\tprivate List<String> severityConceptUuids;\n+\tprivate Map<String, String> severityConceptUuids;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed7618ef008723ef52357fbd2a022ddb1ce28671"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczNDMzOA==", "bodyText": "I'm not sure I understand why you've changed this method?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r393734338", "createdAt": "2020-03-17T14:47:32Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirAllergyIntoleranceDaoImpl.java", "diffHunk": "@@ -101,44 +102,43 @@ private void handleAllergen(Criteria criteria, TokenOrListParam code) {\n \t\t\t\t        .fromCode(token.getValue());\n \t\t\t\tswitch (severity) {\n \t\t\t\t\tcase MILD:\n-\t\t\t\t\t\treturn Optional.of(eq(\"sc.uuid\", severityConceptUuids.get(0)));\n+\t\t\t\t\t\treturn Optional.of(eq(\"sc.uuid\", severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_MILD)));\n \t\t\t\t\tcase MODERATE:\n-\t\t\t\t\t\treturn Optional.of(eq(\"sc.uuid\", severityConceptUuids.get(1)));\n+\t\t\t\t\t\treturn Optional.of(eq(\"sc.uuid\", severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_MODERATE)));\n \t\t\t\t\tcase SEVERE:\n-\t\t\t\t\t\treturn Optional.of(eq(\"sc.uuid\", severityConceptUuids.get(2)));\n+\t\t\t\t\t\treturn Optional.of(eq(\"sc.uuid\", severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_SEVERE)));\n \t\t\t\t\tcase NULL:\n-\t\t\t\t\t\treturn Optional.of(eq(\"sc.uuid\", severityConceptUuids.get(3)));\n+\t\t\t\t\t\treturn Optional.of(eq(\"sc.uuid\", severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_OTHER)));\n \t\t\t\t}\n \t\t\t}\n \t\t\tcatch (FHIRException ignored) {}\n \t\t\treturn Optional.empty();\n \t\t});\n \t}\n \t\n-\tprivate Optional<Criterion> handleAllergenCategory(String propertyName, TokenOrListParam categoryParam) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed7618ef008723ef52357fbd2a022ddb1ce28671"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczNjMzMA==", "bodyText": "Instead of setting a class variable, just return the map from this function and use it as a local variable where needed. Storing state in DAO objects is a bad idea (what happens if the DAO needs to be called simultaneously for two different queries?)", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#discussion_r393736330", "createdAt": "2020-03-17T14:50:18Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -217,45 +220,54 @@ private CodeableConcept getManifestation(List<AllergyReaction> reactions) {\n \t\t\treturn null;\n \t\t}\n \t\t\n-\t\tif (globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_MILD, \"\")\n-\t\t        .equals(severityConcept.getUuid())) {\n+\t\tgetSeverityConceptUuids();\n+\t\t\n+\t\tif (severityConceptUuids.isEmpty()) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t\n+\t\tif (severityConcept.getUuid().equals(severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_MILD))) {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.MILD;\n-\t\t} else if (globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_MODERATE, \"\")\n-\t\t        .equals(severityConcept.getUuid())) {\n+\t\t} else if (severityConcept.getUuid().equals(severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_MODERATE))) {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.MODERATE;\n-\t\t} else if (globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_SEVERE, \"\")\n-\t\t        .equals(severityConcept.getUuid())) {\n+\t\t} else if (severityConcept.getUuid().equals(severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_SEVERE))) {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.SEVERE;\n \t\t} else {\n \t\t\treturn AllergyIntolerance.AllergyIntoleranceSeverity.NULL;\n \t\t}\n \t}\n \t\n \tprivate Concept getOpenmrsSeverity(AllergyIntolerance.AllergyIntoleranceSeverity severity) {\n-\t\tConcept concept;\n+\t\tif (severity == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t\n+\t\tgetSeverityConceptUuids();\n+\t\t\n+\t\tif (severityConceptUuids.isEmpty()) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t\n \t\tswitch (severity) {\n \t\t\tcase MILD:\n-\t\t\t\tconcept = conceptService\n-\t\t\t\t        .getConceptByUuid(globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_MILD))\n+\t\t\t\treturn conceptService.getConceptByUuid(severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_MILD))\n \t\t\t\t        .orElse(null);\n-\t\t\t\tbreak;\n \t\t\tcase MODERATE:\n-\t\t\t\tconcept = conceptService\n-\t\t\t\t        .getConceptByUuid(globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_MODERATE))\n+\t\t\t\treturn conceptService.getConceptByUuid(severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_MODERATE))\n \t\t\t\t        .orElse(null);\n-\t\t\t\tbreak;\n \t\t\tcase SEVERE:\n-\t\t\t\tconcept = conceptService\n-\t\t\t\t        .getConceptByUuid(globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_SEVERE))\n+\t\t\t\treturn conceptService.getConceptByUuid(severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_SEVERE))\n \t\t\t\t        .orElse(null);\n-\t\t\t\tbreak;\n \t\t\tcase NULL:\n \t\t\tdefault:\n-\t\t\t\tconcept = conceptService\n-\t\t\t\t        .getConceptByUuid(globalPropertyService.getGlobalProperty(FhirConstants.GLOBAL_PROPERTY_OTHER))\n+\t\t\t\treturn conceptService.getConceptByUuid(severityConceptUuids.get(FhirConstants.GLOBAL_PROPERTY_OTHER))\n \t\t\t\t        .orElse(null);\n \t\t}\n-\t\treturn concept;\n \t}\n \t\n+\tprivate void getSeverityConceptUuids() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed7618ef008723ef52357fbd2a022ddb1ce28671"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18af71b1f2c31905c61619b883b3fb57f318dd24", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/18af71b1f2c31905c61619b883b3fb57f318dd24", "committedDate": "2020-03-17T15:51:38Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed7618ef008723ef52357fbd2a022ddb1ce28671", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/ed7618ef008723ef52357fbd2a022ddb1ce28671", "committedDate": "2020-03-17T14:39:51Z", "message": "Optimize database operations in allergy intolerance resource"}, "afterCommit": {"oid": "18af71b1f2c31905c61619b883b3fb57f318dd24", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/18af71b1f2c31905c61619b883b3fb57f318dd24", "committedDate": "2020-03-17T15:51:38Z", "message": "Optimize database operations in allergy intolerance resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2Mjc2NDY0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/111#pullrequestreview-376276464", "createdAt": "2020-03-17T17:58:21Z", "commit": {"oid": "18af71b1f2c31905c61619b883b3fb57f318dd24"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4256, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}