{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MzkyMzk3", "number": 213, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0MToyNFrOEGM12w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1NDo1MFrOEGNA7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTM3MzA3OnYy", "diffSide": "RIGHT", "path": "api-2.2/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirConditionDaoImpl_2_2.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0MToyNFrOGk2WpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0MToyNFrOGk2WpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MjQ1Mw==", "bodyText": "These changes aren't part of Task resource. You should move to a different commit, PR", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/213#discussion_r441292453", "createdAt": "2020-06-17T05:41:24Z", "author": {"login": "corneliouzbett"}, "path": "api-2.2/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirConditionDaoImpl_2_2.java", "diffHunk": "@@ -151,7 +151,7 @@ protected void setupSearchParams(Criteria criteria, SearchParameterMap theParams\n \t\t\t\tcase FhirConstants.CODED_SEARCH_HANDLER:\n \t\t\t\t\tentry.getValue().forEach(param -> handleCode(criteria, (TokenAndListParam) param.getParam()));\n \t\t\t\t\tbreak;\n-\t\t\t\tcase FhirConstants.CONDITION_CLINICAL_STATUS_HANDLER:\n+\t\t\t\tcase FhirConstants.STATUS_SEARCH_HANDLER:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f495f0c57a9e1309ca39575e3f2c09a62fdede"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTM3Mzc4OnYy", "diffSide": "RIGHT", "path": "api-2.2/src/main/java/org/openmrs/module/fhir2/api/impl/FhirConditionServiceImpl_2_2.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0MTo0MlrOGk2XDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0MTo0MlrOGk2XDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MjU1OA==", "bodyText": "Ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/213#discussion_r441292558", "createdAt": "2020-06-17T05:41:42Z", "author": {"login": "corneliouzbett"}, "path": "api-2.2/src/main/java/org/openmrs/module/fhir2/api/impl/FhirConditionServiceImpl_2_2.java", "diffHunk": "@@ -57,7 +57,7 @@ public IBundleProvider searchConditions(ReferenceAndListParam patientParam, Toke\n \t\tSearchParameterMap theParams = new SearchParameterMap()\n \t\t        .addParameter(FhirConstants.PATIENT_REFERENCE_SEARCH_HANDLER, patientParam)\n \t\t        .addParameter(FhirConstants.CODED_SEARCH_HANDLER, code)\n-\t\t        .addParameter(FhirConstants.CONDITION_CLINICAL_STATUS_HANDLER, clinicalStatus)\n+\t\t        .addParameter(FhirConstants.STATUS_SEARCH_HANDLER, clinicalStatus)\n \t\t        .addParameter(FhirConstants.QUANTITY_SEARCH_HANDLER, onsetAge)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f495f0c57a9e1309ca39575e3f2c09a62fdede"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTM5Mzk5OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/ConditionFhirR3ResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1MToxMVrOGk2i6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1MToxMVrOGk2i6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5NTU5NA==", "bodyText": "Also, remove this formatting changes from this PR", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/213#discussion_r441295594", "createdAt": "2020-06-17T05:51:11Z", "author": {"login": "corneliouzbett"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/ConditionFhirR3ResourceProviderTest.java", "diffHunk": "@@ -178,36 +178,36 @@ public void searchConditions_shouldReturnConditionReturnedByService() {\n \t\tassertThat(resultList.size(), greaterThanOrEqualTo(1));\n \t\tassertThat(resultList.iterator().next().fhirType(), equalTo(FhirConstants.CONDITION));\n \t}\n-\n+\t\n \t@Test\n \tpublic void searchConditions_shouldReturnConditionReturnedByServiceWhenPatientIsNull() {\n \t\tReferenceAndListParam subjectReference = new ReferenceAndListParam();\n \t\tsubjectReference.addValue(new ReferenceOrListParam().add(new ReferenceParam(Patient.SP_GIVEN, \"subject name\")));\n-\n+\t\t\n \t\tTokenAndListParam codeList = new TokenAndListParam();\n \t\tcodeList.addValue(new TokenOrListParam().add(new TokenParam(\"test code\")));\n-\n+\t\t\n \t\tTokenAndListParam clinicalList = new TokenAndListParam();\n \t\tclinicalList.addValue(new TokenOrListParam().add(new TokenParam(\"test clinical\")));\n-\n+\t\t\n \t\tDateRangeParam onsetDate = new DateRangeParam().setLowerBound(\"lower date\").setUpperBound(\"upper date\");\n-\n+\t\t\n \t\tQuantityAndListParam onsetAge = new QuantityAndListParam();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f495f0c57a9e1309ca39575e3f2c09a62fdede"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTQwMTQyOnYy", "diffSide": "LEFT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/TaskFhirResourceProviderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1NDo1MFrOGk2naw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzo0NTo1MFrOGlQdXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5Njc0Nw==", "bodyText": "I guess you forgot about this. You should probably remove", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/213#discussion_r441296747", "createdAt": "2020-06-17T05:54:50Z", "author": {"login": "corneliouzbett"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/TaskFhirResourceProviderTest.java", "diffHunk": "@@ -170,25 +188,24 @@ public void getTaskHistoryByWithWrongId_shouldThrowResourceNotFoundException() {\n \t//\t\tresourceProvider.updateTask(new IdType().setValue(WRONG_TASK_UUID), wrongTask);\n \t//\t}\n \t\n-\t//TODO ERROR\n-\t//\t@Test\n-\t//\tpublic void searchTasks_shouldReturnMatchingTasks() {\n-\t//\t\tList<org.hl7.fhir.r4.model.Task> tasks = new ArrayList<>();\n-\t//\t\ttasks.add(task);\n-\t//\n-\t//\t\twhen(taskService.searchForTasks(any(), any(), any(), any())).thenReturn(tasks);\n-\t//\n-\t//\t\tTokenOrListParam status = new TokenOrListParam();\n-\t//\t\tTokenParam statusToken = new TokenParam();\n-\t//\t\tstatusToken.setValue(\"ACCEPTED\");\n-\t//\t\tstatus.add(statusToken);\n-\t//\n-\t//\t\tBundle results = resourceProvider.searchTasks(null, null, status, null);\n-\t//\n-\t//\t\tassertThat(results, notNullValue());\n-\t//\t\tassertThat(results.getTotal(), equalTo(1));\n-\t//\t\tassertThat(results.getEntry(), notNullValue());\n-\t//\t\tassertThat(results.getEntry().get(0).getResource().fhirType(), equalTo(\"Task\"));\n-\t//\t\tassertThat(results.getEntry().get(0).getResource().getId(), equalTo(TASK_UUID));\n-\t//\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f495f0c57a9e1309ca39575e3f2c09a62fdede"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcyMDE1Ng==", "bodyText": "I have added the correct test for this just below it. Hence deleted.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/213#discussion_r441720156", "createdAt": "2020-06-17T17:45:50Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/TaskFhirResourceProviderTest.java", "diffHunk": "@@ -170,25 +188,24 @@ public void getTaskHistoryByWithWrongId_shouldThrowResourceNotFoundException() {\n \t//\t\tresourceProvider.updateTask(new IdType().setValue(WRONG_TASK_UUID), wrongTask);\n \t//\t}\n \t\n-\t//TODO ERROR\n-\t//\t@Test\n-\t//\tpublic void searchTasks_shouldReturnMatchingTasks() {\n-\t//\t\tList<org.hl7.fhir.r4.model.Task> tasks = new ArrayList<>();\n-\t//\t\ttasks.add(task);\n-\t//\n-\t//\t\twhen(taskService.searchForTasks(any(), any(), any(), any())).thenReturn(tasks);\n-\t//\n-\t//\t\tTokenOrListParam status = new TokenOrListParam();\n-\t//\t\tTokenParam statusToken = new TokenParam();\n-\t//\t\tstatusToken.setValue(\"ACCEPTED\");\n-\t//\t\tstatus.add(statusToken);\n-\t//\n-\t//\t\tBundle results = resourceProvider.searchTasks(null, null, status, null);\n-\t//\n-\t//\t\tassertThat(results, notNullValue());\n-\t//\t\tassertThat(results.getTotal(), equalTo(1));\n-\t//\t\tassertThat(results.getEntry(), notNullValue());\n-\t//\t\tassertThat(results.getEntry().get(0).getResource().fhirType(), equalTo(\"Task\"));\n-\t//\t\tassertThat(results.getEntry().get(0).getResource().getId(), equalTo(TASK_UUID));\n-\t//\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5Njc0Nw=="}, "originalCommit": {"oid": "a1f495f0c57a9e1309ca39575e3f2c09a62fdede"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 949, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}