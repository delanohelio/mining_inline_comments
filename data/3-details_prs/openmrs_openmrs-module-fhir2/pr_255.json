{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4Mjg0MjA4", "number": 255, "title": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates", "bodyText": "Description of what I changed\n\n\nAdded support for relative paths prefixed with openmrs: for location of narratives and properties file.\nFor example, the relative path openmrs:configuration/Patient.html would point to the location <OPENMRS_APPLICATION_DATA_DIRECTORY>/configuration/Patient.html.\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-252\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\n\n\n All new and existing tests passed.\n\n\n My pull request is based on the latest changes of the master branch.", "createdAt": "2020-07-13T14:14:39Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255", "merged": true, "mergeCommit": {"oid": "dbba721164bcb949f09ee3429fc0c73c91e57dc9"}, "closed": true, "closedAt": "2020-07-28T12:48:23Z", "author": {"login": "ShivanshRakesh"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0j4-NgFqTQ0NzQwMjU4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5V20fgFqTQ1NjU5NDc4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDAyNTg0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#pullrequestreview-447402584", "createdAt": "2020-07-13T16:19:02Z", "commit": {"oid": "5100d933285a6f8509d8c8e020cba363dc525200"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoxOTowM1rOGwv5Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoxOTowM1rOGwv5Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc2OTUxNA==", "bodyText": "Here is the main modification which has been done to support openmrs: prefixed relative paths.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#discussion_r453769514", "createdAt": "2020-07-13T16:19:03Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/narrative/OpenMRSNarrativeTemplateManifest.java", "diffHunk": "@@ -0,0 +1,243 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.StringReader;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.stream.Collectors;\n+\n+import ca.uhn.fhir.context.ConfigurationException;\n+import ca.uhn.fhir.context.FhirContext;\n+import ca.uhn.fhir.narrative.DefaultThymeleafNarrativeGenerator;\n+import ca.uhn.fhir.narrative2.INarrativeTemplate;\n+import ca.uhn.fhir.narrative2.INarrativeTemplateManifest;\n+import ca.uhn.fhir.narrative2.TemplateTypeEnum;\n+import com.google.common.base.Charsets;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.Validate;\n+import org.hl7.fhir.instance.model.api.IBase;\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.openmrs.util.OpenmrsUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class OpenMRSNarrativeTemplateManifest implements INarrativeTemplateManifest {\n+\t\n+\tprivate static final Logger ourLog = LoggerFactory.getLogger(OpenMRSNarrativeTemplateManifest.class);\n+\t\n+\tprivate final Map<String, List<OpenMRSNarrativeTemplate>> myStyleToResourceTypeToTemplate;\n+\t\n+\tprivate final Map<String, List<OpenMRSNarrativeTemplate>> myStyleToDatatypeToTemplate;\n+\t\n+\tprivate final Map<String, List<OpenMRSNarrativeTemplate>> myStyleToNameToTemplate;\n+\t\n+\tprivate final int myTemplateCount;\n+\t\n+\tprivate OpenMRSNarrativeTemplateManifest(Collection<OpenMRSNarrativeTemplate> theTemplates) {\n+\t\tMap<String, List<OpenMRSNarrativeTemplate>> resourceTypeToTemplate = new HashMap<>();\n+\t\tMap<String, List<OpenMRSNarrativeTemplate>> datatypeToTemplate = new HashMap<>();\n+\t\tMap<String, List<OpenMRSNarrativeTemplate>> nameToTemplate = new HashMap<>();\n+\t\t\n+\t\tfor (OpenMRSNarrativeTemplate nextTemplate : theTemplates) {\n+\t\t\tnameToTemplate.computeIfAbsent(nextTemplate.getTemplateName(), t -> new ArrayList<>()).add(nextTemplate);\n+\t\t\tfor (String nextResourceType : nextTemplate.getAppliesToResourceTypes()) {\n+\t\t\t\tresourceTypeToTemplate.computeIfAbsent(nextResourceType.toUpperCase(), t -> new ArrayList<>())\n+\t\t\t\t        .add(nextTemplate);\n+\t\t\t}\n+\t\t\tfor (String nextDataType : nextTemplate.getAppliesToDataTypes()) {\n+\t\t\t\tdatatypeToTemplate.computeIfAbsent(nextDataType.toUpperCase(), t -> new ArrayList<>()).add(nextTemplate);\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\tmyTemplateCount = theTemplates.size();\n+\t\tmyStyleToNameToTemplate = makeImmutable(nameToTemplate);\n+\t\tmyStyleToResourceTypeToTemplate = makeImmutable(resourceTypeToTemplate);\n+\t\tmyStyleToDatatypeToTemplate = makeImmutable(datatypeToTemplate);\n+\t}\n+\t\n+\tpublic int getNamedTemplateCount() {\n+\t\treturn myTemplateCount;\n+\t}\n+\t\n+\t@Override\n+\tpublic List<INarrativeTemplate> getTemplateByResourceName(FhirContext theFhirContext,\n+\t        EnumSet<TemplateTypeEnum> theStyles, String theResourceName) {\n+\t\treturn getFromMap(theStyles, theResourceName.toUpperCase(), myStyleToResourceTypeToTemplate);\n+\t}\n+\t\n+\t@Override\n+\tpublic List<INarrativeTemplate> getTemplateByName(FhirContext theFhirContext, EnumSet<TemplateTypeEnum> theStyles,\n+\t        String theName) {\n+\t\treturn getFromMap(theStyles, theName, myStyleToNameToTemplate);\n+\t}\n+\t\n+\t@Override\n+\tpublic List<INarrativeTemplate> getTemplateByElement(FhirContext theFhirContext, EnumSet<TemplateTypeEnum> theStyles,\n+\t        IBase theElement) {\n+\t\tif (theElement instanceof IBaseResource) {\n+\t\t\tString resourceName = theFhirContext.getResourceDefinition((IBaseResource) theElement).getName();\n+\t\t\treturn getTemplateByResourceName(theFhirContext, theStyles, resourceName);\n+\t\t} else {\n+\t\t\tString datatypeName = theFhirContext.getElementDefinition(theElement.getClass()).getName();\n+\t\t\treturn getFromMap(theStyles, datatypeName.toUpperCase(), myStyleToDatatypeToTemplate);\n+\t\t}\n+\t}\n+\t\n+\tpublic static OpenMRSNarrativeTemplateManifest forManifestFileLocation(String... thePropertyFilePaths)\n+\t        throws IOException {\n+\t\treturn forManifestFileLocation(Arrays.asList(thePropertyFilePaths));\n+\t}\n+\t\n+\tpublic static OpenMRSNarrativeTemplateManifest forManifestFileLocation(Collection<String> thePropertyFilePaths)\n+\t        throws IOException {\n+\t\tourLog.debug(\"Loading narrative properties file(s): {}\", thePropertyFilePaths);\n+\t\t\n+\t\tList<String> manifestFileContents = new ArrayList<>(thePropertyFilePaths.size());\n+\t\tfor (String next : thePropertyFilePaths) {\n+\t\t\tString resource = loadResource(next);\n+\t\t\tmanifestFileContents.add(resource);\n+\t\t}\n+\t\t\n+\t\treturn forManifestFileContents(manifestFileContents);\n+\t}\n+\t\n+\tpublic static OpenMRSNarrativeTemplateManifest forManifestFileContents(String... theResources) throws IOException {\n+\t\treturn forManifestFileContents(Arrays.asList(theResources));\n+\t}\n+\t\n+\tpublic static OpenMRSNarrativeTemplateManifest forManifestFileContents(Collection<String> theResources)\n+\t        throws IOException {\n+\t\tList<OpenMRSNarrativeTemplate> templates = new ArrayList<>();\n+\t\tfor (String next : theResources) {\n+\t\t\ttemplates.addAll(loadProperties(next));\n+\t\t}\n+\t\treturn new OpenMRSNarrativeTemplateManifest(templates);\n+\t}\n+\t\n+\tprivate static Collection<OpenMRSNarrativeTemplate> loadProperties(String theManifestText) throws IOException {\n+\t\tMap<String, OpenMRSNarrativeTemplate> nameToTemplate = new HashMap<>();\n+\t\t\n+\t\tProperties file = new Properties();\n+\t\t\n+\t\tfile.load(new StringReader(theManifestText));\n+\t\tfor (Object nextKeyObj : file.keySet()) {\n+\t\t\tString nextKey = (String) nextKeyObj;\n+\t\t\tValidate.isTrue(StringUtils.countMatches(nextKey, \".\") == 1, \"Invalid narrative property file key: %s\", nextKey);\n+\t\t\tString name = nextKey.substring(0, nextKey.indexOf('.'));\n+\t\t\tValidate.notBlank(name, \"Invalid narrative property file key: %s\", nextKey);\n+\t\t\t\n+\t\t\tOpenMRSNarrativeTemplate nextTemplate = nameToTemplate.computeIfAbsent(name,\n+\t\t\t    t -> new OpenMRSNarrativeTemplate().setTemplateName(name));\n+\t\t\t\n+\t\t\tValidate.isTrue(!nextKey.endsWith(\".class\"),\n+\t\t\t    \"Narrative manifest does not support specifying templates by class name - Use \\\"[name].resourceType=[resourceType]\\\" instead\");\n+\t\t\t\n+\t\t\tif (nextKey.endsWith(\".profile\")) {\n+\t\t\t\tString profile = file.getProperty(nextKey);\n+\t\t\t\tif (isNotBlank(profile)) {\n+\t\t\t\t\tnextTemplate.addAppliesToProfile(profile);\n+\t\t\t\t}\n+\t\t\t} else if (nextKey.endsWith(\".resourceType\")) {\n+\t\t\t\tString resourceType = file.getProperty(nextKey);\n+\t\t\t\tArrays.stream(resourceType.split(\",\")).map(t -> t.trim()).filter(t -> isNotBlank(t))\n+\t\t\t\t        .forEach(t -> nextTemplate.addAppliesToResourceType(t));\n+\t\t\t} else if (nextKey.endsWith(\".dataType\")) {\n+\t\t\t\tString dataType = file.getProperty(nextKey);\n+\t\t\t\tArrays.stream(dataType.split(\",\")).map(t -> t.trim()).filter(t -> isNotBlank(t))\n+\t\t\t\t        .forEach(t -> nextTemplate.addAppliesToDatatype(t));\n+\t\t\t} else if (nextKey.endsWith(\".style\")) {\n+\t\t\t\tString templateTypeName = file.getProperty(nextKey).toUpperCase();\n+\t\t\t\tTemplateTypeEnum templateType = TemplateTypeEnum.valueOf(templateTypeName);\n+\t\t\t\tnextTemplate.setTemplateType(templateType);\n+\t\t\t} else if (nextKey.endsWith(\".contextPath\")) {\n+\t\t\t\tString contextPath = file.getProperty(nextKey);\n+\t\t\t\tnextTemplate.setContextPath(contextPath);\n+\t\t\t} else if (nextKey.endsWith(\".narrative\")) {\n+\t\t\t\tString narrativePropName = name + \".narrative\";\n+\t\t\t\tString narrativeName = file.getProperty(narrativePropName);\n+\t\t\t\tif (isNotBlank(narrativeName)) {\n+\t\t\t\t\tnextTemplate.setTemplateFileName(narrativeName);\n+\t\t\t\t}\n+\t\t\t} else if (nextKey.endsWith(\".title\")) {\n+\t\t\t\tourLog.debug(\"Ignoring title property as narrative generator no longer generates titles: {}\", nextKey);\n+\t\t\t} else {\n+\t\t\t\tthrow new ConfigurationException(\"Invalid property name: \" + nextKey\n+\t\t\t\t        + \" - the key must end in one of the expected extensions \"\n+\t\t\t\t        + \"'.profile', '.resourceType', '.dataType', '.style', '.contextPath', '.narrative', '.title'\");\n+\t\t\t}\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\treturn nameToTemplate.values();\n+\t}\n+\t\n+\tstatic String loadResource(String name) throws IOException {\n+\t\tif (name.startsWith(\"classpath:\")) {\n+\t\t\tString cpName = name.substring(\"classpath:\".length());\n+\t\t\ttry (InputStream resource = DefaultThymeleafNarrativeGenerator.class.getResourceAsStream(cpName)) {\n+\t\t\t\tif (resource == null) {\n+\t\t\t\t\ttry (InputStream resource2 = DefaultThymeleafNarrativeGenerator.class\n+\t\t\t\t\t        .getResourceAsStream(\"/\" + cpName)) {\n+\t\t\t\t\t\tif (resource2 == null) {\n+\t\t\t\t\t\t\tthrow new IOException(\"Can not find '\" + cpName + \"' on classpath\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\treturn IOUtils.toString(resource2, Charsets.UTF_8);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn IOUtils.toString(resource, Charsets.UTF_8);\n+\t\t\t}\n+\t\t} else if (name.startsWith(\"file:\")) {\n+\t\t\tFile file = new File(name.substring(\"file:\".length()));\n+\t\t\tif (file.exists() == false) {\n+\t\t\t\tthrow new IOException(\"File not found: \" + file.getAbsolutePath());\n+\t\t\t}\n+\t\t\ttry (FileInputStream inputStream = new FileInputStream(file)) {\n+\t\t\t\treturn IOUtils.toString(inputStream, Charsets.UTF_8);\n+\t\t\t}\n+\t\t} else if (name.startsWith(\"openmrs:\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5100d933285a6f8509d8c8e020cba363dc525200"}, "originalPosition": 219}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDA0MzAz", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#pullrequestreview-447404303", "createdAt": "2020-07-13T16:21:16Z", "commit": {"oid": "5100d933285a6f8509d8c8e020cba363dc525200"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMToxNlrOGwv-gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMToxNlrOGwv-gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MDg4Mg==", "bodyText": "The modified loadResource() method has been called here.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#discussion_r453770882", "createdAt": "2020-07-13T16:21:16Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/narrative/OpenMRSNarrativeTemplate.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import ca.uhn.fhir.narrative2.INarrativeTemplate;\n+import ca.uhn.fhir.narrative2.TemplateTypeEnum;\n+import ca.uhn.fhir.rest.server.exceptions.InternalErrorException;\n+import org.hl7.fhir.instance.model.api.IBase;\n+\n+public class OpenMRSNarrativeTemplate implements INarrativeTemplate {\n+\t\n+\tprivate String myTemplateFileName;\n+\t\n+\tprivate Set<String> myAppliesToProfiles = new HashSet<>();\n+\t\n+\tprivate Set<String> myAppliesToResourceTypes = new HashSet<>();\n+\t\n+\tprivate Set<String> myAppliesToDataTypes = new HashSet<>();\n+\t\n+\tprivate Set<Class<? extends IBase>> myAppliesToResourceClasses = new HashSet<>();\n+\t\n+\tprivate TemplateTypeEnum myTemplateType = TemplateTypeEnum.THYMELEAF;\n+\t\n+\tprivate String myContextPath;\n+\t\n+\tprivate String myTemplateName;\n+\t\n+\tpublic Set<String> getAppliesToDataTypes() {\n+\t\treturn Collections.unmodifiableSet(myAppliesToDataTypes);\n+\t}\n+\t\n+\t@Override\n+\tpublic String getContextPath() {\n+\t\treturn myContextPath;\n+\t}\n+\t\n+\tpublic void setContextPath(String theContextPath) {\n+\t\tmyContextPath = theContextPath;\n+\t}\n+\t\n+\tprivate String getTemplateFileName() {\n+\t\treturn myTemplateFileName;\n+\t}\n+\t\n+\tvoid setTemplateFileName(String theTemplateFileName) {\n+\t\tmyTemplateFileName = theTemplateFileName;\n+\t}\n+\t\n+\t@Override\n+\tpublic Set<String> getAppliesToProfiles() {\n+\t\treturn Collections.unmodifiableSet(myAppliesToProfiles);\n+\t}\n+\t\n+\tvoid addAppliesToProfile(String theAppliesToProfile) {\n+\t\tmyAppliesToProfiles.add(theAppliesToProfile);\n+\t}\n+\t\n+\t@Override\n+\tpublic Set<String> getAppliesToResourceTypes() {\n+\t\treturn Collections.unmodifiableSet(myAppliesToResourceTypes);\n+\t}\n+\t\n+\tvoid addAppliesToResourceType(String theAppliesToResourceType) {\n+\t\tmyAppliesToResourceTypes.add(theAppliesToResourceType);\n+\t}\n+\t\n+\t@Override\n+\tpublic Set<Class<? extends IBase>> getAppliesToResourceClasses() {\n+\t\treturn Collections.unmodifiableSet(myAppliesToResourceClasses);\n+\t}\n+\t\n+\tvoid addAppliesToResourceClass(Class<? extends IBase> theAppliesToResourceClass) {\n+\t\tmyAppliesToResourceClasses.add(theAppliesToResourceClass);\n+\t}\n+\t\n+\t@Override\n+\tpublic TemplateTypeEnum getTemplateType() {\n+\t\treturn myTemplateType;\n+\t}\n+\t\n+\tvoid setTemplateType(TemplateTypeEnum theTemplateType) {\n+\t\tmyTemplateType = theTemplateType;\n+\t}\n+\t\n+\t@Override\n+\tpublic String getTemplateName() {\n+\t\treturn myTemplateName;\n+\t}\n+\t\n+\tOpenMRSNarrativeTemplate setTemplateName(String theTemplateName) {\n+\t\tmyTemplateName = theTemplateName;\n+\t\treturn this;\n+\t}\n+\t\n+\t@Override\n+\tpublic String getTemplateText() {\n+\t\ttry {\n+\t\t\treturn OpenMRSNarrativeTemplateManifest.loadResource(getTemplateFileName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5100d933285a6f8509d8c8e020cba363dc525200"}, "originalPosition": 110}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b433d2c717eea2e55670f04013560a3c7aed899", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2b433d2c717eea2e55670f04013560a3c7aed899", "committedDate": "2020-07-14T17:15:24Z", "message": "refactored narrative generator"}, "afterCommit": {"oid": "cb29f253b6bfa0dc882b41d768ecc3b55e149e01", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/cb29f253b6bfa0dc882b41d768ecc3b55e149e01", "committedDate": "2020-07-14T17:23:45Z", "message": "refactored narrative generator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb29f253b6bfa0dc882b41d768ecc3b55e149e01", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/cb29f253b6bfa0dc882b41d768ecc3b55e149e01", "committedDate": "2020-07-14T17:23:45Z", "message": "refactored narrative generator"}, "afterCommit": {"oid": "2cd69be4cc5357a98545ebdaa9dbf08d27366c88", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2cd69be4cc5357a98545ebdaa9dbf08d27366c88", "committedDate": "2020-07-14T17:26:07Z", "message": "refactored narrative generator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzUyNjE4", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#pullrequestreview-448352618", "createdAt": "2020-07-14T18:18:39Z", "commit": {"oid": "2cd69be4cc5357a98545ebdaa9dbf08d27366c88"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODoxODo0MFrOGxft7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODoyNDoxN1rOGxf63Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1MzA2OQ==", "bodyText": "Definitely don't use ALL_CAPS for instance names. They are used for constants, which are usually static final.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#discussion_r454553069", "createdAt": "2020-07-14T18:18:40Z", "author": {"login": "ibacher"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/narrative/OpenMRSNarrativeTemplate.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import ca.uhn.fhir.narrative2.INarrativeTemplate;\n+import ca.uhn.fhir.narrative2.TemplateTypeEnum;\n+import ca.uhn.fhir.rest.server.exceptions.InternalErrorException;\n+import org.hl7.fhir.instance.model.api.IBase;\n+\n+public class OpenMRSNarrativeTemplate implements INarrativeTemplate {\n+\t\n+\tprivate String CONTEXT_PATH;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cd69be4cc5357a98545ebdaa9dbf08d27366c88"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1NDU3MA==", "bodyText": "So my main question here is why we have this whole implementation when it seems like we could get away with this:\npublic class OpenMRSNarrativeTemplate extends ca.uhn.fhir.narrative2.NarrativeTemplate {\n    @Override\n\tpublic String getTemplateText() {\n\t\ttry {\n\t\t\treturn OpenMRSNarrativeTemplateManifest.loadResource(getTemplateFileName());\n\t\t} catch (IOException e) {\n\t\t\tthrow new InternalErrorException(e);\n\t\t}\n\t}\n}", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#discussion_r454554570", "createdAt": "2020-07-14T18:21:09Z", "author": {"login": "ibacher"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/narrative/OpenMRSNarrativeTemplate.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import ca.uhn.fhir.narrative2.INarrativeTemplate;\n+import ca.uhn.fhir.narrative2.TemplateTypeEnum;\n+import ca.uhn.fhir.rest.server.exceptions.InternalErrorException;\n+import org.hl7.fhir.instance.model.api.IBase;\n+\n+public class OpenMRSNarrativeTemplate implements INarrativeTemplate {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cd69be4cc5357a98545ebdaa9dbf08d27366c88"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU1NjM4MQ==", "bodyText": "Couldn't this just be something like:\npublic class OpenMRSNarrativeTemplateManifest extends ca.uhn.fhir.narrative2.NarrativeTemplateManifest {\n\tpublic static NarrativeTemplateManifest forManifestFileLocation(String... propertyFiles) throws IOException {\n\t\treturn forManifestFileLocation(Arrays.asList(propertyFiles));\n\t}\n\n\tpublic static NarrativeTemplateManifest forManifestFileLocation(Collection<String> propertyFiles) throws IOException {\n\t\tlog.debug(\"Loading narrative properties file(s): {}\", propertyFiles);\n\t\treturn new NarrativeTemplateManifest(propertyFiles.stream().map(r -> loadResource(r)).map(p -> NarrativeTemplateManifest.loadProperties(p))\n\t\t\t.flatMap(p -> p.stream()).map(t -> new OpenmrsNarrativeTemplate(t)).collect(Collectors.toList()));\n\t}\n\n\tstatic String loadResource(String name) throws IOException {\n\t\tif (name.startsWith(\"openmrs:\")) {\n\t\t\tFile file = new File(OpenmrsUtil.getApplicationDataDirectory(), name.substring(\"openmrs:\".length()));\n\n\t\t\tif (file.exists() == false) {\n\t\t\t\tthrow new IOException(\"File not found: \" + file.getAbsolutePath());\n\t\t\t}\n\n\t\t\ttry (FileInputStream inputStream = new FileInputStream(file)) {\n\t\t\t\treturn IOUtils.toString(inputStream, Charsets.UTF_8);\n\t\t\t}\n\t\t} else {\n\t\t\treturn NarrativeTemplateManifest.loadResource(name);\n\t\t}\n\t}\n}\n(The above adds a small dependency that we create a constructor for OpenmrsNarrativeTemplate that takes a NarrativeTemplate, but that isn't too hard. That way we cut the code down to what we minimally need to support this change.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#discussion_r454556381", "createdAt": "2020-07-14T18:24:17Z", "author": {"login": "ibacher"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/narrative/OpenMRSNarrativeTemplateManifest.java", "diffHunk": "@@ -0,0 +1,243 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.StringReader;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.stream.Collectors;\n+\n+import ca.uhn.fhir.context.ConfigurationException;\n+import ca.uhn.fhir.context.FhirContext;\n+import ca.uhn.fhir.narrative.DefaultThymeleafNarrativeGenerator;\n+import ca.uhn.fhir.narrative2.INarrativeTemplate;\n+import ca.uhn.fhir.narrative2.INarrativeTemplateManifest;\n+import ca.uhn.fhir.narrative2.TemplateTypeEnum;\n+import com.google.common.base.Charsets;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.Validate;\n+import org.hl7.fhir.instance.model.api.IBase;\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.openmrs.util.OpenmrsUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class OpenMRSNarrativeTemplateManifest implements INarrativeTemplateManifest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cd69be4cc5357a98545ebdaa9dbf08d27366c88"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cd69be4cc5357a98545ebdaa9dbf08d27366c88", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2cd69be4cc5357a98545ebdaa9dbf08d27366c88", "committedDate": "2020-07-14T17:26:07Z", "message": "refactored narrative generator"}, "afterCommit": {"oid": "5a3b3e54b317412f4fb1b31ff3f9942d1c88b2f5", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5a3b3e54b317412f4fb1b31ff3f9942d1c88b2f5", "committedDate": "2020-07-20T17:44:41Z", "message": "merged upstream changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a3b3e54b317412f4fb1b31ff3f9942d1c88b2f5", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5a3b3e54b317412f4fb1b31ff3f9942d1c88b2f5", "committedDate": "2020-07-20T17:44:41Z", "message": "merged upstream changes"}, "afterCommit": {"oid": "7559af32baef16c39e887118c3eade09226628aa", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/7559af32baef16c39e887118c3eade09226628aa", "committedDate": "2020-07-20T17:51:12Z", "message": "merged upstream changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7559af32baef16c39e887118c3eade09226628aa", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/7559af32baef16c39e887118c3eade09226628aa", "committedDate": "2020-07-20T17:51:12Z", "message": "merged upstream changes"}, "afterCommit": {"oid": "a2801df075df1f3dce5bb85ddb8a738d1d721c02", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/a2801df075df1f3dce5bb85ddb8a738d1d721c02", "committedDate": "2020-07-20T20:47:07Z", "message": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNDY4OTA0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#pullrequestreview-452468904", "createdAt": "2020-07-21T13:42:05Z", "commit": {"oid": "3715bda746ab562f736c737ae003f5ea196a21d6"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTA4NDc0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#pullrequestreview-452508474", "createdAt": "2020-07-21T14:22:05Z", "commit": {"oid": "02fe783e40872880e7db3073c7bfee186d685523"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDoyMjowNlrOG06Ywg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDoyMjowNlrOG06Ywg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEzNTc0Ng==", "bodyText": "Removed the forManifestFileContents(String... resources), forManifestFileLocation(String... propertyFilePaths) methods since they were not used anywhere.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#discussion_r458135746", "createdAt": "2020-07-21T14:22:06Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/narrative/OpenMRSNarrativeTemplateManifest.java", "diffHunk": "@@ -117,10 +118,6 @@ public static OpenMRSNarrativeTemplateManifest forManifestFileLocation(Collectio\n \t\treturn forManifestFileContents(manifestFileContents);\n \t}\n \t\n-\tpublic static OpenMRSNarrativeTemplateManifest forManifestFileContents(String... resources) throws IOException {\n-\t\treturn forManifestFileContents(Arrays.asList(resources));\n-\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02fe783e40872880e7db3073c7bfee186d685523"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTA5MzM1", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#pullrequestreview-452509335", "createdAt": "2020-07-21T14:22:52Z", "commit": {"oid": "02fe783e40872880e7db3073c7bfee186d685523"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDoyMjo1MlrOG06bVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDoyMjo1MlrOG06bVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEzNjQwNw==", "bodyText": "Removed templateCount since it was not being used anywhere.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#discussion_r458136407", "createdAt": "2020-07-21T14:22:52Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/narrative/OpenMRSNarrativeTemplateManifest.java", "diffHunk": "@@ -51,8 +63,6 @@\n \t\n \tprivate final Map<String, List<OpenMRSNarrativeTemplate>> styleToNameToTemplate;\n \t\n-\tprivate final int templateCount;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02fe783e40872880e7db3073c7bfee186d685523"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02fe783e40872880e7db3073c7bfee186d685523", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/02fe783e40872880e7db3073c7bfee186d685523", "committedDate": "2020-07-21T14:18:36Z", "message": "added copyright notices"}, "afterCommit": {"oid": "5dcfadf52aff44fb94fae7e5a021f9d388194f53", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5dcfadf52aff44fb94fae7e5a021f9d388194f53", "committedDate": "2020-07-21T15:38:26Z", "message": "added copyright notices"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dcfadf52aff44fb94fae7e5a021f9d388194f53", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5dcfadf52aff44fb94fae7e5a021f9d388194f53", "committedDate": "2020-07-21T15:38:26Z", "message": "added copyright notices"}, "afterCommit": {"oid": "4ac72b655e4bd0a8533b1f55f3fb262939381a3c", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/4ac72b655e4bd0a8533b1f55f3fb262939381a3c", "committedDate": "2020-07-21T16:05:40Z", "message": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f107a666292151cece44757be8d096d6a73e5354", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f107a666292151cece44757be8d096d6a73e5354", "committedDate": "2020-07-21T17:38:03Z", "message": "added tests"}, "afterCommit": {"oid": "aa069e83abf9912e3e6955155435700ea2d5824b", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/aa069e83abf9912e3e6955155435700ea2d5824b", "committedDate": "2020-07-22T04:29:10Z", "message": "added tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40a871b3424633ef9f9d7be2b2fb0736a3f52a55", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/40a871b3424633ef9f9d7be2b2fb0736a3f52a55", "committedDate": "2020-07-22T04:45:49Z", "message": "restructured tests"}, "afterCommit": {"oid": "5f37c1d3518b9c6fb40cc9e3fa5f04a8cb493187", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5f37c1d3518b9c6fb40cc9e3fa5f04a8cb493187", "committedDate": "2020-07-22T05:00:31Z", "message": "restructured tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f37c1d3518b9c6fb40cc9e3fa5f04a8cb493187", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5f37c1d3518b9c6fb40cc9e3fa5f04a8cb493187", "committedDate": "2020-07-22T05:00:31Z", "message": "restructured tests"}, "afterCommit": {"oid": "c51735bc2f1eb11a992baf116e4ba87934e75116", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/c51735bc2f1eb11a992baf116e4ba87934e75116", "committedDate": "2020-07-22T16:27:37Z", "message": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c51735bc2f1eb11a992baf116e4ba87934e75116", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/c51735bc2f1eb11a992baf116e4ba87934e75116", "committedDate": "2020-07-22T16:27:37Z", "message": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates"}, "afterCommit": {"oid": "3bf814e82f0e1a890e5a39220ec28960d5b62f33", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/3bf814e82f0e1a890e5a39220ec28960d5b62f33", "committedDate": "2020-07-22T16:28:50Z", "message": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bf814e82f0e1a890e5a39220ec28960d5b62f33", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/3bf814e82f0e1a890e5a39220ec28960d5b62f33", "committedDate": "2020-07-22T16:28:50Z", "message": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates"}, "afterCommit": {"oid": "5d87b2f673c2479510a7faf0c9e63916848c1880", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5d87b2f673c2479510a7faf0c9e63916848c1880", "committedDate": "2020-07-22T16:51:41Z", "message": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e9b17cc04e193adbb7023d16c590f50c76072bd", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/8e9b17cc04e193adbb7023d16c590f50c76072bd", "committedDate": "2020-07-22T17:09:47Z", "message": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d87b2f673c2479510a7faf0c9e63916848c1880", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5d87b2f673c2479510a7faf0c9e63916848c1880", "committedDate": "2020-07-22T16:51:41Z", "message": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates"}, "afterCommit": {"oid": "8e9b17cc04e193adbb7023d16c590f50c76072bd", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/8e9b17cc04e193adbb7023d16c590f50c76072bd", "committedDate": "2020-07-22T17:09:47Z", "message": "FM2-252: Add support for relative path with prefix 'openmrs:' for narrative templates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NTk0Nzg2", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/255#pullrequestreview-456594786", "createdAt": "2020-07-28T12:47:39Z", "commit": {"oid": "8e9b17cc04e193adbb7023d16c590f50c76072bd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4157, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}