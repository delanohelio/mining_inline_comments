{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNDE4NDM2", "number": 91, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo0MDoyOFrODjMYJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo0MDoyOFrODjMYJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjI5NTQxOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPatientDaoImplTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo0MDoyOFrOFu3c6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODoyMjo1OFrOFwqI-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NzMzNw==", "bodyText": "Can we add a test after this one to search by country? It should work using \"USA\" as the country.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/91#discussion_r384687337", "createdAt": "2020-02-26T18:40:28Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPatientDaoImplTest.java", "diffHunk": "@@ -352,7 +352,7 @@ public void searchForPatients_shouldSearchForPatientsByState() {\n \t@Test\n \tpublic void searchForPatients_shouldSearchForPatientsByPostalCode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ab779085519ed61db2a6685ba4274854b6ae926"}, "originalPosition": 208}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2ODE4Mg==", "bodyText": "@ibacher What is the minimum for FHIR standards in terms of test code coverage?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/91#discussion_r385168182", "createdAt": "2020-02-27T14:57:42Z", "author": {"login": "tendomart"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPatientDaoImplTest.java", "diffHunk": "@@ -352,7 +352,7 @@ public void searchForPatients_shouldSearchForPatientsByState() {\n \t@Test\n \tpublic void searchForPatients_shouldSearchForPatientsByPostalCode() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NzMzNw=="}, "originalCommit": {"oid": "6ab779085519ed61db2a6685ba4274854b6ae926"}, "originalPosition": 208}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxMDc2NA==", "bodyText": "My target is to have ~90% patch coverage for each PR and to avoid decreases in overall coverage where ever feasible. I know that's more aggressive than most OpenMRS modules, but since this is a new module, it should be an achievable aim.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/91#discussion_r385210764", "createdAt": "2020-02-27T16:11:54Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPatientDaoImplTest.java", "diffHunk": "@@ -352,7 +352,7 @@ public void searchForPatients_shouldSearchForPatientsByState() {\n \t@Test\n \tpublic void searchForPatients_shouldSearchForPatientsByPostalCode() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NzMzNw=="}, "originalCommit": {"oid": "6ab779085519ed61db2a6685ba4274854b6ae926"}, "originalPosition": 208}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU2NjM5NA==", "bodyText": "Wow, thanks bar set high.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/91#discussion_r386566394", "createdAt": "2020-03-02T18:22:58Z", "author": {"login": "tendomart"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/dao/impl/FhirPatientDaoImplTest.java", "diffHunk": "@@ -352,7 +352,7 @@ public void searchForPatients_shouldSearchForPatientsByState() {\n \t@Test\n \tpublic void searchForPatients_shouldSearchForPatientsByPostalCode() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NzMzNw=="}, "originalCommit": {"oid": "6ab779085519ed61db2a6685ba4274854b6ae926"}, "originalPosition": 208}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1088, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}