{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwMDg5NDI1", "number": 196, "title": "FM2-203: Update DiagnosticReport resource to support paging", "bodyText": "Description of what I changed\n\n\nUpdate DiagnosticReport resource to return paged search results\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-203\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-06-07T14:00:52Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/196", "merged": true, "mergeCommit": {"oid": "37972fb71a8999d77f4e8137dd6d619d2029d9d5"}, "closed": true, "closedAt": "2020-06-12T19:03:24Z", "author": {"login": "varung-31"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABco8RqdgH2gAyNDMwMDg5NDI1OmZjNTM5MGQzZWFmMjk5MjVmYWUzMmVhOTBjNGMzM2JjOGFjMDhjZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqnqNPAFqTQyOTk3NDY1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fc5390d3eaf29925fae32ea90c4c33bc8ac08ce3", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fc5390d3eaf29925fae32ea90c4c33bc8ac08ce3", "committedDate": "2020-06-07T13:56:39Z", "message": "FM2-203: Update DiagnosticReport resource to support paging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MTI2OTI2", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/196#pullrequestreview-426126926", "createdAt": "2020-06-08T11:08:56Z", "commit": {"oid": "fc5390d3eaf29925fae32ea90c4c33bc8ac08ce3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTowODo1NlrOGgZGDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTowODo1NlrOGgZGDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxODc2NA==", "bodyText": "One thing I had completely forgotten is conversion to R3. You see the code above will always return FHIR R4 resources. The service layer calls searchQuery.getQueryResults(theParams, dao, translator); and goes down to here;\n@Override\n\tpublic List<IBaseResource> getResources(int fromIndex, int toIndex) {\n\t\tint firstResult = 0;\n\t\tif (fromIndex >= 0) {\n\t\t\tfirstResult = fromIndex;\n\t\t}\n\t\t\n\t\tint maxResults = -1;\n\t\tif (toIndex - fromIndex > 0) {\n\t\t\tmaxResults = toIndex - fromIndex;\n\t\t}\n\t\t\n\t\treturn dao.search(theParams, firstResult, maxResults).stream().map(translator::toFhirResource)\n\t\t        .collect(Collectors.toList());\n\t}\nwhere it's only been translated to R4 (no conversions).\nInitially, this Bundle30_40.convertBundle() was been used to convert to R3 which doesn't for IBundeProvider. We need to find a way of converting IBundleProvider resources to R3.\nMy Initial thought was that conversions should go down to the translators' layer where we add a new method\norg.hl7.fhir.dstu3.model.Patient toFhirR3(org.openmrs.Patient patient)\nthen implementation\nPatient30_40.convertPatient(toFhirResource(patient))\nIf the conversion is not satisfactory, this will give us the flexibility of doing them manually.\ncc: @ibacher", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/196#discussion_r436618764", "createdAt": "2020-06-08T11:08:56Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/DiagnosticReportFhirResourceProvider.java", "diffHunk": "@@ -68,4 +75,22 @@ public MethodOutcome updateDiagnosticReport(@IdParam IdType id, @ResourceParam D\n \t\treturn FhirProviderUtils.buildUpdate(\n \t\t    diagnosticReportService.update(idPart, DiagnosticReport30_40.convertDiagnosticReport(diagnosticReport)));\n \t}\n+\t\n+\t@Search\n+\tpublic IBundleProvider searchForDiagnosticReports(\n+\t        @OptionalParam(name = DiagnosticReport.SP_ENCOUNTER, chainWhitelist = {\n+\t                \"\" }, targetTypes = Encounter.class) ReferenceAndListParam encounterReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_PATIENT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY,\n+\t                Patient.SP_NAME }, targetTypes = Patient.class) ReferenceAndListParam patientReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_SUBJECT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER, Patient.SP_NAME,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY }) ReferenceAndListParam subjectReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_ISSUED) DateRangeParam issueDate,\n+\t        @OptionalParam(name = DiagnosticReport.SP_CODE) TokenAndListParam code, @Sort SortSpec sort) {\n+\t\tif (patientReference == null) {\n+\t\t\tpatientReference = subjectReference;\n+\t\t}\n+\t\treturn diagnosticReportService.searchForDiagnosticReports(encounterReference, patientReference, issueDate, code,\n+\t\t    sort);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc5390d3eaf29925fae32ea90c4c33bc8ac08ce3"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5OTc0NjU1", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/196#pullrequestreview-429974655", "createdAt": "2020-06-12T19:03:01Z", "commit": {"oid": "fc5390d3eaf29925fae32ea90c4c33bc8ac08ce3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxOTowMzowMVrOGjOuxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxOTowMzowMVrOGjOuxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5NDY5NA==", "bodyText": "Yeah, we need to fix that.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/196#discussion_r439594694", "createdAt": "2020-06-12T19:03:01Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/DiagnosticReportFhirResourceProvider.java", "diffHunk": "@@ -68,4 +75,22 @@ public MethodOutcome updateDiagnosticReport(@IdParam IdType id, @ResourceParam D\n \t\treturn FhirProviderUtils.buildUpdate(\n \t\t    diagnosticReportService.update(idPart, DiagnosticReport30_40.convertDiagnosticReport(diagnosticReport)));\n \t}\n+\t\n+\t@Search\n+\tpublic IBundleProvider searchForDiagnosticReports(\n+\t        @OptionalParam(name = DiagnosticReport.SP_ENCOUNTER, chainWhitelist = {\n+\t                \"\" }, targetTypes = Encounter.class) ReferenceAndListParam encounterReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_PATIENT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY,\n+\t                Patient.SP_NAME }, targetTypes = Patient.class) ReferenceAndListParam patientReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_SUBJECT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER, Patient.SP_NAME,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY }) ReferenceAndListParam subjectReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_ISSUED) DateRangeParam issueDate,\n+\t        @OptionalParam(name = DiagnosticReport.SP_CODE) TokenAndListParam code, @Sort SortSpec sort) {\n+\t\tif (patientReference == null) {\n+\t\t\tpatientReference = subjectReference;\n+\t\t}\n+\t\treturn diagnosticReportService.searchForDiagnosticReports(encounterReference, patientReference, issueDate, code,\n+\t\t    sort);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxODc2NA=="}, "originalCommit": {"oid": "fc5390d3eaf29925fae32ea90c4c33bc8ac08ce3"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4051, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}