{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMjgwMzAw", "number": 198, "title": "FM2-194: Create default narratives for AllergyIntolerance, MedicationRequest, and Condition", "bodyText": "Description of what I changed\nAdded OpenMRS Narratives for the following resources:\n\nAllergyIntolerance\nCondition\nMedicationRequest\n\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-194\nChecklist: I completed these to help reviewers :)\n\n\n My IDE is configured to follow the code style of this project.\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\n\n\n All new and existing tests passed.\n\n\n My pull request is based on the latest changes of the master branch.", "createdAt": "2020-06-08T17:09:41Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198", "merged": true, "mergeCommit": {"oid": "6b581da5f4588292e61a2538bd475eaa96b8a161"}, "closed": true, "closedAt": "2020-06-18T19:46:24Z", "author": {"login": "ShivanshRakesh"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpdSmAAFqTQyNjc3OTExNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsj3fJAFqTQzMzU5NTgwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Nzc5MTE0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#pullrequestreview-426779114", "createdAt": "2020-06-09T04:24:32Z", "commit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNDoyNDozMlrOGg4R6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNDoyNDozMlrOGg4R6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEyOTcwNg==", "bodyText": "Better to use logger if you really need or you can remove the System.out.println from the code", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437129706", "createdAt": "2020-06-09T04:24:32Z", "author": {"login": "suthagar23"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/DefaultNarrativeTemplateTest.java", "diffHunk": "@@ -0,0 +1,230 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import java.util.Date;\n+\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.AllergyIntolerance;\n+import org.hl7.fhir.r4.model.Base64BinaryType;\n+import org.hl7.fhir.r4.model.BooleanType;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Dosage;\n+import org.hl7.fhir.r4.model.Duration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Medication;\n+import org.hl7.fhir.r4.model.MedicationRequest;\n+import org.hl7.fhir.r4.model.Narrative;\n+import org.hl7.fhir.r4.model.Period;\n+import org.hl7.fhir.r4.model.Provenance;\n+import org.hl7.fhir.r4.model.Quantity;\n+import org.hl7.fhir.r4.model.Range;\n+import org.hl7.fhir.r4.model.Reference;\n+import org.hl7.fhir.r4.model.Signature;\n+import org.hl7.fhir.r4.model.StringType;\n+import org.hl7.fhir.r4.model.Timing;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceClinical;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceVerification;\n+import org.junit.Test;\n+\n+public class DefaultNarrativeTemplateTest {\n+\t\n+\t@Test\n+\tpublic void testForAllergyIntolerance() {\n+\t\t// Example: https://www.hl7.org/fhir/allergyintolerance-example.html\n+\t\t\n+\t\tAllergyIntolerance allergyIntolerance = new AllergyIntolerance();\n+\t\t\n+\t\tallergyIntolerance.setId(\"example\");\n+\t\tallergyIntolerance.addIdentifier().setValue(\"12345678\");\n+\t\t\n+\t\tCodeableConcept clinicalStatus = new CodeableConcept();\n+\t\tclinicalStatus.addCoding().setCode(AllergyintoleranceClinical.ACTIVE.toCode())\n+\t\t        .setDisplay(AllergyintoleranceClinical.ACTIVE.getDisplay());\n+\t\tallergyIntolerance.setClinicalStatus(clinicalStatus);\n+\t\t\n+\t\tCodeableConcept verificationStatus = new CodeableConcept();\n+\t\tverificationStatus.addCoding().setCode(AllergyintoleranceVerification.CONFIRMED.toCode())\n+\t\t        .setDisplay(AllergyintoleranceVerification.CONFIRMED.getDisplay());\n+\t\tallergyIntolerance.setVerificationStatus(verificationStatus);\n+\t\t\n+\t\tallergyIntolerance.setType(AllergyIntolerance.AllergyIntoleranceType.fromCode(\"allergy\"));\n+\t\tallergyIntolerance.addCategory(new AllergyIntolerance.AllergyIntoleranceCategoryEnumFactory().fromCode(\"food\"));\n+\t\tallergyIntolerance\n+\t\t        .addCategory(new AllergyIntolerance.AllergyIntoleranceCategoryEnumFactory().fromCode(\"medication\"));\n+\t\tallergyIntolerance.setCriticality(AllergyIntolerance.AllergyIntoleranceCriticality.fromCode(\"high\"));\n+\t\t\n+\t\tCodeableConcept code = new CodeableConcept();\n+\t\tcode.addCoding().setCode(\"227493005\").setDisplay(\"Cashew Nuts\");\n+\t\tallergyIntolerance.setCode(code);\n+\t\tallergyIntolerance.setPatient(new Reference().setReference(\"Patient/10010\").setDisplay(\"PatientNAME\"));\n+\t\tallergyIntolerance.setOnset(new StringType().setValue(\"01/01/2004\"));\n+\t\tallergyIntolerance.setRecordedDate(new Date());\n+\t\tallergyIntolerance.setRecorder(new Reference().setReference(\"Practitioner/10011\"));\n+\t\tallergyIntolerance.setAsserter(new Reference().setReference(\"Patient/10211\").setDisplay(\"AsserterNAME\"));\n+\t\tallergyIntolerance.setLastOccurrence(new Date());\n+\t\tallergyIntolerance.addNote().setText(\n+\t\t    \"The criticality is high becasue of the observed anaphylactic reaction when challenged with cashew extract.\");\n+\t\t\n+\t\tAllergyIntolerance.AllergyIntoleranceReactionComponent allergyIntoleranceReactionComponent = new AllergyIntolerance.AllergyIntoleranceReactionComponent();\n+\t\tCodeableConcept substance = new CodeableConcept();\n+\t\tsubstance.addCoding().setCode(\"1160593\").setDisplay(\"cashew nut allergenic extract Injectale Product\");\n+\t\tallergyIntoleranceReactionComponent.setSubstance(substance);\n+\t\tallergyIntoleranceReactionComponent.addManifestation().addCoding().setCode(\"39579001\")\n+\t\t        .setDisplay(\"Anaphylactic reaction\");\n+\t\tallergyIntoleranceReactionComponent.setDescription(\n+\t\t    \"Challenge Protocol. Severe reaction to subcutaneous cashew extract. Epinephrine administered\");\n+\t\tallergyIntoleranceReactionComponent.setOnset(new Date());\n+\t\tallergyIntoleranceReactionComponent.setSeverity(AllergyIntolerance.AllergyIntoleranceSeverity.fromCode(\"severe\"));\n+\t\tCodeableConcept exposureRoute = new CodeableConcept();\n+\t\texposureRoute.addCoding().setCode(\"34206005\").setDisplay(\"Subcutaneous route\");\n+\t\tallergyIntoleranceReactionComponent.setExposureRoute(exposureRoute);\n+\t\tallergyIntolerance.addReaction(allergyIntoleranceReactionComponent);\n+\t\t\n+\t\tAllergyIntolerance.AllergyIntoleranceReactionComponent allergyIntoleranceReactionComponent1 = new AllergyIntolerance.AllergyIntoleranceReactionComponent();\n+\t\tallergyIntoleranceReactionComponent1.addManifestation().addCoding().setCode(\"64305001\").setDisplay(\"Urticaria\");\n+\t\tallergyIntoleranceReactionComponent1.setOnset(new Date());\n+\t\tallergyIntoleranceReactionComponent1.setSeverity(AllergyIntolerance.AllergyIntoleranceSeverity.fromCode(\"moderate\"));\n+\t\tallergyIntoleranceReactionComponent1.addNote()\n+\t\t        .setText(\"The patient reports that the onset of urticaria was within 15 minutes of eating cashews.\");\n+\t\tallergyIntolerance.addReaction(allergyIntoleranceReactionComponent1);\n+\t\t\n+\t\tassertThat(testHelper(new AllergyIntolerance()).getDivAsString(), notNullValue());\n+\t\tassertThat(testHelper(allergyIntolerance).getDivAsString(), notNullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void testForMedicationRequest() {\n+\t\t// https://www.hl7.org/fhir/medicationrequest0301.html\n+\t\t\n+\t\tMedicationRequest medicationRequest = new MedicationRequest();\n+\t\t\n+\t\tmedicationRequest.setId(\"medrx301\");\n+\t\t\n+\t\tCodeableConcept medicationCode = new CodeableConcept();\n+\t\tmedicationCode.addCoding().setSystem(\"http://snomed.info/sct\").setDisplay(\"Oral Form Oxycodone (product)\")\n+\t\t        .setCode(\"430127000\");\n+\t\tmedicationRequest.addContained(new Medication().setCode(medicationCode).setId(\"med0310\"));\n+\t\tProvenance provenance = new Provenance();\n+\t\tprovenance.addTarget().setReference(\"ServiceRequest/physiotherapy\");\n+\t\tprovenance.setRecorded(new Date());\n+\t\tProvenance.ProvenanceAgentComponent provenanceAgentComponent = new Provenance.ProvenanceAgentComponent();\n+\t\tprovenanceAgentComponent.addRole().addCoding().setCode(\"AUT\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/v3-ParticipationType\");\n+\t\tprovenanceAgentComponent.setWho(new Reference().setDisplay(\"Dr Adam Careful\").setReference(\"Practitioner/example\"));\n+\t\tprovenance.addAgent(provenanceAgentComponent);\n+\t\tSignature signature = new Signature();\n+\t\tsignature.addType().setSystem(\"urn:iso-astm:E1762-95:2013\").setCode(\"1.2.840.10065.1.12.1.1\")\n+\t\t        .setDisplay(\"Author's Signature\");\n+\t\tsignature.setWhen(new Date());\n+\t\tsignature.setWho(new Reference().setReference(\"Practitioner/example\").setDisplay(\"Dr Adam Careful\"));\n+\t\tsignature.setTargetFormat(\"application/fhir+xml\");\n+\t\tsignature.setSigFormat(\"application/signature+xml\");\n+\t\tsignature.setDataElement(new Base64BinaryType(\"dGhpcyBibG9iIGlzIHNuaXBwZWQ=\"));\n+\t\tprovenance.addSignature(signature);\n+\t\tmedicationRequest.addContained(provenance);\n+\t\t\n+\t\tmedicationRequest.addIdentifier().setUse(Identifier.IdentifierUse.OFFICIAL)\n+\t\t        .setSystem(\"http://www.bmc.nl/portal/prescriptions\").setValue(\"12345689\");\n+\t\tmedicationRequest.setStatus(MedicationRequest.MedicationRequestStatus.COMPLETED);\n+\t\t\n+\t\tCodeableConcept statusReason = new CodeableConcept();\n+\t\tstatusReason.addCoding().setDisplay(\"Try another treatment first\").setCode(\"altchoice\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/medicationrequest-status-reason\");\n+\t\tmedicationRequest.setStatusReason(statusReason);\n+\t\tmedicationRequest.setIntent(MedicationRequest.MedicationRequestIntent.ORDER);\n+\t\tmedicationRequest.addCategory().addCoding()\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/medicationrequest-category\").setCode(\"inpatient\")\n+\t\t        .setDisplay(\"Inpatient\");\n+\t\t\n+\t\tmedicationRequest.setMedication(new Reference().setReference(\"#med0310\"));\n+\t\tmedicationRequest.setSubject(new Reference().setReference(\"Patient/pat1\").setDisplay(\"Donald Duck\"));\n+\t\tmedicationRequest.setEncounter(\n+\t\t    new Reference().setDisplay(\"encounter who leads to this prescription\").setReference(\"Encounter/f201\"));\n+\t\tmedicationRequest.addSupportingInformation().setReference(\"Procedure/biopsy\");\n+\t\tmedicationRequest.addSupportingInformation().setReference(\"Procedure/biopsy\");\n+\t\tmedicationRequest.setAuthoredOn(new Date());\n+\t\tmedicationRequest.setRequester(new Reference().setReference(\"Practitioner/f007\").setDisplay(\"Patrick Pump\"));\n+\t\tmedicationRequest.setPerformer(new Reference().setReference(\"Practitioner/f204\").setDisplay(\"Carla Espinosa\"));\n+\t\tCodeableConcept performerType = new CodeableConcept();\n+\t\tperformerType.addCoding().setDisplay(\"Public Health Nurse\").setCode(\"26369006\").setSystem(\"http://snomed.info/sct\");\n+\t\tmedicationRequest.setPerformerType(performerType);\n+\t\tmedicationRequest.addReasonCode().addCoding().setSystem(\"http://snomed.info/sct\").setCode(\"297217002\")\n+\t\t        .setDisplay(\"Rib Pain (finding)\");\n+\t\tmedicationRequest.addInsurance().setReference(\"Coverage/9876B1\");\n+\t\tmedicationRequest.addNote().setText(\"Patient told to take with food\");\n+\t\t\n+\t\tTiming timing = new Timing();\n+\t\ttiming.setRepeat(new Timing.TimingRepeatComponent().setFrequency(1).setPeriod(4).setPeriodMax(6)\n+\t\t        .setPeriodUnit(Timing.UnitsOfTime.H));\n+\t\tDosage dosage = new Dosage();\n+\t\tdosage.setSequence(1).setText(\"one to two tablets every 4-6 hours as needed for rib pain\")\n+\t\t        .setPatientInstruction(\"Take one to two tablets every four to six hours as needed for rib pain\")\n+\t\t        .setTiming(timing);\n+\t\tdosage.addAdditionalInstruction().addCoding().setDisplay(\n+\t\t    \"Warning. May cause drowsiness. If affected do not drive or operate machinery. Avoid alcoholic drink (qualifier value)\")\n+\t\t        .setCode(\"418914006\").setSystem(\"http://snomed.info/sct\");\n+\t\tCodeableConcept asNeeded = new CodeableConcept();\n+\t\tasNeeded.addCoding().setCode(\"297217002\").setSystem(\"http://snomed.info/sct\").setDisplay(\"Rib Pain (finding)\");\n+\t\tdosage.setAsNeeded(asNeeded);\n+\t\tCodeableConcept route = new CodeableConcept();\n+\t\troute.addCoding().setDisplay(\"Oral Route\").setSystem(\"http://snomed.info/sct\").setCode(\"26643006\");\n+\t\tdosage.setRoute(route);\n+\t\tCodeableConcept method = new CodeableConcept();\n+\t\tmethod.addCoding().setDisplay(\"Swallow - dosing instruction imperative (qualifier value)\")\n+\t\t        .setSystem(\"http://snomed.info/sct\").setCode(\"421521009\");\n+\t\tdosage.setMethod(method);\n+\t\t\n+\t\tCodeableConcept doseandrateType = new CodeableConcept();\n+\t\tdoseandrateType.addCoding().setCode(\"ordered\").setDisplay(\"Ordered\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/dose-rate-type\");\n+\t\tRange doseRange = new Range();\n+\t\tdoseRange.setLow(new Quantity().setValue(1).setUnit(\"TAB\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm\").setCode(\"TAB\"));\n+\t\tdoseRange.setHigh(new Quantity().setValue(2).setUnit(\"TAB\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm\").setCode(\"TAB\"));\n+\t\tdosage.addDoseAndRate().setDose(doseRange).setType(doseandrateType);\n+\t\t\n+\t\tmedicationRequest.addDosageInstruction(dosage);\n+\t\t\n+\t\tDuration duration = new Duration();\n+\t\tduration.setValue(10).setUnit(\"days\").setSystem(\"http://unitsofmeasure.org\").setCode(\"d\");\n+\t\tmedicationRequest.setDispenseRequest(new MedicationRequest.MedicationRequestDispenseRequestComponent()\n+\t\t        .setValidityPeriod(new Period().setStart(new Date()).setEnd(new Date())).setNumberOfRepeatsAllowed(0)\n+\t\t        .setQuantity(new Quantity().setValue(30).setUnit(\"TAB\")\n+\t\t                .setSystem(\"http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm\").setCode(\"TAB\"))\n+\t\t        .setExpectedSupplyDuration(duration).setPerformer(new Reference().setReference(\"Practitioner/f001\"))\n+\t\t        .setInitialFill(new MedicationRequest.MedicationRequestDispenseRequestInitialFillComponent()\n+\t\t                .setQuantity(new Quantity().setValue(123).setSystem(\"something\")).setDuration(duration)));\n+\t\t\n+\t\tCodeableConcept substitutionReason = new CodeableConcept();\n+\t\tsubstitutionReason.addCoding().setSystem(\"http://terminology.hl7.org/CodeSystem/v3-ActReason\").setCode(\"FP\")\n+\t\t        .setDisplay(\"formulary policy\");\n+\t\tmedicationRequest.setSubstitution(new MedicationRequest.MedicationRequestSubstitutionComponent()\n+\t\t        .setAllowed(new BooleanType().setValue(true)).setReason(substitutionReason));\n+\t\t\n+\t\tmedicationRequest.addDetectedIssue().setReference(\"DetectedIssue/allergy\");\n+\t\tmedicationRequest.addEventHistory().setReference(\"#signature\").setDisplay(\"Author's Signature\");\n+\t\t\n+\t\tassertThat(testHelper(new MedicationRequest()).getDivAsString(), notNullValue());\n+\t\tassertThat(testHelper(medicationRequest).getDivAsString(), notNullValue());\n+\t}\n+\t\n+\tpublic Narrative testHelper(IBaseResource iBaseResource) {\n+\t\tNarrative narrative = DefaultNarrativeGeneratorForTest.generateDefaultNarrative(iBaseResource);\n+\t\tSystem.out.println(iBaseResource.getClass().getSimpleName() + \" Narrative Status:\" + narrative.getStatusAsString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 225}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2OTE0MDY5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#pullrequestreview-426914069", "createdAt": "2020-06-09T08:40:41Z", "commit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo0MDo0MVrOGg-xJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo0MDo0MVrOGg-xJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzNjAwNQ==", "bodyText": "@ibacher what do you think of @ShivanshRakesh   arranging his data into data sets ?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437236005", "createdAt": "2020-06-09T08:40:41Z", "author": {"login": "HerbertYiga"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/DefaultNarrativeTemplateTest.java", "diffHunk": "@@ -0,0 +1,230 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import java.util.Date;\n+\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.AllergyIntolerance;\n+import org.hl7.fhir.r4.model.Base64BinaryType;\n+import org.hl7.fhir.r4.model.BooleanType;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Dosage;\n+import org.hl7.fhir.r4.model.Duration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Medication;\n+import org.hl7.fhir.r4.model.MedicationRequest;\n+import org.hl7.fhir.r4.model.Narrative;\n+import org.hl7.fhir.r4.model.Period;\n+import org.hl7.fhir.r4.model.Provenance;\n+import org.hl7.fhir.r4.model.Quantity;\n+import org.hl7.fhir.r4.model.Range;\n+import org.hl7.fhir.r4.model.Reference;\n+import org.hl7.fhir.r4.model.Signature;\n+import org.hl7.fhir.r4.model.StringType;\n+import org.hl7.fhir.r4.model.Timing;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceClinical;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceVerification;\n+import org.junit.Test;\n+\n+public class DefaultNarrativeTemplateTest {\n+\t\n+\t@Test\n+\tpublic void testForAllergyIntolerance() {\n+\t\t// Example: https://www.hl7.org/fhir/allergyintolerance-example.html\n+\t\t\n+\t\tAllergyIntolerance allergyIntolerance = new AllergyIntolerance();\n+\t\t\n+\t\tallergyIntolerance.setId(\"example\");\n+\t\tallergyIntolerance.addIdentifier().setValue(\"12345678\");\n+\t\t\n+\t\tCodeableConcept clinicalStatus = new CodeableConcept();\n+\t\tclinicalStatus.addCoding().setCode(AllergyintoleranceClinical.ACTIVE.toCode())\n+\t\t        .setDisplay(AllergyintoleranceClinical.ACTIVE.getDisplay());\n+\t\tallergyIntolerance.setClinicalStatus(clinicalStatus);\n+\t\t\n+\t\tCodeableConcept verificationStatus = new CodeableConcept();\n+\t\tverificationStatus.addCoding().setCode(AllergyintoleranceVerification.CONFIRMED.toCode())\n+\t\t        .setDisplay(AllergyintoleranceVerification.CONFIRMED.getDisplay());\n+\t\tallergyIntolerance.setVerificationStatus(verificationStatus);\n+\t\t\n+\t\tallergyIntolerance.setType(AllergyIntolerance.AllergyIntoleranceType.fromCode(\"allergy\"));\n+\t\tallergyIntolerance.addCategory(new AllergyIntolerance.AllergyIntoleranceCategoryEnumFactory().fromCode(\"food\"));\n+\t\tallergyIntolerance\n+\t\t        .addCategory(new AllergyIntolerance.AllergyIntoleranceCategoryEnumFactory().fromCode(\"medication\"));\n+\t\tallergyIntolerance.setCriticality(AllergyIntolerance.AllergyIntoleranceCriticality.fromCode(\"high\"));\n+\t\t\n+\t\tCodeableConcept code = new CodeableConcept();\n+\t\tcode.addCoding().setCode(\"227493005\").setDisplay(\"Cashew Nuts\");\n+\t\tallergyIntolerance.setCode(code);\n+\t\tallergyIntolerance.setPatient(new Reference().setReference(\"Patient/10010\").setDisplay(\"PatientNAME\"));\n+\t\tallergyIntolerance.setOnset(new StringType().setValue(\"01/01/2004\"));\n+\t\tallergyIntolerance.setRecordedDate(new Date());\n+\t\tallergyIntolerance.setRecorder(new Reference().setReference(\"Practitioner/10011\"));\n+\t\tallergyIntolerance.setAsserter(new Reference().setReference(\"Patient/10211\").setDisplay(\"AsserterNAME\"));\n+\t\tallergyIntolerance.setLastOccurrence(new Date());\n+\t\tallergyIntolerance.addNote().setText(\n+\t\t    \"The criticality is high becasue of the observed anaphylactic reaction when challenged with cashew extract.\");\n+\t\t\n+\t\tAllergyIntolerance.AllergyIntoleranceReactionComponent allergyIntoleranceReactionComponent = new AllergyIntolerance.AllergyIntoleranceReactionComponent();\n+\t\tCodeableConcept substance = new CodeableConcept();\n+\t\tsubstance.addCoding().setCode(\"1160593\").setDisplay(\"cashew nut allergenic extract Injectale Product\");\n+\t\tallergyIntoleranceReactionComponent.setSubstance(substance);\n+\t\tallergyIntoleranceReactionComponent.addManifestation().addCoding().setCode(\"39579001\")\n+\t\t        .setDisplay(\"Anaphylactic reaction\");\n+\t\tallergyIntoleranceReactionComponent.setDescription(\n+\t\t    \"Challenge Protocol. Severe reaction to subcutaneous cashew extract. Epinephrine administered\");\n+\t\tallergyIntoleranceReactionComponent.setOnset(new Date());\n+\t\tallergyIntoleranceReactionComponent.setSeverity(AllergyIntolerance.AllergyIntoleranceSeverity.fromCode(\"severe\"));\n+\t\tCodeableConcept exposureRoute = new CodeableConcept();\n+\t\texposureRoute.addCoding().setCode(\"34206005\").setDisplay(\"Subcutaneous route\");\n+\t\tallergyIntoleranceReactionComponent.setExposureRoute(exposureRoute);\n+\t\tallergyIntolerance.addReaction(allergyIntoleranceReactionComponent);\n+\t\t\n+\t\tAllergyIntolerance.AllergyIntoleranceReactionComponent allergyIntoleranceReactionComponent1 = new AllergyIntolerance.AllergyIntoleranceReactionComponent();\n+\t\tallergyIntoleranceReactionComponent1.addManifestation().addCoding().setCode(\"64305001\").setDisplay(\"Urticaria\");\n+\t\tallergyIntoleranceReactionComponent1.setOnset(new Date());\n+\t\tallergyIntoleranceReactionComponent1.setSeverity(AllergyIntolerance.AllergyIntoleranceSeverity.fromCode(\"moderate\"));\n+\t\tallergyIntoleranceReactionComponent1.addNote()\n+\t\t        .setText(\"The patient reports that the onset of urticaria was within 15 minutes of eating cashews.\");\n+\t\tallergyIntolerance.addReaction(allergyIntoleranceReactionComponent1);\n+\t\t\n+\t\tassertThat(testHelper(new AllergyIntolerance()).getDivAsString(), notNullValue());\n+\t\tassertThat(testHelper(allergyIntolerance).getDivAsString(), notNullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void testForMedicationRequest() {\n+\t\t// https://www.hl7.org/fhir/medicationrequest0301.html\n+\t\t\n+\t\tMedicationRequest medicationRequest = new MedicationRequest();\n+\t\t\n+\t\tmedicationRequest.setId(\"medrx301\");\n+\t\t\n+\t\tCodeableConcept medicationCode = new CodeableConcept();\n+\t\tmedicationCode.addCoding().setSystem(\"http://snomed.info/sct\").setDisplay(\"Oral Form Oxycodone (product)\")\n+\t\t        .setCode(\"430127000\");\n+\t\tmedicationRequest.addContained(new Medication().setCode(medicationCode).setId(\"med0310\"));\n+\t\tProvenance provenance = new Provenance();\n+\t\tprovenance.addTarget().setReference(\"ServiceRequest/physiotherapy\");\n+\t\tprovenance.setRecorded(new Date());\n+\t\tProvenance.ProvenanceAgentComponent provenanceAgentComponent = new Provenance.ProvenanceAgentComponent();\n+\t\tprovenanceAgentComponent.addRole().addCoding().setCode(\"AUT\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/v3-ParticipationType\");\n+\t\tprovenanceAgentComponent.setWho(new Reference().setDisplay(\"Dr Adam Careful\").setReference(\"Practitioner/example\"));\n+\t\tprovenance.addAgent(provenanceAgentComponent);\n+\t\tSignature signature = new Signature();\n+\t\tsignature.addType().setSystem(\"urn:iso-astm:E1762-95:2013\").setCode(\"1.2.840.10065.1.12.1.1\")\n+\t\t        .setDisplay(\"Author's Signature\");\n+\t\tsignature.setWhen(new Date());\n+\t\tsignature.setWho(new Reference().setReference(\"Practitioner/example\").setDisplay(\"Dr Adam Careful\"));\n+\t\tsignature.setTargetFormat(\"application/fhir+xml\");\n+\t\tsignature.setSigFormat(\"application/signature+xml\");\n+\t\tsignature.setDataElement(new Base64BinaryType(\"dGhpcyBibG9iIGlzIHNuaXBwZWQ=\"));\n+\t\tprovenance.addSignature(signature);\n+\t\tmedicationRequest.addContained(provenance);\n+\t\t\n+\t\tmedicationRequest.addIdentifier().setUse(Identifier.IdentifierUse.OFFICIAL)\n+\t\t        .setSystem(\"http://www.bmc.nl/portal/prescriptions\").setValue(\"12345689\");\n+\t\tmedicationRequest.setStatus(MedicationRequest.MedicationRequestStatus.COMPLETED);\n+\t\t\n+\t\tCodeableConcept statusReason = new CodeableConcept();\n+\t\tstatusReason.addCoding().setDisplay(\"Try another treatment first\").setCode(\"altchoice\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 142}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MTg2MDQ1", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#pullrequestreview-427186045", "createdAt": "2020-06-09T14:05:15Z", "commit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDowNToxNVrOGhLyHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDozNzowNlrOGhNRdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0OTI0NA==", "bodyText": "Always prefer the should style of naming tests over test to make it clear what the test is testing. For example, I would name this shouldGenerateAnAllergyIntoleranceNarrative.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437449244", "createdAt": "2020-06-09T14:05:15Z", "author": {"login": "ibacher"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/DefaultNarrativeTemplateTest.java", "diffHunk": "@@ -0,0 +1,230 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import java.util.Date;\n+\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.AllergyIntolerance;\n+import org.hl7.fhir.r4.model.Base64BinaryType;\n+import org.hl7.fhir.r4.model.BooleanType;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Dosage;\n+import org.hl7.fhir.r4.model.Duration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Medication;\n+import org.hl7.fhir.r4.model.MedicationRequest;\n+import org.hl7.fhir.r4.model.Narrative;\n+import org.hl7.fhir.r4.model.Period;\n+import org.hl7.fhir.r4.model.Provenance;\n+import org.hl7.fhir.r4.model.Quantity;\n+import org.hl7.fhir.r4.model.Range;\n+import org.hl7.fhir.r4.model.Reference;\n+import org.hl7.fhir.r4.model.Signature;\n+import org.hl7.fhir.r4.model.StringType;\n+import org.hl7.fhir.r4.model.Timing;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceClinical;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceVerification;\n+import org.junit.Test;\n+\n+public class DefaultNarrativeTemplateTest {\n+\t\n+\t@Test\n+\tpublic void testForAllergyIntolerance() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2NDc0Mw==", "bodyText": "Rather than populating this resource completely in code like this, it seems like it would be simpler to download the file from here, remove the \"text\" section and save that in the test resources, then load it.\nFor example:\n// ensure ctx is a FhirContext with the correct NarrativeGenerator\nIParser parser = ctx.newJsonParser();\n\n// load initial data (this is our \"given\" for the test)\nAllergyIntolerance given = parser.parseResource(AllergyIntolerance.class, getClass().getClassLoader().getResourceAsStream(\"allergyintolerance-example.json\"));\n\nAllergyIntolerance result = parser.parseResource(AllergyIntolerance.class, parser.encodeResourceToString(allergyIntolerance));\n\n// now our assertions\nassertThat(result, notNullValue());\nassertThat(result.getText(), notNullValue());\nassertThat(result.getText().getStatusAsString(), equalTo(\"generated\"));\n// note that we should check the generated result against a reference of what we expect it to be\nassertThat(result.getText().getDivAsString(), equalTo(getClass().getClassLoader().getResourceAsStream(\"expected/allergyintolerance-example.html\"));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437464743", "createdAt": "2020-06-09T14:25:34Z", "author": {"login": "ibacher"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/DefaultNarrativeTemplateTest.java", "diffHunk": "@@ -0,0 +1,230 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import java.util.Date;\n+\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.AllergyIntolerance;\n+import org.hl7.fhir.r4.model.Base64BinaryType;\n+import org.hl7.fhir.r4.model.BooleanType;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Dosage;\n+import org.hl7.fhir.r4.model.Duration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Medication;\n+import org.hl7.fhir.r4.model.MedicationRequest;\n+import org.hl7.fhir.r4.model.Narrative;\n+import org.hl7.fhir.r4.model.Period;\n+import org.hl7.fhir.r4.model.Provenance;\n+import org.hl7.fhir.r4.model.Quantity;\n+import org.hl7.fhir.r4.model.Range;\n+import org.hl7.fhir.r4.model.Reference;\n+import org.hl7.fhir.r4.model.Signature;\n+import org.hl7.fhir.r4.model.StringType;\n+import org.hl7.fhir.r4.model.Timing;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceClinical;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceVerification;\n+import org.junit.Test;\n+\n+public class DefaultNarrativeTemplateTest {\n+\t\n+\t@Test\n+\tpublic void testForAllergyIntolerance() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0OTI0NA=="}, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2NjY1OQ==", "bodyText": "We should get away from referring to \"DefaultNarrative\". I understand that there's a difference  whether the narrative is generated from the HAPI defaults or ours, but by and large, we don't care about that difference. In my mind, it would almost make sense to break out a new series of classes to test narrative generation alone, so, e.g. having an AllergyIntoleranceNarrativeTest class, etc.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437466659", "createdAt": "2020-06-09T14:27:59Z", "author": {"login": "ibacher"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/DefaultNarrativeTemplateTest.java", "diffHunk": "@@ -0,0 +1,230 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import java.util.Date;\n+\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.AllergyIntolerance;\n+import org.hl7.fhir.r4.model.Base64BinaryType;\n+import org.hl7.fhir.r4.model.BooleanType;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Dosage;\n+import org.hl7.fhir.r4.model.Duration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Medication;\n+import org.hl7.fhir.r4.model.MedicationRequest;\n+import org.hl7.fhir.r4.model.Narrative;\n+import org.hl7.fhir.r4.model.Period;\n+import org.hl7.fhir.r4.model.Provenance;\n+import org.hl7.fhir.r4.model.Quantity;\n+import org.hl7.fhir.r4.model.Range;\n+import org.hl7.fhir.r4.model.Reference;\n+import org.hl7.fhir.r4.model.Signature;\n+import org.hl7.fhir.r4.model.StringType;\n+import org.hl7.fhir.r4.model.Timing;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceClinical;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceVerification;\n+import org.junit.Test;\n+\n+public class DefaultNarrativeTemplateTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2NzcxOQ==", "bodyText": "Why is this a separate class?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437467719", "createdAt": "2020-06-09T14:29:17Z", "author": {"login": "ibacher"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/DefaultNarrativeGeneratorForTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import ca.uhn.fhir.context.FhirContext;\n+import ca.uhn.fhir.narrative.CustomThymeleafNarrativeGenerator;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.Narrative;\n+import org.openmrs.module.fhir2.FhirConstants;\n+\n+public class DefaultNarrativeGeneratorForTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2OTY3NA==", "bodyText": "Rather than using a logger (which is a good idea if we were going to output anything) or... manually reading the output, use assertions to check that these are the expected values. That's why they exist.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437469674", "createdAt": "2020-06-09T14:31:49Z", "author": {"login": "ibacher"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/DefaultNarrativeTemplateTest.java", "diffHunk": "@@ -0,0 +1,230 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import java.util.Date;\n+\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.AllergyIntolerance;\n+import org.hl7.fhir.r4.model.Base64BinaryType;\n+import org.hl7.fhir.r4.model.BooleanType;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Dosage;\n+import org.hl7.fhir.r4.model.Duration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Medication;\n+import org.hl7.fhir.r4.model.MedicationRequest;\n+import org.hl7.fhir.r4.model.Narrative;\n+import org.hl7.fhir.r4.model.Period;\n+import org.hl7.fhir.r4.model.Provenance;\n+import org.hl7.fhir.r4.model.Quantity;\n+import org.hl7.fhir.r4.model.Range;\n+import org.hl7.fhir.r4.model.Reference;\n+import org.hl7.fhir.r4.model.Signature;\n+import org.hl7.fhir.r4.model.StringType;\n+import org.hl7.fhir.r4.model.Timing;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceClinical;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceVerification;\n+import org.junit.Test;\n+\n+public class DefaultNarrativeTemplateTest {\n+\t\n+\t@Test\n+\tpublic void testForAllergyIntolerance() {\n+\t\t// Example: https://www.hl7.org/fhir/allergyintolerance-example.html\n+\t\t\n+\t\tAllergyIntolerance allergyIntolerance = new AllergyIntolerance();\n+\t\t\n+\t\tallergyIntolerance.setId(\"example\");\n+\t\tallergyIntolerance.addIdentifier().setValue(\"12345678\");\n+\t\t\n+\t\tCodeableConcept clinicalStatus = new CodeableConcept();\n+\t\tclinicalStatus.addCoding().setCode(AllergyintoleranceClinical.ACTIVE.toCode())\n+\t\t        .setDisplay(AllergyintoleranceClinical.ACTIVE.getDisplay());\n+\t\tallergyIntolerance.setClinicalStatus(clinicalStatus);\n+\t\t\n+\t\tCodeableConcept verificationStatus = new CodeableConcept();\n+\t\tverificationStatus.addCoding().setCode(AllergyintoleranceVerification.CONFIRMED.toCode())\n+\t\t        .setDisplay(AllergyintoleranceVerification.CONFIRMED.getDisplay());\n+\t\tallergyIntolerance.setVerificationStatus(verificationStatus);\n+\t\t\n+\t\tallergyIntolerance.setType(AllergyIntolerance.AllergyIntoleranceType.fromCode(\"allergy\"));\n+\t\tallergyIntolerance.addCategory(new AllergyIntolerance.AllergyIntoleranceCategoryEnumFactory().fromCode(\"food\"));\n+\t\tallergyIntolerance\n+\t\t        .addCategory(new AllergyIntolerance.AllergyIntoleranceCategoryEnumFactory().fromCode(\"medication\"));\n+\t\tallergyIntolerance.setCriticality(AllergyIntolerance.AllergyIntoleranceCriticality.fromCode(\"high\"));\n+\t\t\n+\t\tCodeableConcept code = new CodeableConcept();\n+\t\tcode.addCoding().setCode(\"227493005\").setDisplay(\"Cashew Nuts\");\n+\t\tallergyIntolerance.setCode(code);\n+\t\tallergyIntolerance.setPatient(new Reference().setReference(\"Patient/10010\").setDisplay(\"PatientNAME\"));\n+\t\tallergyIntolerance.setOnset(new StringType().setValue(\"01/01/2004\"));\n+\t\tallergyIntolerance.setRecordedDate(new Date());\n+\t\tallergyIntolerance.setRecorder(new Reference().setReference(\"Practitioner/10011\"));\n+\t\tallergyIntolerance.setAsserter(new Reference().setReference(\"Patient/10211\").setDisplay(\"AsserterNAME\"));\n+\t\tallergyIntolerance.setLastOccurrence(new Date());\n+\t\tallergyIntolerance.addNote().setText(\n+\t\t    \"The criticality is high becasue of the observed anaphylactic reaction when challenged with cashew extract.\");\n+\t\t\n+\t\tAllergyIntolerance.AllergyIntoleranceReactionComponent allergyIntoleranceReactionComponent = new AllergyIntolerance.AllergyIntoleranceReactionComponent();\n+\t\tCodeableConcept substance = new CodeableConcept();\n+\t\tsubstance.addCoding().setCode(\"1160593\").setDisplay(\"cashew nut allergenic extract Injectale Product\");\n+\t\tallergyIntoleranceReactionComponent.setSubstance(substance);\n+\t\tallergyIntoleranceReactionComponent.addManifestation().addCoding().setCode(\"39579001\")\n+\t\t        .setDisplay(\"Anaphylactic reaction\");\n+\t\tallergyIntoleranceReactionComponent.setDescription(\n+\t\t    \"Challenge Protocol. Severe reaction to subcutaneous cashew extract. Epinephrine administered\");\n+\t\tallergyIntoleranceReactionComponent.setOnset(new Date());\n+\t\tallergyIntoleranceReactionComponent.setSeverity(AllergyIntolerance.AllergyIntoleranceSeverity.fromCode(\"severe\"));\n+\t\tCodeableConcept exposureRoute = new CodeableConcept();\n+\t\texposureRoute.addCoding().setCode(\"34206005\").setDisplay(\"Subcutaneous route\");\n+\t\tallergyIntoleranceReactionComponent.setExposureRoute(exposureRoute);\n+\t\tallergyIntolerance.addReaction(allergyIntoleranceReactionComponent);\n+\t\t\n+\t\tAllergyIntolerance.AllergyIntoleranceReactionComponent allergyIntoleranceReactionComponent1 = new AllergyIntolerance.AllergyIntoleranceReactionComponent();\n+\t\tallergyIntoleranceReactionComponent1.addManifestation().addCoding().setCode(\"64305001\").setDisplay(\"Urticaria\");\n+\t\tallergyIntoleranceReactionComponent1.setOnset(new Date());\n+\t\tallergyIntoleranceReactionComponent1.setSeverity(AllergyIntolerance.AllergyIntoleranceSeverity.fromCode(\"moderate\"));\n+\t\tallergyIntoleranceReactionComponent1.addNote()\n+\t\t        .setText(\"The patient reports that the onset of urticaria was within 15 minutes of eating cashews.\");\n+\t\tallergyIntolerance.addReaction(allergyIntoleranceReactionComponent1);\n+\t\t\n+\t\tassertThat(testHelper(new AllergyIntolerance()).getDivAsString(), notNullValue());\n+\t\tassertThat(testHelper(allergyIntolerance).getDivAsString(), notNullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void testForMedicationRequest() {\n+\t\t// https://www.hl7.org/fhir/medicationrequest0301.html\n+\t\t\n+\t\tMedicationRequest medicationRequest = new MedicationRequest();\n+\t\t\n+\t\tmedicationRequest.setId(\"medrx301\");\n+\t\t\n+\t\tCodeableConcept medicationCode = new CodeableConcept();\n+\t\tmedicationCode.addCoding().setSystem(\"http://snomed.info/sct\").setDisplay(\"Oral Form Oxycodone (product)\")\n+\t\t        .setCode(\"430127000\");\n+\t\tmedicationRequest.addContained(new Medication().setCode(medicationCode).setId(\"med0310\"));\n+\t\tProvenance provenance = new Provenance();\n+\t\tprovenance.addTarget().setReference(\"ServiceRequest/physiotherapy\");\n+\t\tprovenance.setRecorded(new Date());\n+\t\tProvenance.ProvenanceAgentComponent provenanceAgentComponent = new Provenance.ProvenanceAgentComponent();\n+\t\tprovenanceAgentComponent.addRole().addCoding().setCode(\"AUT\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/v3-ParticipationType\");\n+\t\tprovenanceAgentComponent.setWho(new Reference().setDisplay(\"Dr Adam Careful\").setReference(\"Practitioner/example\"));\n+\t\tprovenance.addAgent(provenanceAgentComponent);\n+\t\tSignature signature = new Signature();\n+\t\tsignature.addType().setSystem(\"urn:iso-astm:E1762-95:2013\").setCode(\"1.2.840.10065.1.12.1.1\")\n+\t\t        .setDisplay(\"Author's Signature\");\n+\t\tsignature.setWhen(new Date());\n+\t\tsignature.setWho(new Reference().setReference(\"Practitioner/example\").setDisplay(\"Dr Adam Careful\"));\n+\t\tsignature.setTargetFormat(\"application/fhir+xml\");\n+\t\tsignature.setSigFormat(\"application/signature+xml\");\n+\t\tsignature.setDataElement(new Base64BinaryType(\"dGhpcyBibG9iIGlzIHNuaXBwZWQ=\"));\n+\t\tprovenance.addSignature(signature);\n+\t\tmedicationRequest.addContained(provenance);\n+\t\t\n+\t\tmedicationRequest.addIdentifier().setUse(Identifier.IdentifierUse.OFFICIAL)\n+\t\t        .setSystem(\"http://www.bmc.nl/portal/prescriptions\").setValue(\"12345689\");\n+\t\tmedicationRequest.setStatus(MedicationRequest.MedicationRequestStatus.COMPLETED);\n+\t\t\n+\t\tCodeableConcept statusReason = new CodeableConcept();\n+\t\tstatusReason.addCoding().setDisplay(\"Try another treatment first\").setCode(\"altchoice\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/medicationrequest-status-reason\");\n+\t\tmedicationRequest.setStatusReason(statusReason);\n+\t\tmedicationRequest.setIntent(MedicationRequest.MedicationRequestIntent.ORDER);\n+\t\tmedicationRequest.addCategory().addCoding()\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/medicationrequest-category\").setCode(\"inpatient\")\n+\t\t        .setDisplay(\"Inpatient\");\n+\t\t\n+\t\tmedicationRequest.setMedication(new Reference().setReference(\"#med0310\"));\n+\t\tmedicationRequest.setSubject(new Reference().setReference(\"Patient/pat1\").setDisplay(\"Donald Duck\"));\n+\t\tmedicationRequest.setEncounter(\n+\t\t    new Reference().setDisplay(\"encounter who leads to this prescription\").setReference(\"Encounter/f201\"));\n+\t\tmedicationRequest.addSupportingInformation().setReference(\"Procedure/biopsy\");\n+\t\tmedicationRequest.addSupportingInformation().setReference(\"Procedure/biopsy\");\n+\t\tmedicationRequest.setAuthoredOn(new Date());\n+\t\tmedicationRequest.setRequester(new Reference().setReference(\"Practitioner/f007\").setDisplay(\"Patrick Pump\"));\n+\t\tmedicationRequest.setPerformer(new Reference().setReference(\"Practitioner/f204\").setDisplay(\"Carla Espinosa\"));\n+\t\tCodeableConcept performerType = new CodeableConcept();\n+\t\tperformerType.addCoding().setDisplay(\"Public Health Nurse\").setCode(\"26369006\").setSystem(\"http://snomed.info/sct\");\n+\t\tmedicationRequest.setPerformerType(performerType);\n+\t\tmedicationRequest.addReasonCode().addCoding().setSystem(\"http://snomed.info/sct\").setCode(\"297217002\")\n+\t\t        .setDisplay(\"Rib Pain (finding)\");\n+\t\tmedicationRequest.addInsurance().setReference(\"Coverage/9876B1\");\n+\t\tmedicationRequest.addNote().setText(\"Patient told to take with food\");\n+\t\t\n+\t\tTiming timing = new Timing();\n+\t\ttiming.setRepeat(new Timing.TimingRepeatComponent().setFrequency(1).setPeriod(4).setPeriodMax(6)\n+\t\t        .setPeriodUnit(Timing.UnitsOfTime.H));\n+\t\tDosage dosage = new Dosage();\n+\t\tdosage.setSequence(1).setText(\"one to two tablets every 4-6 hours as needed for rib pain\")\n+\t\t        .setPatientInstruction(\"Take one to two tablets every four to six hours as needed for rib pain\")\n+\t\t        .setTiming(timing);\n+\t\tdosage.addAdditionalInstruction().addCoding().setDisplay(\n+\t\t    \"Warning. May cause drowsiness. If affected do not drive or operate machinery. Avoid alcoholic drink (qualifier value)\")\n+\t\t        .setCode(\"418914006\").setSystem(\"http://snomed.info/sct\");\n+\t\tCodeableConcept asNeeded = new CodeableConcept();\n+\t\tasNeeded.addCoding().setCode(\"297217002\").setSystem(\"http://snomed.info/sct\").setDisplay(\"Rib Pain (finding)\");\n+\t\tdosage.setAsNeeded(asNeeded);\n+\t\tCodeableConcept route = new CodeableConcept();\n+\t\troute.addCoding().setDisplay(\"Oral Route\").setSystem(\"http://snomed.info/sct\").setCode(\"26643006\");\n+\t\tdosage.setRoute(route);\n+\t\tCodeableConcept method = new CodeableConcept();\n+\t\tmethod.addCoding().setDisplay(\"Swallow - dosing instruction imperative (qualifier value)\")\n+\t\t        .setSystem(\"http://snomed.info/sct\").setCode(\"421521009\");\n+\t\tdosage.setMethod(method);\n+\t\t\n+\t\tCodeableConcept doseandrateType = new CodeableConcept();\n+\t\tdoseandrateType.addCoding().setCode(\"ordered\").setDisplay(\"Ordered\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/dose-rate-type\");\n+\t\tRange doseRange = new Range();\n+\t\tdoseRange.setLow(new Quantity().setValue(1).setUnit(\"TAB\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm\").setCode(\"TAB\"));\n+\t\tdoseRange.setHigh(new Quantity().setValue(2).setUnit(\"TAB\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm\").setCode(\"TAB\"));\n+\t\tdosage.addDoseAndRate().setDose(doseRange).setType(doseandrateType);\n+\t\t\n+\t\tmedicationRequest.addDosageInstruction(dosage);\n+\t\t\n+\t\tDuration duration = new Duration();\n+\t\tduration.setValue(10).setUnit(\"days\").setSystem(\"http://unitsofmeasure.org\").setCode(\"d\");\n+\t\tmedicationRequest.setDispenseRequest(new MedicationRequest.MedicationRequestDispenseRequestComponent()\n+\t\t        .setValidityPeriod(new Period().setStart(new Date()).setEnd(new Date())).setNumberOfRepeatsAllowed(0)\n+\t\t        .setQuantity(new Quantity().setValue(30).setUnit(\"TAB\")\n+\t\t                .setSystem(\"http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm\").setCode(\"TAB\"))\n+\t\t        .setExpectedSupplyDuration(duration).setPerformer(new Reference().setReference(\"Practitioner/f001\"))\n+\t\t        .setInitialFill(new MedicationRequest.MedicationRequestDispenseRequestInitialFillComponent()\n+\t\t                .setQuantity(new Quantity().setValue(123).setSystem(\"something\")).setDuration(duration)));\n+\t\t\n+\t\tCodeableConcept substitutionReason = new CodeableConcept();\n+\t\tsubstitutionReason.addCoding().setSystem(\"http://terminology.hl7.org/CodeSystem/v3-ActReason\").setCode(\"FP\")\n+\t\t        .setDisplay(\"formulary policy\");\n+\t\tmedicationRequest.setSubstitution(new MedicationRequest.MedicationRequestSubstitutionComponent()\n+\t\t        .setAllowed(new BooleanType().setValue(true)).setReason(substitutionReason));\n+\t\t\n+\t\tmedicationRequest.addDetectedIssue().setReference(\"DetectedIssue/allergy\");\n+\t\tmedicationRequest.addEventHistory().setReference(\"#signature\").setDisplay(\"Author's Signature\");\n+\t\t\n+\t\tassertThat(testHelper(new MedicationRequest()).getDivAsString(), notNullValue());\n+\t\tassertThat(testHelper(medicationRequest).getDivAsString(), notNullValue());\n+\t}\n+\t\n+\tpublic Narrative testHelper(IBaseResource iBaseResource) {\n+\t\tNarrative narrative = DefaultNarrativeGeneratorForTest.generateDefaultNarrative(iBaseResource);\n+\t\tSystem.out.println(iBaseResource.getClass().getSimpleName() + \" Narrative Status:\" + narrative.getStatusAsString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEyOTcwNg=="}, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 225}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3MjQ2MQ==", "bodyText": "Several things:\n\nComments here are not very helpful. If we need a resource just for testing, it must to be included in the base POM with the <scope>test</scope>. Otherwise, this jar ends up bundled in the OMOD (by default, Maven artifacts are loaded with the scope compile unless you tell Maven otherwise).\nWe should move away from using GSON at all. HAPI has moved from GSON to using Jackson, which should already be available on the class path.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437472461", "createdAt": "2020-06-09T14:35:31Z", "author": {"login": "ibacher"}, "path": "omod/pom.xml", "diffHunk": "@@ -79,6 +79,25 @@\n \t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n \t\t\t<artifactId>jackson-databind</artifactId>\n \t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.thymeleaf</groupId>\n+\t\t\t<artifactId>thymeleaf</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>commons-io</groupId>\n+\t\t\t<artifactId>commons-io</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.ben-manes.caffeine</groupId>\n+\t\t\t<artifactId>caffeine</artifactId>\n+\t\t</dependency>\n+<!--\t///\tJust for testing ///    -->\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.code.gson</groupId>\n+\t\t\t<artifactId>gson</artifactId>\n+\t\t\t<version>2.8.5</version>\n+\t\t</dependency>\n+<!--\t////////////////////////    -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3MjczOA==", "bodyText": "Why not just call this narratives.properties?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437472738", "createdAt": "2020-06-09T14:35:55Z", "author": {"login": "ibacher"}, "path": "omod/src/main/resources/defaultNarratives.properties", "diffHunk": "@@ -0,0 +1,35 @@\n+#", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3MzA0OA==", "bodyText": "Always have a new line at the end of the file. This is primarily to prevent some Git weirdness issues.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437473048", "createdAt": "2020-06-09T14:36:20Z", "author": {"login": "ibacher"}, "path": "omod/src/main/resources/defaultNarratives/AllergyIntolerance.html", "diffHunk": "@@ -0,0 +1,153 @@\n+<!--/*\n+This top section is not exported as a part of the Narrative,\n+it is only present so that this template can be viewed in\n+a browser.\n+-->\n+<html>\n+\n+<head>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"narrative.css\"/>\n+</head>\n+\n+<body>\n+<!--*/-->\n+\n+<div>\n+    <table class=\"hapiPropertyTable\">\n+        <tbody>\n+        <tr th:if=\"${resource.id}\">\n+            <td>Id:</td>\n+            <td th:text=\"${resource.id}\"></td>\n+        </tr>\n+        <tr th:if=\"${not resource.identifier.empty}\">\n+            <td>Identifier:</td>\n+            <td>\n+                <th:block th:each=\"identifier: ${resource.identifier}\">\n+                    <div th:narrative=\"${identifier}\"></div>\n+                </th:block>\n+            </td>\n+        </tr>\n+        <tr th:if=\"${not resource.clinicalStatus}\">\n+            <td>Clinical Status:</td>\n+            <td th:narrative=\"${resource.clinicalStatus}\"></td>\n+        </tr>\n+        <tr th:if=\"${not resource.verificationStatus}\">\n+            <td>Verification Status:</td>\n+            <td th:narrative=\"${resource.verificationStatus}\"></td>\n+        </tr>\n+        <tr th:if=\"${resource.type}\">\n+            <td>Type:</td>\n+            <td th:text=\"${resource.type.display}\"></td>\n+        </tr>\n+        <tr th:if=\"${not resource.category.empty}\">\n+            <td>Category:</td>\n+            <td>\n+                <th:block th:each=\"category: ${resource.category}\">\n+                    <th:block th:if=\"${not category.empty}\" th:text=\"${category.code}\"></th:block>\n+                </th:block>\n+            </td>\n+        </tr>\n+        <tr th:if=\"${resource.criticality}\">\n+            <td>Criticality:</td>\n+            <td th:text=\"${resource.criticality.display}\"></td>\n+        </tr>\n+        <tr th:if=\"${not resource.code.empty}\">\n+            <td>Code:</td>\n+            <td th:narrative=\"${resource.code}\"></td>\n+        </tr>\n+        <tr th:if=\"${not resource.patient.empty}\">\n+            <td>Patient:</td>\n+            <td th:narrative=\"${resource.patient}\"></td>\n+        </tr>\n+        <th:block th:unless=\"${fhirVersion} eq 'DSTU3'\">\n+            <tr th:if=\"${not resource.encounter.empty}\">\n+                <td>Encounter:</td>\n+                <td th:narrative=\"${resource.encounter}\"></td>\n+            </tr>\n+        </th:block>\n+        <tr th:if=\"${resource.onset}\">\n+            <td>Onset:</td>\n+            <td th:narrative=\"${resource.onset}\"></td>\n+        </tr>\n+        <th:block th:if=\"${fhirVersion} eq 'DSTU3'\">\n+            <tr th:if=\"${resource.assertedDate}\">\n+                <td>Recorded Date:</td>\n+                <td th:text=\"${#dates.format(resource.assertedDate,'dd/MM/yyyy hh:mm:ss a')}\"></td>\n+            </tr>\n+        </th:block>\n+        <th:block th:unless=\"${fhirVersion} eq 'DSTU3'\">\n+            <tr th:if=\"${resource.recordedDate}\">\n+                <td>Recorded Date:</td>\n+                <td th:text=\"${#dates.format(resource.recordedDate,'dd/MM/yyyy hh:mm:ss a')}\"></td>\n+            </tr>\n+        </th:block>\n+        <tr th:if=\"${not resource.recorder.empty}\">\n+            <td>Recorder:</td>\n+            <td th:narrative=\"${resource.recorder}\"></td>\n+        </tr>\n+        <tr th:if=\"${not resource.asserter.empty}\">\n+            <td>Asserter:</td>\n+            <td th:narrative=\"${resource.asserter}\"></td>\n+        </tr>\n+        <tr th:if=\"${resource.lastOccurrence}\">\n+            <td>Last Occurrence:</td>\n+            <td th:text=\"${#dates.format(resource.lastOccurrence,'dd/MM/yyyy')}\"></td>\n+        </tr>\n+        <tr th:if=\"${not resource.note.empty}\">\n+            <td>Note:</td>\n+            <td>\n+                <div th:each=\"note: ${resource.note}\" th:text=\"${note.text}\"></div>\n+            </td>\n+        </tr>\n+        </tbody>\n+    </table>\n+    <th:block th:each=\"reaction: ${resource.reaction}\">\n+        <br/>\n+        <table class=\"hapiPropertyTable\">\n+            <tbody>\n+            <tr>\n+                <td>Reaction:</td>\n+                <td></td>\n+            </tr>\n+            <tr th:if=\"${not reaction.substance.empty}\">\n+                <td>Substance:</td>\n+                <td th:narrative=\"${reaction.substance}\"></td>\n+            </tr>\n+            <tr th:if=\"${not reaction.manifestation.empty}\">\n+                <td>Manifestation:</td>\n+                <td>\n+                    <th:block th:each=\"manifestation: ${reaction.manifestation}\">\n+                        <div th:if=\"${not manifestation.empty}\" th:narrative=\"${manifestation}\"></div>\n+                    </th:block>\n+                </td>\n+            </tr>\n+            <tr th:if=\"${reaction.description}\">\n+                <td>Description:</td>\n+                <td th:text=\"${reaction.description}\"></td>\n+            </tr>\n+            <tr th:if=\"${reaction.onset}\">\n+                <td>Onset:</td>\n+                <td th:text=\"${#dates.format(reaction.onset,'dd/MM/yyyy')}\"></td>\n+            </tr>\n+            <tr th:if=\"${reaction.severity}\">\n+                <td>Severity:</td>\n+                <td th:text=\"${reaction.severity}\"></td>\n+            </tr>\n+            <tr th:if=\"${not reaction.exposureRoute.empty}\">\n+                <td>Exposure Route:</td>\n+                <td th:narrative=\"${reaction.exposureRoute}\"></td>\n+            </tr>\n+            <tr th:if=\"${not reaction.noteFirstRep.empty}\">\n+                <td>Note:</td>\n+                <td th:text=\"${reaction.noteFirstRep.text}\"></td>\n+            </tr>\n+            </tbody>\n+        </table>\n+    </th:block>\n+</div>\n+\n+<!--/*-->\n+</body>\n+\n+</html>\n+<!--*/-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3MzY1NQ==", "bodyText": "@HerbertYiga If by this you mean \"should this data be stored in a file and loaded from there\" my answer would be yes. This should be a different mechanism from loading data into the database, if only because there are a number of layers between the raw data in the database and the narrative that we don't need to worry about here.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437473655", "createdAt": "2020-06-09T14:37:06Z", "author": {"login": "ibacher"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/DefaultNarrativeTemplateTest.java", "diffHunk": "@@ -0,0 +1,230 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import java.util.Date;\n+\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.AllergyIntolerance;\n+import org.hl7.fhir.r4.model.Base64BinaryType;\n+import org.hl7.fhir.r4.model.BooleanType;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Dosage;\n+import org.hl7.fhir.r4.model.Duration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Medication;\n+import org.hl7.fhir.r4.model.MedicationRequest;\n+import org.hl7.fhir.r4.model.Narrative;\n+import org.hl7.fhir.r4.model.Period;\n+import org.hl7.fhir.r4.model.Provenance;\n+import org.hl7.fhir.r4.model.Quantity;\n+import org.hl7.fhir.r4.model.Range;\n+import org.hl7.fhir.r4.model.Reference;\n+import org.hl7.fhir.r4.model.Signature;\n+import org.hl7.fhir.r4.model.StringType;\n+import org.hl7.fhir.r4.model.Timing;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceClinical;\n+import org.hl7.fhir.r4.model.codesystems.AllergyintoleranceVerification;\n+import org.junit.Test;\n+\n+public class DefaultNarrativeTemplateTest {\n+\t\n+\t@Test\n+\tpublic void testForAllergyIntolerance() {\n+\t\t// Example: https://www.hl7.org/fhir/allergyintolerance-example.html\n+\t\t\n+\t\tAllergyIntolerance allergyIntolerance = new AllergyIntolerance();\n+\t\t\n+\t\tallergyIntolerance.setId(\"example\");\n+\t\tallergyIntolerance.addIdentifier().setValue(\"12345678\");\n+\t\t\n+\t\tCodeableConcept clinicalStatus = new CodeableConcept();\n+\t\tclinicalStatus.addCoding().setCode(AllergyintoleranceClinical.ACTIVE.toCode())\n+\t\t        .setDisplay(AllergyintoleranceClinical.ACTIVE.getDisplay());\n+\t\tallergyIntolerance.setClinicalStatus(clinicalStatus);\n+\t\t\n+\t\tCodeableConcept verificationStatus = new CodeableConcept();\n+\t\tverificationStatus.addCoding().setCode(AllergyintoleranceVerification.CONFIRMED.toCode())\n+\t\t        .setDisplay(AllergyintoleranceVerification.CONFIRMED.getDisplay());\n+\t\tallergyIntolerance.setVerificationStatus(verificationStatus);\n+\t\t\n+\t\tallergyIntolerance.setType(AllergyIntolerance.AllergyIntoleranceType.fromCode(\"allergy\"));\n+\t\tallergyIntolerance.addCategory(new AllergyIntolerance.AllergyIntoleranceCategoryEnumFactory().fromCode(\"food\"));\n+\t\tallergyIntolerance\n+\t\t        .addCategory(new AllergyIntolerance.AllergyIntoleranceCategoryEnumFactory().fromCode(\"medication\"));\n+\t\tallergyIntolerance.setCriticality(AllergyIntolerance.AllergyIntoleranceCriticality.fromCode(\"high\"));\n+\t\t\n+\t\tCodeableConcept code = new CodeableConcept();\n+\t\tcode.addCoding().setCode(\"227493005\").setDisplay(\"Cashew Nuts\");\n+\t\tallergyIntolerance.setCode(code);\n+\t\tallergyIntolerance.setPatient(new Reference().setReference(\"Patient/10010\").setDisplay(\"PatientNAME\"));\n+\t\tallergyIntolerance.setOnset(new StringType().setValue(\"01/01/2004\"));\n+\t\tallergyIntolerance.setRecordedDate(new Date());\n+\t\tallergyIntolerance.setRecorder(new Reference().setReference(\"Practitioner/10011\"));\n+\t\tallergyIntolerance.setAsserter(new Reference().setReference(\"Patient/10211\").setDisplay(\"AsserterNAME\"));\n+\t\tallergyIntolerance.setLastOccurrence(new Date());\n+\t\tallergyIntolerance.addNote().setText(\n+\t\t    \"The criticality is high becasue of the observed anaphylactic reaction when challenged with cashew extract.\");\n+\t\t\n+\t\tAllergyIntolerance.AllergyIntoleranceReactionComponent allergyIntoleranceReactionComponent = new AllergyIntolerance.AllergyIntoleranceReactionComponent();\n+\t\tCodeableConcept substance = new CodeableConcept();\n+\t\tsubstance.addCoding().setCode(\"1160593\").setDisplay(\"cashew nut allergenic extract Injectale Product\");\n+\t\tallergyIntoleranceReactionComponent.setSubstance(substance);\n+\t\tallergyIntoleranceReactionComponent.addManifestation().addCoding().setCode(\"39579001\")\n+\t\t        .setDisplay(\"Anaphylactic reaction\");\n+\t\tallergyIntoleranceReactionComponent.setDescription(\n+\t\t    \"Challenge Protocol. Severe reaction to subcutaneous cashew extract. Epinephrine administered\");\n+\t\tallergyIntoleranceReactionComponent.setOnset(new Date());\n+\t\tallergyIntoleranceReactionComponent.setSeverity(AllergyIntolerance.AllergyIntoleranceSeverity.fromCode(\"severe\"));\n+\t\tCodeableConcept exposureRoute = new CodeableConcept();\n+\t\texposureRoute.addCoding().setCode(\"34206005\").setDisplay(\"Subcutaneous route\");\n+\t\tallergyIntoleranceReactionComponent.setExposureRoute(exposureRoute);\n+\t\tallergyIntolerance.addReaction(allergyIntoleranceReactionComponent);\n+\t\t\n+\t\tAllergyIntolerance.AllergyIntoleranceReactionComponent allergyIntoleranceReactionComponent1 = new AllergyIntolerance.AllergyIntoleranceReactionComponent();\n+\t\tallergyIntoleranceReactionComponent1.addManifestation().addCoding().setCode(\"64305001\").setDisplay(\"Urticaria\");\n+\t\tallergyIntoleranceReactionComponent1.setOnset(new Date());\n+\t\tallergyIntoleranceReactionComponent1.setSeverity(AllergyIntolerance.AllergyIntoleranceSeverity.fromCode(\"moderate\"));\n+\t\tallergyIntoleranceReactionComponent1.addNote()\n+\t\t        .setText(\"The patient reports that the onset of urticaria was within 15 minutes of eating cashews.\");\n+\t\tallergyIntolerance.addReaction(allergyIntoleranceReactionComponent1);\n+\t\t\n+\t\tassertThat(testHelper(new AllergyIntolerance()).getDivAsString(), notNullValue());\n+\t\tassertThat(testHelper(allergyIntolerance).getDivAsString(), notNullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void testForMedicationRequest() {\n+\t\t// https://www.hl7.org/fhir/medicationrequest0301.html\n+\t\t\n+\t\tMedicationRequest medicationRequest = new MedicationRequest();\n+\t\t\n+\t\tmedicationRequest.setId(\"medrx301\");\n+\t\t\n+\t\tCodeableConcept medicationCode = new CodeableConcept();\n+\t\tmedicationCode.addCoding().setSystem(\"http://snomed.info/sct\").setDisplay(\"Oral Form Oxycodone (product)\")\n+\t\t        .setCode(\"430127000\");\n+\t\tmedicationRequest.addContained(new Medication().setCode(medicationCode).setId(\"med0310\"));\n+\t\tProvenance provenance = new Provenance();\n+\t\tprovenance.addTarget().setReference(\"ServiceRequest/physiotherapy\");\n+\t\tprovenance.setRecorded(new Date());\n+\t\tProvenance.ProvenanceAgentComponent provenanceAgentComponent = new Provenance.ProvenanceAgentComponent();\n+\t\tprovenanceAgentComponent.addRole().addCoding().setCode(\"AUT\")\n+\t\t        .setSystem(\"http://terminology.hl7.org/CodeSystem/v3-ParticipationType\");\n+\t\tprovenanceAgentComponent.setWho(new Reference().setDisplay(\"Dr Adam Careful\").setReference(\"Practitioner/example\"));\n+\t\tprovenance.addAgent(provenanceAgentComponent);\n+\t\tSignature signature = new Signature();\n+\t\tsignature.addType().setSystem(\"urn:iso-astm:E1762-95:2013\").setCode(\"1.2.840.10065.1.12.1.1\")\n+\t\t        .setDisplay(\"Author's Signature\");\n+\t\tsignature.setWhen(new Date());\n+\t\tsignature.setWho(new Reference().setReference(\"Practitioner/example\").setDisplay(\"Dr Adam Careful\"));\n+\t\tsignature.setTargetFormat(\"application/fhir+xml\");\n+\t\tsignature.setSigFormat(\"application/signature+xml\");\n+\t\tsignature.setDataElement(new Base64BinaryType(\"dGhpcyBibG9iIGlzIHNuaXBwZWQ=\"));\n+\t\tprovenance.addSignature(signature);\n+\t\tmedicationRequest.addContained(provenance);\n+\t\t\n+\t\tmedicationRequest.addIdentifier().setUse(Identifier.IdentifierUse.OFFICIAL)\n+\t\t        .setSystem(\"http://www.bmc.nl/portal/prescriptions\").setValue(\"12345689\");\n+\t\tmedicationRequest.setStatus(MedicationRequest.MedicationRequestStatus.COMPLETED);\n+\t\t\n+\t\tCodeableConcept statusReason = new CodeableConcept();\n+\t\tstatusReason.addCoding().setDisplay(\"Try another treatment first\").setCode(\"altchoice\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzNjAwNQ=="}, "originalCommit": {"oid": "5c9811f768ed4333c77a9ba58d611754304ebb90"}, "originalPosition": 142}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ffc5c0789990690e2ee9405af31bd3cf231d4c26", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/ffc5c0789990690e2ee9405af31bd3cf231d4c26", "committedDate": "2020-06-09T18:01:44Z", "message": "response to reviews"}, "afterCommit": {"oid": "89ec41d4d0b0b2a9569bd91d9ee86aa3b19eb032", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/89ec41d4d0b0b2a9569bd91d9ee86aa3b19eb032", "committedDate": "2020-06-09T18:04:12Z", "message": "response to reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "89ec41d4d0b0b2a9569bd91d9ee86aa3b19eb032", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/89ec41d4d0b0b2a9569bd91d9ee86aa3b19eb032", "committedDate": "2020-06-09T18:04:12Z", "message": "response to reviews"}, "afterCommit": {"oid": "10cbef5883eab071a23a8c2c62747c52fb995f65", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/10cbef5883eab071a23a8c2c62747c52fb995f65", "committedDate": "2020-06-09T18:07:52Z", "message": "responded to code reviews"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NDIyODU2", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#pullrequestreview-427422856", "createdAt": "2020-06-09T18:16:58Z", "commit": {"oid": "10cbef5883eab071a23a8c2c62747c52fb995f65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODoxNjo1OFrOGhWpfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODoxNjo1OFrOGhWpfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYyNzI2Mw==", "bodyText": "@ibacher PTAL. Doing it this way is fine right?\nUsing just equalTo(getClass().getClassLoader().getResourceAsStream(<path>)) raised errors due to type mismatch.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r437627263", "createdAt": "2020-06-09T18:16:58Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/MedicationRequestNarrativeTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import java.io.IOException;\n+import java.nio.charset.Charset;\n+\n+import ca.uhn.fhir.context.FhirContext;\n+import ca.uhn.fhir.narrative.CustomThymeleafNarrativeGenerator;\n+import ca.uhn.fhir.parser.IParser;\n+import org.apache.commons.io.Charsets;\n+import org.apache.commons.io.IOUtils;\n+import org.hl7.fhir.r4.model.MedicationRequest;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.FhirConstants;\n+\n+public class MedicationRequestNarrativeTest {\n+\t\n+\tprivate static final String EXAMPLE_RESOURCE_PATH = \"org/openmrs/module/fhir2/narrative/example/medicationrequest-example.json\";\n+\t\n+\tprivate static final String EXPECTED_NARRATIVE_PATH = \"org/openmrs/module/fhir2/narrative/expected/medicationrequest-expected.html\";\n+\t\n+\t@Test\n+\tpublic void shouldGenerateAMedicationRequestNarrative() throws IOException {\n+\t\tFhirContext ctx = FhirContext.forR4();\n+\t\tctx.setNarrativeGenerator(new CustomThymeleafNarrativeGenerator(FhirConstants.HAPI_NARRATIVES_PROPERTY_FILE,\n+\t\t        FhirConstants.OPENMRS_NARRATIVES_PROPERTY_FILE));\n+\t\tIParser parser = ctx.newJsonParser();\n+\t\t\n+\t\tMedicationRequest given = parser.parseResource(MedicationRequest.class,\n+\t\t    getClass().getClassLoader().getResourceAsStream(EXAMPLE_RESOURCE_PATH));\n+\t\tMedicationRequest result = parser.parseResource(MedicationRequest.class, parser.encodeResourceToString(given));\n+\t\tString expected = IOUtils.readLines(getClass().getClassLoader().getResourceAsStream(EXPECTED_NARRATIVE_PATH),\n+\t\t    Charsets.toCharset(Charset.defaultCharset())).get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10cbef5883eab071a23a8c2c62747c52fb995f65"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10cbef5883eab071a23a8c2c62747c52fb995f65", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/10cbef5883eab071a23a8c2c62747c52fb995f65", "committedDate": "2020-06-09T18:07:52Z", "message": "responded to code reviews"}, "afterCommit": {"oid": "54dad0a92b028b7e3370f972c58e6e77e7e00df5", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/54dad0a92b028b7e3370f972c58e6e77e7e00df5", "committedDate": "2020-06-09T18:40:08Z", "message": "responded to code reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54dad0a92b028b7e3370f972c58e6e77e7e00df5", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/54dad0a92b028b7e3370f972c58e6e77e7e00df5", "committedDate": "2020-06-09T18:40:08Z", "message": "responded to code reviews"}, "afterCommit": {"oid": "49efacd2d249a0779e934546e1f4a6a6f5697800", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/49efacd2d249a0779e934546e1f4a6a6f5697800", "committedDate": "2020-06-09T18:43:09Z", "message": "responded to code reviews"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDM2ODU4", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#pullrequestreview-428036858", "createdAt": "2020-06-10T13:12:16Z", "commit": {"oid": "9f205a1217948265efce2ed13d6ef49a53aead1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoxMjoxN1rOGh0HTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoxMjoxN1rOGh0HTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODExMDAyOQ==", "bodyText": "Here's my suggestion for the dealing with the TimeZone issue:\nprotected static TimeZone defaultTimeZone;\n\n@BeforeClass\npublic static void setupTimeZone() {\n    defaultTimeZone = TimeZone.getDefault();\n    TimeZone.setDefault(TimeZone.getTimeZone(\"UTC\"));\n}\n\n@AfterClass\npublic static void resetTimeZone() {\n    TimeZone.setDefault(defaultTimeZone);\n}\nPS It maybe worth looking into creating a BaseFhirNarrativeTest class which handles:\n\nCreating the context and parser (i.e., the @Before method with both the ctx and parser fields marked as protected\nSetting up the timezone stuff suggested above", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r438110029", "createdAt": "2020-06-10T13:12:17Z", "author": {"login": "ibacher"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/AllergyIntoleranceNarrativeTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+\n+import ca.uhn.fhir.context.FhirContext;\n+import ca.uhn.fhir.narrative.CustomThymeleafNarrativeGenerator;\n+import ca.uhn.fhir.parser.IParser;\n+import org.apache.commons.io.IOUtils;\n+import org.hl7.fhir.r4.model.AllergyIntolerance;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.FhirConstants;\n+\n+public class AllergyIntoleranceNarrativeTest {\n+\t\n+\tprivate static final String EXAMPLE_RESOURCE_PATH = \"org/openmrs/module/fhir2/narrative/example/allergyintolerance-example.json\";\n+\t\n+\tprivate static final String EXPECTED_NARRATIVE_PATH = \"org/openmrs/module/fhir2/narrative/expected/allergyintolerance-expected.html\";\n+\t\n+\tprivate FhirContext ctx = FhirContext.forR4();\n+\t\n+\tprivate IParser parser;\n+\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f205a1217948265efce2ed13d6ef49a53aead1e"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDM3NTYy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#pullrequestreview-428037562", "createdAt": "2020-06-10T13:13:05Z", "commit": {"oid": "9f205a1217948265efce2ed13d6ef49a53aead1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoxMzowNlrOGh0JRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoxMzowNlrOGh0JRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODExMDUzNA==", "bodyText": "Does this not work without the .split(\"\\n\")[0]?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r438110534", "createdAt": "2020-06-10T13:13:06Z", "author": {"login": "ibacher"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/narrative/AllergyIntoleranceNarrativeTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.narrative;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+\n+import ca.uhn.fhir.context.FhirContext;\n+import ca.uhn.fhir.narrative.CustomThymeleafNarrativeGenerator;\n+import ca.uhn.fhir.parser.IParser;\n+import org.apache.commons.io.IOUtils;\n+import org.hl7.fhir.r4.model.AllergyIntolerance;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.FhirConstants;\n+\n+public class AllergyIntoleranceNarrativeTest {\n+\t\n+\tprivate static final String EXAMPLE_RESOURCE_PATH = \"org/openmrs/module/fhir2/narrative/example/allergyintolerance-example.json\";\n+\t\n+\tprivate static final String EXPECTED_NARRATIVE_PATH = \"org/openmrs/module/fhir2/narrative/expected/allergyintolerance-expected.html\";\n+\t\n+\tprivate FhirContext ctx = FhirContext.forR4();\n+\t\n+\tprivate IParser parser;\n+\t\n+\t@Before\n+\tpublic void setup() {\n+\t\tctx.setNarrativeGenerator(new CustomThymeleafNarrativeGenerator(FhirConstants.HAPI_NARRATIVES_PROPERTY_FILE,\n+\t\t        FhirConstants.OPENMRS_NARRATIVES_PROPERTY_FILE));\n+\t\tparser = ctx.newJsonParser();\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldGenerateAllergyIntoleranceNarrative() throws IOException {\n+\t\tAllergyIntolerance given = parser.parseResource(AllergyIntolerance.class,\n+\t\t    getClass().getClassLoader().getResourceAsStream(EXAMPLE_RESOURCE_PATH));\n+\t\t\n+\t\tAllergyIntolerance result = parser.parseResource(AllergyIntolerance.class, parser.encodeResourceToString(given));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getText(), notNullValue());\n+\t\tassertThat(result.getText().getStatusAsString(), equalTo(\"generated\"));\n+\t\tassertThat(result.getText().getDivAsString(),\n+\t\t    equalTo(IOUtils.resourceToString(EXPECTED_NARRATIVE_PATH, StandardCharsets.UTF_8, getClass().getClassLoader())\n+\t\t            .split(\"\\n\")[0]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f205a1217948265efce2ed13d6ef49a53aead1e"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "733b18bfbd5fcba80c38626d61635bfb524e1c46", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/733b18bfbd5fcba80c38626d61635bfb524e1c46", "committedDate": "2020-06-10T15:33:59Z", "message": "added condition narrative"}, "afterCommit": {"oid": "b9f78986c07135758b56f59486d656bc4df6ad22", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/b9f78986c07135758b56f59486d656bc4df6ad22", "committedDate": "2020-06-10T15:41:46Z", "message": "added condition narrative"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTU1MTY0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#pullrequestreview-429155164", "createdAt": "2020-06-11T17:52:42Z", "commit": {"oid": "b9f78986c07135758b56f59486d656bc4df6ad22"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzo1Mjo0MlrOGioeQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzo1Mjo0MlrOGioeQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk2Nzg3NQ==", "bodyText": "This should be \"classpath:narrative.properties\"", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#discussion_r438967875", "createdAt": "2020-06-11T17:52:42Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirConstants.java", "diffHunk": "@@ -202,5 +202,7 @@\n \t\n \tpublic static final String TAG_SEARCH_HANDLER = \"tag.search.handler\";\n \t\n-\tpublic static final String HAPI_DEFAULT_NARRATIVES_PROPERTY_FILE = \"classpath:ca/uhn/fhir/narrative/narratives.properties\";\n+\tpublic static final String HAPI_NARRATIVES_PROPERTY_FILE = \"classpath:ca/uhn/fhir/narrative/narratives.properties\";\n+\t\n+\tpublic static final String OPENMRS_NARRATIVES_PROPERTY_FILE = \"file:src/main/resources/narratives.properties\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9f78986c07135758b56f59486d656bc4df6ad22"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9f78986c07135758b56f59486d656bc4df6ad22", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/b9f78986c07135758b56f59486d656bc4df6ad22", "committedDate": "2020-06-10T15:41:46Z", "message": "added condition narrative"}, "afterCommit": {"oid": "9100cef079a41f9efaa0e23f754143492253ec06", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9100cef079a41f9efaa0e23f754143492253ec06", "committedDate": "2020-06-11T18:38:07Z", "message": "FM2-194: Created OpenMRS Narratives"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9100cef079a41f9efaa0e23f754143492253ec06", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9100cef079a41f9efaa0e23f754143492253ec06", "committedDate": "2020-06-11T18:38:07Z", "message": "FM2-194: Created OpenMRS Narratives"}, "afterCommit": {"oid": "23439d7f1e9d9bf06ec189ec582badc82c54b945", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/23439d7f1e9d9bf06ec189ec582badc82c54b945", "committedDate": "2020-06-12T06:24:38Z", "message": "FM2-194: Created OpenMRS Narratives"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23439d7f1e9d9bf06ec189ec582badc82c54b945", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/23439d7f1e9d9bf06ec189ec582badc82c54b945", "committedDate": "2020-06-12T06:24:38Z", "message": "FM2-194: Created OpenMRS Narratives"}, "afterCommit": {"oid": "3b94546f10e76558ad36b9ab43b3e475646840d5", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/3b94546f10e76558ad36b9ab43b3e475646840d5", "committedDate": "2020-06-13T07:13:48Z", "message": "FM2-194: Created OpenMRS Narratives"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b94546f10e76558ad36b9ab43b3e475646840d5", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/3b94546f10e76558ad36b9ab43b3e475646840d5", "committedDate": "2020-06-13T07:13:48Z", "message": "FM2-194: Created OpenMRS Narratives"}, "afterCommit": {"oid": "f9cd22e647530225d602f2724419ad223e1d569d", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f9cd22e647530225d602f2724419ad223e1d569d", "committedDate": "2020-06-15T16:26:34Z", "message": "FM2-194: Create default narratives for resources (AllergyIntolerance, MedicationRequest, Condition)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b669e42e745a97d6a0d4b9d8d7d04ad13c03ede", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/7b669e42e745a97d6a0d4b9d8d7d04ad13c03ede", "committedDate": "2020-06-15T17:27:22Z", "message": "FM2-194: Create default narratives for resources (AllergyIntolerance, MedicationRequest, Condition)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9cd22e647530225d602f2724419ad223e1d569d", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f9cd22e647530225d602f2724419ad223e1d569d", "committedDate": "2020-06-15T16:26:34Z", "message": "FM2-194: Create default narratives for resources (AllergyIntolerance, MedicationRequest, Condition)"}, "afterCommit": {"oid": "7b669e42e745a97d6a0d4b9d8d7d04ad13c03ede", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/7b669e42e745a97d6a0d4b9d8d7d04ad13c03ede", "committedDate": "2020-06-15T17:27:22Z", "message": "FM2-194: Create default narratives for resources (AllergyIntolerance, MedicationRequest, Condition)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNTk1ODAy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/198#pullrequestreview-433595802", "createdAt": "2020-06-18T19:46:02Z", "commit": {"oid": "7b669e42e745a97d6a0d4b9d8d7d04ad13c03ede"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4056, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}