{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MzU1MTU3", "number": 83, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjozNDo1OVrODh8HOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjozNzo0N1rODh8K1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTE0NDkwOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjozNDo1OVrOFs9Fqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzoxMzoxMVrOFs-Ukg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4MjUzOA==", "bodyText": "This should look something like this:\nreference.setType(\"Observation\").setReference(\"Observation/\" + OBS_UUID);\nI.e., the reference id is not the Obs uuid (since the reference is a different entity for the observation itself).", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/83#discussion_r382682538", "createdAt": "2020-02-21T16:34:59Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImplTest.java", "diffHunk": "@@ -199,21 +198,21 @@ public void toFhirResource_shouldConvertObsValueToValue() {\n \t}\n \t\n \t@Test\n-\tpublic void toFhirResource_shouldConvertObsGroupToComponent() {\n+\tpublic void toFhirResource_shouldConvertObsGroupToHasMemberReferences() {\n \t\tObs observation = new Obs();\n \t\tObs childObs = new Obs();\n \t\tchildObs.setUuid(OBS_UUID);\n \t\tobservation.addGroupMember(childObs);\n \t\t\n-\t\tObservation.ObservationComponentComponent component = new Observation.ObservationComponentComponent();\n-\t\tcomponent.setId(OBS_UUID);\n-\t\twhen(observationComponentTranslator.toFhirResource(childObs)).thenReturn(component);\n+\t\tReference reference = new Reference();\n+\t\treference.setId(OBS_UUID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b107fd02011723957755112c786495f1f98570ec"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwMjczOA==", "bodyText": "Thanks for the review! I'll make those changes.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/83#discussion_r382702738", "createdAt": "2020-02-21T17:13:11Z", "author": {"login": "CaptainDaVinci"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImplTest.java", "diffHunk": "@@ -199,21 +198,21 @@ public void toFhirResource_shouldConvertObsValueToValue() {\n \t}\n \t\n \t@Test\n-\tpublic void toFhirResource_shouldConvertObsGroupToComponent() {\n+\tpublic void toFhirResource_shouldConvertObsGroupToHasMemberReferences() {\n \t\tObs observation = new Obs();\n \t\tObs childObs = new Obs();\n \t\tchildObs.setUuid(OBS_UUID);\n \t\tobservation.addGroupMember(childObs);\n \t\t\n-\t\tObservation.ObservationComponentComponent component = new Observation.ObservationComponentComponent();\n-\t\tcomponent.setId(OBS_UUID);\n-\t\twhen(observationComponentTranslator.toFhirResource(childObs)).thenReturn(component);\n+\t\tReference reference = new Reference();\n+\t\treference.setId(OBS_UUID);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4MjUzOA=="}, "originalCommit": {"oid": "b107fd02011723957755112c786495f1f98570ec"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTE0ODEzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjozNTo1MlrOFs9Hog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjozNTo1MlrOFs9Hog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4MzA0Mg==", "bodyText": "See above.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/83#discussion_r382683042", "createdAt": "2020-02-21T16:35:52Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImplTest.java", "diffHunk": "@@ -252,13 +251,13 @@ public void toOpenmrsType_shouldTranslateCodeToConcept() {\n \t}\n \t\n \t@Test\n-\tpublic void toOpenmrsType_shouldTranslateComponentsToGroupObs() {\n+\tpublic void toOpenmrsType_shouldTranslateHasMemberReferencesToGroupObs() {\n \t\tObservation observation = new Observation();\n-\t\tObservation.ObservationComponentComponent component = observation.addComponent();\n-\t\tcomponent.setId(OBS_UUID);\n+\t\tReference reference = observation.addHasMember();\n+\t\treference.setId(OBS_UUID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b107fd02011723957755112c786495f1f98570ec"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTE1NDE1OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImplTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjozNzo0N1rOFs9Ljw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzoyNTozMVrOFs-q0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4NDA0Nw==", "bodyText": "It's preferable, IMO to use hasItem instead of contains. The test here will also need to be updated to ensure that the type and reference values have been properly set.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/83#discussion_r382684047", "createdAt": "2020-02-21T16:37:47Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImplTest.java", "diffHunk": "@@ -199,21 +198,21 @@ public void toFhirResource_shouldConvertObsValueToValue() {\n \t}\n \t\n \t@Test\n-\tpublic void toFhirResource_shouldConvertObsGroupToComponent() {\n+\tpublic void toFhirResource_shouldConvertObsGroupToHasMemberReferences() {\n \t\tObs observation = new Obs();\n \t\tObs childObs = new Obs();\n \t\tchildObs.setUuid(OBS_UUID);\n \t\tobservation.addGroupMember(childObs);\n \t\t\n-\t\tObservation.ObservationComponentComponent component = new Observation.ObservationComponentComponent();\n-\t\tcomponent.setId(OBS_UUID);\n-\t\twhen(observationComponentTranslator.toFhirResource(childObs)).thenReturn(component);\n+\t\tReference reference = new Reference();\n+\t\treference.setId(OBS_UUID);\n+\t\twhen(observationReferenceTranslator.toFhirResource(childObs)).thenReturn(reference);\n \t\t\n \t\tObservation result = observationTranslator.toFhirResource(observation);\n \t\t\n-\t\tassertThat(result.getComponent(), notNullValue());\n-\t\tassertThat(result.getComponent().size(), equalTo(1));\n-\t\tassertThat(result.getComponent(), contains(hasProperty(\"id\", equalTo(OBS_UUID))));\n+\t\tassertThat(result.getHasMember(), notNullValue());\n+\t\tassertThat(result.getHasMember().size(), equalTo(1));\n+\t\tassertThat(result.getHasMember(), contains(hasProperty(\"id\", equalTo(OBS_UUID))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b107fd02011723957755112c786495f1f98570ec"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDA4NA==", "bodyText": "Here, wouldn't hasProperty(\"id\", ...) have to be changed to something like hasProperty(\"reference\", \"Observation/\" + OBS_UUID), since \"id\" would correspond to the reference entity id and not the Obs id?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/83#discussion_r382704084", "createdAt": "2020-02-21T17:16:00Z", "author": {"login": "CaptainDaVinci"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImplTest.java", "diffHunk": "@@ -199,21 +198,21 @@ public void toFhirResource_shouldConvertObsValueToValue() {\n \t}\n \t\n \t@Test\n-\tpublic void toFhirResource_shouldConvertObsGroupToComponent() {\n+\tpublic void toFhirResource_shouldConvertObsGroupToHasMemberReferences() {\n \t\tObs observation = new Obs();\n \t\tObs childObs = new Obs();\n \t\tchildObs.setUuid(OBS_UUID);\n \t\tobservation.addGroupMember(childObs);\n \t\t\n-\t\tObservation.ObservationComponentComponent component = new Observation.ObservationComponentComponent();\n-\t\tcomponent.setId(OBS_UUID);\n-\t\twhen(observationComponentTranslator.toFhirResource(childObs)).thenReturn(component);\n+\t\tReference reference = new Reference();\n+\t\treference.setId(OBS_UUID);\n+\t\twhen(observationReferenceTranslator.toFhirResource(childObs)).thenReturn(reference);\n \t\t\n \t\tObservation result = observationTranslator.toFhirResource(observation);\n \t\t\n-\t\tassertThat(result.getComponent(), notNullValue());\n-\t\tassertThat(result.getComponent().size(), equalTo(1));\n-\t\tassertThat(result.getComponent(), contains(hasProperty(\"id\", equalTo(OBS_UUID))));\n+\t\tassertThat(result.getHasMember(), notNullValue());\n+\t\tassertThat(result.getHasMember().size(), equalTo(1));\n+\t\tassertThat(result.getHasMember(), contains(hasProperty(\"id\", equalTo(OBS_UUID))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4NDA0Nw=="}, "originalCommit": {"oid": "b107fd02011723957755112c786495f1f98570ec"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwODQzNA==", "bodyText": "Yes, I think that would do it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/83#discussion_r382708434", "createdAt": "2020-02-21T17:25:31Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImplTest.java", "diffHunk": "@@ -199,21 +198,21 @@ public void toFhirResource_shouldConvertObsValueToValue() {\n \t}\n \t\n \t@Test\n-\tpublic void toFhirResource_shouldConvertObsGroupToComponent() {\n+\tpublic void toFhirResource_shouldConvertObsGroupToHasMemberReferences() {\n \t\tObs observation = new Obs();\n \t\tObs childObs = new Obs();\n \t\tchildObs.setUuid(OBS_UUID);\n \t\tobservation.addGroupMember(childObs);\n \t\t\n-\t\tObservation.ObservationComponentComponent component = new Observation.ObservationComponentComponent();\n-\t\tcomponent.setId(OBS_UUID);\n-\t\twhen(observationComponentTranslator.toFhirResource(childObs)).thenReturn(component);\n+\t\tReference reference = new Reference();\n+\t\treference.setId(OBS_UUID);\n+\t\twhen(observationReferenceTranslator.toFhirResource(childObs)).thenReturn(reference);\n \t\t\n \t\tObservation result = observationTranslator.toFhirResource(observation);\n \t\t\n-\t\tassertThat(result.getComponent(), notNullValue());\n-\t\tassertThat(result.getComponent().size(), equalTo(1));\n-\t\tassertThat(result.getComponent(), contains(hasProperty(\"id\", equalTo(OBS_UUID))));\n+\t\tassertThat(result.getHasMember(), notNullValue());\n+\t\tassertThat(result.getHasMember().size(), equalTo(1));\n+\t\tassertThat(result.getHasMember(), contains(hasProperty(\"id\", equalTo(OBS_UUID))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4NDA0Nw=="}, "originalCommit": {"oid": "b107fd02011723957755112c786495f1f98570ec"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1069, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}