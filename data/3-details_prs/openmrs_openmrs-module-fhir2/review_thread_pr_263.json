{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NjQwMTI2", "number": 263, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0MzoyM1rOESyw2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0NTowM1rOESyzeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTQxNTI4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0MzoyM1rOG4KuxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0MzoyM1rOG4KuxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0OTI1Mw==", "bodyText": "This needs to be converted back into a ProcedureRequest before it's passed to buildUpdate()", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263#discussion_r461549253", "createdAt": "2020-07-28T12:43:23Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProvider.java", "diffHunk": "@@ -54,6 +63,34 @@ public ProcedureRequest getProcedureRequestById(@IdParam @NotNull IdType id) {\n \t\treturn (ProcedureRequest) VersionConvertor_30_40.convertResource(serviceRequest, false);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createProcedureRequest(@ResourceParam ProcedureRequest procedureRequest) {\n+\t\treturn FhirProviderUtils.buildCreate(\n+\t\t    serviceRequestService.create((ServiceRequest) VersionConvertor_30_40.convertResource(procedureRequest, false)));\n+\t}\n+\t\n+\t@Update\n+\tpublic MethodOutcome updateProcedureRequest(@IdParam IdType id, @ResourceParam ProcedureRequest procedureRequest) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\t\t\n+\t\tprocedureRequest.setId(id.getIdPart());\n+\t\t\n+\t\treturn FhirProviderUtils.buildUpdate(serviceRequestService.update(id.getIdPart(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644014172fdfa088df58c0cdc01cecec00bbe17e"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTQxODIyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0NDowN1rOG4KwiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0NDowN1rOG4KwiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0OTcwNQ==", "bodyText": "This needs to be converted back to a ProcedureRequest before it's passed to buildCreate()", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263#discussion_r461549705", "createdAt": "2020-07-28T12:44:07Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProvider.java", "diffHunk": "@@ -54,6 +63,34 @@ public ProcedureRequest getProcedureRequestById(@IdParam @NotNull IdType id) {\n \t\treturn (ProcedureRequest) VersionConvertor_30_40.convertResource(serviceRequest, false);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createProcedureRequest(@ResourceParam ProcedureRequest procedureRequest) {\n+\t\treturn FhirProviderUtils.buildCreate(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644014172fdfa088df58c0cdc01cecec00bbe17e"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTQyMTAxOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0NDo1MFrOG4KyMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0NDo1MFrOG4KyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1MDEyOA==", "bodyText": "This is definitely not the expected condition (i.e., an R3 resource provider needs to return the R3 resource).", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263#discussion_r461550128", "createdAt": "2020-07-28T12:44:50Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProviderTest.java", "diffHunk": "@@ -107,6 +113,82 @@ public void getServiceRequestByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getProcedureRequestById(idType), nullValue());\n \t}\n \t\n+\t@Test\n+\tpublic void createProcedureRequest_shouldCreateNewProcedureRequest() {\n+\t\twhen(serviceRequestService.create(any(ServiceRequest.class))).thenReturn(serviceRequest);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider\n+\t\t        .createProcedureRequest((ProcedureRequest) VersionConvertor_30_40.convertResource(serviceRequest, false));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(serviceRequest));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644014172fdfa088df58c0cdc01cecec00bbe17e"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTQyMjAyOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0NTowM1rOG4Kyxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0NTowM1rOG4Kyxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1MDI3OQ==", "bodyText": "This is definitely not the expected condition (i.e., an R3 resource provider needs to return the R3 resource).", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263#discussion_r461550279", "createdAt": "2020-07-28T12:45:03Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProviderTest.java", "diffHunk": "@@ -107,6 +113,82 @@ public void getServiceRequestByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getProcedureRequestById(idType), nullValue());\n \t}\n \t\n+\t@Test\n+\tpublic void createProcedureRequest_shouldCreateNewProcedureRequest() {\n+\t\twhen(serviceRequestService.create(any(ServiceRequest.class))).thenReturn(serviceRequest);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider\n+\t\t        .createProcedureRequest((ProcedureRequest) VersionConvertor_30_40.convertResource(serviceRequest, false));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(serviceRequest));\n+\t}\n+\t\n+\t@Test\n+\tpublic void updateProcedureRequest_shouldUpdateProcedureRequest() {\n+\t\twhen(serviceRequestService.update(eq(SERVICE_REQUEST_UUID), any(ServiceRequest.class))).thenReturn(serviceRequest);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider.updateProcedureRequest(new IdType().setValue(SERVICE_REQUEST_UUID),\n+\t\t    (ProcedureRequest) VersionConvertor_30_40.convertResource(serviceRequest, false));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getResource(), equalTo(serviceRequest));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644014172fdfa088df58c0cdc01cecec00bbe17e"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1034, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}