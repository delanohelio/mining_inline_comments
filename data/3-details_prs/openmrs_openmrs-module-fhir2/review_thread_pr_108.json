{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MzEzMzg4", "number": 108, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODowMTowNlrODlhqCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODoyOToyOVrODliNcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjc1MzM3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODowMTowNlrOFyeEaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODowMTowNlrOFyeEaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2NTc2OA==", "bodyText": "Unused imports", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/108#discussion_r388465768", "createdAt": "2020-03-05T18:01:06Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -16,6 +16,8 @@\n \n import lombok.AccessLevel;\n import lombok.Setter;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fc3383a84017e50bacdb83c824c100de86f33d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjg0NDAyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODoyOToyOVrOFye-aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODo1NjoyNFrOFyf2RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4MDYxOQ==", "bodyText": "If the code doesn't exist as a concept in Openmrs, It will return null and set NonCodedAllergen to coding display, which is okay but what if code exists? Meaning Both codedAllergen and NonCodedAllergen will have a value. I think NonCodedAllergen should only have a value when a concept doesn't exist that allergen. I might be wrong", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/108#discussion_r388480619", "createdAt": "2020-03-05T18:29:29Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -108,14 +114,13 @@ public Allergy toOpenmrsType(Allergy allergy, AllergyIntolerance fhirAllergy) {\n \t\tallergy.setUuid(fhirAllergy.getId());\n \t\tif (allergy.getAllergen() == null) {\n \t\t\tAllergen allergen = new Allergen();\n-\t\t\tif (!fhirAllergy.getCode().getCoding().isEmpty()) {\n-\t\t\t\tallergen.setCodedAllergen(\n-\t\t\t\t    conceptService.getConceptByUuid(fhirAllergy.getCode().getCoding().get(0).getCode()).orElse(null));\n+\t\t\tif (fhirAllergy.hasCode()) {\n+\t\t\t\tallergen.setCodedAllergen(conceptTranslator.toOpenmrsType(fhirAllergy.getCode()));\n \t\t\t\tallergen.setNonCodedAllergen(fhirAllergy.getCode().getCoding().get(0).getDisplay());\n \t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fc3383a84017e50bacdb83c824c100de86f33d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5NDkxNw==", "bodyText": "I'm also unsure about their later but I'll ask this on talk for clarifications", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/108#discussion_r388494917", "createdAt": "2020-03-05T18:56:24Z", "author": {"login": "jecihjoy"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -108,14 +114,13 @@ public Allergy toOpenmrsType(Allergy allergy, AllergyIntolerance fhirAllergy) {\n \t\tallergy.setUuid(fhirAllergy.getId());\n \t\tif (allergy.getAllergen() == null) {\n \t\t\tAllergen allergen = new Allergen();\n-\t\t\tif (!fhirAllergy.getCode().getCoding().isEmpty()) {\n-\t\t\t\tallergen.setCodedAllergen(\n-\t\t\t\t    conceptService.getConceptByUuid(fhirAllergy.getCode().getCoding().get(0).getCode()).orElse(null));\n+\t\t\tif (fhirAllergy.hasCode()) {\n+\t\t\t\tallergen.setCodedAllergen(conceptTranslator.toOpenmrsType(fhirAllergy.getCode()));\n \t\t\t\tallergen.setNonCodedAllergen(fhirAllergy.getCode().getCoding().get(0).getDisplay());\n \t\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4MDYxOQ=="}, "originalCommit": {"oid": "f5fc3383a84017e50bacdb83c824c100de86f33d"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1119, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}