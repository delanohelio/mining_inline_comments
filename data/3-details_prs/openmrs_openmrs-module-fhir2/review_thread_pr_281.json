{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MzE1NjI5", "number": 281, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzowOTo1NFrOEXf90A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo0MTo0MFrOEXqIzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDc2NDMyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/PractitionerReferenceTranslatorUserImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzowOTo1NFrOG_UkcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzowOTo1NFrOG_UkcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MDQ4MA==", "bodyText": "@varung-31Thanks for working on this,what if we also used type instead of reference.getType()  on the line of the exception? cc   @ibacher", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469050480", "createdAt": "2020-08-12T07:09:54Z", "author": {"login": "HerbertYiga"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/PractitionerReferenceTranslatorUserImpl.java", "diffHunk": "@@ -42,7 +42,9 @@ public User toOpenmrsType(Reference reference) {\n \t\tif (reference == null) {\n \t\t\treturn null;\n \t\t}\n-\t\tif (!getReferenceType(reference).equals(\"Practitioner\")) {\n+\t\t\n+\t\tString type = reference.getType();\n+\t\tif (type != null && !type.equals(\"Practitioner\")) {\n \t\t\tthrow new IllegalArgumentException(\"Reference must be to an User not a \" + reference.getType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjM4NjAxOnYy", "diffSide": "LEFT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirEncounterService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozMTozOFrOG_kC5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNTowNzozM1rOG_lqvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNDAzNw==", "bodyText": "Please actually leave this on the interface. I'm intending for the Javadocs to go on interfaces where possible.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469304037", "createdAt": "2020-08-12T14:31:38Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirEncounterService.java", "diffHunk": "@@ -19,8 +17,6 @@\n \n public interface FhirEncounterService extends FhirService<Encounter> {\n \t\n-\tEncounter get(@NotNull String uuid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyODkyMQ==", "bodyText": "But this is unnecessary repetition. This method is already present in the BaseFhirService, why do we want to declare it here as well?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469328921", "createdAt": "2020-08-12T15:05:15Z", "author": {"login": "varung-31"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirEncounterService.java", "diffHunk": "@@ -19,8 +17,6 @@\n \n public interface FhirEncounterService extends FhirService<Encounter> {\n \t\n-\tEncounter get(@NotNull String uuid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNDAzNw=="}, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMDYyMQ==", "bodyText": "To have a per-type Javadoc, which should be, but hasn't been the standard. In most cases it doesn't matter, but it some cases it might.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469330621", "createdAt": "2020-08-12T15:07:33Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirEncounterService.java", "diffHunk": "@@ -19,8 +17,6 @@\n \n public interface FhirEncounterService extends FhirService<Encounter> {\n \t\n-\tEncounter get(@NotNull String uuid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNDAzNw=="}, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjM4OTUxOnYy", "diffSide": "LEFT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirTaskService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozMjoyOVrOG_kFNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxNDo0M1rOG_l-rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNDYyOA==", "bodyText": "This needs to be updated, not removed.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469304628", "createdAt": "2020-08-12T14:32:29Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirTaskService.java", "diffHunk": "@@ -21,15 +21,6 @@\n  */\n public interface FhirTaskService extends FhirService<Task> {\n \t\n-\t/**\n-\t * Get list of tasks that reference the object type/UUID combo provided\n-\t *\n-\t * @param basedOnReference\n-\t * @param ownerReference\n-\t * @param status\n-\t * @param sort\n-\t * @return the collection of Tasks that match the search parameters\n-\t */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyOTQ2Ng==", "bodyText": "Are we planning to have java docs on both the interfaces and the implementation? I think just having them on the interfaces suffices.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469329466", "createdAt": "2020-08-12T15:06:01Z", "author": {"login": "varung-31"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirTaskService.java", "diffHunk": "@@ -21,15 +21,6 @@\n  */\n public interface FhirTaskService extends FhirService<Task> {\n \t\n-\t/**\n-\t * Get list of tasks that reference the object type/UUID combo provided\n-\t *\n-\t * @param basedOnReference\n-\t * @param ownerReference\n-\t * @param status\n-\t * @param sort\n-\t * @return the collection of Tasks that match the search parameters\n-\t */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNDYyOA=="}, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzNTcyNA==", "bodyText": "Largely just on interfaces, but if FM2-268 is implemented (or as we gradually migrate towards that) it may be necessary to have the Javadoc on some implementations when there is no appropriate interface anymore.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469335724", "createdAt": "2020-08-12T15:14:43Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirTaskService.java", "diffHunk": "@@ -21,15 +21,6 @@\n  */\n public interface FhirTaskService extends FhirService<Task> {\n \t\n-\t/**\n-\t * Get list of tasks that reference the object type/UUID combo provided\n-\t *\n-\t * @param basedOnReference\n-\t * @param ownerReference\n-\t * @param status\n-\t * @param sort\n-\t * @return the collection of Tasks that match the search parameters\n-\t */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNDYyOA=="}, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjM5MjcwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/BaseFhirService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozMzoxNFrOG_kHRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozMzoxNFrOG_kHRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNTE1Nw==", "bodyText": "I would prefer that on create we always assign a new UUID.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469305157", "createdAt": "2020-08-12T14:33:14Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/BaseFhirService.java", "diffHunk": "@@ -28,6 +30,10 @@ public T get(String uuid) {\n \t\n \t@Override\n \tpublic T create(T newResource) {\n+\t\tif (newResource.getId() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjM5NDcxOnYy", "diffSide": "LEFT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirTaskServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozMzozN1rOG_kIfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozMzozN1rOG_kIfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNTQ2OQ==", "bodyText": "This needs to be updated, not removed.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469305469", "createdAt": "2020-08-12T14:33:37Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirTaskServiceImpl.java", "diffHunk": "@@ -44,15 +44,6 @@\n \t@Autowired\n \tprivate SearchQuery<FhirTask, Task, FhirTaskDao, TaskTranslator> searchQuery;\n \t\n-\t/**\n-\t * Get a list of Tasks that match the given search and sort criteria\n-\t *\n-\t * @param basedOnReference A reference to a basedOn resource\n-\t * @param ownerReference A reference to an owner resource\n-\t * @param status The list of statuses for requested Tasks\n-\t * @param sort\n-\t * @return the saved task\n-\t */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjM5NjY3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceReactionComponentTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNDowMFrOG_kJsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNDowMFrOG_kJsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNTc3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tAllergyIntolerance.AllergyIntoleranceReactionComponent reactionComponent = new AllergyIntolerance.AllergyIntoleranceReactionComponent();\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\tAllergyIntolerance.AllergyIntoleranceReactionComponent reactionComponent = new AllergyIntolerance.AllergyIntoleranceReactionComponent();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469305776", "createdAt": "2020-08-12T14:34:00Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceReactionComponentTranslatorImpl.java", "diffHunk": "@@ -37,6 +37,9 @@\n \t\n \t@Override\n \tpublic AllergyIntolerance.AllergyIntoleranceReactionComponent toFhirResource(Allergy allergy) {\n+\t\tif (allergy == null) {\n+\t\t\treturn null;\n+\t\t}\n \t\tAllergyIntolerance.AllergyIntoleranceReactionComponent reactionComponent = new AllergyIntolerance.AllergyIntoleranceReactionComponent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjM5ODYwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNDoyNlrOG_kK3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxODoxMVrOG_mIPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNjA3Nw==", "bodyText": "Is this, strictly speaking, necessary?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469306077", "createdAt": "2020-08-12T14:34:26Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -90,12 +90,15 @@ public AllergyIntolerance toFhirResource(Allergy omrsAllergy) {\n \t\n \t@Override\n \tpublic Allergy toOpenmrsType(AllergyIntolerance fhirAllergy) {\n+\t\tif (fhirAllergy == null) {\n+\t\t\treturn null;\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzNjEyMQ==", "bodyText": "Yes, because if fhirAllergy is null and we are not returning null here or throwing an exception, it would lead to a new instance of Allergy being returned.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469336121", "createdAt": "2020-08-12T15:15:14Z", "author": {"login": "varung-31"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -90,12 +90,15 @@ public AllergyIntolerance toFhirResource(Allergy omrsAllergy) {\n \t\n \t@Override\n \tpublic Allergy toOpenmrsType(AllergyIntolerance fhirAllergy) {\n+\t\tif (fhirAllergy == null) {\n+\t\t\treturn null;\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNjA3Nw=="}, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzODE3Mg==", "bodyText": "Oh right! I missed that! Cheerfully withdrawn!", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469338172", "createdAt": "2020-08-12T15:18:11Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -90,12 +90,15 @@ public AllergyIntolerance toFhirResource(Allergy omrsAllergy) {\n \t\n \t@Override\n \tpublic Allergy toOpenmrsType(AllergyIntolerance fhirAllergy) {\n+\t\tif (fhirAllergy == null) {\n+\t\t\treturn null;\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNjA3Nw=="}, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQwMzg4OnYy", "diffSide": "LEFT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/DiagnosticReportTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNTo0MVrOG_kOSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNTo0MVrOG_kOSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNjk1NA==", "bodyText": "This is actually a behaviour change. Do you think this is what we want to do? I could see:\nif (diagnosticReport == null) {\n\treturn null;\n}\n\nif (existingObs == null) {\n\texistingObs = new Obs();\n}", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469306954", "createdAt": "2020-08-12T14:35:41Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/DiagnosticReportTranslatorImpl.java", "diffHunk": "@@ -82,11 +82,7 @@ public Obs toOpenmrsType(DiagnosticReport diagnosticReport) {\n \t\n \t@Override\n \tpublic Obs toOpenmrsType(Obs existingObs, DiagnosticReport diagnosticReport) {\n-\t\tif (existingObs == null) {\n-\t\t\texistingObs = new Obs();\n-\t\t}\n-\t\t\n-\t\tif (diagnosticReport == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQwNDkwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterLocationTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNTo1NFrOG_kPBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNTo1NFrOG_kPBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNzE0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tEncounter.EncounterLocationComponent locationComponent = new Encounter.EncounterLocationComponent();\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\tEncounter.EncounterLocationComponent locationComponent = new Encounter.EncounterLocationComponent();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469307140", "createdAt": "2020-08-12T14:35:54Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterLocationTranslatorImpl.java", "diffHunk": "@@ -31,13 +31,19 @@\n \t\n \t@Override\n \tpublic Encounter.EncounterLocationComponent toFhirResource(Location location) {\n+\t\tif (location == null) {\n+\t\t\treturn null;\n+\t\t}\n \t\tEncounter.EncounterLocationComponent locationComponent = new Encounter.EncounterLocationComponent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQwNTQ5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterLocationTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNjowMVrOG_kPaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNjowMVrOG_kPaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNzI0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tString locationUuid = getReferenceId(encounterLocationComponent.getLocation());\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\tString locationUuid = getReferenceId(encounterLocationComponent.getLocation());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469307241", "createdAt": "2020-08-12T14:36:01Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterLocationTranslatorImpl.java", "diffHunk": "@@ -31,13 +31,19 @@\n \t\n \t@Override\n \tpublic Encounter.EncounterLocationComponent toFhirResource(Location location) {\n+\t\tif (location == null) {\n+\t\t\treturn null;\n+\t\t}\n \t\tEncounter.EncounterLocationComponent locationComponent = new Encounter.EncounterLocationComponent();\n \t\tlocationComponent.setLocation(createLocationReference(location));\n \t\treturn locationComponent;\n \t}\n \t\n \t@Override\n \tpublic Location toOpenmrsType(Encounter.EncounterLocationComponent encounterLocationComponent) {\n+\t\tif (encounterLocationComponent == null) {\n+\t\t\treturn null;\n+\t\t}\n \t\tString locationUuid = getReferenceId(encounterLocationComponent.getLocation());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQwNjA4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterParticipantTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNjoxMFrOG_kP2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNjoxMFrOG_kP2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNzM1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tEncounter.EncounterParticipantComponent participantComponent = new Encounter.EncounterParticipantComponent();\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\tEncounter.EncounterParticipantComponent participantComponent = new Encounter.EncounterParticipantComponent();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469307355", "createdAt": "2020-08-12T14:36:10Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterParticipantTranslatorImpl.java", "diffHunk": "@@ -32,6 +32,9 @@\n \t\n \t@Override\n \tpublic Encounter.EncounterParticipantComponent toFhirResource(EncounterProvider encounter) {\n+\t\tif (encounter == null) {\n+\t\t\treturn null;\n+\t\t}\n \t\tEncounter.EncounterParticipantComponent participantComponent = new Encounter.EncounterParticipantComponent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQwODU3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNjo0MlrOG_kRfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNjo0MlrOG_kRfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNzc3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}\n          \n          \n            \n            \t\treturn this.toOpenmrsType(new org.openmrs.Encounter(), fhirEncounter);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\treturn this.toOpenmrsType(new org.openmrs.Encounter(), fhirEncounter);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469307773", "createdAt": "2020-08-12T14:36:42Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java", "diffHunk": "@@ -93,14 +91,15 @@ public Encounter toFhirResource(org.openmrs.Encounter openMrsEncounter) {\n \t\n \t@Override\n \tpublic org.openmrs.Encounter toOpenmrsType(Encounter fhirEncounter) {\n+\t\tif (fhirEncounter == null) {\n+\t\t\treturn null;\n+\t\t}\n \t\treturn this.toOpenmrsType(new org.openmrs.Encounter(), fhirEncounter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQxMDcxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNzowOVrOG_kS3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNzowOVrOG_kS3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwODEyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}\n          \n          \n            \n            \t\texistingEncounter.setUuid(encounter.getId());\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\texistingEncounter.setUuid(encounter.getId());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469308124", "createdAt": "2020-08-12T14:37:09Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java", "diffHunk": "@@ -93,14 +91,15 @@ public Encounter toFhirResource(org.openmrs.Encounter openMrsEncounter) {\n \t\n \t@Override\n \tpublic org.openmrs.Encounter toOpenmrsType(Encounter fhirEncounter) {\n+\t\tif (fhirEncounter == null) {\n+\t\t\treturn null;\n+\t\t}\n \t\treturn this.toOpenmrsType(new org.openmrs.Encounter(), fhirEncounter);\n \t}\n \t\n \t@Override\n \tpublic org.openmrs.Encounter toOpenmrsType(org.openmrs.Encounter existingEncounter, Encounter encounter) {\n-\t\tnotNull(existingEncounter, \"Existing encounter cannot be null\");\n-\t\t\n-\t\tif (encounter == null) {\n+\t\tif (existingEncounter == null || encounter == null) {\n \t\t\treturn existingEncounter;\n \t\t}\n \t\texistingEncounter.setUuid(encounter.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQxMTQwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ListTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNzoxOFrOG_kTSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNzoxOFrOG_kTSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwODIzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}\n          \n          \n            \n            \t\treturn toOpenmrsType(new Cohort(), cohortList);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\treturn toOpenmrsType(new Cohort(), cohortList);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469308233", "createdAt": "2020-08-12T14:37:18Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ListTranslatorImpl.java", "diffHunk": "@@ -62,12 +62,15 @@ public ListResource toFhirResource(Cohort cohort) {\n \t\n \t@Override\n \tpublic Cohort toOpenmrsType(ListResource cohortList) {\n+\t\tif (cohortList == null) {\n+\t\t\treturn null;\n+\t\t}\n \t\treturn toOpenmrsType(new Cohort(), cohortList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQxMzcwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationAddressTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNzo1MFrOG_kUvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNzo1MFrOG_kUvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwODYwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}\n          \n          \n            \n            \t\treturn toOpenmrsType(new Location(), address);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\treturn toOpenmrsType(new Location(), address);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469308606", "createdAt": "2020-08-12T14:37:50Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationAddressTranslatorImpl.java", "diffHunk": "@@ -36,12 +37,15 @@ public Address toFhirResource(Location omrsLocation) {\n \t\n \t@Override\n \tpublic Location toOpenmrsType(Address address) {\n+\t\tif (address == null) {\n+\t\t\treturn null;\n+\t\t}\n \t\treturn toOpenmrsType(new Location(), address);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQyMDMyOnYy", "diffSide": "RIGHT", "path": "test-data/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozOToyMlrOG_kY6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNTowNjoxNlrOG_lm8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwOTY3Mw==", "bodyText": "The \"active\" attribute should no longer be translated, so I don't quite understand why we need it here?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469309673", "createdAt": "2020-08-12T14:39:22Z", "author": {"login": "ibacher"}, "path": "test-data/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "diffHunk": "@@ -1,5 +1,6 @@\n {\n   \"resourceType\": \"Patient\",\n+  \"active\": true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyNjc4OQ==", "bodyText": "We need it because in the patient translator we are checking if the patient instance is active or not, and if this active field is not present, it is throwing an exception saying voided by fhir module", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469326789", "createdAt": "2020-08-12T15:02:19Z", "author": {"login": "varung-31"}, "path": "test-data/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "diffHunk": "@@ -1,5 +1,6 @@\n {\n   \"resourceType\": \"Patient\",\n+  \"active\": true,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwOTY3Mw=="}, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyOTY1MA==", "bodyText": "The easier solution is just to remove that check.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469329650", "createdAt": "2020-08-12T15:06:16Z", "author": {"login": "ibacher"}, "path": "test-data/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "diffHunk": "@@ -1,5 +1,6 @@\n {\n   \"resourceType\": \"Patient\",\n+  \"active\": true,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwOTY3Mw=="}, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQzMDg2OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo0MTo0MFrOG_kfgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNTowNDozOVrOG_liSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxMTM2Mg==", "bodyText": "Is this change strictly-speaking necessary? I understand that id elements can be more complex so that getId() doesn't just return the id, but in this case that would actually indicate a bug in the code and so the test should fail.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469311362", "createdAt": "2020-08-12T14:41:40Z", "author": {"login": "ibacher"}, "path": "integration-tests/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderIntegrationTest.java", "diffHunk": "@@ -132,7 +132,7 @@ public void shouldCreateNewPatient() throws Exception {\n \t\tassertThat(patient, validResource());\n \t\t\n \t\t// try to get new patient\n-\t\tresponse = get(\"/Patient/\" + patient.getId()).accept(FhirMediaTypes.JSON).go();\n+\t\tresponse = get(\"/Patient/\" + patient.getIdElement().getIdPart()).accept(FhirMediaTypes.JSON).go();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyNTA5OQ==", "bodyText": "If you try to step in through a debugger, you would see that patient.getId() would have the value as \"null\" and there was a gap in the patient translator because of which it was returning a new instance.\nGenerally speaking, patient.getId() has the value as Patient/<uuid>, whereas patient.getIdElement().getIdPart() has the value as <uuid>, hence in my opinion this change is necessary.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469325099", "createdAt": "2020-08-12T14:59:58Z", "author": {"login": "varung-31"}, "path": "integration-tests/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderIntegrationTest.java", "diffHunk": "@@ -132,7 +132,7 @@ public void shouldCreateNewPatient() throws Exception {\n \t\tassertThat(patient, validResource());\n \t\t\n \t\t// try to get new patient\n-\t\tresponse = get(\"/Patient/\" + patient.getId()).accept(FhirMediaTypes.JSON).go();\n+\t\tresponse = get(\"/Patient/\" + patient.getIdElement().getIdPart()).accept(FhirMediaTypes.JSON).go();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxMTM2Mg=="}, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyODQ1OA==", "bodyText": "I see. That makes sense.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/281#discussion_r469328458", "createdAt": "2020-08-12T15:04:39Z", "author": {"login": "ibacher"}, "path": "integration-tests/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderIntegrationTest.java", "diffHunk": "@@ -132,7 +132,7 @@ public void shouldCreateNewPatient() throws Exception {\n \t\tassertThat(patient, validResource());\n \t\t\n \t\t// try to get new patient\n-\t\tresponse = get(\"/Patient/\" + patient.getId()).accept(FhirMediaTypes.JSON).go();\n+\t\tresponse = get(\"/Patient/\" + patient.getIdElement().getIdPart()).accept(FhirMediaTypes.JSON).go();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxMTM2Mg=="}, "originalCommit": {"oid": "43fb6b366f6abdc2cd71887af2da1b2e5d2ede92"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 839, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}