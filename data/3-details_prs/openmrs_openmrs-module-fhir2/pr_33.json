{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MjU5MzY4", "number": 33, "title": "FM2-10: Initial implementation for encounter resource", "bodyText": "Description of what I changed\n\n\nInitial work on encounter resource.\nProperties implemented:\n\nId\nstatus\nSubject: (patient)\n\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/projects/FM2/issues/FM2-10\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My pull request only contains ONE single commit.\nNo? -> read here on how to squash multiple commits into one\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-01-21T11:38:34Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33", "merged": true, "mergeCommit": {"oid": "ed7521917ef2e1c91e3fb212ef79412fb237a5fd"}, "closed": true, "closedAt": "2020-01-21T16:28:41Z", "author": {"login": "corneliouzbett"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8hakEAFqTM0NTg3NzAzMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8jvE8gFqTM0NjAxNDkxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1ODc3MDMy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#pullrequestreview-345877032", "createdAt": "2020-01-21T13:32:21Z", "commit": {"oid": "313dbbe0445116d49493186f26e3cf5e9d831d96"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzozMjoyMVrOFf6B2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzo0NTo0OFrOFf6chw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwMDkyMw==", "bodyText": "I tend to be in favour of the sessionFactory.getCurrentSession().createCriteria(Encounter.class).add(eq(\"uuid\", uuid)).uniqueResult() pattern.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#discussion_r369000923", "createdAt": "2020-01-21T13:32:21Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirEncounterDaoImpl.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.dao.impl;\n+\n+import javax.inject.Inject;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.openmrs.Encounter;\n+import org.openmrs.api.EncounterService;\n+import org.openmrs.module.fhir2.api.dao.FhirEncounterDao;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class FhirEncounterDaoImpl implements FhirEncounterDao {\n+\t\n+\t@Inject\n+\tprivate EncounterService encounterService;\n+\t\n+\t@Override\n+\tpublic Encounter getEncounterByUuid(String uuid) {\n+\t\treturn encounterService.getEncounterByUuid(uuid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313dbbe0445116d49493186f26e3cf5e9d831d96"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwMjc3NQ==", "bodyText": "This should probably be addPersonReference, given its reliance on name. Also, shouldn't we just pass the UUID in here?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#discussion_r369002775", "createdAt": "2020-01-21T13:35:46Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/util/FhirUtils.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.util;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import lombok.AccessLevel;\n+import lombok.NoArgsConstructor;\n+import org.apache.commons.lang.StringUtils;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Reference;\n+\n+@NoArgsConstructor(access = AccessLevel.PRIVATE)\n+public class FhirUtils {\n+\t\n+\tpublic static Reference addReference(@NotNull String uri, String givenName, String familyName, String identifier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313dbbe0445116d49493186f26e3cf5e9d831d96"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwMzkwMw==", "bodyText": "I don't think we should be populating the identifier field, as it's primarily intended for logical references, where as this is a proper resource reference.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#discussion_r369003903", "createdAt": "2020-01-21T13:37:56Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/util/FhirUtils.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.util;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import lombok.AccessLevel;\n+import lombok.NoArgsConstructor;\n+import org.apache.commons.lang.StringUtils;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Reference;\n+\n+@NoArgsConstructor(access = AccessLevel.PRIVATE)\n+public class FhirUtils {\n+\t\n+\tpublic static Reference addReference(@NotNull String uri, String givenName, String familyName, String identifier) {\n+\t\tReference reference = new Reference();\n+\t\tIdentifier fhirIdentifier = new Identifier();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313dbbe0445116d49493186f26e3cf5e9d831d96"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNDg4Mw==", "bodyText": "Instead of doing the formatting here, we should just pass the result of PersonName#getFullName() into this method and use that as the display name.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#discussion_r369004883", "createdAt": "2020-01-21T13:39:58Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/util/FhirUtils.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.util;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import lombok.AccessLevel;\n+import lombok.NoArgsConstructor;\n+import org.apache.commons.lang.StringUtils;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Reference;\n+\n+@NoArgsConstructor(access = AccessLevel.PRIVATE)\n+public class FhirUtils {\n+\t\n+\tpublic static Reference addReference(@NotNull String uri, String givenName, String familyName, String identifier) {\n+\t\tReference reference = new Reference();\n+\t\tIdentifier fhirIdentifier = new Identifier();\n+\t\tfhirIdentifier.setValue(identifier);\n+\t\t\n+\t\tStringBuilder displayName = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313dbbe0445116d49493186f26e3cf5e9d831d96"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNTQ1OA==", "bodyText": "The reference Id should be left unset, so that it's set at run-time. Conceptually, this UUID is specific to the Patient resource and the reference to the patient resource is an entirely different object.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#discussion_r369005458", "createdAt": "2020-01-21T13:41:06Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/util/FhirUtils.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.util;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import lombok.AccessLevel;\n+import lombok.NoArgsConstructor;\n+import org.apache.commons.lang.StringUtils;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Reference;\n+\n+@NoArgsConstructor(access = AccessLevel.PRIVATE)\n+public class FhirUtils {\n+\t\n+\tpublic static Reference addReference(@NotNull String uri, String givenName, String familyName, String identifier) {\n+\t\tReference reference = new Reference();\n+\t\tIdentifier fhirIdentifier = new Identifier();\n+\t\tfhirIdentifier.setValue(identifier);\n+\t\t\n+\t\tStringBuilder displayName = new StringBuilder();\n+\t\tif (StringUtils.isNotBlank(givenName)) {\n+\t\t\tdisplayName.append(givenName);\n+\t\t\tdisplayName.append(\" \");\n+\t\t}\n+\t\tif (StringUtils.isNotBlank(familyName)) {\n+\t\t\tdisplayName.append(familyName);\n+\t\t}\n+\t\t\n+\t\treference.setReference(uri);\n+\t\treference.setDisplay(displayName.toString());\n+\t\treference.setIdentifier(fhirIdentifier);\n+\t\treference.setId(extractUuid(uri));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313dbbe0445116d49493186f26e3cf5e9d831d96"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNTc3Mw==", "bodyText": "I would move this to the FhirUtils class. We will need it in many places.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#discussion_r369005773", "createdAt": "2020-01-21T13:41:41Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import javax.inject.Inject;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Encounter;\n+import org.hl7.fhir.r4.model.Reference;\n+import org.openmrs.Patient;\n+import org.openmrs.PersonName;\n+import org.openmrs.api.PatientService;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.openmrs.module.fhir2.api.translators.EncounterTranslator;\n+import org.openmrs.module.fhir2.api.util.FhirUtils;\n+import org.springframework.stereotype.Component;\n+\n+import static org.apache.commons.lang.Validate.notNull;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class EncounterTranslatorImpl implements EncounterTranslator {\n+\t\n+\t@Inject\n+\tPatientService patientService;\n+\t\n+\t@Override\n+\tpublic Encounter toFhirResource(org.openmrs.Encounter openMrsEncounter) {\n+\t\tEncounter encounter = new Encounter();\n+\t\tencounter.setId(openMrsEncounter.getUuid());\n+\t\tencounter.setStatus(Encounter.EncounterStatus.UNKNOWN);\n+\t\t\n+\t\tencounter.setSubject(getPatientReference(openMrsEncounter.getPatient()));\n+\t\t\n+\t\treturn encounter;\n+\t}\n+\t\n+\t@Override\n+\tpublic org.openmrs.Encounter toOpenmrsType(Encounter fhirEncounter) {\n+\t\treturn this.toOpenmrsType(new org.openmrs.Encounter(), fhirEncounter);\n+\t}\n+\t\n+\t@Override\n+\tpublic org.openmrs.Encounter toOpenmrsType(org.openmrs.Encounter existingEncounter, Encounter encounter) {\n+\t\tnotNull(existingEncounter, \"Existing encounter cannot be null\");\n+\t\t\n+\t\tif (encounter == null) {\n+\t\t\treturn existingEncounter;\n+\t\t}\n+\t\texistingEncounter.setUuid(encounter.getId());\n+\t\tString patientUuid = FhirUtils.extractUuid(encounter.getSubject().getReference());\n+\t\texistingEncounter.setPatient(patientService.getPatientByUuid(patientUuid));\n+\t\t\n+\t\treturn existingEncounter;\n+\t}\n+\t\n+\tpublic Reference getPatientReference(Patient patient) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313dbbe0445116d49493186f26e3cf5e9d831d96"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNjUyMw==", "bodyText": "Just use the value from FhirConstants. The purpose of FhirTestConstants is for some constants needed across tests that aren't constants in the application, e.g., the LOINC_SYSTEM_URL or CIEL_SYSTEM_URN are actually determined at runtime from the database, but for testing purposes, we can use fixed values.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#discussion_r369006523", "createdAt": "2020-01-21T13:43:15Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/FhirTestConstants.java", "diffHunk": "@@ -14,4 +14,7 @@\n \tpublic static final String LOINC_SYSTEM_URL = \"http://loinc.org\";\n \t\n \tpublic static final String CIEL_SYSTEM_URN = \"urn:oid:2.16.840.1.113883.3.7201\";\n+\t\n+\tpublic static final String PATIENT = \"Patient\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313dbbe0445116d49493186f26e3cf5e9d831d96"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNzc1MQ==", "bodyText": "We should probably consider renaming either this file to FhirReferenceUtils or the file in the omod to FhirServerUtils (I favour the second of these) just to avoid confusion.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#discussion_r369007751", "createdAt": "2020-01-21T13:45:48Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/util/FhirUtils.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313dbbe0445116d49493186f26e3cf5e9d831d96"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be18c3d6ce15c9607147c8613e06acc0e4e6545", "author": {"user": {"login": "corneliouzbett", "name": "Kipchumba C. Bett"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5be18c3d6ce15c9607147c8613e06acc0e4e6545", "committedDate": "2020-01-21T14:26:53Z", "message": "FM2-10: Initial implementation for encounter resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1OTMyNzc5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#pullrequestreview-345932779", "createdAt": "2020-01-21T14:47:44Z", "commit": {"oid": "5be18c3d6ce15c9607147c8613e06acc0e4e6545"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDo0Nzo0NFrOFf8o2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDo0Nzo0NFrOFf8o2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA0MzY3Mg==", "bodyText": "I think instead of the IDENTIFIER constant, we should use patient.getPatientIdentifier().getIdentifier().getIdentifierType().getName(); the reason is, not all implementations use only a single identifier per patient.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#discussion_r369043672", "createdAt": "2020-01-21T14:47:44Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/util/FhirReferenceUtils.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.util;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import lombok.AccessLevel;\n+import lombok.NoArgsConstructor;\n+import org.apache.commons.lang.StringUtils;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Reference;\n+import org.openmrs.Patient;\n+import org.openmrs.module.fhir2.FhirConstants;\n+\n+@NoArgsConstructor(access = AccessLevel.PRIVATE)\n+public class FhirReferenceUtils {\n+\n+\t\n+\tpublic static Reference addPatientReference(Patient patient) {\n+\t\tReference reference = new Reference();\n+\t\tString patientUri = FhirConstants.PATIENT +\"/\" +patient.getUuid();\n+\t\treference.setReference(patientUri);\n+\t\tString nameDisplay = patient.getPersonName().getFullName()\n+\t\t\t\t+ \"(\"\n+\t\t\t\t+ FhirConstants.IDENTIFIER", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be18c3d6ce15c9607147c8613e06acc0e4e6545"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8409f226b7e1c51c27328331382892818c822869", "author": {"user": {"login": "corneliouzbett", "name": "Kipchumba C. Bett"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/8409f226b7e1c51c27328331382892818c822869", "committedDate": "2020-01-21T15:57:23Z", "message": "Used identifierTypeName instead of identifier Constants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDE0OTEz", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/33#pullrequestreview-346014913", "createdAt": "2020-01-21T16:28:29Z", "commit": {"oid": "8409f226b7e1c51c27328331382892818c822869"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4354, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}