{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NjI5NTg4", "number": 112, "title": "FM2-105 : Implement search functionality for medication resource", "bodyText": "Description of what I changed\n\n\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-105\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My pull request only contains ONE single commit.\nNo? -> read here on how to squash multiple commits into one\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-03-11T11:19:35Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112", "merged": true, "mergeCommit": {"oid": "9b75b18ff10c80de5e20b6be2972330df0111d77"}, "closed": true, "closedAt": "2020-03-16T19:51:11Z", "author": {"login": "jecihjoy"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMqvWHAFqTM3Mjk3NzYxMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOTmNOgFqTM3NTUzNzQ4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyOTc3NjEx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#pullrequestreview-372977611", "createdAt": "2020-03-11T17:32:17Z", "commit": {"oid": "16895fc4ca2b85b68826a74308952c72c308af9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzozMjoxN1rOF1Bgiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzozMjoxN1rOF1Bgiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE0MzU2Mw==", "bodyText": "Please leave a line before the return statement.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#discussion_r391143563", "createdAt": "2020-03-11T17:32:17Z", "author": {"login": "varung-31"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/BaseDaoImpl.java", "diffHunk": "@@ -683,6 +684,18 @@ protected Criterion generateSystemQuery(String system, List<String> codes) {\n \t\t}\n \t}\n \t\n+\tprotected TokenOrListParam convertStringStatusToBoolean(TokenOrListParam statusParam) {\n+\t\tif (statusParam != null && !statusParam.getValuesAsQueryTokens().isEmpty()) {\n+\t\t\tswitch (statusParam.getValuesAsQueryTokens().get(0).getValue()) {\n+\t\t\t\tcase \"active\":\n+\t\t\t\t\treturn statusParam.add(\"false\");\n+\t\t\t\tcase \"inactive\":\n+\t\t\t\t\treturn statusParam.add(\"true\");\n+\t\t\t}\n+\t\t}\n+\t\treturn null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16895fc4ca2b85b68826a74308952c72c308af9c"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDM3NjUx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#pullrequestreview-373037651", "createdAt": "2020-03-11T18:53:26Z", "commit": {"oid": "16895fc4ca2b85b68826a74308952c72c308af9c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxODo1MzoyN1rOF1EfCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTowNDoyOVrOF1E2TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5MjMyOA==", "bodyText": "Do we actually need this in BaseDaoImpl?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#discussion_r391192328", "createdAt": "2020-03-11T18:53:27Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/BaseDaoImpl.java", "diffHunk": "@@ -683,6 +684,18 @@ protected Criterion generateSystemQuery(String system, List<String> codes) {\n \t\t}\n \t}\n \t\n+\tprotected TokenOrListParam convertStringStatusToBoolean(TokenOrListParam statusParam) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16895fc4ca2b85b68826a74308952c72c308af9c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5Mzk5MA==", "bodyText": "We should probably make sure to use different aliases so that these don't interfere with those in handleMedicationDosageForm. It would be nice if we could create one function that handles the details in common among these three and have each of the three functions do their individual setup and then just call that function.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#discussion_r391193990", "createdAt": "2020-03-11T18:56:15Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirMedicationDaoImpl.java", "diffHunk": "@@ -33,4 +42,78 @@\n \tpublic Drug getMedicationByUuid(String uuid) {\n \t\treturn (Drug) sessionFactory.getCurrentSession().createCriteria(Drug.class).add(eq(\"uuid\", uuid)).uniqueResult();\n \t}\n+\t\n+\t@Override\n+\tpublic Collection<Drug> searchForMedications(TokenOrListParam code, TokenOrListParam dosageForm,\n+\t        TokenOrListParam ingredientCode, TokenOrListParam status) {\n+\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(Drug.class);\n+\t\thandleMedicationCode(criteria, code);\n+\t\thandleMedicationDosageForm(criteria, dosageForm);\n+\t\thandleIngredientCode(criteria, ingredientCode);\n+\t\thandleBoolean(\"retired\", convertStringStatusToBoolean(status)).ifPresent(criteria::add);\n+\t\t\n+\t\treturn criteria.list();\n+\t}\n+\t\n+\tprivate void handleMedicationCode(Criteria criteria, TokenOrListParam code) {\n+\t\tif (code != null) {\n+\t\t\tcriteria.createAlias(\"concept\", \"dc\");\n+\t\t\t\n+\t\t\thandleOrListParamBySystem(code, (system, tokens) -> {\n+\t\t\t\tif (system.isEmpty()) {\n+\t\t\t\t\treturn Optional.of(\n+\t\t\t\t\t    or(in(\"dc.conceptId\", tokensToParams(tokens).map(NumberUtils::toInt).collect(Collectors.toList())),\n+\t\t\t\t\t        in(\"dc.uuid\", tokensToList(tokens))));\n+\t\t\t\t} else {\n+\t\t\t\t\tif (!containsAlias(criteria, \"dcm\")) {\n+\t\t\t\t\t\tcriteria.createAlias(\"dc.conceptMappings\", \"dcm\").createAlias(\"dcm.conceptReferenceTerm\", \"dcrt\");\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\treturn Optional.of(generateSystemQuery(system, tokensToList(tokens)));\n+\t\t\t\t}\n+\t\t\t}).ifPresent(criteria::add);\n+\t\t}\n+\t}\n+\t\n+\tprivate void handleMedicationDosageForm(Criteria criteria, TokenOrListParam dosageForm) {\n+\t\tif (dosageForm != null) {\n+\t\t\tcriteria.createAlias(\"dosageForm\", \"c\");\n+\t\t\t\n+\t\t\thandleOrListParamBySystem(dosageForm, (system, tokens) -> {\n+\t\t\t\tif (system.isEmpty()) {\n+\t\t\t\t\treturn Optional.of(\n+\t\t\t\t\t    or(in(\"c.conceptId\", tokensToParams(tokens).map(NumberUtils::toInt).collect(Collectors.toList())),\n+\t\t\t\t\t        in(\"c.uuid\", tokensToList(tokens))));\n+\t\t\t\t} else {\n+\t\t\t\t\tif (!containsAlias(criteria, \"cm\")) {\n+\t\t\t\t\t\tcriteria.createAlias(\"c.conceptMappings\", \"cm\").createAlias(\"cm.conceptReferenceTerm\", \"crt\");\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\treturn Optional.of(generateSystemQuery(system, tokensToList(tokens)));\n+\t\t\t\t}\n+\t\t\t}).ifPresent(criteria::add);\n+\t\t}\n+\t}\n+\t\n+\tprivate void handleIngredientCode(Criteria criteria, TokenOrListParam ingredientCode) {\n+\t\tif (ingredientCode != null) {\n+\t\t\tcriteria.createAlias(\"ingredients\", \"i\");\n+\t\t\tcriteria.createAlias(\"i.ingredient\", \"c\");\n+\t\t\t\n+\t\t\thandleOrListParamBySystem(ingredientCode, (system, tokens) -> {\n+\t\t\t\tif (system.isEmpty()) {\n+\t\t\t\t\treturn Optional.of(\n+\t\t\t\t\t    or(in(\"c.conceptId\", tokensToParams(tokens).map(NumberUtils::toInt).collect(Collectors.toList())),\n+\t\t\t\t\t        in(\"c.uuid\", tokensToList(tokens))));\n+\t\t\t\t} else {\n+\t\t\t\t\tif (!containsAlias(criteria, \"cm\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16895fc4ca2b85b68826a74308952c72c308af9c"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5NDQ1NA==", "bodyText": "There's something similar in the works for #99, but it would need to be modified and extended to support this use case with multiple concepts.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#discussion_r391194454", "createdAt": "2020-03-11T18:57:07Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirMedicationDaoImpl.java", "diffHunk": "@@ -33,4 +42,78 @@\n \tpublic Drug getMedicationByUuid(String uuid) {\n \t\treturn (Drug) sessionFactory.getCurrentSession().createCriteria(Drug.class).add(eq(\"uuid\", uuid)).uniqueResult();\n \t}\n+\t\n+\t@Override\n+\tpublic Collection<Drug> searchForMedications(TokenOrListParam code, TokenOrListParam dosageForm,\n+\t        TokenOrListParam ingredientCode, TokenOrListParam status) {\n+\t\tCriteria criteria = sessionFactory.getCurrentSession().createCriteria(Drug.class);\n+\t\thandleMedicationCode(criteria, code);\n+\t\thandleMedicationDosageForm(criteria, dosageForm);\n+\t\thandleIngredientCode(criteria, ingredientCode);\n+\t\thandleBoolean(\"retired\", convertStringStatusToBoolean(status)).ifPresent(criteria::add);\n+\t\t\n+\t\treturn criteria.list();\n+\t}\n+\t\n+\tprivate void handleMedicationCode(Criteria criteria, TokenOrListParam code) {\n+\t\tif (code != null) {\n+\t\t\tcriteria.createAlias(\"concept\", \"dc\");\n+\t\t\t\n+\t\t\thandleOrListParamBySystem(code, (system, tokens) -> {\n+\t\t\t\tif (system.isEmpty()) {\n+\t\t\t\t\treturn Optional.of(\n+\t\t\t\t\t    or(in(\"dc.conceptId\", tokensToParams(tokens).map(NumberUtils::toInt).collect(Collectors.toList())),\n+\t\t\t\t\t        in(\"dc.uuid\", tokensToList(tokens))));\n+\t\t\t\t} else {\n+\t\t\t\t\tif (!containsAlias(criteria, \"dcm\")) {\n+\t\t\t\t\t\tcriteria.createAlias(\"dc.conceptMappings\", \"dcm\").createAlias(\"dcm.conceptReferenceTerm\", \"dcrt\");\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\treturn Optional.of(generateSystemQuery(system, tokensToList(tokens)));\n+\t\t\t\t}\n+\t\t\t}).ifPresent(criteria::add);\n+\t\t}\n+\t}\n+\t\n+\tprivate void handleMedicationDosageForm(Criteria criteria, TokenOrListParam dosageForm) {\n+\t\tif (dosageForm != null) {\n+\t\t\tcriteria.createAlias(\"dosageForm\", \"c\");\n+\t\t\t\n+\t\t\thandleOrListParamBySystem(dosageForm, (system, tokens) -> {\n+\t\t\t\tif (system.isEmpty()) {\n+\t\t\t\t\treturn Optional.of(\n+\t\t\t\t\t    or(in(\"c.conceptId\", tokensToParams(tokens).map(NumberUtils::toInt).collect(Collectors.toList())),\n+\t\t\t\t\t        in(\"c.uuid\", tokensToList(tokens))));\n+\t\t\t\t} else {\n+\t\t\t\t\tif (!containsAlias(criteria, \"cm\")) {\n+\t\t\t\t\t\tcriteria.createAlias(\"c.conceptMappings\", \"cm\").createAlias(\"cm.conceptReferenceTerm\", \"crt\");\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\treturn Optional.of(generateSystemQuery(system, tokensToList(tokens)));\n+\t\t\t\t}\n+\t\t\t}).ifPresent(criteria::add);\n+\t\t}\n+\t}\n+\t\n+\tprivate void handleIngredientCode(Criteria criteria, TokenOrListParam ingredientCode) {\n+\t\tif (ingredientCode != null) {\n+\t\t\tcriteria.createAlias(\"ingredients\", \"i\");\n+\t\t\tcriteria.createAlias(\"i.ingredient\", \"c\");\n+\t\t\t\n+\t\t\thandleOrListParamBySystem(ingredientCode, (system, tokens) -> {\n+\t\t\t\tif (system.isEmpty()) {\n+\t\t\t\t\treturn Optional.of(\n+\t\t\t\t\t    or(in(\"c.conceptId\", tokensToParams(tokens).map(NumberUtils::toInt).collect(Collectors.toList())),\n+\t\t\t\t\t        in(\"c.uuid\", tokensToList(tokens))));\n+\t\t\t\t} else {\n+\t\t\t\t\tif (!containsAlias(criteria, \"cm\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5Mzk5MA=="}, "originalCommit": {"oid": "16895fc4ca2b85b68826a74308952c72c308af9c"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5NjAwNg==", "bodyText": "This should probably map to ingredient.strength. If that won't work, we should just leave it out. This is definitely the wrong place to map the strength.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#discussion_r391196006", "createdAt": "2020-03-11T19:00:07Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/MedicationTranslatorImpl.java", "diffHunk": "@@ -47,10 +47,9 @@ public Medication toFhirResource(Drug drug) {\n \t\tmedication.setCode(conceptTranslator.toFhirResource(drug.getConcept()));\n \t\tmedication.setForm(conceptTranslator.toFhirResource(drug.getDosageForm()));\n \t\t\n-\t\tMedication.MedicationIngredientComponent ingredient = new Medication.MedicationIngredientComponent();\n-\t\tCodeableConcept codeableConcept;\n \t\tfor (DrugIngredient val : drug.getIngredients()) {\n-\t\t\tcodeableConcept = conceptTranslator.toFhirResource(val.getIngredient());\n+\t\t\tMedication.MedicationIngredientComponent ingredient = new Medication.MedicationIngredientComponent();\n+\t\t\tCodeableConcept codeableConcept = conceptTranslator.toFhirResource(val.getIngredient());\n \t\t\tif (val.getStrength() != null) {\n \t\t\t\tcodeableConcept.setText(val.getStrength().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16895fc4ca2b85b68826a74308952c72c308af9c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5ODI4NQ==", "bodyText": "Also, on the implementation of this:\nIt should take a single TokenParam and return and single result or handle every OrListParam result and return a separate OrListParam of those values.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#discussion_r391198285", "createdAt": "2020-03-11T19:04:29Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/BaseDaoImpl.java", "diffHunk": "@@ -683,6 +684,18 @@ protected Criterion generateSystemQuery(String system, List<String> codes) {\n \t\t}\n \t}\n \t\n+\tprotected TokenOrListParam convertStringStatusToBoolean(TokenOrListParam statusParam) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5MjMyOA=="}, "originalCommit": {"oid": "16895fc4ca2b85b68826a74308952c72c308af9c"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16895fc4ca2b85b68826a74308952c72c308af9c", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/16895fc4ca2b85b68826a74308952c72c308af9c", "committedDate": "2020-03-11T11:18:18Z", "message": "FM2-105 : Implement search functionality for medication resource"}, "afterCommit": {"oid": "2018473ed2c580aa0d2d7611ed5c99200b64ffec", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2018473ed2c580aa0d2d7611ed5c99200b64ffec", "committedDate": "2020-03-12T08:01:59Z", "message": "FM2-105 : Implement search functionality for medication resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2018473ed2c580aa0d2d7611ed5c99200b64ffec", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/2018473ed2c580aa0d2d7611ed5c99200b64ffec", "committedDate": "2020-03-12T08:01:59Z", "message": "FM2-105 : Implement search functionality for medication resource"}, "afterCommit": {"oid": "1deb901fe7ffe7f7973700d3f1f62dcc67ffdbe9", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/1deb901fe7ffe7f7973700d3f1f62dcc67ffdbe9", "committedDate": "2020-03-16T17:00:44Z", "message": "FM2-105 : Implement search functionality for medication resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDUyODkx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#pullrequestreview-375452891", "createdAt": "2020-03-16T17:53:34Z", "commit": {"oid": "1deb901fe7ffe7f7973700d3f1f62dcc67ffdbe9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1MzozNFrOF2_iOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1MzozNFrOF2_iOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwODM3Ng==", "bodyText": "Can you remove this parameter from the search? That way it won't end up being specified as something we support. You can change the value to be null in the call below so we don't have to change the rest of the API.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#discussion_r393208376", "createdAt": "2020-03-16T17:53:34Z", "author": {"login": "ibacher"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/providers/MedicationFhirResourceProvider.java", "diffHunk": "@@ -47,4 +52,14 @@ public Medication getMedicationByUuid(@IdParam @NotNull IdType id) {\n \t\t}\n \t\treturn medication;\n \t}\n+\t\n+\t@Search\n+\t@SuppressWarnings(\"unused\")\n+\tpublic Bundle searchForMedication(@OptionalParam(name = Medication.SP_CODE) TokenOrListParam code,\n+\t        @OptionalParam(name = Medication.SP_FORM) TokenOrListParam dosageForm,\n+\t        @OptionalParam(name = Medication.SP_INGREDIENT_CODE) TokenOrListParam ingredientCode,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1deb901fe7ffe7f7973700d3f1f62dcc67ffdbe9"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6182f0f15eacdb1b733a7644c681bb239eb4445a", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/6182f0f15eacdb1b733a7644c681bb239eb4445a", "committedDate": "2020-03-16T18:03:26Z", "message": "FM2-105 : Implement search functionality for medication resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1deb901fe7ffe7f7973700d3f1f62dcc67ffdbe9", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/1deb901fe7ffe7f7973700d3f1f62dcc67ffdbe9", "committedDate": "2020-03-16T17:00:44Z", "message": "FM2-105 : Implement search functionality for medication resource"}, "afterCommit": {"oid": "6182f0f15eacdb1b733a7644c681bb239eb4445a", "author": {"user": {"login": "jecihjoy", "name": "Jacinta Gichuhi"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/6182f0f15eacdb1b733a7644c681bb239eb4445a", "committedDate": "2020-03-16T18:03:26Z", "message": "FM2-105 : Implement search functionality for medication resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDY1OTc2", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#pullrequestreview-375465976", "createdAt": "2020-03-16T18:06:29Z", "commit": {"oid": "6182f0f15eacdb1b733a7644c681bb239eb4445a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTM3NDgw", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/112#pullrequestreview-375537480", "createdAt": "2020-03-16T19:50:57Z", "commit": {"oid": "6182f0f15eacdb1b733a7644c681bb239eb4445a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4259, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}