{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjcxNzky", "number": 200, "title": "FM2-101:Implement sorting for AllergyIntolerance resource", "bodyText": "link:https://issues.openmrs.org/browse/FM2-101", "createdAt": "2020-06-10T20:06:07Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200", "merged": true, "mergeCommit": {"oid": "f1a83465282eef1a2ebf3375c3c0fa7dcb76786f"}, "closed": true, "closedAt": "2020-07-02T06:41:23Z", "author": {"login": "gitcliff"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqKHjSABqjM0MzMxMDI2Mzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw4-6hgFqTQ0MTM4NzExNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c0f6dadb63b653567d2c558dbbe04cc17a62dbd", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/8c0f6dadb63b653567d2c558dbbe04cc17a62dbd", "committedDate": "2020-06-10T20:00:21Z", "message": "FM2-101:Implement sorting for AllergyIntolerance resource"}, "afterCommit": {"oid": "15da7d372baab3d0ebf34ed47bcf6a90d55f96a5", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/15da7d372baab3d0ebf34ed47bcf6a90d55f96a5", "committedDate": "2020-06-11T08:37:38Z", "message": "FM2-101:Implement sorting for AllegyIntolerance resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NzQ5NTIw", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#pullrequestreview-428749520", "createdAt": "2020-06-11T09:36:36Z", "commit": {"oid": "15da7d372baab3d0ebf34ed47bcf6a90d55f96a5"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5ODEzOTM1", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#pullrequestreview-429813935", "createdAt": "2020-06-12T15:00:20Z", "commit": {"oid": "15da7d372baab3d0ebf34ed47bcf6a90d55f96a5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15da7d372baab3d0ebf34ed47bcf6a90d55f96a5", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/15da7d372baab3d0ebf34ed47bcf6a90d55f96a5", "committedDate": "2020-06-11T08:37:38Z", "message": "FM2-101:Implement sorting for AllegyIntolerance resource"}, "afterCommit": {"oid": "1fb4d7a1b0821bb7d32a7e59d6d925f69d05980d", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/1fb4d7a1b0821bb7d32a7e59d6d925f69d05980d", "committedDate": "2020-06-14T18:39:27Z", "message": "FM2-101:Implement sorting for AllergyIntolerance resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjczMDQ0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#pullrequestreview-432673044", "createdAt": "2020-06-17T18:39:06Z", "commit": {"oid": "1fb4d7a1b0821bb7d32a7e59d6d925f69d05980d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODozOTowNlrOGlSUeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODozOTowNlrOGlSUeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MDY0OQ==", "bodyText": "@gitcliff  Instead of doing get(results) so many times and considering it repeatedly queries the database, it's better to store it in a variable once and then use it. You may refer to other search query test classes for reference like LocationSearchQueryImplTest. Please find this useful throughout the PR.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#discussion_r441750649", "createdAt": "2020-06-17T18:39:06Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/AllergyIntoleranceSearchQueryImplTest.java", "diffHunk": "@@ -490,4 +494,86 @@ public void searchForAllergies_shouldHandleComplexQuery() {\n \t\t    equalTo(PATIENT_UUID));\n \t}\n \t\n+\t@Test\n+\tpublic void shouldReturnCollectionOfAllergiesSortedBySeveritySevere() {\n+\t\t\n+\t\tSortSpec sort = new SortSpec();\n+\t\tsort.setParamName(AllergyIntolerance.SP_SEVERITY);\n+\t\tsort.setOrder(SortOrderEnum.ASC);\n+\t\t\n+\t\tIBundleProvider results = search(\n+\t\t new SearchParameterMap().addParameter(FhirConstants.SEVERITY_SEARCH_HANDLER, FhirConstants.GLOBAL_PROPERTY_SEVERE, new TokenAndListParam().addAnd(new TokenParam(SEVERITY_SEVERE))).setSortSpec(sort));\n+\t\t\n+\t\tsort.setOrder(SortOrderEnum.DESC);\n+\t\tfor (int i = 1; i < get(results).size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb4d7a1b0821bb7d32a7e59d6d925f69d05980d"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3ODIyODkz", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#pullrequestreview-437822893", "createdAt": "2020-06-25T20:11:08Z", "commit": {"oid": "1fb4d7a1b0821bb7d32a7e59d6d925f69d05980d"}, "state": "DISMISSED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDoxMTowOFrOGpKHgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDoxMTo1N1rOGpKI-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMDU2Mw==", "bodyText": "@gitcliff This should be something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfor (int i = 1; i < get(results).size(); i++) {\n          \n          \n            \n            \t\t\t\n          \n          \n            \n            \t\t\tassertThat(((AllergyIntolerance) get(results).get(i - 1)).getReactionFirstRep().getSeverity(),\n          \n          \n            \n            \t\t\t\t    lessThanOrEqualTo(((AllergyIntolerance) get(results).get(i)).getReactionFirstRep().getSeverity()));\t\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tList<AllergyIntolerance> fullResults = (List<AllergyIntolerance>) get(results);\n          \n          \n            \n            \t\tfor (int i = 1; i < fullResults.size(); i++) {\n          \n          \n            \n            \t\t\tassertThat(fullResults.get(i - 1).getReactionFirstRep().getSeverity(),\n          \n          \n            \n            \t\t\t\t    lessThanOrEqualTo(fullResults.get(i).getReactionFirstRep().getSeverity()));\t\n          \n          \n            \n            \t\t}", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#discussion_r445810563", "createdAt": "2020-06-25T20:11:08Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/AllergyIntoleranceSearchQueryImplTest.java", "diffHunk": "@@ -490,4 +494,86 @@ public void searchForAllergies_shouldHandleComplexQuery() {\n \t\t    equalTo(PATIENT_UUID));\n \t}\n \t\n+\t@Test\n+\tpublic void shouldReturnCollectionOfAllergiesSortedBySeveritySevere() {\n+\t\t\n+\t\tSortSpec sort = new SortSpec();\n+\t\tsort.setParamName(AllergyIntolerance.SP_SEVERITY);\n+\t\tsort.setOrder(SortOrderEnum.ASC);\n+\t\t\n+\t\tIBundleProvider results = search(\n+\t\t new SearchParameterMap().addParameter(FhirConstants.SEVERITY_SEARCH_HANDLER, FhirConstants.GLOBAL_PROPERTY_SEVERE, new TokenAndListParam().addAnd(new TokenParam(SEVERITY_SEVERE))).setSortSpec(sort));\n+\t\t\n+\t\tsort.setOrder(SortOrderEnum.DESC);\n+\t\tfor (int i = 1; i < get(results).size(); i++) {\n+\t\t\t\n+\t\t\tassertThat(((AllergyIntolerance) get(results).get(i - 1)).getReactionFirstRep().getSeverity(),\n+\t\t\t\t    lessThanOrEqualTo(((AllergyIntolerance) get(results).get(i)).getReactionFirstRep().getSeverity()));\t\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb4d7a1b0821bb7d32a7e59d6d925f69d05980d"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMDY4NQ==", "bodyText": "This should be after the for loop.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#discussion_r445810685", "createdAt": "2020-06-25T20:11:25Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/AllergyIntoleranceSearchQueryImplTest.java", "diffHunk": "@@ -490,4 +494,86 @@ public void searchForAllergies_shouldHandleComplexQuery() {\n \t\t    equalTo(PATIENT_UUID));\n \t}\n \t\n+\t@Test\n+\tpublic void shouldReturnCollectionOfAllergiesSortedBySeveritySevere() {\n+\t\t\n+\t\tSortSpec sort = new SortSpec();\n+\t\tsort.setParamName(AllergyIntolerance.SP_SEVERITY);\n+\t\tsort.setOrder(SortOrderEnum.ASC);\n+\t\t\n+\t\tIBundleProvider results = search(\n+\t\t new SearchParameterMap().addParameter(FhirConstants.SEVERITY_SEARCH_HANDLER, FhirConstants.GLOBAL_PROPERTY_SEVERE, new TokenAndListParam().addAnd(new TokenParam(SEVERITY_SEVERE))).setSortSpec(sort));\n+\t\t\n+\t\tsort.setOrder(SortOrderEnum.DESC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb4d7a1b0821bb7d32a7e59d6d925f69d05980d"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMDkzOQ==", "bodyText": "Similar comments apply to the rest of the sorting test methods.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#discussion_r445810939", "createdAt": "2020-06-25T20:11:57Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/AllergyIntoleranceSearchQueryImplTest.java", "diffHunk": "@@ -490,4 +494,86 @@ public void searchForAllergies_shouldHandleComplexQuery() {\n \t\t    equalTo(PATIENT_UUID));\n \t}\n \t\n+\t@Test\n+\tpublic void shouldReturnCollectionOfAllergiesSortedBySeveritySevere() {\n+\t\t\n+\t\tSortSpec sort = new SortSpec();\n+\t\tsort.setParamName(AllergyIntolerance.SP_SEVERITY);\n+\t\tsort.setOrder(SortOrderEnum.ASC);\n+\t\t\n+\t\tIBundleProvider results = search(\n+\t\t new SearchParameterMap().addParameter(FhirConstants.SEVERITY_SEARCH_HANDLER, FhirConstants.GLOBAL_PROPERTY_SEVERE, new TokenAndListParam().addAnd(new TokenParam(SEVERITY_SEVERE))).setSortSpec(sort));\n+\t\t\n+\t\tsort.setOrder(SortOrderEnum.DESC);\n+\t\tfor (int i = 1; i < get(results).size(); i++) {\n+\t\t\t\n+\t\t\tassertThat(((AllergyIntolerance) get(results).get(i - 1)).getReactionFirstRep().getSeverity(),\n+\t\t\t\t    lessThanOrEqualTo(((AllergyIntolerance) get(results).get(i)).getReactionFirstRep().getSeverity()));\t\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMDU2Mw=="}, "originalCommit": {"oid": "1fb4d7a1b0821bb7d32a7e59d6d925f69d05980d"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "591e456296b4127998e18eb57c7fb4f253bbb5e4", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/591e456296b4127998e18eb57c7fb4f253bbb5e4", "committedDate": "2020-06-25T20:07:10Z", "message": "Merge branch 'master' into FM2-101"}, "afterCommit": {"oid": "a27f51433ba672605fb64b8b5ab08aba0d4204b0", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/a27f51433ba672605fb64b8b5ab08aba0d4204b0", "committedDate": "2020-06-30T05:49:11Z", "message": "FM2-101:Implement sorting for AllergyIntolerance resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a27f51433ba672605fb64b8b5ab08aba0d4204b0", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/a27f51433ba672605fb64b8b5ab08aba0d4204b0", "committedDate": "2020-06-30T05:49:11Z", "message": "FM2-101:Implement sorting for AllergyIntolerance resource"}, "afterCommit": {"oid": "f8edf70581ba75d8079a38c07548caf17edb154b", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f8edf70581ba75d8079a38c07548caf17edb154b", "committedDate": "2020-06-30T06:11:50Z", "message": "FM2-101:Implement sorting for AllergyIntolerance resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzY0NjYw", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#pullrequestreview-439764660", "createdAt": "2020-06-30T08:00:14Z", "commit": {"oid": "f8edf70581ba75d8079a38c07548caf17edb154b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODowMDoxNFrOGqwfyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODowMTo0MVrOGqwj6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4Nzk0NA==", "bodyText": "Do you think we need to cast it again to AllergyIntolerance given that the list contains AllergyIntolerance objects?\nPlease use this for all other sorting tests added.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#discussion_r447487944", "createdAt": "2020-06-30T08:00:14Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/AllergyIntoleranceSearchQueryImplTest.java", "diffHunk": "@@ -760,4 +764,91 @@ public void searchForAllergies_shouldHandleComplexQuery() {\n \t\t    equalTo(PATIENT_UUID));\n \t}\n \t\n+\t@Test\n+\tpublic void shouldReturnCollectionOfAllergiesSortedBySeveritySevere() {\n+\t\t\n+\t\tSortSpec sort = new SortSpec();\n+\t\tsort.setParamName(AllergyIntolerance.SP_SEVERITY);\n+\t\tsort.setOrder(SortOrderEnum.ASC);\n+\t\t\n+\t\tIBundleProvider results = search(\n+\t\t new SearchParameterMap().addParameter(FhirConstants.SEVERITY_SEARCH_HANDLER, FhirConstants.GLOBAL_PROPERTY_SEVERE, new TokenAndListParam().addAnd(new TokenParam(SEVERITY_SEVERE))).setSortSpec(sort));\n+\t\t\n+\t\tList<AllergyIntolerance> fullResults = get(results).stream().map(p -> (AllergyIntolerance)p).collect(Collectors.toList());\n+\t\tfor (int i = 1; i < fullResults.size(); i++) {\n+\t\t\t\n+\t\t\tassertThat(((AllergyIntolerance) fullResults.get(i - 1)).getReactionFirstRep().getSeverity(),\n+\t\t\t\t    lessThanOrEqualTo(((AllergyIntolerance) fullResults.get(i)).getReactionFirstRep().getSeverity()));\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8edf70581ba75d8079a38c07548caf17edb154b"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4OTAwMg==", "bodyText": "We don't need to add FhirConstants.GLOBAL_PROPERTY_SEVERE. Check the dao implementation.\nPlease use this for all other sorting tests added.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#discussion_r447489002", "createdAt": "2020-06-30T08:01:41Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/AllergyIntoleranceSearchQueryImplTest.java", "diffHunk": "@@ -760,4 +764,91 @@ public void searchForAllergies_shouldHandleComplexQuery() {\n \t\t    equalTo(PATIENT_UUID));\n \t}\n \t\n+\t@Test\n+\tpublic void shouldReturnCollectionOfAllergiesSortedBySeveritySevere() {\n+\t\t\n+\t\tSortSpec sort = new SortSpec();\n+\t\tsort.setParamName(AllergyIntolerance.SP_SEVERITY);\n+\t\tsort.setOrder(SortOrderEnum.ASC);\n+\t\t\n+\t\tIBundleProvider results = search(\n+\t\t new SearchParameterMap().addParameter(FhirConstants.SEVERITY_SEARCH_HANDLER, FhirConstants.GLOBAL_PROPERTY_SEVERE, new TokenAndListParam().addAnd(new TokenParam(SEVERITY_SEVERE))).setSortSpec(sort));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8edf70581ba75d8079a38c07548caf17edb154b"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8edf70581ba75d8079a38c07548caf17edb154b", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f8edf70581ba75d8079a38c07548caf17edb154b", "committedDate": "2020-06-30T06:11:50Z", "message": "FM2-101:Implement sorting for AllergyIntolerance resource"}, "afterCommit": {"oid": "20dd5feaeb65f362bdf59209135ba1cd5835a831", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/20dd5feaeb65f362bdf59209135ba1cd5835a831", "committedDate": "2020-06-30T10:55:43Z", "message": "FM2-101:Implement sorting for AllergyIntolerance resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5OTEyMjEx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#pullrequestreview-439912211", "createdAt": "2020-06-30T11:12:36Z", "commit": {"oid": "20dd5feaeb65f362bdf59209135ba1cd5835a831"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMToxMjozNlrOGq3h0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMToxMjozNlrOGq3h0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYwMzE1NQ==", "bodyText": "@gitcliff\nYou forgot to remove the casting I guess.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#discussion_r447603155", "createdAt": "2020-06-30T11:12:36Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/search/AllergyIntoleranceSearchQueryImplTest.java", "diffHunk": "@@ -760,4 +764,91 @@ public void searchForAllergies_shouldHandleComplexQuery() {\n \t\t    equalTo(PATIENT_UUID));\n \t}\n \t\n+\t@Test\n+\tpublic void shouldReturnCollectionOfAllergiesSortedBySeveritySevere() {\n+\t\t\n+\t\tSortSpec sort = new SortSpec();\n+\t\tsort.setParamName(AllergyIntolerance.SP_SEVERITY);\n+\t\tsort.setOrder(SortOrderEnum.ASC);\n+\t\t\n+\t\tIBundleProvider results = search(\n+\t\t new SearchParameterMap().addParameter(FhirConstants.SEVERITY_SEARCH_HANDLER, new TokenAndListParam().addAnd(new TokenParam(SEVERITY_SEVERE))).setSortSpec(sort));\n+\t\t\n+\t\tList<AllergyIntolerance> fullResults = get(results).stream().map(p -> (AllergyIntolerance)p).collect(Collectors.toList());\n+\t\tfor (int i = 1; i < fullResults.size(); i++) {\n+\t\t\t\n+\t\t\tassertThat(((AllergyIntolerance) fullResults.get(i - 1)).getReactionFirstRep().getSeverity(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20dd5feaeb65f362bdf59209135ba1cd5835a831"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8ce45b1e7fee659535812bb5fadd467ed2bb536", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/a8ce45b1e7fee659535812bb5fadd467ed2bb536", "committedDate": "2020-06-30T11:59:09Z", "message": "FM2-101:Implement sorting for AllergyIntolerance resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20dd5feaeb65f362bdf59209135ba1cd5835a831", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/20dd5feaeb65f362bdf59209135ba1cd5835a831", "committedDate": "2020-06-30T10:55:43Z", "message": "FM2-101:Implement sorting for AllergyIntolerance resource"}, "afterCommit": {"oid": "a8ce45b1e7fee659535812bb5fadd467ed2bb536", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/a8ce45b1e7fee659535812bb5fadd467ed2bb536", "committedDate": "2020-06-30T11:59:09Z", "message": "FM2-101:Implement sorting for AllergyIntolerance resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMzg3MTE0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/200#pullrequestreview-441387114", "createdAt": "2020-07-02T06:37:51Z", "commit": {"oid": "a8ce45b1e7fee659535812bb5fadd467ed2bb536"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4061, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}