{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NDk2MTM5", "number": 298, "title": "FM2-301: Improve Integration Tests for Medication", "bodyText": "Description of what I changed\n\n\nImprove Integration Tests for Medication\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-301\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-08-28T16:08:25Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/298", "merged": true, "mergeCommit": {"oid": "8cbb2d82230aba5f960d76eb0dae3a2a23f7c2f1"}, "closed": true, "closedAt": "2020-08-28T19:18:14Z", "author": {"login": "varung-31"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDZU-sgFqTQ3Nzk0MjUzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDZlJ2gBqjM3MDUyNDA1MjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTQyNTM1", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/298#pullrequestreview-477942535", "createdAt": "2020-08-28T18:29:02Z", "commit": {"oid": "32f7fe85b1a848cc052cbe204913ea7380022832"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyOTowMlrOHJQgDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyOTowMlrOHJQgDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2OTU4MQ==", "bodyText": "For shouldDelete(), we don't need the AsJson and AsXML differentiators. This is because there's no real body to either the request or the response (except in the case of an error).", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/298#discussion_r479469581", "createdAt": "2020-08-28T18:29:02Z", "author": {"login": "ibacher"}, "path": "integration-tests/src/test/java/org/openmrs/module/fhir2/providers/r3/MedicationFhirResourceProviderIntegrationTest.java", "diffHunk": "@@ -282,6 +328,100 @@ public void shouldUpdateExistingMedicationAsXml() throws Exception {\n \t\tassertThat(getStrengthExtensionValue(updatedMedication), equalTo(\"800mg\"));\n \t}\n \t\n+\t@Test\n+\tpublic void shouldReturnBadRequestWhenDocumentIdDoesNotMatchMedicationIdAsXML() throws Exception {\n+\t\t// get the existing record\n+\t\tMockHttpServletResponse response = get(\"/Medication/\" + MEDICATION_UUID).accept(FhirMediaTypes.XML).go();\n+\t\tMedication medication = readResponse(response);\n+\t\t\n+\t\t// update the existing record\n+\t\tmedication.setId(WRONG_MEDICATION_UUID);\n+\t\t\n+\t\t// send the update to the server\n+\t\tresponse = put(\"/Medication/\" + MEDICATION_UUID).xmlContext(toXML(medication)).go();\n+\t\t\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentType(), is(FhirMediaTypes.XML.toString()));\n+\t\tassertThat(response.getContentAsString(), notNullValue());\n+\t\t\n+\t\tOperationOutcome operationOutcome = readOperationOutcome(response);\n+\t\t\n+\t\tassertThat(operationOutcome, notNullValue());\n+\t\tassertThat(operationOutcome.hasIssue(), is(true));\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnNotFoundWhenUpdatingNonExistentMedicationAsXML() throws Exception {\n+\t\t// get the existing record\n+\t\tMockHttpServletResponse response = get(\"/Medication/\" + MEDICATION_UUID).accept(FhirMediaTypes.XML).go();\n+\t\tMedication medication = readResponse(response);\n+\t\t\n+\t\t// update the existing record\n+\t\tmedication.setId(WRONG_MEDICATION_UUID);\n+\t\t\n+\t\t// send the update to the server\n+\t\tresponse = put(\"/Medication/\" + WRONG_MEDICATION_UUID).xmlContext(toXML(medication)).go();\n+\t\t\n+\t\tassertThat(response, isNotFound());\n+\t\tassertThat(response.getContentType(), is(FhirMediaTypes.XML.toString()));\n+\t\tassertThat(response.getContentAsString(), notNullValue());\n+\t\t\n+\t\tOperationOutcome operationOutcome = readOperationOutcome(response);\n+\t\t\n+\t\tassertThat(operationOutcome, notNullValue());\n+\t\tassertThat(operationOutcome.hasIssue(), is(true));\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldDeleteExistingMedicationAsJson() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32f7fe85b1a848cc052cbe204913ea7380022832"}, "originalPosition": 114}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b748e31f61b5920f6da41757163d92836da5396", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5b748e31f61b5920f6da41757163d92836da5396", "committedDate": "2020-08-28T18:45:16Z", "message": "FM2-301: Improve Integration Tests for Medication"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32f7fe85b1a848cc052cbe204913ea7380022832", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/32f7fe85b1a848cc052cbe204913ea7380022832", "committedDate": "2020-08-28T16:05:09Z", "message": "FM2-301: Improve Integration Tests for Medication"}, "afterCommit": {"oid": "5b748e31f61b5920f6da41757163d92836da5396", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5b748e31f61b5920f6da41757163d92836da5396", "committedDate": "2020-08-28T18:45:16Z", "message": "FM2-301: Improve Integration Tests for Medication"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3988, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}