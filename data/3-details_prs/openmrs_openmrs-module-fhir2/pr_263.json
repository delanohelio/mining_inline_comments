{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NjQwMTI2", "number": 263, "title": "FM2-267: Add create, update and delete methods for ProcedureRequest", "bodyText": "Description of what I changed\n\n\nAdd create, update and delete methods for ProcedureRequest\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-267\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-07-25T17:06:35Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263", "merged": true, "mergeCommit": {"oid": "35a4956755976476d799f67bf866910f2b0103f6"}, "closed": true, "closedAt": "2020-07-31T13:56:20Z", "author": {"login": "varung-31"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5V2MdAFqTQ1NjU5MTQxMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6UomMAFqTQ1OTE5MzM5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NTkxNDEy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263#pullrequestreview-456591412", "createdAt": "2020-07-28T12:43:23Z", "commit": {"oid": "644014172fdfa088df58c0cdc01cecec00bbe17e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0MzoyM1rOG4KuxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0NTowM1rOG4Kyxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0OTI1Mw==", "bodyText": "This needs to be converted back into a ProcedureRequest before it's passed to buildUpdate()", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263#discussion_r461549253", "createdAt": "2020-07-28T12:43:23Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProvider.java", "diffHunk": "@@ -54,6 +63,34 @@ public ProcedureRequest getProcedureRequestById(@IdParam @NotNull IdType id) {\n \t\treturn (ProcedureRequest) VersionConvertor_30_40.convertResource(serviceRequest, false);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createProcedureRequest(@ResourceParam ProcedureRequest procedureRequest) {\n+\t\treturn FhirProviderUtils.buildCreate(\n+\t\t    serviceRequestService.create((ServiceRequest) VersionConvertor_30_40.convertResource(procedureRequest, false)));\n+\t}\n+\t\n+\t@Update\n+\tpublic MethodOutcome updateProcedureRequest(@IdParam IdType id, @ResourceParam ProcedureRequest procedureRequest) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\t\t\n+\t\tprocedureRequest.setId(id.getIdPart());\n+\t\t\n+\t\treturn FhirProviderUtils.buildUpdate(serviceRequestService.update(id.getIdPart(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644014172fdfa088df58c0cdc01cecec00bbe17e"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0OTcwNQ==", "bodyText": "This needs to be converted back to a ProcedureRequest before it's passed to buildCreate()", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263#discussion_r461549705", "createdAt": "2020-07-28T12:44:07Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProvider.java", "diffHunk": "@@ -54,6 +63,34 @@ public ProcedureRequest getProcedureRequestById(@IdParam @NotNull IdType id) {\n \t\treturn (ProcedureRequest) VersionConvertor_30_40.convertResource(serviceRequest, false);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createProcedureRequest(@ResourceParam ProcedureRequest procedureRequest) {\n+\t\treturn FhirProviderUtils.buildCreate(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644014172fdfa088df58c0cdc01cecec00bbe17e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1MDEyOA==", "bodyText": "This is definitely not the expected condition (i.e., an R3 resource provider needs to return the R3 resource).", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263#discussion_r461550128", "createdAt": "2020-07-28T12:44:50Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProviderTest.java", "diffHunk": "@@ -107,6 +113,82 @@ public void getServiceRequestByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getProcedureRequestById(idType), nullValue());\n \t}\n \t\n+\t@Test\n+\tpublic void createProcedureRequest_shouldCreateNewProcedureRequest() {\n+\t\twhen(serviceRequestService.create(any(ServiceRequest.class))).thenReturn(serviceRequest);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider\n+\t\t        .createProcedureRequest((ProcedureRequest) VersionConvertor_30_40.convertResource(serviceRequest, false));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(serviceRequest));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644014172fdfa088df58c0cdc01cecec00bbe17e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1MDI3OQ==", "bodyText": "This is definitely not the expected condition (i.e., an R3 resource provider needs to return the R3 resource).", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263#discussion_r461550279", "createdAt": "2020-07-28T12:45:03Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/ProcedureRequestFhirResourceProviderTest.java", "diffHunk": "@@ -107,6 +113,82 @@ public void getServiceRequestByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(resourceProvider.getProcedureRequestById(idType), nullValue());\n \t}\n \t\n+\t@Test\n+\tpublic void createProcedureRequest_shouldCreateNewProcedureRequest() {\n+\t\twhen(serviceRequestService.create(any(ServiceRequest.class))).thenReturn(serviceRequest);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider\n+\t\t        .createProcedureRequest((ProcedureRequest) VersionConvertor_30_40.convertResource(serviceRequest, false));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(serviceRequest));\n+\t}\n+\t\n+\t@Test\n+\tpublic void updateProcedureRequest_shouldUpdateProcedureRequest() {\n+\t\twhen(serviceRequestService.update(eq(SERVICE_REQUEST_UUID), any(ServiceRequest.class))).thenReturn(serviceRequest);\n+\t\t\n+\t\tMethodOutcome result = resourceProvider.updateProcedureRequest(new IdType().setValue(SERVICE_REQUEST_UUID),\n+\t\t    (ProcedureRequest) VersionConvertor_30_40.convertResource(serviceRequest, false));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getResource(), equalTo(serviceRequest));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644014172fdfa088df58c0cdc01cecec00bbe17e"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "644014172fdfa088df58c0cdc01cecec00bbe17e", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/644014172fdfa088df58c0cdc01cecec00bbe17e", "committedDate": "2020-07-25T17:03:45Z", "message": "FM2-267: Add create, update and delete methods for ProcedureRequest"}, "afterCommit": {"oid": "f3a5e8e9ca0ebc2a1e3dea2a4268f60ae0d12723", "author": {"user": {"login": "corneliouzbett", "name": "Kipchumba C. Bett"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f3a5e8e9ca0ebc2a1e3dea2a4268f60ae0d12723", "committedDate": "2020-07-22T06:10:43Z", "message": "Fix formatting issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25056b2da37cb4d1c30cc601dc92f5be57a8a146", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/25056b2da37cb4d1c30cc601dc92f5be57a8a146", "committedDate": "2020-07-30T15:37:05Z", "message": "FM2-267: Add create, update and delete methods for ProcedureRequest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7de1fbdbd58e99a8f5c00b0113ea2e24858ba280", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/7de1fbdbd58e99a8f5c00b0113ea2e24858ba280", "committedDate": "2020-07-29T16:15:32Z", "message": "FM2-267: Add create, update and delete methods for ProcedureRequest"}, "afterCommit": {"oid": "25056b2da37cb4d1c30cc601dc92f5be57a8a146", "author": {"user": {"login": "varung-31", "name": "Varun Gupta"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/25056b2da37cb4d1c30cc601dc92f5be57a8a146", "committedDate": "2020-07-30T15:37:05Z", "message": "FM2-267: Add create, update and delete methods for ProcedureRequest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MTkzMzkx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/263#pullrequestreview-459193391", "createdAt": "2020-07-31T13:56:08Z", "commit": {"oid": "25056b2da37cb4d1c30cc601dc92f5be57a8a146"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4171, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}