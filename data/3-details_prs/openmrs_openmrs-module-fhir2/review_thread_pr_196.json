{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwMDg5NDI1", "number": 196, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTowODo1NlrOEDZdwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTowODo1NlrOEDZdwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTk4NDAwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/DiagnosticReportFhirResourceProvider.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTowODo1NlrOGgZGDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxOTowMzowMVrOGjOuxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxODc2NA==", "bodyText": "One thing I had completely forgotten is conversion to R3. You see the code above will always return FHIR R4 resources. The service layer calls searchQuery.getQueryResults(theParams, dao, translator); and goes down to here;\n@Override\n\tpublic List<IBaseResource> getResources(int fromIndex, int toIndex) {\n\t\tint firstResult = 0;\n\t\tif (fromIndex >= 0) {\n\t\t\tfirstResult = fromIndex;\n\t\t}\n\t\t\n\t\tint maxResults = -1;\n\t\tif (toIndex - fromIndex > 0) {\n\t\t\tmaxResults = toIndex - fromIndex;\n\t\t}\n\t\t\n\t\treturn dao.search(theParams, firstResult, maxResults).stream().map(translator::toFhirResource)\n\t\t        .collect(Collectors.toList());\n\t}\nwhere it's only been translated to R4 (no conversions).\nInitially, this Bundle30_40.convertBundle() was been used to convert to R3 which doesn't for IBundeProvider. We need to find a way of converting IBundleProvider resources to R3.\nMy Initial thought was that conversions should go down to the translators' layer where we add a new method\norg.hl7.fhir.dstu3.model.Patient toFhirR3(org.openmrs.Patient patient)\nthen implementation\nPatient30_40.convertPatient(toFhirResource(patient))\nIf the conversion is not satisfactory, this will give us the flexibility of doing them manually.\ncc: @ibacher", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/196#discussion_r436618764", "createdAt": "2020-06-08T11:08:56Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/DiagnosticReportFhirResourceProvider.java", "diffHunk": "@@ -68,4 +75,22 @@ public MethodOutcome updateDiagnosticReport(@IdParam IdType id, @ResourceParam D\n \t\treturn FhirProviderUtils.buildUpdate(\n \t\t    diagnosticReportService.update(idPart, DiagnosticReport30_40.convertDiagnosticReport(diagnosticReport)));\n \t}\n+\t\n+\t@Search\n+\tpublic IBundleProvider searchForDiagnosticReports(\n+\t        @OptionalParam(name = DiagnosticReport.SP_ENCOUNTER, chainWhitelist = {\n+\t                \"\" }, targetTypes = Encounter.class) ReferenceAndListParam encounterReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_PATIENT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY,\n+\t                Patient.SP_NAME }, targetTypes = Patient.class) ReferenceAndListParam patientReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_SUBJECT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER, Patient.SP_NAME,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY }) ReferenceAndListParam subjectReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_ISSUED) DateRangeParam issueDate,\n+\t        @OptionalParam(name = DiagnosticReport.SP_CODE) TokenAndListParam code, @Sort SortSpec sort) {\n+\t\tif (patientReference == null) {\n+\t\t\tpatientReference = subjectReference;\n+\t\t}\n+\t\treturn diagnosticReportService.searchForDiagnosticReports(encounterReference, patientReference, issueDate, code,\n+\t\t    sort);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc5390d3eaf29925fae32ea90c4c33bc8ac08ce3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcyMjM2NA==", "bodyText": "@corneliouzbett At a first pass, I think I'd want to keep the concept of \"version conversions\" separate from the concept of \"translations\". The rationale for this being that FHIR resources have been renamed or changed across versions. So, for instance, Person is pretty much consistently a FHIR resource from the initial draft of what became FHIR until the present, but, e.g., both ProcedureRequest (R3) and ReferralRequest (R3) merged into ServiceRequest (R4).\nAt a guess, one way to implement this is via a VersionConverter class that is supplied in the R3 version of the Provider and omitted in the R4 version.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/196#discussion_r436722364", "createdAt": "2020-06-08T13:53:56Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/DiagnosticReportFhirResourceProvider.java", "diffHunk": "@@ -68,4 +75,22 @@ public MethodOutcome updateDiagnosticReport(@IdParam IdType id, @ResourceParam D\n \t\treturn FhirProviderUtils.buildUpdate(\n \t\t    diagnosticReportService.update(idPart, DiagnosticReport30_40.convertDiagnosticReport(diagnosticReport)));\n \t}\n+\t\n+\t@Search\n+\tpublic IBundleProvider searchForDiagnosticReports(\n+\t        @OptionalParam(name = DiagnosticReport.SP_ENCOUNTER, chainWhitelist = {\n+\t                \"\" }, targetTypes = Encounter.class) ReferenceAndListParam encounterReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_PATIENT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY,\n+\t                Patient.SP_NAME }, targetTypes = Patient.class) ReferenceAndListParam patientReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_SUBJECT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER, Patient.SP_NAME,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY }) ReferenceAndListParam subjectReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_ISSUED) DateRangeParam issueDate,\n+\t        @OptionalParam(name = DiagnosticReport.SP_CODE) TokenAndListParam code, @Sort SortSpec sort) {\n+\t\tif (patientReference == null) {\n+\t\t\tpatientReference = subjectReference;\n+\t\t}\n+\t\treturn diagnosticReportService.searchForDiagnosticReports(encounterReference, patientReference, issueDate, code,\n+\t\t    sort);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxODc2NA=="}, "originalCommit": {"oid": "fc5390d3eaf29925fae32ea90c4c33bc8ac08ce3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzNTIzMA==", "bodyText": "@corneliouzbett At a first pass, I think I'd want to keep the concept of \"version conversions\" separate from the concept of \"translations\". The rationale for this being that FHIR resources have been renamed or changed across versions. So, for instance, Person is pretty much consistently a FHIR resource from the initial draft of what became FHIR until the present, but, e.g., both ProcedureRequest (R3) and ReferralRequest (R3) merged into ServiceRequest (R4).\nAt a guess, one way to implement this is via a VersionConverter class that is supplied in the R3 version of the Provider and omitted in the R4 version.\n\nThat's okay. my point is there's no implementation or a method for converting R4 IBundleProvider to R3 & vice versa. So all R3 providers return paged R4 resources except for GET methods.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/196#discussion_r438035230", "createdAt": "2020-06-10T10:54:24Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/DiagnosticReportFhirResourceProvider.java", "diffHunk": "@@ -68,4 +75,22 @@ public MethodOutcome updateDiagnosticReport(@IdParam IdType id, @ResourceParam D\n \t\treturn FhirProviderUtils.buildUpdate(\n \t\t    diagnosticReportService.update(idPart, DiagnosticReport30_40.convertDiagnosticReport(diagnosticReport)));\n \t}\n+\t\n+\t@Search\n+\tpublic IBundleProvider searchForDiagnosticReports(\n+\t        @OptionalParam(name = DiagnosticReport.SP_ENCOUNTER, chainWhitelist = {\n+\t                \"\" }, targetTypes = Encounter.class) ReferenceAndListParam encounterReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_PATIENT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY,\n+\t                Patient.SP_NAME }, targetTypes = Patient.class) ReferenceAndListParam patientReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_SUBJECT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER, Patient.SP_NAME,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY }) ReferenceAndListParam subjectReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_ISSUED) DateRangeParam issueDate,\n+\t        @OptionalParam(name = DiagnosticReport.SP_CODE) TokenAndListParam code, @Sort SortSpec sort) {\n+\t\tif (patientReference == null) {\n+\t\t\tpatientReference = subjectReference;\n+\t\t}\n+\t\treturn diagnosticReportService.searchForDiagnosticReports(encounterReference, patientReference, issueDate, code,\n+\t\t    sort);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxODc2NA=="}, "originalCommit": {"oid": "fc5390d3eaf29925fae32ea90c4c33bc8ac08ce3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5NDY5NA==", "bodyText": "Yeah, we need to fix that.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/196#discussion_r439594694", "createdAt": "2020-06-12T19:03:01Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/DiagnosticReportFhirResourceProvider.java", "diffHunk": "@@ -68,4 +75,22 @@ public MethodOutcome updateDiagnosticReport(@IdParam IdType id, @ResourceParam D\n \t\treturn FhirProviderUtils.buildUpdate(\n \t\t    diagnosticReportService.update(idPart, DiagnosticReport30_40.convertDiagnosticReport(diagnosticReport)));\n \t}\n+\t\n+\t@Search\n+\tpublic IBundleProvider searchForDiagnosticReports(\n+\t        @OptionalParam(name = DiagnosticReport.SP_ENCOUNTER, chainWhitelist = {\n+\t                \"\" }, targetTypes = Encounter.class) ReferenceAndListParam encounterReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_PATIENT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY,\n+\t                Patient.SP_NAME }, targetTypes = Patient.class) ReferenceAndListParam patientReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_SUBJECT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER, Patient.SP_NAME,\n+\t                Patient.SP_GIVEN, Patient.SP_FAMILY }) ReferenceAndListParam subjectReference,\n+\t        @OptionalParam(name = DiagnosticReport.SP_ISSUED) DateRangeParam issueDate,\n+\t        @OptionalParam(name = DiagnosticReport.SP_CODE) TokenAndListParam code, @Sort SortSpec sort) {\n+\t\tif (patientReference == null) {\n+\t\t\tpatientReference = subjectReference;\n+\t\t}\n+\t\treturn diagnosticReportService.searchForDiagnosticReports(encounterReference, patientReference, issueDate, code,\n+\t\t    sort);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxODc2NA=="}, "originalCommit": {"oid": "fc5390d3eaf29925fae32ea90c4c33bc8ac08ce3"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 918, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}