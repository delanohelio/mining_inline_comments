{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTkzNzIw", "number": 257, "title": "FM2-251: Add support for overriding default narratives", "bodyText": "Description of what I changed\n\n\nAdded support for overriding default narratives, with the narrative override property file location to be stored as the global property narrativesOverridePropertyFile.\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-251\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\n\n\n All new and existing tests passed.\n\n\n My pull request is based on the latest changes of the master branch.", "createdAt": "2020-07-15T16:26:54Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257", "merged": true, "mergeCommit": {"oid": "379d54110918268ac70ca25701ae48aa9bcdb799"}, "closed": true, "closedAt": "2020-07-20T13:53:39Z", "author": {"login": "ShivanshRakesh"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1NX6OgBqjM1NDkzNDQxOTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2x_FpgFqTQ1MTYyNTY5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d4d56a21c5f979cc3815e776e9ecaa730a12f14", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9d4d56a21c5f979cc3815e776e9ecaa730a12f14", "committedDate": "2020-07-11T17:41:33Z", "message": "maintaining coverage"}, "afterCommit": {"oid": "5d7e5cbf551cae214fdfe3e21eaa8180ef856e1f", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5d7e5cbf551cae214fdfe3e21eaa8180ef856e1f", "committedDate": "2020-07-15T16:06:02Z", "message": "FM2-251: Add support for overriding default narratives"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTI1NzI1", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#pullrequestreview-449125725", "createdAt": "2020-07-15T16:38:00Z", "commit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozODowMFrOGyGMsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo0MDozMFrOGyGSqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4MzUzOQ==", "bodyText": "It now adds the file: prefix if there is no prefix in the path, since the loadResource() method requires either classpath: or file: prefix.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455183539", "createdAt": "2020-07-15T16:38:00Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);\n+\t\n+\tprivate static boolean validatePropertiesFilePath(@NotNull String path) {\n+\t\t\n+\t\tif (path.startsWith(\"file:\")) {\n+\t\t\tString filepath = path.substring(\"file:\".length());\n+\t\t\t\n+\t\t\tif (filepath == null || filepath.trim().isEmpty()) {\n+\t\t\t\tLOGGER.error(\"Properties File path must not be empty\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\t\n+\t\t\tif (!filepath.endsWith(\".properties\")) {\n+\t\t\t\tLOGGER.error(\"Properties File must have extension '.properties'\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t} else if (path.startsWith(\"classpath:\")) {\n+\t\t\tString classpath = path.substring(\"classpath:\".length());\n+\t\t\t\n+\t\t\tif (classpath == null || classpath.trim().isEmpty()) {\n+\t\t\t\tLOGGER.error(\"Properties File classpath must not be empty\");\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\treturn true;\n+\t}\n+\t\n+\tpublic static String getValidatedPropertiesFilePath(String path) {\n+\t\tif (path == null || path.isEmpty()) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t\n+\t\tif (!(path.startsWith(\"file:\") || path.startsWith(\"classpath:\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4NDA0Mg==", "bodyText": "I've added few checks for the properties file.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455184042", "createdAt": "2020-07-15T16:38:46Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);\n+\t\n+\tprivate static boolean validatePropertiesFilePath(@NotNull String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4NTA2NQ==", "bodyText": "I've restructured this the way suggested here.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455185065", "createdAt": "2020-07-15T16:40:30Z", "author": {"login": "ShivanshRakesh"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/servlet/FhirRestServlet.java", "diffHunk": "@@ -62,8 +63,19 @@ protected void initialize() {\n \t\tsetDefaultResponseEncoding(EncodingEnum.JSON);\n \t\tregisterInterceptor(loggingInterceptor);\n \t\t\n-\t\tgetFhirContext().setNarrativeGenerator(new CustomThymeleafNarrativeGenerator(\n-\t\t        FhirConstants.HAPI_NARRATIVES_PROPERTY_FILE, FhirConstants.OPENMRS_NARRATIVES_PROPERTY_FILE));\n+\t\tString narrativesOverridePropertyFile = NarrativeUtils.getValidatedPropertiesFilePath(\n+\t\t    globalPropertyService.getGlobalProperty(FhirConstants.NARRATIVES_OVERRIDE_PROPERTY_FILE, \"\"));\n+\t\t\n+\t\tString[] narrativePropertiesFiles;\n+\t\tif (narrativesOverridePropertyFile != null) {\n+\t\t\tnarrativePropertiesFiles = new String[] { narrativesOverridePropertyFile,\n+\t\t\t        FhirConstants.HAPI_NARRATIVES_PROPERTY_FILE, FhirConstants.OPENMRS_NARRATIVES_PROPERTY_FILE };\n+\t\t} else {\n+\t\t\tnarrativePropertiesFiles = new String[] { FhirConstants.HAPI_NARRATIVES_PROPERTY_FILE,\n+\t\t\t        FhirConstants.OPENMRS_NARRATIVES_PROPERTY_FILE };\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d7e5cbf551cae214fdfe3e21eaa8180ef856e1f", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5d7e5cbf551cae214fdfe3e21eaa8180ef856e1f", "committedDate": "2020-07-15T16:06:02Z", "message": "FM2-251: Add support for overriding default narratives"}, "afterCommit": {"oid": "c47e916e9f807860a35fb1096ea890f9de9afc7a", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/c47e916e9f807860a35fb1096ea890f9de9afc7a", "committedDate": "2020-07-15T16:09:28Z", "message": "FM2-251: Add support for overriding default narratives"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47854d3b7a33f0ca8ae2ba23e1bb90e0a68d3b27", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/47854d3b7a33f0ca8ae2ba23e1bb90e0a68d3b27", "committedDate": "2020-07-15T16:22:28Z", "message": "FM2-251: Add support for overriding default narratives"}, "afterCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d695ba3c99b26d1afab6d65c69821a106fd3154a", "committedDate": "2020-07-15T16:23:39Z", "message": "FM2-251: Add support for overriding default narratives"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NTMxMjY5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#pullrequestreview-449531269", "createdAt": "2020-07-16T06:09:17Z", "commit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjowOToxN1rOGybZTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjowOToxN1rOGybZTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMDgzMA==", "bodyText": "You could use shouldReturnNullWhenClassPathIsEmpty as the name of that method", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455530830", "createdAt": "2020-07-16T06:09:17Z", "author": {"login": "HerbertYiga"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/web/util/NarrativeUtilTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+import org.junit.Test;\n+\n+public class NarrativeUtilTest {\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenPathIsNull() {\n+\t\tString propFilePathGiven = null;\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, nullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenFilePathIsEmpty() {\n+\t\tString propFilePathGiven = \"file:\";\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, nullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenDoesNotEndWithProperties() {\n+\t\tString propFilePathGiven = \"file:somepath/which/does/not/end/with/properties/extension\";\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, nullValue());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnFilePrefixedPathIfPrefixNotPresent() {\n+\t\tString propFilePathGiven = \"somepath/which/does/not/have/file/prefix/filename.properties\";\n+\t\t\n+\t\tString propFilePathResult = NarrativeUtils.getValidatedPropertiesFilePath(propFilePathGiven);\n+\t\t\n+\t\tassertThat(propFilePathResult, equalTo(String.join(\":\", \"file\", propFilePathGiven)));\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnNullWhenClasspathIsEmpty() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NTMyMTAz", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#pullrequestreview-449532103", "createdAt": "2020-07-16T06:11:31Z", "commit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMTozMVrOGybcTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMTozMVrOGybcTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTU5OA==", "bodyText": "how do you see if we used logger instead of LOGGER", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455531598", "createdAt": "2020-07-16T06:11:31Z", "author": {"login": "HerbertYiga"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NTMyOTQ5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#pullrequestreview-449532949", "createdAt": "2020-07-16T06:13:36Z", "commit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMzozNlrOGybfHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMzozNlrOGybfHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMjMxNg==", "bodyText": "hI @ibacher   How does this entire pr look to you?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#discussion_r455532316", "createdAt": "2020-07-16T06:13:36Z", "author": {"login": "HerbertYiga"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/web/util/NarrativeUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.web.util;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.slf4j.Logger;\n+\n+public class NarrativeUtils {\n+\t\n+\tprivate static final Logger LOGGER = getLogger(NarrativeUtils.class);\n+\t\n+\tprivate static boolean validatePropertiesFilePath(@NotNull String path) {\n+\t\t\n+\t\tif (path.startsWith(\"file:\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d695ba3c99b26d1afab6d65c69821a106fd3154a", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d695ba3c99b26d1afab6d65c69821a106fd3154a", "committedDate": "2020-07-15T16:23:39Z", "message": "FM2-251: Add support for overriding default narratives"}, "afterCommit": {"oid": "9e347d019dc1b5752095dcc95040d7e7d72ea150", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9e347d019dc1b5752095dcc95040d7e7d72ea150", "committedDate": "2020-07-16T07:58:53Z", "message": "FM2-251: Add support for overriding default narratives"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e347d019dc1b5752095dcc95040d7e7d72ea150", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9e347d019dc1b5752095dcc95040d7e7d72ea150", "committedDate": "2020-07-16T07:58:53Z", "message": "FM2-251: Add support for overriding default narratives"}, "afterCommit": {"oid": "d871c06a4a11622bd8b55bdc2b7202ac89730ff4", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d871c06a4a11622bd8b55bdc2b7202ac89730ff4", "committedDate": "2020-07-16T08:48:18Z", "message": "FM2-251: Add support for overriding default narratives"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d871c06a4a11622bd8b55bdc2b7202ac89730ff4", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d871c06a4a11622bd8b55bdc2b7202ac89730ff4", "committedDate": "2020-07-16T08:48:18Z", "message": "FM2-251: Add support for overriding default narratives"}, "afterCommit": {"oid": "6556f5b6f4bed258cc84b6e4798fd5f6f0e8e805", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/6556f5b6f4bed258cc84b6e4798fd5f6f0e8e805", "committedDate": "2020-07-17T20:49:02Z", "message": "FM2-251: Add support for overriding default narratives"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77d7cbe85dd8246242482935897d0401d6ce0403", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/77d7cbe85dd8246242482935897d0401d6ce0403", "committedDate": "2020-07-17T20:57:58Z", "message": "FM2-251: Add support for overriding default narratives"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6556f5b6f4bed258cc84b6e4798fd5f6f0e8e805", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/6556f5b6f4bed258cc84b6e4798fd5f6f0e8e805", "committedDate": "2020-07-17T20:49:02Z", "message": "FM2-251: Add support for overriding default narratives"}, "afterCommit": {"oid": "77d7cbe85dd8246242482935897d0401d6ce0403", "author": {"user": {"login": "ShivanshRakesh", "name": "Shivansh Rakesh"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/77d7cbe85dd8246242482935897d0401d6ce0403", "committedDate": "2020-07-17T20:57:58Z", "message": "FM2-251: Add support for overriding default narratives"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjI1Njkx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/257#pullrequestreview-451625691", "createdAt": "2020-07-20T13:52:15Z", "commit": {"oid": "77d7cbe85dd8246242482935897d0401d6ce0403"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4160, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}