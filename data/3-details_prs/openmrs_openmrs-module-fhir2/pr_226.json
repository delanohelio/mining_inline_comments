{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MTY5MDQw", "number": 226, "title": "FM2-220: Add create, update and delete for Patient", "bodyText": "link:https://issues.openmrs.org/browse/FM2-220", "createdAt": "2020-06-22T20:46:46Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226", "merged": true, "mergeCommit": {"oid": "75c39136dad528485746910745416fd6fb6469ea"}, "closed": true, "closedAt": "2020-07-20T13:52:51Z", "author": {"login": "gitcliff"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuuhbwgFqTQzNzQ3Nzk0Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc14UJ7AFqTQ1MDg3OTU5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NDc3OTQy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-437477942", "createdAt": "2020-06-25T13:11:22Z", "commit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoxMToyMlrOGo5_Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoxNzo1OFrOGo6Pzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0NjI4Nw==", "bodyText": "Change to R4 OperationOutcome", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445546287", "createdAt": "2020-06-25T13:11:22Z", "author": {"login": "corneliouzbett"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProvider.java", "diffHunk": "@@ -13,26 +13,36 @@\n \n import java.util.List;\n \n+import ca.uhn.fhir.rest.annotation.Create;\n+import ca.uhn.fhir.rest.annotation.Delete;\n import ca.uhn.fhir.rest.annotation.History;\n import ca.uhn.fhir.rest.annotation.IdParam;\n import ca.uhn.fhir.rest.annotation.OptionalParam;\n import ca.uhn.fhir.rest.annotation.Read;\n+import ca.uhn.fhir.rest.annotation.ResourceParam;\n import ca.uhn.fhir.rest.annotation.Search;\n import ca.uhn.fhir.rest.annotation.Sort;\n+import ca.uhn.fhir.rest.annotation.Update;\n+import ca.uhn.fhir.rest.api.MethodOutcome;\n import ca.uhn.fhir.rest.api.SortSpec;\n import ca.uhn.fhir.rest.api.server.IBundleProvider;\n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.StringAndListParam;\n import ca.uhn.fhir.rest.param.TokenAndListParam;\n import ca.uhn.fhir.rest.server.IResourceProvider;\n+import ca.uhn.fhir.rest.server.exceptions.InvalidRequestException;\n import ca.uhn.fhir.rest.server.exceptions.ResourceNotFoundException;\n import lombok.AccessLevel;\n import lombok.Setter;\n+\n+import org.hl7.fhir.convertors.conv30_40.Patient30_40;\n+import org.hl7.fhir.dstu3.model.OperationOutcome;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0Nzc5OQ==", "bodyText": "remove unnecessary spaces", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445547799", "createdAt": "2020-06-25T13:13:50Z", "author": {"login": "corneliouzbett"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,67 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), wrongPatient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() {\n+\t\tPatient newPatient = new Patient();\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(newPatient );\n+\n+\t\torg.hl7.fhir.dstu3.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getId(), equalTo(PATIENT_UUID));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\torg.hl7.fhir.dstu3.model.OperationOutcome patient = resourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());\n+\t}\n+\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.createPatient(patient);\n+\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\n+\t\n+\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDAyMQ==", "bodyText": "import org.hl7.fhir.r4.model.OperationOutcome;", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445550021", "createdAt": "2020-06-25T13:17:10Z", "author": {"login": "corneliouzbett"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -34,7 +37,10 @@\n import ca.uhn.fhir.rest.param.TokenAndListParam;\n import lombok.AccessLevel;\n import lombok.Getter;\n+\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.time.DateUtils;\n+import org.hl7.fhir.dstu3.model.OperationOutcome;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDU0Mg==", "bodyText": "Add newline at the of file", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r445550542", "createdAt": "2020-06-25T13:17:58Z", "author": {"login": "corneliouzbett"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithWrongId.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-996e-4388-8f6f-34757ae2a3fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3af53f814b10c7e69fb59edb69e9ab09a931d5bd", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/3af53f814b10c7e69fb59edb69e9ab09a931d5bd", "committedDate": "2020-06-22T20:40:55Z", "message": "FM2-220:Add create,update and delete for Patient"}, "afterCommit": {"oid": "9d66bdcba4cefe1f815628b6c495a4d0073b0726", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9d66bdcba4cefe1f815628b6c495a4d0073b0726", "committedDate": "2020-06-25T20:16:06Z", "message": "FM2-220:Add create,update and delete for Patient"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d66bdcba4cefe1f815628b6c495a4d0073b0726", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9d66bdcba4cefe1f815628b6c495a4d0073b0726", "committedDate": "2020-06-25T20:16:06Z", "message": "FM2-220:Add create,update and delete for Patient"}, "afterCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9525f730ac3c698248e26c36d07bf3cefe32f2e0", "committedDate": "2020-06-26T11:08:28Z", "message": "FM2-220:Add create,update and delete for Patient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MzEyMTU2", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-438312156", "createdAt": "2020-06-26T13:50:36Z", "commit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1MDozNlrOGphqrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1MTowM1rOGphrpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE5NjM5OA==", "bodyText": "Suggested change", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446196398", "createdAt": "2020-06-26T13:50:36Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithoutId.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+} \n+\n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE5NjY0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            }  \n          \n          \n            \n            }", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446196647", "createdAt": "2020-06-26T13:51:03Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-776e-4388-8f6f-84357ae2a8fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjkyMzQx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-438692341", "createdAt": "2020-06-27T11:49:14Z", "commit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo0OToxNFrOGp1OMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTo1MTo0OFrOGp1PLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjc4Nw==", "bodyText": "ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516787", "createdAt": "2020-06-27T11:49:14Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PatientFhirResourceProvider.java", "diffHunk": "@@ -57,6 +61,37 @@ public Patient getPatientById(@IdParam @NotNull IdType id) {\n \t\treturn Patient30_40.convertPatient(patient);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPatient(@ResourceParam Patient patient) {\n+\t\treturn FhirProviderUtils.buildCreate(patientService.create(Patient30_40.convertPatient(patient)));\n+\t} \n+\t\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePatient(@IdParam IdType id, @ResourceParam Patient patient) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tpatient.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(patientService.update(id.getIdPart(),\n+\t\t    Patient30_40.convertPatient(patient)));\n+\t}\n+\t\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic org.hl7.fhir.r4.model.OperationOutcome deletePatient(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());\n+\t\tif (patient == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find patient to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(id.getIdPart());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjgzMg==", "bodyText": "ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516832", "createdAt": "2020-06-27T11:49:27Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProvider.java", "diffHunk": "@@ -60,6 +70,37 @@ public Patient getPatientById(@IdParam @NotNull IdType id) {\n \t\treturn patient;\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPatient(@ResourceParam Patient patient) {\n+\t\treturn FhirProviderUtils.buildCreate(patientService.create(patient));\n+\t} \n+\t\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePatient(@IdParam IdType id, @ResourceParam Patient patient) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tpatient.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(patientService.update(id.getIdPart(),patient));\n+\t}\n+\t\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePatient(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());\n+\t\tif (patient == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find patient to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\tOperationOutcome retVal = new OperationOutcome();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjg2OQ==", "bodyText": "updatePatient_shouldUpdateRequestedPatient", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516869", "createdAt": "2020-06-27T11:49:54Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjkzNA==", "bodyText": "why do we need a new patient here ?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516934", "createdAt": "2020-06-27T11:50:27Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjk3NA==", "bodyText": "it make more sense if you use the same patient.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516974", "createdAt": "2020-06-27T11:51:03Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNjk5MA==", "bodyText": "not needed.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446516990", "createdAt": "2020-06-27T11:51:13Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), wrongPatient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() {\n+\t\tPatient newPatient = new Patient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNzAxMA==", "bodyText": "deletePatient_shouldDeleteRequestedPatient", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446517010", "createdAt": "2020-06-27T11:51:33Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), wrongPatient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNzAzNw==", "bodyText": "ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r446517037", "createdAt": "2020-06-27T11:51:48Z", "author": {"login": "Akayeshmantha"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -376,4 +381,62 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdatePatient() {\n+\t\tPatient newPatient = patient;\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(newPatient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(newPatient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tPatient wrongPatient = new Patient();\n+\n+\t\twrongPatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, wrongPatient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), wrongPatient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() {\n+\t\tPatient newPatient = new Patient();\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(newPatient );\n+\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getId(), equalTo(PATIENT_UUID));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\torg.hl7.fhir.r4.model.OperationOutcome patient = resourceProvider.deletePatient(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0"}, "originalPosition": 69}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9525f730ac3c698248e26c36d07bf3cefe32f2e0", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9525f730ac3c698248e26c36d07bf3cefe32f2e0", "committedDate": "2020-06-26T11:08:28Z", "message": "FM2-220:Add create,update and delete for Patient"}, "afterCommit": {"oid": "f4bc38f80138223d1c723b31a73669c3e4dbffe3", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f4bc38f80138223d1c723b31a73669c3e4dbffe3", "committedDate": "2020-07-01T18:59:53Z", "message": "FM2-220:Add create,update and delete for Patient"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4bc38f80138223d1c723b31a73669c3e4dbffe3", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/f4bc38f80138223d1c723b31a73669c3e4dbffe3", "committedDate": "2020-07-01T18:59:53Z", "message": "FM2-220:Add create,update and delete for Patient"}, "afterCommit": {"oid": "951fb21df82f98be0464ce5114d2ba0ddbe55b08", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/951fb21df82f98be0464ce5114d2ba0ddbe55b08", "committedDate": "2020-07-01T19:13:05Z", "message": "FM2-220:Add create,update and delete for Patient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MjQxMjY5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-447241269", "createdAt": "2020-07-13T13:18:40Z", "commit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxODo0MFrOGwoIPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxODo0MFrOGwoIPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MjMwMQ==", "bodyText": "Please rewrite as FhirProviderUtils.buildDelete(Patient30_40.convertPatient(patient))", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453642301", "createdAt": "2020-07-13T13:18:40Z", "author": {"login": "varung-31"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PatientFhirResourceProvider.java", "diffHunk": "@@ -62,6 +72,34 @@ public Patient getPatientById(@IdParam @NotNull IdType id) {\n \t\treturn Patient30_40.convertPatient(patient);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPatient(@ResourceParam Patient patient) {\n+\t\treturn FhirProviderUtils.buildCreate(patientService.create(Patient30_40.convertPatient(patient)));\n+\t} \n+\t\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePatient(@IdParam IdType id, @ResourceParam Patient patient) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tpatient.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(patientService.update(id.getIdPart(),\n+\t\t    Patient30_40.convertPatient(patient)));\n+\t}\n+\t\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePatient(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());\n+\t\tif (patient == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find patient to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\treturn OperationOutcome30_40.convertOperationOutcome(FhirProviderUtils.buildDelete(patient));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MjQyMDMw", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-447242030", "createdAt": "2020-07-13T13:19:37Z", "commit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxOTozN1rOGwoKuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxOTozN1rOGwoKuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MjkzOQ==", "bodyText": "Typo in MissMatch, should be Mismatch instead", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453642939", "createdAt": "2020-07-13T13:19:37Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +566,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = post(\"/Patient\").jsonContent(jsonPatient)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateExistingPatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.update(anyString(), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldErrorForNoId() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldErrorForIdMissMatch() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MjQyNTAy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-447242502", "createdAt": "2020-07-13T13:20:09Z", "commit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMDowOVrOGwoMQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyMDowOVrOGwoMQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MzMzMA==", "bodyText": "Please remove extra spaces throughout the PR.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453643330", "createdAt": "2020-07-13T13:20:09Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "diffHunk": "@@ -0,0 +1,16 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-776e-4388-8f6f-84357ae2a8fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+  \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MjQxMzgz", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-447241383", "createdAt": "2020-07-13T13:18:48Z", "commit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxODo0OFrOGwoIlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoyNDoxN1rOGwoW_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MjM5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn OperationOutcome30_40.convertOperationOutcome(FhirProviderUtils.buildDelete(patient));\n          \n          \n            \n            \t\treturn FhirProviderUtils.buildDelete(Patient30_40.convertPatient(patient));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453642390", "createdAt": "2020-07-13T13:18:48Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r3/PatientFhirResourceProvider.java", "diffHunk": "@@ -62,6 +72,34 @@ public Patient getPatientById(@IdParam @NotNull IdType id) {\n \t\treturn Patient30_40.convertPatient(patient);\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPatient(@ResourceParam Patient patient) {\n+\t\treturn FhirProviderUtils.buildCreate(patientService.create(Patient30_40.convertPatient(patient)));\n+\t} \n+\t\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePatient(@IdParam IdType id, @ResourceParam Patient patient) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tpatient.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(patientService.update(id.getIdPart(),\n+\t\t    Patient30_40.convertPatient(patient)));\n+\t}\n+\t\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePatient(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());\n+\t\tif (patient == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find patient to delete with id \" + id.getIdPart());\n+\t\t}\n+\t\treturn OperationOutcome30_40.convertOperationOutcome(FhirProviderUtils.buildDelete(patient));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0Mjc5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());\n          \n          \n            \n            \t\tPatient patient = patientService.delete(id.getIdPart());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453642796", "createdAt": "2020-07-13T13:19:25Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProvider.java", "diffHunk": "@@ -60,6 +69,34 @@ public Patient getPatientById(@IdParam @NotNull IdType id) {\n \t\treturn patient;\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createPatient(@ResourceParam Patient patient) {\n+\t\treturn FhirProviderUtils.buildCreate(patientService.create(patient));\n+\t} \n+\t\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updatePatient(@IdParam IdType id, @ResourceParam Patient patient) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tpatient.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(patientService.update(id.getIdPart(),patient));\n+\t}\n+\t\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deletePatient(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.Patient patient = patientService.delete(id.getIdPart());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MzA1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n          \n          \n            \n            \t\tassertThat(result, notNullValue());\n          \n          \n            \n            \t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t\tassertThat(result, notNullValue());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453643050", "createdAt": "2020-07-13T13:19:47Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -415,4 +423,70 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MzIwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n          \n          \n            \n            \n          \n          \n            \n            \t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n          \n          \n            \n            \t\tassertThat(result, notNullValue());\n          \n          \n            \n            \t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n          \n          \n            \n            \n          \n          \n            \n            \t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t\tassertThat(result, notNullValue());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453643208", "createdAt": "2020-07-13T13:20:00Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -415,4 +423,70 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MzgxNA==", "bodyText": "We don't need an assertion when we have an expected exception.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tid.setValue(WRONG_PATIENT_UUID);\n          \n          \n            \n            \t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n          \n          \n            \n            \t\tassertThat(patient, nullValue());\n          \n          \n            \n            \t}\n          \n          \n            \n            \t\tid.setValue(WRONG_PATIENT_UUID);\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n          \n          \n            \n            \t}", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453643814", "createdAt": "2020-07-13T13:20:50Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -415,4 +423,70 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssue(), notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NDA3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(patientService.delete(WRONG_PATIENT_UUID)).thenReturn(null);\n          \n          \n            \n            \t\tpatientFhirResourceProvider.deletePatient(new IdType().setValue(WRONG_PATIENT_UUID));\n          \n          \n            \n            \t\twhen(patientService.delete(WRONG_PATIENT_UUID)).thenReturn(null);\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t\tpatientFhirResourceProvider.deletePatient(new IdType().setValue(WRONG_PATIENT_UUID));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453644074", "createdAt": "2020-07-13T13:21:13Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -415,4 +423,70 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssue(), notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundExceptionWhenIdRefersToNonExistantPatient() {\n+\t\twhen(patientService.delete(WRONG_PATIENT_UUID)).thenReturn(null);\n+\t\tpatientFhirResourceProvider.deletePatient(new IdType().setValue(WRONG_PATIENT_UUID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NDQwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tMethodOutcome result = patientFhirResourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID),\n          \n          \n            \n            \t\t\t\tPatient30_40.convertPatient(patient));\n          \n          \n            \n            \t\tassertThat(result, notNullValue());\n          \n          \n            \n            \t\tMethodOutcome result = patientFhirResourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID),\n          \n          \n            \n            \t\t\t\tPatient30_40.convertPatient(patient));\n          \n          \n            \n            \t\t\t\t\n          \n          \n            \n            \t\tassertThat(result, notNullValue());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453644404", "createdAt": "2020-07-13T13:21:43Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -415,4 +423,70 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssue(), notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundExceptionWhenIdRefersToNonExistantPatient() {\n+\t\twhen(patientService.delete(WRONG_PATIENT_UUID)).thenReturn(null);\n+\t\tpatientFhirResourceProvider.deletePatient(new IdType().setValue(WRONG_PATIENT_UUID));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateRequestedPatient() {\n+\t\twhen(patientService.update(eq(PATIENT_UUID), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID),\n+\t\t\t\tPatient30_40.convertPatient(patient));\n+\t\tassertThat(result, notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NDc3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n          \n          \n            \n            \n          \n          \n            \n            \t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n          \n          \n            \n            \t\t\n          \n          \n            \n                assertThat(result, notNullValue());\n          \n          \n            \n            \twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n          \n          \n            \n            \n          \n          \n            \n            \tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n          \n          \n            \n            \t\t\n          \n          \n            \n            \tassertThat(result, notNullValue());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453644770", "createdAt": "2020-07-13T13:22:16Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -409,11 +416,69 @@ public void getPatientResourceHistory_shouldReturnProvenanceResources() {\n \tpublic void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException() {\n \t\tIdType idType = new IdType();\n \t\tidType.setValue(WRONG_PATIENT_UUID);\n-\t\tassertThat(resourceProvider.getPatientResourceHistory(idType).isEmpty(), is(true));\n+\t\t\n+    assertThat(resourceProvider.getPatientResourceHistory(idType).isEmpty(), is(true));\n \t\tassertThat(resourceProvider.getPatientResourceHistory(idType).size(), equalTo(0));\n \t}\n \t\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateRequestedPatient() {\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\t\n+    assertThat(result, notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NDkwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n          \n          \n            \n            \t\tassertThat(result, notNullValue());\n          \n          \n            \n            \t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t\tassertThat(result, notNullValue());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453644906", "createdAt": "2020-07-13T13:22:29Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -409,11 +416,69 @@ public void getPatientResourceHistory_shouldReturnProvenanceResources() {\n \tpublic void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException() {\n \t\tIdType idType = new IdType();\n \t\tidType.setValue(WRONG_PATIENT_UUID);\n-\t\tassertThat(resourceProvider.getPatientResourceHistory(idType).isEmpty(), is(true));\n+\t\t\n+    assertThat(resourceProvider.getPatientResourceHistory(idType).isEmpty(), is(true));\n \t\tassertThat(resourceProvider.getPatientResourceHistory(idType).size(), equalTo(0));\n \t}\n \t\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateRequestedPatient() {\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\t\n+    assertThat(result, notNullValue());\n+\t\tassertThat(result.getResource(), equalTo(patient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tpatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NTM2Ng==", "bodyText": "Suggested change", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453645366", "createdAt": "2020-07-13T13:23:12Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithoutId.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+  \n+  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NTcyNg==", "bodyText": "Suggested change", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453645726", "createdAt": "2020-07-13T13:23:47Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+  \n+  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NTg0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            }  \n          \n          \n            \n            }", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453645846", "createdAt": "2020-07-13T13:23:58Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+  \n+  \n+}  \n+\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NjA3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \n          \n          \n            \n            \n          \n          \n            \n            }  \n          \n          \n            \n            }", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r453646078", "createdAt": "2020-07-13T13:24:17Z", "author": {"login": "ibacher"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "diffHunk": "@@ -0,0 +1,16 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-776e-4388-8f6f-84357ae2a8fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+  \n+\n+}  \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "04add8776b710c139324b8f43bfefe2664c075f8", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/04add8776b710c139324b8f43bfefe2664c075f8", "committedDate": "2020-07-13T13:16:19Z", "message": "Merge branch 'master' into FM2-220"}, "afterCommit": {"oid": "4fdbb7ccc9ceb198bc3e9873095c9f978b46a7c0", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/4fdbb7ccc9ceb198bc3e9873095c9f978b46a7c0", "committedDate": "2020-07-14T18:43:57Z", "message": "FM2-220:Fixing formattings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4OTUwOTk2", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-448950996", "createdAt": "2020-07-15T13:26:50Z", "commit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyNjo1MVrOGx-CQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0Mjo0N1rOGx-ujg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA0OTc5NQ==", "bodyText": "Please remove this test. The test below achieves exactly the same purpose.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455049795", "createdAt": "2020-07-15T13:26:51Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r3/PatientFhirR3ResourceProviderTest.java", "diffHunk": "@@ -412,7 +425,78 @@ public void getPatientResourceHistory_shouldReturnProvenanceResources() {\n \tpublic void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException() {\n \t\tIdType idType = new IdType();\n \t\tidType.setValue(WRONG_PATIENT_UUID);\n+\t\t\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).isEmpty(), is(true));\n \t\tassertThat(patientFhirResourceProvider.getPatientHistoryById(idType).size(), equalTo(0));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreateNewPatient() {\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMethodOutcome result = patientFhirResourceProvider.createPatient(Patient30_40.convertPatient(patient));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getCreated(), is(true));\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(patient));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\tOperationOutcome result = patientFhirResourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssue(), notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\t\n+\t\tOperationOutcome patient = patientFhirResourceProvider.deletePatient(id);\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA1OTEyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n          \n          \n            \n            \t\tOperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455059129", "createdAt": "2020-07-15T13:40:00Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -416,4 +422,60 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateRequestedPatient() {\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(patient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tpatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDE2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tIdType id = new IdType();\n          \n          \n            \n            \t\tid.setValue(WRONG_PATIENT_UUID);\n          \n          \n            \n            \t\torg.hl7.fhir.r4.model.OperationOutcome patient = resourceProvider.deletePatient(id);\n          \n          \n            \n            \t\tassertThat(patient, nullValue());\n          \n          \n            \n            \t\twhen(patientService.delete(WRONG_PATIENT_UUID)).thenReturn(null);\n          \n          \n            \n            \n          \n          \n            \n            \t\tpatientFhirResourceProvider.deletePatient(new IdType().setValue(WRONG_PATIENT_UUID));", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455060160", "createdAt": "2020-07-15T13:41:23Z", "author": {"login": "varung-31"}, "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderTest.java", "diffHunk": "@@ -416,4 +422,60 @@ public void getPatientHistoryByWithWrongId_shouldThrowResourceNotFoundException(\n \tprivate List<IBaseResource> getResources(IBundleProvider result) {\n \t\treturn result.getResources(0, 10);\n \t}\n+\t\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateRequestedPatient() {\n+\n+\t\twhen(patientService.update(PATIENT_UUID, patient)).thenReturn(patient);\n+\n+\t\tMethodOutcome result = resourceProvider.updatePatient(new IdType().setValue(PATIENT_UUID), patient);\n+\t\tassertThat(result, CoreMatchers.notNullValue());\n+\t\tassertThat(result.getResource(), CoreMatchers.equalTo(patient));\n+\t}\n+\n+\t@Test(expected = InvalidRequestException.class)\n+\tpublic void updatePatient_shouldThrowInvalidRequestExceptionForWrongPatientUuid() {\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(InvalidRequestException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test(expected = MethodNotAllowedException.class)\n+\tpublic void updatePatientShouldThrowMethodNotAllowedIfDoesNotExist() {\n+\t\tpatient.setId(WRONG_PATIENT_UUID);\n+\n+\t\twhen(patientService.update(WRONG_PATIENT_UUID, patient)).thenThrow(MethodNotAllowedException.class);\n+\n+\t\tresourceProvider.updatePatient(new IdType().setValue(WRONG_PATIENT_UUID), patient);\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeleteRequestedPatient() {\n+\t\twhen(patientService.delete(PATIENT_UUID)).thenReturn(patient);\n+\n+\t\torg.hl7.fhir.r4.model.OperationOutcome result = resourceProvider.deletePatient(new IdType().setValue(PATIENT_UUID));\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result.getIssueFirstRep().getSeverity(), equalTo(OperationOutcome.IssueSeverity.INFORMATION));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getCode(), equalTo(\"MSG_DELETED\"));\n+\t\tassertThat(result.getIssueFirstRep().getDetails().getCodingFirstRep().getDisplay(),\n+\t\t    equalTo(\"This resource has been deleted\"));\n+\t}\n+\n+\t@Test(expected = ResourceNotFoundException.class)\n+\tpublic void deletePatient_shouldThrowResourceNotFoundException() {\n+\t\tIdType id = new IdType();\n+\t\tid.setValue(WRONG_PATIENT_UUID);\n+\t\torg.hl7.fhir.r4.model.OperationOutcome patient = resourceProvider.deletePatient(id);\n+\t\tassertThat(patient, nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDU1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n          \n          \n            \n            \t\tPatient patient = new Patient();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455060551", "createdAt": "2020-07-15T13:41:59Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDY1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n          \n          \n            \n            \t\twhen(patientService.create(any(Patient.class))).thenReturn(patient);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455060656", "createdAt": "2020-07-15T13:42:09Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDgwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n          \n          \n            \n            \t\tPatient patient = new Patient();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455060805", "createdAt": "2020-07-15T13:42:21Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = post(\"/Patient\").jsonContent(jsonPatient)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateExistingPatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MDkwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(patientService.update(anyString(), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n          \n          \n            \n            \t\twhen(patientService.update(anyString(), any(Patient.class))).thenReturn(patient);", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455060907", "createdAt": "2020-07-15T13:42:29Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = post(\"/Patient\").jsonContent(jsonPatient)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateExistingPatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.update(anyString(), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2MTEzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n          \n          \n            \n            \t\tPatient patient = new Patient();", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455061134", "createdAt": "2020-07-15T13:42:47Z", "author": {"login": "varung-31"}, "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/PatientFhirResourceProviderWebTest.java", "diffHunk": "@@ -550,4 +567,94 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(PATIENT_UUID));\n \t}\n+\t\n+\t@Test\n+\tpublic void createPatient_shouldCreatePatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.create(any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = post(\"/Patient\").jsonContent(jsonPatient)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldUpdateExistingPatient() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();\n+\t\tpatient.setId(PATIENT_UUID);\n+\n+\t\twhen(patientService.update(anyString(), any(org.hl7.fhir.r4.model.Patient.class))).thenReturn(patient);\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldRaiseExceptionForNoId() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_PATIENT_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updatePatient_shouldRaiseExceptionOnIdMismatch() throws Exception {\n+\t\tString jsonPatient;\n+\t\ttry (InputStream is = this.getClass().getClassLoader()\n+\t\t\t\t.getResourceAsStream(JSON_UPDATE_PATIENT_WRONG_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonPatient = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/Patient/\" + BAD_PATIENT_UUID).jsonContent(jsonPatient)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element which matches the request URL\"));\n+\t}\n+\n+\t@Test\n+\tpublic void deletePatient_shouldDeletePatient() throws Exception {\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(PATIENT_UUID);\n+\t\tretVal.getText().setDivAsString(\"Deleted successfully\");\n+\n+\t\torg.hl7.fhir.r4.model.Patient patient = new org.hl7.fhir.r4.model.Patient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673"}, "originalPosition": 138}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2dbe3eb74badd7466e74971216ce223b0b362b1", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/e2dbe3eb74badd7466e74971216ce223b0b362b1", "committedDate": "2020-07-15T14:43:29Z", "message": "FM2-220:Add create,update and delete for Patient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "140b6d8241ef880e7692b08b8842c4f42f05b5e5", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/140b6d8241ef880e7692b08b8842c4f42f05b5e5", "committedDate": "2020-07-15T14:43:32Z", "message": "FM2-220:Fixing formattings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ddd1a16e094ba5d90f7d04a90b4c7551e5d2fc6", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5ddd1a16e094ba5d90f7d04a90b4c7551e5d2fc6", "committedDate": "2020-07-15T14:43:33Z", "message": "FM2-220:removing extra spaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "052614e4b593bf886c059f7201846ad092f59f7d", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/052614e4b593bf886c059f7201846ad092f59f7d", "committedDate": "2020-07-15T15:00:59Z", "message": "FM2-220:Fix formatts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "74e667eb027c068cda3c389410465b3c23eb1673", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/74e667eb027c068cda3c389410465b3c23eb1673", "committedDate": "2020-07-14T18:56:45Z", "message": "FM2-220:removing extra spaces"}, "afterCommit": {"oid": "052614e4b593bf886c059f7201846ad092f59f7d", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/052614e4b593bf886c059f7201846ad092f59f7d", "committedDate": "2020-07-15T15:00:59Z", "message": "FM2-220:Fix formatts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e519b0b8c554f0e3197bd7ba3c1f958f13a14931", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/e519b0b8c554f0e3197bd7ba3c1f958f13a14931", "committedDate": "2020-07-15T17:36:04Z", "message": "FM2-220:Fix formattings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTkzODAx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-449193801", "createdAt": "2020-07-15T17:49:04Z", "commit": {"oid": "e519b0b8c554f0e3197bd7ba3c1f958f13a14931"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OTowNFrOGyJKFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo0OTozMFrOGyJLVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMjAyMw==", "bodyText": "Please add a new line", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455232023", "createdAt": "2020-07-15T17:49:04Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithWrongId.json", "diffHunk": "@@ -0,0 +1,13 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-996e-4388-8f6f-34757ae2a3fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e519b0b8c554f0e3197bd7ba3c1f958f13a14931"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMjA4OA==", "bodyText": "Ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455232088", "createdAt": "2020-07-15T17:49:11Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_UpdateWithoutId.json", "diffHunk": "@@ -0,0 +1,12 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+} ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e519b0b8c554f0e3197bd7ba3c1f958f13a14931"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMjE4MQ==", "bodyText": "Ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455232181", "createdAt": "2020-07-15T17:49:19Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_create.json", "diffHunk": "@@ -0,0 +1,13 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"Patient\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\" \n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e519b0b8c554f0e3197bd7ba3c1f958f13a14931"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMjM0Mw==", "bodyText": "Ditto", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#discussion_r455232343", "createdAt": "2020-07-15T17:49:30Z", "author": {"login": "varung-31"}, "path": "omod/src/test/resources/org/openmrs/module/fhir2/providers/PatientWebTest_update.json", "diffHunk": "@@ -0,0 +1,13 @@\n+{\n+  \"resourceType\": \"Patient\",\n+  \"id\": \"0b42f99b-776e-4388-8f6f-84357ae2a8fb\",\n+  \"given\": \"adam\",\n+  \"family\": \"john\",\n+  \"gender\": \"male\",\n+  \"birthdate\": \"2004-08-12 00:00:00.0\",\n+  \"deathdate\": \"null\",\n+  \"deceased\": \"false\",\n+  \"state\": \"mukono\",\n+  \"city\": \"kampala\",\n+  \"country\": \"uganda\"\n+}  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e519b0b8c554f0e3197bd7ba3c1f958f13a14931"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b21b3540e62f0daae97b61545a96d7e1f3849eb7", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/b21b3540e62f0daae97b61545a96d7e1f3849eb7", "committedDate": "2020-07-15T18:35:54Z", "message": "FM2-220:Fix formattings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MjQwNDQ0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-449240444", "createdAt": "2020-07-15T18:52:23Z", "commit": {"oid": "b21b3540e62f0daae97b61545a96d7e1f3849eb7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8b02296d32941dd831ce33f08536a4a5ba6a4b1", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/c8b02296d32941dd831ce33f08536a4a5ba6a4b1", "committedDate": "2020-07-17T18:39:59Z", "message": "Update PatientWebTest_create.json"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODc5NTky", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/226#pullrequestreview-450879592", "createdAt": "2020-07-17T18:40:46Z", "commit": {"oid": "c8b02296d32941dd831ce33f08536a4a5ba6a4b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4104, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}