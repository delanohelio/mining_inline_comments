{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMDA1NjUz", "number": 152, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowNjoxNVrOD3PZAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyNzo0M1rOD3U3GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjUwNDMzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirEncounterDaoImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowNjoxNVrOGNYvLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyNjoyOFrOGNhVcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4OTk2Nw==", "bodyText": "You shouldn't need to implement this method at all.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416689967", "createdAt": "2020-04-28T15:06:15Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirEncounterDaoImpl.java", "diffHunk": "@@ -9,41 +9,31 @@\n  */\n package org.openmrs.module.fhir2.api.dao.impl;\n \n-import static org.hibernate.criterion.Restrictions.eq;\n-\n import java.util.Collection;\n \n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n import org.hibernate.Criteria;\n-import org.hibernate.SessionFactory;\n import org.openmrs.Encounter;\n import org.openmrs.module.fhir2.api.dao.FhirEncounterDao;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n-public class FhirEncounterDaoImpl extends BaseDaoImpl implements FhirEncounterDao {\n-\t\n-\t@Autowired\n-\t@Qualifier(\"sessionFactory\")\n-\tprivate SessionFactory sessionFactory;\n+public class FhirEncounterDaoImpl extends BaseFhirDaoImpl<Encounter> implements FhirEncounterDao {\n \t\n \t@Override\n-\tpublic Encounter getEncounterByUuid(String uuid) {\n-\t\treturn (Encounter) sessionFactory.getCurrentSession().createCriteria(Encounter.class).add(eq(\"uuid\", uuid))\n-\t\t        .uniqueResult();\n+\tpublic Encounter get(String uuid) {\n+\t\treturn super.get(uuid);\n \t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f606f192b9cea83100e305c8d30721d997c88e48"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NTIwMA==", "bodyText": "@ibacher  thanks for the review ,,\ni getting abit confused here why the method should be implemented since its coming from the super class being extended and its only refactoring an already existing method with a change in the method name ..\nJust requesting for some more explanation here to help me better understand ..Thanks", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416795200", "createdAt": "2020-04-28T17:30:18Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirEncounterDaoImpl.java", "diffHunk": "@@ -9,41 +9,31 @@\n  */\n package org.openmrs.module.fhir2.api.dao.impl;\n \n-import static org.hibernate.criterion.Restrictions.eq;\n-\n import java.util.Collection;\n \n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n import org.hibernate.Criteria;\n-import org.hibernate.SessionFactory;\n import org.openmrs.Encounter;\n import org.openmrs.module.fhir2.api.dao.FhirEncounterDao;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n-public class FhirEncounterDaoImpl extends BaseDaoImpl implements FhirEncounterDao {\n-\t\n-\t@Autowired\n-\t@Qualifier(\"sessionFactory\")\n-\tprivate SessionFactory sessionFactory;\n+public class FhirEncounterDaoImpl extends BaseFhirDaoImpl<Encounter> implements FhirEncounterDao {\n \t\n \t@Override\n-\tpublic Encounter getEncounterByUuid(String uuid) {\n-\t\treturn (Encounter) sessionFactory.getCurrentSession().createCriteria(Encounter.class).add(eq(\"uuid\", uuid))\n-\t\t        .uniqueResult();\n+\tpublic Encounter get(String uuid) {\n+\t\treturn super.get(uuid);\n \t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4OTk2Nw=="}, "originalCommit": {"oid": "f606f192b9cea83100e305c8d30721d997c88e48"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NjQxMQ==", "bodyText": "It doesn't need to be here at all. I think it's left in the FhirEncounterDao interface so we can include Javadoc documenting its use, but in the actual implementation, we can rely on the super class version.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416796411", "createdAt": "2020-04-28T17:32:11Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirEncounterDaoImpl.java", "diffHunk": "@@ -9,41 +9,31 @@\n  */\n package org.openmrs.module.fhir2.api.dao.impl;\n \n-import static org.hibernate.criterion.Restrictions.eq;\n-\n import java.util.Collection;\n \n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n import org.hibernate.Criteria;\n-import org.hibernate.SessionFactory;\n import org.openmrs.Encounter;\n import org.openmrs.module.fhir2.api.dao.FhirEncounterDao;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n-public class FhirEncounterDaoImpl extends BaseDaoImpl implements FhirEncounterDao {\n-\t\n-\t@Autowired\n-\t@Qualifier(\"sessionFactory\")\n-\tprivate SessionFactory sessionFactory;\n+public class FhirEncounterDaoImpl extends BaseFhirDaoImpl<Encounter> implements FhirEncounterDao {\n \t\n \t@Override\n-\tpublic Encounter getEncounterByUuid(String uuid) {\n-\t\treturn (Encounter) sessionFactory.getCurrentSession().createCriteria(Encounter.class).add(eq(\"uuid\", uuid))\n-\t\t        .uniqueResult();\n+\tpublic Encounter get(String uuid) {\n+\t\treturn super.get(uuid);\n \t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4OTk2Nw=="}, "originalCommit": {"oid": "f606f192b9cea83100e305c8d30721d997c88e48"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMDgzMw==", "bodyText": "thanks ,,have fixed it ..", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416830833", "createdAt": "2020-04-28T18:26:28Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirEncounterDaoImpl.java", "diffHunk": "@@ -9,41 +9,31 @@\n  */\n package org.openmrs.module.fhir2.api.dao.impl;\n \n-import static org.hibernate.criterion.Restrictions.eq;\n-\n import java.util.Collection;\n \n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n import org.hibernate.Criteria;\n-import org.hibernate.SessionFactory;\n import org.openmrs.Encounter;\n import org.openmrs.module.fhir2.api.dao.FhirEncounterDao;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n-public class FhirEncounterDaoImpl extends BaseDaoImpl implements FhirEncounterDao {\n-\t\n-\t@Autowired\n-\t@Qualifier(\"sessionFactory\")\n-\tprivate SessionFactory sessionFactory;\n+public class FhirEncounterDaoImpl extends BaseFhirDaoImpl<Encounter> implements FhirEncounterDao {\n \t\n \t@Override\n-\tpublic Encounter getEncounterByUuid(String uuid) {\n-\t\treturn (Encounter) sessionFactory.getCurrentSession().createCriteria(Encounter.class).add(eq(\"uuid\", uuid))\n-\t\t        .uniqueResult();\n+\tpublic Encounter get(String uuid) {\n+\t\treturn super.get(uuid);\n \t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4OTk2Nw=="}, "originalCommit": {"oid": "f606f192b9cea83100e305c8d30721d997c88e48"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjUwNzY3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirEncounterServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTowNjo1MlrOGNYxUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyNjo0OVrOGNhWYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5MDUxNQ==", "bodyText": "This shouldn't be necessary to have here at all.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416690515", "createdAt": "2020-04-28T15:06:52Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirEncounterServiceImpl.java", "diffHunk": "@@ -37,8 +39,8 @@\n \t\n \t@Override\n \t@Transactional(readOnly = true)\n-\tpublic Encounter getEncounterByUuid(String uuid) {\n-\t\treturn translator.toFhirResource(dao.getEncounterByUuid(uuid));\n+\tpublic Encounter get(String uuid) {\n+\t\treturn translator.toFhirResource(dao.get(uuid));\n \t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f606f192b9cea83100e305c8d30721d997c88e48"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMTA3NQ==", "bodyText": "thanks ,,have removed it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416831075", "createdAt": "2020-04-28T18:26:49Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirEncounterServiceImpl.java", "diffHunk": "@@ -37,8 +39,8 @@\n \t\n \t@Override\n \t@Transactional(readOnly = true)\n-\tpublic Encounter getEncounterByUuid(String uuid) {\n-\t\treturn translator.toFhirResource(dao.getEncounterByUuid(uuid));\n+\tpublic Encounter get(String uuid) {\n+\t\treturn translator.toFhirResource(dao.get(uuid));\n \t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5MDUxNQ=="}, "originalCommit": {"oid": "f606f192b9cea83100e305c8d30721d997c88e48"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjU0MjA4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirEncounterServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToxMzo1NFrOGNZHOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyNTo1MFrOGNhTpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NjEyMA==", "bodyText": "Rather than explicitly generating these fields, I would add the annotation @Getter(AccessLevel.PROTECTED) right above the annotation for @Setter at the top of the class.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416696120", "createdAt": "2020-04-28T15:13:54Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirEncounterServiceImpl.java", "diffHunk": "@@ -48,4 +50,14 @@ public Encounter getEncounterByUuid(String uuid) {\n \t\treturn dao.searchForEncounters(date, location, participant, subject).stream().map(translator::toFhirResource)\n \t\t        .collect(Collectors.toList());\n \t}\n+\t\n+\t@Override\n+\tprotected FhirDao<org.openmrs.Encounter> getDao() {\n+\t\treturn dao;\n+\t}\n+\t\n+\t@Override\n+\tprotected OpenmrsFhirTranslator<org.openmrs.Encounter, Encounter> getTranslator() {\n+\t\treturn translator;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f606f192b9cea83100e305c8d30721d997c88e48"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgwNzI5Nw==", "bodyText": "yes sure ,,,thanks", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416807297", "createdAt": "2020-04-28T17:48:58Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirEncounterServiceImpl.java", "diffHunk": "@@ -48,4 +50,14 @@ public Encounter getEncounterByUuid(String uuid) {\n \t\treturn dao.searchForEncounters(date, location, participant, subject).stream().map(translator::toFhirResource)\n \t\t        .collect(Collectors.toList());\n \t}\n+\t\n+\t@Override\n+\tprotected FhirDao<org.openmrs.Encounter> getDao() {\n+\t\treturn dao;\n+\t}\n+\t\n+\t@Override\n+\tprotected OpenmrsFhirTranslator<org.openmrs.Encounter, Encounter> getTranslator() {\n+\t\treturn translator;\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NjEyMA=="}, "originalCommit": {"oid": "f606f192b9cea83100e305c8d30721d997c88e48"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMDM3NA==", "bodyText": "have added it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416830374", "createdAt": "2020-04-28T18:25:50Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirEncounterServiceImpl.java", "diffHunk": "@@ -48,4 +50,14 @@ public Encounter getEncounterByUuid(String uuid) {\n \t\treturn dao.searchForEncounters(date, location, participant, subject).stream().map(translator::toFhirResource)\n \t\t        .collect(Collectors.toList());\n \t}\n+\t\n+\t@Override\n+\tprotected FhirDao<org.openmrs.Encounter> getDao() {\n+\t\treturn dao;\n+\t}\n+\t\n+\t@Override\n+\tprotected OpenmrsFhirTranslator<org.openmrs.Encounter, Encounter> getTranslator() {\n+\t\treturn translator;\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NjEyMA=="}, "originalCommit": {"oid": "f606f192b9cea83100e305c8d30721d997c88e48"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzQwMDA4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirEncounterServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyNzozM1rOGNhYJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOToyMDo0NFrOGNjS3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMTUyNg==", "bodyText": "Can we get rid of this comment?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416831526", "createdAt": "2020-04-28T18:27:33Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirEncounterServiceImpl.java", "diffHunk": "@@ -24,22 +20,26 @@\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n+import ca.uhn.fhir.rest.param.DateRangeParam;\n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import lombok.AccessLevel;\n+import lombok.Getter;\n+import lombok.Setter;\n+\n @Component\n @Transactional\n @Setter(AccessLevel.PACKAGE)\n-public class FhirEncounterServiceImpl implements FhirEncounterService {\n+@Getter(AccessLevel.PROTECTED)\n+public class FhirEncounterServiceImpl extends BaseFhirService<Encounter, org.openmrs.Encounter> implements FhirEncounterService {\n \t\n \t@Autowired\n \tFhirEncounterDao dao;\n \t\n \t@Autowired\n \tEncounterTranslator translator;\n \t\n-\t@Override\n-\t@Transactional(readOnly = true)\n-\tpublic Encounter getEncounterByUuid(String uuid) {\n-\t\treturn translator.toFhirResource(dao.getEncounterByUuid(uuid));\n-\t}\n+\n+\t//The get(String uuid) method which fetches the encounter by a uuid is handled in the FhirEncounterService interface ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62280a8b5f606f2f5899827d2d9763665e6a22ce"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg2Mjk0Mw==", "bodyText": "i have removed them ..thanks", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416862943", "createdAt": "2020-04-28T19:20:44Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirEncounterServiceImpl.java", "diffHunk": "@@ -24,22 +20,26 @@\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n+import ca.uhn.fhir.rest.param.DateRangeParam;\n+import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n+import lombok.AccessLevel;\n+import lombok.Getter;\n+import lombok.Setter;\n+\n @Component\n @Transactional\n @Setter(AccessLevel.PACKAGE)\n-public class FhirEncounterServiceImpl implements FhirEncounterService {\n+@Getter(AccessLevel.PROTECTED)\n+public class FhirEncounterServiceImpl extends BaseFhirService<Encounter, org.openmrs.Encounter> implements FhirEncounterService {\n \t\n \t@Autowired\n \tFhirEncounterDao dao;\n \t\n \t@Autowired\n \tEncounterTranslator translator;\n \t\n-\t@Override\n-\t@Transactional(readOnly = true)\n-\tpublic Encounter getEncounterByUuid(String uuid) {\n-\t\treturn translator.toFhirResource(dao.getEncounterByUuid(uuid));\n-\t}\n+\n+\t//The get(String uuid) method which fetches the encounter by a uuid is handled in the FhirEncounterService interface ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMTUyNg=="}, "originalCommit": {"oid": "62280a8b5f606f2f5899827d2d9763665e6a22ce"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzQwMDU3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirEncounterDaoImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyNzo0M1rOGNhYeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxOToyMTowM1rOGNjTjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMTYxMA==", "bodyText": "Can we get rid of this comment?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416831610", "createdAt": "2020-04-28T18:27:43Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirEncounterDaoImpl.java", "diffHunk": "@@ -9,41 +9,28 @@\n  */\n package org.openmrs.module.fhir2.api.dao.impl;\n \n-import static org.hibernate.criterion.Restrictions.eq;\n-\n import java.util.Collection;\n \n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n import org.hibernate.Criteria;\n-import org.hibernate.SessionFactory;\n import org.openmrs.Encounter;\n import org.openmrs.module.fhir2.api.dao.FhirEncounterDao;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n-public class FhirEncounterDaoImpl extends BaseDaoImpl implements FhirEncounterDao {\n-\t\n-\t@Autowired\n-\t@Qualifier(\"sessionFactory\")\n-\tprivate SessionFactory sessionFactory;\n+public class FhirEncounterDaoImpl extends BaseFhirDaoImpl<Encounter> implements FhirEncounterDao {\n \t\n-\t@Override\n-\tpublic Encounter getEncounterByUuid(String uuid) {\n-\t\treturn (Encounter) sessionFactory.getCurrentSession().createCriteria(Encounter.class).add(eq(\"uuid\", uuid))\n-\t\t        .uniqueResult();\n-\t}\n+\t//The get(String uuid) method which fetches the encounter by a uuid is handled in the FhirEncounterDao interface ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62280a8b5f606f2f5899827d2d9763665e6a22ce"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg2MzExNw==", "bodyText": "i have removed them,,thanks", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/152#discussion_r416863117", "createdAt": "2020-04-28T19:21:03Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirEncounterDaoImpl.java", "diffHunk": "@@ -9,41 +9,28 @@\n  */\n package org.openmrs.module.fhir2.api.dao.impl;\n \n-import static org.hibernate.criterion.Restrictions.eq;\n-\n import java.util.Collection;\n \n import ca.uhn.fhir.rest.param.DateRangeParam;\n import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n import org.hibernate.Criteria;\n-import org.hibernate.SessionFactory;\n import org.openmrs.Encounter;\n import org.openmrs.module.fhir2.api.dao.FhirEncounterDao;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n-public class FhirEncounterDaoImpl extends BaseDaoImpl implements FhirEncounterDao {\n-\t\n-\t@Autowired\n-\t@Qualifier(\"sessionFactory\")\n-\tprivate SessionFactory sessionFactory;\n+public class FhirEncounterDaoImpl extends BaseFhirDaoImpl<Encounter> implements FhirEncounterDao {\n \t\n-\t@Override\n-\tpublic Encounter getEncounterByUuid(String uuid) {\n-\t\treturn (Encounter) sessionFactory.getCurrentSession().createCriteria(Encounter.class).add(eq(\"uuid\", uuid))\n-\t\t        .uniqueResult();\n-\t}\n+\t//The get(String uuid) method which fetches the encounter by a uuid is handled in the FhirEncounterDao interface ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMTYxMA=="}, "originalCommit": {"oid": "62280a8b5f606f2f5899827d2d9763665e6a22ce"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1148, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}