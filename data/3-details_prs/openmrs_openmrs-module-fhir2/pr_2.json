{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NzkxOTMz", "number": 2, "title": "FM2-2: Implement the Task Resource", "bodyText": "Description of what I changed\n\n\nImplement a representation of the FHIR task resource for OpenMRS that's sufficient to support a test order communication workflow (https://www.hl7.org/fhir/workflow-communications.html#12.6.2.1).\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/FM2-2\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My pull request only contains ONE single commit.\nNo? -> read here on how to squash multiple commits into one\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-01-07T02:11:23Z", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2", "merged": true, "mergeCommit": {"oid": "d3ed7bd8b37bfe52a64ff3605aa025af29042d69"}, "closed": true, "closedAt": "2020-01-08T18:41:55Z", "author": {"login": "pmanko"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3-PYsgFqTMzOTE1MzU4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4Zx1kgH2gAyMzU5NzkxOTMzOmZhYjBhNDQ1NzNkMzU3OTFlODMyNDI0ZDI5ZTVmODUxYmI4ODViNmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTUzNTg1", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-339153585", "createdAt": "2020-01-07T10:31:41Z", "commit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDozMTo0MVrOFa1l_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDozMTo0MVrOFa1l_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY4NTM3NA==", "bodyText": "How about using the same license as that used in FhirTaskService?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363685374", "createdAt": "2020-01-07T10:31:41Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/module/fhir2/Task.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * The contents of this file are subject to the OpenMRS Public License\n+ * Version 1.0 (the \"License\"); you may not use this file except in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTU1MjQ1", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-339155245", "createdAt": "2020-01-07T10:34:58Z", "commit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDozNDo1OFrOFa1q3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDozNDo1OFrOFa1q3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY4NjYyMQ==", "bodyText": "Tests or Tasks?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363686621", "createdAt": "2020-01-07T10:34:58Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirTaskService.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api;\n+\n+import org.hl7.fhir.r4.model.Task;\n+\n+import org.openmrs.module.fhir2.api.dao.FhirTaskDao;\n+\n+/**\n+ * Contains methods pertaining to creating/updating/voiding Tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTU1NTQx", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-339155541", "createdAt": "2020-01-07T10:35:37Z", "commit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDozNTozN1rOFa1rqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDozNTozN1rOFa1rqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY4NjgyNg==", "bodyText": "Would be great to document the uuid param. \ud83d\ude0a", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363686826", "createdAt": "2020-01-07T10:35:37Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirTaskService.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api;\n+\n+import org.hl7.fhir.r4.model.Task;\n+\n+import org.openmrs.module.fhir2.api.dao.FhirTaskDao;\n+\n+/**\n+ * Contains methods pertaining to creating/updating/voiding Tests\n+ */\n+public interface FhirTaskService {\n+\n+\t/**\n+\t * Get task by the UUID\n+\t * \n+\t * @param uuid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTU2MTI4", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-339156128", "createdAt": "2020-01-07T10:36:44Z", "commit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDozNjo0NFrOFa1tZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDozNjo0NFrOFa1tZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY4NzI2OA==", "bodyText": "Are we using the above import?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363687268", "createdAt": "2020-01-07T10:36:44Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirTaskService.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api;\n+\n+import org.hl7.fhir.r4.model.Task;\n+\n+import org.openmrs.module.fhir2.api.dao.FhirTaskDao;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTk5MTQz", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-339199143", "createdAt": "2020-01-07T12:12:38Z", "commit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjoxMjozOFrOFa3uvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjoxMjozOFrOFa3uvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyMDM4Mw==", "bodyText": "https://wiki.openmrs.org/display/docs/Java+Conventions#JavaConventions-Donotcommentoutcode", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363720383", "createdAt": "2020-01-07T12:12:38Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/db/hibernate/HibernateTaskDAOTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.openmrs.module.fhir2.api.db.hibernate;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.Task;\n+import org.openmrs.module.fhir2.api.dao.impl.FhirTaskDaoImpl;\n+import org.openmrs.test.BaseContextSensitiveTest;\n+\n+/**\n+ * Tests the saving of orders as part of the OrderGroup\n+ */\n+public class HibernateTaskDAOTest extends BaseContextSensitiveTest {\n+\t\n+\tprivate static final String TASK_UUID = \"256ccf6d-6b41-455c-9be2-51ff4386ae76\";\n+\t\n+\tprivate static final String WRONG_IDENTIFIER_TYPE_UUID = \"123456-abcdef-123456\";\n+\t\n+\t//\tprivate static final Task.TaskStatus INITIAL_STATUS = Task.TaskStatus.REQUESTED;\n+\t//", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTk5MjQz", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-339199243", "createdAt": "2020-01-07T12:12:52Z", "commit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjoxMjo1MlrOFa3vDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjoxMjo1MlrOFa3vDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyMDQ2MQ==", "bodyText": "https://wiki.openmrs.org/display/docs/Java+Conventions#JavaConventions-Donotcommentoutcode", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363720461", "createdAt": "2020-01-07T12:12:52Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/db/hibernate/HibernateTaskDAOTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.openmrs.module.fhir2.api.db.hibernate;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.Task;\n+import org.openmrs.module.fhir2.api.dao.impl.FhirTaskDaoImpl;\n+import org.openmrs.test.BaseContextSensitiveTest;\n+\n+/**\n+ * Tests the saving of orders as part of the OrderGroup\n+ */\n+public class HibernateTaskDAOTest extends BaseContextSensitiveTest {\n+\t\n+\tprivate static final String TASK_UUID = \"256ccf6d-6b41-455c-9be2-51ff4386ae76\";\n+\t\n+\tprivate static final String WRONG_IDENTIFIER_TYPE_UUID = \"123456-abcdef-123456\";\n+\t\n+\t//\tprivate static final Task.TaskStatus INITIAL_STATUS = Task.TaskStatus.REQUESTED;\n+\t//\n+\t//\tprivate static final Task.TaskPriority INITIAL_PRIORITY = Task.TaskPriority.ROUTINE;\n+\t//\n+\t//\tprivate static final Task.TaskIntent INITIAL_INTENT = Task.TaskIntent.ORDER;\n+\t\n+\t@Inject\n+\tprivate FhirTaskDaoImpl dao;\n+\t\n+\tprivate static final String TASK_JSON = \"example-task.json\";\n+\t\n+\t@Before\n+\tpublic void setUp() {\n+\t\t//", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTk5Mjg0", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-339199284", "createdAt": "2020-01-07T12:12:58Z", "commit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjoxMjo1OFrOFa3vKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjoxMjo1OFrOFa3vKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyMDQ4OA==", "bodyText": "https://wiki.openmrs.org/display/docs/Java+Conventions#JavaConventions-Donotcommentoutcode", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363720488", "createdAt": "2020-01-07T12:12:58Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/db/hibernate/HibernateTaskDAOTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.openmrs.module.fhir2.api.db.hibernate;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.Task;\n+import org.openmrs.module.fhir2.api.dao.impl.FhirTaskDaoImpl;\n+import org.openmrs.test.BaseContextSensitiveTest;\n+\n+/**\n+ * Tests the saving of orders as part of the OrderGroup\n+ */\n+public class HibernateTaskDAOTest extends BaseContextSensitiveTest {\n+\t\n+\tprivate static final String TASK_UUID = \"256ccf6d-6b41-455c-9be2-51ff4386ae76\";\n+\t\n+\tprivate static final String WRONG_IDENTIFIER_TYPE_UUID = \"123456-abcdef-123456\";\n+\t\n+\t//\tprivate static final Task.TaskStatus INITIAL_STATUS = Task.TaskStatus.REQUESTED;\n+\t//\n+\t//\tprivate static final Task.TaskPriority INITIAL_PRIORITY = Task.TaskPriority.ROUTINE;\n+\t//\n+\t//\tprivate static final Task.TaskIntent INITIAL_INTENT = Task.TaskIntent.ORDER;\n+\t\n+\t@Inject\n+\tprivate FhirTaskDaoImpl dao;\n+\t\n+\tprivate static final String TASK_JSON = \"example-task.json\";\n+\t\n+\t@Before\n+\tpublic void setUp() {\n+\t\t//\n+\t}\n+\t\n+\t/**\n+\t * @see {@link FhirTaskDaoImpl#saveTask(Task)}\n+\t * @throws Exception\n+\t */\n+\t//\t@Test\n+\t//\tpublic void saveTask_shouldSaveTask() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTk5NTU3", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-339199557", "createdAt": "2020-01-07T12:13:38Z", "commit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjoxMzozOFrOFa3v9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjoxMzozOFrOFa3v9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyMDY5NA==", "bodyText": "Could we just remove this empty method?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363720694", "createdAt": "2020-01-07T12:13:38Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/db/hibernate/HibernateTaskDAOTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.openmrs.module.fhir2.api.db.hibernate;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.Task;\n+import org.openmrs.module.fhir2.api.dao.impl.FhirTaskDaoImpl;\n+import org.openmrs.test.BaseContextSensitiveTest;\n+\n+/**\n+ * Tests the saving of orders as part of the OrderGroup\n+ */\n+public class HibernateTaskDAOTest extends BaseContextSensitiveTest {\n+\t\n+\tprivate static final String TASK_UUID = \"256ccf6d-6b41-455c-9be2-51ff4386ae76\";\n+\t\n+\tprivate static final String WRONG_IDENTIFIER_TYPE_UUID = \"123456-abcdef-123456\";\n+\t\n+\t//\tprivate static final Task.TaskStatus INITIAL_STATUS = Task.TaskStatus.REQUESTED;\n+\t//\n+\t//\tprivate static final Task.TaskPriority INITIAL_PRIORITY = Task.TaskPriority.ROUTINE;\n+\t//\n+\t//\tprivate static final Task.TaskIntent INITIAL_INTENT = Task.TaskIntent.ORDER;\n+\t\n+\t@Inject\n+\tprivate FhirTaskDaoImpl dao;\n+\t\n+\tprivate static final String TASK_JSON = \"example-task.json\";\n+\t\n+\t@Before\n+\tpublic void setUp() {\n+\t\t//\n+\t}\n+\t\n+\t/**\n+\t * @see {@link FhirTaskDaoImpl#saveTask(Task)}\n+\t * @throws Exception\n+\t */\n+\t//\t@Test\n+\t//\tpublic void saveTask_shouldSaveTask() {\n+\t//\t\tfinal Task newTask = new Task(INITIAL_STATUS, \"\", INITIAL_INTENT, INITIAL_PRIORITY);\n+\t//\n+\t//\t\tTask savedTask = dao.saveTask(newTask);\n+\t//\t\tassertNotNull(\"Task is saved.\", savedTask.getTaskId());\n+\t//\t\tassertEquals(INITIAL_STATUS, savedTask.getStatus());\n+\t//\t}\n+\t\n+\t/**\n+\t * @see {@link FhirTaskDaoImpl#getTaskByUUID(Integer)}\n+\t * @throws Exception\n+\t */\n+\t\n+\tpublic void getTaskByUUID_shouldGetTaskByUUID() {\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTk5NjUz", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-339199653", "createdAt": "2020-01-07T12:13:56Z", "commit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjoxMzo1NlrOFa3wSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjoxMzo1NlrOFa3wSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyMDc3OQ==", "bodyText": "Implement what?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363720779", "createdAt": "2020-01-07T12:13:56Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/TaskTranslatorImplTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+\n+import static org.hamcrest.Matchers.notNullValue;\n+import static org.junit.Assert.assertThat;\n+\n+import org.hl7.fhir.r4.model.Task;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class TaskTranslatorImplTest {\n+\t// TODO: Implement!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MjUyOTIy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-339252922", "createdAt": "2020-01-07T14:02:34Z", "commit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNDowMjozNFrOFa6NEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNDoxNTowN1rOFa6iGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2MDkxNA==", "bodyText": "I would prefer if we didn't explicitly document or throw a DAOException here. We want to keep the reliance on core as minimal as possible.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363760914", "createdAt": "2020-01-07T14:02:34Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/FhirTaskDao.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.dao;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.openmrs.api.db.DAOException;\n+import org.openmrs.module.fhir2.Task;\n+\n+public interface FhirTaskDao {\n+\n+\tpublic Task saveTask(Task task) throws DAOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2MTIwNw==", "bodyText": "I know this is really picky, but we don't need this new line here.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363761207", "createdAt": "2020-01-07T14:03:12Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirTaskServiceImpl.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.openmrs.module.fhir2.api.impl;\n+\n+import javax.inject.Inject;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Task;\n+import org.openmrs.module.fhir2.api.FhirTaskService;\n+\n+import org.openmrs.module.fhir2.api.dao.FhirTaskDao;\n+import org.openmrs.module.fhir2.api.translators.TaskTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class FhirTaskServiceImpl implements FhirTaskService {\n+\t\n+\t@Inject\n+\tprivate FhirTaskDao dao;\n+\t\n+\t@Inject\n+\tprivate TaskTranslator translator;\n+\t\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2MTg1Ng==", "bodyText": "It would be nice to have some JavaDoc remarks on these two methods. See, e.g., the PatientTranslator.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363761856", "createdAt": "2020-01-07T14:04:36Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/TaskTranslator.java", "diffHunk": "@@ -0,0 +1,20 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators;\n+\n+import org.hl7.fhir.r4.model.Task;\n+\n+public interface TaskTranslator extends OpenmrsFhirTranslator<org.openmrs.module.fhir2.Task, org.hl7.fhir.r4.model.Task> {\n+\t\n+\tTask toFhirResource(org.openmrs.module.fhir2.Task openmrsTask);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2MjUzOA==", "bodyText": "This could be a one-liner, i.e., fhirTask.setId(openmrsTask.getUuid());", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363762538", "createdAt": "2020-01-07T14:06:10Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/TaskTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Enumeration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Task;\n+import org.openmrs.module.fhir2.api.translators.TaskTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class TaskTranslatorImpl implements TaskTranslator {\n+\t\n+\t@Override\n+\tpublic Task toFhirResource(org.openmrs.module.fhir2.Task openmrsTask) {\n+\t\tEnumeration<Task.TaskStatus> fhirStatus = new Enumeration(new Task.TaskStatusEnumFactory());\n+\t\tEnumeration<Task.TaskIntent> fhirIntent = new Enumeration(new Task.TaskIntentEnumFactory());\n+\t\t\n+\t\tfhirStatus.setValue(openmrsTask.getStatus());\n+\t\tfhirIntent.setValue(openmrsTask.getIntent());\n+\t\t\n+\t\tTask fhirTask = new Task(fhirStatus, fhirIntent);\n+\t\t\n+\t\tString taskUUID = openmrsTask.getUuid();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NTQzMA==", "bodyText": "These next few lines don't compile. I think the implementation for this method should be something like this:\nTask task = new Task();\n\nif (openmrsTask != null) {\n\ttask.setId(openmrsTask.getUuid());\n\ttask.setStatus(Task.TaskStatus.valueOf(openmrsTask.getStatus().name()));\n\ttask.setIntent(Task.TaskIntent.valueOf(openmrsTask.getIntent().name()));\n}\n\nreturn task;", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363765430", "createdAt": "2020-01-07T14:13:00Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/TaskTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Enumeration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Task;\n+import org.openmrs.module.fhir2.api.translators.TaskTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class TaskTranslatorImpl implements TaskTranslator {\n+\t\n+\t@Override\n+\tpublic Task toFhirResource(org.openmrs.module.fhir2.Task openmrsTask) {\n+\t\tEnumeration<Task.TaskStatus> fhirStatus = new Enumeration(new Task.TaskStatusEnumFactory());\n+\t\tEnumeration<Task.TaskIntent> fhirIntent = new Enumeration(new Task.TaskIntentEnumFactory());\n+\t\t\n+\t\tfhirStatus.setValue(openmrsTask.getStatus());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NTU3OA==", "bodyText": "Similar comments apply to this method.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363765578", "createdAt": "2020-01-07T14:13:21Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/TaskTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Enumeration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Task;\n+import org.openmrs.module.fhir2.api.translators.TaskTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class TaskTranslatorImpl implements TaskTranslator {\n+\t\n+\t@Override\n+\tpublic Task toFhirResource(org.openmrs.module.fhir2.Task openmrsTask) {\n+\t\tEnumeration<Task.TaskStatus> fhirStatus = new Enumeration(new Task.TaskStatusEnumFactory());\n+\t\tEnumeration<Task.TaskIntent> fhirIntent = new Enumeration(new Task.TaskIntentEnumFactory());\n+\t\t\n+\t\tfhirStatus.setValue(openmrsTask.getStatus());\n+\t\tfhirIntent.setValue(openmrsTask.getIntent());\n+\t\t\n+\t\tTask fhirTask = new Task(fhirStatus, fhirIntent);\n+\t\t\n+\t\tString taskUUID = openmrsTask.getUuid();\n+\t\tfhirTask.setId(taskUUID);\n+\t\t\n+\t\treturn fhirTask;\n+\t}\n+\t\n+\t@Override\n+\tpublic org.openmrs.module.fhir2.Task toOpenmrsType(Task fhirTask) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NTgxOQ==", "bodyText": "Preconditions should be inside the changeSet, before the comment.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363765819", "createdAt": "2020-01-07T14:13:54Z", "author": {"login": "ibacher"}, "path": "api/src/main/resources/liquibase.xml", "diffHunk": "@@ -12,5 +12,69 @@\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n- \n+\n+\t<preConditions onFail=\"MARK_RAN\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NjE4OA==", "bodyText": "I think this also needs an id field.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363766188", "createdAt": "2020-01-07T14:14:50Z", "author": {"login": "ibacher"}, "path": "api/src/test/resources/org/openmrs/module/fhir2/api/dao/impl/FhirTaskDaoImplTest_initial_data.xml", "diffHunk": "@@ -0,0 +1,13 @@\n+<?xml version='1.0' encoding='UTF-8'?>\n+<!--\n+    This Source Code Form is subject to the terms of the Mozilla Public License,\n+    v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+    obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+    the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+\n+    Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+    graphic logo is a trademark of OpenMRS Inc.\n+-->\n+<dataset>\n+\t<fhir_task status=\"REQUESTED\" intent=\"ORDER\" creator=\"1\" date_created=\"2012-01-01 00:00:00.0\" voided=\"false\" uuid=\"d899333c-5bd4-45cc-b1e7-2f9542dbcbf6\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NjI5Nw==", "bodyText": "Unnecessary new line", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363766297", "createdAt": "2020-01-07T14:15:07Z", "author": {"login": "ibacher"}, "path": "omod/src/main/java/org/openmrs/module/fhir2/providers/TaskFhirResourceProvider.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+  This Source Code Form is subject to the terms of the Mozilla Public License,\n+  v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+  obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+  the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+\n+  Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+  graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.providers;\n+\n+import ca.uhn.fhir.rest.annotation.Create;\n+import ca.uhn.fhir.rest.annotation.IdParam;\n+import ca.uhn.fhir.rest.annotation.Read;\n+import ca.uhn.fhir.rest.annotation.ResourceParam;\n+import ca.uhn.fhir.rest.annotation.Update;\n+import ca.uhn.fhir.rest.server.IResourceProvider;\n+import ca.uhn.fhir.rest.server.exceptions.ResourceNotFoundException;\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.IdType;\n+import org.hl7.fhir.r4.model.Task;\n+import org.openmrs.module.fhir2.api.FhirTaskService;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+@Component\n+@Qualifier(\"fhirResources\")\n+@Setter(AccessLevel.PACKAGE)\n+public class TaskFhirResourceProvider implements IResourceProvider {\n+\t\n+\t@Inject\n+\tprivate FhirTaskService service;\n+\t\n+\t@Override\n+\tpublic Class<? extends IBaseResource> getResourceType() {\n+\t\treturn Task.class;\n+\t}\n+\t\n+\t@Read\n+\tpublic Task getTaskById(@IdParam IdType id) {\n+\t\tTask task = service.getTaskByUuid(id.getIdPart());\n+\t\tif (task == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find Task with Id \" + id.getIdPart());\n+\t\t}\n+\t\treturn task;\n+\t}\n+\t\n+\t@Create\n+\tpublic Task createTask(@ResourceParam Task newTask) {\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "159bd241a8c7c53d5ba0adbae57922ac2995909c"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "855bd972ad4dc326a0baa430b4848a58776f3791", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/855bd972ad4dc326a0baa430b4848a58776f3791", "committedDate": "2020-01-08T14:49:32Z", "message": "Task Resource implementation work for FM2-2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97a39a8ca27d0be1b9e025eb034bcbaebf411809", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/97a39a8ca27d0be1b9e025eb034bcbaebf411809", "committedDate": "2020-01-08T14:35:19Z", "message": "Added tests for status and intent translation"}, "afterCommit": {"oid": "855bd972ad4dc326a0baa430b4848a58776f3791", "author": {"user": {"login": "pmanko", "name": "Piotr Mankowski"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/855bd972ad4dc326a0baa430b4848a58776f3791", "committedDate": "2020-01-08T14:49:32Z", "message": "Task Resource implementation work for FM2-2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMDM0NjUy", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#pullrequestreview-340034652", "createdAt": "2020-01-08T17:47:21Z", "commit": {"oid": "855bd972ad4dc326a0baa430b4848a58776f3791"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62581caee30dafd98f55e9a12e4c8276aa987cc1", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/62581caee30dafd98f55e9a12e4c8276aa987cc1", "committedDate": "2020-01-08T17:47:31Z", "message": "Merge branch 'master' into FM2-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fab0a44573d35791e832424d29e5f851bb885b6c", "author": {"user": {"login": "ibacher", "name": "Ian"}}, "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fab0a44573d35791e832424d29e5f851bb885b6c", "committedDate": "2020-01-08T18:36:45Z", "message": "Merge branch 'master' into FM2-2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4324, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}