{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMjUzNTQ2", "number": 60, "reviewThreads": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNDoyN1rODe9qOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDozMDowOFrODfkQ_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzk0MTA3OnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImpl_2_1.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNDoyOFrOFoZT7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDoxNjoxMlrOFowK8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMjA2MA==", "bodyText": "I don't think we actually need a custom version of the ObservationTranslator here, since the default version still calls the ObservationStatusTranslator. We just need to ensure that is properly overridden.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r377902060", "createdAt": "2020-02-11T21:14:28Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d690a49310490fd4fecbbab8209ceec64814c966"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0NjQwOQ==", "bodyText": "hey Ian, this might work with status but what about translating the interpretations and it's not part of the origin implementation with platform 2.0.5", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378046409", "createdAt": "2020-02-12T05:26:43Z", "author": {"login": "jecihjoy"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMjA2MA=="}, "originalCommit": {"oid": "d690a49310490fd4fecbbab8209ceec64814c966"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzOTgzMg==", "bodyText": "I think the solution there is to add an translator for interpretations similar to the dummy translator for observation status we have. That way, it's easy for implementors to support interpretations if they're currently capturing that information.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378239832", "createdAt": "2020-02-12T13:11:01Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMjA2MA=="}, "originalCommit": {"oid": "d690a49310490fd4fecbbab8209ceec64814c966"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3NjU5NA==", "bodyText": "That makes sense, I'll look into it", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378276594", "createdAt": "2020-02-12T14:16:12Z", "author": {"login": "jecihjoy"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMjA2MA=="}, "originalCommit": {"oid": "d690a49310490fd4fecbbab8209ceec64814c966"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzk0MjMzOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNDo1NVrOFoZUzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNDo1NVrOFoZUzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMjI4NA==", "bodyText": "Small thing, but this should go under the api-2.0 line.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r377902284", "createdAt": "2020-02-11T21:14:55Z", "author": {"login": "ibacher"}, "path": "pom.xml", "diffHunk": "@@ -38,6 +38,7 @@\n \t\t<module>api</module>\n         <module>api-2.0</module>\n \t\t<module>omod</module>\n+        <module>api-2.1</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d690a49310490fd4fecbbab8209ceec64814c966"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzk0NDA4OnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl_2_1.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNTozMVrOFoZV1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNTozMVrOFoZV1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMjU0OQ==", "bodyText": "I also don't think we need to implement this class for this change.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r377902549", "createdAt": "2020-02-11T21:15:31Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl_2_1.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d690a49310490fd4fecbbab8209ceec64814c966"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzk0NTAyOnYy", "diffSide": "RIGHT", "path": "api-2.1/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNTo0N1rOFoZWaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNTo0N1rOFoZWaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMjY5Ng==", "bodyText": "Could you remove the blank space here?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r377902696", "createdAt": "2020-02-11T21:15:47Z", "author": {"login": "ibacher"}, "path": "api-2.1/pom.xml", "diffHunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>fhir2</artifactId>\n+        <groupId>org.openmrs.module</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>fhir2-api-2.1</artifactId>\n+    <packaging>jar</packaging>\n+    <name>FHIR2 API 2.1</name>\n+    <description>API 2.1 for FHIR2</description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>${project.parent.groupId}</groupId>\n+            <artifactId>${project.parent.artifactId}-api</artifactId>\n+            <version>${project.parent.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.api</groupId>\n+            <artifactId>openmrs-api</artifactId>\n+            <version>${openmrsPlatformVersion}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.api</groupId>\n+            <artifactId>openmrs-api</artifactId>\n+            <type>test-jar</type>\n+            <version>${openmrsPlatformVersion}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.test</groupId>\n+            <artifactId>openmrs-test</artifactId>\n+            <version>${openmrsPlatformVersion}</version>\n+            <type>pom</type>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.inject</groupId>\n+            <artifactId>javax.inject</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <properties>\n+    <openmrsPlatformVersion>2.3.0</openmrsPlatformVersion>\n+    </properties>\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d690a49310490fd4fecbbab8209ceec64814c966"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzk0NTQ0OnYy", "diffSide": "RIGHT", "path": "api-2.1/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNTo1N1rOFoZWsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNTo1N1rOFoZWsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMjc2OA==", "bodyText": "Indent this 1 more tab", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r377902768", "createdAt": "2020-02-11T21:15:57Z", "author": {"login": "ibacher"}, "path": "api-2.1/pom.xml", "diffHunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>fhir2</artifactId>\n+        <groupId>org.openmrs.module</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>fhir2-api-2.1</artifactId>\n+    <packaging>jar</packaging>\n+    <name>FHIR2 API 2.1</name>\n+    <description>API 2.1 for FHIR2</description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>${project.parent.groupId}</groupId>\n+            <artifactId>${project.parent.artifactId}-api</artifactId>\n+            <version>${project.parent.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.api</groupId>\n+            <artifactId>openmrs-api</artifactId>\n+            <version>${openmrsPlatformVersion}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.api</groupId>\n+            <artifactId>openmrs-api</artifactId>\n+            <type>test-jar</type>\n+            <version>${openmrsPlatformVersion}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.test</groupId>\n+            <artifactId>openmrs-test</artifactId>\n+            <version>${openmrsPlatformVersion}</version>\n+            <type>pom</type>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.inject</groupId>\n+            <artifactId>javax.inject</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <properties>\n+    <openmrsPlatformVersion>2.3.0</openmrsPlatformVersion>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d690a49310490fd4fecbbab8209ceec64814c966"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzk0NTgzOnYy", "diffSide": "RIGHT", "path": "api-2.1/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNjoxMFrOFoZXBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNjoxMFrOFoZXBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMjg1Mw==", "bodyText": "Add an empty new line at the end of the file", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r377902853", "createdAt": "2020-02-11T21:16:10Z", "author": {"login": "ibacher"}, "path": "api-2.1/pom.xml", "diffHunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>fhir2</artifactId>\n+        <groupId>org.openmrs.module</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>fhir2-api-2.1</artifactId>\n+    <packaging>jar</packaging>\n+    <name>FHIR2 API 2.1</name>\n+    <description>API 2.1 for FHIR2</description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>${project.parent.groupId}</groupId>\n+            <artifactId>${project.parent.artifactId}-api</artifactId>\n+            <version>${project.parent.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.api</groupId>\n+            <artifactId>openmrs-api</artifactId>\n+            <version>${openmrsPlatformVersion}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.api</groupId>\n+            <artifactId>openmrs-api</artifactId>\n+            <type>test-jar</type>\n+            <version>${openmrsPlatformVersion}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.test</groupId>\n+            <artifactId>openmrs-test</artifactId>\n+            <version>${openmrsPlatformVersion}</version>\n+            <type>pom</type>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.inject</groupId>\n+            <artifactId>javax.inject</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <properties>\n+    <openmrsPlatformVersion>2.3.0</openmrsPlatformVersion>\n+    </properties>\n+\n+\n+</project>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d690a49310490fd4fecbbab8209ceec64814c966"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzk1MDI1OnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationStatusTranslatorImpl_2_1.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNzo0MlrOFoZZ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNzo0MlrOFoZZ5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMzU4OA==", "bodyText": "We don't need to do this. This implementation can simply be\nobservation.setStatus(Obs.Status.valueOf(observationStatus.toString()));\nreturn observation;", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r377903588", "createdAt": "2020-02-11T21:17:42Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationStatusTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Observation;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationStatusTranslatorImpl_2_1 extends ObservationStatusTranslatorImpl {\n+\n+    @Override\n+    public Observation.ObservationStatus toFhirResource(Obs obs) {\n+        return Observation.ObservationStatus.valueOf(obs.getStatus().toString());\n+    }\n+\n+    @Override\n+    public Obs toOpenmrsType(Obs observation, Observation.ObservationStatus observationStatus) {\n+        Obs obs = super.toOpenmrsType(observation, observationStatus);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d690a49310490fd4fecbbab8209ceec64814c966"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTczNzQyOnYy", "diffSide": "RIGHT", "path": "omod/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTowMjoxMlrOFoqWHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTowMjoxMlrOFoqWHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MTE0OA==", "bodyText": "Change the above to:\n        <dependency>\n            <groupId>${project.parent.groupId}</groupId>\n            <artifactId>${project.parent.artifactId}-api-2.1</artifactId>\n            <version>${project.parent.version}</version>\n        </dependency>", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378181148", "createdAt": "2020-02-12T11:02:12Z", "author": {"login": "corneliouzbett"}, "path": "omod/pom.xml", "diffHunk": "@@ -23,6 +23,11 @@\n \t\t\t<artifactId>${project.parent.artifactId}-api-2.0</artifactId>\n \t\t\t<version>${project.version}</version>\n \t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.openmrs.module</groupId>\n+\t\t\t<artifactId>fhir2-api-2.1</artifactId>\n+\t\t\t<version>1.0.0-SNAPSHOT</version>\n+\t\t</dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d390598daa8b27b794c79c6b93d639a37d2bba7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTc1NzE3OnYy", "diffSide": "RIGHT", "path": "api-2.1/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationStatusTranslatorImpl_2_1Test.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTowODoxOVrOFoqh6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTowODoxOVrOFoqh6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4NDE2OA==", "bodyText": "Can you add license header to this file", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378184168", "createdAt": "2020-02-12T11:08:19Z", "author": {"login": "corneliouzbett"}, "path": "api-2.1/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationStatusTranslatorImpl_2_1Test.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import org.hl7.fhir.r4.model.Observation;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.Obs;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+public class ObservationStatusTranslatorImpl_2_1Test {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d390598daa8b27b794c79c6b93d639a37d2bba7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTc2MTEwOnYy", "diffSide": "RIGHT", "path": "api-2.1/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1Test.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTowOTozNVrOFoqkTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTowOTozNVrOFoqkTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4NDc4MQ==", "bodyText": "Can you add license header to this class", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378184781", "createdAt": "2020-02-12T11:09:35Z", "author": {"login": "corneliouzbett"}, "path": "api-2.1/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1Test.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.openmrs.Obs;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.notNullValue;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class ObservationInterpretationTranslatorImpl_2_1Test {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d390598daa8b27b794c79c6b93d639a37d2bba7"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTc3NjAwOnYy", "diffSide": "RIGHT", "path": "api-2.1/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxNDoxMlrOFoqs9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxNDoxMlrOFoqs9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4Njk5OA==", "bodyText": "Do you really need this dependencies? I think this should work without them.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378186998", "createdAt": "2020-02-12T11:14:12Z", "author": {"login": "corneliouzbett"}, "path": "api-2.1/pom.xml", "diffHunk": "@@ -0,0 +1,58 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>fhir2</artifactId>\n+        <groupId>org.openmrs.module</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>fhir2-api-2.1</artifactId>\n+    <packaging>jar</packaging>\n+    <name>FHIR2 API 2.1</name>\n+    <description>API 2.1 for FHIR2</description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>${project.parent.groupId}</groupId>\n+            <artifactId>${project.parent.artifactId}-api</artifactId>\n+            <version>${project.parent.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.api</groupId>\n+            <artifactId>openmrs-api</artifactId>\n+            <version>${openmrsPlatformVersion}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.api</groupId>\n+            <artifactId>openmrs-api</artifactId>\n+            <type>test-jar</type>\n+            <version>${openmrsPlatformVersion}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.openmrs.test</groupId>\n+            <artifactId>openmrs-test</artifactId>\n+            <version>${openmrsPlatformVersion}</version>\n+            <type>pom</type>\n+            <scope>test</scope>\n+        </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d390598daa8b27b794c79c6b93d639a37d2bba7"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTc4NTAyOnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/ObservationInterpretationTranslator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxNzoxMVrOFoqyXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxNzoxMVrOFoqyXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4ODM4MQ==", "bodyText": "Add license header to this class", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378188381", "createdAt": "2020-02-12T11:17:11Z", "author": {"login": "corneliouzbett"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/ObservationInterpretationTranslator.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.openmrs.module.fhir2.api.translators;\n+\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.openmrs.Obs;\n+\n+public interface ObservationInterpretationTranslator extends ToFhirTranslator<Obs, CodeableConcept>, UpdatableOpenmrsTranslator<Obs, CodeableConcept> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d390598daa8b27b794c79c6b93d639a37d2bba7"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTc5NjkyOnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToyMToxM1rOFoq5lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjowMjozN1rOFosDYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5MDIzMQ==", "bodyText": "Remove this line (Not used)", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378190231", "createdAt": "2020-02-12T11:21:13Z", "author": {"login": "corneliouzbett"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.api.translators.ObservationInterpretationTranslator;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@Setter(AccessLevel.PACKAGE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d390598daa8b27b794c79c6b93d639a37d2bba7"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwOTEyMw==", "bodyText": "Remove this line (Not used)\n\nreferring to @Setter(AccessLevel.PACKAGE)", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378209123", "createdAt": "2020-02-12T12:02:37Z", "author": {"login": "corneliouzbett"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.api.translators.ObservationInterpretationTranslator;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@Setter(AccessLevel.PACKAGE)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5MDIzMQ=="}, "originalCommit": {"oid": "6d390598daa8b27b794c79c6b93d639a37d2bba7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTgzNjQyOnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationStatusTranslatorImpl_2_1.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTozMzo0N1rOForQ1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTozMzo0N1rOForQ1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5NjE4Mg==", "bodyText": "Remove this line (Not used at this point)", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378196182", "createdAt": "2020-02-12T11:33:47Z", "author": {"login": "corneliouzbett"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationStatusTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Observation;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@Setter(AccessLevel.PACKAGE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d390598daa8b27b794c79c6b93d639a37d2bba7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTg4NDcxOnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/ObservationInterpretationTranslator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTo1MDo0MVrOForu2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTo1MDo0MVrOForu2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwMzg2Nw==", "bodyText": "I prefer existingObs instead of existingObject", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378203867", "createdAt": "2020-02-12T11:50:41Z", "author": {"login": "corneliouzbett"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/ObservationInterpretationTranslator.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.openmrs.module.fhir2.api.translators;\n+\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.openmrs.Obs;\n+\n+public interface ObservationInterpretationTranslator extends ToFhirTranslator<Obs, CodeableConcept>, UpdatableOpenmrsTranslator<Obs, CodeableConcept> {\n+\n+    /**\n+     * Maps an {@link Obs} to an {@link org.hl7.fhir.r4.model.CodeableConcept}\n+     * @param obs the OpenMRS obs element to translate\n+     * @return\n+     */\n+    @Override\n+    CodeableConcept toFhirResource(Obs obs);\n+\n+    /**\n+     * Maps an {@link org.hl7.fhir.r4.model.CodeableConcept} to an {@link Obs}\n+     * @param existingObject the existingObject to update\n+     * @param resource the resource to map\n+     * @return\n+     */\n+    @Override\n+    Obs toOpenmrsType(Obs existingObject, CodeableConcept resource);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d390598daa8b27b794c79c6b93d639a37d2bba7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDQ0NTAxOnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDozOToyOFrOFoxE5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNTo1Mzo0NFrOFo0IKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5MTQyOA==", "bodyText": "So what we actually want to do here is to map not to text but to the coding using the code set defined here. So, for example, Obs.Interpretation.NORMAL should map to a structure that looks like this:\n\"interpretation\": {\n\t\"coding\": [\n\t\t{\n\t\t\t\"system\": \"http://hl7.org/fhir/ValueSet/observation-interpretation\",\n\t\t\t\"code\": \"N\",\n\t\t\t\"display\": \"Normal\n\t\t}\n\t],\n\t\"text\": \"Normal\"\n}\nCode-wise this looks something like (with the constants appropriately extracted out):\nswitch(obs.getInterpretation()) {\n    case NORMAL:\n\t\tinterpretation.addCoding().setSystem(\"http://hl7.org/fhir/ValueSet/observation-interpretation\").setCode(\"N\").setDisplay(\"Normal\");\n\t\tinterpretation.setText(\"Normal\");\n\t...\n}\nThe mappings should be something like:\n\n\n\nOpenMRS Type\nFHIR Interpretation\n\n\n\n\nNORMAL\nN\n\n\nABNORMAL\nA\n\n\nCRITICALLY_ABNORMAL\nAA\n\n\nCRITICALLY_HIGH\nHH\n\n\nCRITICALLY_LOW\nLL\n\n\nHIGH\nH\n\n\nLOW\nL\n\n\nOFF_SCALE_LOW\n<\n\n\nOFF_SCALE_HI\n>\n\n\nSIGNIFICANT_CHANGE_DOWN\nD\n\n\nSIGNIFICANT_CHANGE_UP\nU\n\n\nRESISTANT\nR\n\n\nSUSCEPTIBLE\nS\n\n\nINTERMEDIATE\nI\n\n\nPOSITIVE\nPOS\n\n\nNEGATIVE\nNEG\n\n\n\nThe display values should be those in the valueset I linked above.\nSome special handling is needed for the VERY_SUSCEPTIBLE interpretation, since this isn't supported by the valueset. For this case, it might make sense to add the coding for susceptible and then create an additional code with the system https://fhir.openmrs.org/ext/obs/interpretations, the code VS, and the display \"Very Susceptible\", which should also be the reported text.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378291428", "createdAt": "2020-02-12T14:39:28Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.api.translators.ObservationInterpretationTranslator;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationInterpretationTranslatorImpl_2_1 implements ObservationInterpretationTranslator {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs obs) {\n+\t\tCodeableConcept interpretation = new CodeableConcept();\n+\t\tif (obs.getInterpretation() != null) {\n+\t\t\tinterpretation.setText(obs.getInterpretation().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "859c4e526d5081fde149e49aad1883a10a50b4e5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM0MTQxOA==", "bodyText": "This is noted, working on it..", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378341418", "createdAt": "2020-02-12T15:53:44Z", "author": {"login": "jecihjoy"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.api.translators.ObservationInterpretationTranslator;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationInterpretationTranslatorImpl_2_1 implements ObservationInterpretationTranslator {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs obs) {\n+\t\tCodeableConcept interpretation = new CodeableConcept();\n+\t\tif (obs.getInterpretation() != null) {\n+\t\t\tinterpretation.setText(obs.getInterpretation().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5MTQyOA=="}, "originalCommit": {"oid": "859c4e526d5081fde149e49aad1883a10a50b4e5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDIxNzM5OnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoxNzo1NVrOFpVbug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTowMzozMlrOFpf6ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4NzA5OA==", "bodyText": "Use addCoding() instead of setCoding(). The former allows us to have multiple codings where it makes sense.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378887098", "createdAt": "2020-02-13T14:17:55Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import java.util.Collections;\n+\n+import org.apache.commons.lang.WordUtils;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Coding;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationInterpretationTranslatorImpl_2_1 extends ObservationInterpretationTranslatorImpl {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs obs) {\n+\t\tif (obs.getInterpretation() == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tCodeableConcept interpretation = new CodeableConcept();\n+\t\tswitch (obs.getInterpretation()) {\n+\t\t\tcase NORMAL:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"N\", obs.getInterpretation())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5MjY2OA==", "bodyText": "@ibacher  do we need to use addCoding() yet OpenMrs only supports a single interpretation to an Observation?", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378992668", "createdAt": "2020-02-13T17:00:37Z", "author": {"login": "jecihjoy"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import java.util.Collections;\n+\n+import org.apache.commons.lang.WordUtils;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Coding;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationInterpretationTranslatorImpl_2_1 extends ObservationInterpretationTranslatorImpl {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs obs) {\n+\t\tif (obs.getInterpretation() == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tCodeableConcept interpretation = new CodeableConcept();\n+\t\tswitch (obs.getInterpretation()) {\n+\t\t\tcase NORMAL:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"N\", obs.getInterpretation())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4NzA5OA=="}, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5ODgyNw==", "bodyText": "Also while doing the translations back to openmrs type, I suppose this would be the code\nswitch (interpretation.getCoding().get(0).getCode()){\ncase \"N\":\nopenmrsObs.setInterpretation(Obs.Interpretation.NEGATIVE);\nbreak;\nwell it will not make sense to check the value at 0 if we're expecting more than one interpretation..", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378998827", "createdAt": "2020-02-13T17:09:41Z", "author": {"login": "jecihjoy"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import java.util.Collections;\n+\n+import org.apache.commons.lang.WordUtils;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Coding;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationInterpretationTranslatorImpl_2_1 extends ObservationInterpretationTranslatorImpl {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs obs) {\n+\t\tif (obs.getInterpretation() == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tCodeableConcept interpretation = new CodeableConcept();\n+\t\tswitch (obs.getInterpretation()) {\n+\t\t\tcase NORMAL:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"N\", obs.getInterpretation())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4NzA5OA=="}, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1NTQyNQ==", "bodyText": "@ibacher do we need to use addCoding() yet OpenMrs only supports a single interpretation to an Observation?\n\nSo, addCoding() is basically a simpler way of achieving the same result without having to construct a list here.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r379055425", "createdAt": "2020-02-13T18:56:42Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import java.util.Collections;\n+\n+import org.apache.commons.lang.WordUtils;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Coding;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationInterpretationTranslatorImpl_2_1 extends ObservationInterpretationTranslatorImpl {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs obs) {\n+\t\tif (obs.getInterpretation() == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tCodeableConcept interpretation = new CodeableConcept();\n+\t\tswitch (obs.getInterpretation()) {\n+\t\t\tcase NORMAL:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"N\", obs.getInterpretation())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4NzA5OA=="}, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1NTc1Ng==", "bodyText": "Also while doing the translations back to openmrs type, I suppose this would be the code\nswitch (interpretation.getCoding().get(0).getCode()){ case \"N\": openmrsObs.setInterpretation(Obs.Interpretation.NEGATIVE); break;\nwell it will not make sense to check the value at 0 if we're expecting more than one interpretation..\n\nI'm not anticipating more than one interpretation here, so yes, just mapping from \"N\" to NEGATIVE is the right way to go.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r379055756", "createdAt": "2020-02-13T18:57:22Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import java.util.Collections;\n+\n+import org.apache.commons.lang.WordUtils;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Coding;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationInterpretationTranslatorImpl_2_1 extends ObservationInterpretationTranslatorImpl {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs obs) {\n+\t\tif (obs.getInterpretation() == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tCodeableConcept interpretation = new CodeableConcept();\n+\t\tswitch (obs.getInterpretation()) {\n+\t\t\tcase NORMAL:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"N\", obs.getInterpretation())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4NzA5OA=="}, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1ODg1MQ==", "bodyText": "i understand your perspective now", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r379058851", "createdAt": "2020-02-13T19:03:32Z", "author": {"login": "jecihjoy"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import java.util.Collections;\n+\n+import org.apache.commons.lang.WordUtils;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Coding;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationInterpretationTranslatorImpl_2_1 extends ObservationInterpretationTranslatorImpl {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs obs) {\n+\t\tif (obs.getInterpretation() == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tCodeableConcept interpretation = new CodeableConcept();\n+\t\tswitch (obs.getInterpretation()) {\n+\t\t\tcase NORMAL:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"N\", obs.getInterpretation())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4NzA5OA=="}, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDIzNTIxOnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyMjoyN1rOFpVmjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyMjoyN1rOFpVmjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4OTg3MA==", "bodyText": "This actually needs to invert the toFhirResource() method. So here we expect a coding of, e.g., \"NEG\" and want to translate that into Obs.Interpretation.NEGATIVE", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378889870", "createdAt": "2020-02-13T14:22:27Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import java.util.Collections;\n+\n+import org.apache.commons.lang.WordUtils;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Coding;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationInterpretationTranslatorImpl_2_1 extends ObservationInterpretationTranslatorImpl {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs obs) {\n+\t\tif (obs.getInterpretation() == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tCodeableConcept interpretation = new CodeableConcept();\n+\t\tswitch (obs.getInterpretation()) {\n+\t\t\tcase NORMAL:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"N\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase ABNORMAL:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"A\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase CRITICALLY_ABNORMAL:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"AA\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase CRITICALLY_HIGH:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"HH\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase CRITICALLY_LOW:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"LL\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase HIGH:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"H\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase LOW:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"L\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase OFF_SCALE_LOW:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"<\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase OFF_SCALE_HIGH:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\">\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase SIGNIFICANT_CHANGE_DOWN:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"D\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase SIGNIFICANT_CHANGE_UP:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"U\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase RESISTANT:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"R\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase SUSCEPTIBLE:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"S\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase INTERMEDIATE:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"I\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase POSITIVE:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"POS\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase NEGATIVE:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"NEG\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tcase VERY_SUSCEPTIBLE:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(new Coding()\n+\t\t\t\t        .setSystem(FhirConstants.VERY_SUSCEPTIBLE_SYSTEM_URI).setCode(\"VS\").setDisplay(\"Very Susceptible\")));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());\n+\t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\treturn interpretation;\n+\t\t\t\n+\t\t}\n+\t\treturn interpretation;\n+\t}\n+\t\n+\t@Override\n+\tpublic Obs toOpenmrsType(Obs openmrsObs, CodeableConcept interpretation) {\n+\t\topenmrsObs.setInterpretation(Obs.Interpretation.valueOf(interpretation.getText()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDI0MTc5OnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyNDoxOVrOFpVq8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyNDoxOVrOFpVq8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg5MDk5NA==", "bodyText": "I think we should do the same thing here that we do to translate the interpretation into it's display value.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378890994", "createdAt": "2020-02-13T14:24:19Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import java.util.Collections;\n+\n+import org.apache.commons.lang.WordUtils;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.Coding;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.openmrs.module.fhir2.FhirConstants;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationInterpretationTranslatorImpl_2_1 extends ObservationInterpretationTranslatorImpl {\n+\t\n+\t@Override\n+\tpublic CodeableConcept toFhirResource(Obs obs) {\n+\t\tif (obs.getInterpretation() == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tCodeableConcept interpretation = new CodeableConcept();\n+\t\tswitch (obs.getInterpretation()) {\n+\t\t\tcase NORMAL:\n+\t\t\t\tinterpretation.setCoding(Collections.singletonList(addIntepretationCoding(\"N\", obs.getInterpretation())));\n+\t\t\t\tinterpretation.setText(obs.getInterpretation().toString().toLowerCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDI1OTE2OnYy", "diffSide": "RIGHT", "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationStatusTranslatorImpl_2_1.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyODoyMlrOFpV1Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyODoyMlrOFpV1Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg5MzY1MA==", "bodyText": "The FHIR observation status set is substantially larger than the OpenMRS observation status. What happens, for example, if we get an observation with the status \"cancelled\"? (I'd suggest writing a unit test that passes that status and try to fix the issue.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378893650", "createdAt": "2020-02-13T14:28:22Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationStatusTranslatorImpl_2_1.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import org.hl7.fhir.r4.model.Observation;\n+import org.openmrs.Obs;\n+import org.openmrs.annotation.OpenmrsProfile;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.stereotype.Component;\n+\n+@Primary\n+@Component\n+@OpenmrsProfile(openmrsPlatformVersion = \"2.1.* - 2.3.*\")\n+public class ObservationStatusTranslatorImpl_2_1 extends ObservationStatusTranslatorImpl {\n+\t\n+\t@Override\n+\tpublic Observation.ObservationStatus toFhirResource(Obs obs) {\n+\t\treturn Observation.ObservationStatus.valueOf(obs.getStatus().toString());\n+\t}\n+\t\n+\t@Override\n+\tpublic Obs toOpenmrsType(Obs observation, Observation.ObservationStatus observationStatus) {\n+\t\tobservation.setStatus(Obs.Status.valueOf(observationStatus.toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDI2MDgzOnYy", "diffSide": "RIGHT", "path": "api-2.1/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1Test.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyODo0N1rOFpV2TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyODo0N1rOFpV2TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg5MzkwMQ==", "bodyText": "Should be private (I'm bad about remembering this too)", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378893901", "createdAt": "2020-02-13T14:28:47Z", "author": {"login": "ibacher"}, "path": "api-2.1/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationInterpretationTranslatorImpl_2_1Test.java", "diffHunk": "@@ -0,0 +1,233 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.notNullValue;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.openmrs.Obs;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class ObservationInterpretationTranslatorImpl_2_1Test {\n+\t\n+\tprivate static final Obs.Interpretation OBS_INTERPRETATION = Obs.Interpretation.HIGH;\n+\t\n+\tObservationInterpretationTranslatorImpl_2_1 observationInterpretationTranslator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDI2Mzk0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/FhirConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyOTozMFrOFpV4IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyOTozMFrOFpV4IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg5NDM2OA==", "bodyText": "Can we construct this as we construct the other extension URLs? That way if we need to change something, we only have to change it in one place.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378894368", "createdAt": "2020-02-13T14:29:30Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/FhirConstants.java", "diffHunk": "@@ -21,6 +21,10 @@\n \t\n \tpublic static final String DIAGNOSTIC_SERVICE_SECTIONS_VALUESET_URI = \"http://hl7.org/fhir/ValueSet/diagnostic-service-sections\";\n \t\n+\tpublic static final String INTERPRETATION_VALUE_SET_URI = \"http://hl7.org/fhir/ValueSet/observation-interpretation\";\n+\t\n+\tpublic static final String VERY_SUSCEPTIBLE_SYSTEM_URI = \"https://fhir.openmrs.org/ext/obs/interpretations\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDI2NjIyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDozMDowOVrOFpV5jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo0NjowNlrOFpfW_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg5NDczMw==", "bodyText": "addInterpretation() rather than setInterpretation() here.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378894733", "createdAt": "2020-02-13T14:30:09Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImpl.java", "diffHunk": "@@ -80,6 +85,8 @@ public Observation toFhirResource(Obs observation) {\n \t\t\n \t\tobs.setValue(observationValueTranslator.toFhirResource(observation));\n \t\t\n+\t\tobs.setInterpretation(Collections.singletonList(interpretationTranslator.toFhirResource(observation)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5MTgyMA==", "bodyText": "OpenMrs only allows adding a single interpretation to an observation, addInterpretation() is not supported", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r378991820", "createdAt": "2020-02-13T16:59:09Z", "author": {"login": "jecihjoy"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImpl.java", "diffHunk": "@@ -80,6 +85,8 @@ public Observation toFhirResource(Obs observation) {\n \t\t\n \t\tobs.setValue(observationValueTranslator.toFhirResource(observation));\n \t\t\n+\t\tobs.setInterpretation(Collections.singletonList(interpretationTranslator.toFhirResource(observation)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg5NDczMw=="}, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0OTcyNA==", "bodyText": "So, I'm not suggesting we support multiple interpretations, just that obs.addInterpretation(interpretationTranslator.toFhirResource(observation)) does the same thing and is a bit shorter and clearer.", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/60#discussion_r379049724", "createdAt": "2020-02-13T18:46:06Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ObservationTranslatorImpl.java", "diffHunk": "@@ -80,6 +85,8 @@ public Observation toFhirResource(Obs observation) {\n \t\t\n \t\tobs.setValue(observationValueTranslator.toFhirResource(observation));\n \t\t\n+\t\tobs.setInterpretation(Collections.singletonList(interpretationTranslator.toFhirResource(observation)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg5NDczMw=="}, "originalCommit": {"oid": "ac2303f762707676c0f698207d9d347bf0ea98f4"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1241, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}