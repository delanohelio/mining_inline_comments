{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTgzMTAx", "number": 18863, "title": "#18795 Adding live:true condition automatically when Time Machine is \u2026", "bodyText": "When a lucene query is pass to the method:\n\n  \n    \n      core/dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/content/ContentTool.java\n    \n    \n         Line 155\n      in\n      b91e4ec\n    \n    \n    \n    \n\n        \n          \n           public PaginatedArrayList<ContentMap> pull(String query, int offset,int limit, String sort){ \n        \n    \n  \n\n\nis called with a lucene query that not has the live:true condition and Time Machine is running, now we are adding the live:true condition automatically", "createdAt": "2020-07-10T18:26:29Z", "url": "https://github.com/dotCMS/core/pull/18863", "merged": true, "mergeCommit": {"oid": "5f9ad4da39ca791f7866d8844d9bb59b0bf35617"}, "closed": true, "closedAt": "2020-07-16T18:10:51Z", "author": {"login": "freddyucv"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczn3MMAH2gAyNDQ3NTgzMTAxOmI5MWU0ZWNjOTRlOGZlNjUyNjUzY2VmYzVmM2VlYzI2NmIwZGYzODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1h9I9gFqTQ1MDAyMzUzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b91e4ecc94e8fe652653cefc5f3eec266b0df382", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/b91e4ecc94e8fe652653cefc5f3eec266b0df382", "committedDate": "2020-07-10T18:22:48Z", "message": "#18795 Adding live:true condition automatically when Time Machine is running"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NjEzMTQ2", "url": "https://github.com/dotCMS/core/pull/18863#pullrequestreview-446613146", "createdAt": "2020-07-10T18:30:04Z", "commit": {"oid": "b91e4ecc94e8fe652653cefc5f3eec266b0df382"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODozMDowNFrOGwBTLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODozMDowNFrOGwBTLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNjEyNw==", "bodyText": "code expresses a different thing that this javadoc", "url": "https://github.com/dotCMS/core/pull/18863#discussion_r453006127", "createdAt": "2020-07-10T18:30:04Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/viewtools/content/ContentToolTest.java", "diffHunk": "@@ -414,4 +423,176 @@ private ContentTool getContentTool(final long languageId){\n         contentTool.init(viewContext);\n         return contentTool;\n     }\n+\n+    /*\n+\n+\n+    /**\n+     * Method to test: {@link ContentTool#pullPerPage(String, int, int, String)}\n+     * When: there is a content with a publish date in the future and the time machine parameter in null\n+     * Should: Not return the content\n+     */\n+    @Test\n+    public void whenTheTimeMachineDateIsNullAndPublishDateInFutureShouldNotReturnAnything() {\n+        final Calendar contentPublishDate = Calendar.getInstance();\n+        contentPublishDate.add(Calendar.DATE, 1);\n+\n+        final ContentType contentType = TestDataUtils.getNewsLikeContentType();\n+        new ContentletDataGen(contentType.id())\n+                .setPolicy(IndexPolicy.FORCE)\n+                .setProperty(SYS_PUBLISH_DATE, contentPublishDate.getTime())\n+                .nextPersisted();\n+\n+        final String query = String.format(QUERY_BY_STRUCTURE_NAME, contentType.variable());\n+\n+        final ContentTool contentTool = getContentTool(null);\n+\n+        final PaginatedContentList<ContentMap> contents = contentTool.pullPerPage(query, 1, 2, null);\n+        assertEquals(0, contents.size());\n+    }\n+\n+    /**\n+     * Method to test: {@link ContentTool#pullPerPage(String, int, int, String)}\n+     * When: there is a content with a publish date set to tomorrow and the time machine date is the date after tomorrow\n+     * Should: return one content\n+     */\n+    @Test\n+    public void whenTheTimeMachineDateAndPublishDateAreTomorrowShouldReturnOneContent() {\n+        final Calendar publishDate = Calendar.getInstance();\n+        publishDate.add(Calendar.DATE, 1);\n+\n+        final Calendar timeMachine = Calendar.getInstance();\n+        timeMachine.add(Calendar.DATE, 2);\n+\n+        final ContentType contentType = TestDataUtils.getNewsLikeContentType();\n+        final Contentlet contentlet = new ContentletDataGen(contentType.id())\n+                .setProperty(SYS_PUBLISH_DATE, publishDate.getTime())\n+                .languageId(1)\n+                .nextPersisted();\n+\n+        final String query = String.format(QUERY_BY_STRUCTURE_NAME, contentType.variable());\n+\n+        final ContentTool contentTool = getContentTool(timeMachine);\n+\n+        final PaginatedContentList<ContentMap> contents = contentTool.pullPerPage(query, 1, 2, null);\n+\n+        assertEquals(1  , contents.size());\n+        assertEquals(1  , contents.getTotalResults());\n+        assertEquals(contentlet.getIdentifier(), contents.get(0).getContentObject().getIdentifier());\n+    }\n+\n+    @NotNull\n+    private ContentTool getContentTool(Calendar timeMachine) {\n+        final ContentTool contentTool  = new ContentTool();\n+\n+        final String time = timeMachine != null ? Long.toString(timeMachine.getTime().getTime()) : null;\n+\n+        final HttpSession session = mock(HttpSession.class);\n+        final HttpServletRequest request = mock(HttpServletRequest.class);\n+        when(request.getSession(false)).thenReturn(session);\n+        when(request.getSession()).thenReturn(session);\n+        when(request.getAttribute(WebKeys.USER)).thenReturn(APILocator.systemUser());\n+\n+        when(session.getAttribute(\"tm_date\")).thenReturn(time);\n+\n+        final ViewContext viewContext = mock(ViewContext.class);\n+        when(viewContext.getRequest()).thenReturn(request);\n+\n+        contentTool.init(viewContext);\n+        return contentTool;\n+    }\n+\n+    /**\n+     * Method to test: {@link ContentTool#pullPerPage(String, int, int, String)}\n+     * When: there is a content with a expire  date set to tomorrow and the time machine date is the date after tomorrow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b91e4ecc94e8fe652653cefc5f3eec266b0df382"}, "originalPosition": 131}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a73fc1f7ed898352425c4be3a6211ffafdea42a6", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/a73fc1f7ed898352425c4be3a6211ffafdea42a6", "committedDate": "2020-07-10T19:53:24Z", "message": "#18795 refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NjY3Mjkw", "url": "https://github.com/dotCMS/core/pull/18863#pullrequestreview-446667290", "createdAt": "2020-07-10T19:58:06Z", "commit": {"oid": "a73fc1f7ed898352425c4be3a6211ffafdea42a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTo1ODowNlrOGwEBgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTo1ODowNlrOGwEBgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1MDc1Mg==", "bodyText": "doc", "url": "https://github.com/dotCMS/core/pull/18863#discussion_r453050752", "createdAt": "2020-07-10T19:58:06Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/util/TimeMachineUtil.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.api.web.HttpServletRequestThreadLocal;\n+\n+import javax.servlet.http.HttpSession;\n+import java.util.Optional;\n+\n+public class TimeMachineUtil {\n+\n+    private TimeMachineUtil(){}\n+\n+    public static Optional<String> getTimeMachineDate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a73fc1f7ed898352425c4be3a6211ffafdea42a6"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6e4173e4391c955b9516744c8973011fc349556", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/a6e4173e4391c955b9516744c8973011fc349556", "committedDate": "2020-07-10T19:58:47Z", "message": "#18795 javadoc testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de4603169a1241fa8698a2dc200bd71efdb03d2b", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/de4603169a1241fa8698a2dc200bd71efdb03d2b", "committedDate": "2020-07-10T20:01:17Z", "message": "#18795 refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NjcwNDU2", "url": "https://github.com/dotCMS/core/pull/18863#pullrequestreview-446670456", "createdAt": "2020-07-10T20:03:46Z", "commit": {"oid": "de4603169a1241fa8698a2dc200bd71efdb03d2b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NjcyMjgw", "url": "https://github.com/dotCMS/core/pull/18863#pullrequestreview-446672280", "createdAt": "2020-07-10T20:07:20Z", "commit": {"oid": "de4603169a1241fa8698a2dc200bd71efdb03d2b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c74c8d4ee863e025a4d5f255300514502a4685d3", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/c74c8d4ee863e025a4d5f255300514502a4685d3", "committedDate": "2020-07-15T15:14:22Z", "message": "#18795 Fixing Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa9a979092f4999062b9cedd2deb078ff96e9341", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/fa9a979092f4999062b9cedd2deb078ff96e9341", "committedDate": "2020-07-16T16:28:41Z", "message": "Update ContentToolTest.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMDIzNTEx", "url": "https://github.com/dotCMS/core/pull/18863#pullrequestreview-450023511", "createdAt": "2020-07-16T16:37:41Z", "commit": {"oid": "fa9a979092f4999062b9cedd2deb078ff96e9341"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjozNzo0MVrOGyzO5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjozNzo0MVrOGyzO5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyMTM4Mg==", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/18863#discussion_r455921382", "createdAt": "2020-07-16T16:37:41Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/util/TimeMachineUtilTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.api.web.HttpServletRequestThreadLocal;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpSession;\n+\n+import java.util.Date;\n+import java.util.Optional;\n+\n+import static org.junit.Assert.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class TimeMachineUtilTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa9a979092f4999062b9cedd2deb078ff96e9341"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMDIzNTMy", "url": "https://github.com/dotCMS/core/pull/18863#pullrequestreview-450023532", "createdAt": "2020-07-16T16:37:42Z", "commit": {"oid": "fa9a979092f4999062b9cedd2deb078ff96e9341"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjozNzo0MlrOGyzO9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjozNzo0MlrOGyzO9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyMTM5Ng==", "bodyText": "Codacy found an issue: Avoid unused imports such as 'org.junit.Assert'", "url": "https://github.com/dotCMS/core/pull/18863#discussion_r455921396", "createdAt": "2020-07-16T16:37:42Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/util/TimeMachineUtilTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.api.web.HttpServletRequestThreadLocal;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpSession;\n+\n+import java.util.Date;\n+import java.util.Optional;\n+\n+import static org.junit.Assert.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa9a979092f4999062b9cedd2deb078ff96e9341"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 799, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}