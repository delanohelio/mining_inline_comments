{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MTIxMjQ4", "number": 19119, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOToxMToyMVrOEaq19g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzoxNTo1NlrOEbqp-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDAwMzc0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOToxMToyMVrOHEPgsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo0ODo0NVrOHEQ8qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMDQ4Mw==", "bodyText": "javadoc?", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474210483", "createdAt": "2020-08-20T19:11:21Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDAyNQ==", "bodyText": "done", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474234025", "createdAt": "2020-08-20T19:48:45Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMDQ4Mw=="}, "originalCommit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDAwNDA2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOToxMToyOFrOHEPg7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo0NTowMFrOHEQ1ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMDU0Mg==", "bodyText": "any test?", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474210542", "createdAt": "2020-08-20T19:11:28Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {\n+\n+    @Override\n+    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMjE3MA==", "bodyText": "Postman test", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474232170", "createdAt": "2020-08-20T19:45:00Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {\n+\n+    @Override\n+    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMDU0Mg=="}, "originalCommit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDAwNzA0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/HTMLPageAssetRenderedAPIImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOToxMjoyNFrOHEPi1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo0NDo1OVrOHEQ1XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMTAzMA==", "bodyText": "any test?", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474211030", "createdAt": "2020-08-20T19:12:24Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/HTMLPageAssetRenderedAPIImpl.java", "diffHunk": "@@ -230,6 +236,23 @@ public PageMode getDefaultEditPageMode(\n         }\n     }\n \n+    @Override\n+    public ViewAsPageStatus getViewAsStatus(final HttpServletRequest request,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMjE1Nw==", "bodyText": "Postman test", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474232157", "createdAt": "2020-08-20T19:44:59Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/HTMLPageAssetRenderedAPIImpl.java", "diffHunk": "@@ -230,6 +236,23 @@ public PageMode getDefaultEditPageMode(\n         }\n     }\n \n+    @Override\n+    public ViewAsPageStatus getViewAsStatus(final HttpServletRequest request,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMTAzMA=="}, "originalCommit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDMwMTM0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNjozNDo1N1rOHFtJRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzowNTowN1rOHFuUPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc0NDU4Mw==", "bodyText": "Is it OK to return null?", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475744583", "createdAt": "2020-08-24T16:34:57Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {\n+\n+    @Override\n+    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)\n+            throws DotDataException {\n+        final String currentDeviceId = (String) request.getSession().\n+                getAttribute(WebKeys.CURRENT_DEVICE);\n+        Contentlet currentDevice = null;\n+\n+        try {\n+            if (currentDeviceId != null) {\n+                currentDevice = APILocator.getContentletAPI().find(currentDeviceId, user,\n+                        false);\n+\n+                if (currentDevice == null) {\n+                    request.getSession().removeAttribute(WebKeys.CURRENT_DEVICE);\n+                }\n+            }\n+        } catch (DotSecurityException e) {\n+            Logger.debug(this.getClass(),\n+                    \"Exception on createViewAsMap exception message: \" + e.getMessage(), e);\n+        }\n+\n+        return currentDevice;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f755aff12f701b4506ea86915c119eddf82f9d4"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2Mzc3Mw==", "bodyText": "Switched to Optional", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475763773", "createdAt": "2020-08-24T17:05:07Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {\n+\n+    @Override\n+    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)\n+            throws DotDataException {\n+        final String currentDeviceId = (String) request.getSession().\n+                getAttribute(WebKeys.CURRENT_DEVICE);\n+        Contentlet currentDevice = null;\n+\n+        try {\n+            if (currentDeviceId != null) {\n+                currentDevice = APILocator.getContentletAPI().find(currentDeviceId, user,\n+                        false);\n+\n+                if (currentDevice == null) {\n+                    request.getSession().removeAttribute(WebKeys.CURRENT_DEVICE);\n+                }\n+            }\n+        } catch (DotSecurityException e) {\n+            Logger.debug(this.getClass(),\n+                    \"Exception on createViewAsMap exception message: \" + e.getMessage(), e);\n+        }\n+\n+        return currentDevice;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc0NDU4Mw=="}, "originalCommit": {"oid": "1f755aff12f701b4506ea86915c119eddf82f9d4"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDQ1ODcwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzoxNTo1NVrOHFuq_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzoxNTo1NVrOHFuq_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2OTU5OQ==", "bodyText": "Codacy found an issue: The String literal \"persona\" appears 5 times in this file; the first occurrence is on line 137", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475769599", "createdAt": "2020-08-24T17:15:55Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -114,7 +126,111 @@\n \n         typeMap.put(\"Template\", TypeUtil.createObjectType(\"Template\", templateFields));\n \n+        final Map<String, TypeFetcher> viewAsFields = new HashMap<>();\n+        viewAsFields.put(\"visitor\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Visitor\"),\n+                new PropertyDataFetcher<ViewAsPageStatus>(\"visitor\")));\n+        viewAsFields.put(\"language\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Language\"),\n+                new LanguageDataFetcher()));\n+        viewAsFields.put(\"mode\", new TypeFetcher(GraphQLString,\n+                PropertyDataFetcher.fetching((Function<ViewAsPageStatus, String>)\n+                        (viewAs)->viewAs.getPageMode().name())));\n+        viewAsFields.put(\"persona\", new TypeFetcher(GraphQLTypeReference.typeRef(\"PersonaBaseType\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDQ1ODgwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ViewAsDataFetcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzoxNTo1NlrOHFurDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzoxNTo1NlrOHFurDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2OTYxMg==", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475769612", "createdAt": "2020-08-24T17:15:56Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ViewAsDataFetcher.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.page.ViewAsPageStatus;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * This DataFetcher returns a {@link Map} representing a {@link Template} associated to the originally\n+ * requested {@link HTMLPageAsset}.\n+ */\n+public class ViewAsDataFetcher implements DataFetcher<ViewAsPageStatus> {\n+    @Override\n+    public ViewAsPageStatus get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final User user = ((DotGraphQLContext) environment.getContext()).getUser();\n+            final Contentlet contentlet = environment.getSource();\n+            final String pageModeAsString = environment.getArgument(\"pageMode\")\n+                    != null ? environment.getArgument(\"pageMode\") : PageMode.LIVE.name();\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+\n+            final HttpServletRequest request = ((DotGraphQLContext) environment.getContext())\n+                    .getHttpServletRequest();\n+\n+            final HTMLPageAsset pageAsset = APILocator.getHTMLPageAssetAPI()\n+                    .fromContentlet(contentlet);\n+\n+            return APILocator.getHTMLPageAssetRenderedAPI().getViewAsStatus(request,\n+                    mode, pageAsset, user);\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1984, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}