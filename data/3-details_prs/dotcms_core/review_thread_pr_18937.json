{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NjY0MTYw", "number": 18937, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODoxNDowMlrOEQvbZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODoxODo1MVrOEQviWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTg5NzMyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/publisher/business/PublisherQueueJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODoxNDowMlrOG1EH8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODoxNDowMlrOG1EH8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5NTI4Mg==", "bodyText": "I would extract to a private method sendNotification", "url": "https://github.com/dotCMS/core/pull/18937#discussion_r458295282", "createdAt": "2020-07-21T18:14:02Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/publisher/business/PublisherQueueJob.java", "diffHunk": "@@ -355,6 +381,46 @@ private void updateBundleStatus(final PublishAuditStatus bundleAudit,\n \t\t\t}\n \t\t}\n \t\tLogger.info(this, \"===========================================================\");\n+\n+\t\t//Growl Notifications\n+\t\tif(UtilMethods.isSet(notificationMessage)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "166df6f57a44bba210126c30304c33d4b9e7a134"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTkwNzc3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/publisher/business/PublisherQueueJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODoxNzowNFrOG1EOsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODowMzo1M1rOG1uHDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5NzAwOQ==", "bodyText": "All these arguments could become an object called NotificationParams and use a builder pattern.\nE.g.\nnew NotificationParamsBuilder().withMessage(\"\").withMessageArgument(\"\").withNotificationLife(\"\").withSeverity(SUCCESS)\nand then call the .build() when passing it to the private method sendNotification(builder.build())", "url": "https://github.com/dotCMS/core/pull/18937#discussion_r458297009", "createdAt": "2020-07-21T18:17:04Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/publisher/business/PublisherQueueJob.java", "diffHunk": "@@ -292,10 +303,19 @@ private void updateAuditStatus(final List<Map<String, Object>> bundlesInQueue) t\n \t@NotNull\n \tprivate void updateBundleStatus(final PublishAuditStatus bundleAudit,\n \t\t\t\t\t\t\t\t\tfinal Map<String, Map<String, EndpointDetail>> endpointTrackingMap,\n-\t\t\t\t\t\t\t\t\tfinal GroupPushStats groupPushStats, final List<Map<String, Object>> bundlesInQueue) throws DotDataException, DotPublisherException {\n+\t\t\t\t\t\t\t\t\tfinal GroupPushStats groupPushStats, final List<Map<String, Object>> bundlesInQueue)\n+\t\t\tthrows DotDataException, DotPublisherException, DotSecurityException, LanguageException {\n \t\tStatus bundleStatus;\n \t\tfinal PublishAuditHistory localHistory = bundleAudit.getStatusPojo();\n \t\tfinal String auditedBundleId = bundleAudit.getBundleId();\n+\t\t//Info need to generate Growl Notification\n+\t\tfinal Bundle bundle = APILocator.getBundleAPI().getBundleById(auditedBundleId);\n+\t\tfinal boolean isBundleNameGenerated = bundle.getName().startsWith(\"bundle-\");\n+\t\tString notificationMessage = \"\";\n+\t\tString notificationMessageArgument = \"\";\n+\t\tlong notificationLife = 5000;\n+\t\tMessageSeverity notificationSeverity = MessageSeverity.SUCCESS;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "166df6f57a44bba210126c30304c33d4b9e7a134"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MzE4Mw==", "bodyText": "using builder", "url": "https://github.com/dotCMS/core/pull/18937#discussion_r458983183", "createdAt": "2020-07-22T18:03:53Z", "author": {"login": "erickgonzalez"}, "path": "dotCMS/src/main/java/com/dotcms/publisher/business/PublisherQueueJob.java", "diffHunk": "@@ -292,10 +303,19 @@ private void updateAuditStatus(final List<Map<String, Object>> bundlesInQueue) t\n \t@NotNull\n \tprivate void updateBundleStatus(final PublishAuditStatus bundleAudit,\n \t\t\t\t\t\t\t\t\tfinal Map<String, Map<String, EndpointDetail>> endpointTrackingMap,\n-\t\t\t\t\t\t\t\t\tfinal GroupPushStats groupPushStats, final List<Map<String, Object>> bundlesInQueue) throws DotDataException, DotPublisherException {\n+\t\t\t\t\t\t\t\t\tfinal GroupPushStats groupPushStats, final List<Map<String, Object>> bundlesInQueue)\n+\t\t\tthrows DotDataException, DotPublisherException, DotSecurityException, LanguageException {\n \t\tStatus bundleStatus;\n \t\tfinal PublishAuditHistory localHistory = bundleAudit.getStatusPojo();\n \t\tfinal String auditedBundleId = bundleAudit.getBundleId();\n+\t\t//Info need to generate Growl Notification\n+\t\tfinal Bundle bundle = APILocator.getBundleAPI().getBundleById(auditedBundleId);\n+\t\tfinal boolean isBundleNameGenerated = bundle.getName().startsWith(\"bundle-\");\n+\t\tString notificationMessage = \"\";\n+\t\tString notificationMessageArgument = \"\";\n+\t\tlong notificationLife = 5000;\n+\t\tMessageSeverity notificationSeverity = MessageSeverity.SUCCESS;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5NzAwOQ=="}, "originalCommit": {"oid": "166df6f57a44bba210126c30304c33d4b9e7a134"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTkxNTEyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/publisher/business/PublisherQueueJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODoxODo1MVrOG1ETUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODowNDoyOFrOG1uIrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5ODE5NQ==", "bodyText": "not sure if this should be configurable in order to get more detail if wanted", "url": "https://github.com/dotCMS/core/pull/18937#discussion_r458298195", "createdAt": "2020-07-21T18:18:51Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/publisher/business/PublisherQueueJob.java", "diffHunk": "@@ -355,6 +381,46 @@ private void updateBundleStatus(final PublishAuditStatus bundleAudit,\n \t\t\t}\n \t\t}\n \t\tLogger.info(this, \"===========================================================\");\n+\n+\t\t//Growl Notifications\n+\t\tif(UtilMethods.isSet(notificationMessage)){\n+\t\t\tfinal SystemMessageBuilder message = new SystemMessageBuilder()\n+\t\t\t\t\t.setMessage(LanguageUtil.format(\n+\t\t\t\t\t\t\tAPILocator.getUserAPI().loadUserById(bundle.getOwner()).getLocale(),\n+\t\t\t\t\t\t\tnotificationMessage,\n+\t\t\t\t\t\t\tnotificationMessageArgument))\n+\t\t\t\t\t.setSeverity(notificationSeverity)\n+\t\t\t\t\t.setType(MessageType.SIMPLE_MESSAGE)\n+\t\t\t\t\t.setLife(notificationLife);\n+\n+\t\t\tSystemMessageEventUtil.getInstance().pushMessage(message.create(), ImmutableList.of(bundle.getOwner()));\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Utility method to generate the bundle title for the notification, checks the amount of assets and\n+\t * only shows the assetType and assetTitle of the first three items, if there are more the amount of\n+\t * remain assets is shown.\n+\t *\n+\t * @param bundleAssets assets that were added manually to the bundle\n+\t * @return a string that will be the argument for the notification\n+\t */\n+\tprivate String generateBundleTitle(final Map<String,String> bundleAssets)\n+\t\t\tthrows LanguageException {\n+\t\tint count = 0;\n+\t\tString bundleTitle = \"\";\n+\t\tfor(final String id : bundleAssets.keySet()){\n+\t\t\tif(count < 3) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "166df6f57a44bba210126c30304c33d4b9e7a134"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MzU5Nw==", "bodyText": "This is to keep consistency with the Status/History Tab", "url": "https://github.com/dotCMS/core/pull/18937#discussion_r458983597", "createdAt": "2020-07-22T18:04:28Z", "author": {"login": "erickgonzalez"}, "path": "dotCMS/src/main/java/com/dotcms/publisher/business/PublisherQueueJob.java", "diffHunk": "@@ -355,6 +381,46 @@ private void updateBundleStatus(final PublishAuditStatus bundleAudit,\n \t\t\t}\n \t\t}\n \t\tLogger.info(this, \"===========================================================\");\n+\n+\t\t//Growl Notifications\n+\t\tif(UtilMethods.isSet(notificationMessage)){\n+\t\t\tfinal SystemMessageBuilder message = new SystemMessageBuilder()\n+\t\t\t\t\t.setMessage(LanguageUtil.format(\n+\t\t\t\t\t\t\tAPILocator.getUserAPI().loadUserById(bundle.getOwner()).getLocale(),\n+\t\t\t\t\t\t\tnotificationMessage,\n+\t\t\t\t\t\t\tnotificationMessageArgument))\n+\t\t\t\t\t.setSeverity(notificationSeverity)\n+\t\t\t\t\t.setType(MessageType.SIMPLE_MESSAGE)\n+\t\t\t\t\t.setLife(notificationLife);\n+\n+\t\t\tSystemMessageEventUtil.getInstance().pushMessage(message.create(), ImmutableList.of(bundle.getOwner()));\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Utility method to generate the bundle title for the notification, checks the amount of assets and\n+\t * only shows the assetType and assetTitle of the first three items, if there are more the amount of\n+\t * remain assets is shown.\n+\t *\n+\t * @param bundleAssets assets that were added manually to the bundle\n+\t * @return a string that will be the argument for the notification\n+\t */\n+\tprivate String generateBundleTitle(final Map<String,String> bundleAssets)\n+\t\t\tthrows LanguageException {\n+\t\tint count = 0;\n+\t\tString bundleTitle = \"\";\n+\t\tfor(final String id : bundleAssets.keySet()){\n+\t\t\tif(count < 3) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5ODE5NQ=="}, "originalCommit": {"oid": "166df6f57a44bba210126c30304c33d4b9e7a134"}, "originalPosition": 116}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2069, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}