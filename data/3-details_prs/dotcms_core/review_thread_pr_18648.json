{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMzA0MjMy", "number": 18648, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowOTowM1rOEE1Mow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowOTowM1rOEE1Mow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAxMzQ3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/content/elasticsearch/business/ESContentFactoryImplTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowOTowM1rOGis3xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDozMDozMFrOGitwAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzOTk0Mw==", "bodyText": "the checkout already nulls the inode", "url": "https://github.com/dotCMS/core/pull/18648#discussion_r439039943", "createdAt": "2020-06-11T20:09:03Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/integration-test/java/com/dotcms/content/elasticsearch/business/ESContentFactoryImplTest.java", "diffHunk": "@@ -734,4 +734,121 @@ public void test_translateQueryWithLicense(){\n         assertFalse(\n                 translatedQuery.getQuery().contains(\"-basetype:\" + BaseContentType.FORM.getType()));\n     }\n+\n+    /**\n+     * Method to test: {@link ESContentFactoryImpl#findContentletByIdentifierAnyLanguage(String)}\n+     * Given Scenario: Happy path to get a contentlet given its identifier regardless of the language\n+     * ExpectedResult: The method should return a contentlet\n+     *\n+     * @throws DotSecurityException\n+     * @throws DotDataException\n+     */\n+    @Test\n+    public void test_findContentletByIdentifierAnyLanguage()\n+            throws DotSecurityException, DotDataException {\n+\n+        final ContentletAPI contentletAPI = APILocator.getContentletAPI();\n+        final User user = APILocator.systemUser();\n+        final Language language1 = new LanguageDataGen().nextPersisted();\n+        final Language language2 = new LanguageDataGen().nextPersisted();\n+\n+        final ContentType bannerLikeContentType = TestDataUtils.getBannerLikeContentType();\n+\n+        final Contentlet banner1 = TestDataUtils\n+                .getBannerLikeContent(true, language1.getId(), bannerLikeContentType.id(), null);\n+\n+        Contentlet banner2 = contentletAPI.checkout(banner1.getInode(), APILocator.systemUser(), false);\n+\n+        banner2.setLanguageId(language2.getId());\n+        banner2.setInode(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b336fa2c82ae817882e27adbd744bc294743d1ca"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1NDMzOA==", "bodyText": "Done", "url": "https://github.com/dotCMS/core/pull/18648#discussion_r439054338", "createdAt": "2020-06-11T20:30:30Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/integration-test/java/com/dotcms/content/elasticsearch/business/ESContentFactoryImplTest.java", "diffHunk": "@@ -734,4 +734,121 @@ public void test_translateQueryWithLicense(){\n         assertFalse(\n                 translatedQuery.getQuery().contains(\"-basetype:\" + BaseContentType.FORM.getType()));\n     }\n+\n+    /**\n+     * Method to test: {@link ESContentFactoryImpl#findContentletByIdentifierAnyLanguage(String)}\n+     * Given Scenario: Happy path to get a contentlet given its identifier regardless of the language\n+     * ExpectedResult: The method should return a contentlet\n+     *\n+     * @throws DotSecurityException\n+     * @throws DotDataException\n+     */\n+    @Test\n+    public void test_findContentletByIdentifierAnyLanguage()\n+            throws DotSecurityException, DotDataException {\n+\n+        final ContentletAPI contentletAPI = APILocator.getContentletAPI();\n+        final User user = APILocator.systemUser();\n+        final Language language1 = new LanguageDataGen().nextPersisted();\n+        final Language language2 = new LanguageDataGen().nextPersisted();\n+\n+        final ContentType bannerLikeContentType = TestDataUtils.getBannerLikeContentType();\n+\n+        final Contentlet banner1 = TestDataUtils\n+                .getBannerLikeContent(true, language1.getId(), bannerLikeContentType.id(), null);\n+\n+        Contentlet banner2 = contentletAPI.checkout(banner1.getInode(), APILocator.systemUser(), false);\n+\n+        banner2.setLanguageId(language2.getId());\n+        banner2.setInode(\"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzOTk0Mw=="}, "originalCommit": {"oid": "b336fa2c82ae817882e27adbd744bc294743d1ca"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2153, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}