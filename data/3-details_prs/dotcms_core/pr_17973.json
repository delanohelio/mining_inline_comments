{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNzY1MDE1", "number": 17973, "title": "Issue 17850 reserved vars", "bodyText": "Reserved vars for content types. Applies only for non-system types.\nIntegration tests were added.", "createdAt": "2020-02-11T16:45:47Z", "url": "https://github.com/dotCMS/core/pull/17973", "merged": true, "mergeCommit": {"oid": "29501f6a7d2e3e8255e79c0c53ff64565bb7cbea"}, "closed": true, "closedAt": "2020-04-28T23:28:52Z", "author": {"login": "dsilvam"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6m9OOAH2gAyMzczNzY1MDE1OjE2NzUxOTY0OTVlZmU5ODc0YTIzOWFiZGJiYTNiMjM0NDc1ODZlZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccLoW-AFqTQwMjI1NzQ5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1675196495efe9874a239abdbba3b23447586edd", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/1675196495efe9874a239abdbba3b23447586edd", "committedDate": "2020-01-15T15:05:48Z", "message": "#17850 untested fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9771491439a232e578800e108fd393754f4de8c", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/c9771491439a232e578800e108fd393754f4de8c", "committedDate": "2020-01-15T15:30:05Z", "message": "#17850 test lowercase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "849b9274382732424cc6db31f98e65ac87ca93c3", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/849b9274382732424cc6db31f98e65ac87ca93c3", "committedDate": "2020-01-15T16:18:36Z", "message": "#17850 throws execption before saving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e2be40ea72d5fb43dee7bad4ca7cf90ab9d420f", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/0e2be40ea72d5fb43dee7bad4ca7cf90ab9d420f", "committedDate": "2020-02-05T21:54:00Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c693b45499f867b5b086b9310b1e378aa0424e18", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/c693b45499f867b5b086b9310b1e378aa0424e18", "committedDate": "2020-02-05T23:06:04Z", "message": "#17850 include integration-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d62995b21a9f69b9d7cbb7c1dc2428bb2924b70", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/4d62995b21a9f69b9d7cbb7c1dc2428bb2924b70", "committedDate": "2020-02-05T23:09:38Z", "message": "#17850 fix terminology"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91113a7b077b76129052c61c4d3918a6b27cd108", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/91113a7b077b76129052c61c4d3918a6b27cd108", "committedDate": "2020-02-06T16:45:32Z", "message": "#17850 code-review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4708faa0bf89f3fcd5f17621bce5fddca1df8128", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/4708faa0bf89f3fcd5f17621bce5fddca1df8128", "committedDate": "2020-02-10T17:37:23Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/acd52e3029e5451ea92c531d02be62d9325f2d3e", "committedDate": "2020-02-10T22:43:16Z", "message": "#17850 refactor test to avoid calling init service"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNjI5ODEy", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-361629812", "createdAt": "2020-02-20T04:44:59Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTM5NjEz", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-361939613", "createdAt": "2020-02-20T14:22:48Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34d685920b457fbdbd1b172969af196afded16c2", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/34d685920b457fbdbd1b172969af196afded16c2", "committedDate": "2020-03-02T17:12:12Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MTUyMzgx", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-368152381", "createdAt": "2020-03-03T16:54:05Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDE5NjA1", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-380019605", "createdAt": "2020-03-24T06:03:58Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjowMzo1OFrOF6iAGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjowMzo1OFrOF6iAGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxODgwOQ==", "bodyText": "I would do a NPE checking", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r396918809", "createdAt": "2020-03-24T06:03:58Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java", "diffHunk": "@@ -243,7 +294,7 @@ public String suggestVelocityVar(final String tryVar) throws DotDataException {\n     for (int i = 1; i < 100000; i++) {\n       dc.setSQL(this.contentTypeSql.SELECT_COUNT_VAR);\n       dc.addParam(varName.toLowerCase());\n-      if (dc.getInt(\"test\") == 0) {\n+      if (dc.getInt(\"test\") == 0 && !reservedContentTypeVars.contains(varName.toLowerCase())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDE5NjIz", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-380019623", "createdAt": "2020-03-24T06:04:02Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjowNDowMlrOF6iAKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjowNDowMlrOF6iAKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxODgyNw==", "bodyText": "I would do a NPE checking", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r396918827", "createdAt": "2020-03-24T06:04:02Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java", "diffHunk": "@@ -315,7 +366,10 @@ private ContentType dbSaveUpdate(final ContentType saveType) throws DotDataExcep\n     }\n \n     ContentType retType = builder.build();\n-\n+    if(reservedContentTypeVars.contains(retType.variable().toLowerCase())){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzA5MDI4", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-385309028", "createdAt": "2020-04-01T06:56:15Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjo1NjoxNVrOF-zH2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjo1NjoxNVrOF-zH2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM5MzYyNg==", "bodyText": "this is usually done by Tuple.of, but it is ok I guess", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r401393626", "createdAt": "2020-04-01T06:56:15Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -631,40 +631,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator\n                 .getContentTypeAPI(APILocator.systemUser()).findAll().stream()\n                 .filter((type)->type instanceof EnterpriseType).collect(Collectors.toList());\n \n-        // returns a List of Tuple (typeName, baseType)\n-        return eeTypes.stream().map((type)->\n-                new Tuple2<>(\"my\"+type.variable(), type.baseType())\n-        ).collect(Collectors.toList());\n-    }\n-\n-    @Test\n-    @UseDataProvider(\"dataProviderEEContentTypes\")\n-    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema(\n-            final Tuple2<String, BaseContentType> testCase) throws Exception{\n-        ContentType customType = null;\n-\n-        try {\n-            // create custom persona type. 1=typeName, 2=BaseType\n-            customType = createType(testCase._1,\n-                    testCase._2);\n-\n-            runNoLicense(() -> {\n-                final GraphQLSchema schema = APILocator.getGraphqlAPI().getSchema();\n-                assertNull(schema.getType(testCase._1));\n-            });\n-        } finally {\n-            if(customType!=null) {\n-                APILocator.getContentTypeAPI(APILocator.systemUser()).delete(customType);\n+        List<Tuple2<String, BaseContentType>> eeTypesList = eeTypes.stream().map((type)->\n+                        new Tuple2<>(\"my\"+type.variable(), type.baseType())).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c70296027f54d8042a680d5bb5ccd3125d1996b", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/1c70296027f54d8042a680d5bb5ccd3125d1996b", "committedDate": "2020-04-21T18:37:57Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffaaef8a9a35142a01b528a852dd4d0fcbbb9ccc", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/ffaaef8a9a35142a01b528a852dd4d0fcbbb9ccc", "committedDate": "2020-04-22T19:01:12Z", "message": "#17850 apply validation for non-system types. Integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7e98f982710ff674bfb244db78ae1bd78b3f014", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/f7e98f982710ff674bfb244db78ae1bd78b3f014", "committedDate": "2020-04-22T21:30:00Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "045efe613e7f148be6c679e70b5a21fddde4d3f5", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/045efe613e7f148be6c679e70b5a21fddde4d3f5", "committedDate": "2020-04-22T22:04:43Z", "message": "#17850"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75d57160e76d98127963099c8d4e903f90fb49f9", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/75d57160e76d98127963099c8d4e903f90fb49f9", "committedDate": "2020-04-23T17:12:13Z", "message": "#17850 bypass a couple more validations for system types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24a0d1f25838ab198dfe7b2f9e45c08d66efede5", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/24a0d1f25838ab198dfe7b2f9e45c08d66efede5", "committedDate": "2020-04-23T18:46:04Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b693d5ff1396a311a411aaaa2387b89882a73055", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/b693d5ff1396a311a411aaaa2387b89882a73055", "committedDate": "2020-04-23T21:27:59Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81693b9239306ffefbed12d0921132e395202a14", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/81693b9239306ffefbed12d0921132e395202a14", "committedDate": "2020-04-24T18:32:38Z", "message": "#17850 validation only for new types (save, not update)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "398a9a93e9ee03aab3e1477fa12c7a2b79f55532", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/398a9a93e9ee03aab3e1477fa12c7a2b79f55532", "committedDate": "2020-04-27T21:44:58Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ab10ada1de37ce703314acc85b12fe6f4772aaf", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/8ab10ada1de37ce703314acc85b12fe6f4772aaf", "committedDate": "2020-04-27T21:49:07Z", "message": "#17850 clean-up integration tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxOTI4MTcy", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-401928172", "createdAt": "2020-04-28T15:02:48Z", "commit": {"oid": "8ab10ada1de37ce703314acc85b12fe6f4772aaf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15fdd736c263159a6bfe8fe02c2577f1b9dd54b9", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/15fdd736c263159a6bfe8fe02c2577f1b9dd54b9", "committedDate": "2020-04-28T18:18:08Z", "message": "#17850 exclude host type in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c8c769a7dd0b11a9634600d4f4cc7781de25915", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/6c8c769a7dd0b11a9634600d4f4cc7781de25915", "committedDate": "2020-04-28T22:22:36Z", "message": "#17850 fix test clean-up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjU3NDc1", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-402257475", "createdAt": "2020-04-28T22:28:57Z", "commit": {"oid": "6c8c769a7dd0b11a9634600d4f4cc7781de25915"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyODo1N1rOGNpWjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyODo1N1rOGNpWjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MjE4OQ==", "bodyText": "Issue found: Local variable 'eeTypes' could be declared final", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r416962189", "createdAt": "2020-04-28T22:28:57Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -644,40 +644,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c8c769a7dd0b11a9634600d4f4cc7781de25915"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjU3NDgz", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-402257483", "createdAt": "2020-04-28T22:28:58Z", "commit": {"oid": "6c8c769a7dd0b11a9634600d4f4cc7781de25915"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyODo1OFrOGNpWlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyODo1OFrOGNpWlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MjE5Nw==", "bodyText": "Issue found: JUnit tests should include assert() or fail()", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r416962197", "createdAt": "2020-04-28T22:28:58Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -644,40 +644,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c8c769a7dd0b11a9634600d4f4cc7781de25915"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjU3NDg5", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-402257489", "createdAt": "2020-04-28T22:28:59Z", "commit": {"oid": "6c8c769a7dd0b11a9634600d4f4cc7781de25915"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyODo1OVrOGNpWmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyODo1OVrOGNpWmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MjIwMw==", "bodyText": "Issue found: Local variable 'eeTypesList' could be declared final", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r416962203", "createdAt": "2020-04-28T22:28:59Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -644,40 +644,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator\n                 .getContentTypeAPI(APILocator.systemUser()).findAll().stream()\n                 .filter((type)->type instanceof EnterpriseType).collect(Collectors.toList());\n \n-        // returns a List of Tuple (typeName, baseType)\n-        return eeTypes.stream().map((type)->\n-                new Tuple2<>(\"my\"+type.variable(), type.baseType())\n-        ).collect(Collectors.toList());\n-    }\n-\n-    @Test\n-    @UseDataProvider(\"dataProviderEEContentTypes\")\n-    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema(\n-            final Tuple2<String, BaseContentType> testCase) throws Exception{\n-        ContentType customType = null;\n-\n-        try {\n-            // create custom persona type. 1=typeName, 2=BaseType\n-            customType = createType(testCase._1,\n-                    testCase._2);\n-\n-            runNoLicense(() -> {\n-                final GraphQLSchema schema = APILocator.getGraphqlAPI().getSchema();\n-                assertNull(schema.getType(testCase._1));\n-            });\n-        } finally {\n-            if(customType!=null) {\n-                APILocator.getContentTypeAPI(APILocator.systemUser()).delete(customType);\n+        List<Tuple2<String, BaseContentType>> eeTypesList = eeTypes.stream().map((type)->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c8c769a7dd0b11a9634600d4f4cc7781de25915"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjU3NDk5", "url": "https://github.com/dotCMS/core/pull/17973#pullrequestreview-402257499", "createdAt": "2020-04-28T22:29:00Z", "commit": {"oid": "6c8c769a7dd0b11a9634600d4f4cc7781de25915"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyOTowMFrOGNpWoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjoyOTowMFrOGNpWoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MjIwOQ==", "bodyText": "Issue found: Local variable 'testCase' could be declared final", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r416962209", "createdAt": "2020-04-28T22:29:00Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -644,40 +644,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator\n                 .getContentTypeAPI(APILocator.systemUser()).findAll().stream()\n                 .filter((type)->type instanceof EnterpriseType).collect(Collectors.toList());\n \n-        // returns a List of Tuple (typeName, baseType)\n-        return eeTypes.stream().map((type)->\n-                new Tuple2<>(\"my\"+type.variable(), type.baseType())\n-        ).collect(Collectors.toList());\n-    }\n-\n-    @Test\n-    @UseDataProvider(\"dataProviderEEContentTypes\")\n-    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema(\n-            final Tuple2<String, BaseContentType> testCase) throws Exception{\n-        ContentType customType = null;\n-\n-        try {\n-            // create custom persona type. 1=typeName, 2=BaseType\n-            customType = createType(testCase._1,\n-                    testCase._2);\n-\n-            runNoLicense(() -> {\n-                final GraphQLSchema schema = APILocator.getGraphqlAPI().getSchema();\n-                assertNull(schema.getType(testCase._1));\n-            });\n-        } finally {\n-            if(customType!=null) {\n-                APILocator.getContentTypeAPI(APILocator.systemUser()).delete(customType);\n+        List<Tuple2<String, BaseContentType>> eeTypesList = eeTypes.stream().map((type)->\n+                        new Tuple2<>(\"my\"+type.variable(), type.baseType())).collect(Collectors.toList());\n+\n+        for (Tuple2<String, BaseContentType> testCase : eeTypesList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c8c769a7dd0b11a9634600d4f4cc7781de25915"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1390, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}