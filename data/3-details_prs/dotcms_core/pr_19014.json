{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5Njc4NDYy", "number": 19014, "title": "#18946 Bring back base-type fields", "bodyText": "Fields for each BaseType GraphQL Interface were brought back, but this time they are read from the ContentType inteface's getRequiredField method so the interface definitions can adapt to changes in them.\nThe map of Contentlet GraphQL Interface were moved to a seperate class to avoid circular dependencies between classes at initialization time.\nPostman tests were included per each BaseType Interface. They check that the proper fields are returned.", "createdAt": "2020-07-30T23:55:33Z", "url": "https://github.com/dotCMS/core/pull/19014", "merged": true, "mergeCommit": {"oid": "d21ad8c66ac49791eac817fe42da9a1049408dff"}, "closed": true, "closedAt": "2020-08-04T21:06:48Z", "author": {"login": "dsilvam"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6Il-2gH2gAyNDU5Njc4NDYyOmFlNjNiOGFmNzI1M2IzMjhlZGZmZjYzZjdlYjRiMzlmNmQ4ZTIwN2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7r4LzAFqTQ2MTExNDU3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ae63b8af7253b328edfff63f7eb4b39f6d8e207b", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/ae63b8af7253b328edfff63f7eb4b39f6d8e207b", "committedDate": "2020-07-30T23:54:25Z", "message": "#18946 Bring back base-type fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "938f0a57b96df2176bac50e6fd74bfa3aaee9335", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/938f0a57b96df2176bac50e6fd74bfa3aaee9335", "committedDate": "2020-07-31T23:33:04Z", "message": "#18946 Curl tests part I"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c63ed23052d92048664b674038c1707c25665fd", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/2c63ed23052d92048664b674038c1707c25665fd", "committedDate": "2020-07-31T23:33:22Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-18946-bring-back-graphql-fields-for-base-type-interfaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "728adadde5cd3cc57187adf422a1a9414a066722", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/728adadde5cd3cc57187adf422a1a9414a066722", "committedDate": "2020-08-03T18:16:01Z", "message": "#18946 Last set of postman tests. Re-add fields for DotAsset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3c781de522ba250e69f04c4a5b14ae14b63a0a9", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/d3c781de522ba250e69f04c4a5b14ae14b63a0a9", "committedDate": "2020-08-03T19:02:13Z", "message": "#18946 codacy feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d7fcc1a66e77daed2928537252931681dea50ec", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/0d7fcc1a66e77daed2928537252931681dea50ec", "committedDate": "2020-08-03T21:19:18Z", "message": "#18946 exporting graphql tests again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzUwODg2", "url": "https://github.com/dotCMS/core/pull/19014#pullrequestreview-460350886", "createdAt": "2020-08-03T21:24:22Z", "commit": {"oid": "0d7fcc1a66e77daed2928537252931681dea50ec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzU2MDgy", "url": "https://github.com/dotCMS/core/pull/19014#pullrequestreview-460356082", "createdAt": "2020-08-03T21:34:24Z", "commit": {"oid": "0d7fcc1a66e77daed2928537252931681dea50ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMTozNDoyNFrOG7JeGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMTozNDoyNFrOG7JeGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY3NDMyOA==", "bodyText": "Nitpick:\nNo constant for this field?", "url": "https://github.com/dotCMS/core/pull/19014#discussion_r464674328", "createdAt": "2020-08-03T21:34:24Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/ContentFields.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.dotcms.graphql;\n+\n+import static com.dotcms.content.elasticsearch.constants.ESMappingConstants.BASE_TYPE;\n+import static com.dotcms.content.elasticsearch.constants.ESMappingConstants.CONTENT_TYPE;\n+import static com.dotcms.content.elasticsearch.constants.ESMappingConstants.IDENTIFIER;\n+import static com.dotcms.content.elasticsearch.constants.ESMappingConstants.INODE;\n+import static com.dotcms.content.elasticsearch.constants.ESMappingConstants.LIVE;\n+import static com.dotcms.content.elasticsearch.constants.ESMappingConstants.MOD_DATE;\n+import static com.dotcms.content.elasticsearch.constants.ESMappingConstants.TITLE;\n+import static com.dotcms.content.elasticsearch.constants.ESMappingConstants.URL_MAP;\n+import static com.dotcms.content.elasticsearch.constants.ESMappingConstants.WORKING;\n+import static com.dotmarketing.portlets.contentlet.model.Contentlet.ARCHIVED_KEY;\n+import static com.dotmarketing.portlets.contentlet.model.Contentlet.FOLDER_KEY;\n+import static com.dotmarketing.portlets.contentlet.model.Contentlet.HOST_KEY;\n+import static com.dotmarketing.portlets.contentlet.model.Contentlet.LOCKED_KEY;\n+import static com.dotmarketing.portlets.contentlet.model.Contentlet.MOD_USER_KEY;\n+import static com.dotmarketing.portlets.contentlet.model.Contentlet.OWNER_KEY;\n+import static com.dotmarketing.portlets.contentlet.model.Contentlet.TITLE_IMAGE_KEY;\n+import static graphql.Scalars.GraphQLBoolean;\n+import static graphql.Scalars.GraphQLID;\n+import static graphql.Scalars.GraphQLString;\n+\n+import com.dotcms.graphql.datafetcher.FolderFieldDataFetcher;\n+import com.dotcms.graphql.datafetcher.LanguageDataFetcher;\n+import com.dotcms.graphql.datafetcher.SiteFieldDataFetcher;\n+import com.dotcms.graphql.datafetcher.TitleImageFieldDataFetcher;\n+import com.dotcms.graphql.datafetcher.UserDataFetcher;\n+import com.dotcms.graphql.util.TypeUtil.TypeFetcher;\n+import graphql.schema.GraphQLTypeReference;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Utility class that defines and returns the available fields for the {@link InterfaceType#CONTENTLET}\n+ */\n+public final class ContentFields {\n+\n+    private ContentFields() {}\n+\n+    public static Map<String, TypeFetcher> getContentFields() {\n+        final Map<String, TypeFetcher> contentFields = new HashMap<>();\n+        contentFields.put(MOD_DATE, new TypeFetcher(GraphQLString));\n+        contentFields.put(TITLE, new TypeFetcher(GraphQLString));\n+        contentFields.put(TITLE_IMAGE_KEY, new TypeFetcher(GraphQLTypeReference.typeRef(\"Binary\"), new TitleImageFieldDataFetcher()));\n+        contentFields.put(CONTENT_TYPE, new TypeFetcher(GraphQLString));\n+        contentFields.put(BASE_TYPE, new TypeFetcher(GraphQLString));\n+        contentFields.put(LIVE, new TypeFetcher(GraphQLBoolean));\n+        contentFields.put(WORKING, new TypeFetcher(GraphQLBoolean));\n+        contentFields.put(ARCHIVED_KEY, new TypeFetcher(GraphQLBoolean));\n+        contentFields.put(LOCKED_KEY, new TypeFetcher(GraphQLBoolean));\n+        contentFields.put(\"conLanguage\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Language\"), new LanguageDataFetcher()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7fcc1a66e77daed2928537252931681dea50ec"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzU4NjY3", "url": "https://github.com/dotCMS/core/pull/19014#pullrequestreview-460358667", "createdAt": "2020-08-03T21:39:16Z", "commit": {"oid": "0d7fcc1a66e77daed2928537252931681dea50ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMTozOToxN1rOG7JmEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMTozOToxN1rOG7JmEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY3NjM2OA==", "bodyText": "Nitpick: to match every other field, can we declare it in the same order? That is: private static final...", "url": "https://github.com/dotCMS/core/pull/19014#discussion_r464676368", "createdAt": "2020-08-03T21:39:17Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/InterfaceType.java", "diffHunk": "@@ -62,15 +48,15 @@\n     FORM(FormContentType.class),\n     DOTASSET(DotAssetContentType.class);\n \n-    private Class<? extends ContentType> baseContentType;\n+    final private Class<? extends ContentType> baseContentType;\n \n     InterfaceType(final Class<? extends ContentType> baseContentType) {\n         this.baseContentType = baseContentType;\n     }\n \n     public static Set<String> CONTENT_INTERFACE_FIELDS = new HashSet<>();\n \n-    private static Map<String, GraphQLInterfaceType> interfaceTypes = new HashMap<>();\n+    final private static Map<String, GraphQLInterfaceType> interfaceTypes = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7fcc1a66e77daed2928537252931681dea50ec"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baaca74e6d66dd4a28c2fce4af74c1278a9fcb6e", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/baaca74e6d66dd4a28c2fce4af74c1278a9fcb6e", "committedDate": "2020-08-03T21:51:48Z", "message": "#18946 code-review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e09acbac4e60b285282528632a925f63be3192c", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/2e09acbac4e60b285282528632a925f63be3192c", "committedDate": "2020-08-03T23:32:40Z", "message": "#18946 better tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76074deb19660440f3a6970132f1887aa9ada885", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/76074deb19660440f3a6970132f1887aa9ada885", "committedDate": "2020-08-04T18:36:56Z", "message": "#18946 postman tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13ca4c75b00bab15023b664fd51dc44d10fd8afb", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/13ca4c75b00bab15023b664fd51dc44d10fd8afb", "committedDate": "2020-08-04T19:27:57Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-18946-bring-back-graphql-fields-for-base-type-interfaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTE0NTQ4", "url": "https://github.com/dotCMS/core/pull/19014#pullrequestreview-461114548", "createdAt": "2020-08-04T19:34:53Z", "commit": {"oid": "13ca4c75b00bab15023b664fd51dc44d10fd8afb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTozNDo1M1rOG7usGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTozNDo1M1rOG7usGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4NDEyMw==", "bodyText": "Codacy found an issue: This statement should have braces", "url": "https://github.com/dotCMS/core/pull/19014#discussion_r465284123", "createdAt": "2020-08-04T19:34:53Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/InterfaceType.java", "diffHunk": "@@ -110,32 +79,55 @@\n         interfaceTypes.put(\"CONTENT\", createInterfaceType(CONTENT_INTERFACE_NAME, contentFields, new ContentResolver()));\n \n         final Map<String, TypeFetcher> fileAssetFields = new HashMap<>(contentFields);\n+        addBaseTypeFields(fileAssetFields, ImmutableFileAssetContentType.builder().name(\"dummy\")\n+                .build().requiredFields());\n         interfaceTypes.put(\"FILEASSET\", createInterfaceType(FILE_INTERFACE_NAME, fileAssetFields, new ContentResolver()));\n \n         final Map<String, TypeFetcher> pageAssetFields = new HashMap<>(contentFields);\n+        addBaseTypeFields(pageAssetFields, ImmutablePageContentType.builder().name(\"dummy\")\n+                .build().requiredFields());\n         interfaceTypes.put(\"HTMLPAGE\", createInterfaceType(PAGE_INTERFACE_NAME, pageAssetFields, new ContentResolver()));\n \n         final Map<String, TypeFetcher> personaFields = new HashMap<>(contentFields);\n+        addBaseTypeFields(personaFields, ImmutablePersonaContentType.builder().name(\"dummy\")\n+                .build().requiredFields());\n         interfaceTypes.put(\"PERSONA\", createInterfaceType(PERSONA_INTERFACE_NAME, personaFields, new ContentResolver()));\n \n         final Map<String, TypeFetcher> widgetFields = new HashMap<>(contentFields);\n+        addBaseTypeFields(widgetFields, ImmutableWidgetContentType.builder().name(\"dummy\")\n+                .build().requiredFields());\n         interfaceTypes.put(\"WIDGET\", createInterfaceType(WIDGET_INTERFACE_NAME, widgetFields, new ContentResolver()));\n \n         final Map<String, TypeFetcher> vanityUrlFields = new HashMap<>(contentFields);\n+        addBaseTypeFields(vanityUrlFields, ImmutableVanityUrlContentType.builder().name(\"dummy\")\n+                .build().requiredFields());\n         interfaceTypes.put(\"VANITY_URL\", createInterfaceType(VANITY_URL_INTERFACE_NAME, vanityUrlFields, new ContentResolver()));\n \n         final Map<String, TypeFetcher> keyValueFields = new HashMap<>(contentFields);\n+        addBaseTypeFields(keyValueFields, ImmutableKeyValueContentType.builder().name(\"dummy\")\n+                .build().requiredFields());\n         interfaceTypes.put(\"KEY_VALUE\", createInterfaceType(KEY_VALUE_INTERFACE_NAME, keyValueFields, new ContentResolver()));\n \n         final Map<String, TypeFetcher> formFields = new HashMap<>(contentFields);\n-        interfaceTypes.put(\"FORM\", createInterfaceType(FORM_INTERFACE_NAME, formFields, new ContentResolver()));\n+        addBaseTypeFields(formFields, ImmutableFormContentType.builder().name(\"dummy\")\n+                .build().requiredFields());\n+        interfaceTypes.put(\"FORM\", createInterfaceType(FORM_INTERFACE_NAME, formFields,\n+                new ContentResolver()));\n \n         final Map<String, TypeFetcher> dotAssetFields = new HashMap<>(contentFields);\n+        addBaseTypeFields(dotAssetFields, ImmutableDotAssetContentType.builder().name(\"dummy\")\n+                .build().requiredFields());\n         interfaceTypes.put(\"DOTASSET\", createInterfaceType(DOTASSET_INTERFACE_NAME, dotAssetFields, new ContentResolver()));\n     }\n \n-    public static Map<String, TypeFetcher> getContentFields() {\n-        return contentFields;\n+    private static void addBaseTypeFields(Map<String, TypeFetcher> baseTypeFields,\n+            List<Field> requiredFormFields) {\n+        for (final Field formField : requiredFormFields) {\n+            if(!formField.fixed()) continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13ca4c75b00bab15023b664fd51dc44d10fd8afb"}, "originalPosition": 161}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTE0NTcw", "url": "https://github.com/dotCMS/core/pull/19014#pullrequestreview-461114570", "createdAt": "2020-08-04T19:34:54Z", "commit": {"oid": "13ca4c75b00bab15023b664fd51dc44d10fd8afb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTozNDo1NFrOG7usMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTozNDo1NFrOG7usMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4NDE0Nw==", "bodyText": "Codacy found an issue: The String literal \"dummy\" appears 7 times in this file; the first occurrence is on line 81", "url": "https://github.com/dotCMS/core/pull/19014#discussion_r465284147", "createdAt": "2020-08-04T19:34:54Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/InterfaceType.java", "diffHunk": "@@ -110,32 +79,55 @@\n         interfaceTypes.put(\"CONTENT\", createInterfaceType(CONTENT_INTERFACE_NAME, contentFields, new ContentResolver()));\n \n         final Map<String, TypeFetcher> fileAssetFields = new HashMap<>(contentFields);\n+        addBaseTypeFields(fileAssetFields, ImmutableFileAssetContentType.builder().name(\"dummy\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13ca4c75b00bab15023b664fd51dc44d10fd8afb"}, "originalPosition": 114}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 692, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}