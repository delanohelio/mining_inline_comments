{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNTgwMTU3", "number": 19294, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNTo1NToxMFrOEpGNtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjo0MTo1NVrOEtsoPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTI4ODg1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/content/elasticsearch/business/ContentletIndexAPIImplTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNTo1NToxMFrOHakaCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzozMTozMVrOHaoOwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYyMTUxNQ==", "bodyText": "Just curious, is it OK to throw an exception here? It's because I've seen some places the expression assertTrue(opt.isPresent()) is used in tests.", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497621515", "createdAt": "2020-09-30T15:55:10Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/content/elasticsearch/business/ContentletIndexAPIImplTest.java", "diffHunk": "@@ -603,13 +604,19 @@ public void testSearch () throws Exception {\n \n         //*****************************************************************\n         //Build a site search result in order to add it to the index\n-        ContentletVersionInfo versionInfo = APILocator.getVersionableAPI().getContentletVersionInfo(testHtmlPage.getIdentifier(), testHtmlPage.getLanguageId());\n+        Optional<ContentletVersionInfo> versionInfo = APILocator.getVersionableAPI().getContentletVersionInfo(testHtmlPage.getIdentifier(), testHtmlPage.getLanguageId());\n+\n+        if(!versionInfo.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29fd8c3a002dfb9be3ba3adaf76816eee61668f5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY4NDE2MA==", "bodyText": "I will do that instead. Good call", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497684160", "createdAt": "2020-09-30T17:31:31Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/integration-test/java/com/dotcms/content/elasticsearch/business/ContentletIndexAPIImplTest.java", "diffHunk": "@@ -603,13 +604,19 @@ public void testSearch () throws Exception {\n \n         //*****************************************************************\n         //Build a site search result in order to add it to the index\n-        ContentletVersionInfo versionInfo = APILocator.getVersionableAPI().getContentletVersionInfo(testHtmlPage.getIdentifier(), testHtmlPage.getLanguageId());\n+        Optional<ContentletVersionInfo> versionInfo = APILocator.getVersionableAPI().getContentletVersionInfo(testHtmlPage.getIdentifier(), testHtmlPage.getLanguageId());\n+\n+        if(!versionInfo.isPresent()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYyMTUxNQ=="}, "originalCommit": {"oid": "29fd8c3a002dfb9be3ba3adaf76816eee61668f5"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTM3OTgwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/business/ESContentletAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjoxNjoxMVrOHalS2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjoxNjoxMVrOHalS2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYzNjA1OQ==", "bodyText": "Can we use Optional.empty() instead?", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497636059", "createdAt": "2020-09-30T16:16:11Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/business/ESContentletAPIImpl.java", "diffHunk": "@@ -8074,15 +8077,15 @@ public boolean canLock(final Contentlet contentlet, final User user, final boole\n                     +\" does not have Edit Permissions to lock content: \" + (contentlet != null ? contentlet.getIdentifier() : \"Unknown\"));\n         }\n \n-        String lockedBy = null;\n+        Optional<String> lockedBy = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29fd8c3a002dfb9be3ba3adaf76816eee61668f5"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTQ3NjgyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/business/VersionableAPIImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo0MDoyM1rOHamQAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzozODo0OVrOHaoe1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1MTcxMg==", "bodyText": "Shouldn't we check also for info.getIdentifier()is set?", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497651712", "createdAt": "2020-09-30T16:40:23Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/business/VersionableAPIImpl.java", "diffHunk": "@@ -543,22 +541,23 @@ public void setWorking(final Versionable versionable) throws DotDataException, D\n         if(identifier.getAssetType().equals(\"contentlet\")) {\n \n             final Contentlet contentlet = (Contentlet)versionable;\n-            ContentletVersionInfo info = versionableFactory\n+            Optional<ContentletVersionInfo> info = versionableFactory\n                     .getContentletVersionInfo(contentlet.getIdentifier(), contentlet.getLanguageId());\n \n-            if(info ==null || !UtilMethods.isSet(info.getIdentifier())) {\n+            if(!info.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29fd8c3a002dfb9be3ba3adaf76816eee61668f5"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY4ODI3OQ==", "bodyText": "Good review here", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497688279", "createdAt": "2020-09-30T17:38:49Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotmarketing/business/VersionableAPIImpl.java", "diffHunk": "@@ -543,22 +541,23 @@ public void setWorking(final Versionable versionable) throws DotDataException, D\n         if(identifier.getAssetType().equals(\"contentlet\")) {\n \n             final Contentlet contentlet = (Contentlet)versionable;\n-            ContentletVersionInfo info = versionableFactory\n+            Optional<ContentletVersionInfo> info = versionableFactory\n                     .getContentletVersionInfo(contentlet.getIdentifier(), contentlet.getLanguageId());\n \n-            if(info ==null || !UtilMethods.isSet(info.getIdentifier())) {\n+            if(!info.isPresent()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1MTcxMg=="}, "originalCommit": {"oid": "29fd8c3a002dfb9be3ba3adaf76816eee61668f5"}, "originalPosition": 180}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTUwODM0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/business/VersionableAPIImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo0ODozNFrOHamkDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzo0MTowMVrOHaojxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1Njg0Ng==", "bodyText": "Shouldn't we check for contentletVersionInfo.get().getLiveInode() to be set?", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497656846", "createdAt": "2020-09-30T16:48:34Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/business/VersionableAPIImpl.java", "diffHunk": "@@ -690,10 +707,11 @@ public boolean hasLiveVersion(final Versionable versionable) throws DotDataExcep\n \n \t\tif(versionable instanceof Contentlet) {\n \n-\t\t\tfinal ContentletVersionInfo contentletVersionInfo = this.getContentletVersionInfo\n+\t\t\tfinal Optional<ContentletVersionInfo> contentletVersionInfo = this.getContentletVersionInfo\n                     (versionable.getVersionId(), ((Contentlet) versionable).getLanguageId());\n \n-\t\t\treturn (contentletVersionInfo != null && UtilMethods.isSet(contentletVersionInfo.getLiveInode()));\n+\t\t\treturn (contentletVersionInfo.isPresent()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29fd8c3a002dfb9be3ba3adaf76816eee61668f5"}, "originalPosition": 341}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY4OTU0Mg==", "bodyText": "We are! but it is on the next line", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497689542", "createdAt": "2020-09-30T17:41:01Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotmarketing/business/VersionableAPIImpl.java", "diffHunk": "@@ -690,10 +707,11 @@ public boolean hasLiveVersion(final Versionable versionable) throws DotDataExcep\n \n \t\tif(versionable instanceof Contentlet) {\n \n-\t\t\tfinal ContentletVersionInfo contentletVersionInfo = this.getContentletVersionInfo\n+\t\t\tfinal Optional<ContentletVersionInfo> contentletVersionInfo = this.getContentletVersionInfo\n                     (versionable.getVersionId(), ((Contentlet) versionable).getLanguageId());\n \n-\t\t\treturn (contentletVersionInfo != null && UtilMethods.isSet(contentletVersionInfo.getLiveInode()));\n+\t\t\treturn (contentletVersionInfo.isPresent()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1Njg0Ng=="}, "originalCommit": {"oid": "29fd8c3a002dfb9be3ba3adaf76816eee61668f5"}, "originalPosition": 341}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTcyODk1OnYy", "diffSide": "RIGHT", "path": "dotCMS/gradle.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzo0NjoxNFrOHaovbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzo0NjoxNFrOHaovbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY5MjUyNg==", "bodyText": "This will be removed after approvals", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497692526", "createdAt": "2020-09-30T17:46:14Z", "author": {"login": "dsilvam"}, "path": "dotCMS/gradle.properties", "diffHunk": "@@ -1,4 +1,4 @@\n-dotcmsReleaseVersion=master\n+dotcmsReleaseVersion=issue-18550-SNAPSHOT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926fc58c8460252418bcb80ca49156f2729f63af"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTkwMzY3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/resources/it-dotmarketing-config.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNjoxNFrOHaqc7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNjoxNFrOHaqc7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDU1Nw==", "bodyText": "Get rid of this file", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497720557", "createdAt": "2020-09-30T18:36:14Z", "author": {"login": "wezell"}, "path": "dotCMS/src/integration-test/resources/it-dotmarketing-config.properties", "diffHunk": "@@ -61,12 +61,12 @@ ASSET_PATH = /assets\n ##\tshared folder in unix/linux enviroments we encourage you to use symbolic links\n ##\tIf this variable is commented the system will work as usual using\n ##\tthe ASSET_PATH variable as the assets directory inside liferay web root\n-ASSET_REAL_PATH = /tomcat8/webapps/ROOT/assets\n+ASSET_REAL_PATH=/Users/danielsilva/Documents/test-data/assets\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926fc58c8460252418bcb80ca49156f2729f63af"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTkwNDQyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/resources/oracle-db-config.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNjoyOVrOHaqdZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNjoyOVrOHaqdZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDY3Ng==", "bodyText": "get rid of this file", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497720676", "createdAt": "2020-09-30T18:36:29Z", "author": {"login": "wezell"}, "path": "dotCMS/src/integration-test/resources/oracle-db-config.properties", "diffHunk": "@@ -1,6 +1,6 @@\n #Oracle Connection\n driverClassName=oracle.jdbc.OracleDriver\n-jdbcUrl=jdbc:oracle:thin:@database:1521:XE\n+jdbcUrl=jdbc:oracle:thin:@localhost:1521:XE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926fc58c8460252418bcb80ca49156f2729f63af"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTkwNDg1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/resources/postgres-db-config.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNjozNVrOHaqdog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNjozNVrOHaqdog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDczOA==", "bodyText": "get rid of this file", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497720738", "createdAt": "2020-09-30T18:36:35Z", "author": {"login": "wezell"}, "path": "dotCMS/src/integration-test/resources/postgres-db-config.properties", "diffHunk": "@@ -1,8 +1,8 @@\n #Postgres Connection\n driverClassName=org.postgresql.Driver\n-jdbcUrl=jdbc:postgresql://database/dotcms\n+jdbcUrl=jdbc:postgresql://localhost/dotcms_test\n username=postgres\n-password=postgres\n+password=root", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926fc58c8460252418bcb80ca49156f2729f63af"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTkwODUyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/business/ESContentFactoryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNzo0MFrOHaqfyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNzo0MFrOHaqfyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMTI5MA==", "bodyText": "if(verInfo.isPresent() ) should be enough", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497721290", "createdAt": "2020-09-30T18:37:40Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/business/ESContentFactoryImpl.java", "diffHunk": "@@ -613,15 +613,16 @@ protected void delete(List<Contentlet> contentlets, boolean deleteIdentifier) th\n             if(InodeUtils.isSet(con.getInode())){\n                 APILocator.getPermissionAPI().removePermissions(con);\n \n-                ContentletVersionInfo verInfo=APILocator.getVersionableAPI().getContentletVersionInfo(con.getIdentifier(), con.getLanguageId());\n-                if(verInfo!=null && UtilMethods.isSet(verInfo.getIdentifier())) {\n-                    if(UtilMethods.isSet(verInfo.getLiveInode()) && verInfo.getLiveInode().equals(con.getInode()))\n+                Optional<ContentletVersionInfo> verInfo=APILocator.getVersionableAPI().getContentletVersionInfo(con.getIdentifier(), con.getLanguageId());\n+\n+                if(verInfo.isPresent() && UtilMethods.isSet(verInfo.get().getIdentifier())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926fc58c8460252418bcb80ca49156f2729f63af"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTkwOTMzOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/business/ESContentFactoryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNzo1MlrOHaqgSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNzo1MlrOHaqgSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMTQxNg==", "bodyText": "if(cvi.isPresent() ) should be enough", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497721416", "createdAt": "2020-09-30T18:37:52Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/business/ESContentFactoryImpl.java", "diffHunk": "@@ -1033,12 +1034,13 @@ protected Contentlet find(final String inode) throws ElasticsearchException, Dot\n \n \t@Override\n \tprotected Contentlet findContentletByIdentifier(String identifier, Boolean live, Long languageId) throws DotDataException {\n-        final ContentletVersionInfo cvi = APILocator.getVersionableAPI().getContentletVersionInfo(identifier, languageId);\n-        if(cvi == null  || UtilMethods.isEmpty(cvi.getIdentifier()) || (live && UtilMethods.isEmpty(cvi.getLiveInode()))) {\n+        final Optional<ContentletVersionInfo> cvi = APILocator.getVersionableAPI().getContentletVersionInfo(identifier, languageId);\n+        if(!cvi.isPresent() || UtilMethods.isEmpty(cvi.get().getIdentifier())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926fc58c8460252418bcb80ca49156f2729f63af"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTkxNDkxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/publisher/util/DependencySet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozOTozMlrOHaqjxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozOTozMlrOHaqjxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMjMwOA==", "bodyText": "if(info.isPresent()) should be enough", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r497722308", "createdAt": "2020-09-30T18:39:32Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/java/com/dotcms/publisher/util/DependencySet.java", "diffHunk": "@@ -188,9 +188,12 @@ private boolean addOrClean ( final String assetId, final Date assetModDate, fina\n \t\t\t\t\tif(!modifiedOnCurrentEnv && assetType.equals(\"content\")) {\n \t\t\t\t\t\t// check for versionInfo TS on content\n \t\t\t\t\t\tfor(Language lang : APILocator.getLanguageAPI().getLanguages()) {\n-\t\t\t\t\t\t\tContentletVersionInfo info=APILocator.getVersionableAPI().getContentletVersionInfo(assetId, lang.getId());\n-\t\t\t\t\t\t\tif(info!=null && InodeUtils.isSet(info.getIdentifier())) {\n-\t\t\t\t\t\t\t\tmodifiedOnCurrentEnv = modifiedOnCurrentEnv || (null == info.getVersionTs()) || asset.getPushDate().before(info.getVersionTs());\n+\t\t\t\t\t\t\tOptional<ContentletVersionInfo> info=APILocator.getVersionableAPI().getContentletVersionInfo(assetId, lang.getId());\n+\n+\t\t\t\t\t\t\tif(info.isPresent() && InodeUtils.isSet(info.get().getIdentifier())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "926fc58c8460252418bcb80ca49156f2729f63af"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzUyNTUzOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/directive/ContentletDetail.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjo0MTo1M1rOHhozWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjo0MTo1M1rOHhozWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAzMzU2MQ==", "bodyText": "Codacy found an issue: Avoid declaring a variable if it is unreferenced before a possible exit point.", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r505033561", "createdAt": "2020-10-14T22:41:53Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/directive/ContentletDetail.java", "diffHunk": "@@ -32,20 +33,25 @@ public String getName() {\n \n \n     private long resolveLang(final String identifier, final RenderParams params) {\n-        ContentletVersionInfo cv;\n+        Optional<ContentletVersionInfo> versionInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2980c0b63a2061c3d009865424c447d8d38fcf0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzUyNTY1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/transform/FatContentletTransformer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjo0MTo1NFrOHhozcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjo0MTo1NFrOHhozcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAzMzU4Nw==", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.util.Map.Entry'", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r505033587", "createdAt": "2020-10-14T22:41:54Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/transform/FatContentletTransformer.java", "diffHunk": "@@ -0,0 +1,221 @@\n+package com.dotmarketing.portlets.contentlet.transform;\n+\n+import com.dotcms.util.ConversionUtils;\n+import com.dotcms.util.transform.DBTransformer;\n+import com.dotmarketing.portlets.contentlet.business.Contentlet;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2980c0b63a2061c3d009865424c447d8d38fcf0"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzUyNTcyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/business/VersionableFactoryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjo0MTo1NVrOHhozfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjo0MTo1NVrOHhozfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAzMzU5OA==", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/19294#discussion_r505033598", "createdAt": "2020-10-14T22:41:55Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/business/VersionableFactoryImpl.java", "diffHunk": "@@ -278,92 +304,121 @@ protected void saveVersionInfo(VersionInfo info, boolean updateVersionTS) throws\n     }\n \n     @Override\n-    protected ContentletVersionInfo getContentletVersionInfo(String identifier, long lang) throws DotDataException, DotStateException {\n+    protected Optional<ContentletVersionInfo> getContentletVersionInfo(String identifier, long lang) throws DotDataException, DotStateException {\n         if (DbConnectionFactory.inTransaction()) {\n             return findContentletVersionInfoInDB(identifier, lang);\n         }\n-        ContentletVersionInfo contv = this.icache.getContentVersionInfo(identifier, lang);\n-        if(contv!=null && fourOhFour.equals(contv.getWorkingInode())) {\n-        \treturn null;\n-        }else if(contv!=null ){\n-        \treturn contv;\n+        ContentletVersionInfo contentVersionInfo = this.icache.getContentVersionInfo(identifier, lang);\n+        if(contentVersionInfo!=null && fourOhFour.equals(contentVersionInfo.getWorkingInode())) {\n+        \treturn Optional.empty();\n+        }else if(contentVersionInfo!=null ){\n+        \treturn Optional.of(contentVersionInfo);\n         }\n \n-    \tcontv = findContentletVersionInfoInDB(identifier, lang);\n-        if(contv!=null && UtilMethods.isSet(contv.getIdentifier())){\n-        \tthis.icache.addContentletVersionInfoToCache(contv);\n+    \tfinal Optional<ContentletVersionInfo> optionalInfo = findContentletVersionInfoInDB(identifier, lang);\n+        if(optionalInfo.isPresent()){\n+        \tthis.icache.addContentletVersionInfoToCache(optionalInfo.get());\n         }else{\n-        \tcontv = new ContentletVersionInfo();\n-        \tcontv.setIdentifier(identifier);\n-        \tcontv.setLang(lang);\n-        \tcontv.setWorkingInode(fourOhFour);\n-        \tthis.icache.addContentletVersionInfoToCache(contv);\n-\t\t\treturn null;\n+        \tcontentVersionInfo = new ContentletVersionInfo();\n+        \tcontentVersionInfo.setIdentifier(identifier);\n+        \tcontentVersionInfo.setLang(lang);\n+        \tcontentVersionInfo.setWorkingInode(fourOhFour);\n+        \tthis.icache.addContentletVersionInfoToCache(contentVersionInfo);\n+\t\t\treturn Optional.empty();\n         }\n \n-        return contv;\n+        return optionalInfo;\n     }\n \n     @Override\n-    protected ContentletVersionInfo findContentletVersionInfoInDB(String identifier, long lang)throws DotDataException, DotStateException {\n-    \tContentletVersionInfo contv = null;\n-    \t HibernateUtil dh = new HibernateUtil(ContentletVersionInfo.class);\n-         dh.setQuery(\"from \"+ContentletVersionInfo.class.getName()+\" where identifier=? and lang=?\");\n-         dh.setParam(identifier);\n-         dh.setParam(lang);\n-         Logger.debug(this.getClass(), \"getContentletVersionInfo query: \"+dh.getQuery());\n-         contv = (ContentletVersionInfo)dh.load();\n-         return contv;\n+    protected Optional<ContentletVersionInfo> findContentletVersionInfoInDB(String identifier, long lang)throws DotDataException, DotStateException {\n+\t\tfinal DotConnect dotConnect = new DotConnect()\n+\t\t\t\t.setSQL(\"SELECT * FROM contentlet_version_info WHERE identifier=? AND lang=?\")\n+\t\t\t\t.addParam(identifier)\n+\t\t\t\t.addParam(lang);\n+\n+\t\tList<ContentletVersionInfo> versionInfos = TransformerLocator\n+\t\t\t\t.createContentletVersionInfoTransformer(dotConnect.loadObjectResults()).asList();\n+\n+\t\treturn !versionInfos.isEmpty() ? Optional.of(versionInfos.get(0)) : Optional.empty();\n     }\n     @Override\n     protected List<ContentletVersionInfo> findAllContentletVersionInfos(final String identifier)throws DotDataException, DotStateException {\n+        final DotConnect dotConnect = new DotConnect()\n+                .setSQL(\"SELECT * FROM contentlet_version_info WHERE identifier=?\")\n+                .addParam(identifier);\n \n-         HibernateUtil dh = new HibernateUtil(ContentletVersionInfo.class);\n-         dh.setQuery(\"from \"+ContentletVersionInfo.class.getName()+\" where identifier=? \");\n-         dh.setParam(identifier);\n+        List<ContentletVersionInfo> versionInfos = TransformerLocator\n+                .createContentletVersionInfoTransformer(dotConnect.loadObjectResults()).asList();\n \n-         Logger.debug(this.getClass(), \"getContentletVersionInfo query: \"+dh.getQuery());\n-         return (List<ContentletVersionInfo>)dh.list();\n+\t\treturn versionInfos==null || versionInfos.isEmpty()\n+\t\t\t\t? Collections.emptyList()\n+\t\t\t\t: versionInfos;\n \n     }\n     @Override\n     protected void saveContentletVersionInfo(ContentletVersionInfo cvInfo, boolean updateVersionTS) throws DotDataException, DotStateException {\n-    \tIdentifier ident = this.iapi.find(cvInfo.getIdentifier());\n-    \tContentletVersionInfo vi= null;\n-    \tif(ident!=null && InodeUtils.isSet(ident.getId())){\n-    \t\tvi= findContentletVersionInfoInDB(ident.getId(), cvInfo.getLang());\n-    \t}\n-    \tboolean isNew = vi==null || !InodeUtils.isSet(vi.getIdentifier());\n-        try {\n-\t\t\tBeanUtils.copyProperties(vi, cvInfo);\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new DotDataException(e.getMessage(),e);\n+\t\tboolean isNew = true;\n+\t\tif (UtilMethods.isSet(cvInfo.getIdentifier())) {\n+\t\t\ttry {\n+\t\t\t\tfinal Optional<ContentletVersionInfo> fromDB =\n+\t\t\t\t\t\tfindContentletVersionInfoInDB(cvInfo.getIdentifier(), cvInfo.getLang());\n+\t\t\t\tif (fromDB.isPresent()) {\n+\t\t\t\t\tisNew = false;\n+\t\t\t\t}\n+\t\t\t} catch (final Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2980c0b63a2061c3d009865424c447d8d38fcf0"}, "originalPosition": 193}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1890, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}