{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNjY5MDYz", "number": 19327, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDo0NTozOFrOEnNoaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxOVrOErvSKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTUzMjU2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/ContentResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDo0NTozOFrOHXsAHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDo0NTozOFrOHXsAHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYwMDIyMw==", "bodyText": "I would use the ContentletAPI.indexCount here, rather than return results and count them", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r494600223", "createdAt": "2020-09-24T20:45:38Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/java/com/dotcms/rest/ContentResource.java", "diffHunk": "@@ -113,6 +119,90 @@\n     private final WebResource webResource = new WebResource();\n     private final ContentHelper contentHelper = ContentHelper.getInstance();\n \n+    /**\n+     *\n+     * Do a search, parameter are received by post and returns the json with the search info and contentlet results\n+     *\n+     * Example call using curl:\n+     * curl --location --request POST 'http://localhost:8080/api/content/_search' \\\n+     * --header 'Content-Type: application/json' \\\n+     * --data-raw '{\n+     *      \t \"query\": \"+structurename:webpagecontent\",\n+     *       \t \"sort\":\"modDate\",\n+     *       \t \"limit\":20,\n+     *       \t \"offset\":0,\n+     *           \"userId\":\"dotcms.org.1\"\n+     * }'\n+     *\n+     * @param request {@link HttpServletRequest} object\n+     * @param response {@link HttpServletResponse} object\n+     * @param searchForm {@link SearchForm}\n+     * @return json array of objects. each object with inode and identifier\n+     */\n+    @POST\n+    @Path(\"/_search\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response search(@Context HttpServletRequest request,\n+                           @Context final HttpServletResponse response,\n+                           final SearchForm searchForm) throws DotSecurityException, DotDataException {\n+\n+        final InitDataObject initData = this.webResource.init\n+                (null, request, response, false, null);\n+\n+        final User   user    = initData.getUser();\n+        final String query   = searchForm.getQuery(); // \"\"\n+        final String sort    = searchForm.getSort(); // \"\"\n+        final int    limit   = searchForm.getLimit();  // 20\n+        final int    offset  = searchForm.getOffset(); // 0\n+        final PageMode pageMode   = PageMode.get(request);\n+        final String userToPullID = searchForm.getUserId();\n+        final String tmDate = (String) request.getSession().getAttribute(\"tm_date\");\n+        User   userForPull        = user;\n+        List<ContentletSearch> contentletSearches = Collections.emptyList();\n+        List<Contentlet>       contentlets        = Collections.emptyList();\n+        long startAPISearchPull = 0;\n+        long afterAPISearchPull = 0;\n+        long startAPIPull = 0;\n+        long afterAPIPull = 0;\n+\n+        Logger.debug(this, ()-> \"Searching contentlets by: \" + searchForm);\n+\n+        if(null != user && user.isAdmin()){\n+\n+            if(UtilMethods.isSet(userToPullID)) {\n+\n+                userForPull = APILocator.getUserAPI().loadUserById(userToPullID, APILocator.systemUser(),true);\n+            }\n+        }\n+\n+        if (UtilMethods.isSet(query)) {\n+\n+            startAPISearchPull = Calendar.getInstance().getTimeInMillis();\n+            contentletSearches = APILocator.getContentletAPI().searchIndex(query, limit, offset, sort, userForPull, pageMode.respectAnonPerms);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0a62821f0452434dd2439496155d8a031c2ac5"}, "originalPosition": 156}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTU0MDQ2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/ContentResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDo0ODowNVrOHXsE3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDo0ODowNVrOHXsE3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYwMTQzNw==", "bodyText": "This needs to be run through the getJSON method so the results will match the existing api\n                result = getJSON(contentlets, request, response, render, user, depth,\n                        respectFrontendRoles, language, live, allCategoriesInfo);", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r494601437", "createdAt": "2020-09-24T20:48:05Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/java/com/dotcms/rest/ContentResource.java", "diffHunk": "@@ -113,6 +119,90 @@\n     private final WebResource webResource = new WebResource();\n     private final ContentHelper contentHelper = ContentHelper.getInstance();\n \n+    /**\n+     *\n+     * Do a search, parameter are received by post and returns the json with the search info and contentlet results\n+     *\n+     * Example call using curl:\n+     * curl --location --request POST 'http://localhost:8080/api/content/_search' \\\n+     * --header 'Content-Type: application/json' \\\n+     * --data-raw '{\n+     *      \t \"query\": \"+structurename:webpagecontent\",\n+     *       \t \"sort\":\"modDate\",\n+     *       \t \"limit\":20,\n+     *       \t \"offset\":0,\n+     *           \"userId\":\"dotcms.org.1\"\n+     * }'\n+     *\n+     * @param request {@link HttpServletRequest} object\n+     * @param response {@link HttpServletResponse} object\n+     * @param searchForm {@link SearchForm}\n+     * @return json array of objects. each object with inode and identifier\n+     */\n+    @POST\n+    @Path(\"/_search\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response search(@Context HttpServletRequest request,\n+                           @Context final HttpServletResponse response,\n+                           final SearchForm searchForm) throws DotSecurityException, DotDataException {\n+\n+        final InitDataObject initData = this.webResource.init\n+                (null, request, response, false, null);\n+\n+        final User   user    = initData.getUser();\n+        final String query   = searchForm.getQuery(); // \"\"\n+        final String sort    = searchForm.getSort(); // \"\"\n+        final int    limit   = searchForm.getLimit();  // 20\n+        final int    offset  = searchForm.getOffset(); // 0\n+        final PageMode pageMode   = PageMode.get(request);\n+        final String userToPullID = searchForm.getUserId();\n+        final String tmDate = (String) request.getSession().getAttribute(\"tm_date\");\n+        User   userForPull        = user;\n+        List<ContentletSearch> contentletSearches = Collections.emptyList();\n+        List<Contentlet>       contentlets        = Collections.emptyList();\n+        long startAPISearchPull = 0;\n+        long afterAPISearchPull = 0;\n+        long startAPIPull = 0;\n+        long afterAPIPull = 0;\n+\n+        Logger.debug(this, ()-> \"Searching contentlets by: \" + searchForm);\n+\n+        if(null != user && user.isAdmin()){\n+\n+            if(UtilMethods.isSet(userToPullID)) {\n+\n+                userForPull = APILocator.getUserAPI().loadUserById(userToPullID, APILocator.systemUser(),true);\n+            }\n+        }\n+\n+        if (UtilMethods.isSet(query)) {\n+\n+            startAPISearchPull = Calendar.getInstance().getTimeInMillis();\n+            contentletSearches = APILocator.getContentletAPI().searchIndex(query, limit, offset, sort, userForPull, pageMode.respectAnonPerms);\n+            afterAPISearchPull = Calendar.getInstance().getTimeInMillis();\n+\n+            startAPIPull       = Calendar.getInstance().getTimeInMillis();\n+            contentlets        = ContentUtils.pull(processQuery(query), offset, limit, sort, user, tmDate, pageMode.respectAnonPerms)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0a62821f0452434dd2439496155d8a031c2ac5"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTU0NDQzOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/ContentResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDo0OToxNFrOHXsHOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDo0OToxNFrOHXsHOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYwMjA0MA==", "bodyText": "Missing the render param too", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r494602040", "createdAt": "2020-09-24T20:49:14Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/java/com/dotcms/rest/ContentResource.java", "diffHunk": "@@ -113,6 +119,90 @@\n     private final WebResource webResource = new WebResource();\n     private final ContentHelper contentHelper = ContentHelper.getInstance();\n \n+    /**\n+     *\n+     * Do a search, parameter are received by post and returns the json with the search info and contentlet results\n+     *\n+     * Example call using curl:\n+     * curl --location --request POST 'http://localhost:8080/api/content/_search' \\\n+     * --header 'Content-Type: application/json' \\\n+     * --data-raw '{\n+     *      \t \"query\": \"+structurename:webpagecontent\",\n+     *       \t \"sort\":\"modDate\",\n+     *       \t \"limit\":20,\n+     *       \t \"offset\":0,\n+     *           \"userId\":\"dotcms.org.1\"\n+     * }'\n+     *\n+     * @param request {@link HttpServletRequest} object\n+     * @param response {@link HttpServletResponse} object\n+     * @param searchForm {@link SearchForm}\n+     * @return json array of objects. each object with inode and identifier\n+     */\n+    @POST\n+    @Path(\"/_search\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response search(@Context HttpServletRequest request,\n+                           @Context final HttpServletResponse response,\n+                           final SearchForm searchForm) throws DotSecurityException, DotDataException {\n+\n+        final InitDataObject initData = this.webResource.init\n+                (null, request, response, false, null);\n+\n+        final User   user    = initData.getUser();\n+        final String query   = searchForm.getQuery(); // \"\"\n+        final String sort    = searchForm.getSort(); // \"\"\n+        final int    limit   = searchForm.getLimit();  // 20\n+        final int    offset  = searchForm.getOffset(); // 0\n+        final PageMode pageMode   = PageMode.get(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0a62821f0452434dd2439496155d8a031c2ac5"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mjk4ODYxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxMFrOHerOIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxMFrOHerOIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzQ1Nw==", "bodyText": "Codacy found an issue: Field userId has the same name as a method", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927457", "createdAt": "2020-10-08T18:27:10Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;\n+        private  @JsonProperty String userId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mjk4ODY3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxMlrOHerOKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxMlrOHerOKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzQ2Nw==", "bodyText": "Codacy found an issue: Avoid using redundant field initializer for 'limit'", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927467", "createdAt": "2020-10-08T18:27:12Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mjk4ODc4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxM1rOHerOOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxM1rOHerOOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzQ4Mg==", "bodyText": "Codacy found an issue: Field offset has the same name as a method", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927482", "createdAt": "2020-10-08T18:27:13Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mjk4ODg1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxNFrOHerORg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxNFrOHerORg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzQ5NA==", "bodyText": "Codacy found an issue: Field query has the same name as a method", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927494", "createdAt": "2020-10-08T18:27:14Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mjk4ODg3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxNVrOHerOSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxNVrOHerOSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzQ5OQ==", "bodyText": "Codacy found an issue: Field languageId has the same name as a method", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927499", "createdAt": "2020-10-08T18:27:15Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;\n+        private  @JsonProperty String userId;\n+        private  @JsonProperty String render;\n+        private  @JsonProperty int depth       = -1;\n+        private  @JsonProperty long languageId = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mjk4ODkxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxNlrOHerOUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxNlrOHerOUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzUwNw==", "bodyText": "Codacy found an issue: Field render has the same name as a method", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927507", "createdAt": "2020-10-08T18:27:16Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;\n+        private  @JsonProperty String userId;\n+        private  @JsonProperty String render;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mjk4ODk5OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxNlrOHerOXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxNlrOHerOXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzUxOQ==", "bodyText": "Codacy found an issue: Field limit has the same name as a method", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927519", "createdAt": "2020-10-08T18:27:16Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mjk4OTAyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxN1rOHerOag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxN1rOHerOag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzUzMA==", "bodyText": "Codacy found an issue: Field sort has the same name as a method", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927530", "createdAt": "2020-10-08T18:27:17Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mjk4OTEyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxOFrOHerOdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxOFrOHerOdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzU0MQ==", "bodyText": "Codacy found an issue: Field allCategoriesInfo has the same name as a method", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927541", "createdAt": "2020-10-08T18:27:18Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;\n+        private  @JsonProperty String userId;\n+        private  @JsonProperty String render;\n+        private  @JsonProperty int depth       = -1;\n+        private  @JsonProperty long languageId = -1;\n+        private  @JsonProperty boolean allCategoriesInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mjk4OTIyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxOVrOHerOhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoyNzoxOVrOHerOhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzU1Nw==", "bodyText": "Codacy found an issue: Field depth has the same name as a method", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927557", "createdAt": "2020-10-08T18:27:19Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;\n+        private  @JsonProperty String userId;\n+        private  @JsonProperty String render;\n+        private  @JsonProperty int depth       = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1903, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}