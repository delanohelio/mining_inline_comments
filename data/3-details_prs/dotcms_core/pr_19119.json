{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MTIxMjQ4", "number": 19119, "title": "#19108 viewAs field for the GraphQL Page API", "bodyText": "In this PR the implementation of the field viewAs for the GraphQL Page API is done. The field acts similar to the viewAs field returned in the REST Page API https://demo.dotcms.com/api/v1/page/json/destinations/costa-rica.", "createdAt": "2020-08-17T23:43:51Z", "url": "https://github.com/dotCMS/core/pull/19119", "merged": true, "mergeCommit": {"oid": "54b4713cee6c89a2a0622c8924df1eb177ab7131"}, "closed": true, "closedAt": "2020-08-24T17:12:41Z", "author": {"login": "dsilvam"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_7OUagH2gAyNDY5MTIxMjQ4OjcyYmQyNzY5MDliZjY1ZDgzZDhkNDc4YTJkMmQ3YTE2MTIxYTk3ZjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCF4JOAFqTQ3MzY5ODgwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "72bd276909bf65d83d8d478a2d2d7a16121a97f3", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/72bd276909bf65d83d8d478a2d2d7a16121a97f3", "committedDate": "2020-08-17T23:43:21Z", "message": "#19108 first draft"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6787cb5fd92dac04bc418140187f52de1861a42e", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/6787cb5fd92dac04bc418140187f52de1861a42e", "committedDate": "2020-08-19T02:22:10Z", "message": "#19108 rest of viewAs fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a149bb224c5547eb8ec722a7028f30da54a55e0", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/6a149bb224c5547eb8ec722a7028f30da54a55e0", "committedDate": "2020-08-19T23:32:14Z", "message": "#19108 more fields for viewAs and postman tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d6e6b4b5a69a9518bbfeb7af8adc32ef6652499", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/9d6e6b4b5a69a9518bbfeb7af8adc32ef6652499", "committedDate": "2020-08-20T17:39:01Z", "message": "#19108 add geolocation and finish postman tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/bb0ee76eff695b9ac02a28c2407509368112053b", "committedDate": "2020-08-20T17:46:43Z", "message": "#19108 codacy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTA1ODk4", "url": "https://github.com/dotCMS/core/pull/19119#pullrequestreview-471905898", "createdAt": "2020-08-20T19:11:21Z", "commit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOToxMToyMVrOHEPgsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOToxMjoyNFrOHEPi1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMDQ4Mw==", "bodyText": "javadoc?", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474210483", "createdAt": "2020-08-20T19:11:21Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMDU0Mg==", "bodyText": "any test?", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474210542", "createdAt": "2020-08-20T19:11:28Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {\n+\n+    @Override\n+    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMTAzMA==", "bodyText": "any test?", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474211030", "createdAt": "2020-08-20T19:12:24Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/HTMLPageAssetRenderedAPIImpl.java", "diffHunk": "@@ -230,6 +236,23 @@ public PageMode getDefaultEditPageMode(\n         }\n     }\n \n+    @Override\n+    public ViewAsPageStatus getViewAsStatus(final HttpServletRequest request,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dff804debb3b34a7f42514bd13774932c0da3cf6", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/dff804debb3b34a7f42514bd13774932c0da3cf6", "committedDate": "2020-08-20T19:48:22Z", "message": "#19108 javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTM3OTk3", "url": "https://github.com/dotCMS/core/pull/19119#pullrequestreview-471937997", "createdAt": "2020-08-20T19:51:24Z", "commit": {"oid": "dff804debb3b34a7f42514bd13774932c0da3cf6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a402bef91250061ea313a320a6088e616b06a109", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/a402bef91250061ea313a320a6088e616b06a109", "committedDate": "2020-08-20T19:57:16Z", "message": "#19108 restore normal value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3911995cc0ed67638fee2639ba96e6a9f474388", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/a3911995cc0ed67638fee2639ba96e6a9f474388", "committedDate": "2020-08-21T21:51:31Z", "message": "Update DeviceAPI.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b9d006da2be937f9e6f4710bb7f523e12a3e265", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/5b9d006da2be937f9e6f4710bb7f523e12a3e265", "committedDate": "2020-08-24T15:16:13Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-19108-implement-view-as-field-graphql-page-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "752e607d9e4936c1807e4750ca063f814cfb4aa0", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/752e607d9e4936c1807e4750ca063f814cfb4aa0", "committedDate": "2020-08-24T15:17:50Z", "message": "#19108 fix postman test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f755aff12f701b4506ea86915c119eddf82f9d4", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/1f755aff12f701b4506ea86915c119eddf82f9d4", "committedDate": "2020-08-24T15:19:00Z", "message": "Merge branch 'issue-19108-implement-view-as-field-graphql-page-api' of github.com:dotCMS/core into issue-19108-implement-view-as-field-graphql-page-api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNjY4NjM1", "url": "https://github.com/dotCMS/core/pull/19119#pullrequestreview-473668635", "createdAt": "2020-08-24T16:34:57Z", "commit": {"oid": "1f755aff12f701b4506ea86915c119eddf82f9d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNjozNDo1N1rOHFtJRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNjozNDo1N1rOHFtJRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc0NDU4Mw==", "bodyText": "Is it OK to return null?", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475744583", "createdAt": "2020-08-24T16:34:57Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {\n+\n+    @Override\n+    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)\n+            throws DotDataException {\n+        final String currentDeviceId = (String) request.getSession().\n+                getAttribute(WebKeys.CURRENT_DEVICE);\n+        Contentlet currentDevice = null;\n+\n+        try {\n+            if (currentDeviceId != null) {\n+                currentDevice = APILocator.getContentletAPI().find(currentDeviceId, user,\n+                        false);\n+\n+                if (currentDevice == null) {\n+                    request.getSession().removeAttribute(WebKeys.CURRENT_DEVICE);\n+                }\n+            }\n+        } catch (DotSecurityException e) {\n+            Logger.debug(this.getClass(),\n+                    \"Exception on createViewAsMap exception message: \" + e.getMessage(), e);\n+        }\n+\n+        return currentDevice;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f755aff12f701b4506ea86915c119eddf82f9d4"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/7578e27380659564d45c1d0caa7dfe54fb6eb5ce", "committedDate": "2020-08-24T17:02:44Z", "message": "#19108 return optional"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNjkzNjk1", "url": "https://github.com/dotCMS/core/pull/19119#pullrequestreview-473693695", "createdAt": "2020-08-24T17:09:06Z", "commit": {"oid": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNjk4NzYy", "url": "https://github.com/dotCMS/core/pull/19119#pullrequestreview-473698762", "createdAt": "2020-08-24T17:15:55Z", "commit": {"oid": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzoxNTo1NVrOHFuq_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzoxNTo1NVrOHFuq_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2OTU5OQ==", "bodyText": "Codacy found an issue: The String literal \"persona\" appears 5 times in this file; the first occurrence is on line 137", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475769599", "createdAt": "2020-08-24T17:15:55Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -114,7 +126,111 @@\n \n         typeMap.put(\"Template\", TypeUtil.createObjectType(\"Template\", templateFields));\n \n+        final Map<String, TypeFetcher> viewAsFields = new HashMap<>();\n+        viewAsFields.put(\"visitor\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Visitor\"),\n+                new PropertyDataFetcher<ViewAsPageStatus>(\"visitor\")));\n+        viewAsFields.put(\"language\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Language\"),\n+                new LanguageDataFetcher()));\n+        viewAsFields.put(\"mode\", new TypeFetcher(GraphQLString,\n+                PropertyDataFetcher.fetching((Function<ViewAsPageStatus, String>)\n+                        (viewAs)->viewAs.getPageMode().name())));\n+        viewAsFields.put(\"persona\", new TypeFetcher(GraphQLTypeReference.typeRef(\"PersonaBaseType\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNjk4ODA0", "url": "https://github.com/dotCMS/core/pull/19119#pullrequestreview-473698804", "createdAt": "2020-08-24T17:15:56Z", "commit": {"oid": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzoxNTo1NlrOHFurDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzoxNTo1NlrOHFurDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2OTYxMg==", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475769612", "createdAt": "2020-08-24T17:15:56Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ViewAsDataFetcher.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.page.ViewAsPageStatus;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * This DataFetcher returns a {@link Map} representing a {@link Template} associated to the originally\n+ * requested {@link HTMLPageAsset}.\n+ */\n+public class ViewAsDataFetcher implements DataFetcher<ViewAsPageStatus> {\n+    @Override\n+    public ViewAsPageStatus get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final User user = ((DotGraphQLContext) environment.getContext()).getUser();\n+            final Contentlet contentlet = environment.getSource();\n+            final String pageModeAsString = environment.getArgument(\"pageMode\")\n+                    != null ? environment.getArgument(\"pageMode\") : PageMode.LIVE.name();\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+\n+            final HttpServletRequest request = ((DotGraphQLContext) environment.getContext())\n+                    .getHttpServletRequest();\n+\n+            final HTMLPageAsset pageAsset = APILocator.getHTMLPageAssetAPI()\n+                    .fromContentlet(contentlet);\n+\n+            return APILocator.getHTMLPageAssetRenderedAPI().getViewAsStatus(request,\n+                    mode, pageAsset, user);\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 747, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}