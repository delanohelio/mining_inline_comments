{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNTY1MTUy", "number": 18899, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTowMDozOFrOEPkbJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzo0NDoyMFrOETgf6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzYwODY4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTowMDozOFrOGzWbvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTowMDozOFrOGzWbvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ5ODEwOA==", "bodyText": "param field could be marked final too.", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r456498108", "createdAt": "2020-07-17T15:00:38Z", "author": {"login": "fabrizzio-dotCMS"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -92,6 +95,30 @@ public void addCustomMapping(final String indexName) {\n         addMappingForRemainingFields(indexName, mappedFields);\n     }\n \n+    /**\n+     * Sets an ES mapping for a {@link Field} (it does not include field variables) on a specified index.\n+     * This method is used when a new field is created\n+     * @param indexName - Index where mapping will be applied\n+     * @param field\n+     * @throws DotSecurityException\n+     * @throws DotDataException\n+     * @throws IOException\n+     * @throws JSONException\n+     */\n+    @CloseDBIfOpened\n+    public void addCustomMapping(final String indexName, Field field)\n+            throws DotSecurityException, DotDataException, IOException, JSONException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f2dd69fe252c9e0681a936796d6bbfa5a681b7c"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzY3MjcxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNToxNzowMlrOGzXCYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjozNTozMFrOG5Av5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwODAwMA==", "bodyText": "codacy already recommended using StringBuilder here and I like that but I think is more maintainable doing something like :\nmappingForField =  String.format(\"{\\n\"type\":\"%s\"\\n}\",fieldType);\nand pass fieldType. That way we can have that string format declared just once.\nand the fieldType can be returned out of function so the function I imagine could use a static map and look like this:\nImmutableMap.of(\nDataTypes.BOOL,DataTypes.BOOL.toString().toLowercase(),   //Could do something like this \nDataTypes.FLOAT, \"float\",   //or simply\nDataTypes.INTEGER, \"integer\"\n) ;\n\nI've seen that Using maps like this to eliminate nested ifs. Is called the anti-if pattern.", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r456508000", "createdAt": "2020-07-17T15:17:02Z", "author": {"login": "fabrizzio-dotCMS"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -298,6 +301,61 @@ private void addMappingForFieldIfNeeded(final String indexName,\n         }\n     }\n \n+    /**\n+     * Given a {@link Field}, obtains the ES mapping according to the {@link Field} type\n+     * @param field\n+     * @param fieldVariableName\n+     * @return\n+     */\n+    private String getMappingForField(final Field field, final String fieldVariableName) {\n+        String mappingForField = null;\n+        if (field instanceof DateField || field instanceof DateTimeField\n+                || field instanceof TimeField) {\n+            mappingForField = \"{\\n\\\"type\\\":\\\"date\\\",\\n\";\n+            mappingForField += \"\\\"format\\\": \\\"yyyy-MM-dd't'HH:mm:ss||MMM d, yyyy h:mm:ss a||yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis\\\"\\n}\";\n+        } else if (field instanceof TextField || field instanceof TextAreaField\n+                || field instanceof WysiwygField || field instanceof RadioField\n+                || field instanceof SelectField) {\n+            if (field.dataType() == DataTypes.BOOL) {\n+                mappingForField = \"{\\n\\\"type\\\":\\\"boolean\\\"\\n}\";\n+            } else if (field.dataType() == DataTypes.FLOAT) {\n+                mappingForField = \"{\\n\\\"type\\\":\\\"float\\\"\\n}\";\n+            } else if (field.dataType() == DataTypes.INTEGER) {\n+                mappingForField = \"{\\n\\\"type\\\":\\\"integer\\\"\\n}\";\n+            } else if (!matchesExclusions(fieldVariableName)){\n+                mappingForField = \"{\\n\\\"type\\\":\\\"text\\\"\\n}\";\n+            }\n+        }\n+        return mappingForField;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f2dd69fe252c9e0681a936796d6bbfa5a681b7c"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQzNDI3Ng==", "bodyText": "Good suggestion. Done!", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r462434276", "createdAt": "2020-07-29T16:35:30Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -298,6 +301,61 @@ private void addMappingForFieldIfNeeded(final String indexName,\n         }\n     }\n \n+    /**\n+     * Given a {@link Field}, obtains the ES mapping according to the {@link Field} type\n+     * @param field\n+     * @param fieldVariableName\n+     * @return\n+     */\n+    private String getMappingForField(final Field field, final String fieldVariableName) {\n+        String mappingForField = null;\n+        if (field instanceof DateField || field instanceof DateTimeField\n+                || field instanceof TimeField) {\n+            mappingForField = \"{\\n\\\"type\\\":\\\"date\\\",\\n\";\n+            mappingForField += \"\\\"format\\\": \\\"yyyy-MM-dd't'HH:mm:ss||MMM d, yyyy h:mm:ss a||yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis\\\"\\n}\";\n+        } else if (field instanceof TextField || field instanceof TextAreaField\n+                || field instanceof WysiwygField || field instanceof RadioField\n+                || field instanceof SelectField) {\n+            if (field.dataType() == DataTypes.BOOL) {\n+                mappingForField = \"{\\n\\\"type\\\":\\\"boolean\\\"\\n}\";\n+            } else if (field.dataType() == DataTypes.FLOAT) {\n+                mappingForField = \"{\\n\\\"type\\\":\\\"float\\\"\\n}\";\n+            } else if (field.dataType() == DataTypes.INTEGER) {\n+                mappingForField = \"{\\n\\\"type\\\":\\\"integer\\\"\\n}\";\n+            } else if (!matchesExclusions(fieldVariableName)){\n+                mappingForField = \"{\\n\\\"type\\\":\\\"text\\\"\\n}\";\n+            }\n+        }\n+        return mappingForField;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwODAwMA=="}, "originalCommit": {"oid": "6f2dd69fe252c9e0681a936796d6bbfa5a681b7c"}, "originalPosition": 206}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzcyMDU3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/contenttype/business/FieldAPITest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNToyOTo0NVrOGzXfsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMDo1MDo0OVrOG4ktqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxNTUwNg==", "bodyText": "maybe we can test other data types and their expected mapping", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r456515506", "createdAt": "2020-07-17T15:29:45Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/integration-test/java/com/dotcms/contenttype/business/FieldAPITest.java", "diffHunk": "@@ -1357,6 +1362,129 @@ public void test_SaveField_GivenGraphQLCompatibleVariable_ShouldSave(\n         }\n     }\n \n+    /**\n+     * <b>Method to test:</b> {@link FieldAPIImpl#save(Field, User)}\n+     * <p>\n+     * <b>Given scenario:</b> A new {@link Field} is saved and marked as `indexed=false`\n+     * <p>\n+     * <b>Expected result:</b> The field should be saved without ES mapping\n+     */\n+    @Test\n+    public void test_SaveNewNoIndexedField_ShouldNotAddESMapping()\n+            throws DotSecurityException, DotDataException, IOException {\n+        final long time = System.currentTimeMillis();\n+        final ContentType type = new ContentTypeDataGen().nextPersisted();\n+        try {\n+            Field field = FieldBuilder.builder(DateField.class)\n+                    .name(\"field\" + time)\n+                    .variable(\"field\" + time)\n+                    .contentTypeId(type.id())\n+                    .indexed(false)\n+                    .build();\n+            field = fieldAPI.save(field, user);\n+\n+            final IndiciesInfo indiciesInfo = APILocator.getIndiciesAPI().loadIndicies();\n+            final ESMappingAPIImpl mappingAPI = new ESMappingAPIImpl();\n+\n+            //verify mapping on working index\n+            Map<String, Object> mapping = mappingAPI\n+                    .getFieldMappingAsMap(indiciesInfo.getWorking(),\n+                            (type.variable() + StringPool.PERIOD + field.variable()));\n+            assertFalse(UtilMethods.isSet(mapping));\n+\n+            //verify mapping on live index\n+            mapping = mappingAPI\n+                    .getFieldMappingAsMap(indiciesInfo.getLive(),\n+                            (type.variable() + StringPool.PERIOD + field.variable()));\n+            assertFalse(UtilMethods.isSet(mapping));\n+        }finally{\n+            ContentTypeDataGen.remove(type);\n+        }\n+    }\n+\n+    /**\n+     * <b>Method to test:</b> {@link FieldAPIImpl#save(Field, User)}\n+     * <p>\n+     * <b>Given scenario:</b> A new {@link DateField} is saved and marked as `indexed=true`\n+     * <p>\n+     * <b>Expected result:</b> The field should be saved and mapped in ES with `type=date`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "865e245e37cdcd1dd585097cfb5eb20cd09ac02e"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk3NDk1NQ==", "bodyText": "those cases have been already tested", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r461974955", "createdAt": "2020-07-29T00:50:49Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/integration-test/java/com/dotcms/contenttype/business/FieldAPITest.java", "diffHunk": "@@ -1357,6 +1362,129 @@ public void test_SaveField_GivenGraphQLCompatibleVariable_ShouldSave(\n         }\n     }\n \n+    /**\n+     * <b>Method to test:</b> {@link FieldAPIImpl#save(Field, User)}\n+     * <p>\n+     * <b>Given scenario:</b> A new {@link Field} is saved and marked as `indexed=false`\n+     * <p>\n+     * <b>Expected result:</b> The field should be saved without ES mapping\n+     */\n+    @Test\n+    public void test_SaveNewNoIndexedField_ShouldNotAddESMapping()\n+            throws DotSecurityException, DotDataException, IOException {\n+        final long time = System.currentTimeMillis();\n+        final ContentType type = new ContentTypeDataGen().nextPersisted();\n+        try {\n+            Field field = FieldBuilder.builder(DateField.class)\n+                    .name(\"field\" + time)\n+                    .variable(\"field\" + time)\n+                    .contentTypeId(type.id())\n+                    .indexed(false)\n+                    .build();\n+            field = fieldAPI.save(field, user);\n+\n+            final IndiciesInfo indiciesInfo = APILocator.getIndiciesAPI().loadIndicies();\n+            final ESMappingAPIImpl mappingAPI = new ESMappingAPIImpl();\n+\n+            //verify mapping on working index\n+            Map<String, Object> mapping = mappingAPI\n+                    .getFieldMappingAsMap(indiciesInfo.getWorking(),\n+                            (type.variable() + StringPool.PERIOD + field.variable()));\n+            assertFalse(UtilMethods.isSet(mapping));\n+\n+            //verify mapping on live index\n+            mapping = mappingAPI\n+                    .getFieldMappingAsMap(indiciesInfo.getLive(),\n+                            (type.variable() + StringPool.PERIOD + field.variable()));\n+            assertFalse(UtilMethods.isSet(mapping));\n+        }finally{\n+            ContentTypeDataGen.remove(type);\n+        }\n+    }\n+\n+    /**\n+     * <b>Method to test:</b> {@link FieldAPIImpl#save(Field, User)}\n+     * <p>\n+     * <b>Given scenario:</b> A new {@link DateField} is saved and marked as `indexed=true`\n+     * <p>\n+     * <b>Expected result:</b> The field should be saved and mapped in ES with `type=date`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxNTUwNg=="}, "originalCommit": {"oid": "865e245e37cdcd1dd585097cfb5eb20cd09ac02e"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzEzMTMxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/contenttype/business/FieldAPITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjo0NToyOFrOG5BGvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjo0NToyOFrOG5BGvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ0MDEyNQ==", "bodyText": "Codacy found an issue: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r462440125", "createdAt": "2020-07-29T16:45:28Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/contenttype/business/FieldAPITest.java", "diffHunk": "@@ -1390,6 +1395,129 @@ public void test_SaveField_GivenGraphQLCompatibleVariable_ShouldSave(\n         }\n     }\n \n+    /**\n+     * <b>Method to test:</b> {@link FieldAPIImpl#save(Field, User)}\n+     * <p>\n+     * <b>Given scenario:</b> A new {@link Field} is saved and marked as `indexed=false`\n+     * <p>\n+     * <b>Expected result:</b> The field should be saved without ES mapping\n+     */\n+    @Test\n+    public void test_SaveNewNoIndexedField_ShouldNotAddESMapping()\n+            throws DotSecurityException, DotDataException, IOException {\n+        final long time = System.currentTimeMillis();\n+        final ContentType type = new ContentTypeDataGen().nextPersisted();\n+        try {\n+            Field field = FieldBuilder.builder(DateField.class)\n+                    .name(\"field\" + time)\n+                    .variable(\"field\" + time)\n+                    .contentTypeId(type.id())\n+                    .indexed(false)\n+                    .build();\n+            field = fieldAPI.save(field, user);\n+\n+            final IndiciesInfo indiciesInfo = APILocator.getIndiciesAPI().loadIndicies();\n+            final ESMappingAPIImpl mappingAPI = new ESMappingAPIImpl();\n+\n+            //verify mapping on working index\n+            Map<String, Object> mapping = mappingAPI\n+                    .getFieldMappingAsMap(indiciesInfo.getWorking(),\n+                            (type.variable() + StringPool.PERIOD + field.variable()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3ae57cf2b864d61bf8c9177de6c040a920266e1"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzEzMTM5OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/contenttype/business/FieldAPITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjo0NToyOVrOG5BGyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjo0NToyOVrOG5BGyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ0MDEzOA==", "bodyText": "Codacy found an issue: The String literal \"type\" appears 8 times in this file; the first occurrence is on line 1,434", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r462440138", "createdAt": "2020-07-29T16:45:29Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/contenttype/business/FieldAPITest.java", "diffHunk": "@@ -1390,6 +1395,129 @@ public void test_SaveField_GivenGraphQLCompatibleVariable_ShouldSave(\n         }\n     }\n \n+    /**\n+     * <b>Method to test:</b> {@link FieldAPIImpl#save(Field, User)}\n+     * <p>\n+     * <b>Given scenario:</b> A new {@link Field} is saved and marked as `indexed=false`\n+     * <p>\n+     * <b>Expected result:</b> The field should be saved without ES mapping\n+     */\n+    @Test\n+    public void test_SaveNewNoIndexedField_ShouldNotAddESMapping()\n+            throws DotSecurityException, DotDataException, IOException {\n+        final long time = System.currentTimeMillis();\n+        final ContentType type = new ContentTypeDataGen().nextPersisted();\n+        try {\n+            Field field = FieldBuilder.builder(DateField.class)\n+                    .name(\"field\" + time)\n+                    .variable(\"field\" + time)\n+                    .contentTypeId(type.id())\n+                    .indexed(false)\n+                    .build();\n+            field = fieldAPI.save(field, user);\n+\n+            final IndiciesInfo indiciesInfo = APILocator.getIndiciesAPI().loadIndicies();\n+            final ESMappingAPIImpl mappingAPI = new ESMappingAPIImpl();\n+\n+            //verify mapping on working index\n+            Map<String, Object> mapping = mappingAPI\n+                    .getFieldMappingAsMap(indiciesInfo.getWorking(),\n+                            (type.variable() + StringPool.PERIOD + field.variable()));\n+            assertFalse(UtilMethods.isSet(mapping));\n+\n+            //verify mapping on live index\n+            mapping = mappingAPI\n+                    .getFieldMappingAsMap(indiciesInfo.getLive(),\n+                            (type.variable() + StringPool.PERIOD + field.variable()));\n+            assertFalse(UtilMethods.isSet(mapping));\n+        }finally{\n+            ContentTypeDataGen.remove(type);\n+        }\n+    }\n+\n+    /**\n+     * <b>Method to test:</b> {@link FieldAPIImpl#save(Field, User)}\n+     * <p>\n+     * <b>Given scenario:</b> A new {@link DateField} is saved and marked as `indexed=true`\n+     * <p>\n+     * <b>Expected result:</b> The field should be saved and mapped in ES with `type=date`\n+     */\n+    @Test\n+    public void test_SaveNewIndexedField_ShouldAddESMapping()\n+            throws DotSecurityException, DotDataException, IOException {\n+        final long time = System.currentTimeMillis();\n+        final ContentType type = new ContentTypeDataGen().nextPersisted();\n+        try {\n+            Field field = FieldBuilder.builder(DateField.class)\n+                    .name(\"field\" + time)\n+                    .variable(\"field\" + time)\n+                    .contentTypeId(type.id())\n+                    .indexed(true)\n+                    .build();\n+            field = fieldAPI.save(field, user);\n+\n+            final IndiciesInfo indiciesInfo = APILocator.getIndiciesAPI().loadIndicies();\n+            final ESMappingAPIImpl mappingAPI = new ESMappingAPIImpl();\n+\n+            //verify mapping on working index\n+            Map<String, String> mapping = (Map<String, String>) mappingAPI\n+                    .getFieldMappingAsMap(indiciesInfo.getWorking(),\n+                            (type.variable() + StringPool.PERIOD + field.variable())\n+                                    .toLowerCase()).get(field.variable());\n+            assertTrue(UtilMethods.isSet(mapping.get(\"type\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3ae57cf2b864d61bf8c9177de6c040a920266e1"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzEzMTQ1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/FieldAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjo0NTozMFrOG5BG1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjo0NTozMFrOG5BG1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ0MDE0OA==", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.io.IOException'", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r462440148", "createdAt": "2020-07-29T16:45:30Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/FieldAPIImpl.java", "diffHunk": "@@ -77,6 +79,7 @@\n import com.liferay.portal.language.LanguageUtil;\n import com.liferay.portal.model.User;\n \n+import java.io.IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3ae57cf2b864d61bf8c9177de6c040a920266e1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzEzMTQ4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjo0NTozMVrOG5BG2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjo0NTozMVrOG5BG2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ0MDE1NA==", "bodyText": "Codacy found an issue: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r462440154", "createdAt": "2020-07-29T16:45:31Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -299,6 +303,63 @@ private void addMappingForFieldIfNeeded(final String indexName,\n         }\n     }\n \n+    /**\n+     * Given a {@link Field}, obtains the ES mapping according to the {@link Field} type\n+     * @param field\n+     * @param fieldVariableName\n+     * @return\n+     */\n+    private String getMappingForField(final Field field, final String fieldVariableName) {\n+        final Map<DataTypes, String> dataTypesMap = ImmutableMap\n+                .of(DataTypes.BOOL, \"boolean\", DataTypes.FLOAT, \"float\", DataTypes.INTEGER,\n+                        \"integer\");\n+        String mappingForField = null;\n+        if (field instanceof DateField || field instanceof DateTimeField\n+                || field instanceof TimeField) {\n+            mappingForField = \"{\\n\\\"type\\\":\\\"date\\\",\\n\";\n+            mappingForField += \"\\\"format\\\": \\\"yyyy-MM-dd't'HH:mm:ss||MMM d, yyyy h:mm:ss a||yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis\\\"\\n}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3ae57cf2b864d61bf8c9177de6c040a920266e1"}, "originalPosition": 204}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODkwODU5OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzo0NDoyMFrOG5R_KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzo0NjowN1rOG5SA3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNjcxMg==", "bodyText": "I wonder if we should not use something such as\nJSONObjectBuilder()\n    .add(\"type\",\"keyword\")\n   .add(\"ignore_above\",8191).build()", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r462716712", "createdAt": "2020-07-30T03:44:20Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -132,6 +155,25 @@ private void addCustomMappingForRelationships(final String indexName,\n         }\n     }\n \n+    /**\n+     * Creates a json mapping for a relationship and saves it into the specified index\n+     * @param indexName - Index where the mapping will be saved (Full index name including cluster id)\n+     * @param relationshipName - Relationship to be indexed\n+     * @throws JSONException\n+     * @throws IOException\n+     */\n+    private void putRelationshipMapping(final String indexName, final String relationshipName)\n+            throws JSONException, IOException {\n+        final JSONObject properties = new JSONObject();\n+        properties.put(\"properties\", new JSONObject()\n+                .put(relationshipName,\n+                        new JSONObject(\"{\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3ae57cf2b864d61bf8c9177de6c040a920266e1"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNzE1MQ==", "bodyText": "It seems the JSONObject has already methods to do it. Not need to create any builder", "url": "https://github.com/dotCMS/core/pull/18899#discussion_r462717151", "createdAt": "2020-07-30T03:46:07Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -132,6 +155,25 @@ private void addCustomMappingForRelationships(final String indexName,\n         }\n     }\n \n+    /**\n+     * Creates a json mapping for a relationship and saves it into the specified index\n+     * @param indexName - Index where the mapping will be saved (Full index name including cluster id)\n+     * @param relationshipName - Relationship to be indexed\n+     * @throws JSONException\n+     * @throws IOException\n+     */\n+    private void putRelationshipMapping(final String indexName, final String relationshipName)\n+            throws JSONException, IOException {\n+        final JSONObject properties = new JSONObject();\n+        properties.put(\"properties\", new JSONObject()\n+                .put(relationshipName,\n+                        new JSONObject(\"{\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNjcxMg=="}, "originalCommit": {"oid": "c3ae57cf2b864d61bf8c9177de6c040a920266e1"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2048, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}