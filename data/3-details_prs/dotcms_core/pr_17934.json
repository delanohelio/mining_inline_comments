{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzAwNDYx", "number": 17934, "title": "#17727 New starter fixes", "bodyText": "Related to #17727\n\n\"Drop Old Assets Versions\" now drops workflow history records.\nChanging Logger.info's to debug (those infos were actually debug info)\nThe import starter process was unable to import Rules (and related tables) data", "createdAt": "2020-01-31T18:02:50Z", "url": "https://github.com/dotCMS/core/pull/17934", "merged": true, "mergeCommit": {"oid": "a7f81e2550b5b8c836c3af43733417d31a3e2577"}, "closed": true, "closedAt": "2020-02-03T19:16:48Z", "author": {"login": "jgambarios"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9SgymgH2gAyMzY5NzAwNDYxOjQ1YzkwY2NkZDRjZTNjZWEzNTc1MzJlNzAyNWYyMDg2MzgzNTZlNmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAxs6MgFqTM1MjQ4NjQzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "45c90ccdd4ce3cea357532e7025f208638356e6c", "author": {"user": null}, "url": "https://github.com/dotCMS/core/commit/45c90ccdd4ce3cea357532e7025f208638356e6c", "committedDate": "2020-01-23T22:58:25Z", "message": "\"Drop Old Assets Versions\" drops now workflow history records."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a96c01ba2f8bd0d503ea65b851ceb9885113a4da", "author": {"user": null}, "url": "https://github.com/dotCMS/core/commit/a96c01ba2f8bd0d503ea65b851ceb9885113a4da", "committedDate": "2020-01-29T14:18:37Z", "message": "Adding Jackson code in order to allow importing of rules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0e23ca34cc4026c449fcb839ce64e2a831dbfa6", "author": {"user": null}, "url": "https://github.com/dotCMS/core/commit/e0e23ca34cc4026c449fcb839ce64e2a831dbfa6", "committedDate": "2020-01-31T15:36:36Z", "message": "Changing Logger.info for debugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNjg2NDc3", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-351686477", "createdAt": "2020-01-31T18:18:04Z", "commit": {"oid": "e0e23ca34cc4026c449fcb839ce64e2a831dbfa6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98ac8f09912b39e20c979b8a3b565c6ae88ddaed", "author": {"user": null}, "url": "https://github.com/dotCMS/core/commit/98ac8f09912b39e20c979b8a3b565c6ae88ddaed", "committedDate": "2020-02-03T16:28:39Z", "message": "#17727 Codacy feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4", "author": {"user": null}, "url": "https://github.com/dotCMS/core/commit/4de8907e1b167e308d08945dc05182e92a1da2a4", "committedDate": "2020-02-03T16:43:06Z", "message": "#17727 Codacy feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0NjYz", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404663", "createdAt": "2020-02-03T16:51:43Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0M1rOFk4Zfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0M1rOFk4Zfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzA4Nw==", "bodyText": "Issue found: Avoid variables with short names like id", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217087", "createdAt": "2020-02-03T16:51:43Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/RuleComponentDefinition.java", "diffHunk": "@@ -26,7 +31,20 @@\n     private final Map<String, ParameterDefinition> parameterDefinitions;\n \n     protected RuleComponentDefinition(String i18nKey, ParameterDefinition... parameterDefinitions) {\n-        this.id = this.getClass().getSimpleName();\n+        this(null, i18nKey, parameterDefinitions);\n+    }\n+\n+    /**\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    protected RuleComponentDefinition(String id, String i18nKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0Njc3", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404677", "createdAt": "2020-02-03T16:51:44Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0NFrOFk4Ziw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0NFrOFk4Ziw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzA5OQ==", "bodyText": "Issue found: Avoid assignments in operands", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217099", "createdAt": "2020-02-03T16:51:44Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/util/RulesImportExportUtil.java", "diffHunk": "@@ -83,69 +68,69 @@ public void export(File file) throws IOException {\n \t\t}\n \t}\n \n-\t/**\n-\t * \n-\t * @param file\n-\t * @throws IOException\n-\t */\n-\tpublic void importRules(File file) throws IOException {\n+\tpublic void importRules(final File file) throws IOException {\n \n-\t\tRulesAPI rapi = APILocator.getRulesAPI();\n+\t\tfinal ObjectMapper mapper = new ObjectMapper();\n+\t\tfinal StringWriter stringWriter = new StringWriter();\n+\n+\t\ttry (BufferedReader bufferedReader = Files.newBufferedReader(Paths.get(file.toURI()))) {\n \n-\t\tBufferedReader in = null;\n-\t\ttry {\n-\t\t\tUser user = APILocator.getUserAPI().getSystemUser();\n-\t\t\tFileReader fstream = new FileReader(file);\n-\t\t\tin = new BufferedReader(fstream);\n-\t\t\tObjectMapper mapper = new ObjectMapper();\n \t\t\tmapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n-\t\t\tStringWriter sw = new StringWriter();\n+\n \t\t\tString str;\n-\t\t\twhile ((str = in.readLine()) != null) {\n-\t\t\t\tsw.append(str);\n+\t\t\twhile ((str = bufferedReader.readLine()) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 105}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0Njky", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404692", "createdAt": "2020-02-03T16:51:45Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0NVrOFk4Zlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0NVrOFk4Zlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzExMQ==", "bodyText": "Issue found: Parameter 'id' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217111", "createdAt": "2020-02-03T16:51:45Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/conditionlet/Conditionlet.java", "diffHunk": "@@ -3,12 +3,50 @@\n import com.dotmarketing.portlets.rules.RuleComponentDefinition;\n import com.dotmarketing.portlets.rules.RuleComponentInstance;\n import com.dotmarketing.portlets.rules.parameter.ParameterDefinition;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n \n public abstract class Conditionlet<T extends RuleComponentInstance> extends RuleComponentDefinition<T> {\n \n     public static final String COMPARISON_KEY = \"comparison\";\n \n+    /**\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    protected Conditionlet(String id, String i18nKey, final ParameterDefinition... parameterDefinitions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0NzA4", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404708", "createdAt": "2020-02-03T16:51:46Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0NlrOFk4ZpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0NlrOFk4ZpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzEyNQ==", "bodyText": "Issue found: Avoid variables with short names like id", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217125", "createdAt": "2020-02-03T16:51:46Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/parameter/type/DataType.java", "diffHunk": "@@ -77,5 +89,57 @@ public void checkValid(String value){\n     public Map<String, TypeConstraint> getConstraints() {\n         return ImmutableMap.copyOf(this.restrictions);\n     }\n-}\n- \n+\n+    /**\n+     * Utility type used to correctly read immutable object from JSON representation.\n+     *\n+     * @deprecated Do not use this type directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonDeserialize\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.NONE)\n+    @JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.NONE)\n+    static final class Json {\n+\n+        @javax.annotation.Nullable\n+        String id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0NzM0", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404734", "createdAt": "2020-02-03T16:51:48Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0OFrOFk4Zuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0OFrOFk4Zuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzE0Nw==", "bodyText": "Issue found: Parameter 'id' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217147", "createdAt": "2020-02-03T16:51:48Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/parameter/display/Input.java", "diffHunk": "@@ -32,5 +38,45 @@ public T getDataType() {\n     public void checkValid(String value)  throws InvalidRuleParameterException{\n     \treturn;\n     }\n-}\n \n+    /**\n+     * Utility type used to correctly read immutable object from JSON representation.\n+     *\n+     * @deprecated Do not use this type directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonDeserialize\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.NONE)\n+    @JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.NONE)\n+    static final class Json {\n+\n+        @javax.annotation.Nullable\n+        String id;\n+        @javax.annotation.Nullable\n+        DataType dataType;\n+\n+        @JsonProperty(\"id\")\n+        public void setKey(@Nullable String id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0NzQ2", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404746", "createdAt": "2020-02-03T16:51:49Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0OVrOFk4ZxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo0OVrOFk4ZxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzE1Ng==", "bodyText": "Issue found: Parameter 'parameters' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217156", "createdAt": "2020-02-03T16:51:49Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/conditionlet/Conditionlet.java", "diffHunk": "@@ -3,12 +3,50 @@\n import com.dotmarketing.portlets.rules.RuleComponentDefinition;\n import com.dotmarketing.portlets.rules.RuleComponentInstance;\n import com.dotmarketing.portlets.rules.parameter.ParameterDefinition;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n \n public abstract class Conditionlet<T extends RuleComponentInstance> extends RuleComponentDefinition<T> {\n \n     public static final String COMPARISON_KEY = \"comparison\";\n \n+    /**\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    protected Conditionlet(String id, String i18nKey, final ParameterDefinition... parameterDefinitions) {\n+        super(id, i18nKey, parameterDefinitions);\n+    }\n+\n     protected Conditionlet(String i18nKey, ParameterDefinition... parameterDefinitions) {\n         super(i18nKey, parameterDefinitions);\n     }\n-}\n+\n+    /**\n+     * @param json A JSON-bindable data structure\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)\n+    static Conditionlet fromJson(RuleComponentDefinition.Json json) {\n+\n+        return new Conditionlet(json.id, json.i18nKey,\n+                json.parameterDefinitions.values().toArray(new ParameterDefinition[]{})) {\n+\n+            @Override\n+            public RuleComponentInstance instanceFrom(Map parameters) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0NzU5", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404759", "createdAt": "2020-02-03T16:51:50Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1MFrOFk4ZzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1MFrOFk4ZzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzE2NQ==", "bodyText": "Issue found: Parameter 'dataType' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217165", "createdAt": "2020-02-03T16:51:50Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/parameter/display/Input.java", "diffHunk": "@@ -32,5 +38,45 @@ public T getDataType() {\n     public void checkValid(String value)  throws InvalidRuleParameterException{\n     \treturn;\n     }\n-}\n \n+    /**\n+     * Utility type used to correctly read immutable object from JSON representation.\n+     *\n+     * @deprecated Do not use this type directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonDeserialize\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.NONE)\n+    @JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.NONE)\n+    static final class Json {\n+\n+        @javax.annotation.Nullable\n+        String id;\n+        @javax.annotation.Nullable\n+        DataType dataType;\n+\n+        @JsonProperty(\"id\")\n+        public void setKey(@Nullable String id) {\n+            this.id = id;\n+        }\n+\n+        @JsonProperty(\"dataType\")\n+        public void setDataType(@Nullable DataType dataType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0Nzcx", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404771", "createdAt": "2020-02-03T16:51:51Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1MlrOFk4Z2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1MlrOFk4Z2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzE3Ng==", "bodyText": "Issue found: Parameter 'parent' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217176", "createdAt": "2020-02-03T16:51:52Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/util/RulesImportExportUtil.java", "diffHunk": "@@ -83,69 +68,69 @@ public void export(File file) throws IOException {\n \t\t}\n \t}\n \n-\t/**\n-\t * \n-\t * @param file\n-\t * @throws IOException\n-\t */\n-\tpublic void importRules(File file) throws IOException {\n+\tpublic void importRules(final File file) throws IOException {\n \n-\t\tRulesAPI rapi = APILocator.getRulesAPI();\n+\t\tfinal ObjectMapper mapper = new ObjectMapper();\n+\t\tfinal StringWriter stringWriter = new StringWriter();\n+\n+\t\ttry (BufferedReader bufferedReader = Files.newBufferedReader(Paths.get(file.toURI()))) {\n \n-\t\tBufferedReader in = null;\n-\t\ttry {\n-\t\t\tUser user = APILocator.getUserAPI().getSystemUser();\n-\t\t\tFileReader fstream = new FileReader(file);\n-\t\t\tin = new BufferedReader(fstream);\n-\t\t\tObjectMapper mapper = new ObjectMapper();\n \t\t\tmapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n-\t\t\tStringWriter sw = new StringWriter();\n+\n \t\t\tString str;\n-\t\t\twhile ((str = in.readLine()) != null) {\n-\t\t\t\tsw.append(str);\n+\t\t\twhile ((str = bufferedReader.readLine()) != null) {\n+\t\t\t\tstringWriter.append(str);\n \t\t\t}\n \n-\t\t\tRulesImportExportObject importer = mapper.readValue(sw.toString(), RulesImportExportObject.class);\n+\t\t\tRulesImportExportObject importer = mapper.readValue\n+\t\t\t\t\t((String) stringWriter.toString(), RulesImportExportObject.class);\n+\n+\t\t\tthis.importRules(importer, APILocator.systemUser());\n+\t\t} catch (Exception e) {\n+\t\t\tLogger.error(this.getClass(), \"Error: \" + e.getMessage(), e);\n+\t\t}\n+\t}\n+\n+\t@WrapInTransaction\n+\tpublic void importRules(final RulesImportExportObject importer,\n+\t\t\tfinal User user) throws IOException, DotDataException {\n+\n+\t\ttry {\n+\t\t\tfinal RulesAPI rulesAPI = APILocator.getRulesAPI();\n \n \t\t\t//Saving the rules.\n \t\t\tfor (Rule rule : importer.getRules()) {\n \t\t\t\trule.setParentPermissionable(RulePermissionableUtil.findParentPermissionable(rule.getParent()));\n-\t\t\t\trapi.saveRule(rule, user, false);\n+\t\t\t\trulesAPI.saveRule(rule, user, false);\n \n \t\t\t\t//Saving the Condition Groups.\n \t\t\t\tfor (ConditionGroup group : rule.getGroups()) {\n-\t\t\t\t\trapi.saveConditionGroup(group, user, false);\n+\t\t\t\t\trulesAPI.saveConditionGroup(group, user, false);\n \t\t\t\t\t//Saving the Condition for each group.\n \t\t\t\t\tfor (Condition condition : group.getConditions()) {\n-\t\t\t\t\t\trapi.saveCondition(condition, user, false);\n+\t\t\t\t\t\trulesAPI.saveCondition(condition, user, false);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t//Saving the Action.\n \t\t\t\tfor (RuleAction action : rule.getRuleActions()) {\n-\t\t\t\t\trapi.saveRuleAction(action, user, false);\n+\t\t\t\t\trulesAPI.saveRuleAction(action, user, false);\n \t\t\t\t}\n \t\t\t}\n-\n \t\t} catch (Exception e) {\n \t\t\tLogger.error(this.getClass(), \"Error: \" + e.getMessage(), e);\n-\t\t} finally {\n-\t\t\tin.close();\n+\t\t\tthrow new DotDataException(e);\n \t\t}\n \t}\n \n-\t/**\n-\t * \n-\t * @param parent\n-\t * @return\n-\t * @throws DotDataException\n-\t * @throws DotSecurityException\n-\t */\n-\tpublic RulesImportExportObject buildExportObject(Ruleable parent) throws DotDataException, DotSecurityException {\n+\t@CloseDBIfOpened\n+\tpublic RulesImportExportObject buildExportObject(Ruleable parent)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 166}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0Nzk4", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404798", "createdAt": "2020-02-03T16:51:53Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1M1rOFk4Z6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1M1rOFk4Z6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzE5NA==", "bodyText": "Issue found: Parameter 'parameterDefinitions' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217194", "createdAt": "2020-02-03T16:51:53Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/RuleComponentDefinition.java", "diffHunk": "@@ -26,7 +31,20 @@\n     private final Map<String, ParameterDefinition> parameterDefinitions;\n \n     protected RuleComponentDefinition(String i18nKey, ParameterDefinition... parameterDefinitions) {\n-        this.id = this.getClass().getSimpleName();\n+        this(null, i18nKey, parameterDefinitions);\n+    }\n+\n+    /**\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    protected RuleComponentDefinition(String id, String i18nKey,\n+            ParameterDefinition... parameterDefinitions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0ODEy", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404812", "createdAt": "2020-02-03T16:51:54Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1NFrOFk4Z9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1NFrOFk4Z9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzIwNQ==", "bodyText": "Issue found: Avoid reassigning parameters such as 'id'", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217205", "createdAt": "2020-02-03T16:51:54Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/RuleComponentDefinition.java", "diffHunk": "@@ -26,7 +31,20 @@\n     private final Map<String, ParameterDefinition> parameterDefinitions;\n \n     protected RuleComponentDefinition(String i18nKey, ParameterDefinition... parameterDefinitions) {\n-        this.id = this.getClass().getSimpleName();\n+        this(null, i18nKey, parameterDefinitions);\n+    }\n+\n+    /**\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    protected RuleComponentDefinition(String id, String i18nKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0ODI1", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404825", "createdAt": "2020-02-03T16:51:55Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1NVrOFk4Z-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1NVrOFk4Z-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzIxMA==", "bodyText": "Issue found: Avoid variables with short names like id", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217210", "createdAt": "2020-02-03T16:51:55Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/parameter/display/Input.java", "diffHunk": "@@ -32,5 +38,45 @@ public T getDataType() {\n     public void checkValid(String value)  throws InvalidRuleParameterException{\n     \treturn;\n     }\n-}\n \n+    /**\n+     * Utility type used to correctly read immutable object from JSON representation.\n+     *\n+     * @deprecated Do not use this type directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonDeserialize\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.NONE)\n+    @JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.NONE)\n+    static final class Json {\n+\n+        @javax.annotation.Nullable\n+        String id;\n+        @javax.annotation.Nullable\n+        DataType dataType;\n+\n+        @JsonProperty(\"id\")\n+        public void setKey(@Nullable String id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0ODQx", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404841", "createdAt": "2020-02-03T16:51:56Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1NlrOFk4aBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1NlrOFk4aBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzIyMg==", "bodyText": "Issue found: Avoid variables with short names like id", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217222", "createdAt": "2020-02-03T16:51:56Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/parameter/type/DataType.java", "diffHunk": "@@ -23,6 +29,12 @@ public DataType(String id, String errorMessageKey) {\n         this.errorMessageKey = errorMessageKey;\n     }\n \n+    public DataType(String id, String errorMessageKey, Map<String, TypeConstraint> restrictions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0ODYy", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404862", "createdAt": "2020-02-03T16:51:57Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1N1rOFk4aGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1N1rOFk4aGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzI0MQ==", "bodyText": "Issue found: Avoid variables with short names like id", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217241", "createdAt": "2020-02-03T16:51:57Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/RuleComponentDefinition.java", "diffHunk": "@@ -120,5 +138,41 @@ public String toLogString(){\n     }\n \n     public abstract boolean evaluate(HttpServletRequest request, HttpServletResponse response, T instance);\n-}\n \n+    /**\n+     * Utility type used to correctly read immutable object from JSON representation.\n+     *\n+     * @deprecated Do not use this type directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonDeserialize\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.NONE)\n+    @JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.NONE)\n+    static protected final class Json {\n+\n+        @javax.annotation.Nullable\n+        public String id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0ODgw", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404880", "createdAt": "2020-02-03T16:51:58Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1OVrOFk4aKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MTo1OVrOFk4aKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzI1Ng==", "bodyText": "Issue found: Parameter 'restrictions' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217256", "createdAt": "2020-02-03T16:51:59Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/parameter/type/DataType.java", "diffHunk": "@@ -77,5 +89,57 @@ public void checkValid(String value){\n     public Map<String, TypeConstraint> getConstraints() {\n         return ImmutableMap.copyOf(this.restrictions);\n     }\n-}\n- \n+\n+    /**\n+     * Utility type used to correctly read immutable object from JSON representation.\n+     *\n+     * @deprecated Do not use this type directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonDeserialize\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.NONE)\n+    @JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.NONE)\n+    static final class Json {\n+\n+        @javax.annotation.Nullable\n+        String id;\n+        @javax.annotation.Nullable\n+        String errorMessageKey;\n+        @javax.annotation.Nullable\n+        Map<String, TypeConstraint> restrictions;\n+\n+        @JsonProperty(\"id\")\n+        public void setKey(@Nullable final String id) {\n+            this.id = id;\n+        }\n+\n+        @JsonProperty(\"errorMessageKey\")\n+        public void setDataType(@Nullable final String errorMessageKey) {\n+            this.errorMessageKey = errorMessageKey;\n+        }\n+\n+        @JsonProperty(\"constraints\")\n+        public void setRestrictions(@Nullable Map<String, TypeConstraint> restrictions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0ODk4", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404898", "createdAt": "2020-02-03T16:52:00Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowMFrOFk4aNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowMFrOFk4aNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzI2OA==", "bodyText": "Issue found: Parameter 'restrictions' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217268", "createdAt": "2020-02-03T16:52:00Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/parameter/type/DataType.java", "diffHunk": "@@ -23,6 +29,12 @@ public DataType(String id, String errorMessageKey) {\n         this.errorMessageKey = errorMessageKey;\n     }\n \n+    public DataType(String id, String errorMessageKey, Map<String, TypeConstraint> restrictions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0OTEw", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404910", "createdAt": "2020-02-03T16:52:01Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowMVrOFk4aPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowMVrOFk4aPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzI3Ng==", "bodyText": "Issue found: Parameter 'i18nKey' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217276", "createdAt": "2020-02-03T16:52:01Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/RuleComponentDefinition.java", "diffHunk": "@@ -26,7 +31,20 @@\n     private final Map<String, ParameterDefinition> parameterDefinitions;\n \n     protected RuleComponentDefinition(String i18nKey, ParameterDefinition... parameterDefinitions) {\n-        this.id = this.getClass().getSimpleName();\n+        this(null, i18nKey, parameterDefinitions);\n+    }\n+\n+    /**\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    protected RuleComponentDefinition(String id, String i18nKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0OTIw", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404920", "createdAt": "2020-02-03T16:52:02Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowMlrOFk4aSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowMlrOFk4aSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzI4OA==", "bodyText": "Issue found: Local variable 'rules' could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217288", "createdAt": "2020-02-03T16:52:02Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/util/RulesImportExportUtil.java", "diffHunk": "@@ -83,69 +68,69 @@ public void export(File file) throws IOException {\n \t\t}\n \t}\n \n-\t/**\n-\t * \n-\t * @param file\n-\t * @throws IOException\n-\t */\n-\tpublic void importRules(File file) throws IOException {\n+\tpublic void importRules(final File file) throws IOException {\n \n-\t\tRulesAPI rapi = APILocator.getRulesAPI();\n+\t\tfinal ObjectMapper mapper = new ObjectMapper();\n+\t\tfinal StringWriter stringWriter = new StringWriter();\n+\n+\t\ttry (BufferedReader bufferedReader = Files.newBufferedReader(Paths.get(file.toURI()))) {\n \n-\t\tBufferedReader in = null;\n-\t\ttry {\n-\t\t\tUser user = APILocator.getUserAPI().getSystemUser();\n-\t\t\tFileReader fstream = new FileReader(file);\n-\t\t\tin = new BufferedReader(fstream);\n-\t\t\tObjectMapper mapper = new ObjectMapper();\n \t\t\tmapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n-\t\t\tStringWriter sw = new StringWriter();\n+\n \t\t\tString str;\n-\t\t\twhile ((str = in.readLine()) != null) {\n-\t\t\t\tsw.append(str);\n+\t\t\twhile ((str = bufferedReader.readLine()) != null) {\n+\t\t\t\tstringWriter.append(str);\n \t\t\t}\n \n-\t\t\tRulesImportExportObject importer = mapper.readValue(sw.toString(), RulesImportExportObject.class);\n+\t\t\tRulesImportExportObject importer = mapper.readValue\n+\t\t\t\t\t((String) stringWriter.toString(), RulesImportExportObject.class);\n+\n+\t\t\tthis.importRules(importer, APILocator.systemUser());\n+\t\t} catch (Exception e) {\n+\t\t\tLogger.error(this.getClass(), \"Error: \" + e.getMessage(), e);\n+\t\t}\n+\t}\n+\n+\t@WrapInTransaction\n+\tpublic void importRules(final RulesImportExportObject importer,\n+\t\t\tfinal User user) throws IOException, DotDataException {\n+\n+\t\ttry {\n+\t\t\tfinal RulesAPI rulesAPI = APILocator.getRulesAPI();\n \n \t\t\t//Saving the rules.\n \t\t\tfor (Rule rule : importer.getRules()) {\n \t\t\t\trule.setParentPermissionable(RulePermissionableUtil.findParentPermissionable(rule.getParent()));\n-\t\t\t\trapi.saveRule(rule, user, false);\n+\t\t\t\trulesAPI.saveRule(rule, user, false);\n \n \t\t\t\t//Saving the Condition Groups.\n \t\t\t\tfor (ConditionGroup group : rule.getGroups()) {\n-\t\t\t\t\trapi.saveConditionGroup(group, user, false);\n+\t\t\t\t\trulesAPI.saveConditionGroup(group, user, false);\n \t\t\t\t\t//Saving the Condition for each group.\n \t\t\t\t\tfor (Condition condition : group.getConditions()) {\n-\t\t\t\t\t\trapi.saveCondition(condition, user, false);\n+\t\t\t\t\t\trulesAPI.saveCondition(condition, user, false);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t//Saving the Action.\n \t\t\t\tfor (RuleAction action : rule.getRuleActions()) {\n-\t\t\t\t\trapi.saveRuleAction(action, user, false);\n+\t\t\t\t\trulesAPI.saveRuleAction(action, user, false);\n \t\t\t\t}\n \t\t\t}\n-\n \t\t} catch (Exception e) {\n \t\t\tLogger.error(this.getClass(), \"Error: \" + e.getMessage(), e);\n-\t\t} finally {\n-\t\t\tin.close();\n+\t\t\tthrow new DotDataException(e);\n \t\t}\n \t}\n \n-\t/**\n-\t * \n-\t * @param parent\n-\t * @return\n-\t * @throws DotDataException\n-\t * @throws DotSecurityException\n-\t */\n-\tpublic RulesImportExportObject buildExportObject(Ruleable parent) throws DotDataException, DotSecurityException {\n+\t@CloseDBIfOpened\n+\tpublic RulesImportExportObject buildExportObject(Ruleable parent)\n+\t\t\tthrows DotDataException, DotSecurityException {\n \n-\t\tRulesAPI rapi = APILocator.getRulesAPI();\n+\t\tRulesAPI rulesAPI = APILocator.getRulesAPI();\n \t\tUser user = APILocator.getUserAPI().getSystemUser();\n \n-\t\tList<Rule> rules = (parent == null) ? rapi.getAllRules(user, false) : rapi.getAllRulesByParent(parent, user, false);\n+\t\tList<Rule> rules = (parent == null) ? rulesAPI.getAllRules(user, false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 174}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0OTM1", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404935", "createdAt": "2020-02-03T16:52:04Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowNFrOFk4aVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowNFrOFk4aVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzMwMA==", "bodyText": "Issue found: Parameter 'json' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217300", "createdAt": "2020-02-03T16:52:04Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/conditionlet/Conditionlet.java", "diffHunk": "@@ -3,12 +3,50 @@\n import com.dotmarketing.portlets.rules.RuleComponentDefinition;\n import com.dotmarketing.portlets.rules.RuleComponentInstance;\n import com.dotmarketing.portlets.rules.parameter.ParameterDefinition;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n \n public abstract class Conditionlet<T extends RuleComponentInstance> extends RuleComponentDefinition<T> {\n \n     public static final String COMPARISON_KEY = \"comparison\";\n \n+    /**\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    protected Conditionlet(String id, String i18nKey, final ParameterDefinition... parameterDefinitions) {\n+        super(id, i18nKey, parameterDefinitions);\n+    }\n+\n     protected Conditionlet(String i18nKey, ParameterDefinition... parameterDefinitions) {\n         super(i18nKey, parameterDefinitions);\n     }\n-}\n+\n+    /**\n+     * @param json A JSON-bindable data structure\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)\n+    static Conditionlet fromJson(RuleComponentDefinition.Json json) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0OTU2", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404956", "createdAt": "2020-02-03T16:52:05Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowNVrOFk4aYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowNVrOFk4aYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzMxMw==", "bodyText": "Issue found: Parameter 'parameterDefinitions' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217313", "createdAt": "2020-02-03T16:52:05Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/RuleComponentDefinition.java", "diffHunk": "@@ -120,5 +138,41 @@ public String toLogString(){\n     }\n \n     public abstract boolean evaluate(HttpServletRequest request, HttpServletResponse response, T instance);\n-}\n \n+    /**\n+     * Utility type used to correctly read immutable object from JSON representation.\n+     *\n+     * @deprecated Do not use this type directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonDeserialize\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.NONE)\n+    @JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.NONE)\n+    static protected final class Json {\n+\n+        @javax.annotation.Nullable\n+        public String id;\n+        @javax.annotation.Nullable\n+        public String i18nKey;\n+        @javax.annotation.Nullable\n+        public Map<String, ParameterDefinition> parameterDefinitions;\n+\n+        @JsonProperty(\"id\")\n+        public void setId(@Nullable final String id) {\n+            this.id = id;\n+        }\n+\n+        @JsonProperty(\"i18nKey\")\n+        public void setI18nKey(@Nullable final String i18nKey) {\n+            this.i18nKey = i18nKey;\n+        }\n+\n+        @JsonProperty(\"parameterDefinitions\")\n+        public void setParameterDefinitions(\n+                @Nullable Map<String, ParameterDefinition> parameterDefinitions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0OTc0", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404974", "createdAt": "2020-02-03T16:52:07Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowN1rOFk4abw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowN1rOFk4abw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzMyNw==", "bodyText": "Issue found: Avoid variables with short names like id", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217327", "createdAt": "2020-02-03T16:52:07Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/conditionlet/Conditionlet.java", "diffHunk": "@@ -3,12 +3,50 @@\n import com.dotmarketing.portlets.rules.RuleComponentDefinition;\n import com.dotmarketing.portlets.rules.RuleComponentInstance;\n import com.dotmarketing.portlets.rules.parameter.ParameterDefinition;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n \n public abstract class Conditionlet<T extends RuleComponentInstance> extends RuleComponentDefinition<T> {\n \n     public static final String COMPARISON_KEY = \"comparison\";\n \n+    /**\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    protected Conditionlet(String id, String i18nKey, final ParameterDefinition... parameterDefinitions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA0OTk0", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352404994", "createdAt": "2020-02-03T16:52:08Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowOFrOFk4afw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowOFrOFk4afw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzM0Mw==", "bodyText": "Issue found: Parameter 'response' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217343", "createdAt": "2020-02-03T16:52:08Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/conditionlet/Conditionlet.java", "diffHunk": "@@ -3,12 +3,50 @@\n import com.dotmarketing.portlets.rules.RuleComponentDefinition;\n import com.dotmarketing.portlets.rules.RuleComponentInstance;\n import com.dotmarketing.portlets.rules.parameter.ParameterDefinition;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n \n public abstract class Conditionlet<T extends RuleComponentInstance> extends RuleComponentDefinition<T> {\n \n     public static final String COMPARISON_KEY = \"comparison\";\n \n+    /**\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    protected Conditionlet(String id, String i18nKey, final ParameterDefinition... parameterDefinitions) {\n+        super(id, i18nKey, parameterDefinitions);\n+    }\n+\n     protected Conditionlet(String i18nKey, ParameterDefinition... parameterDefinitions) {\n         super(i18nKey, parameterDefinitions);\n     }\n-}\n+\n+    /**\n+     * @param json A JSON-bindable data structure\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)\n+    static Conditionlet fromJson(RuleComponentDefinition.Json json) {\n+\n+        return new Conditionlet(json.id, json.i18nKey,\n+                json.parameterDefinitions.values().toArray(new ParameterDefinition[]{})) {\n+\n+            @Override\n+            public RuleComponentInstance instanceFrom(Map parameters) {\n+                throw new UnsupportedOperationException();\n+            }\n+\n+            @Override\n+            public boolean evaluate(HttpServletRequest request, HttpServletResponse response,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA1MDAz", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352405003", "createdAt": "2020-02-03T16:52:09Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowOVrOFk4ahg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjowOVrOFk4ahg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzM1MA==", "bodyText": "Issue found: Local variable 'importer' could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217350", "createdAt": "2020-02-03T16:52:09Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/util/RulesImportExportUtil.java", "diffHunk": "@@ -83,69 +68,69 @@ public void export(File file) throws IOException {\n \t\t}\n \t}\n \n-\t/**\n-\t * \n-\t * @param file\n-\t * @throws IOException\n-\t */\n-\tpublic void importRules(File file) throws IOException {\n+\tpublic void importRules(final File file) throws IOException {\n \n-\t\tRulesAPI rapi = APILocator.getRulesAPI();\n+\t\tfinal ObjectMapper mapper = new ObjectMapper();\n+\t\tfinal StringWriter stringWriter = new StringWriter();\n+\n+\t\ttry (BufferedReader bufferedReader = Files.newBufferedReader(Paths.get(file.toURI()))) {\n \n-\t\tBufferedReader in = null;\n-\t\ttry {\n-\t\t\tUser user = APILocator.getUserAPI().getSystemUser();\n-\t\t\tFileReader fstream = new FileReader(file);\n-\t\t\tin = new BufferedReader(fstream);\n-\t\t\tObjectMapper mapper = new ObjectMapper();\n \t\t\tmapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n-\t\t\tStringWriter sw = new StringWriter();\n+\n \t\t\tString str;\n-\t\t\twhile ((str = in.readLine()) != null) {\n-\t\t\t\tsw.append(str);\n+\t\t\twhile ((str = bufferedReader.readLine()) != null) {\n+\t\t\t\tstringWriter.append(str);\n \t\t\t}\n \n-\t\t\tRulesImportExportObject importer = mapper.readValue(sw.toString(), RulesImportExportObject.class);\n+\t\t\tRulesImportExportObject importer = mapper.readValue", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA1MDE1", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352405015", "createdAt": "2020-02-03T16:52:10Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjoxMVrOFk4ajg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjoxMVrOFk4ajg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzM1OA==", "bodyText": "Issue found: Avoid variables with short names like id", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217358", "createdAt": "2020-02-03T16:52:11Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/parameter/type/DataType.java", "diffHunk": "@@ -77,5 +89,57 @@ public void checkValid(String value){\n     public Map<String, TypeConstraint> getConstraints() {\n         return ImmutableMap.copyOf(this.restrictions);\n     }\n-}\n- \n+\n+    /**\n+     * Utility type used to correctly read immutable object from JSON representation.\n+     *\n+     * @deprecated Do not use this type directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonDeserialize\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.NONE)\n+    @JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.NONE)\n+    static final class Json {\n+\n+        @javax.annotation.Nullable\n+        String id;\n+        @javax.annotation.Nullable\n+        String errorMessageKey;\n+        @javax.annotation.Nullable\n+        Map<String, TypeConstraint> restrictions;\n+\n+        @JsonProperty(\"id\")\n+        public void setKey(@Nullable final String id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA1MDMx", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352405031", "createdAt": "2020-02-03T16:52:12Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjoxMlrOFk4amw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjoxMlrOFk4amw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzM3MQ==", "bodyText": "Issue found: Parameter 'instance' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217371", "createdAt": "2020-02-03T16:52:12Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/conditionlet/Conditionlet.java", "diffHunk": "@@ -3,12 +3,50 @@\n import com.dotmarketing.portlets.rules.RuleComponentDefinition;\n import com.dotmarketing.portlets.rules.RuleComponentInstance;\n import com.dotmarketing.portlets.rules.parameter.ParameterDefinition;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n \n public abstract class Conditionlet<T extends RuleComponentInstance> extends RuleComponentDefinition<T> {\n \n     public static final String COMPARISON_KEY = \"comparison\";\n \n+    /**\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    protected Conditionlet(String id, String i18nKey, final ParameterDefinition... parameterDefinitions) {\n+        super(id, i18nKey, parameterDefinitions);\n+    }\n+\n     protected Conditionlet(String i18nKey, ParameterDefinition... parameterDefinitions) {\n         super(i18nKey, parameterDefinitions);\n     }\n-}\n+\n+    /**\n+     * @param json A JSON-bindable data structure\n+     * @deprecated Do not use this method directly, it exists only for the <em>Jackson</em>-binding\n+     * infrastructure\n+     */\n+    @Deprecated\n+    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)\n+    static Conditionlet fromJson(RuleComponentDefinition.Json json) {\n+\n+        return new Conditionlet(json.id, json.i18nKey,\n+                json.parameterDefinitions.values().toArray(new ParameterDefinition[]{})) {\n+\n+            @Override\n+            public RuleComponentInstance instanceFrom(Map parameters) {\n+                throw new UnsupportedOperationException();\n+            }\n+\n+            @Override\n+            public boolean evaluate(HttpServletRequest request, HttpServletResponse response,\n+                    RuleComponentInstance instance) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDA1MDUx", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352405051", "createdAt": "2020-02-03T16:52:13Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjoxM1rOFk4apg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjo1MjoxM1rOFk4apg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzM4Mg==", "bodyText": "Issue found: Local variable 'rulesAPI' could be declared final", "url": "https://github.com/dotCMS/core/pull/17934#discussion_r374217382", "createdAt": "2020-02-03T16:52:13Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/rules/util/RulesImportExportUtil.java", "diffHunk": "@@ -83,69 +68,69 @@ public void export(File file) throws IOException {\n \t\t}\n \t}\n \n-\t/**\n-\t * \n-\t * @param file\n-\t * @throws IOException\n-\t */\n-\tpublic void importRules(File file) throws IOException {\n+\tpublic void importRules(final File file) throws IOException {\n \n-\t\tRulesAPI rapi = APILocator.getRulesAPI();\n+\t\tfinal ObjectMapper mapper = new ObjectMapper();\n+\t\tfinal StringWriter stringWriter = new StringWriter();\n+\n+\t\ttry (BufferedReader bufferedReader = Files.newBufferedReader(Paths.get(file.toURI()))) {\n \n-\t\tBufferedReader in = null;\n-\t\ttry {\n-\t\t\tUser user = APILocator.getUserAPI().getSystemUser();\n-\t\t\tFileReader fstream = new FileReader(file);\n-\t\t\tin = new BufferedReader(fstream);\n-\t\t\tObjectMapper mapper = new ObjectMapper();\n \t\t\tmapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n-\t\t\tStringWriter sw = new StringWriter();\n+\n \t\t\tString str;\n-\t\t\twhile ((str = in.readLine()) != null) {\n-\t\t\t\tsw.append(str);\n+\t\t\twhile ((str = bufferedReader.readLine()) != null) {\n+\t\t\t\tstringWriter.append(str);\n \t\t\t}\n \n-\t\t\tRulesImportExportObject importer = mapper.readValue(sw.toString(), RulesImportExportObject.class);\n+\t\t\tRulesImportExportObject importer = mapper.readValue\n+\t\t\t\t\t((String) stringWriter.toString(), RulesImportExportObject.class);\n+\n+\t\t\tthis.importRules(importer, APILocator.systemUser());\n+\t\t} catch (Exception e) {\n+\t\t\tLogger.error(this.getClass(), \"Error: \" + e.getMessage(), e);\n+\t\t}\n+\t}\n+\n+\t@WrapInTransaction\n+\tpublic void importRules(final RulesImportExportObject importer,\n+\t\t\tfinal User user) throws IOException, DotDataException {\n+\n+\t\ttry {\n+\t\t\tfinal RulesAPI rulesAPI = APILocator.getRulesAPI();\n \n \t\t\t//Saving the rules.\n \t\t\tfor (Rule rule : importer.getRules()) {\n \t\t\t\trule.setParentPermissionable(RulePermissionableUtil.findParentPermissionable(rule.getParent()));\n-\t\t\t\trapi.saveRule(rule, user, false);\n+\t\t\t\trulesAPI.saveRule(rule, user, false);\n \n \t\t\t\t//Saving the Condition Groups.\n \t\t\t\tfor (ConditionGroup group : rule.getGroups()) {\n-\t\t\t\t\trapi.saveConditionGroup(group, user, false);\n+\t\t\t\t\trulesAPI.saveConditionGroup(group, user, false);\n \t\t\t\t\t//Saving the Condition for each group.\n \t\t\t\t\tfor (Condition condition : group.getConditions()) {\n-\t\t\t\t\t\trapi.saveCondition(condition, user, false);\n+\t\t\t\t\t\trulesAPI.saveCondition(condition, user, false);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t//Saving the Action.\n \t\t\t\tfor (RuleAction action : rule.getRuleActions()) {\n-\t\t\t\t\trapi.saveRuleAction(action, user, false);\n+\t\t\t\t\trulesAPI.saveRuleAction(action, user, false);\n \t\t\t\t}\n \t\t\t}\n-\n \t\t} catch (Exception e) {\n \t\t\tLogger.error(this.getClass(), \"Error: \" + e.getMessage(), e);\n-\t\t} finally {\n-\t\t\tin.close();\n+\t\t\tthrow new DotDataException(e);\n \t\t}\n \t}\n \n-\t/**\n-\t * \n-\t * @param parent\n-\t * @return\n-\t * @throws DotDataException\n-\t * @throws DotSecurityException\n-\t */\n-\tpublic RulesImportExportObject buildExportObject(Ruleable parent) throws DotDataException, DotSecurityException {\n+\t@CloseDBIfOpened\n+\tpublic RulesImportExportObject buildExportObject(Ruleable parent)\n+\t\t\tthrows DotDataException, DotSecurityException {\n \n-\t\tRulesAPI rapi = APILocator.getRulesAPI();\n+\t\tRulesAPI rulesAPI = APILocator.getRulesAPI();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "originalPosition": 170}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDg2NDM2", "url": "https://github.com/dotCMS/core/pull/17934#pullrequestreview-352486436", "createdAt": "2020-02-03T19:00:29Z", "commit": {"oid": "4de8907e1b167e308d08945dc05182e92a1da2a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1365, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}