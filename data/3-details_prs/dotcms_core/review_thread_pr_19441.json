{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxOTc4OTY1", "number": 19441, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDozMzo1NlrOEtEiTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1NFrOEvcpfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Njk1Njk0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/beans/transform/IdentifierTransformer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDozMzo1NlrOHgp7XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzoxMzowNVrOHg8qew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwMzQyMA==", "bodyText": "change this 'i' variable name", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r504003420", "createdAt": "2020-10-13T14:33:56Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/beans/transform/IdentifierTransformer.java", "diffHunk": "@@ -42,6 +42,9 @@ private static Identifier transform(Map<String, Object> map)  {\n         i.setParentPath((String) map.get(\"parent_path\"));\n         i.setSysPublishDate((Date) map.get(\"syspublish_date\"));\n         i.setSysExpireDate((Date) map.get(\"sysexpire_date\"));\n+        i.setOwner((String) map.get(\"owner\"));\n+        i.setCreateDate((Date) map.get(\"create_date\"));\n+        i.setAssetSubType((String) map.get(\"asset_subtype\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c301721f4ed61ff883cccb9f77bd2e2af68baf8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMDM5NQ==", "bodyText": "Done", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r504310395", "createdAt": "2020-10-13T23:13:05Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotmarketing/beans/transform/IdentifierTransformer.java", "diffHunk": "@@ -42,6 +42,9 @@ private static Identifier transform(Map<String, Object> map)  {\n         i.setParentPath((String) map.get(\"parent_path\"));\n         i.setSysPublishDate((Date) map.get(\"syspublish_date\"));\n         i.setSysExpireDate((Date) map.get(\"sysexpire_date\"));\n+        i.setOwner((String) map.get(\"owner\"));\n+        i.setCreateDate((Date) map.get(\"create_date\"));\n+        i.setAssetSubType((String) map.get(\"asset_subtype\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwMzQyMA=="}, "originalCommit": {"oid": "0c301721f4ed61ff883cccb9f77bd2e2af68baf8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODExMjkyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo1ODo0MlrOHg1JEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjozODo0NlrOHid5VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4NzE1Mg==", "bodyText": "asset_subtype needs an index on it", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r504187152", "createdAt": "2020-10-13T18:58:42Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n+\n+public class Task201013AddNewColumnsToIdentifierTable extends AbstractJDBCStartupTask {\n+    @Override\n+    public boolean forceRun() {\n+        return true;\n+    }\n+\n+    @Override\n+    public String getPostgresScript() {\n+        return \"alter table identifier add owner varchar(255);\" +\n+                \"alter table identifier add create_date timestamp;\" +\n+                \"alter table identifier add asset_subtype varchar(255);\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c301721f4ed61ff883cccb9f77bd2e2af68baf8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwMzQ0NA==", "bodyText": "Done", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r505903444", "createdAt": "2020-10-15T22:38:46Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n+\n+public class Task201013AddNewColumnsToIdentifierTable extends AbstractJDBCStartupTask {\n+    @Override\n+    public boolean forceRun() {\n+        return true;\n+    }\n+\n+    @Override\n+    public String getPostgresScript() {\n+        return \"alter table identifier add owner varchar(255);\" +\n+                \"alter table identifier add create_date timestamp;\" +\n+                \"alter table identifier add asset_subtype varchar(255);\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4NzE1Mg=="}, "originalCommit": {"oid": "0c301721f4ed61ff883cccb9f77bd2e2af68baf8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODExNDQyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/resources/mssql.sql", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo1OTowNlrOHg1J_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjozOTowMVrOHid5pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4NzM4OQ==", "bodyText": "add index to identifier.asset_subtype", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r504187389", "createdAt": "2020-10-13T18:59:06Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/resources/mssql.sql", "diffHunk": "@@ -1266,6 +1266,9 @@ create table identifier (\n    syspublish_date datetime null,\n    sysexpire_date datetime null,\n    full_path_lc  as CASE WHEN parent_path = 'System folder' THEN '/' ELSE LOWER(CONCAT(parent_path, asset_name)) END,\n+   owner NVARCHAR(255),\n+   create_date datetime,\n+   asset_subtype NVARCHAR(255),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c301721f4ed61ff883cccb9f77bd2e2af68baf8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwMzUyNg==", "bodyText": "Done", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r505903526", "createdAt": "2020-10-15T22:39:01Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/resources/mssql.sql", "diffHunk": "@@ -1266,6 +1266,9 @@ create table identifier (\n    syspublish_date datetime null,\n    sysexpire_date datetime null,\n    full_path_lc  as CASE WHEN parent_path = 'System folder' THEN '/' ELSE LOWER(CONCAT(parent_path, asset_name)) END,\n+   owner NVARCHAR(255),\n+   create_date datetime,\n+   asset_subtype NVARCHAR(255),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4NzM4OQ=="}, "originalCommit": {"oid": "0c301721f4ed61ff883cccb9f77bd2e2af68baf8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTU1MDI3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/business/IdentifierFactoryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzoxMDoyMVrOHkYu3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzoxMDoyMVrOHkYu3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxNTk5Ng==", "bodyText": "this looks like a candidate to create a private method", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507915996", "createdAt": "2020-10-19T17:10:21Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/business/IdentifierFactoryImpl.java", "diffHunk": "@@ -378,19 +398,36 @@ protected Identifier createNewIdentifier ( Versionable versionable, Host site, S\n                 identifier.setAssetType(Identifier.ASSET_TYPE_CONTENTLET);\n                 identifier.setParentPath( \"/\" );\n                 identifier.setAssetName( uri );\n+                identifier.setAssetSubType(cont.getContentType().variable());\n             } else if ( versionable instanceof Link ) {\n                 identifier.setAssetName( versionable.getInode() );\n                 identifier.setParentPath(\"/\");\n             } else if(versionable instanceof Host) {\n \t\t\t\tidentifier.setAssetName(versionable.getInode());\n \t\t\t\tidentifier.setAssetType(Identifier.ASSET_TYPE_CONTENTLET);\n \t\t\t\tidentifier.setParentPath(\"/\");\n+\t\t\t\tidentifier.setAssetSubType(Host.HOST_VELOCITY_VAR_NAME);\n \t\t\t} else {\n                 identifier.setURI( uri );\n             }\n+\n+            identifier.setOwner((versionable instanceof WebAsset)\n+                    ? ((WebAsset) versionable).getOwner() : versionable.getModUser());\n         }\n         identifier.setHostId( site != null ? site.getIdentifier() : null );\n \n+        final Inode inode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b9685c3f3e6199554b45241cd3816fb2c664f34"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTg3ODU5OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTableTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo0OFrOHkcAFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo0OFrOHkcAFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTU1Ng==", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969556", "createdAt": "2020-10-19T18:21:48Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTableTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import java.sql.SQLException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class Task201013AddNewColumnsToIdentifierTableTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a0fcd80a2a907d454e45450035c7e90fedcc84"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTg3ODY4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTableTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo0OVrOHkcAIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo0OVrOHkcAIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTU2OA==", "bodyText": "Codacy found an issue: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969568", "createdAt": "2020-10-19T18:21:49Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTableTest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.datagen.ContainerDataGen;\n+import com.dotcms.datagen.FolderDataGen;\n+import com.dotcms.datagen.LinkDataGen;\n+import com.dotcms.datagen.TemplateDataGen;\n+import com.dotcms.datagen.TestDataUtils;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.beans.Identifier;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.IdentifierAPI;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.portlets.containers.model.Container;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.folders.model.Folder;\n+import com.dotmarketing.portlets.links.model.Link;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.UtilMethods;\n+import java.sql.SQLException;\n+import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+\n+public class Task201014UpdateColumnsValuesInIdentifierTableTest {\n+\n+    private static IdentifierAPI identifierAPI;\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+        identifierAPI = APILocator.getIdentifierAPI();\n+    }\n+\n+    private void cleanUpColumns(final List<Identifier> identifiers) throws SQLException {\n+        final DotConnect dotConnect = new DotConnect();\n+        for(Identifier identifier:identifiers){\n+            dotConnect.executeStatement(\"UPDATE identifier set owner=null, create_date=null,\"\n+                    + \" asset_subtype=null where id='\" + identifier.getId() + \"'\");\n+        }\n+    }\n+\n+    private List<Identifier> createIdentifiers() throws DotDataException {\n+        final List<Identifier> identifiers = new ArrayList<>();\n+\n+        final Link link = new LinkDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(link.getIdentifier()));\n+\n+        final Folder folder = new FolderDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(folder.getIdentifier()));\n+\n+        final Template template = new TemplateDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(template.getIdentifier()));\n+\n+        final Container container = new ContainerDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(container.getIdentifier()));\n+\n+        final Contentlet contentlet = TestDataUtils\n+                .getPageContent(true, APILocator.getLanguageAPI().getDefaultLanguage().getId());\n+        identifiers.add(identifierAPI.find(contentlet.getIdentifier()));\n+\n+        return identifiers;\n+    }\n+\n+    private boolean areColumnsPopulated(final List<Identifier> identifiers)\n+            throws DotDataException {\n+        List<Map<String, Object>> results;\n+        for (Identifier identifier: identifiers){\n+            final DotConnect dotConnect = new DotConnect();\n+            dotConnect.setSQL(\"select owner, create_date, asset_subtype from identifier where id=?\");\n+            dotConnect.addParam(identifier.getId());\n+            results = dotConnect.loadObjectResults();\n+\n+            if (!areValuesEqual(identifier, results.get(0))){\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private boolean areValuesEqual(final Identifier expectedResult, final Map<String, Object> result){\n+        final LocalDateTime expectedDate = new Timestamp(\n+                expectedResult.getCreateDate().getTime()).toLocalDateTime().truncatedTo(\n+                ChronoUnit.SECONDS);\n+        final LocalDateTime resultDate = new Timestamp(\n+                ((Date)result.get(\"create_date\")).getTime()).toLocalDateTime().truncatedTo(\n+                ChronoUnit.SECONDS);\n+\n+        return result.get(\"owner\").equals(expectedResult.getOwner()) &&\n+                resultDate.equals(expectedDate) &&\n+                ((!expectedResult.getAssetType().equals(\"contentlet\") && !UtilMethods.isSet(result.get(\"asset_subtype\")))\n+                        || (expectedResult.getAssetType().equals(\"contentlet\") && result.get(\"asset_subtype\").equals(expectedResult.getAssetSubType())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a0fcd80a2a907d454e45450035c7e90fedcc84"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTg3ODc0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTableTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1MFrOHkcAKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1MFrOHkcAKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTU3Ng==", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969576", "createdAt": "2020-10-19T18:21:50Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTableTest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.datagen.ContainerDataGen;\n+import com.dotcms.datagen.FolderDataGen;\n+import com.dotcms.datagen.LinkDataGen;\n+import com.dotcms.datagen.TemplateDataGen;\n+import com.dotcms.datagen.TestDataUtils;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.beans.Identifier;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.IdentifierAPI;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.portlets.containers.model.Container;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.folders.model.Folder;\n+import com.dotmarketing.portlets.links.model.Link;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.UtilMethods;\n+import java.sql.SQLException;\n+import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+\n+public class Task201014UpdateColumnsValuesInIdentifierTableTest {\n+\n+    private static IdentifierAPI identifierAPI;\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a0fcd80a2a907d454e45450035c7e90fedcc84"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTg3ODgwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1MVrOHkcAMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1MVrOHkcAMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTU4Ng==", "bodyText": "Codacy found an issue: The String literal \"update identifier set owner=q.i_owner, create_date=q.create_date from \" appears 4 times in this file; the first occurrence is on line 21", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969586", "createdAt": "2020-10-19T18:21:51Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.startup.StartupTask;\n+\n+/**\n+ * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n+ */\n+public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n+\n+    protected static final String UPDATE_CONTENTLETS =\n+            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from\"\n+            + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n+            + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n+            + \"inode inode, structure struc \"\n+            + \"where inode.inode=cont.inode \"\n+            + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n+\n+    private static final String UPDATE_FOLDER = \"update identifier set owner=q.i_owner, create_date=q.create_date from \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a0fcd80a2a907d454e45450035c7e90fedcc84"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTg3ODg3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1MlrOHkcAPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1MlrOHkcAPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTU5Ng==", "bodyText": "Codacy found an issue: The String literal \"create index idx_identifier_asset_subtype on identifier (asset_subtype);\" appears 4 times in this file; the first occurrence is on line 29", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969596", "createdAt": "2020-10-19T18:21:52Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotmarketing.common.db.DotDatabaseMetaData;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import com.dotmarketing.util.Logger;\n+import java.sql.SQLException;\n+import java.util.List;\n+\n+public class Task201013AddNewColumnsToIdentifierTable extends AbstractJDBCStartupTask {\n+    @Override\n+    public boolean forceRun() {\n+        try {\n+            final DotDatabaseMetaData dbMetadata = new DotDatabaseMetaData();\n+            return !dbMetadata.hasColumn(\"identifier\", \"owner\") &&\n+                    !dbMetadata.hasColumn(\"identifier\", \"create_date\") &&\n+                    !dbMetadata.hasColumn(\"identifier\", \"asset_subtype\");\n+        } catch (SQLException e) {\n+            Logger.error(this, e.getMessage(),e);\n+            return false;\n+        }\n+    }\n+\n+\n+    @Override\n+    public String getPostgresScript() {\n+        return \"alter table identifier add owner varchar(255);\" +\n+                \"alter table identifier add create_date timestamp;\" +\n+                \"alter table identifier add asset_subtype varchar(255);\" +\n+                \"create index idx_identifier_asset_subtype on identifier (asset_subtype);\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a0fcd80a2a907d454e45450035c7e90fedcc84"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTg3ODk1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTableTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1M1rOHkcARg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1M1rOHkcARg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTYwNg==", "bodyText": "Codacy found an issue: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969606", "createdAt": "2020-10-19T18:21:53Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTableTest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.datagen.ContainerDataGen;\n+import com.dotcms.datagen.FolderDataGen;\n+import com.dotcms.datagen.LinkDataGen;\n+import com.dotcms.datagen.TemplateDataGen;\n+import com.dotcms.datagen.TestDataUtils;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.beans.Identifier;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.IdentifierAPI;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.portlets.containers.model.Container;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.folders.model.Folder;\n+import com.dotmarketing.portlets.links.model.Link;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.UtilMethods;\n+import java.sql.SQLException;\n+import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+\n+public class Task201014UpdateColumnsValuesInIdentifierTableTest {\n+\n+    private static IdentifierAPI identifierAPI;\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+        identifierAPI = APILocator.getIdentifierAPI();\n+    }\n+\n+    private void cleanUpColumns(final List<Identifier> identifiers) throws SQLException {\n+        final DotConnect dotConnect = new DotConnect();\n+        for(Identifier identifier:identifiers){\n+            dotConnect.executeStatement(\"UPDATE identifier set owner=null, create_date=null,\"\n+                    + \" asset_subtype=null where id='\" + identifier.getId() + \"'\");\n+        }\n+    }\n+\n+    private List<Identifier> createIdentifiers() throws DotDataException {\n+        final List<Identifier> identifiers = new ArrayList<>();\n+\n+        final Link link = new LinkDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(link.getIdentifier()));\n+\n+        final Folder folder = new FolderDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(folder.getIdentifier()));\n+\n+        final Template template = new TemplateDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(template.getIdentifier()));\n+\n+        final Container container = new ContainerDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(container.getIdentifier()));\n+\n+        final Contentlet contentlet = TestDataUtils\n+                .getPageContent(true, APILocator.getLanguageAPI().getDefaultLanguage().getId());\n+        identifiers.add(identifierAPI.find(contentlet.getIdentifier()));\n+\n+        return identifiers;\n+    }\n+\n+    private boolean areColumnsPopulated(final List<Identifier> identifiers)\n+            throws DotDataException {\n+        List<Map<String, Object>> results;\n+        for (Identifier identifier: identifiers){\n+            final DotConnect dotConnect = new DotConnect();\n+            dotConnect.setSQL(\"select owner, create_date, asset_subtype from identifier where id=?\");\n+            dotConnect.addParam(identifier.getId());\n+            results = dotConnect.loadObjectResults();\n+\n+            if (!areValuesEqual(identifier, results.get(0))){\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private boolean areValuesEqual(final Identifier expectedResult, final Map<String, Object> result){\n+        final LocalDateTime expectedDate = new Timestamp(\n+                expectedResult.getCreateDate().getTime()).toLocalDateTime().truncatedTo(\n+                ChronoUnit.SECONDS);\n+        final LocalDateTime resultDate = new Timestamp(\n+                ((Date)result.get(\"create_date\")).getTime()).toLocalDateTime().truncatedTo(\n+                ChronoUnit.SECONDS);\n+\n+        return result.get(\"owner\").equals(expectedResult.getOwner()) &&\n+                resultDate.equals(expectedDate) &&\n+                ((!expectedResult.getAssetType().equals(\"contentlet\") && !UtilMethods.isSet(result.get(\"asset_subtype\")))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a0fcd80a2a907d454e45450035c7e90fedcc84"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTg3OTAzOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/business/IdentifierFactoryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1NFrOHkcATg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODoyMTo1NFrOHkcATg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTYxNA==", "bodyText": "Codacy found an issue: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969614", "createdAt": "2020-10-19T18:21:54Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/business/IdentifierFactoryImpl.java", "diffHunk": "@@ -317,6 +320,9 @@ protected Identifier createNewIdentifier(final Versionable versionable, final Fo\n \t\t\t\tidentifier.setURI(uri);\n \t\t\t\tidentifier.setAssetType(versionable.getVersionType());\n \t\t\t}\n+\n+            identifier.setOwner((versionable instanceof WebAsset)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a0fcd80a2a907d454e45450035c7e90fedcc84"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1764, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}