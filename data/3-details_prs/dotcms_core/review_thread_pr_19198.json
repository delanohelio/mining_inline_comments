{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NjgzMTY4", "number": 19198, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0NzozOVrOEhTy-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0NlrOEhTzPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYyODA4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/transform/strategy/DefaultTransformStrategy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0NzozOVrOHOjdGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0NzozOVrOHOjdGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzAwMg==", "bodyText": "Codacy found an issue: Avoid unused method parameters such as 'map'.", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023002", "createdAt": "2020-09-08T15:47:39Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/transform/strategy/DefaultTransformStrategy.java", "diffHunk": "@@ -276,6 +278,22 @@ private void addCategories(final Contentlet contentlet, final Map<String, Object\n         }\n     }\n \n+    /**\n+     * add tags to the given contentlet\n+     */\n+    private void addTags(final Contentlet contentlet, final Map<String, Object> map,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65297b5c6801897be97d5f8c7c31a00880d377b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYyODE1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/RenderedContainersDataFetcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0MFrOHOjdKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0MFrOHOjdKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzAxNg==", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023016", "createdAt": "2020-09-08T15:47:40Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/RenderedContainersDataFetcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.services.PageRenderUtil;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.ContainerRaw;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.ContainerRenderedBuilder;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.dotmarketing.util.VelocityUtil;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.apache.velocity.context.Context;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class RenderedContainersDataFetcher implements DataFetcher<Set<Entry<String, String>>> {\n+    @Override\n+    public Set<Entry<String, String>> get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final ContainerRaw containerRaw = environment.getSource();\n+            final String pageModeAsString = (String) context.getParam(\"pageMode\");\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+            final HttpServletRequest request = context.getHttpServletRequest();\n+            final HttpServletResponse response = context.getHttpServletResponse();\n+\n+            final PageRenderUtil pageRenderUtil = (PageRenderUtil) context.getParam(\"pageRenderUtil\");\n+\n+            final Context velocityContext  = pageRenderUtil\n+                    .addAll(VelocityUtil.getInstance().getContext(request, response));\n+\n+            final Map<String, String> uuidsRendered = ContainerRenderedBuilder.\n+                    render(velocityContext, mode, containerRaw);\n+\n+            return uuidsRendered.entrySet();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65297b5c6801897be97d5f8c7c31a00880d377b"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYyODE4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ContainersDataFetcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0MVrOHOjdMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0MVrOHOjdMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzAyNQ==", "bodyText": "Codacy found an issue: Avoid declaring a variable if it is unreferenced before a possible exit point.", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023025", "createdAt": "2020-09-08T15:47:41Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ContainersDataFetcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.services.PageRenderUtil;\n+import com.dotmarketing.beans.Host;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.ContainerRaw;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.List;\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class ContainersDataFetcher implements DataFetcher<List<ContainerRaw>> {\n+    @Override\n+    public List<ContainerRaw> get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final User user = context.getUser();\n+            final Contentlet page = environment.getSource();\n+            final String pageModeAsString = (String) context.getParam(\"pageMode\");\n+            final String languageId = (String) context.getParam(\"languageId\");\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+            final HttpServletRequest request = context.getHttpServletRequest();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65297b5c6801897be97d5f8c7c31a00880d377b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYyODMyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ContainersDataFetcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0MlrOHOjdRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0MlrOHOjdRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzA0Ng==", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023046", "createdAt": "2020-09-08T15:47:42Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ContainersDataFetcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.services.PageRenderUtil;\n+import com.dotmarketing.beans.Host;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.ContainerRaw;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.List;\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class ContainersDataFetcher implements DataFetcher<List<ContainerRaw>> {\n+    @Override\n+    public List<ContainerRaw> get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final User user = context.getUser();\n+            final Contentlet page = environment.getSource();\n+            final String pageModeAsString = (String) context.getParam(\"pageMode\");\n+            final String languageId = (String) context.getParam(\"languageId\");\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+            final HttpServletRequest request = context.getHttpServletRequest();\n+\n+            final HTMLPageAsset pageAsset = APILocator.getHTMLPageAssetAPI()\n+                    .fromContentlet(page);\n+\n+            final Host site = APILocator.getHostAPI().find(page.getHost(), user, false);\n+            PageRenderUtil pageRenderUtil = new PageRenderUtil(pageAsset, user, mode,\n+                    Long.parseLong(languageId), site);\n+\n+            context.addParam(\"pageRenderUtil\", pageRenderUtil);\n+\n+            return pageRenderUtil.getContainersRaw();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65297b5c6801897be97d5f8c7c31a00880d377b"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYyODM3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/transform/strategy/DefaultTransformStrategy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0M1rOHOjdUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0M1rOHOjdUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzA1OA==", "bodyText": "Codacy found an issue: Avoid unused method parameters such as 'user'.", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023058", "createdAt": "2020-09-08T15:47:43Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/transform/strategy/DefaultTransformStrategy.java", "diffHunk": "@@ -276,6 +278,22 @@ private void addCategories(final Contentlet contentlet, final Map<String, Object\n         }\n     }\n \n+    /**\n+     * add tags to the given contentlet\n+     */\n+    private void addTags(final Contentlet contentlet, final Map<String, Object> map,\n+            final Set<TransformOptions> options, final User user) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65297b5c6801897be97d5f8c7c31a00880d377b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYyODQ5OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0NFrOHOjdYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0NFrOHOjdYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzA3NA==", "bodyText": "Codacy found an issue: The String literal \"containers\" appears 5 times in this file; the first occurrence is on line 113", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023074", "createdAt": "2020-09-08T15:47:44Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -108,6 +123,8 @@\n \n         pageFields.put(\"layout\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Layout\"),\n                 new LayoutDataFetcher()));\n+        pageFields.put(\"containers\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"Container\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65297b5c6801897be97d5f8c7c31a00880d377b"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYyODYzOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ContainersDataFetcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0NVrOHOjdcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0NVrOHOjdcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzA5MA==", "bodyText": "Codacy found an issue: Avoid unused local variables such as 'request'.", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023090", "createdAt": "2020-09-08T15:47:45Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ContainersDataFetcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.services.PageRenderUtil;\n+import com.dotmarketing.beans.Host;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.ContainerRaw;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.List;\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class ContainersDataFetcher implements DataFetcher<List<ContainerRaw>> {\n+    @Override\n+    public List<ContainerRaw> get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final User user = context.getUser();\n+            final Contentlet page = environment.getSource();\n+            final String pageModeAsString = (String) context.getParam(\"pageMode\");\n+            final String languageId = (String) context.getParam(\"languageId\");\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+            final HttpServletRequest request = context.getHttpServletRequest();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65297b5c6801897be97d5f8c7c31a00880d377b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzYyODc2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/ContentMapDataFetcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0NlrOHOjdhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTo0Nzo0NlrOHOjdhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMzEwOQ==", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/19198#discussion_r485023109", "createdAt": "2020-09-08T15:47:46Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/ContentMapDataFetcher.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.dotcms.graphql.datafetcher;\n+\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+\n+public class ContentMapDataFetcher implements DataFetcher<Object> {\n+    @Override\n+    public Object get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final Contentlet contentlet = environment.getSource();\n+            final String key = environment.getArgument(\"key\");\n+            return contentlet.get(key);\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65297b5c6801897be97d5f8c7c31a00880d377b"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1844, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}