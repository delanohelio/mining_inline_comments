{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMjE4NjMy", "number": 17851, "title": "Issue 17850 reserved vars", "bodyText": "", "createdAt": "2020-01-15T16:12:53Z", "url": "https://github.com/dotCMS/core/pull/17851", "merged": true, "mergeCommit": {"oid": "9fe390a71b141f92908343b6ed79ae571c6c3130"}, "closed": true, "closedAt": "2020-02-11T14:59:15Z", "author": {"login": "wezell"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6m9OOAH2gAyMzYzMjE4NjMyOjE2NzUxOTY0OTVlZmU5ODc0YTIzOWFiZGJiYTNiMjM0NDc1ODZlZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDTCKmgFqTM1NjcyNTM2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1675196495efe9874a239abdbba3b23447586edd", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/1675196495efe9874a239abdbba3b23447586edd", "committedDate": "2020-01-15T15:05:48Z", "message": "#17850 untested fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9771491439a232e578800e108fd393754f4de8c", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/c9771491439a232e578800e108fd393754f4de8c", "committedDate": "2020-01-15T15:30:05Z", "message": "#17850 test lowercase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "849b9274382732424cc6db31f98e65ac87ca93c3", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/849b9274382732424cc6db31f98e65ac87ca93c3", "committedDate": "2020-01-15T16:18:36Z", "message": "#17850 throws execption before saving"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzY3NDEy", "url": "https://github.com/dotCMS/core/pull/17851#pullrequestreview-343367412", "createdAt": "2020-01-15T16:50:37Z", "commit": {"oid": "849b9274382732424cc6db31f98e65ac87ca93c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjo1MDozN1rOFd_Lnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjo1MDozN1rOFd_Lnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4ODE5MQ==", "bodyText": "sorry to bother, we could use a Logger here, for tracking purposes.", "url": "https://github.com/dotCMS/core/pull/17851#discussion_r366988191", "createdAt": "2020-01-15T16:50:37Z", "author": {"login": "oarrietadotcms"}, "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java", "diffHunk": "@@ -316,7 +367,9 @@ private ContentType dbSaveUpdate(final ContentType saveType) throws DotDataExcep\n     }\n \n     ContentType retType = builder.build();\n-\n+    if(reservedContentTypeVars.contains(retType.variable().toLowerCase())){\n+        throw new IllegalArgumentException(\"Invalid content type variable - reserved var name: \" + retType.variable().toLowerCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "849b9274382732424cc6db31f98e65ac87ca93c3"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e2be40ea72d5fb43dee7bad4ca7cf90ab9d420f", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/0e2be40ea72d5fb43dee7bad4ca7cf90ab9d420f", "committedDate": "2020-02-05T21:54:00Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c693b45499f867b5b086b9310b1e378aa0424e18", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/c693b45499f867b5b086b9310b1e378aa0424e18", "committedDate": "2020-02-05T23:06:04Z", "message": "#17850 include integration-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d62995b21a9f69b9d7cbb7c1dc2428bb2924b70", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/4d62995b21a9f69b9d7cbb7c1dc2428bb2924b70", "committedDate": "2020-02-05T23:09:38Z", "message": "#17850 fix terminology"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTAwNTIy", "url": "https://github.com/dotCMS/core/pull/17851#pullrequestreview-354500522", "createdAt": "2020-02-06T14:41:27Z", "commit": {"oid": "4d62995b21a9f69b9d7cbb7c1dc2428bb2924b70"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTA3NTU4", "url": "https://github.com/dotCMS/core/pull/17851#pullrequestreview-354507558", "createdAt": "2020-02-06T14:50:08Z", "commit": {"oid": "4d62995b21a9f69b9d7cbb7c1dc2428bb2924b70"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91113a7b077b76129052c61c4d3918a6b27cd108", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/91113a7b077b76129052c61c4d3918a6b27cd108", "committedDate": "2020-02-06T16:45:32Z", "message": "#17850 code-review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4708faa0bf89f3fcd5f17621bce5fddca1df8128", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/4708faa0bf89f3fcd5f17621bce5fddca1df8128", "committedDate": "2020-02-10T17:37:23Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/acd52e3029e5451ea92c531d02be62d9325f2d3e", "committedDate": "2020-02-10T22:43:16Z", "message": "#17850 refactor test to avoid calling init service"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzIzNDEw", "url": "https://github.com/dotCMS/core/pull/17851#pullrequestreview-356323410", "createdAt": "2020-02-10T22:50:37Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjo1MDozN1rOFn4gsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjo1MDozN1rOFn4gsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2NDY1OA==", "bodyText": "Issue found: Local variable 'eeTypes' could be declared final", "url": "https://github.com/dotCMS/core/pull/17851#discussion_r377364658", "createdAt": "2020-02-10T22:50:37Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -631,40 +631,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzIzNDI5", "url": "https://github.com/dotCMS/core/pull/17851#pullrequestreview-356323429", "createdAt": "2020-02-10T22:50:38Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjo1MDozOVrOFn4gvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjo1MDozOVrOFn4gvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2NDY3MA==", "bodyText": "Issue found: Local variable 'eeTypesList' could be declared final", "url": "https://github.com/dotCMS/core/pull/17851#discussion_r377364670", "createdAt": "2020-02-10T22:50:39Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -631,40 +631,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator\n                 .getContentTypeAPI(APILocator.systemUser()).findAll().stream()\n                 .filter((type)->type instanceof EnterpriseType).collect(Collectors.toList());\n \n-        // returns a List of Tuple (typeName, baseType)\n-        return eeTypes.stream().map((type)->\n-                new Tuple2<>(\"my\"+type.variable(), type.baseType())\n-        ).collect(Collectors.toList());\n-    }\n-\n-    @Test\n-    @UseDataProvider(\"dataProviderEEContentTypes\")\n-    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema(\n-            final Tuple2<String, BaseContentType> testCase) throws Exception{\n-        ContentType customType = null;\n-\n-        try {\n-            // create custom persona type. 1=typeName, 2=BaseType\n-            customType = createType(testCase._1,\n-                    testCase._2);\n-\n-            runNoLicense(() -> {\n-                final GraphQLSchema schema = APILocator.getGraphqlAPI().getSchema();\n-                assertNull(schema.getType(testCase._1));\n-            });\n-        } finally {\n-            if(customType!=null) {\n-                APILocator.getContentTypeAPI(APILocator.systemUser()).delete(customType);\n+        List<Tuple2<String, BaseContentType>> eeTypesList = eeTypes.stream().map((type)->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzIzNDM4", "url": "https://github.com/dotCMS/core/pull/17851#pullrequestreview-356323438", "createdAt": "2020-02-10T22:50:40Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjo1MDo0MFrOFn4gyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjo1MDo0MFrOFn4gyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2NDY4Mw==", "bodyText": "Issue found: JUnit tests should include assert() or fail()", "url": "https://github.com/dotCMS/core/pull/17851#discussion_r377364683", "createdAt": "2020-02-10T22:50:40Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -631,40 +631,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzIzNDQ4", "url": "https://github.com/dotCMS/core/pull/17851#pullrequestreview-356323448", "createdAt": "2020-02-10T22:50:41Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjo1MDo0MVrOFn4gzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjo1MDo0MVrOFn4gzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2NDY4Nw==", "bodyText": "Issue found: Local variable 'testCase' could be declared final", "url": "https://github.com/dotCMS/core/pull/17851#discussion_r377364687", "createdAt": "2020-02-10T22:50:41Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -631,40 +631,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator\n                 .getContentTypeAPI(APILocator.systemUser()).findAll().stream()\n                 .filter((type)->type instanceof EnterpriseType).collect(Collectors.toList());\n \n-        // returns a List of Tuple (typeName, baseType)\n-        return eeTypes.stream().map((type)->\n-                new Tuple2<>(\"my\"+type.variable(), type.baseType())\n-        ).collect(Collectors.toList());\n-    }\n-\n-    @Test\n-    @UseDataProvider(\"dataProviderEEContentTypes\")\n-    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema(\n-            final Tuple2<String, BaseContentType> testCase) throws Exception{\n-        ContentType customType = null;\n-\n-        try {\n-            // create custom persona type. 1=typeName, 2=BaseType\n-            customType = createType(testCase._1,\n-                    testCase._2);\n-\n-            runNoLicense(() -> {\n-                final GraphQLSchema schema = APILocator.getGraphqlAPI().getSchema();\n-                assertNull(schema.getType(testCase._1));\n-            });\n-        } finally {\n-            if(customType!=null) {\n-                APILocator.getContentTypeAPI(APILocator.systemUser()).delete(customType);\n+        List<Tuple2<String, BaseContentType>> eeTypesList = eeTypes.stream().map((type)->\n+                        new Tuple2<>(\"my\"+type.variable(), type.baseType())).collect(Collectors.toList());\n+\n+        for (Tuple2<String, BaseContentType> testCase : eeTypesList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NzI1MzY3", "url": "https://github.com/dotCMS/core/pull/17851#pullrequestreview-356725367", "createdAt": "2020-02-11T14:58:25Z", "commit": {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1299, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}