{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNTYyNjU4", "number": 18066, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTowMTo1MlrODj82lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMToyMjowOVrODj9KDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDIzNzY3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/sites/ruleengine/rules/RuleResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTowMTo1MlrOFwCtaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTowMTo1MlrOFwCtaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMDM2MQ==", "bodyText": "Issue found: Avoid reassigning parameters such as 'siteId'", "url": "https://github.com/dotCMS/core/pull/18066#discussion_r385920361", "createdAt": "2020-02-28T21:01:52Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/sites/ruleengine/rules/RuleResource.java", "diffHunk": "@@ -77,11 +79,15 @@ protected RuleResource(ApiProvider apiProvider, WebResource webResource) {\n     @Path(\"/rules\")\n     @NoCache\n     @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n-    public Map<String, RestRule> list(@Context HttpServletRequest request, @Context final HttpServletResponse response, @PathParam(\"siteId\") String siteId) {\n+    public Map<String, RestRule> list(\n+            @Context final HttpServletRequest request,\n+            @Context final HttpServletResponse response,\n+            @PathParam(\"siteId\") String siteId) throws DotSecurityException, DotDataException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0548ce1d1025ffc9fd82e5a2480544fbb14e1985"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDIzNzc1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/sites/ruleengine/rules/RuleResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTowMTo1NFrOFwCtdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTowMTo1NFrOFwCtdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMDM3Mw==", "bodyText": "Issue found: The String literal \"siteId\" appears 5 times in this file; the first occurrence is on line 85", "url": "https://github.com/dotCMS/core/pull/18066#discussion_r385920373", "createdAt": "2020-02-28T21:01:54Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/sites/ruleengine/rules/RuleResource.java", "diffHunk": "@@ -77,11 +79,15 @@ protected RuleResource(ApiProvider apiProvider, WebResource webResource) {\n     @Path(\"/rules\")\n     @NoCache\n     @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n-    public Map<String, RestRule> list(@Context HttpServletRequest request, @Context final HttpServletResponse response, @PathParam(\"siteId\") String siteId) {\n+    public Map<String, RestRule> list(\n+            @Context final HttpServletRequest request,\n+            @Context final HttpServletResponse response,\n+            @PathParam(\"siteId\") String siteId) throws DotSecurityException, DotDataException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0548ce1d1025ffc9fd82e5a2480544fbb14e1985"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDIzNzg3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/enterprise/rules/RulesAPIImplIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTowMTo1NVrOFwCthA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTowMTo1NVrOFwCthA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMDM4OA==", "bodyText": "Issue found: Avoid unused imports such as 'com.dotmarketing.business'", "url": "https://github.com/dotCMS/core/pull/18066#discussion_r385920388", "createdAt": "2020-02-28T21:01:55Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/enterprise/rules/RulesAPIImplIntegrationTest.java", "diffHunk": "@@ -7,10 +7,7 @@\n import com.dotcms.util.IntegrationTestInitService;\n import com.dotmarketing.beans.Host;\n import com.dotmarketing.beans.Permission;\n-import com.dotmarketing.business.APILocator;\n-import com.dotmarketing.business.CacheLocator;\n-import com.dotmarketing.business.PermissionAPI;\n-import com.dotmarketing.business.Role;\n+import com.dotmarketing.business.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0548ce1d1025ffc9fd82e5a2480544fbb14e1985"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDI4NzUxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/enterprise/rules/RulesAPIImplIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMToyMjowOVrOFwDL3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMToyMjowOVrOFwDL3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyODE1OA==", "bodyText": "let's add a finally to remove created stuff", "url": "https://github.com/dotCMS/core/pull/18066#discussion_r385928158", "createdAt": "2020-02-28T21:22:09Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/integration-test/java/com/dotcms/enterprise/rules/RulesAPIImplIntegrationTest.java", "diffHunk": "@@ -52,6 +51,74 @@ public static void prepare() throws Exception {\n         rulesAPI   = APILocator.getRulesAPI();\n     }\n \n+    /**\n+     * Method to Test: {@link RulesAPIImpl#getAllRulesByParent(Ruleable, User, boolean)}\n+     * When: User with permission try to get all the rules from host\n+     * Should: Return all the rules from the host\n+     *\n+     * @throws DotSecurityException\n+     * @throws DotDataException\n+     */\n+    @Test\n+    public void shouldGetRules() throws DotSecurityException, DotDataException {\n+        final Role role = new RoleDataGen().nextPersisted();\n+        final User user = new UserDataGen().roles(role).nextPersisted();\n+        final Host host = new SiteDataGen().nextPersisted();\n+        final Rule rule1 = new RuleDataGen().host(host).nextPersisted();\n+        final Rule rule2 = new RuleDataGen().host(host).nextPersisted();\n+\n+        final Host anotherHost = new SiteDataGen().nextPersisted();\n+        final Rule rule3 = new RuleDataGen().host(anotherHost).nextPersisted();\n+\n+        this.addPermission(role, host, false);\n+        final List<Rule> rules = rulesAPI.getAllRulesByParent(host, user, false);\n+\n+        assertEquals(2, rules.size());\n+\n+        final List<String> rulesId = rules.stream().map(rule -> rule.getId()).collect(Collectors.toList());\n+        assertTrue(rulesId.contains(rule1.getId()));\n+        assertTrue(rulesId.contains(rule2.getId()));\n+        assertFalse(rulesId.contains(rule3.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0548ce1d1025ffc9fd82e5a2480544fbb14e1985"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2343, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}