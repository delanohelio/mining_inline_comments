{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODExNzAy", "number": 18437, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1NlrOD57veA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1OVrOD57vng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDc0MjMyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/browser/BrowserAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1N1rOGRfFJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1N1rOGRfFJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4ODE5OQ==", "bodyText": "Issue found: Avoid declaring a variable if it is unreferenced before a possible exit point.", "url": "https://github.com/dotCMS/core/pull/18437#discussion_r420988199", "createdAt": "2020-05-06T18:03:57Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/browser/BrowserAPIImpl.java", "diffHunk": "@@ -60,6 +62,7 @@\n     @CloseDBIfOpened\n     public Map<String, Object> getFolderContent(final BrowserQuery browserQuery) throws DotSecurityException, DotDataException {\n \n+        final MutableInt countItems                     = new MutableInt(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDc0MjUyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/browser/BrowserAPITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1OFrOGRfFSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1OFrOGRfFSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4ODIzMg==", "bodyText": "Issue found: The String literal \"total\" appears 5 times in this file; the first occurrence is on line 149", "url": "https://github.com/dotCMS/core/pull/18437#discussion_r420988232", "createdAt": "2020-05-06T18:03:58Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/browser/BrowserAPITest.java", "diffHunk": "@@ -113,7 +117,108 @@ public static void prepare() throws Exception {\n \n     }\n \n-    \n+    /**\n+     * Method to test: testing the pagination of the BrowserAPI, the test creates a site and a folder, them add 100 files and iterate over them with the browser api\n+     * Given Scenario: 1)  request items from 0 to 10\n+     *                  2) request items form 10 to 60\n+     *                  3) request items form 60 to 100\n+     *                  4) out of range\n+     * ExpectedResult: Must have always 100 files as a total, and should retrieve the respective items per request\n+     *\n+     */\n+\n+    @Test()\n+    public void test_GetFolderContent_pagination() throws DotDataException, DotSecurityException, IOException {\n+\n+        // create a folder\n+        // create a 100 files\n+        // paginate 10 in 100\n+        final SiteDataGen   siteDataGen   = new SiteDataGen();\n+        final FolderDataGen folderDataGen = new FolderDataGen();\n+        final Host          host          = siteDataGen.nextPersisted();\n+        final Folder        folder        = folderDataGen.site(host).nextPersisted();\n+\n+        for (int i = 0; i < 100; ++i) {\n+\n+            new FileAssetDataGen(FileUtil.createTemporalFile(\"test\", \".txt\", \"this is a test\")).host(host)\n+                    .folder(folder).setPolicy(IndexPolicy.WAIT_FOR).nextPersisted();\n+        }\n+\n+        Map<String, Object> resultMap = browserAPI.getFolderContent(BrowserQuery.builder()\n+                .showDotAssets(true)\n+                .showLinks(true)\n+                .withHostOrFolderId(folder.getIdentifier())\n+                .offset(0)\n+                .showFiles(true)\n+                .showFolders(true)\n+                .showWorking(true)\n+                .maxResults(10)\n+                .build());\n+\n+        assertNotNull(resultMap);\n+        assertEquals(100l, resultMap.get(\"total\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDc0MjcwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/browser/BrowserAPITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1OVrOGRfFXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1OVrOGRfFXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4ODI1NA==", "bodyText": "Issue found: The String literal \"list\" appears 6 times in this file; the first occurrence is on line 151", "url": "https://github.com/dotCMS/core/pull/18437#discussion_r420988254", "createdAt": "2020-05-06T18:03:59Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/browser/BrowserAPITest.java", "diffHunk": "@@ -113,7 +117,108 @@ public static void prepare() throws Exception {\n \n     }\n \n-    \n+    /**\n+     * Method to test: testing the pagination of the BrowserAPI, the test creates a site and a folder, them add 100 files and iterate over them with the browser api\n+     * Given Scenario: 1)  request items from 0 to 10\n+     *                  2) request items form 10 to 60\n+     *                  3) request items form 60 to 100\n+     *                  4) out of range\n+     * ExpectedResult: Must have always 100 files as a total, and should retrieve the respective items per request\n+     *\n+     */\n+\n+    @Test()\n+    public void test_GetFolderContent_pagination() throws DotDataException, DotSecurityException, IOException {\n+\n+        // create a folder\n+        // create a 100 files\n+        // paginate 10 in 100\n+        final SiteDataGen   siteDataGen   = new SiteDataGen();\n+        final FolderDataGen folderDataGen = new FolderDataGen();\n+        final Host          host          = siteDataGen.nextPersisted();\n+        final Folder        folder        = folderDataGen.site(host).nextPersisted();\n+\n+        for (int i = 0; i < 100; ++i) {\n+\n+            new FileAssetDataGen(FileUtil.createTemporalFile(\"test\", \".txt\", \"this is a test\")).host(host)\n+                    .folder(folder).setPolicy(IndexPolicy.WAIT_FOR).nextPersisted();\n+        }\n+\n+        Map<String, Object> resultMap = browserAPI.getFolderContent(BrowserQuery.builder()\n+                .showDotAssets(true)\n+                .showLinks(true)\n+                .withHostOrFolderId(folder.getIdentifier())\n+                .offset(0)\n+                .showFiles(true)\n+                .showFolders(true)\n+                .showWorking(true)\n+                .maxResults(10)\n+                .build());\n+\n+        assertNotNull(resultMap);\n+        assertEquals(100l, resultMap.get(\"total\"));\n+\n+        List<Map<String, Object>> results = (List<Map<String, Object>>)resultMap.get(\"list\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2293, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}