{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4Mzc1Njcx", "number": 18266, "title": "#18132 Fix another case and Integration test for it", "bodyText": "Includes a fix for a new case.\nGiven a Content in default language only referenced from a page in default language, creating a Site-Search run including the second language only was not including the page in the results after searching for a string contained in the content's body. This with both DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true and DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true, which of course should have included the page in the results.\nProblem was a condition not taking into consideration the versionInfo not being null but having null properties. This was taking into consideration right below in the next IF condition.\nAn Integration test was included for this case.", "createdAt": "2020-04-03T20:39:09Z", "url": "https://github.com/dotCMS/core/pull/18266", "merged": true, "mergeCommit": {"oid": "d8c607854e15dcf61f4b71898b2660aef086e0f4"}, "closed": true, "closedAt": "2020-04-13T21:19:07Z", "author": {"login": "dsilvam"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUHDyBAH2gAyMzk4Mzc1NjcxOmNhN2Q0NWQwMTQxOGQzYjgxNjgzYTY0NTgwNGJkNzIxMGY0NmVmOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXRxkSAFqTM5MjI3MTM4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca7d45d01418d3b81683a645804bd7210f46ef95", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/ca7d45d01418d3b81683a645804bd7210f46ef95", "committedDate": "2020-04-03T20:38:02Z", "message": "#18132 Fix another case and Integration test for it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTcxNDg3", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-387571487", "createdAt": "2020-04-03T20:49:39Z", "commit": {"oid": "ca7d45d01418d3b81683a645804bd7210f46ef95"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDo0OTozOVrOGApBrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTowMDo1M1rOGApgfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMyNTM1OA==", "bodyText": "it better move this logic into a private method", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r403325358", "createdAt": "2020-04-03T20:49:39Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/services/ContentletLoader.java", "diffHunk": "@@ -560,7 +560,8 @@ public InputStream writeObject(final VelocityResourceKey key)\n \n         long language = new Long(key.language);\n         ContentletVersionInfo info = APILocator.getVersionableAPI().getContentletVersionInfo(key.id1, language);\n-        if (info == null && language != defaultLang && APILocator.getLanguageAPI().canDefaultContentToDefaultLanguage()) {\n+\n+        if ((info == null || key.mode.showLive && info.getLiveInode() == null) && language != defaultLang && APILocator.getLanguageAPI().canDefaultContentToDefaultLanguage()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7d45d01418d3b81683a645804bd7210f46ef95"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzMjUxOA==", "bodyText": "here we should check also if it is the right content", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r403332518", "createdAt": "2020-04-03T20:59:11Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -551,7 +619,79 @@ public void test_MultilangContent_IndexingAllLanguages()\n             SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);\n             Assert.assertTrue(searchResults.getTotalResults() >= 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7d45d01418d3b81683a645804bd7210f46ef95"}, "originalPosition": 184}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzMjU4Mg==", "bodyText": "here we should check also if it is the right content", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r403332582", "createdAt": "2020-04-03T20:59:20Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -551,7 +619,79 @@ public void test_MultilangContent_IndexingAllLanguages()\n             SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);\n             Assert.assertTrue(searchResults.getTotalResults() >= 1);\n \n-            searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n+        } finally {\n+            Config.setProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\",\n+                    defaultContentToDefaultLangOriginalValue);\n+        }\n+    }\n+\n+    /**\n+     * Given sceneario: Content in default language only referenced from a page in default language, and having DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true.\n+     * Create a Site-Search run including the second language only.\n+     * Expected result: the page should be in the results, because DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true and DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true .\n+     */\n+\n+    @Test\n+    public void test_DefaultLangContent_DefaultLangPage_IndexingSecondLang_ShouldFindResults()\n+            throws DotPublishingException, JobExecutionException, DotDataException, IOException, DotSecurityException, WebAssetException {\n+\n+        boolean defaultContentToDefaultLangOriginalValue =\n+                Config.getBooleanProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", false);\n+\n+        try {\n+\n+            Config.setProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", true);\n+\n+            final Host site = new SiteDataGen().nextPersisted();\n+            Language defaultLang = APILocator.getLanguageAPI().getDefaultLanguage();\n+            Language secondLang = new LanguageDataGen().nextPersisted();\n+            folder = new FolderDataGen().site(site).nextPersisted();\n+\n+            Contentlet contentDefaultLang = createAndPublishEmployeeContent(site, defaultLang, \"catherine\");\n+\n+            // create container, template and htmlpage to reference previously created content\n+\n+            HTMLPageAsset page = createHtmlPageAsset(defaultLang, contentDefaultLang);\n+\n+            final String html = APILocator.getHTMLPageAssetAPI().getHTML(page.getURI(), site, true,\n+                    contentDefaultLang.getIdentifier(), APILocator.systemUser(),\n+                    contentDefaultLang.getLanguageId(), USER_AGENT_DOTCMS_SITESEARCH);\n+\n+            Assert.assertFalse(html.isEmpty());\n+            Assert.assertTrue(\"Page should contain content's body\", html.contains(\"catherine\"));\n+\n+            final List<String> indicesBeforeTest = siteSearchAPI.listIndices();\n+            for (final String index : indicesBeforeTest) {\n+                esIndexAPI.delete(index);\n+            }\n+            final String jobId = UUIDUtil.uuid();\n+            final String alias = \"any-alias-\" + System.currentTimeMillis();\n+            final JobDataMap jobDataMap = new JobDataMap();\n+            jobDataMap.put(SiteSearchJobImpl.RUN_NOW, Boolean.TRUE.toString());\n+            jobDataMap.put(SiteSearchJobImpl.INCREMENTAL, Boolean.FALSE.toString());\n+            jobDataMap.put(SiteSearchJobImpl.INDEX_ALIAS, alias);\n+            jobDataMap.put(SiteSearchJobImpl.JOB_ID, jobId);\n+            jobDataMap.put(SiteSearchJobImpl.QUARTZ_JOB_NAME,\n+                    SiteSearchJobImpl.RUNNING_ONCE_JOB_NAME);\n+            jobDataMap.put(SiteSearchJobImpl.INCLUDE_EXCLUDE, \"all\");\n+            jobDataMap\n+                    .put(SiteSearchJobImpl.LANG_TO_INDEX, new String[]{\n+                            Long.toString(secondLang.getId())});\n+            jobDataMap.put(SiteSearchJobImpl.INDEX_HOST, site.getIdentifier());\n+\n+            final JobDetail jobDetail = Mockito.mock(JobDetail.class);\n+            Mockito.when(jobDetail.getJobDataMap()).thenReturn(jobDataMap);\n+            final JobExecutionContext context = Mockito.mock(JobExecutionContext.class);\n+            Mockito.when(context.getJobDetail()).thenReturn(jobDetail);\n+            Mockito.when(context.getFireTime()).thenReturn(new Date());\n+            final SiteSearchJobImpl impl = new SiteSearchJobImpl();\n+            impl.run(context);\n+\n+            final List<String> indicesAfterTest = siteSearchAPI.listIndices();\n+            Assert.assertFalse(indicesAfterTest.isEmpty());\n+            final String newIndexName = indicesAfterTest.get(0);\n+\n+            SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n             Assert.assertTrue(searchResults.getTotalResults() >= 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7d45d01418d3b81683a645804bd7210f46ef95"}, "originalPosition": 260}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzMjk2Mw==", "bodyText": "do we have this scenario?\nContent in default language only referenced from a page in default language, and having DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=false.", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r403332963", "createdAt": "2020-04-03T21:00:14Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -560,5 +700,32 @@ public void test_MultilangContent_IndexingAllLanguages()\n         }\n     }\n \n+    private HTMLPageAsset createHtmlPageAsset(Language lang1, Contentlet contentlet)\n+            throws DotSecurityException, WebAssetException, DotDataException {\n+        final Container container = new ContainerDataGen().withContentType(contentlet\n+                .getContentType(), \"$!{firstName}\").nextPersisted();\n+\n+        ContainerDataGen.publish(container);\n+\n+        final String uuid = UUIDGenerator.generateUuid();\n+\n+        final Template template = new TemplateDataGen()\n+                .withContainer(container.getIdentifier(), uuid)\n+                .nextPersisted();\n+\n+        TemplateDataGen.publish(template);\n+\n+        HTMLPageAsset page = new HTMLPageDataGen(folder, template).languageId(lang1.getId())\n+                .nextPersisted();\n+\n+        HTMLPageDataGen.publish(page);\n \n+        final MultiTree multiTree = new MultiTree(page.getIdentifier(),\n+                container.getIdentifier(),\n+                contentlet.getIdentifier(), getDotParserContainerUUID(uuid), 0);\n+\n+        APILocator.getMultiTreeAPI().saveMultiTree(multiTree);\n+\n+        return page;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7d45d01418d3b81683a645804bd7210f46ef95"}, "originalPosition": 294}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzMzI0NA==", "bodyText": "and this one?\nContent in default language only referenced from a page in default language, and having DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=false.", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r403333244", "createdAt": "2020-04-03T21:00:53Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -560,5 +700,32 @@ public void test_MultilangContent_IndexingAllLanguages()\n         }\n     }\n \n+    private HTMLPageAsset createHtmlPageAsset(Language lang1, Contentlet contentlet)\n+            throws DotSecurityException, WebAssetException, DotDataException {\n+        final Container container = new ContainerDataGen().withContentType(contentlet\n+                .getContentType(), \"$!{firstName}\").nextPersisted();\n+\n+        ContainerDataGen.publish(container);\n+\n+        final String uuid = UUIDGenerator.generateUuid();\n+\n+        final Template template = new TemplateDataGen()\n+                .withContainer(container.getIdentifier(), uuid)\n+                .nextPersisted();\n+\n+        TemplateDataGen.publish(template);\n+\n+        HTMLPageAsset page = new HTMLPageDataGen(folder, template).languageId(lang1.getId())\n+                .nextPersisted();\n+\n+        HTMLPageDataGen.publish(page);\n \n+        final MultiTree multiTree = new MultiTree(page.getIdentifier(),\n+                container.getIdentifier(),\n+                contentlet.getIdentifier(), getDotParserContainerUUID(uuid), 0);\n+\n+        APILocator.getMultiTreeAPI().saveMultiTree(multiTree);\n+\n+        return page;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzMjk2Mw=="}, "originalCommit": {"oid": "ca7d45d01418d3b81683a645804bd7210f46ef95"}, "originalPosition": 294}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ced26b1d3c559cd4262ce7048e64cfc506b9d2e", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/8ced26b1d3c559cd4262ce7048e64cfc506b9d2e", "committedDate": "2020-04-04T00:21:31Z", "message": "#18132 refactor tests with datagens. New cases included"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3627c64bf241f81e55db4a980ba2f8fc976ee2bf", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/3627c64bf241f81e55db4a980ba2f8fc976ee2bf", "committedDate": "2020-04-06T19:53:50Z", "message": "#18132 new test cases and refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d58061abef2d3369b5a6adcd7cac3e5e15246c0c", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/d58061abef2d3369b5a6adcd7cac3e5e15246c0c", "committedDate": "2020-04-06T21:21:14Z", "message": "#18132 test case class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5de2a0c2c46018761badc26a262ba31a0f595e56", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/5de2a0c2c46018761badc26a262ba31a0f595e56", "committedDate": "2020-04-07T15:11:07Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-18132-fixing-another-case-and-integration-test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDI4ODUy", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-390028852", "createdAt": "2020-04-08T14:28:25Z", "commit": {"oid": "d58061abef2d3369b5a6adcd7cac3e5e15246c0c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b06fc777c93e2cf935ebbae16592991c5fec58e4", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/b06fc777c93e2cf935ebbae16592991c5fec58e4", "committedDate": "2020-04-08T18:39:17Z", "message": "#18132 fix another case for site-search. Tests updated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d1f66dcc4c39c14c5b51dac24ef4bdb476f012d", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/3d1f66dcc4c39c14c5b51dac24ef4bdb476f012d", "committedDate": "2020-04-08T18:56:27Z", "message": "#18132 Tests updated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a82854d534b12c6bdd696d0a7354d6d268148146", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/a82854d534b12c6bdd696d0a7354d6d268148146", "committedDate": "2020-04-09T23:28:45Z", "message": "#18132 correct mapping for language"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c", "author": {"user": {"login": "dsilvam", "name": "Daniel Silva"}}, "url": "https://github.com/dotCMS/core/commit/c463df3cd4a88575a0add12b3ec924536c2a435c", "committedDate": "2020-04-13T16:39:37Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-18132-fixing-another-case-and-integration-test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjY3ODA2", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392267806", "createdAt": "2020-04-13T16:43:26Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMDQ5", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271049", "createdAt": "2020-04-13T16:48:26Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODoyNlrOGEs0rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODoyNlrOGEs0rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MTg3MA==", "bodyText": "Issue found: Parameter 'createContentInDefaultLanguage' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407581870", "createdAt": "2020-04-13T16:48:26Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/TestCaseSiteSearchBuilder.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.dotcms.publishing.job;\n+\n+import com.dotcms.publishing.job.SiteSearchJobImplTest.TestCaseSiteSearch;\n+\n+public class TestCaseSiteSearchBuilder {\n+\n+    private boolean defaultPageToDefaultLanguage;\n+    private boolean defaultContentToDefaultLanguage;\n+    private boolean siteSearchDefaultLanguage;\n+    private boolean siteSearchSecondLanguage;\n+    private boolean siteSearchThirdLanguage;\n+    private boolean createContentInDefaultLanguage;\n+    private boolean createContentInSecondLanguage;\n+    private boolean createContentInThirdLanguage;\n+    private boolean createPageInDefaultLanguage;\n+    private boolean createPageInSecondLanguage;\n+    private boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+    private boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+    private boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+    public TestCaseSiteSearchBuilder defaultPageToDefaultLanguage(\n+            boolean defaultPageToDefaultLanguage) {\n+        this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder defaultContentToDefaultLanguage(\n+            boolean defaultContentToDefaultLanguage) {\n+        this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder siteSearchDefaultLanguage(\n+            boolean siteSearchDefaultLanguage) {\n+        this.siteSearchDefaultLanguage = siteSearchDefaultLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder siteSearchSecondLanguage(boolean siteSearchSecondLanguage) {\n+        this.siteSearchSecondLanguage = siteSearchSecondLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder siteSearchThirdLanguage(boolean siteSearchThirdLanguage) {\n+        this.siteSearchThirdLanguage = siteSearchThirdLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder createContentInDefaultLanguage(\n+            boolean createContentInDefaultLanguage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMDYw", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271060", "createdAt": "2020-04-13T16:48:27Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODoyN1rOGEs0vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODoyN1rOGEs0vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MTg4NQ==", "bodyText": "Issue found: Local variable 'case3' could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407581885", "createdAt": "2020-04-13T16:48:27Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,\n+                boolean createContentInDefaultLanguage,\n+                boolean createContentInSecondLanguage, boolean createContentInThirdLanguage,\n+                boolean createPageInDefaultLanguage,\n+                boolean createPageInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInDefaultLanguage,\n+                boolean expectedResultsWhenSearchingContentInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInThirdLanguage) {\n+            this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+            this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+            this.siteSearchDefaultLanguage = siteSearchDefaultLanguage;\n+            this.siteSearchSecondLanguage = siteSearchSecondLanguage;\n+            this.siteSearchThirdLanguage = siteSearchThirdLanguage;\n+            this.createContentInDefaultLanguage = createContentInDefaultLanguage;\n+            this.createContentInSecondLanguage = createContentInSecondLanguage;\n+            this.createContentInThirdLanguage = createContentInThirdLanguage;\n+            this.createPageInDefaultLanguage = createPageInDefaultLanguage;\n+            this.createPageInSecondLanguage = createPageInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInDefaultLanguage = expectedResultsWhenSearchingContentInDefaultLanguage;\n+            this.expectedResultsWhenSearchingContentInSecondLanguage = expectedResultsWhenSearchingContentInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInThirdLanguage = expectedResultsWhenSearchingContentInThirdLanguage;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] siteSearchTestCases() {\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in default language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case1 = new TestCaseSiteSearchBuilder()\n+                .siteSearchDefaultLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case2 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=false\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         *\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case3 = new TestCaseSiteSearchBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 121}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMDc1", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271075", "createdAt": "2020-04-13T16:48:28Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODoyOFrOGEs0yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODoyOFrOGEs0yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MTg5OA==", "bodyText": "Issue found: Local variable 'defaultPagetoDefaultLangOriginalValue' could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407581898", "createdAt": "2020-04-13T16:48:28Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,\n+                boolean createContentInDefaultLanguage,\n+                boolean createContentInSecondLanguage, boolean createContentInThirdLanguage,\n+                boolean createPageInDefaultLanguage,\n+                boolean createPageInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInDefaultLanguage,\n+                boolean expectedResultsWhenSearchingContentInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInThirdLanguage) {\n+            this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+            this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+            this.siteSearchDefaultLanguage = siteSearchDefaultLanguage;\n+            this.siteSearchSecondLanguage = siteSearchSecondLanguage;\n+            this.siteSearchThirdLanguage = siteSearchThirdLanguage;\n+            this.createContentInDefaultLanguage = createContentInDefaultLanguage;\n+            this.createContentInSecondLanguage = createContentInSecondLanguage;\n+            this.createContentInThirdLanguage = createContentInThirdLanguage;\n+            this.createPageInDefaultLanguage = createPageInDefaultLanguage;\n+            this.createPageInSecondLanguage = createPageInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInDefaultLanguage = expectedResultsWhenSearchingContentInDefaultLanguage;\n+            this.expectedResultsWhenSearchingContentInSecondLanguage = expectedResultsWhenSearchingContentInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInThirdLanguage = expectedResultsWhenSearchingContentInThirdLanguage;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] siteSearchTestCases() {\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in default language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case1 = new TestCaseSiteSearchBuilder()\n+                .siteSearchDefaultLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case2 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=false\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         *\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case3 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(false)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+\n+         * Given sceneario: Content in second language only referenced from a page in default language.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true.\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language.\n+         * Expected: searching for content in second language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case4 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        /*\n+         * Same as above but with DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=false\n+         * Expected: searching for content in second language should give NO results.\n+         */\n+\n+        TestCaseSiteSearch case5 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(false)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: two-language (default and second) content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run including both languages\n+         * Expected: searching content of either version of the content should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case6 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        /*\n+         * Given sceneario: two-language (second and third) content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run including both languages\n+         * Expected: searching content of either version of the content should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case7 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .siteSearchThirdLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createContentInThirdLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .expectedResultsWhenSearchingContentInThirdLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        return new TestCaseSiteSearch[] {case1, case2, case3, case4, case5, case6, case7};\n+    }\n \n+    @UseDataProvider(\"siteSearchTestCases\")\n     @Test\n-    public void test_MultilangContent_IndexingAllLanguages()\n+    public void testSiteSearchDifferentScenarios(final TestCaseSiteSearch testCase)\n             throws DotPublishingException, JobExecutionException, DotDataException, IOException, DotSecurityException, WebAssetException {\n \n         boolean defaultContentToDefaultLangOriginalValue =\n                 Config.getBooleanProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", false);\n \n-        try {\n+        boolean defaultPagetoDefaultLangOriginalValue =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 215}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMDk0", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271094", "createdAt": "2020-04-13T16:48:29Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODoyOVrOGEs03Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODoyOVrOGEs03Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MTkxNw==", "bodyText": "Issue found: Avoid unused private methods such as 'createNewVersionHtmlPage(HTMLPageAsset,Language)'.", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407581917", "createdAt": "2020-04-13T16:48:29Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -539,17 +704,118 @@ public void test_MultilangContent_IndexingAllLanguages()\n             Assert.assertFalse(indicesAfterTest.isEmpty());\n             final String newIndexName = indicesAfterTest.get(0);\n \n-            SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);\n-            Assert.assertTrue(searchResults.getTotalResults() >= 1);\n \n-            searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n-            Assert.assertTrue(searchResults.getTotalResults() >= 1);\n+            if(testCase.expectedResultsWhenSearchingContentInDefaultLanguage) {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n+                Assert.assertTrue(\"Content in default Language gives results\",\n+                        searchResults.getTotalResults() >= 1);\n+                Assert.assertEquals(pageDefaultLang.getTitle(),\n+                        searchResults.getResults().get(0).getTitle());\n+                Assert.assertEquals(pageDefaultLang.getLanguageId(),\n+                        searchResults.getResults().get(0).getLanguage());\n+            } else {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n+                Assert.assertEquals(\"Content in default Language gives NO results\", 0,\n+                        searchResults.getTotalResults());\n+            }\n+\n+            if(testCase.expectedResultsWhenSearchingContentInSecondLanguage) {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);\n+                Assert.assertTrue(\"Content in second Language gives results\",\n+                        searchResults.getTotalResults() >= 1);\n+                Assert.assertEquals(pageDefaultLang.getTitle(),\n+                        searchResults.getResults().get(0).getTitle());\n+                Assert.assertEquals(pageDefaultLang.getLanguageId(),\n+                        searchResults.getResults().get(0).getLanguage());\n+            } else {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);\n+                Assert.assertEquals(\"Content in second Language gives NO results\", 0,\n+                        searchResults.getTotalResults());\n+            }\n+\n+            if(testCase.expectedResultsWhenSearchingContentInThirdLanguage) {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"caterina\", 0, 10);\n+                Assert.assertTrue(\"Content in third Language gives results\",\n+                        searchResults.getTotalResults() >= 1);\n+                Assert.assertEquals(pageDefaultLang.getTitle(),\n+                        searchResults.getResults().get(0).getTitle());\n+                Assert.assertEquals(pageDefaultLang.getLanguageId(),\n+                        searchResults.getResults().get(0).getLanguage());\n+            } else {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"caterina\", 0, 10);\n+                Assert.assertEquals(\"Content in third Language gives NO results\", 0,\n+                        searchResults.getTotalResults());\n+            }\n \n         } finally {\n             Config.setProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\",\n                     defaultContentToDefaultLangOriginalValue);\n+\n+            Config.setProperty(\"DEFAULT_PAGE_TO_DEFAULT_LANGUAGE\",\n+                    defaultPagetoDefaultLangOriginalValue);\n         }\n     }\n \n+    private HTMLPageAsset createNewVersionHtmlPage(HTMLPageAsset pageDefaultLang, Language secondLang)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 385}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMTE0", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271114", "createdAt": "2020-04-13T16:48:31Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozMVrOGEs06Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozMVrOGEs06Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MTkyOQ==", "bodyText": "Issue found: Local variable 'searchResults' could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407581929", "createdAt": "2020-04-13T16:48:31Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -539,17 +704,118 @@ public void test_MultilangContent_IndexingAllLanguages()\n             Assert.assertFalse(indicesAfterTest.isEmpty());\n             final String newIndexName = indicesAfterTest.get(0);\n \n-            SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);\n-            Assert.assertTrue(searchResults.getTotalResults() >= 1);\n \n-            searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n-            Assert.assertTrue(searchResults.getTotalResults() >= 1);\n+            if(testCase.expectedResultsWhenSearchingContentInDefaultLanguage) {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n+                Assert.assertTrue(\"Content in default Language gives results\",\n+                        searchResults.getTotalResults() >= 1);\n+                Assert.assertEquals(pageDefaultLang.getTitle(),\n+                        searchResults.getResults().get(0).getTitle());\n+                Assert.assertEquals(pageDefaultLang.getLanguageId(),\n+                        searchResults.getResults().get(0).getLanguage());\n+            } else {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n+                Assert.assertEquals(\"Content in default Language gives NO results\", 0,\n+                        searchResults.getTotalResults());\n+            }\n+\n+            if(testCase.expectedResultsWhenSearchingContentInSecondLanguage) {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);\n+                Assert.assertTrue(\"Content in second Language gives results\",\n+                        searchResults.getTotalResults() >= 1);\n+                Assert.assertEquals(pageDefaultLang.getTitle(),\n+                        searchResults.getResults().get(0).getTitle());\n+                Assert.assertEquals(pageDefaultLang.getLanguageId(),\n+                        searchResults.getResults().get(0).getLanguage());\n+            } else {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 357}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMTI4", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271128", "createdAt": "2020-04-13T16:48:32Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozMlrOGEs08Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozMlrOGEs08Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MTkzNw==", "bodyText": "Issue found: Parameter 'siteSearchDefaultLanguage' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407581937", "createdAt": "2020-04-13T16:48:32Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/TestCaseSiteSearchBuilder.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.dotcms.publishing.job;\n+\n+import com.dotcms.publishing.job.SiteSearchJobImplTest.TestCaseSiteSearch;\n+\n+public class TestCaseSiteSearchBuilder {\n+\n+    private boolean defaultPageToDefaultLanguage;\n+    private boolean defaultContentToDefaultLanguage;\n+    private boolean siteSearchDefaultLanguage;\n+    private boolean siteSearchSecondLanguage;\n+    private boolean siteSearchThirdLanguage;\n+    private boolean createContentInDefaultLanguage;\n+    private boolean createContentInSecondLanguage;\n+    private boolean createContentInThirdLanguage;\n+    private boolean createPageInDefaultLanguage;\n+    private boolean createPageInSecondLanguage;\n+    private boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+    private boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+    private boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+    public TestCaseSiteSearchBuilder defaultPageToDefaultLanguage(\n+            boolean defaultPageToDefaultLanguage) {\n+        this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder defaultContentToDefaultLanguage(\n+            boolean defaultContentToDefaultLanguage) {\n+        this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder siteSearchDefaultLanguage(\n+            boolean siteSearchDefaultLanguage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMTQy", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271142", "createdAt": "2020-04-13T16:48:33Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozM1rOGEs0_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozM1rOGEs0_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MTk0OA==", "bodyText": "Issue found: Parameter 'firstName' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407581948", "createdAt": "2020-04-13T16:48:33Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -539,17 +704,118 @@ public void test_MultilangContent_IndexingAllLanguages()\n             Assert.assertFalse(indicesAfterTest.isEmpty());\n             final String newIndexName = indicesAfterTest.get(0);\n \n-            SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);\n-            Assert.assertTrue(searchResults.getTotalResults() >= 1);\n \n-            searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n-            Assert.assertTrue(searchResults.getTotalResults() >= 1);\n+            if(testCase.expectedResultsWhenSearchingContentInDefaultLanguage) {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n+                Assert.assertTrue(\"Content in default Language gives results\",\n+                        searchResults.getTotalResults() >= 1);\n+                Assert.assertEquals(pageDefaultLang.getTitle(),\n+                        searchResults.getResults().get(0).getTitle());\n+                Assert.assertEquals(pageDefaultLang.getLanguageId(),\n+                        searchResults.getResults().get(0).getLanguage());\n+            } else {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catherine\", 0, 10);\n+                Assert.assertEquals(\"Content in default Language gives NO results\", 0,\n+                        searchResults.getTotalResults());\n+            }\n+\n+            if(testCase.expectedResultsWhenSearchingContentInSecondLanguage) {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);\n+                Assert.assertTrue(\"Content in second Language gives results\",\n+                        searchResults.getTotalResults() >= 1);\n+                Assert.assertEquals(pageDefaultLang.getTitle(),\n+                        searchResults.getResults().get(0).getTitle());\n+                Assert.assertEquals(pageDefaultLang.getLanguageId(),\n+                        searchResults.getResults().get(0).getLanguage());\n+            } else {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"catalina\", 0, 10);\n+                Assert.assertEquals(\"Content in second Language gives NO results\", 0,\n+                        searchResults.getTotalResults());\n+            }\n+\n+            if(testCase.expectedResultsWhenSearchingContentInThirdLanguage) {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"caterina\", 0, 10);\n+                Assert.assertTrue(\"Content in third Language gives results\",\n+                        searchResults.getTotalResults() >= 1);\n+                Assert.assertEquals(pageDefaultLang.getTitle(),\n+                        searchResults.getResults().get(0).getTitle());\n+                Assert.assertEquals(pageDefaultLang.getLanguageId(),\n+                        searchResults.getResults().get(0).getLanguage());\n+            } else {\n+                SiteSearchResults searchResults = siteSearchAPI.search(newIndexName, \"caterina\", 0, 10);\n+                Assert.assertEquals(\"Content in third Language gives NO results\", 0,\n+                        searchResults.getTotalResults());\n+            }\n \n         } finally {\n             Config.setProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\",\n                     defaultContentToDefaultLangOriginalValue);\n+\n+            Config.setProperty(\"DEFAULT_PAGE_TO_DEFAULT_LANGUAGE\",\n+                    defaultPagetoDefaultLangOriginalValue);\n         }\n     }\n \n+    private HTMLPageAsset createNewVersionHtmlPage(HTMLPageAsset pageDefaultLang, Language secondLang)\n+            throws DotSecurityException, DotDataException {\n+        Contentlet pageSecondLang = contentletAPI.find(pageDefaultLang.getInode(), systemUser, false);\n+        pageSecondLang.setInode(\"\");\n+        pageSecondLang.setLanguageId(secondLang.getId());\n+        pageSecondLang = contentletAPI.checkin(pageSecondLang, systemUser, false);\n+        ContentletDataGen.publish(pageSecondLang);\n+        return APILocator.getHTMLPageAssetAPI().fromContentlet(pageSecondLang);\n+    }\n+\n+    private void createNewVersionAndPublishExistingEmployeeContent(Language newLang,\n+            Contentlet contentToCheckout, String firstName) throws DotDataException, DotSecurityException {\n+        Contentlet contentInNewLang = contentletAPI\n+                .find(contentToCheckout.getInode(), systemUser, false);\n+        contentInNewLang.setInode(\"\");\n+        contentInNewLang.setLanguageId(newLang.getId());\n+        contentInNewLang.setStringProperty(\"firstName\", firstName);\n+        contentInNewLang = contentletAPI.checkin(contentInNewLang, systemUser, false);\n+        ContentletDataGen.publish(contentInNewLang);\n+    }\n+\n+    private Contentlet createAndPublishEmployeeContent(Host site, Language language,\n+            String firstName) throws DotDataException, DotSecurityException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 407}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMTY2", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271166", "createdAt": "2020-04-13T16:48:34Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozNFrOGEs1Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozNFrOGEs1Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MTk2Mw==", "bodyText": "Issue found: Parameter 'defaultPageToDefaultLanguage' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407581963", "createdAt": "2020-04-13T16:48:34Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMTc0", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271174", "createdAt": "2020-04-13T16:48:35Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozNVrOGEs1HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozNVrOGEs1HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MTk4MQ==", "bodyText": "Issue found: Field defaultPageToDefaultLanguage has the same name as a method", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407581981", "createdAt": "2020-04-13T16:48:35Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/TestCaseSiteSearchBuilder.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.dotcms.publishing.job;\n+\n+import com.dotcms.publishing.job.SiteSearchJobImplTest.TestCaseSiteSearch;\n+\n+public class TestCaseSiteSearchBuilder {\n+\n+    private boolean defaultPageToDefaultLanguage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMTg2", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271186", "createdAt": "2020-04-13T16:48:36Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozNlrOGEs1KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozNlrOGEs1KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MTk5Mw==", "bodyText": "Issue found: Parameter 'expectedResultsWhenSearchingContentInSecondLanguage' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407581993", "createdAt": "2020-04-13T16:48:36Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,\n+                boolean createContentInDefaultLanguage,\n+                boolean createContentInSecondLanguage, boolean createContentInThirdLanguage,\n+                boolean createPageInDefaultLanguage,\n+                boolean createPageInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInDefaultLanguage,\n+                boolean expectedResultsWhenSearchingContentInSecondLanguage,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMTk4", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271198", "createdAt": "2020-04-13T16:48:37Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozN1rOGEs1Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozN1rOGEs1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjAwNg==", "bodyText": "Issue found: Parameter 'siteSearchThirdLanguage' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582006", "createdAt": "2020-04-13T16:48:37Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMjA5", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271209", "createdAt": "2020-04-13T16:48:38Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozOFrOGEs1Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODozOFrOGEs1Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjAxNQ==", "bodyText": "Issue found: Parameter 'assetFile' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582015", "createdAt": "2020-04-13T16:48:38Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/publishing/Publisher.java", "diffHunk": "@@ -225,7 +227,12 @@ protected boolean shouldProcess ( File assetFile ) throws IOException, DotPublis\n         return true;\n     }\n \n-\tpublic Set<String> getProtocols(){\n+    private boolean doesPathContainLanguageId(File assetFile) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMjIx", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271221", "createdAt": "2020-04-13T16:48:39Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0MFrOGEs1RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0MFrOGEs1RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjAyMQ==", "bodyText": "Issue found: Field createContentInDefaultLanguage has the same name as a method", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582021", "createdAt": "2020-04-13T16:48:40Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/TestCaseSiteSearchBuilder.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.dotcms.publishing.job;\n+\n+import com.dotcms.publishing.job.SiteSearchJobImplTest.TestCaseSiteSearch;\n+\n+public class TestCaseSiteSearchBuilder {\n+\n+    private boolean defaultPageToDefaultLanguage;\n+    private boolean defaultContentToDefaultLanguage;\n+    private boolean siteSearchDefaultLanguage;\n+    private boolean siteSearchSecondLanguage;\n+    private boolean siteSearchThirdLanguage;\n+    private boolean createContentInDefaultLanguage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMjM4", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271238", "createdAt": "2020-04-13T16:48:40Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0MVrOGEs1VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0MVrOGEs1VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjAzNw==", "bodyText": "Issue found: Parameter 'expectedResultsWhenSearchingContentInDefaultLanguage' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582037", "createdAt": "2020-04-13T16:48:41Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,\n+                boolean createContentInDefaultLanguage,\n+                boolean createContentInSecondLanguage, boolean createContentInThirdLanguage,\n+                boolean createPageInDefaultLanguage,\n+                boolean createPageInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInDefaultLanguage,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMjU1", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271255", "createdAt": "2020-04-13T16:48:42Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0MlrOGEs1Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0MlrOGEs1Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjA1MA==", "bodyText": "Issue found: Local variable 'thirdLang' could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582050", "createdAt": "2020-04-13T16:48:42Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,\n+                boolean createContentInDefaultLanguage,\n+                boolean createContentInSecondLanguage, boolean createContentInThirdLanguage,\n+                boolean createPageInDefaultLanguage,\n+                boolean createPageInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInDefaultLanguage,\n+                boolean expectedResultsWhenSearchingContentInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInThirdLanguage) {\n+            this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+            this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+            this.siteSearchDefaultLanguage = siteSearchDefaultLanguage;\n+            this.siteSearchSecondLanguage = siteSearchSecondLanguage;\n+            this.siteSearchThirdLanguage = siteSearchThirdLanguage;\n+            this.createContentInDefaultLanguage = createContentInDefaultLanguage;\n+            this.createContentInSecondLanguage = createContentInSecondLanguage;\n+            this.createContentInThirdLanguage = createContentInThirdLanguage;\n+            this.createPageInDefaultLanguage = createPageInDefaultLanguage;\n+            this.createPageInSecondLanguage = createPageInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInDefaultLanguage = expectedResultsWhenSearchingContentInDefaultLanguage;\n+            this.expectedResultsWhenSearchingContentInSecondLanguage = expectedResultsWhenSearchingContentInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInThirdLanguage = expectedResultsWhenSearchingContentInThirdLanguage;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] siteSearchTestCases() {\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in default language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case1 = new TestCaseSiteSearchBuilder()\n+                .siteSearchDefaultLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case2 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=false\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         *\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case3 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(false)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+\n+         * Given sceneario: Content in second language only referenced from a page in default language.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true.\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language.\n+         * Expected: searching for content in second language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case4 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        /*\n+         * Same as above but with DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=false\n+         * Expected: searching for content in second language should give NO results.\n+         */\n+\n+        TestCaseSiteSearch case5 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(false)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: two-language (default and second) content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run including both languages\n+         * Expected: searching content of either version of the content should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case6 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        /*\n+         * Given sceneario: two-language (second and third) content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run including both languages\n+         * Expected: searching content of either version of the content should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case7 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .siteSearchThirdLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createContentInThirdLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .expectedResultsWhenSearchingContentInThirdLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        return new TestCaseSiteSearch[] {case1, case2, case3, case4, case5, case6, case7};\n+    }\n \n+    @UseDataProvider(\"siteSearchTestCases\")\n     @Test\n-    public void test_MultilangContent_IndexingAllLanguages()\n+    public void testSiteSearchDifferentScenarios(final TestCaseSiteSearch testCase)\n             throws DotPublishingException, JobExecutionException, DotDataException, IOException, DotSecurityException, WebAssetException {\n \n         boolean defaultContentToDefaultLangOriginalValue =\n                 Config.getBooleanProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", false);\n \n-        try {\n+        boolean defaultPagetoDefaultLangOriginalValue =\n+                Config.getBooleanProperty(\"DEFAULT_PAGE_TO_DEFAULT_LANGUAGE\", true);\n \n-            Config.setProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", true);\n+        try {\n+            Config.setProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", testCase.defaultContentToDefaultLanguage);\n+            Config.setProperty(\"DEFAULT_PAGE_TO_DEFAULT_LANGUAGE\", testCase.defaultPageToDefaultLanguage);\n \n             final Host site = new SiteDataGen().nextPersisted();\n-            Language lang1 = APILocator.getLanguageAPI().getDefaultLanguage();\n-            Language lang2 = new LanguageDataGen().nextPersisted();\n+            Language defaultLang = APILocator.getLanguageAPI().getDefaultLanguage();\n+            Language secondLang = new LanguageDataGen().nextPersisted();\n+            Language thirdLang = new LanguageDataGen().nextPersisted();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 228}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMjcw", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271270", "createdAt": "2020-04-13T16:48:43Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0M1rOGEs1cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0M1rOGEs1cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjA2Ng==", "bodyText": "Issue found: Field createContentInSecondLanguage has the same name as a method", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582066", "createdAt": "2020-04-13T16:48:43Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/TestCaseSiteSearchBuilder.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.dotcms.publishing.job;\n+\n+import com.dotcms.publishing.job.SiteSearchJobImplTest.TestCaseSiteSearch;\n+\n+public class TestCaseSiteSearchBuilder {\n+\n+    private boolean defaultPageToDefaultLanguage;\n+    private boolean defaultContentToDefaultLanguage;\n+    private boolean siteSearchDefaultLanguage;\n+    private boolean siteSearchSecondLanguage;\n+    private boolean siteSearchThirdLanguage;\n+    private boolean createContentInDefaultLanguage;\n+    private boolean createContentInSecondLanguage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMjg3", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271287", "createdAt": "2020-04-13T16:48:44Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0NFrOGEs1gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0NFrOGEs1gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjA4Mw==", "bodyText": "Issue found: Local variable 'case1' could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582083", "createdAt": "2020-04-13T16:48:44Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,\n+                boolean createContentInDefaultLanguage,\n+                boolean createContentInSecondLanguage, boolean createContentInThirdLanguage,\n+                boolean createPageInDefaultLanguage,\n+                boolean createPageInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInDefaultLanguage,\n+                boolean expectedResultsWhenSearchingContentInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInThirdLanguage) {\n+            this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+            this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+            this.siteSearchDefaultLanguage = siteSearchDefaultLanguage;\n+            this.siteSearchSecondLanguage = siteSearchSecondLanguage;\n+            this.siteSearchThirdLanguage = siteSearchThirdLanguage;\n+            this.createContentInDefaultLanguage = createContentInDefaultLanguage;\n+            this.createContentInSecondLanguage = createContentInSecondLanguage;\n+            this.createContentInThirdLanguage = createContentInThirdLanguage;\n+            this.createPageInDefaultLanguage = createPageInDefaultLanguage;\n+            this.createPageInSecondLanguage = createPageInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInDefaultLanguage = expectedResultsWhenSearchingContentInDefaultLanguage;\n+            this.expectedResultsWhenSearchingContentInSecondLanguage = expectedResultsWhenSearchingContentInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInThirdLanguage = expectedResultsWhenSearchingContentInThirdLanguage;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] siteSearchTestCases() {\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in default language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case1 = new TestCaseSiteSearchBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMjk4", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271298", "createdAt": "2020-04-13T16:48:45Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0NVrOGEs1jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0NVrOGEs1jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjA5Mw==", "bodyText": "Issue found: Local variable 'secondLang' could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582093", "createdAt": "2020-04-13T16:48:45Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,\n+                boolean createContentInDefaultLanguage,\n+                boolean createContentInSecondLanguage, boolean createContentInThirdLanguage,\n+                boolean createPageInDefaultLanguage,\n+                boolean createPageInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInDefaultLanguage,\n+                boolean expectedResultsWhenSearchingContentInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInThirdLanguage) {\n+            this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+            this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+            this.siteSearchDefaultLanguage = siteSearchDefaultLanguage;\n+            this.siteSearchSecondLanguage = siteSearchSecondLanguage;\n+            this.siteSearchThirdLanguage = siteSearchThirdLanguage;\n+            this.createContentInDefaultLanguage = createContentInDefaultLanguage;\n+            this.createContentInSecondLanguage = createContentInSecondLanguage;\n+            this.createContentInThirdLanguage = createContentInThirdLanguage;\n+            this.createPageInDefaultLanguage = createPageInDefaultLanguage;\n+            this.createPageInSecondLanguage = createPageInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInDefaultLanguage = expectedResultsWhenSearchingContentInDefaultLanguage;\n+            this.expectedResultsWhenSearchingContentInSecondLanguage = expectedResultsWhenSearchingContentInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInThirdLanguage = expectedResultsWhenSearchingContentInThirdLanguage;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] siteSearchTestCases() {\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in default language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case1 = new TestCaseSiteSearchBuilder()\n+                .siteSearchDefaultLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case2 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=false\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         *\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case3 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(false)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+\n+         * Given sceneario: Content in second language only referenced from a page in default language.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true.\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language.\n+         * Expected: searching for content in second language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case4 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        /*\n+         * Same as above but with DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=false\n+         * Expected: searching for content in second language should give NO results.\n+         */\n+\n+        TestCaseSiteSearch case5 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(false)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: two-language (default and second) content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run including both languages\n+         * Expected: searching content of either version of the content should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case6 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        /*\n+         * Given sceneario: two-language (second and third) content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run including both languages\n+         * Expected: searching content of either version of the content should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case7 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .siteSearchThirdLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createContentInThirdLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .expectedResultsWhenSearchingContentInThirdLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        return new TestCaseSiteSearch[] {case1, case2, case3, case4, case5, case6, case7};\n+    }\n \n+    @UseDataProvider(\"siteSearchTestCases\")\n     @Test\n-    public void test_MultilangContent_IndexingAllLanguages()\n+    public void testSiteSearchDifferentScenarios(final TestCaseSiteSearch testCase)\n             throws DotPublishingException, JobExecutionException, DotDataException, IOException, DotSecurityException, WebAssetException {\n \n         boolean defaultContentToDefaultLangOriginalValue =\n                 Config.getBooleanProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", false);\n \n-        try {\n+        boolean defaultPagetoDefaultLangOriginalValue =\n+                Config.getBooleanProperty(\"DEFAULT_PAGE_TO_DEFAULT_LANGUAGE\", true);\n \n-            Config.setProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", true);\n+        try {\n+            Config.setProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", testCase.defaultContentToDefaultLanguage);\n+            Config.setProperty(\"DEFAULT_PAGE_TO_DEFAULT_LANGUAGE\", testCase.defaultPageToDefaultLanguage);\n \n             final Host site = new SiteDataGen().nextPersisted();\n-            Language lang1 = APILocator.getLanguageAPI().getDefaultLanguage();\n-            Language lang2 = new LanguageDataGen().nextPersisted();\n+            Language defaultLang = APILocator.getLanguageAPI().getDefaultLanguage();\n+            Language secondLang = new LanguageDataGen().nextPersisted();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 227}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMzA3", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271307", "createdAt": "2020-04-13T16:48:46Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0NlrOGEs1kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0NlrOGEs1kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjA5OQ==", "bodyText": "Issue found: Field createPageInDefaultLanguage has the same name as a method", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582099", "createdAt": "2020-04-13T16:48:46Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/TestCaseSiteSearchBuilder.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.dotcms.publishing.job;\n+\n+import com.dotcms.publishing.job.SiteSearchJobImplTest.TestCaseSiteSearch;\n+\n+public class TestCaseSiteSearchBuilder {\n+\n+    private boolean defaultPageToDefaultLanguage;\n+    private boolean defaultContentToDefaultLanguage;\n+    private boolean siteSearchDefaultLanguage;\n+    private boolean siteSearchSecondLanguage;\n+    private boolean siteSearchThirdLanguage;\n+    private boolean createContentInDefaultLanguage;\n+    private boolean createContentInSecondLanguage;\n+    private boolean createContentInThirdLanguage;\n+    private boolean createPageInDefaultLanguage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMzE3", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271317", "createdAt": "2020-04-13T16:48:47Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0N1rOGEs1mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0N1rOGEs1mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjEwNQ==", "bodyText": "Issue found: Local variable 'case5' could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582105", "createdAt": "2020-04-13T16:48:47Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,\n+                boolean createContentInDefaultLanguage,\n+                boolean createContentInSecondLanguage, boolean createContentInThirdLanguage,\n+                boolean createPageInDefaultLanguage,\n+                boolean createPageInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInDefaultLanguage,\n+                boolean expectedResultsWhenSearchingContentInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInThirdLanguage) {\n+            this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+            this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+            this.siteSearchDefaultLanguage = siteSearchDefaultLanguage;\n+            this.siteSearchSecondLanguage = siteSearchSecondLanguage;\n+            this.siteSearchThirdLanguage = siteSearchThirdLanguage;\n+            this.createContentInDefaultLanguage = createContentInDefaultLanguage;\n+            this.createContentInSecondLanguage = createContentInSecondLanguage;\n+            this.createContentInThirdLanguage = createContentInThirdLanguage;\n+            this.createPageInDefaultLanguage = createPageInDefaultLanguage;\n+            this.createPageInSecondLanguage = createPageInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInDefaultLanguage = expectedResultsWhenSearchingContentInDefaultLanguage;\n+            this.expectedResultsWhenSearchingContentInSecondLanguage = expectedResultsWhenSearchingContentInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInThirdLanguage = expectedResultsWhenSearchingContentInThirdLanguage;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] siteSearchTestCases() {\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in default language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case1 = new TestCaseSiteSearchBuilder()\n+                .siteSearchDefaultLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case2 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=false\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         *\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case3 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(false)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+\n+         * Given sceneario: Content in second language only referenced from a page in default language.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true.\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language.\n+         * Expected: searching for content in second language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case4 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        /*\n+         * Same as above but with DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=false\n+         * Expected: searching for content in second language should give NO results.\n+         */\n+\n+        TestCaseSiteSearch case5 = new TestCaseSiteSearchBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 155}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMzI4", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271328", "createdAt": "2020-04-13T16:48:48Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0OFrOGEs1pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0OFrOGEs1pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjExNw==", "bodyText": "Issue found: Field siteSearchThirdLanguage has the same name as a method", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582117", "createdAt": "2020-04-13T16:48:48Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/TestCaseSiteSearchBuilder.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.dotcms.publishing.job;\n+\n+import com.dotcms.publishing.job.SiteSearchJobImplTest.TestCaseSiteSearch;\n+\n+public class TestCaseSiteSearchBuilder {\n+\n+    private boolean defaultPageToDefaultLanguage;\n+    private boolean defaultContentToDefaultLanguage;\n+    private boolean siteSearchDefaultLanguage;\n+    private boolean siteSearchSecondLanguage;\n+    private boolean siteSearchThirdLanguage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMzQ1", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271345", "createdAt": "2020-04-13T16:48:49Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0OVrOGEs1sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo0OVrOGEs1sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjEzMA==", "bodyText": "Issue found: Local variable 'case6' could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582130", "createdAt": "2020-04-13T16:48:49Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,\n+                boolean createContentInDefaultLanguage,\n+                boolean createContentInSecondLanguage, boolean createContentInThirdLanguage,\n+                boolean createPageInDefaultLanguage,\n+                boolean createPageInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInDefaultLanguage,\n+                boolean expectedResultsWhenSearchingContentInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInThirdLanguage) {\n+            this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+            this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+            this.siteSearchDefaultLanguage = siteSearchDefaultLanguage;\n+            this.siteSearchSecondLanguage = siteSearchSecondLanguage;\n+            this.siteSearchThirdLanguage = siteSearchThirdLanguage;\n+            this.createContentInDefaultLanguage = createContentInDefaultLanguage;\n+            this.createContentInSecondLanguage = createContentInSecondLanguage;\n+            this.createContentInThirdLanguage = createContentInThirdLanguage;\n+            this.createPageInDefaultLanguage = createPageInDefaultLanguage;\n+            this.createPageInSecondLanguage = createPageInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInDefaultLanguage = expectedResultsWhenSearchingContentInDefaultLanguage;\n+            this.expectedResultsWhenSearchingContentInSecondLanguage = expectedResultsWhenSearchingContentInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInThirdLanguage = expectedResultsWhenSearchingContentInThirdLanguage;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] siteSearchTestCases() {\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in default language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case1 = new TestCaseSiteSearchBuilder()\n+                .siteSearchDefaultLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case2 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=false\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         *\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case3 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(false)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+\n+         * Given sceneario: Content in second language only referenced from a page in default language.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true.\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language.\n+         * Expected: searching for content in second language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case4 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        /*\n+         * Same as above but with DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=false\n+         * Expected: searching for content in second language should give NO results.\n+         */\n+\n+        TestCaseSiteSearch case5 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(false)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: two-language (default and second) content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run including both languages\n+         * Expected: searching content of either version of the content should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case6 = new TestCaseSiteSearchBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 170}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMzYw", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271360", "createdAt": "2020-04-13T16:48:50Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo1MFrOGEs1wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo1MFrOGEs1wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjE0NQ==", "bodyText": "Issue found: Field expectedResultsWhenSearchingContentInSecondLanguage has the same name as a method", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582145", "createdAt": "2020-04-13T16:48:50Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/TestCaseSiteSearchBuilder.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.dotcms.publishing.job;\n+\n+import com.dotcms.publishing.job.SiteSearchJobImplTest.TestCaseSiteSearch;\n+\n+public class TestCaseSiteSearchBuilder {\n+\n+    private boolean defaultPageToDefaultLanguage;\n+    private boolean defaultContentToDefaultLanguage;\n+    private boolean siteSearchDefaultLanguage;\n+    private boolean siteSearchSecondLanguage;\n+    private boolean siteSearchThirdLanguage;\n+    private boolean createContentInDefaultLanguage;\n+    private boolean createContentInSecondLanguage;\n+    private boolean createContentInThirdLanguage;\n+    private boolean createPageInDefaultLanguage;\n+    private boolean createPageInSecondLanguage;\n+    private boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+    private boolean expectedResultsWhenSearchingContentInSecondLanguage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMzY5", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271369", "createdAt": "2020-04-13T16:48:51Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo1MVrOGEs1yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo1MVrOGEs1yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjE1NQ==", "bodyText": "Issue found: Parameter 'expectedResultsWhenSearchingContentInDefaultLanguage' is not assigned and could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582155", "createdAt": "2020-04-13T16:48:51Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/TestCaseSiteSearchBuilder.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.dotcms.publishing.job;\n+\n+import com.dotcms.publishing.job.SiteSearchJobImplTest.TestCaseSiteSearch;\n+\n+public class TestCaseSiteSearchBuilder {\n+\n+    private boolean defaultPageToDefaultLanguage;\n+    private boolean defaultContentToDefaultLanguage;\n+    private boolean siteSearchDefaultLanguage;\n+    private boolean siteSearchSecondLanguage;\n+    private boolean siteSearchThirdLanguage;\n+    private boolean createContentInDefaultLanguage;\n+    private boolean createContentInSecondLanguage;\n+    private boolean createContentInThirdLanguage;\n+    private boolean createPageInDefaultLanguage;\n+    private boolean createPageInSecondLanguage;\n+    private boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+    private boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+    private boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+    public TestCaseSiteSearchBuilder defaultPageToDefaultLanguage(\n+            boolean defaultPageToDefaultLanguage) {\n+        this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder defaultContentToDefaultLanguage(\n+            boolean defaultContentToDefaultLanguage) {\n+        this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder siteSearchDefaultLanguage(\n+            boolean siteSearchDefaultLanguage) {\n+        this.siteSearchDefaultLanguage = siteSearchDefaultLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder siteSearchSecondLanguage(boolean siteSearchSecondLanguage) {\n+        this.siteSearchSecondLanguage = siteSearchSecondLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder siteSearchThirdLanguage(boolean siteSearchThirdLanguage) {\n+        this.siteSearchThirdLanguage = siteSearchThirdLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder createContentInDefaultLanguage(\n+            boolean createContentInDefaultLanguage) {\n+        this.createContentInDefaultLanguage = createContentInDefaultLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder createContentInSecondLanguage(\n+            boolean createContentInSecondLanguage) {\n+        this.createContentInSecondLanguage = createContentInSecondLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder createContentInThirdLanguage(\n+            boolean createContentInThirdLanguage) {\n+        this.createContentInThirdLanguage = createContentInThirdLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder createPageInDefaultLanguage(\n+            boolean createPageInDefaultLanguage) {\n+        this.createPageInDefaultLanguage = createPageInDefaultLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder createPageInSecondLanguage(\n+            boolean createPageInSecondLanguage) {\n+        this.createPageInSecondLanguage = createPageInSecondLanguage;\n+        return this;\n+    }\n+\n+    public TestCaseSiteSearchBuilder expectedResultsWhenSearchingContentInDefaultLanguage(\n+            boolean expectedResultsWhenSearchingContentInDefaultLanguage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjcxMzg5", "url": "https://github.com/dotCMS/core/pull/18266#pullrequestreview-392271389", "createdAt": "2020-04-13T16:48:52Z", "commit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo1MlrOGEs13A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo1MlrOGEs13A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjE3Mg==", "bodyText": "Issue found: Local variable 'contentToPassToPage' could be declared final", "url": "https://github.com/dotCMS/core/pull/18266#discussion_r407582172", "createdAt": "2020-04-13T16:48:52Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/job/SiteSearchJobImplTest.java", "diffHunk": "@@ -439,74 +445,220 @@ public void Test_Incremental_Job_Test_Pages_Are_Found_Create_And_Publish_New_Pag\n \n     }\n \n-    /**\n-     * Given sceneario: Multi-language content referenced from a page. Create a Site-Search run including all the languages of the content and\n-     * check the two versions made it into the resulting index.\n-     */\n+    static class TestCaseSiteSearch {\n+        boolean defaultPageToDefaultLanguage;\n+        boolean defaultContentToDefaultLanguage;\n+        boolean siteSearchDefaultLanguage;\n+        boolean siteSearchSecondLanguage;\n+        boolean siteSearchThirdLanguage;\n+        boolean createContentInDefaultLanguage;\n+        boolean createContentInSecondLanguage;\n+        boolean createContentInThirdLanguage;\n+        boolean createPageInDefaultLanguage;\n+        boolean createPageInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInDefaultLanguage;\n+        boolean expectedResultsWhenSearchingContentInSecondLanguage;\n+        boolean expectedResultsWhenSearchingContentInThirdLanguage;\n+\n+        public TestCaseSiteSearch(boolean defaultPageToDefaultLanguage,\n+                boolean defaultContentToDefaultLanguage, boolean siteSearchDefaultLanguage,\n+                boolean siteSearchSecondLanguage, boolean siteSearchThirdLanguage,\n+                boolean createContentInDefaultLanguage,\n+                boolean createContentInSecondLanguage, boolean createContentInThirdLanguage,\n+                boolean createPageInDefaultLanguage,\n+                boolean createPageInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInDefaultLanguage,\n+                boolean expectedResultsWhenSearchingContentInSecondLanguage,\n+                boolean expectedResultsWhenSearchingContentInThirdLanguage) {\n+            this.defaultPageToDefaultLanguage = defaultPageToDefaultLanguage;\n+            this.defaultContentToDefaultLanguage = defaultContentToDefaultLanguage;\n+            this.siteSearchDefaultLanguage = siteSearchDefaultLanguage;\n+            this.siteSearchSecondLanguage = siteSearchSecondLanguage;\n+            this.siteSearchThirdLanguage = siteSearchThirdLanguage;\n+            this.createContentInDefaultLanguage = createContentInDefaultLanguage;\n+            this.createContentInSecondLanguage = createContentInSecondLanguage;\n+            this.createContentInThirdLanguage = createContentInThirdLanguage;\n+            this.createPageInDefaultLanguage = createPageInDefaultLanguage;\n+            this.createPageInSecondLanguage = createPageInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInDefaultLanguage = expectedResultsWhenSearchingContentInDefaultLanguage;\n+            this.expectedResultsWhenSearchingContentInSecondLanguage = expectedResultsWhenSearchingContentInSecondLanguage;\n+            this.expectedResultsWhenSearchingContentInThirdLanguage = expectedResultsWhenSearchingContentInThirdLanguage;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] siteSearchTestCases() {\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in default language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case1 = new TestCaseSiteSearchBuilder()\n+                .siteSearchDefaultLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case2 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+        /*\n+         * Given sceneario: default-language content referenced from a page in default lang only.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=false\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         *\n+         * Create a Site-Search run only in second language\n+         * Expected: searching for the content in default language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case3 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(false)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+\n+\n+         * Given sceneario: Content in second language only referenced from a page in default language.\n+         * DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE=true.\n+         * DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run only in second language.\n+         * Expected: searching for content in second language should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case4 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        /*\n+         * Same as above but with DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=false\n+         * Expected: searching for content in second language should give NO results.\n+         */\n+\n+        TestCaseSiteSearch case5 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(false)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(false)\n+                .createTestCaseSiteSearch();\n+\n+        /*\n+         * Given sceneario: two-language (default and second) content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run including both languages\n+         * Expected: searching content of either version of the content should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case6 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .createContentInDefaultLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        /*\n+         * Given sceneario: two-language (second and third) content referenced from a page in default lang only. DEFAULT_PAGE_TO_DEFAULT_LANGUAGE=true.\n+         * Create a Site-Search run including both languages\n+         * Expected: searching content of either version of the content should give results. The result should be the page in the default language\n+         */\n+\n+        TestCaseSiteSearch case7 = new TestCaseSiteSearchBuilder()\n+                .defaultContentToDefaultLanguage(true)\n+                .defaultPageToDefaultLanguage(true)\n+                .siteSearchSecondLanguage(true)\n+                .siteSearchThirdLanguage(true)\n+                .createContentInSecondLanguage(true)\n+                .createContentInThirdLanguage(true)\n+                .createPageInDefaultLanguage(true)\n+                .expectedResultsWhenSearchingContentInSecondLanguage(true)\n+                .expectedResultsWhenSearchingContentInThirdLanguage(true)\n+                .createTestCaseSiteSearch();\n+\n+\n+        return new TestCaseSiteSearch[] {case1, case2, case3, case4, case5, case6, case7};\n+    }\n \n+    @UseDataProvider(\"siteSearchTestCases\")\n     @Test\n-    public void test_MultilangContent_IndexingAllLanguages()\n+    public void testSiteSearchDifferentScenarios(final TestCaseSiteSearch testCase)\n             throws DotPublishingException, JobExecutionException, DotDataException, IOException, DotSecurityException, WebAssetException {\n \n         boolean defaultContentToDefaultLangOriginalValue =\n                 Config.getBooleanProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", false);\n \n-        try {\n+        boolean defaultPagetoDefaultLangOriginalValue =\n+                Config.getBooleanProperty(\"DEFAULT_PAGE_TO_DEFAULT_LANGUAGE\", true);\n \n-            Config.setProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", true);\n+        try {\n+            Config.setProperty(\"DEFAULT_CONTENT_TO_DEFAULT_LANGUAGE\", testCase.defaultContentToDefaultLanguage);\n+            Config.setProperty(\"DEFAULT_PAGE_TO_DEFAULT_LANGUAGE\", testCase.defaultPageToDefaultLanguage);\n \n             final Host site = new SiteDataGen().nextPersisted();\n-            Language lang1 = APILocator.getLanguageAPI().getDefaultLanguage();\n-            Language lang2 = new LanguageDataGen().nextPersisted();\n+            Language defaultLang = APILocator.getLanguageAPI().getDefaultLanguage();\n+            Language secondLang = new LanguageDataGen().nextPersisted();\n+            Language thirdLang = new LanguageDataGen().nextPersisted();\n             folder = new FolderDataGen().site(site).nextPersisted();\n \n-            Contentlet contentletLang1 = TestDataUtils\n-                    .getEmployeeContent(true, lang1.getId(), null, site);\n-\n-            contentletLang1 = contentletAPI.find(contentletLang1.getInode(), systemUser, false);\n-            contentletLang1.setStringProperty(\"firstName\", \"catherine\");\n-            contentletLang1 = contentletAPI.checkin(contentletLang1, systemUser, false);\n-\n-            ContentletDataGen.publish(contentletLang1);\n-\n-            Contentlet contentletLang2 = contentletAPI\n-                    .find(contentletLang1.getInode(), systemUser, false);\n-            contentletLang2.setInode(\"\");\n-            contentletLang2.setLanguageId(lang2.getId());\n-            contentletLang2.setStringProperty(\"firstName\", \"catalina\");\n-            contentletLang2 = contentletAPI.checkin(contentletLang2, systemUser, false);\n-\n-            ContentletDataGen.publish(contentletLang2);\n-\n-            final Container container = new ContainerDataGen().withContentType(contentletLang1\n-                    .getContentType(), \"$!{firstName}\").nextPersisted();\n-\n-            ContainerDataGen.publish(container);\n+            Contentlet contentletDefaultLang = null;\n+            Contentlet contentSecondLang = null;\n \n-            final String uuid = UUIDGenerator.generateUuid();\n+            if(testCase.createContentInDefaultLanguage) {\n+                contentletDefaultLang = createAndPublishEmployeeContent(site, defaultLang, \"catherine\");\n \n-            final Template template = new TemplateDataGen()\n-                    .withContainer(container.getIdentifier(), uuid)\n-                    .nextPersisted();\n+                if(testCase.createContentInSecondLanguage) {\n+                    createNewVersionAndPublishExistingEmployeeContent(secondLang, contentletDefaultLang,\n+                            \"catalina\");\n+                }\n+            } else if(testCase.createContentInSecondLanguage) {\n+                contentSecondLang = createAndPublishEmployeeContent(site, secondLang, \"catalina\");\n \n-            TemplateDataGen.publish(template);\n-\n-            HTMLPageAsset page = new HTMLPageDataGen(folder, template).languageId(lang1.getId())\n-                    .nextPersisted();\n-\n-            HTMLPageDataGen.publish(page);\n-\n-            final MultiTree multiTree = new MultiTree(page.getIdentifier(),\n-                    container.getIdentifier(),\n-                    contentletLang1.getIdentifier(), getDotParserContainerUUID(uuid), 0);\n-\n-            APILocator.getMultiTreeAPI().saveMultiTree(multiTree);\n+                if(testCase.createContentInThirdLanguage) {\n+                    createNewVersionAndPublishExistingEmployeeContent(thirdLang, contentSecondLang,\n+                            \"caterina\");\n+                }\n+            }\n \n-            final String html = APILocator.getHTMLPageAssetAPI().getHTML(page.getURI(), site, true,\n-                    contentletLang1.getIdentifier(), APILocator.systemUser(),\n-                    contentletLang1.getLanguageId(), USER_AGENT_DOTCMS_SITESEARCH);\n+            Contentlet contentToPassToPage = contentletDefaultLang!=null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463df3cd4a88575a0add12b3ec924536c2a435c"}, "originalPosition": 291}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1252, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}