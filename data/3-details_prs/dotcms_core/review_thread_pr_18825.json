{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjg3OTEw", "number": 18825, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1M1rOELOcVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjowNTozOVrOELwCHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjA2NDIzOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1M1rOGst6wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1M1rOGst6wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0Mjg0OQ==", "bodyText": "Codacy found an issue: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r449542849", "createdAt": "2020-07-03T11:50:53Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -90,6 +91,133 @@ public void prepareTest() {\n         urlMapAPI = new URLMapAPIImpl();\n     }\n \n+    /**\n+     * UrlMapped Content that lives on the system host should be available on every host where the map\n+     * detail page exists (by path). If content does not live on the system host, it should only be\n+     * available on the host it is currently one\n+     * \n+     * @throws Exception\n+     */\n+\n+\n+    @Test\n+    public void systemHost_UrlMaps_Should_Work_Across_Hosts() throws Exception {\n+\n+        final Host host1 = new SiteDataGen().nextPersisted();\n+        final Host host2 = new SiteDataGen().nextPersisted();\n+        final Host host3 = new SiteDataGen().nextPersisted();\n+        \n+        final Folder folder1 = new FolderDataGen().name(\"folder\").title(\"folder\").site(host1).nextPersisted();\n+        final Folder folder2 = new FolderDataGen().name(\"folder\").title(\"folder\").site(host2).nextPersisted();\n+\n+\n+\n+        final Template template1 = new TemplateDataGen().site(host1).nextPersisted();\n+        final Template template2 = new TemplateDataGen().site(host2).nextPersisted();\n+\n+        final HTMLPageAsset pageOnHost1 = new HTMLPageDataGen(folder1, template1).pageURL(\"my-detail\")\n+                        .title(\"my-detail\").nextPersisted();\n+\n+        final HTMLPageAsset pageOnHost2 = new HTMLPageDataGen(folder2, template2).pageURL(\"my-detail\")\n+                        .title(\"my-detail\").nextPersisted();\n+\n+        final String urlPattern = \"/\" + UUIDGenerator.shorty() + \"/{urlTitle}\";\n+        \n+        // set the detail page to page on host1\n+        final ContentType contentType1 = getNewsLikeContentType(\"News\" + System.currentTimeMillis(),\n+                        APILocator.systemHost(), pageOnHost1.getIdentifier(), urlPattern);\n+\n+\n+        final Contentlet newsOnSystemHost = TestDataUtils.getNewsContent(true,\n+                        APILocator.getLanguageAPI().getDefaultLanguage().getId(), contentType1.id(),\n+                        APILocator.systemHost(), null, UUIDGenerator.generateUuid());\n+\n+\n+        final Contentlet newsOnHost1 = TestDataUtils.getNewsContent(true,\n+                        APILocator.getLanguageAPI().getDefaultLanguage().getId(), contentType1.id(), host1,\n+                        null, UUIDGenerator.generateUuid());\n+\n+        final Contentlet newsOnHost2 = TestDataUtils.getNewsContent(true,\n+                        APILocator.getLanguageAPI().getDefaultLanguage().getId(), contentType1.id(), host2,\n+                        null, UUIDGenerator.generateUuid());\n+\n+\n+        \n+        // WORKS : trying where contentlet on the system host and request is on host1 \n+        UrlMapContext context = getUrlMapContext(systemUser, host1,\n+                        urlPattern.replace(\"{urlTitle}\", newsOnSystemHost.getStringProperty(\"urlTitle\")));\n+\n+        Optional<URLMapInfo> urlMapInfoOptional = urlMapAPI.processURLMap(context);\n+        URLMapInfo urlMapInfo = urlMapInfoOptional.get();\n+\n+        assertEquals(newsOnSystemHost.getStringProperty(\"title\"), urlMapInfo.getContentlet().getName());\n+        assertEquals(pageOnHost1.getURI(), urlMapInfo.getIdentifier().getURI());\n+        \n+\n+        // WORKS :  trying where contentlet on the system host and request is on host2, which also has a detail page in the right place\n+        context = getUrlMapContext(systemUser, host2,\n+                        urlPattern.replace(\"{urlTitle}\", newsOnSystemHost.getStringProperty(\"urlTitle\")));\n+\n+        urlMapInfoOptional = urlMapAPI.processURLMap(context);\n+        urlMapInfo = urlMapInfoOptional.get();\n+\n+        assertEquals(newsOnSystemHost.getStringProperty(\"title\"), urlMapInfo.getContentlet().getName());\n+        assertEquals(pageOnHost2.getURI(), urlMapInfo.getIdentifier().getURI());\n+        \n+        \n+        \n+        // FAIL : trying where contentlet on the system host and request is on host3, which does not have a detail page\n+        context = getUrlMapContext(systemUser, host3,\n+                        urlPattern.replace(\"{urlTitle}\", newsOnSystemHost.getStringProperty(\"urlTitle\")));\n+\n+        urlMapInfoOptional = urlMapAPI.processURLMap(context);\n+        assert(!urlMapInfoOptional.isPresent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjA2NDMxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1NFrOGst6zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1NFrOGst6zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0Mjg2MQ==", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r449542861", "createdAt": "2020-07-03T11:50:54Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -268,34 +256,40 @@ private void checkContentPermission(final UrlMapContext context, final Contentle\n                 contentlet, PermissionLevel.READ.getType(), context.getUser(), context.getMode().respectAnonPerms);\n \n         if (!havePermission) {\n-            throw new DotSecurityException(String.format(\"User dont have permission in content: %s\", contentlet.getName()));\n+            throw new DotSecurityException(String.format(\"User does not have permission in content: %s\", contentlet.getName()));\n         }\n     }\n \n     private String buildContentQuery(\n             final Matches matches,\n-            final Structure structure,\n-            final Field hostField,\n+            final ContentType structure,\n             final UrlMapContext context) {\n \n         final StringBuilder query = new StringBuilder();\n \n-        query.append(\"+structureName:\").append(structure.getVelocityVarName())\n-             .append(\" +deleted:false \");\n-\n-        if (context.getMode() == PageMode.PREVIEW_MODE || context.getMode() == PageMode.EDIT_MODE) {\n-            query.append(\"+working:true \");\n+        query.append(\"+contentType:\")\n+            .append(structure.variable())\n+            .append(\" +deleted:false \")\n+            .append(\" +(conhost:\")\n+                .append(context.getHost().getIdentifier())\n+                .append(\" OR conhost:\")\n+                .append(Host.SYSTEM_HOST)\n+            .append(\")\");\n+        \n+\n+        if (context.getMode().showLive) {\n+            query.append(\" +live:true \");\n         } else {\n-            query.append(\"+live:true \");\n+            query.append(\" +working:true \");\n         }\n \n-        if (null != hostField && context.getHost() != null) {\n-            query.append(this.getHostFilter(context.getHost()));\n-        }\n+\n \n         query.append(\" \");\n-        query.append(this.buildFields(structure, matches))\n-             .append(\" +languageId:\").append(context.getLanguageId());\n+        query.append(this.buildFields(structure, matches));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 266}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjA2NDM0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1NVrOGst60Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1NVrOGst60Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0Mjg2NQ==", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r449542865", "createdAt": "2020-07-03T11:50:55Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -268,34 +256,40 @@ private void checkContentPermission(final UrlMapContext context, final Contentle\n                 contentlet, PermissionLevel.READ.getType(), context.getUser(), context.getMode().respectAnonPerms);\n \n         if (!havePermission) {\n-            throw new DotSecurityException(String.format(\"User dont have permission in content: %s\", contentlet.getName()));\n+            throw new DotSecurityException(String.format(\"User does not have permission in content: %s\", contentlet.getName()));\n         }\n     }\n \n     private String buildContentQuery(\n             final Matches matches,\n-            final Structure structure,\n-            final Field hostField,\n+            final ContentType structure,\n             final UrlMapContext context) {\n \n         final StringBuilder query = new StringBuilder();\n \n-        query.append(\"+structureName:\").append(structure.getVelocityVarName())\n-             .append(\" +deleted:false \");\n-\n-        if (context.getMode() == PageMode.PREVIEW_MODE || context.getMode() == PageMode.EDIT_MODE) {\n-            query.append(\"+working:true \");\n+        query.append(\"+contentType:\")\n+            .append(structure.variable())\n+            .append(\" +deleted:false \")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 243}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjA2NDQxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1NlrOGst62g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1NlrOGst62g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0Mjg3NA==", "bodyText": "Codacy found an issue: The String literal \"my-detail\" appears 4 times in this file; the first occurrence is on line 118", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r449542874", "createdAt": "2020-07-03T11:50:56Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -90,6 +91,133 @@ public void prepareTest() {\n         urlMapAPI = new URLMapAPIImpl();\n     }\n \n+    /**\n+     * UrlMapped Content that lives on the system host should be available on every host where the map\n+     * detail page exists (by path). If content does not live on the system host, it should only be\n+     * available on the host it is currently one\n+     * \n+     * @throws Exception\n+     */\n+\n+\n+    @Test\n+    public void systemHost_UrlMaps_Should_Work_Across_Hosts() throws Exception {\n+\n+        final Host host1 = new SiteDataGen().nextPersisted();\n+        final Host host2 = new SiteDataGen().nextPersisted();\n+        final Host host3 = new SiteDataGen().nextPersisted();\n+        \n+        final Folder folder1 = new FolderDataGen().name(\"folder\").title(\"folder\").site(host1).nextPersisted();\n+        final Folder folder2 = new FolderDataGen().name(\"folder\").title(\"folder\").site(host2).nextPersisted();\n+\n+\n+\n+        final Template template1 = new TemplateDataGen().site(host1).nextPersisted();\n+        final Template template2 = new TemplateDataGen().site(host2).nextPersisted();\n+\n+        final HTMLPageAsset pageOnHost1 = new HTMLPageDataGen(folder1, template1).pageURL(\"my-detail\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjA2NDQ3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1N1rOGst64g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1N1rOGst64g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0Mjg4Mg==", "bodyText": "Codacy found an issue: The String literal \"folder\" appears 4 times in this file; the first occurrence is on line 110", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r449542882", "createdAt": "2020-07-03T11:50:57Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -90,6 +91,133 @@ public void prepareTest() {\n         urlMapAPI = new URLMapAPIImpl();\n     }\n \n+    /**\n+     * UrlMapped Content that lives on the system host should be available on every host where the map\n+     * detail page exists (by path). If content does not live on the system host, it should only be\n+     * available on the host it is currently one\n+     * \n+     * @throws Exception\n+     */\n+\n+\n+    @Test\n+    public void systemHost_UrlMaps_Should_Work_Across_Hosts() throws Exception {\n+\n+        final Host host1 = new SiteDataGen().nextPersisted();\n+        final Host host2 = new SiteDataGen().nextPersisted();\n+        final Host host3 = new SiteDataGen().nextPersisted();\n+        \n+        final Folder folder1 = new FolderDataGen().name(\"folder\").title(\"folder\").site(host1).nextPersisted();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjA2NDUxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1OFrOGst66A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1OFrOGst66A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0Mjg4OA==", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r449542888", "createdAt": "2020-07-03T11:50:58Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -90,6 +91,133 @@ public void prepareTest() {\n         urlMapAPI = new URLMapAPIImpl();\n     }\n \n+    /**\n+     * UrlMapped Content that lives on the system host should be available on every host where the map\n+     * detail page exists (by path). If content does not live on the system host, it should only be\n+     * available on the host it is currently one\n+     * \n+     * @throws Exception\n+     */\n+\n+\n+    @Test\n+    public void systemHost_UrlMaps_Should_Work_Across_Hosts() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjA2NDU3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1OVrOGst68w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1OVrOGst68w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0Mjg5OQ==", "bodyText": "Codacy found an issue: Avoid appending characters as strings in StringBuffer.append.", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r449542899", "createdAt": "2020-07-03T11:50:59Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -268,34 +256,40 @@ private void checkContentPermission(final UrlMapContext context, final Contentle\n                 contentlet, PermissionLevel.READ.getType(), context.getUser(), context.getMode().respectAnonPerms);\n \n         if (!havePermission) {\n-            throw new DotSecurityException(String.format(\"User dont have permission in content: %s\", contentlet.getName()));\n+            throw new DotSecurityException(String.format(\"User does not have permission in content: %s\", contentlet.getName()));\n         }\n     }\n \n     private String buildContentQuery(\n             final Matches matches,\n-            final Structure structure,\n-            final Field hostField,\n+            final ContentType structure,\n             final UrlMapContext context) {\n \n         final StringBuilder query = new StringBuilder();\n \n-        query.append(\"+structureName:\").append(structure.getVelocityVarName())\n-             .append(\" +deleted:false \");\n-\n-        if (context.getMode() == PageMode.PREVIEW_MODE || context.getMode() == PageMode.EDIT_MODE) {\n-            query.append(\"+working:true \");\n+        query.append(\"+contentType:\")\n+            .append(structure.variable())\n+            .append(\" +deleted:false \")\n+            .append(\" +(conhost:\")\n+                .append(context.getHost().getIdentifier())\n+                .append(\" OR conhost:\")\n+                .append(Host.SYSTEM_HOST)\n+            .append(\")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 248}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjA2NDYxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1OVrOGst6-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MDo1OVrOGst6-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0MjkwNQ==", "bodyText": "Codacy found an issue: The String literal \"urlTitle\" appears 18 times in this file; the first occurrence is on line 148", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r449542905", "createdAt": "2020-07-03T11:50:59Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -90,6 +91,133 @@ public void prepareTest() {\n         urlMapAPI = new URLMapAPIImpl();\n     }\n \n+    /**\n+     * UrlMapped Content that lives on the system host should be available on every host where the map\n+     * detail page exists (by path). If content does not live on the system host, it should only be\n+     * available on the host it is currently one\n+     * \n+     * @throws Exception\n+     */\n+\n+\n+    @Test\n+    public void systemHost_UrlMaps_Should_Work_Across_Hosts() throws Exception {\n+\n+        final Host host1 = new SiteDataGen().nextPersisted();\n+        final Host host2 = new SiteDataGen().nextPersisted();\n+        final Host host3 = new SiteDataGen().nextPersisted();\n+        \n+        final Folder folder1 = new FolderDataGen().name(\"folder\").title(\"folder\").site(host1).nextPersisted();\n+        final Folder folder2 = new FolderDataGen().name(\"folder\").title(\"folder\").site(host2).nextPersisted();\n+\n+\n+\n+        final Template template1 = new TemplateDataGen().site(host1).nextPersisted();\n+        final Template template2 = new TemplateDataGen().site(host2).nextPersisted();\n+\n+        final HTMLPageAsset pageOnHost1 = new HTMLPageDataGen(folder1, template1).pageURL(\"my-detail\")\n+                        .title(\"my-detail\").nextPersisted();\n+\n+        final HTMLPageAsset pageOnHost2 = new HTMLPageDataGen(folder2, template2).pageURL(\"my-detail\")\n+                        .title(\"my-detail\").nextPersisted();\n+\n+        final String urlPattern = \"/\" + UUIDGenerator.shorty() + \"/{urlTitle}\";\n+        \n+        // set the detail page to page on host1\n+        final ContentType contentType1 = getNewsLikeContentType(\"News\" + System.currentTimeMillis(),\n+                        APILocator.systemHost(), pageOnHost1.getIdentifier(), urlPattern);\n+\n+\n+        final Contentlet newsOnSystemHost = TestDataUtils.getNewsContent(true,\n+                        APILocator.getLanguageAPI().getDefaultLanguage().getId(), contentType1.id(),\n+                        APILocator.systemHost(), null, UUIDGenerator.generateUuid());\n+\n+\n+        final Contentlet newsOnHost1 = TestDataUtils.getNewsContent(true,\n+                        APILocator.getLanguageAPI().getDefaultLanguage().getId(), contentType1.id(), host1,\n+                        null, UUIDGenerator.generateUuid());\n+\n+        final Contentlet newsOnHost2 = TestDataUtils.getNewsContent(true,\n+                        APILocator.getLanguageAPI().getDefaultLanguage().getId(), contentType1.id(), host2,\n+                        null, UUIDGenerator.generateUuid());\n+\n+\n+        \n+        // WORKS : trying where contentlet on the system host and request is on host1 \n+        UrlMapContext context = getUrlMapContext(systemUser, host1,\n+                        urlPattern.replace(\"{urlTitle}\", newsOnSystemHost.getStringProperty(\"urlTitle\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjA2NDY4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MTowMFrOGst7Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MTowMFrOGst7Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0MjkxNA==", "bodyText": "Codacy found an issue: The String literal \"title\" appears 14 times in this file; the first occurrence is on line 153", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r449542914", "createdAt": "2020-07-03T11:51:00Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/cms/urlmap/URLMapAPIImplTest.java", "diffHunk": "@@ -90,6 +91,133 @@ public void prepareTest() {\n         urlMapAPI = new URLMapAPIImpl();\n     }\n \n+    /**\n+     * UrlMapped Content that lives on the system host should be available on every host where the map\n+     * detail page exists (by path). If content does not live on the system host, it should only be\n+     * available on the host it is currently one\n+     * \n+     * @throws Exception\n+     */\n+\n+\n+    @Test\n+    public void systemHost_UrlMaps_Should_Work_Across_Hosts() throws Exception {\n+\n+        final Host host1 = new SiteDataGen().nextPersisted();\n+        final Host host2 = new SiteDataGen().nextPersisted();\n+        final Host host3 = new SiteDataGen().nextPersisted();\n+        \n+        final Folder folder1 = new FolderDataGen().name(\"folder\").title(\"folder\").site(host1).nextPersisted();\n+        final Folder folder2 = new FolderDataGen().name(\"folder\").title(\"folder\").site(host2).nextPersisted();\n+\n+\n+\n+        final Template template1 = new TemplateDataGen().site(host1).nextPersisted();\n+        final Template template2 = new TemplateDataGen().site(host2).nextPersisted();\n+\n+        final HTMLPageAsset pageOnHost1 = new HTMLPageDataGen(folder1, template1).pageURL(\"my-detail\")\n+                        .title(\"my-detail\").nextPersisted();\n+\n+        final HTMLPageAsset pageOnHost2 = new HTMLPageDataGen(folder2, template2).pageURL(\"my-detail\")\n+                        .title(\"my-detail\").nextPersisted();\n+\n+        final String urlPattern = \"/\" + UUIDGenerator.shorty() + \"/{urlTitle}\";\n+        \n+        // set the detail page to page on host1\n+        final ContentType contentType1 = getNewsLikeContentType(\"News\" + System.currentTimeMillis(),\n+                        APILocator.systemHost(), pageOnHost1.getIdentifier(), urlPattern);\n+\n+\n+        final Contentlet newsOnSystemHost = TestDataUtils.getNewsContent(true,\n+                        APILocator.getLanguageAPI().getDefaultLanguage().getId(), contentType1.id(),\n+                        APILocator.systemHost(), null, UUIDGenerator.generateUuid());\n+\n+\n+        final Contentlet newsOnHost1 = TestDataUtils.getNewsContent(true,\n+                        APILocator.getLanguageAPI().getDefaultLanguage().getId(), contentType1.id(), host1,\n+                        null, UUIDGenerator.generateUuid());\n+\n+        final Contentlet newsOnHost2 = TestDataUtils.getNewsContent(true,\n+                        APILocator.getLanguageAPI().getDefaultLanguage().getId(), contentType1.id(), host2,\n+                        null, UUIDGenerator.generateUuid());\n+\n+\n+        \n+        // WORKS : trying where contentlet on the system host and request is on host1 \n+        UrlMapContext context = getUrlMapContext(systemUser, host1,\n+                        urlPattern.replace(\"{urlTitle}\", newsOnSystemHost.getStringProperty(\"urlTitle\")));\n+\n+        Optional<URLMapInfo> urlMapInfoOptional = urlMapAPI.processURLMap(context);\n+        URLMapInfo urlMapInfo = urlMapInfoOptional.get();\n+\n+        assertEquals(newsOnSystemHost.getStringProperty(\"title\"), urlMapInfo.getContentlet().getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzU2NzY0OnYy", "diffSide": "LEFT", "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjowNTozOVrOGtduEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMjo0NjoyMFrOGtpaTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyNjAzMw==", "bodyText": "why do you remove the 'volatile'?", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r450326033", "createdAt": "2020-07-06T16:05:39Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -44,12 +40,11 @@\n  */\n public class URLMapAPIImpl implements URLMapAPI {\n \n-    private volatile Collection<ContentTypeURLPattern> patternsCache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMDkyNQ==", "bodyText": "because the only method that writes to the patterns cache is synchronized?  It is ok if some threads get a dirty read as long as once it has been written, all threads will ultimately see the right variable.  Am I missing something?", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r450330925", "createdAt": "2020-07-06T16:13:45Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -44,12 +40,11 @@\n  */\n public class URLMapAPIImpl implements URLMapAPI {\n \n-    private volatile Collection<ContentTypeURLPattern> patternsCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyNjAzMw=="}, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0MzM2OA==", "bodyText": "I think there might be a List implementation on Concurrent", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r450343368", "createdAt": "2020-07-06T16:33:37Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -44,12 +40,11 @@\n  */\n public class URLMapAPIImpl implements URLMapAPI {\n \n-    private volatile Collection<ContentTypeURLPattern> patternsCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyNjAzMw=="}, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0NzQzNw==", "bodyText": "So the question is, do we need a concurrent implementation on an object when all writes happen in a synced block?  I don't think we do - though I am happy to be proven wrong.", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r450347437", "createdAt": "2020-07-06T16:40:08Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -44,12 +40,11 @@\n  */\n public class URLMapAPIImpl implements URLMapAPI {\n \n-    private volatile Collection<ContentTypeURLPattern> patternsCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyNjAzMw=="}, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MDg3MA==", "bodyText": "CopyOnWriteArrayList, might be", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r450360870", "createdAt": "2020-07-06T17:03:17Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -44,12 +40,11 @@\n  */\n public class URLMapAPIImpl implements URLMapAPI {\n \n-    private volatile Collection<ContentTypeURLPattern> patternsCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyNjAzMw=="}, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NDkzMg==", "bodyText": "Guys, I understand the better ways to create / use a concurrent List.  I am just not seeing where that is a requirement here.  Here are what the impl above expects\n\nMultiple threads read the List\nAny clearing/writing/modification to the List happens in 1 thread.\nDirty reads are ok for a few (milli) seconds as the list rebuilds\n\nI have not read anything that says single threaded modification of an ArrayList is harmful.  All the examples show where there are multiple threads trying to write to a list or the ConcurrentMod exceptions use of looping over a list to modify.\nI can change to a more defensive pattern, but I am not convinced it is broken.", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r450374932", "createdAt": "2020-07-06T17:30:14Z", "author": {"login": "wezell"}, "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -44,12 +40,11 @@\n  */\n public class URLMapAPIImpl implements URLMapAPI {\n \n-    private volatile Collection<ContentTypeURLPattern> patternsCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyNjAzMw=="}, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUxNzU4MQ==", "bodyText": "I think is ok", "url": "https://github.com/dotCMS/core/pull/18825#discussion_r450517581", "createdAt": "2020-07-06T22:46:20Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/cms/urlmap/URLMapAPIImpl.java", "diffHunk": "@@ -44,12 +40,11 @@\n  */\n public class URLMapAPIImpl implements URLMapAPI {\n \n-    private volatile Collection<ContentTypeURLPattern> patternsCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyNjAzMw=="}, "originalCommit": {"oid": "cb28cf1f33e644dbd646ced5d2cc8659554dbe1c"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2020, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}