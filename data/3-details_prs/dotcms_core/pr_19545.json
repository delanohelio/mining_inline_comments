{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MTY1NjEz", "number": 19545, "title": "Issue 19089 templates rest", "bodyText": "All this code is the BE code needed to migrate the templates portlet to angular.\nThis includes the new REST API for the templates TemplateResource, which includes all the actions that you can execute over those (publish, unpublish, archive, etc), for those actions that you can execute in bulk a view was created BulkResultView and for the failed ones FailedResultView to get a better view of why the action failed over a specific item.\nFor better management of the Templates endpoint a TemplateForm was created, as several views TemplateView, TemplateLayoutView, SideBarView, etc\nTests for all these new methods were created (postman and Integration).", "createdAt": "2020-11-04T06:31:01Z", "url": "https://github.com/dotCMS/core/pull/19545", "merged": true, "mergeCommit": {"oid": "841ea1481dbcf18010605b0833d99844c422920b"}, "closed": true, "closedAt": "2020-12-09T17:57:41Z", "author": {"login": "jdotcms"}, "timelineItems": {"totalCount": 84, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS7AGlgH2gAyNTE1MTY1NjEzOmRiNjhiYjExZmI3MzIzY2NhN2E3NmJhNzY4YzQ0ZTBmZjVlNTY0Yzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkil0DgFqTU0ODQ0OTY4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "db68bb11fb7323cca7a76ba768c44e0ff5e564c7", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/db68bb11fb7323cca7a76ba768c44e0ff5e564c7", "committedDate": "2020-10-16T00:12:23Z", "message": "#18730 remove mapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43769b5f61c47b1b9e7fd65d51b15788a532fe6b", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/43769b5f61c47b1b9e7fd65d51b15788a532fe6b", "committedDate": "2020-10-16T00:13:36Z", "message": "#18730 migrate API to use dotconnect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4ee0e0b000c49c7963c39e82bf5953d11094a0b", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/c4ee0e0b000c49c7963c39e82bf5953d11094a0b", "committedDate": "2020-10-16T16:22:20Z", "message": "#18730 move classes where they belong"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe7e610157683eecf5305daaf9e7659d661f9f28", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/fe7e610157683eecf5305daaf9e7659d661f9f28", "committedDate": "2020-10-16T17:40:51Z", "message": "#18730 a bit of cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "625af82e2d98770b94d372c39d6244bf038e0cd0", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/625af82e2d98770b94d372c39d6244bf038e0cd0", "committedDate": "2020-10-16T21:14:28Z", "message": "#18730 call factory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4726b2eea68619f9a9df179a32b66bbe1b6e515d", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/4726b2eea68619f9a9df179a32b66bbe1b6e515d", "committedDate": "2020-10-20T20:58:05Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-18730"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7f7a01172aab5baab2a35bb943b079fdee91b8d", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/b7f7a01172aab5baab2a35bb943b079fdee91b8d", "committedDate": "2020-10-21T18:35:17Z", "message": "#18730 fixes for history, delete version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c53c3f74deba61640b3261facc3984dfadd903f", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/2c53c3f74deba61640b3261facc3984dfadd903f", "committedDate": "2020-10-21T18:38:40Z", "message": "#18730 fixes for publish, unpublish, archive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c593fed2e3cc1cf053ea7cb9ab399ae35e9cf88", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/6c593fed2e3cc1cf053ea7cb9ab399ae35e9cf88", "committedDate": "2020-10-21T18:39:28Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-18730"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fabdd2d51047f2ea94d08670fbf4bfc48a2219ad", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/fabdd2d51047f2ea94d08670fbf4bfc48a2219ad", "committedDate": "2020-10-22T15:42:00Z", "message": "sql to recreate getChildrenClass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e435b7327338572337f00ebee7382c0b37393a8b", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/e435b7327338572337f00ebee7382c0b37393a8b", "committedDate": "2020-10-22T16:05:36Z", "message": "#18730 call findAllVersions from template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "324a0739e76468db94132ed8af1971ddc68a04a4", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/324a0739e76468db94132ed8af1971ddc68a04a4", "committedDate": "2020-10-22T18:02:19Z", "message": "#18730 get idate and owner from inode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "103d1c9b15ec9650818005a6e12b9c8f68b6a155", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/103d1c9b15ec9650818005a6e12b9c8f68b6a155", "committedDate": "2020-10-22T20:17:40Z", "message": "#18730 should update all versions of the template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1c07fbce95feda47dbd6a34ea7ad537885408aa", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/c1c07fbce95feda47dbd6a34ea7ad537885408aa", "committedDate": "2020-10-22T20:46:35Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-19089-templates-rest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "095712d8ca617c28d50b5f793d1e0634bd7f7570", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/095712d8ca617c28d50b5f793d1e0634bd7f7570", "committedDate": "2020-10-26T18:03:30Z", "message": "#19089 adding the layout to the template view"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35810da0c901b9e8879a73ff81b5cc01ca64040e", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/35810da0c901b9e8879a73ff81b5cc01ca64040e", "committedDate": "2020-10-26T21:51:38Z", "message": "#19089 adding save new and publish, save and publish and multiple deletes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd9d17312b9c290b588724e662eccd57fb8281d4", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/bd9d17312b9c290b588724e662eccd57fb8281d4", "committedDate": "2020-10-27T20:44:10Z", "message": "#19089 adding containers to the view template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e8c8d80a35646bca42c285dacfcc1fd38bac61a", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/4e8c8d80a35646bca42c285dacfcc1fd38bac61a", "committedDate": "2020-10-27T20:59:29Z", "message": "#19089 adding the containers to the template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e5d8f62196fbb1b9888a9e76fa8e5b639c3a60c", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/3e5d8f62196fbb1b9888a9e76fa8e5b639c3a60c", "committedDate": "2020-10-27T22:55:04Z", "message": "#19089 adding the container indexed by id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b555e7e63112645119a523879544082923e3bf12", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/b555e7e63112645119a523879544082923e3bf12", "committedDate": "2020-10-29T20:49:15Z", "message": "#19089 adding the layout to the template form"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1cbc17340bd800f637d27a79c23ef8be990d974", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/b1cbc17340bd800f637d27a79c23ef8be990d974", "committedDate": "2020-10-30T22:52:43Z", "message": "#19089 adding a mapping for the sort by on templates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "316b1c6868b6f8c32b200e7e521d9aafc2f16c47", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/316b1c6868b6f8c32b200e7e521d9aafc2f16c47", "committedDate": "2020-11-03T04:13:53Z", "message": "#19089 adding changes to save templates by id or inode, also introducing the template layout view"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6caae2fc9dc16fa0d3f4a59bf10d7d3209072d21", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/6caae2fc9dc16fa0d3f4a59bf10d7d3209072d21", "committedDate": "2020-11-03T05:56:44Z", "message": "#19089 changes to support the layout view"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261a06f8a8fb9b90d37d88309b6a5d8ce4766524", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/261a06f8a8fb9b90d37d88309b6a5d8ce4766524", "committedDate": "2020-11-03T15:37:42Z", "message": "#19089 fixed on the side bar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a3654ce8f064f2097cb9dc98b75fd349318795d", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/8a3654ce8f064f2097cb9dc98b75fd349318795d", "committedDate": "2020-11-03T17:10:06Z", "message": "#19089 adding a fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "108424dc603ccbe93a88eb25bd60b7ac88e778d9", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/108424dc603ccbe93a88eb25bd60b7ac88e778d9", "committedDate": "2020-11-04T06:26:42Z", "message": "#19089 Adding the Versionable Resource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71e42f58b34fab48370b81189c2260c35617552a", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/71e42f58b34fab48370b81189c2260c35617552a", "committedDate": "2020-11-04T06:36:00Z", "message": "#19089 merge master done"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67363181328d51fc031b3fff5fd5f45973451160", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/67363181328d51fc031b3fff5fd5f45973451160", "committedDate": "2020-11-04T15:37:35Z", "message": "#19089 minor feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1748fc4a37c095c9ae580a9a3495c5ff1a38746e", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/1748fc4a37c095c9ae580a9a3495c5ff1a38746e", "committedDate": "2020-11-05T22:41:08Z", "message": "#19089 adding the delete version on versionable resource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3667ff6fb8018bb1a39fbe67db95e29726b2dd10", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/3667ff6fb8018bb1a39fbe67db95e29726b2dd10", "committedDate": "2020-11-05T23:46:40Z", "message": "#19089 changing endpoint name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0adff7b3a9620f1917b934607a39755e952e24d", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/a0adff7b3a9620f1917b934607a39755e952e24d", "committedDate": "2020-11-06T14:56:50Z", "message": "#19089 changing endpoint name again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0d4b70e1ac55551d68d37ace82cb702f1061e54", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/c0d4b70e1ac55551d68d37ace82cb702f1061e54", "committedDate": "2020-11-09T19:01:49Z", "message": "#19089 added get Version and bring back version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5691d493042e031b44ad39161c68a741b6fe4a9e", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/5691d493042e031b44ad39161c68a741b6fe4a9e", "committedDate": "2020-11-14T04:21:28Z", "message": "#19089 adding changes for validation and allowing operations per id or inode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d22bbf236f6a19b705035c9acbeffcd0dd08306", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/7d22bbf236f6a19b705035c9acbeffcd0dd08306", "committedDate": "2020-11-14T04:50:22Z", "message": "#19089 adding a fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3115fb113c8a599a3c4df5339656012549104391", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/3115fb113c8a599a3c4df5339656012549104391", "committedDate": "2020-11-16T15:10:48Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-19089-templates-rest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f222e5efb71c887f31a4d6133d9b334152a37f0d", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/f222e5efb71c887f31a4d6133d9b334152a37f0d", "committedDate": "2020-11-16T15:56:21Z", "message": "Merge branch 'issue-19089-templates-rest' of github.com:dotCMS/core into issue-19089-templates-rest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4467139fdd2d26fd458689071d71bd7b07ab235d", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/4467139fdd2d26fd458689071d71bd7b07ab235d", "committedDate": "2020-11-16T16:01:58Z", "message": "#19089 more fixes for templates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1169e780cef601c256135bd1b19604d7d4ce121", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/a1169e780cef601c256135bd1b19604d7d4ce121", "committedDate": "2020-11-16T21:22:31Z", "message": "#19089 archive template(s)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d07dfc2905ff0743ec64a7e8918a4ee66f2f680", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/5d07dfc2905ff0743ec64a7e8918a4ee66f2f680", "committedDate": "2020-11-16T21:50:03Z", "message": "#19089 unarchive template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a746ca53a34207e7f6c40e25c290d5c1e7be6fb7", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/a746ca53a34207e7f6c40e25c290d5c1e7be6fb7", "committedDate": "2020-11-17T00:07:24Z", "message": "#19089 fix compiling issues tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6b783ac615c35b07cceb5fb23f78c74feee630e", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/a6b783ac615c35b07cceb5fb23f78c74feee630e", "committedDate": "2020-11-17T00:08:32Z", "message": "remove unusuable exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96f3d6b87d383c6a5e59d01d14ef685461818ece", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/96f3d6b87d383c6a5e59d01d14ef685461818ece", "committedDate": "2020-11-17T16:15:10Z", "message": "#19089 tests and some fixed for archive/unarchive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a42a546e5e23236f45946c29b2b308bcd52c718", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/2a42a546e5e23236f45946c29b2b308bcd52c718", "committedDate": "2020-11-17T16:29:00Z", "message": "#19089 more tests archive/unarchive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81ccc0abbcbb6bef2ba3345e8e19dadb852957e1", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/81ccc0abbcbb6bef2ba3345e8e19dadb852957e1", "committedDate": "2020-11-18T16:29:49Z", "message": "#19089 refactor delete template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5a4cecf1da3272beda67e871efc0bbf332183a4", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/d5a4cecf1da3272beda67e871efc0bbf332183a4", "committedDate": "2020-11-18T16:30:26Z", "message": "#19089 tests delete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8752b946f1c07f7b8f47639ccb44832608e87cc2", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/8752b946f1c07f7b8f47639ccb44832608e87cc2", "committedDate": "2020-11-18T21:09:38Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce45b2629d26704311f300a8460efd2cc91a0f3a", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/ce45b2629d26704311f300a8460efd2cc91a0f3a", "committedDate": "2020-11-18T21:39:28Z", "message": "#19089 refactor response archive, unarchive, deete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fb5207feeae8be8495f7d0a37a3f81b18555f9d", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/0fb5207feeae8be8495f7d0a37a3f81b18555f9d", "committedDate": "2020-11-18T22:27:56Z", "message": "#19089 fix test archive, unarchive, delete after refactor response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d731320364224e8ca9c52e8978a6e06ad99e9b68", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/d731320364224e8ca9c52e8978a6e06ad99e9b68", "committedDate": "2020-11-19T17:32:23Z", "message": "#19089 refactor response publish and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15a780dccfd42d8f8a07b9cc12e46da04af95806", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/15a780dccfd42d8f8a07b9cc12e46da04af95806", "committedDate": "2020-11-19T22:28:14Z", "message": "#19089 refactor response unpublish and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a4e83d80b68a34aa04d10536c7043fa6bd13293", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/1a4e83d80b68a34aa04d10536c7043fa6bd13293", "committedDate": "2020-11-20T17:45:24Z", "message": "#19089 add lockedBy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43391d283fc51ede5e29cc7b0009f8cf248932ba", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/43391d283fc51ede5e29cc7b0009f8cf248932ba", "committedDate": "2020-11-20T17:46:50Z", "message": "#19089 lock and unlock refactor and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02876585b93a175274c55ef9f3c41a8a67d93f1e", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/02876585b93a175274c55ef9f3c41a8a67d93f1e", "committedDate": "2020-11-20T17:59:41Z", "message": "#19089 move method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25fdb9fa2f515adc64ae7baf4d0aacd7aa39bf39", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/25fdb9fa2f515adc64ae7baf4d0aacd7aa39bf39", "committedDate": "2020-11-20T18:30:03Z", "message": "give read permissions to limited user"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3a601632b46d2e9683a8eb9437da2b00541a595", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/a3a601632b46d2e9683a8eb9437da2b00541a595", "committedDate": "2020-11-23T20:27:10Z", "message": "#19089 locked validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e30c28d4898727ec07f5aae1ed852115be8b43eb", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/e30c28d4898727ec07f5aae1ed852115be8b43eb", "committedDate": "2020-11-24T15:42:09Z", "message": "#19089 refactor copy template and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52a2e051addc0be07692659347f24fadb9d255b2", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/52a2e051addc0be07692659347f24fadb9d255b2", "committedDate": "2020-11-24T16:17:50Z", "message": "rename failed to fails"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce478b9d71c22583403aefa1b7f48acb51345404", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/ce478b9d71c22583403aefa1b7f48acb51345404", "committedDate": "2020-11-24T16:18:12Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-19089-templates-rest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31280601678f978636a0d47f87b4ba49881b9b53", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/31280601678f978636a0d47f87b4ba49881b9b53", "committedDate": "2020-11-24T17:29:21Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d625495ef0c95b7174c53f9eb086dbb73f48da86", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/d625495ef0c95b7174c53f9eb086dbb73f48da86", "committedDate": "2020-11-24T22:24:01Z", "message": "#19089 get live and get working by id tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dde00ccec3fa341e3513afbd90db8ed40f4ff151", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/dde00ccec3fa341e3513afbd90db8ed40f4ff151", "committedDate": "2020-11-25T17:25:36Z", "message": "#19089 tests for get templates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b83df846663d6a2e04435e0b51c994bdc74959d6", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/b83df846663d6a2e04435e0b51c994bdc74959d6", "committedDate": "2020-11-25T22:50:53Z", "message": "#19089 refactor and tests for add/edit template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60bc212094e5a34ec2abc714d065ea4352655230", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/60bc212094e5a34ec2abc714d065ea4352655230", "committedDate": "2020-12-03T16:47:55Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f5c1cfa705f172c03bdbbbc48a57ea85c93043e", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/2f5c1cfa705f172c03bdbbbc48a57ea85c93043e", "committedDate": "2020-12-03T21:25:47Z", "message": "#19089 add tests and fix others"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1631512cb14dcadcb64c35a16d18be0a2d846f9b", "author": {"user": {"login": "hmoreras", "name": "Humberto Morera "}}, "url": "https://github.com/dotCMS/core/commit/1631512cb14dcadcb64c35a16d18be0a2d846f9b", "committedDate": "2020-12-03T22:24:18Z", "message": "new labels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d9b7fc748181500a80e4f1b6481d07c5b3b2436", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/5d9b7fc748181500a80e4f1b6481d07c5b3b2436", "committedDate": "2020-12-04T14:36:22Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-19089-templates-rest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8cde0a3dfbf05f3cfaf33bda472214e7441426a", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/b8cde0a3dfbf05f3cfaf33bda472214e7441426a", "committedDate": "2020-12-04T21:08:17Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f5d804e7833a60e49f0473b9a46beecf5540898", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/0f5d804e7833a60e49f0473b9a46beecf5540898", "committedDate": "2020-12-07T16:15:29Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-19089-templates-rest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2a6ec4c1dee93b252199bbc94b88b0de56152a8", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/e2a6ec4c1dee93b252199bbc94b88b0de56152a8", "committedDate": "2020-12-07T20:33:35Z", "message": "#19089 fix issue with cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50b13e05ff04396890253f91c45b1b46efc4962d", "author": {"user": {"login": "fmontes", "name": "Freddy Montes"}}, "url": "https://github.com/dotCMS/core/commit/50b13e05ff04396890253f91c45b1b46efc4962d", "committedDate": "2020-12-07T21:48:01Z", "message": "Add language"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3b469ae7a4d0c5f82845edc7eead006b0bd4f5e", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/b3b469ae7a4d0c5f82845edc7eead006b0bd4f5e", "committedDate": "2020-12-07T22:18:15Z", "message": "#19089 rename method and improve exception msg"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2cdf6d1a40fd30c4a2de01119beec497ea743ef", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/a2cdf6d1a40fd30c4a2de01119beec497ea743ef", "committedDate": "2020-12-08T16:46:25Z", "message": "#19089 remove versionableResource working another issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3069e5a1353baf266617e2eafa2fd85c78e0867", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/d3069e5a1353baf266617e2eafa2fd85c78e0867", "committedDate": "2020-12-08T16:47:14Z", "message": "Merge branch 'issue-19089-templates-rest' of github.com:dotCMS/core into issue-19089-templates-rest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/4fceb33472c956148656e1f6420c03b5554a42bc", "committedDate": "2020-12-08T18:10:56Z", "message": "rename curl test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MjU3MTE1", "url": "https://github.com/dotCMS/core/pull/19545#pullrequestreview-548257115", "createdAt": "2020-12-09T14:47:03Z", "commit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo0NzowM1rOICYVfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo0NzowM1rOICYVfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM2Njc4Mw==", "bodyText": "Update postman tests descriptions accordingly. They can be very useful for other developers, especially when a test is broken and somebody else needs to fix it", "url": "https://github.com/dotCMS/core/pull/19545#discussion_r539366783", "createdAt": "2020-12-09T14:47:03Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/curl-test/Template Resource.postman_collection.json", "diffHunk": "@@ -1,1185 +1,5668 @@\n {\n \t\"info\": {\n-\t\t\"_postman_id\": \"ca04fce0-52b8-4d12-9ab0-35b4a78c794a\",\n+\t\t\"_postman_id\": \"2db489d7-7e7c-4531-a1cb-4d70d61ffb70\",\n \t\t\"name\": \"Template Resource\",\n \t\t\"description\": \"Make the test for the template resource crud\",\n \t\t\"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n \t},\n \t\"item\": [\n \t\t{\n-\t\t\t\"name\": \"Create New Template\",\n-\t\t\t\"event\": [\n+\t\t\t\"name\": \"Archive\",\n+\t\t\t\"item\": [\n \t\t\t\t{\n-\t\t\t\t\t\"listen\": \"test\",\n-\t\t\t\t\t\"script\": {\n-\t\t\t\t\t\t\"id\": \"e4345c2e-2b27-4316-a1ed-3089b9a93470\",\n-\t\t\t\t\t\t\"exec\": [\n-\t\t\t\t\t\t\t\"var jsonData = pm.response.json();\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"pm.test(\\\"body check\\\", function () {\",\n-\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.body).to.eql('This is the body');\",\n-\t\t\t\t\t\t\t\"});\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"pm.test(\\\"friendlyName check\\\", function () {\",\n-\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');\",\n-\t\t\t\t\t\t\t\"});\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"pm.test(\\\"Title check\\\", function () {\",\n-\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');\",\n-\t\t\t\t\t\t\t\"});\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"pm.collectionVariables.set(\\\"temporaryInode\\\", jsonData.entity.inode);\",\n-\t\t\t\t\t\t\t\"pm.collectionVariables.set(\\\"templateIdentifier\\\", jsonData.entity.identifier);\",\n-\t\t\t\t\t\t\t\"\"\n-\t\t\t\t\t\t],\n-\t\t\t\t\t\t\"type\": \"text/javascript\"\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t],\n-\t\t\t\"request\": {\n-\t\t\t\t\"auth\": {\n-\t\t\t\t\t\"type\": \"basic\",\n-\t\t\t\t\t\"basic\": [\n+\t\t\t\t\t\"name\": \"Create New Template to Archive\",\n+\t\t\t\t\t\"event\": [\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\"key\": \"password\",\n-\t\t\t\t\t\t\t\"value\": \"admin\",\n-\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\"listen\": \"test\",\n+\t\t\t\t\t\t\t\"script\": {\n+\t\t\t\t\t\t\t\t\"id\": \"eacc2122-5e9b-475f-b762-8f2a627c70de\",\n+\t\t\t\t\t\t\t\t\"exec\": [\n+\t\t\t\t\t\t\t\t\t\"var jsonData = pm.response.json();\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"body check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.body).to.eql('This is the body');\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"friendlyName check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Title check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.collectionVariables.set(\\\"templateIdToArchive\\\", jsonData.entity.identifier);\",\n+\t\t\t\t\t\t\t\t\t\"\"\n+\t\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\t\"type\": \"text/javascript\"\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t],\n+\t\t\t\t\t\"request\": {\n+\t\t\t\t\t\t\"auth\": {\n+\t\t\t\t\t\t\t\"type\": \"basic\",\n+\t\t\t\t\t\t\t\"basic\": [\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"password\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"username\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin@dotcms.com\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"saveHelperData\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"showPassword\",\n+\t\t\t\t\t\t\t\t\t\"value\": false,\n+\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t]\n \t\t\t\t\t\t},\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\"key\": \"username\",\n-\t\t\t\t\t\t\t\"value\": \"admin@dotcms.com\",\n-\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\t\t\"header\": [],\n+\t\t\t\t\t\t\"body\": {\n+\t\t\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\t\t\"raw\": \"{\\n    \\\"title\\\":\\\"PostMan Test\\\",\\n    \\\"friendlyName\\\":\\\"This is a postman test description\\\",\\n    \\\"body\\\":\\\"This is the body\\\"\\n\\n}\",\n+\t\t\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t},\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\"key\": \"saveHelperData\",\n-\t\t\t\t\t\t\t\"type\": \"any\"\n+\t\t\t\t\t\t\"url\": {\n+\t\t\t\t\t\t\t\"raw\": \"{{serverURL}}/api/v1/templates\",\n+\t\t\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\t\t\"{{serverURL}}\"\n+\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\t\t\"api\",\n+\t\t\t\t\t\t\t\t\"v1\",\n+\t\t\t\t\t\t\t\t\"templates\"\n+\t\t\t\t\t\t\t]\n \t\t\t\t\t\t},\n+\t\t\t\t\t\t\"description\": \"Creates a new template\"\n+\t\t\t\t\t},\n+\t\t\t\t\t\"response\": []\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"name\": \"Archive Template Success\",\n+\t\t\t\t\t\"event\": [\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\"key\": \"showPassword\",\n-\t\t\t\t\t\t\t\"value\": false,\n-\t\t\t\t\t\t\t\"type\": \"boolean\"\n+\t\t\t\t\t\t\t\"listen\": \"test\",\n+\t\t\t\t\t\t\t\"script\": {\n+\t\t\t\t\t\t\t\t\"id\": \"5bea8c04-e089-4988-b32a-10f0b885159d\",\n+\t\t\t\t\t\t\t\t\"exec\": [\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Status code should be 200\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.response.to.have.status(200);\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"var jsonData = pm.response.json();\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Archive Template Check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.successCount).to.be.eql(1);\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Failed To Archive Template Check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);\",\n+\t\t\t\t\t\t\t\t\t\"});\"\n+\t\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\t\"type\": \"text/javascript\"\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t]\n+\t\t\t\t\t],\n+\t\t\t\t\t\"request\": {\n+\t\t\t\t\t\t\"auth\": {\n+\t\t\t\t\t\t\t\"type\": \"basic\",\n+\t\t\t\t\t\t\t\"basic\": [\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"password\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"username\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin@dotcms.com\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"saveHelperData\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"showPassword\",\n+\t\t\t\t\t\t\t\t\t\"value\": false,\n+\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t]\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t\"method\": \"PUT\",\n+\t\t\t\t\t\t\"header\": [],\n+\t\t\t\t\t\t\"body\": {\n+\t\t\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\t\t\"raw\": \"[\\\"{{templateIdToArchive}}\\\"]\",\n+\t\t\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t\"url\": {\n+\t\t\t\t\t\t\t\"raw\": \"{{serverURL}}/api/v1/templates/_archive\",\n+\t\t\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\t\t\"{{serverURL}}\"\n+\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\t\t\"api\",\n+\t\t\t\t\t\t\t\t\"v1\",\n+\t\t\t\t\t\t\t\t\"templates\",\n+\t\t\t\t\t\t\t\t\"_archive\"\n+\t\t\t\t\t\t\t]\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t\"description\": \"Archive one template successfully\"\n+\t\t\t\t\t},\n+\t\t\t\t\t\"response\": []\n \t\t\t\t},\n-\t\t\t\t\"method\": \"POST\",\n-\t\t\t\t\"header\": [],\n-\t\t\t\t\"body\": {\n-\t\t\t\t\t\"mode\": \"raw\",\n-\t\t\t\t\t\"raw\": \"{\\n    \\\"title\\\":\\\"PostMan Test\\\",\\n    \\\"friendlyName\\\":\\\"This is a postman test description\\\",\\n    \\\"body\\\":\\\"This is the body\\\"\\n\\n}\",\n-\t\t\t\t\t\"options\": {\n-\t\t\t\t\t\t\"raw\": {\n-\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t{\n+\t\t\t\t\t\"name\": \"Get Template Archived True\",\n+\t\t\t\t\t\"event\": [\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\"listen\": \"test\",\n+\t\t\t\t\t\t\t\"script\": {\n+\t\t\t\t\t\t\t\t\"id\": \"f5fa2f81-954a-44ba-bf79-b1bea82b80a8\",\n+\t\t\t\t\t\t\t\t\"exec\": [\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Status code should be 200\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.response.to.have.status(200);\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"var jsonData = pm.response.json();\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Deleted Check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity[0].deleted).to.eql(true);\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\"\n+\t\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\t\"type\": \"text/javascript\"\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t},\n-\t\t\t\t\"url\": {\n-\t\t\t\t\t\"raw\": \"{{serverURL}}/api/v1/templates\",\n-\t\t\t\t\t\"host\": [\n-\t\t\t\t\t\t\"{{serverURL}}\"\n \t\t\t\t\t],\n-\t\t\t\t\t\"path\": [\n-\t\t\t\t\t\t\"api\",\n-\t\t\t\t\t\t\"v1\",\n-\t\t\t\t\t\t\"templates\"\n-\t\t\t\t\t]\n+\t\t\t\t\t\"request\": {\n+\t\t\t\t\t\t\"auth\": {\n+\t\t\t\t\t\t\t\"type\": \"basic\",\n+\t\t\t\t\t\t\t\"basic\": [\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"password\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"username\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin@dotcms.com\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"saveHelperData\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"showPassword\",\n+\t\t\t\t\t\t\t\t\t\"value\": false,\n+\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t]\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\t\t\"header\": [],\n+\t\t\t\t\t\t\"url\": {\n+\t\t\t\t\t\t\t\"raw\": \"{{serverURL}}/api/v1/templates?filter={{templateIdToArchive}}&archive=true\",\n+\t\t\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\t\t\"{{serverURL}}\"\n+\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\t\t\"api\",\n+\t\t\t\t\t\t\t\t\"v1\",\n+\t\t\t\t\t\t\t\t\"templates\"\n+\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\"query\": [\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"filter\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"{{templateIdToArchive}}\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"archive\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"true\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t]\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t\"description\": \"Get a since template\"\n+\t\t\t\t\t},\n+\t\t\t\t\t\"response\": []\n \t\t\t\t},\n-\t\t\t\t\"description\": \"Creates a new template\"\n-\t\t\t},\n-\t\t\t\"response\": []\n-\t\t},\n-\t\t{\n-\t\t\t\"name\": \"Can not Delete\",\n-\t\t\t\"event\": [\n \t\t\t\t{\n-\t\t\t\t\t\"listen\": \"test\",\n-\t\t\t\t\t\"script\": {\n-\t\t\t\t\t\t\"id\": \"ae1bab8d-cd9f-4f2b-a6e9-bebc660c4573\",\n-\t\t\t\t\t\t\"exec\": [\n-\t\t\t\t\t\t\t\"pm.test(\\\"Status code should be 400\\\", function () {\",\n-\t\t\t\t\t\t\t\"    pm.response.to.have.status(400);\",\n-\t\t\t\t\t\t\t\"});\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"\"\n-\t\t\t\t\t\t],\n-\t\t\t\t\t\t\"type\": \"text/javascript\"\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t],\n-\t\t\t\"request\": {\n-\t\t\t\t\"auth\": {\n-\t\t\t\t\t\"type\": \"basic\",\n-\t\t\t\t\t\"basic\": [\n+\t\t\t\t\t\"name\": \"Re-Archive Template Success\",\n+\t\t\t\t\t\"event\": [\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\"key\": \"password\",\n-\t\t\t\t\t\t\t\"value\": \"admin\",\n-\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\"listen\": \"test\",\n+\t\t\t\t\t\t\t\"script\": {\n+\t\t\t\t\t\t\t\t\"id\": \"e22d0f0d-d8d1-4dde-bdd9-0123011717ea\",\n+\t\t\t\t\t\t\t\t\"exec\": [\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Status code should be 200\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.response.to.have.status(200);\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"var jsonData = pm.response.json();\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Archive Template Check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.successCount).to.be.eql(1);\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Failed To Archive Template Check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);\",\n+\t\t\t\t\t\t\t\t\t\"});\"\n+\t\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\t\"type\": \"text/javascript\"\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t],\n+\t\t\t\t\t\"request\": {\n+\t\t\t\t\t\t\"auth\": {\n+\t\t\t\t\t\t\t\"type\": \"basic\",\n+\t\t\t\t\t\t\t\"basic\": [\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"password\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"username\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin@dotcms.com\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"saveHelperData\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"showPassword\",\n+\t\t\t\t\t\t\t\t\t\"value\": false,\n+\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t]\n \t\t\t\t\t\t},\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\"key\": \"username\",\n-\t\t\t\t\t\t\t\"value\": \"admin@dotcms.com\",\n-\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\"method\": \"PUT\",\n+\t\t\t\t\t\t\"header\": [],\n+\t\t\t\t\t\t\"body\": {\n+\t\t\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\t\t\"raw\": \"[\\\"{{templateIdToArchive}}\\\"]\",\n+\t\t\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t},\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\"key\": \"saveHelperData\",\n-\t\t\t\t\t\t\t\"type\": \"any\"\n+\t\t\t\t\t\t\"url\": {\n+\t\t\t\t\t\t\t\"raw\": \"{{serverURL}}/api/v1/templates/_archive\",\n+\t\t\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\t\t\"{{serverURL}}\"\n+\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\t\t\"api\",\n+\t\t\t\t\t\t\t\t\"v1\",\n+\t\t\t\t\t\t\t\t\"templates\",\n+\t\t\t\t\t\t\t\t\"_archive\"\n+\t\t\t\t\t\t\t]\n \t\t\t\t\t\t},\n+\t\t\t\t\t\t\"description\": \"Archive one template successfully\"\n+\t\t\t\t\t},\n+\t\t\t\t\t\"response\": []\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"name\": \"Get Template Archived True\",\n+\t\t\t\t\t\"event\": [\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\"key\": \"showPassword\",\n-\t\t\t\t\t\t\t\"value\": false,\n-\t\t\t\t\t\t\t\"type\": \"boolean\"\n+\t\t\t\t\t\t\t\"listen\": \"test\",\n+\t\t\t\t\t\t\t\"script\": {\n+\t\t\t\t\t\t\t\t\"id\": \"be450247-7657-4e81-89d0-d0e713b09429\",\n+\t\t\t\t\t\t\t\t\"exec\": [\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Status code should be 200\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.response.to.have.status(200);\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"var jsonData = pm.response.json();\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Deleted Check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity[0].deleted).to.eql(true);\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\"\n+\t\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\t\"type\": \"text/javascript\"\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t]\n-\t\t\t\t},\n-\t\t\t\t\"method\": \"DELETE\",\n-\t\t\t\t\"header\": [],\n-\t\t\t\t\"url\": {\n-\t\t\t\t\t\"raw\": \"{{serverURL}}/api/v1/templates/{{temporaryInode}}\",\n-\t\t\t\t\t\"host\": [\n-\t\t\t\t\t\t\"{{serverURL}}\"\n \t\t\t\t\t],\n-\t\t\t\t\t\"path\": [\n-\t\t\t\t\t\t\"api\",\n-\t\t\t\t\t\t\"v1\",\n-\t\t\t\t\t\t\"templates\",\n-\t\t\t\t\t\t\"{{temporaryInode}}\"\n-\t\t\t\t\t]\n+\t\t\t\t\t\"request\": {\n+\t\t\t\t\t\t\"auth\": {\n+\t\t\t\t\t\t\t\"type\": \"basic\",\n+\t\t\t\t\t\t\t\"basic\": [\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"password\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"username\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin@dotcms.com\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"saveHelperData\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"showPassword\",\n+\t\t\t\t\t\t\t\t\t\"value\": false,\n+\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t]\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\t\t\"header\": [],\n+\t\t\t\t\t\t\"url\": {\n+\t\t\t\t\t\t\t\"raw\": \"{{serverURL}}/api/v1/templates?filter={{templateIdToArchive}}&archive=true\",\n+\t\t\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\t\t\"{{serverURL}}\"\n+\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\t\t\"api\",\n+\t\t\t\t\t\t\t\t\"v1\",\n+\t\t\t\t\t\t\t\t\"templates\"\n+\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\"query\": [\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"filter\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"{{templateIdToArchive}}\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"archive\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"true\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t]\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t\"description\": \"Get a since template\"\n+\t\t\t\t\t},\n+\t\t\t\t\t\"response\": []\n \t\t\t\t},\n-\t\t\t\t\"description\": \"Can not delete, non-archive template\"\n-\t\t\t},\n-\t\t\t\"response\": []\n-\t\t},\n-\t\t{\n-\t\t\t\"name\": \"Edit Template\",\n-\t\t\t\"event\": [\n \t\t\t\t{\n-\t\t\t\t\t\"listen\": \"test\",\n-\t\t\t\t\t\"script\": {\n-\t\t\t\t\t\t\"id\": \"b7c9e706-9c76-4974-9d6f-da0841d5cf49\",\n-\t\t\t\t\t\t\"exec\": [\n-\t\t\t\t\t\t\t\"var jsonData = pm.response.json();\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"pm.test(\\\"body check\\\", function () {\",\n-\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.body).to.eql('This is the body');\",\n-\t\t\t\t\t\t\t\"});\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"pm.test(\\\"friendlyName check\\\", function () {\",\n-\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');\",\n-\t\t\t\t\t\t\t\"});\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"pm.test(\\\"Title check\\\", function () {\",\n-\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.title).to.eql('PostMan Test Changed');\",\n-\t\t\t\t\t\t\t\"});\",\n-\t\t\t\t\t\t\t\"\",\n-\t\t\t\t\t\t\t\"pm.collectionVariables.set(\\\"temporaryInode\\\", jsonData.entity.inode);\",\n-\t\t\t\t\t\t\t\"\"\n-\t\t\t\t\t\t],\n-\t\t\t\t\t\t\"type\": \"text/javascript\"\n-\t\t\t\t\t}\n+\t\t\t\t\t\"name\": \"Archive Template Failed To Archive Id Not Exist\",\n+\t\t\t\t\t\"event\": [\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\"listen\": \"test\",\n+\t\t\t\t\t\t\t\"script\": {\n+\t\t\t\t\t\t\t\t\"id\": \"d718a5c0-feb2-4445-afd0-20d9776cf756\",\n+\t\t\t\t\t\t\t\t\"exec\": [\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Status code should be 200\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.response.to.have.status(200);\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"var jsonData = pm.response.json();\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Archive Template Check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.successCount).to.be.eql(0);\",\n+\t\t\t\t\t\t\t\t\t\"});\",\n+\t\t\t\t\t\t\t\t\t\"\",\n+\t\t\t\t\t\t\t\t\t\"pm.test(\\\"Failed To Archive Template Check\\\", function () {\",\n+\t\t\t\t\t\t\t\t\t\"    pm.expect(jsonData.entity.fails).to.have.lengthOf(1);\",\n+\t\t\t\t\t\t\t\t\t\"});\"\n+\t\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\t\"type\": \"text/javascript\"\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t],\n+\t\t\t\t\t\"request\": {\n+\t\t\t\t\t\t\"auth\": {\n+\t\t\t\t\t\t\t\"type\": \"basic\",\n+\t\t\t\t\t\t\t\"basic\": [\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"password\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"username\",\n+\t\t\t\t\t\t\t\t\t\"value\": \"admin@dotcms.com\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"saveHelperData\",\n+\t\t\t\t\t\t\t\t\t\"type\": \"any\"\n+\t\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\t\"key\": \"showPassword\",\n+\t\t\t\t\t\t\t\t\t\"value\": false,\n+\t\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t]\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t\"method\": \"PUT\",\n+\t\t\t\t\t\t\"header\": [],\n+\t\t\t\t\t\t\"body\": {\n+\t\t\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\t\t\"raw\": \"[\\\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\\\"]\",\n+\t\t\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t\"url\": {\n+\t\t\t\t\t\t\t\"raw\": \"{{serverURL}}/api/v1/templates/_archive\",\n+\t\t\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\t\t\"{{serverURL}}\"\n+\t\t\t\t\t\t\t],\n+\t\t\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\t\t\"api\",\n+\t\t\t\t\t\t\t\t\"v1\",\n+\t\t\t\t\t\t\t\t\"templates\",\n+\t\t\t\t\t\t\t\t\"_archive\"\n+\t\t\t\t\t\t\t]\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t\"description\": \"Archive one template successfully\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "originalPosition": 622}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MjY4Mjg0", "url": "https://github.com/dotCMS/core/pull/19545#pullrequestreview-548268284", "createdAt": "2020-12-09T14:57:26Z", "commit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1NzoyNlrOICY5Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1NzoyNlrOICY5Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM3NTk2Nw==", "bodyText": "\"does not exist\". This typo is repeated all over the file", "url": "https://github.com/dotCMS/core/pull/19545#discussion_r539375967", "createdAt": "2020-12-09T14:57:26Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/template/TemplateResource.java", "diffHunk": "@@ -239,16 +201,21 @@ public final Response getLiveById(@Context final HttpServletRequest  httpRequest\n \n         if (null == template || UtilMethods.isNotSet(template.getIdentifier())) {\n \n-            throw new DoesNotExistException(\"The live template id: \" + templateId + \" does not exists\");\n+            throw new DoesNotExistException(\"Live Version of the Template with Id: \" + templateId + \" does not exists\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "originalPosition": 230}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MjY4NTA0", "url": "https://github.com/dotCMS/core/pull/19545#pullrequestreview-548268504", "createdAt": "2020-12-09T14:57:37Z", "commit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1NzozOFrOICY6QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1NzozOFrOICY6QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM3NjE5Mw==", "bodyText": "same here", "url": "https://github.com/dotCMS/core/pull/19545#discussion_r539376193", "createdAt": "2020-12-09T14:57:38Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/template/TemplateResource.java", "diffHunk": "@@ -270,12 +237,22 @@ public final Response getWorkingById(@Context final HttpServletRequest  httpRequ\n \n         if (null == template || UtilMethods.isNotSet(template.getIdentifier())) {\n \n-            throw new DoesNotExistException(\"The working template id: \" + templateId + \" does not exists\");\n+            throw new DoesNotExistException(\"Working Version of the Template with Id: \" + templateId + \" does not exists\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "originalPosition": 255}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MjY4ODU5", "url": "https://github.com/dotCMS/core/pull/19545#pullrequestreview-548268859", "createdAt": "2020-12-09T14:57:57Z", "commit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1Nzo1N1rOICY7SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1Nzo1N1rOICY7SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM3NjQ1Nw==", "bodyText": "and here", "url": "https://github.com/dotCMS/core/pull/19545#discussion_r539376457", "createdAt": "2020-12-09T14:57:57Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/template/TemplateResource.java", "diffHunk": "@@ -322,26 +294,77 @@ public final Response save(@Context final HttpServletRequest  request,\n         final User user         = initData.getUser();\n         final Host host         = this.hostWebAPI.getCurrentHostNoThrow(request);\n         final PageMode pageMode = PageMode.get(request);\n-        final Template currentTemplate = this.templateAPI.find(templateForm.getInode(), user, pageMode.respectAnonPerms);\n+        final Template currentTemplate = this.templateAPI.findWorkingTemplate(templateForm.getIdentifier(),user,pageMode.respectAnonPerms);\n \n-        if (null == currentTemplate || UtilMethods.isNotSet(currentTemplate.getIdentifier())\n-                || !InodeUtils.isSet(currentTemplate.getInode())) {\n-\n-            throw new DoesNotExistException(\"The working template inode: \" + templateForm.getInode() + \" does not exists\");\n+        if (null == currentTemplate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "originalPosition": 306}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MjcwOTY5", "url": "https://github.com/dotCMS/core/pull/19545#pullrequestreview-548270969", "createdAt": "2020-12-09T14:59:52Z", "commit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1OTo1MlrOICZBvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo1OTo1MlrOICZBvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM3ODExMQ==", "bodyText": "and here", "url": "https://github.com/dotCMS/core/pull/19545#discussion_r539378111", "createdAt": "2020-12-09T14:59:52Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/template/TemplateResource.java", "diffHunk": "@@ -421,337 +435,324 @@ public final Response PUBLISH(@Context final HttpServletRequest  request,\n     @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n     public final Response unpublish(@Context final HttpServletRequest  request,\n                                   @Context final HttpServletResponse response,\n-                                  final List<String> templatesToUnpublish) throws DotDataException, DotSecurityException {\n+                                  final List<String> templatesToUnpublish) {\n \n         final InitDataObject initData = new WebResource.InitBuilder(webResource)\n                 .requestAndResponse(request, response).rejectWhenNoUser(true).init();\n         final User user         = initData.getUser();\n-        final Host host         = this.hostWebAPI.getCurrentHostNoThrow(request);\n         final PageMode pageMode = PageMode.get(request);\n-        final List<String> publishedInodes = new ArrayList<>();\n-        final List<String> failedInodes    = new ArrayList<>();\n+        Long unpublishedTemplatesCount = 0L;\n+        final List<FailedResultView> failedToUnpublish    = new ArrayList<>();\n \n         if (!UtilMethods.isSet(templatesToUnpublish)) {\n \n-            throw new IllegalArgumentException(\"The body must send a collection of template inodes such as: \" +\n+            throw new IllegalArgumentException(\"The body must send a collection of template identifiers such as: \" +\n                     \"[\\\"dd60695c-9e0f-4a2e-9fd8-ce2a4ac5c27d\\\",\\\"cc59390c-9a0f-4e7a-9fd8-ca7e4ec0c77d\\\"]\");\n         }\n \n-        for (final String templateInode : templatesToUnpublish) {\n-\n-            final Template template = this.templateAPI.find(templateInode, user, pageMode.respectAnonPerms);\n-\n-            if (null != template && InodeUtils.isSet(template.getInode())) {\n-\n-                try {\n-\n-                    if (this.templateAPI.unpublishTemplate(template, user, pageMode.respectAnonPerms)) {\n-\n-                        ActivityLogger.logInfo(this.getClass(), \"UnPublish Template action\", \"User \" +\n-                                user.getPrimaryKey() + \" unpublishing template\" + template.getTitle(), host.getTitle() != null ? host.getTitle() : \"default\");\n-                        publishedInodes.add(templateInode);\n-                    } else {\n-                        failedInodes.add(templateInode);\n-                    }\n-                } catch(Exception wax) {\n-\n-                    Logger.error(this, wax.getMessage(), wax);\n-                    failedInodes.add(templateInode);\n+        for (final String templateId : templatesToUnpublish) {\n+            try{\n+                final Template template = this.templateAPI.findWorkingTemplate(templateId,user,pageMode.respectAnonPerms);\n+                if (null != template && InodeUtils.isSet(template.getInode())){\n+                    this.templateAPI.unpublishTemplate(template, user, pageMode.respectAnonPerms);\n+                    ActivityLogger.logInfo(this.getClass(), \"Unpublish Template Action\", \"User \" +\n+                            user.getPrimaryKey() + \" unpublished template: \" + template.getIdentifier());\n+                    unpublishedTemplatesCount++;\n+                } else {\n+                    Logger.error(this, \"Template with Id: \" + templateId + \" does not exists\");\n+                    failedToUnpublish.add(new FailedResultView(templateId,\"Template Does Not Exists\"));\n                 }\n-            } else {\n-\n-                failedInodes.add(templateInode);\n+            } catch(Exception e) {\n+                Logger.debug(this, e.getMessage(), e);\n+                failedToUnpublish.add(new FailedResultView(templateId,e.getMessage()));\n             }\n         }\n \n         return Response.ok(new ResponseEntityView(\n-                CollectionsUtils.map(\n-                        \"unpublishedInodes\", publishedInodes,\n-                        \"failedInodes\",   failedInodes\n-                ))).build();\n+                new BulkResultView(unpublishedTemplatesCount,0L,failedToUnpublish)))\n+                .build();\n     }\n \n     /**\n      * Copy a template\n      * @param request            {@link HttpServletRequest}\n      * @param response           {@link HttpServletResponse}\n-     * @param templateInode      {@link String} template inode to copy\n+     * @param templateId      {@link String} template identifier to copy\n      * @return Response\n      * @throws DotDataException\n      * @throws DotSecurityException\n      */\n     @PUT\n-    @Path(\"/{templateInode}/_copy\")\n+    @Path(\"/{templateId}/_copy\")\n     @JSONP\n     @NoCache\n     @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n     public final Response copy(@Context final HttpServletRequest  request,\n                                @Context final HttpServletResponse response,\n-                               @PathParam(\"templateInode\") final String templateInode) throws DotDataException, DotSecurityException {\n+                               @PathParam(\"templateId\") final String templateId) throws DotDataException, DotSecurityException {\n \n         final InitDataObject initData = new WebResource.InitBuilder(webResource)\n                 .requestAndResponse(request, response).rejectWhenNoUser(true).init();\n         final User user         = initData.getUser();\n-        final Host host         = this.hostWebAPI.getCurrentHostNoThrow(request);\n         final PageMode pageMode = PageMode.get(request);\n \n-        Logger.debug(this, ()->\"Copying the Template: \" + templateInode);\n+        Logger.debug(this, ()->\"Copying the Template: \" + templateId);\n \n-        final Template template = this.templateAPI.find(templateInode, user, pageMode.respectAnonPerms);\n+        final Template template = this.templateAPI.findWorkingTemplate(templateId,user,pageMode.respectAnonPerms);\n \n         if (null == template || !InodeUtils.isSet(template.getInode())) {\n \n-            throw new DoesNotExistException(\"The  template inode: \" + templateInode + \" does not exists\");\n+            throw new DoesNotExistException(\"Template with Id: \" + templateId + \" does not exists\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "originalPosition": 587}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MjgwMjIz", "url": "https://github.com/dotCMS/core/pull/19545#pullrequestreview-548280223", "createdAt": "2020-12-09T15:08:34Z", "commit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNTowODozNFrOICZeYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNTowODozNFrOICZeYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM4NTQ0Mg==", "bodyText": "There are common validation used in several method that can be extracted to a method, like: check if the template is locked, does the user have permissions", "url": "https://github.com/dotCMS/core/pull/19545#discussion_r539385442", "createdAt": "2020-12-09T15:08:34Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/templates/business/TemplateAPIImpl.java", "diffHunk": "@@ -164,167 +180,377 @@ private void save(final Template template) throws DotDataException {\n \t\ttemplateFactory.save(template);\n \t}\n \n-\tprivate void save(final Template template, final String existingId) throws DotDataException {\n-        templateFactory.save(template,existingId);\n-    }\n-\n \tprotected void save(final WebAsset webAsset) throws DotDataException {\n \t\tsave((Template) webAsset);\n \t}\n \n \t@WrapInTransaction\n-\tpublic boolean publishTemplate(final Template template, final User user, final boolean respectFrontendRoles) {\n+\tpublic void publishTemplate(final Template template, final User user, final boolean respectFrontendRoles)\n+\t\t\tthrows DotDataException, DotSecurityException, WebAssetException {\n \n \t\tLogger.debug(this, ()-> \"Publishing the template: \" + template.getIdentifier());\n-\t\treturn Try.of(()->PublishFactory.publishAsset(template, user, respectFrontendRoles)).getOrElseThrow(e -> new RuntimeException(e));\n+\n+\t\t//Check if the Template is locked, and if is locked by a diff user that is executing the action\n+\t\tif(template.isLocked() && !this.versionableAPI.get().getLockedBy(template).get().equals(user.getUserId())){\n+\t\t\tLogger.error(this, \"The Template: \" + template.getName() + \" can not be published. \"\n+\t\t\t\t\t+ \"Because it is locked\");\n+\t\t\tthrow new DotStateException(\"Template can not be published because is locked\");\n+\t\t}\n+\n+\t\t//Check Publish Permissions over Template\n+\t\tif(!this.permissionAPI.doesUserHavePermission(template, PERMISSION_PUBLISH, user)){\n+\t\t\tLogger.error(this,\"The user: \" + user.getUserId() + \" does not have Permissions to Publish the Template\");\n+\t\t\tthrow new DotSecurityException(\"User does not have Permissions to Publish the Template\");\n+\t\t}\n+\n+\t\t// Check that the template is archived\n+\t\tif(isArchived(template)){\n+\t\t\tLogger.error(this, \"The Template: \" + template.getName() + \" can not be publish. \"\n+\t\t\t\t\t+ \"Because it is archived\");\n+\t\t\tthrow new DotStateException(\"Template can not be published because is archived\");\n+\t\t}\n+\n+\t\tpublishTemplate(template,user);\n+\t}\n+\n+\t/**\n+\t * This method was extracted from {@link PublishFactory#publishAsset(Inode, User, boolean)},\n+\t * since in the future template wont inherit from WebAsset\n+\t * @param template\n+\t * @throws DotDataException\n+\t * @throws DotSecurityException\n+\t */\n+\tprivate void publishTemplate(final Template template,final User user)\n+\t\t\tthrows DotSecurityException, DotDataException, WebAssetException {\n+\t\tfinal Template templateWorkingVersion = findWorkingTemplate(template.getIdentifier(),APILocator.systemUser(),false);\n+\t\t//Sets Working as Live\n+\t\tAPILocator.getVersionableAPI().setLive(templateWorkingVersion);\n+\t\t//Gets all Containers In the Template\n+\t\tfinal List<Container> containersInTemplate = APILocator.getTemplateAPI().getContainersInTemplate(template, APILocator.getUserAPI().getSystemUser(), false);\n+\t\tfor(final Container container : containersInTemplate){\n+\t\t\tLogger.debug(PublishFactory.class, \"*****I'm a Template -- Publishing my Container Child= \" + container.getInode());\n+\t\t\tif(!container.isLive()){\n+\t\t\t\tPublishFactory.publishAsset(container,user, false);\n+\t\t\t}\n+\t\t}\n+\t\ttemplateWorkingVersion.setModDate(new java.util.Date());\n+\t\ttemplateWorkingVersion.setModUser(user.getUserId());\n+\t\ttemplateFactory.save(template);\n+\t\t//Clean-up the cache for this template\n+\t\tCacheLocator.getTemplateCache().remove(template.getInode());\n+\t\t//writes the template to a live directory under velocity folder\n+\t\tnew TemplateLoader().invalidate(template);\n \t}\n \n \t@WrapInTransaction\n-\tpublic boolean unpublishTemplate(final Template template, final User user, final boolean respectFrontendRoles) {\n+\tpublic void unpublishTemplate(final Template template, final User user, final boolean respectFrontendRoles)\n+\t\t\tthrows DotSecurityException, DotDataException {\n \n \t\tLogger.debug(this, ()-> \"Unpublishing the template: \" + template.getIdentifier());\n-\t\tfinal Folder parent = Try.of(()->APILocator.getFolderAPI()\n-\t\t\t\t.findParentFolder(template, user, respectFrontendRoles)).getOrElseThrow(e -> new RuntimeException(e));\n-\t\treturn Try.of(()->WebAssetFactory.unPublishAsset(template, user.getUserId(), parent))\n-\t\t\t\t.getOrElseThrow(e -> new RuntimeException(e));\n+\n+\t\t//Check if the Template is locked, and if is locked by a diff user that is executing the action\n+\t\tif(template.isLocked() && !this.versionableAPI.get().getLockedBy(template).get().equals(user.getUserId())){\n+\t\t\tLogger.error(this, \"The Template: \" + template.getName() + \" can not be unpublished. \"\n+\t\t\t\t\t+ \"Because it is locked\");\n+\t\t\tthrow new DotStateException(\"Template can not be unpublished because is locked\");\n+\t\t}\n+\n+\t\t//Check Edit Permissions over Template\n+\t\tif(!this.permissionAPI.doesUserHavePermission(template, PERMISSION_EDIT, user)){\n+\t\t\tLogger.error(this,\"The user: \" + user.getUserId() + \" does not have Permissions to Edit the Template\");\n+\t\t\tthrow new DotSecurityException(\"User does not have Permissions to Edit the Template\");\n+\t\t}\n+\n+\t\t// Check that the template is archived\n+\t\tif(isArchived(template)){\n+\t\t\tLogger.error(this, \"The Template: \" + template.getName() + \" can not be unpublish. \"\n+\t\t\t\t\t+ \"Because it is archived\");\n+\t\t\tthrow new DotStateException(\"Template can not be unpublished because is archived\");\n+\t\t}\n+\n+\t\tunpublishTemplate(template,user);\n+\t}\n+\n+\t/**\n+\t * This method was extracted from {@link WebAssetFactory#unPublishAsset(WebAsset, String, Inode)},\n+\t * since in the future template wont inherit from WebAsset\n+\t * @param template\n+\t * @throws DotDataException\n+\t * @throws DotSecurityException\n+\t */\n+\tprivate void unpublishTemplate(final Template template,final User user)\n+\t\t\tthrows DotSecurityException, DotDataException {\n+\t\tfinal Template templateWorkingVersion = findWorkingTemplate(template.getIdentifier(),APILocator.systemUser(),false);\n+\t\t//Remove live version from version_info\n+\t\tAPILocator.getVersionableAPI().removeLive(template.getIdentifier());\n+\t\ttemplateWorkingVersion.setModDate(new java.util.Date());\n+\t\ttemplateWorkingVersion.setModUser(user.getUserId());\n+\t\ttemplateFactory.save(template);\n+\t\t//remove template from the live directory\n+\t\tnew TemplateLoader().invalidate(template);\n \t}\n \n \t@WrapInTransaction\n-\tpublic void unlock (final Template template, final User user) {\n+\tpublic void unlock (final Template template, final User user)\n+\t\t\tthrows DotSecurityException, DotDataException {\n+\n+\t\tLogger.debug(this, ()->\"Unlocking the Template: \" + template.getIdentifier());\n+\n+\t\t//Check Edit Permissions over Template\n+\t\tif(!this.permissionAPI.doesUserHavePermission(template, PERMISSION_EDIT, user)){\n+\t\t\tLogger.error(this,\"The user: \" + user.getUserId() + \" does not have Permissions to Edit the Template\");\n+\t\t\tthrow new DotSecurityException(\"User does not have Permissions to Edit the Template\");\n+\t\t}\n+\n+\t\tthis.versionableAPI.get().setLocked(template, false, user);\n+\t}\n+\n+\t@WrapInTransaction\n+\tpublic void lock (final Template template, final User user)\n+\t\t\tthrows DotSecurityException, DotDataException {\n+\n+\t\tLogger.debug(this, ()->\"Locking the Template: \" + template.getIdentifier());\n+\n+\t\t//Check Edit Permissions over Template\n+\t\tif(!this.permissionAPI.doesUserHavePermission(template, PERMISSION_EDIT, user)){\n+\t\t\tLogger.error(this,\"The user: \" + user.getUserId() + \" does not have Permissions to Edit the Template\");\n+\t\t\tthrow new DotSecurityException(\"User does not have Permissions to Edit the Template\");\n+\t\t}\n \n-\t\tTry.run(()->this.versionableAPI.get().setLocked(template, false, user))\n-\t\t\t\t.getOrElseThrow(e -> new RuntimeException(e));\n+\t\tthis.versionableAPI.get().setLocked(template, true, user);\n \t}\n \n \t@WrapInTransaction\n-\tpublic boolean archive (final Template template, final User user, final boolean respectFrontendRoles) {\n+\tpublic void archive (final Template template, final User user, final boolean respectFrontendRoles)\n+\t\t\tthrows DotDataException, DotSecurityException {\n \n \t\tLogger.debug(this, ()-> \"Doing archive of the template: \" + template.getIdentifier());\n-\t\tif (Try.of(()->template.isLive()).getOrElseThrow(e -> new RuntimeException(e))) {\n \n-\t\t\tif (!this.unpublishTemplate(template, user, respectFrontendRoles)) {\n+\t\t//Check if the Template is locked, and if is locked by a diff user that is executing the action\n+\t\tif(template.isLocked() && !this.versionableAPI.get().getLockedBy(template).get().equals(user.getUserId())){\n+\t\t\tLogger.error(this, \"The Template: \" + template.getName() + \" can not be archived. \"\n+\t\t\t\t\t+ \"Because it is locked\");\n+\t\t\tthrow new DotStateException(\"Template can not be archive because is locked\");\n+\t\t}\n \n-\t\t\t\tLogger.debug(this, \"the template: \" + template.getIdentifier() +\n-\t\t\t\t\t\t\" could not be archived, b/c it was live and couldn't unpublish\");\n-\t\t\t\treturn false;\n-\t\t\t}\n+\t\t//Check Edit Permissions over Template\n+\t\tif(!this.permissionAPI.doesUserHavePermission(template, PERMISSION_EDIT, user)){\n+\t\t\tLogger.error(this,\"The user: \" + user.getUserId() + \" does not have Permissions to Edit the Template\");\n+\t\t\tthrow new DotSecurityException(\"User does not have Permissions to Edit the Template\");\n \t\t}\n \n-\t\treturn Try.of(()-> WebAssetFactory.archiveAsset(template, user.getUserId())).getOrElseThrow(e -> new RuntimeException(e));\n+\t\t//Check that the template is Unpublished\n+\t\tif (template.isLive()) {\n+\t\t\tLogger.error(this, \"The Template: \" + template.getName() + \" can not be archive. \"\n+\t\t\t\t\t+ \"Because it is live.\");\n+\t\t\tthrow new DotStateException(\"Template must be unpublished before it can be archived\");\n+\t\t}\n+\n+\t\tarchive(template,user);\n+\t}\n+\n+\t/**\n+\t * This method was extracted from {@link WebAssetFactory#archiveAsset(WebAsset, String)} }, since in the future\n+\t * template wont inherit from WebAsset\n+\t * @param template\n+\t * @throws DotDataException\n+\t * @throws DotSecurityException\n+\t */\n+\tprivate void archive(final Template template, final User user) throws DotSecurityException, DotDataException {\n+\t\tfinal Template templateLiveVersion = findLiveTemplate(template.getIdentifier(),APILocator.systemUser(),false);\n+\t\tfinal Template templateWorkingVersion = findWorkingTemplate(template.getIdentifier(),APILocator.systemUser(),false);\n+\t\tif(templateLiveVersion!=null){\n+\t\t\tAPILocator.getVersionableAPI().removeLive(template.getIdentifier());\n+\t\t}\n+\t\ttemplateWorkingVersion.setModDate(new java.util.Date());\n+\t\ttemplateWorkingVersion.setModUser(user.getUserId());\n+\t\t// sets deleted to true\n+\t\tAPILocator.getVersionableAPI().setDeleted(templateWorkingVersion, true);\n+\t\ttemplateFactory.save(templateWorkingVersion);\n \t}\n \n-\t@WrapInTransaction\n-\tpublic void unarchive (final Template template) {\n \n+\t@WrapInTransaction\n+\tpublic void unarchive (final Template template, final User user)\n+\t\t\tthrows DotDataException, DotSecurityException {\n \t\tLogger.debug(this, ()-> \"Doing unarchive of the template: \" + template.getIdentifier());\n-\t\tif (Try.of(()->template.isArchived()).getOrElseThrow(e -> new RuntimeException(e))) {\n \n-\t\t\tTry.run(()->WebAssetFactory.unArchiveAsset(template))\n-\t\t\t\t\t.getOrElseThrow(e -> new RuntimeException(e));\n+\t\t//Check if the Template is locked, and if is locked by a diff user that is executing the action\n+\t\tif(template.isLocked() && !this.versionableAPI.get().getLockedBy(template).get().equals(user.getUserId())){\n+\t\t\tLogger.error(this, \"The Template: \" + template.getName() + \" can not be unarchived. \"\n+\t\t\t\t\t+ \"Because it is locked\");\n+\t\t\tthrow new DotStateException(\"Template can not be unarchive because is locked\");\n+\t\t}\n+\n+\t\t//Check Edit Permissions over Template\n+\t\tif(!this.permissionAPI.doesUserHavePermission(template, PERMISSION_EDIT, user)){\n+\t\t\tLogger.error(this,\"The user: \" + user.getUserId() + \" does not have Permissions to Edit the Template\");\n+\t\t\tthrow new DotSecurityException(\"User does not have Permissions to Edit the Template\");\n+\t\t}\n+\t\t// Check that the template is archived\n+\t\tif(!isArchived(template)){\n+\t\t\tLogger.error(this, \"The Template: \" + template.getName() + \" can not be unarchive. \"\n+\t\t\t\t\t+ \"Because it is not archived\");\n+\t\t\tthrow new DotStateException(\"Template must be archived before it can be unarchived\");\n \t\t}\n+\t\ttemplate.setModDate(new java.util.Date());\n+\t\ttemplate.setModUser(user.getUserId());\n+\t\tAPILocator.getVersionableAPI().setDeleted(template, false);\n+\t\ttemplateFactory.save(template);\n+\t}\n+\n+\tpublic boolean isArchived(final Template template) throws DotDataException {\n+\t\treturn APILocator.getVersionableAPI().isDeleted(template);\n \t}\n \n \t@WrapInTransaction\n-\tpublic boolean deleteTemplate(final Template template, final User user, final boolean respectFrontendRoles) {\n+\tpublic void deleteTemplate(final Template template, final User user, final boolean respectFrontendRoles)\n+\t\t\tthrows DotDataException, DotSecurityException {\n \n \t\tLogger.debug(this, ()-> \"Doing delete of the template: \" + template.getIdentifier());\n \n-\t\tif (Try.of(()->template.isArchived()).getOrElseThrow(e -> new RuntimeException(e))) {\n+\t\t//Check if the Template is locked, and if is locked by a diff user that is executing the action\n+\t\tif(template.isLocked() && !this.versionableAPI.get().getLockedBy(template).get().equals(user.getUserId())){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fceb33472c956148656e1f6420c03b5554a42bc"}, "originalPosition": 340}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4391b161f9591c6a10e20c48437fe873bf892df3", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/4391b161f9591c6a10e20c48437fe873bf892df3", "committedDate": "2020-12-09T15:43:17Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-19089-templates-rest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7027d818755652fbd24ea648442fd4f8728f7385", "author": {"user": {"login": "fmontes", "name": "Freddy Montes"}}, "url": "https://github.com/dotCMS/core/commit/7027d818755652fbd24ea648442fd4f8728f7385", "committedDate": "2020-12-09T16:45:55Z", "message": "Make portlet angular"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00c79410b85f54222ac0b3acfe7b70836b44f112", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/00c79410b85f54222ac0b3acfe7b70836b44f112", "committedDate": "2020-12-09T17:51:11Z", "message": "#19089 feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NDQ5Njg4", "url": "https://github.com/dotCMS/core/pull/19545#pullrequestreview-548449688", "createdAt": "2020-12-09T17:56:35Z", "commit": {"oid": "00c79410b85f54222ac0b3acfe7b70836b44f112"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1794, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}