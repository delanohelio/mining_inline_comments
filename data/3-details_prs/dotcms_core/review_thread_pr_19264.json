{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2OTI1MTkw", "number": 19264, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo0Mjo1NlrOEkkqNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNzozNFrOElFzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Nzg0ODIwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/categories/business/CategoryAPIImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo0Mjo1NlrOHTl2sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo0Mjo1NlrOHTl2sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMwNTIwMA==", "bodyText": "maybe it should go to a local method, something like:\nprivate boolean isTopLevelCategory(parent){\n    return !UtilMethods.isSet(parent);\n}", "url": "https://github.com/dotCMS/core/pull/19264#discussion_r490305200", "createdAt": "2020-09-17T14:42:56Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/categories/business/CategoryAPIImpl.java", "diffHunk": "@@ -142,41 +102,55 @@ public Category find(final String id, final User user,\n \t\treturn permissionAPI.filterCollection(categories, PermissionAPI.PERMISSION_READ, respectFrontendRoles, user);\r\n \t}\r\n \r\n+\t/**\r\n+\t * Saves a category\r\n+\t *\r\n+\t * When saving a new category the parent should be passed to the API\r\n+\t * to check if the user has permissions to add children to the parent\r\n+\t * and the parent will be associated to the passed category\r\n+\t *\r\n+\t * @param parent Parent can be null if saving an top level category\r\n+\t * @param category Category to be saved\r\n+\t * @param user user that is performing the save\r\n+\t * @throws DotDataException\r\n+\t * @throws DotSecurityException\r\n+\t */\r\n \t@WrapInTransaction\r\n \tpublic void save(final Category parent,\r\n-\t\t\t\t\t Category object,\r\n+\t\t\t\t\t Category category,\r\n \t\t\t\t\t final User user,\r\n \t\t\t\t\t final boolean respectFrontendRoles) throws DotDataException, DotSecurityException {\r\n \r\n         // Checking that we have a unique key.\r\n-\t    object = checkUniqueKey(object, user);\r\n-\r\n-\t    boolean isANewCategory = false;\r\n-\r\n-\t\t//Checking permissions\r\n-\t\tif(InodeUtils.isSet(object.getInode()) || parent == null) {\r\n-\t\t\t//Object is not new or is a top level category\r\n-\t\t\t//if it is a new top level category the user should be a cms administrator\r\n-\t\t\t// and that's checked in the permissions api\r\n-\t\t\t if(!com.dotmarketing.business.APILocator.getRoleAPI().doesUserHaveRole(user, com.dotmarketing.business.APILocator.getRoleAPI().loadCMSAdminRole().getId())){\r\n-              if(!permissionAPI.doesUserHavePermission(object, PermissionAPI.PERMISSION_EDIT, user, respectFrontendRoles))\r\n-\t\t\t\tthrow new DotSecurityException(\"User doesn't have permission to edit the category = \" + object.getInode());\r\n-\t\t\t }\r\n-\t\t} else {\r\n-\t\t\t//Object is new and a parent was provided so we check in the parent permissions\r\n-\t\t\tif(!permissionAPI.doesUserHavePermission(parent, PermissionAPI.PERMISSION_EDIT_PERMISSIONS, user, respectFrontendRoles))\r\n-\t\t\t\tthrow new DotSecurityException(\"User doesn't have permission to save this category = \" +\r\n-\t\t\t\t\t\tobject.getInode() + \" having as parent the category = \" + parent.getInode());\r\n+\t    category = checkUniqueKey(category, user);\r\n \r\n-\t\t\tisANewCategory = true;\r\n+\t    boolean isANewCategory = UtilMethods.isNotSet(category.getInode());\r\n+\r\n+\t    //If parent is null is a top level category, we need to check permissions over the SYSTEM_HOST\r\n+\t\tif(!UtilMethods.isSet(parent)){\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94a0affac311e6cdb9d66dc121addf084aeb2cab"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Nzg1ODUxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/categories/business/CategoryAPIImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo0NDozOFrOHTl9ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo0NDozOFrOHTl9ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMwNjkyMg==", "bodyText": "maybe it should go to a local method too, something like:\nprivate boolean checkTopLevelCategoryPermission(parent, user, respectFrontendRoles ){\n    return !UtilMethods.isSet(parent);\n}", "url": "https://github.com/dotCMS/core/pull/19264#discussion_r490306922", "createdAt": "2020-09-17T14:44:38Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/categories/business/CategoryAPIImpl.java", "diffHunk": "@@ -142,41 +102,55 @@ public Category find(final String id, final User user,\n \t\treturn permissionAPI.filterCollection(categories, PermissionAPI.PERMISSION_READ, respectFrontendRoles, user);\r\n \t}\r\n \r\n+\t/**\r\n+\t * Saves a category\r\n+\t *\r\n+\t * When saving a new category the parent should be passed to the API\r\n+\t * to check if the user has permissions to add children to the parent\r\n+\t * and the parent will be associated to the passed category\r\n+\t *\r\n+\t * @param parent Parent can be null if saving an top level category\r\n+\t * @param category Category to be saved\r\n+\t * @param user user that is performing the save\r\n+\t * @throws DotDataException\r\n+\t * @throws DotSecurityException\r\n+\t */\r\n \t@WrapInTransaction\r\n \tpublic void save(final Category parent,\r\n-\t\t\t\t\t Category object,\r\n+\t\t\t\t\t Category category,\r\n \t\t\t\t\t final User user,\r\n \t\t\t\t\t final boolean respectFrontendRoles) throws DotDataException, DotSecurityException {\r\n \r\n         // Checking that we have a unique key.\r\n-\t    object = checkUniqueKey(object, user);\r\n-\r\n-\t    boolean isANewCategory = false;\r\n-\r\n-\t\t//Checking permissions\r\n-\t\tif(InodeUtils.isSet(object.getInode()) || parent == null) {\r\n-\t\t\t//Object is not new or is a top level category\r\n-\t\t\t//if it is a new top level category the user should be a cms administrator\r\n-\t\t\t// and that's checked in the permissions api\r\n-\t\t\t if(!com.dotmarketing.business.APILocator.getRoleAPI().doesUserHaveRole(user, com.dotmarketing.business.APILocator.getRoleAPI().loadCMSAdminRole().getId())){\r\n-              if(!permissionAPI.doesUserHavePermission(object, PermissionAPI.PERMISSION_EDIT, user, respectFrontendRoles))\r\n-\t\t\t\tthrow new DotSecurityException(\"User doesn't have permission to edit the category = \" + object.getInode());\r\n-\t\t\t }\r\n-\t\t} else {\r\n-\t\t\t//Object is new and a parent was provided so we check in the parent permissions\r\n-\t\t\tif(!permissionAPI.doesUserHavePermission(parent, PermissionAPI.PERMISSION_EDIT_PERMISSIONS, user, respectFrontendRoles))\r\n-\t\t\t\tthrow new DotSecurityException(\"User doesn't have permission to save this category = \" +\r\n-\t\t\t\t\t\tobject.getInode() + \" having as parent the category = \" + parent.getInode());\r\n+\t    category = checkUniqueKey(category, user);\r\n \r\n-\t\t\tisANewCategory = true;\r\n+\t    boolean isANewCategory = UtilMethods.isNotSet(category.getInode());\r\n+\r\n+\t    //If parent is null is a top level category, we need to check permissions over the SYSTEM_HOST\r\n+\t\tif(!UtilMethods.isSet(parent)){\r\n+\t\t\t\tif(!permissionAPI.doesUserHavePermission(APILocator.systemHost(), PermissionAPI.PERMISSION_CAN_ADD_CHILDREN, user, respectFrontendRoles) ||\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94a0affac311e6cdb9d66dc121addf084aeb2cab"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Nzg2MDM2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/categories/business/CategoryAPIImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo0NDo1NVrOHTl-kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo0NDo1NVrOHTl-kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMwNzIxOQ==", "bodyText": "maybe it should go to a local method too, something like:\nprivate boolean checkCategoryPermission(parent, user, respectFrontendRoles ){\n    return !UtilMethods.isSet(parent);\n}", "url": "https://github.com/dotCMS/core/pull/19264#discussion_r490307219", "createdAt": "2020-09-17T14:44:55Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/categories/business/CategoryAPIImpl.java", "diffHunk": "@@ -142,41 +102,55 @@ public Category find(final String id, final User user,\n \t\treturn permissionAPI.filterCollection(categories, PermissionAPI.PERMISSION_READ, respectFrontendRoles, user);\r\n \t}\r\n \r\n+\t/**\r\n+\t * Saves a category\r\n+\t *\r\n+\t * When saving a new category the parent should be passed to the API\r\n+\t * to check if the user has permissions to add children to the parent\r\n+\t * and the parent will be associated to the passed category\r\n+\t *\r\n+\t * @param parent Parent can be null if saving an top level category\r\n+\t * @param category Category to be saved\r\n+\t * @param user user that is performing the save\r\n+\t * @throws DotDataException\r\n+\t * @throws DotSecurityException\r\n+\t */\r\n \t@WrapInTransaction\r\n \tpublic void save(final Category parent,\r\n-\t\t\t\t\t Category object,\r\n+\t\t\t\t\t Category category,\r\n \t\t\t\t\t final User user,\r\n \t\t\t\t\t final boolean respectFrontendRoles) throws DotDataException, DotSecurityException {\r\n \r\n         // Checking that we have a unique key.\r\n-\t    object = checkUniqueKey(object, user);\r\n-\r\n-\t    boolean isANewCategory = false;\r\n-\r\n-\t\t//Checking permissions\r\n-\t\tif(InodeUtils.isSet(object.getInode()) || parent == null) {\r\n-\t\t\t//Object is not new or is a top level category\r\n-\t\t\t//if it is a new top level category the user should be a cms administrator\r\n-\t\t\t// and that's checked in the permissions api\r\n-\t\t\t if(!com.dotmarketing.business.APILocator.getRoleAPI().doesUserHaveRole(user, com.dotmarketing.business.APILocator.getRoleAPI().loadCMSAdminRole().getId())){\r\n-              if(!permissionAPI.doesUserHavePermission(object, PermissionAPI.PERMISSION_EDIT, user, respectFrontendRoles))\r\n-\t\t\t\tthrow new DotSecurityException(\"User doesn't have permission to edit the category = \" + object.getInode());\r\n-\t\t\t }\r\n-\t\t} else {\r\n-\t\t\t//Object is new and a parent was provided so we check in the parent permissions\r\n-\t\t\tif(!permissionAPI.doesUserHavePermission(parent, PermissionAPI.PERMISSION_EDIT_PERMISSIONS, user, respectFrontendRoles))\r\n-\t\t\t\tthrow new DotSecurityException(\"User doesn't have permission to save this category = \" +\r\n-\t\t\t\t\t\tobject.getInode() + \" having as parent the category = \" + parent.getInode());\r\n+\t    category = checkUniqueKey(category, user);\r\n \r\n-\t\t\tisANewCategory = true;\r\n+\t    boolean isANewCategory = UtilMethods.isNotSet(category.getInode());\r\n+\r\n+\t    //If parent is null is a top level category, we need to check permissions over the SYSTEM_HOST\r\n+\t\tif(!UtilMethods.isSet(parent)){\r\n+\t\t\t\tif(!permissionAPI.doesUserHavePermission(APILocator.systemHost(), PermissionAPI.PERMISSION_CAN_ADD_CHILDREN, user, respectFrontendRoles) ||\r\n+\t\t\t\t\t\t!permissionAPI.doesUserHavePermissions(PermissionableType.CATEGORY, PermissionAPI.PERMISSION_EDIT, user)){\r\n+\t\t\t\t\tLogger.error(this,\"User doesn't have permission to save the category at top level\");\r\n+\t\t\t\tthrow new DotSecurityException(\r\n+\t\t\t\t\t\t\"User doesn't have permission to save the category at top level\");\r\n+\t\t\t}\r\n+\t\t} else {\r\n+\t\t\tif (!permissionAPI.doesUserHavePermission(parent, PermissionAPI.PERMISSION_EDIT, user, respectFrontendRoles)) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94a0affac311e6cdb9d66dc121addf084aeb2cab"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzI3Nzg1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/categories/business/CategoryAPIImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNzozMVrOHUZW5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNzozMVrOHUZW5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTAzMA==", "bodyText": "Codacy found an issue: Avoid reassigning parameters such as 'category'", "url": "https://github.com/dotCMS/core/pull/19264#discussion_r491149030", "createdAt": "2020-09-18T19:27:31Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/categories/business/CategoryAPIImpl.java", "diffHunk": "@@ -142,41 +102,55 @@ public Category find(final String id, final User user,\n \t\treturn permissionAPI.filterCollection(categories, PermissionAPI.PERMISSION_READ, respectFrontendRoles, user);\r\n \t}\r\n \r\n+\t/**\r\n+\t * Saves a category\r\n+\t *\r\n+\t * When saving a new category the parent should be passed to the API\r\n+\t * to check if the user has permissions to add children to the parent\r\n+\t * and the parent will be associated to the passed category\r\n+\t *\r\n+\t * @param parent Parent can be null if saving an top level category\r\n+\t * @param category Category to be saved\r\n+\t * @param user user that is performing the save\r\n+\t * @throws DotDataException\r\n+\t * @throws DotSecurityException\r\n+\t */\r\n \t@WrapInTransaction\r\n \tpublic void save(final Category parent,\r\n-\t\t\t\t\t Category object,\r\n+\t\t\t\t\t Category category,\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "075bd2bd913eb558211aedbd46da68b33ed2b795"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzI3NzkwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/categories/business/CategoryAPITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNzozMlrOHUZW8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNzozMlrOHUZW8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTA0MQ==", "bodyText": "Codacy found an issue: Avoid unused local variables such as 'newCategory'.", "url": "https://github.com/dotCMS/core/pull/19264#discussion_r491149041", "createdAt": "2020-09-18T19:27:32Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/categories/business/CategoryAPITest.java", "diffHunk": "@@ -1087,6 +1080,192 @@ private ContentType createContentTypeWithCatAndTextField(final Category parentCa\n     }\n \n     /**\n+     * Method to test: {@link CategoryAPI#save(Category, Category, User, boolean)}\n+     * Given Scenario: As a admin user create a top level category\n+     * ExpectedResult: Category created successfully\n+     */\n+    @Test\n+    public void test_save_createTopLevelCategory_asAdmin_success()\n+            throws DotSecurityException, DotDataException {\n+        //Create new Top Level Category\n+        final String categoryName = \"newCategory\" + System.currentTimeMillis();\n+        final Category newCategory = new CategoryDataGen().setCategoryName(categoryName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "075bd2bd913eb558211aedbd46da68b33ed2b795"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzI3NzkzOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/categories/business/CategoryAPITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNzozM1rOHUZW9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNzozM1rOHUZW9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTA0Nw==", "bodyText": "Codacy found an issue: Avoid unused local variables such as 'newParentCategory'.", "url": "https://github.com/dotCMS/core/pull/19264#discussion_r491149047", "createdAt": "2020-09-18T19:27:33Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/categories/business/CategoryAPITest.java", "diffHunk": "@@ -1087,6 +1080,192 @@ private ContentType createContentTypeWithCatAndTextField(final Category parentCa\n     }\n \n     /**\n+     * Method to test: {@link CategoryAPI#save(Category, Category, User, boolean)}\n+     * Given Scenario: As a admin user create a top level category\n+     * ExpectedResult: Category created successfully\n+     */\n+    @Test\n+    public void test_save_createTopLevelCategory_asAdmin_success()\n+            throws DotSecurityException, DotDataException {\n+        //Create new Top Level Category\n+        final String categoryName = \"newCategory\" + System.currentTimeMillis();\n+        final Category newCategory = new CategoryDataGen().setCategoryName(categoryName)\n+                .setCategoryVelocityVarName(categoryName).setKey(categoryName).nextPersisted();\n+        //Find created Category\n+        final Category getCategory = categoryAPI.findByKey(categoryName,user,false);\n+        //Check that the category obtained is the same as the created\n+        assertNotNull(getCategory);\n+        assertEquals(categoryName,getCategory.getCategoryName());\n+    }\n+\n+    /**\n+     * Method to test: {@link CategoryAPI#save(Category, Category, User, boolean)}\n+     * Given Scenario: As a admin user create a top level category and a subcategory of it\n+     * ExpectedResult: Categories created successfully\n+     */\n+    @Test\n+    public void test_save_createSubCategory_asAdmin_success()\n+            throws DotSecurityException, DotDataException {\n+        final String parentCategoryName = \"newParentCategory\" + System.currentTimeMillis();\n+        final String childCategoryName = \"newChildCategory\" + System.currentTimeMillis();\n+        //Create Child Category\n+        final Category newChildCategory = new CategoryDataGen().setCategoryName(childCategoryName)\n+                .setCategoryVelocityVarName(childCategoryName).setKey(childCategoryName).next();\n+        //Create Parent Category\n+        final Category newParentCategory = new CategoryDataGen().setCategoryName(parentCategoryName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "075bd2bd913eb558211aedbd46da68b33ed2b795"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzI3Nzk0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/categories/business/CategoryAPIImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNzozNFrOHUZW_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNzozNFrOHUZW_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTA1NA==", "bodyText": "Codacy found an issue: Avoid declaring a variable if it is unreferenced before a possible exit point.", "url": "https://github.com/dotCMS/core/pull/19264#discussion_r491149054", "createdAt": "2020-09-18T19:27:34Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/categories/business/CategoryAPIImpl.java", "diffHunk": "@@ -142,41 +102,55 @@ public Category find(final String id, final User user,\n \t\treturn permissionAPI.filterCollection(categories, PermissionAPI.PERMISSION_READ, respectFrontendRoles, user);\r\n \t}\r\n \r\n+\t/**\r\n+\t * Saves a category\r\n+\t *\r\n+\t * When saving a new category the parent should be passed to the API\r\n+\t * to check if the user has permissions to add children to the parent\r\n+\t * and the parent will be associated to the passed category\r\n+\t *\r\n+\t * @param parent Parent can be null if saving an top level category\r\n+\t * @param category Category to be saved\r\n+\t * @param user user that is performing the save\r\n+\t * @throws DotDataException\r\n+\t * @throws DotSecurityException\r\n+\t */\r\n \t@WrapInTransaction\r\n \tpublic void save(final Category parent,\r\n-\t\t\t\t\t Category object,\r\n+\t\t\t\t\t Category category,\r\n \t\t\t\t\t final User user,\r\n \t\t\t\t\t final boolean respectFrontendRoles) throws DotDataException, DotSecurityException {\r\n \r\n         // Checking that we have a unique key.\r\n-\t    object = checkUniqueKey(object, user);\r\n-\r\n-\t    boolean isANewCategory = false;\r\n-\r\n-\t\t//Checking permissions\r\n-\t\tif(InodeUtils.isSet(object.getInode()) || parent == null) {\r\n-\t\t\t//Object is not new or is a top level category\r\n-\t\t\t//if it is a new top level category the user should be a cms administrator\r\n-\t\t\t// and that's checked in the permissions api\r\n-\t\t\t if(!com.dotmarketing.business.APILocator.getRoleAPI().doesUserHaveRole(user, com.dotmarketing.business.APILocator.getRoleAPI().loadCMSAdminRole().getId())){\r\n-              if(!permissionAPI.doesUserHavePermission(object, PermissionAPI.PERMISSION_EDIT, user, respectFrontendRoles))\r\n-\t\t\t\tthrow new DotSecurityException(\"User doesn't have permission to edit the category = \" + object.getInode());\r\n-\t\t\t }\r\n-\t\t} else {\r\n-\t\t\t//Object is new and a parent was provided so we check in the parent permissions\r\n-\t\t\tif(!permissionAPI.doesUserHavePermission(parent, PermissionAPI.PERMISSION_EDIT_PERMISSIONS, user, respectFrontendRoles))\r\n-\t\t\t\tthrow new DotSecurityException(\"User doesn't have permission to save this category = \" +\r\n-\t\t\t\t\t\tobject.getInode() + \" having as parent the category = \" + parent.getInode());\r\n+\t    category = checkUniqueKey(category, user);\r\n \r\n-\t\t\tisANewCategory = true;\r\n+\t    boolean isANewCategory = UtilMethods.isNotSet(category.getInode());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "075bd2bd913eb558211aedbd46da68b33ed2b795"}, "originalPosition": 132}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1870, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}