{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTczODY1", "number": 17988, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozMTo1MlrODfuJtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozMTo1NFrODfuJvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg4NTk2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05210CreateDefaultDotAssetTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozMTo1MlrOFpl4zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozMTo1MlrOFpl4zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NjY4NA==", "bodyText": "Issue found: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/17988#discussion_r379156684", "createdAt": "2020-02-13T22:31:52Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05210CreateDefaultDotAssetTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.db.DbConnectionFactory;\n+import com.dotmarketing.exception.DotDataException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.sql.SQLException;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class Task05210CreateDefaultDotAssetTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3ae160091a2fc5780071d873f53f4ee760f6c20"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg4NjA1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05210CreateDefaultDotAssetTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozMTo1NFrOFpl42A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozMTo1NFrOFpl42A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NjY5Ng==", "bodyText": "Issue found: Avoid empty catch blocks", "url": "https://github.com/dotCMS/core/pull/17988#discussion_r379156696", "createdAt": "2020-02-13T22:31:54Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05210CreateDefaultDotAssetTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.db.DbConnectionFactory;\n+import com.dotmarketing.exception.DotDataException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.sql.SQLException;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class Task05210CreateDefaultDotAssetTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+    }\n+\n+    private void removeConstraintIfAny() throws DotDataException {\n+        try {\n+            DbConnectionFactory.getConnection().setAutoCommit(true);\n+        } catch (SQLException e) {\n+            throw new DotDataException(e.getMessage(), e);\n+        }\n+\n+        //Certain db engines store unique constraints as indices\n+        final String [] fieldInodes = Task05210CreateDefaultDotAsset.DOTASSET_VARIABLE_FIELD_INODES;\n+        for (final String fieldInode : fieldInodes) {\n+            try {\n+                new DotConnect().setSQL(\"delete from field where inode = ?\")\n+                        .addParam(fieldInode).loadResult();\n+            } catch (DotDataException e) {\n+                //Nah.\n+            }\n+        }\n+\n+        for (final String fieldInode : fieldInodes) {\n+            try {\n+                new DotConnect().setSQL(\"delete from inode where inode = ?\")\n+                        .addParam(fieldInode).loadResult();\n+            } catch (DotDataException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3ae160091a2fc5780071d873f53f4ee760f6c20"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2551, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}