{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2OTI5MTMx", "number": 18011, "title": "Issue 18010 redirect to login", "bodyText": "", "createdAt": "2020-02-19T02:19:52Z", "url": "https://github.com/dotCMS/core/pull/18011", "merged": true, "mergeCommit": {"oid": "4656ac17ec959654493b146ec4749089689162e2"}, "closed": true, "closedAt": "2020-02-19T16:11:47Z", "author": {"login": "wezell"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEC7G2gH2gAyMzc2OTI5MTMxOjljNDJjODQ4OTU1MDE0MDdjYzJjMWVmODA4NzE0MTFlN2Q2OWY2NGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcF3yJDgFqTM2MTE3OTYyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9c42c84895501407cc2c1ef80871411e7d69f64f", "author": {"user": {"login": "alfredo-dotcms", "name": null}}, "url": "https://github.com/dotCMS/core/commit/9c42c84895501407cc2c1ef80871411e7d69f64f", "committedDate": "2020-02-13T22:46:09Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bd14a20b61ef7f908cd2d05690df804bb43a93e", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/8bd14a20b61ef7f908cd2d05690df804bb43a93e", "committedDate": "2020-02-18T20:16:16Z", "message": "Merge remote-tracking branch 'origin/issue-17872-double-click-in-content-redirects-to-home'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb74e534d84fc5a3bc7c4a29c15842e1bdf1cff3", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/bb74e534d84fc5a3bc7c4a29c15842e1bdf1cff3", "committedDate": "2020-02-19T01:44:13Z", "message": "#18010 forces redirect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "962b4a154a797ee6a46031492f87a63aeb73a8f2", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/962b4a154a797ee6a46031492f87a63aeb73a8f2", "committedDate": "2020-02-19T01:50:45Z", "message": "#18010 checks user before redirecting to portal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bdb0a77314d58cfe85856ef2895e8b232471478", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/9bdb0a77314d58cfe85856ef2895e8b232471478", "committedDate": "2020-02-19T01:51:00Z", "message": "#18010 checks user before redirecting to portal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06e893467ac9d6ffbd6e8fb4f0861a99da280c65", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/06e893467ac9d6ffbd6e8fb4f0861a99da280c65", "committedDate": "2020-02-19T02:19:34Z", "message": "18010 removing outside commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b2de86779745d86fe67dca6767a7df8f0c7046d", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/3b2de86779745d86fe67dca6767a7df8f0c7046d", "committedDate": "2020-02-19T02:43:06Z", "message": "#18010 testing against front end user"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da7042733a60679842eef136d95056832898f6c2", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/da7042733a60679842eef136d95056832898f6c2", "committedDate": "2020-02-19T02:52:24Z", "message": "#18010 removing try"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODE0MjM3", "url": "https://github.com/dotCMS/core/pull/18011#pullrequestreview-360814237", "createdAt": "2020-02-19T02:59:14Z", "commit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToxNFrOFrZphw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToxNFrOFrZphw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1MzMxOQ==", "bodyText": "Issue found: Avoid declaring a variable if it is unreferenced before a possible exit point.", "url": "https://github.com/dotCMS/core/pull/18011#discussion_r381053319", "createdAt": "2020-02-19T02:59:14Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/servlet/VelocityServlet.java", "diffHunk": "@@ -35,58 +37,82 @@\n     @Override\n     @CloseDB\n     protected final void service(HttpServletRequest req, HttpServletResponse response) throws ServletException, IOException {\n-        VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n+        final VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n         final String uri = CMSUrlUtil.getCurrentURI(request);\n-\n+        final boolean comeFromSomeWhere = request.getHeader(\"referer\") != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODE0MjQz", "url": "https://github.com/dotCMS/core/pull/18011#pullrequestreview-360814243", "createdAt": "2020-02-19T02:59:16Z", "commit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToxNlrOFrZpiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToxNlrOFrZpiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1MzMyMw==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/18011#discussion_r381053323", "createdAt": "2020-02-19T02:59:16Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/servlet/VelocityServlet.java", "diffHunk": "@@ -35,58 +37,82 @@\n     @Override\n     @CloseDB\n     protected final void service(HttpServletRequest req, HttpServletResponse response) throws ServletException, IOException {\n-        VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n+        final VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n         final String uri = CMSUrlUtil.getCurrentURI(request);\n-\n+        final boolean comeFromSomeWhere = request.getHeader(\"referer\") != null;\n+        final User frontEndUser = ((UserWebAPIImpl) WebAPILocator.getUserWebAPI()).getLoggedInFrontendUser(request);\n+        request.setRequestUri(uri);\n+        final PageMode mode = PageMode.getWithNavigateMode(request);\n+        \n+        // if you are hitting the servlet without running through the other filters\n         if (uri == null) {\n             response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, \"VelocityServlet called without running through the CMS Filter\");\n             Logger.error(this.getClass(),\n                     \"You cannot call the VelocityServlet without passing the requested url via a  requestAttribute called  \"\n                             + Constants.CMS_FILTER_URI_OVERRIDE);\n             return;\n         }\n-\n-        final boolean comeFromSomeWhere = request.getHeader(\"referer\") != null;\n-\n-        if (APILocator.getLoginServiceAPI().isLoggedIn(request) && !comeFromSomeWhere){\n+        \n+        // if you are a backend user, redirect you to the page edit screen\n+        if (PortalUtil.getUser(request)!=null && PortalUtil.getUser(request).hasConsoleAccess() && !comeFromSomeWhere){\n             goToEditPage(uri,request, response);\n-        } else {\n-\n-            if ((DbConnectionFactory.isMsSql() && LicenseUtil.getLevel() < LicenseLevel.PROFESSIONAL.level) ||\n-                    (DbConnectionFactory.isOracle() && LicenseUtil.getLevel() < LicenseLevel.PRIME.level) ||\n-                    (!LicenseUtil.isASAllowed())) {\n-                Logger.error(this, \"Enterprise License is required\");\n+            return;\n+        } \n+        \n+        // if you are not running ee\n+        if ((DbConnectionFactory.isMsSql() && LicenseUtil.getLevel() < LicenseLevel.PROFESSIONAL.level)\n+                        || (DbConnectionFactory.isOracle() && LicenseUtil.getLevel() < LicenseLevel.PRIME.level)\n+                        || (!LicenseUtil.isASAllowed())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODE0MjQ2", "url": "https://github.com/dotCMS/core/pull/18011#pullrequestreview-360814246", "createdAt": "2020-02-19T02:59:17Z", "commit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToxN1rOFrZpkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToxN1rOFrZpkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1MzMyOQ==", "bodyText": "Issue found: Avoid declaring a variable if it is unreferenced before a possible exit point.", "url": "https://github.com/dotCMS/core/pull/18011#discussion_r381053329", "createdAt": "2020-02-19T02:59:17Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/servlet/VelocityServlet.java", "diffHunk": "@@ -35,58 +37,82 @@\n     @Override\n     @CloseDB\n     protected final void service(HttpServletRequest req, HttpServletResponse response) throws ServletException, IOException {\n-        VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n+        final VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n         final String uri = CMSUrlUtil.getCurrentURI(request);\n-\n+        final boolean comeFromSomeWhere = request.getHeader(\"referer\") != null;\n+        final User frontEndUser = ((UserWebAPIImpl) WebAPILocator.getUserWebAPI()).getLoggedInFrontendUser(request);\n+        request.setRequestUri(uri);\n+        final PageMode mode = PageMode.getWithNavigateMode(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODE0MjUw", "url": "https://github.com/dotCMS/core/pull/18011#pullrequestreview-360814250", "createdAt": "2020-02-19T02:59:18Z", "commit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToxOFrOFrZpkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToxOFrOFrZpkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1MzMzMQ==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/18011#discussion_r381053331", "createdAt": "2020-02-19T02:59:18Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/servlet/VelocityServlet.java", "diffHunk": "@@ -35,58 +37,82 @@\n     @Override\n     @CloseDB\n     protected final void service(HttpServletRequest req, HttpServletResponse response) throws ServletException, IOException {\n-        VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n+        final VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n         final String uri = CMSUrlUtil.getCurrentURI(request);\n-\n+        final boolean comeFromSomeWhere = request.getHeader(\"referer\") != null;\n+        final User frontEndUser = ((UserWebAPIImpl) WebAPILocator.getUserWebAPI()).getLoggedInFrontendUser(request);\n+        request.setRequestUri(uri);\n+        final PageMode mode = PageMode.getWithNavigateMode(request);\n+        \n+        // if you are hitting the servlet without running through the other filters\n         if (uri == null) {\n             response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, \"VelocityServlet called without running through the CMS Filter\");\n             Logger.error(this.getClass(),\n                     \"You cannot call the VelocityServlet without passing the requested url via a  requestAttribute called  \"\n                             + Constants.CMS_FILTER_URI_OVERRIDE);\n             return;\n         }\n-\n-        final boolean comeFromSomeWhere = request.getHeader(\"referer\") != null;\n-\n-        if (APILocator.getLoginServiceAPI().isLoggedIn(request) && !comeFromSomeWhere){\n+        \n+        // if you are a backend user, redirect you to the page edit screen\n+        if (PortalUtil.getUser(request)!=null && PortalUtil.getUser(request).hasConsoleAccess() && !comeFromSomeWhere){\n             goToEditPage(uri,request, response);\n-        } else {\n-\n-            if ((DbConnectionFactory.isMsSql() && LicenseUtil.getLevel() < LicenseLevel.PROFESSIONAL.level) ||\n-                    (DbConnectionFactory.isOracle() && LicenseUtil.getLevel() < LicenseLevel.PRIME.level) ||\n-                    (!LicenseUtil.isASAllowed())) {\n-                Logger.error(this, \"Enterprise License is required\");\n+            return;\n+        } \n+        \n+        // if you are not running ee\n+        if ((DbConnectionFactory.isMsSql() && LicenseUtil.getLevel() < LicenseLevel.PROFESSIONAL.level)\n+                        || (DbConnectionFactory.isOracle() && LicenseUtil.getLevel() < LicenseLevel.PRIME.level)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODE0MjU2", "url": "https://github.com/dotCMS/core/pull/18011#pullrequestreview-360814256", "createdAt": "2020-02-19T02:59:19Z", "commit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToxOVrOFrZplg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToxOVrOFrZplg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1MzMzNA==", "bodyText": "Issue found: Avoid declaring a variable if it is unreferenced before a possible exit point.", "url": "https://github.com/dotCMS/core/pull/18011#discussion_r381053334", "createdAt": "2020-02-19T02:59:19Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/servlet/VelocityServlet.java", "diffHunk": "@@ -35,58 +37,82 @@\n     @Override\n     @CloseDB\n     protected final void service(HttpServletRequest req, HttpServletResponse response) throws ServletException, IOException {\n-        VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n+        final VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n         final String uri = CMSUrlUtil.getCurrentURI(request);\n-\n+        final boolean comeFromSomeWhere = request.getHeader(\"referer\") != null;\n+        final User frontEndUser = ((UserWebAPIImpl) WebAPILocator.getUserWebAPI()).getLoggedInFrontendUser(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODE0MjU4", "url": "https://github.com/dotCMS/core/pull/18011#pullrequestreview-360814258", "createdAt": "2020-02-19T02:59:20Z", "commit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToyMFrOFrZpmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMjo1OToyMFrOFrZpmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1MzMzNg==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/18011#discussion_r381053336", "createdAt": "2020-02-19T02:59:20Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/servlet/VelocityServlet.java", "diffHunk": "@@ -35,58 +37,82 @@\n     @Override\n     @CloseDB\n     protected final void service(HttpServletRequest req, HttpServletResponse response) throws ServletException, IOException {\n-        VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n+        final VelocityRequestWrapper request = new VelocityRequestWrapper(req);\n         final String uri = CMSUrlUtil.getCurrentURI(request);\n-\n+        final boolean comeFromSomeWhere = request.getHeader(\"referer\") != null;\n+        final User frontEndUser = ((UserWebAPIImpl) WebAPILocator.getUserWebAPI()).getLoggedInFrontendUser(request);\n+        request.setRequestUri(uri);\n+        final PageMode mode = PageMode.getWithNavigateMode(request);\n+        \n+        // if you are hitting the servlet without running through the other filters\n         if (uri == null) {\n             response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, \"VelocityServlet called without running through the CMS Filter\");\n             Logger.error(this.getClass(),\n                     \"You cannot call the VelocityServlet without passing the requested url via a  requestAttribute called  \"\n                             + Constants.CMS_FILTER_URI_OVERRIDE);\n             return;\n         }\n-\n-        final boolean comeFromSomeWhere = request.getHeader(\"referer\") != null;\n-\n-        if (APILocator.getLoginServiceAPI().isLoggedIn(request) && !comeFromSomeWhere){\n+        \n+        // if you are a backend user, redirect you to the page edit screen\n+        if (PortalUtil.getUser(request)!=null && PortalUtil.getUser(request).hasConsoleAccess() && !comeFromSomeWhere){\n             goToEditPage(uri,request, response);\n-        } else {\n-\n-            if ((DbConnectionFactory.isMsSql() && LicenseUtil.getLevel() < LicenseLevel.PROFESSIONAL.level) ||\n-                    (DbConnectionFactory.isOracle() && LicenseUtil.getLevel() < LicenseLevel.PRIME.level) ||\n-                    (!LicenseUtil.isASAllowed())) {\n-                Logger.error(this, \"Enterprise License is required\");\n+            return;\n+        } \n+        \n+        // if you are not running ee\n+        if ((DbConnectionFactory.isMsSql() && LicenseUtil.getLevel() < LicenseLevel.PROFESSIONAL.level)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMTYyNTc2", "url": "https://github.com/dotCMS/core/pull/18011#pullrequestreview-361162576", "createdAt": "2020-02-19T14:37:58Z", "commit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMTc5NjI2", "url": "https://github.com/dotCMS/core/pull/18011#pullrequestreview-361179626", "createdAt": "2020-02-19T14:55:16Z", "commit": {"oid": "da7042733a60679842eef136d95056832898f6c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1422, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}