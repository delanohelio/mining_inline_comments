{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NDA0MDQ5", "number": 19076, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxOTo0MzoxN1rOEYmMug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxOTo0MzoxN1rOEYmMug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjI3MTMwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/TemplateDataFetcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxOTo0MzoxN1rOHBBVkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxOTo0MzoxN1rOHBBVkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDgzMjUyOA==", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/19076#discussion_r470832528", "createdAt": "2020-08-14T19:43:17Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/TemplateDataFetcher.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.PermissionLevel;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.HTMLPageAssetAPI;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.page.JsonMapper;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.fasterxml.jackson.databind.ObjectWriter;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.io.CharArrayReader;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * This DataFetcher returns a {@link Map} representing a {@link Template} associated to the originally\n+ * requested {@link HTMLPageAsset}.\n+ */\n+public class TemplateDataFetcher implements DataFetcher<Map<Object, Object>> {\n+    @Override\n+    public Map<Object, Object> get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final User user = ((DotGraphQLContext) environment.getContext()).getUser();\n+            final Contentlet contentlet = environment.getSource();\n+            final String pageModeAsString = environment.getArgument(\"pageMode\")\n+                    != null ? environment.getArgument(\"pageMode\") : PageMode.LIVE.name();\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+\n+            final String templateId = contentlet.getStringProperty(HTMLPageAssetAPI.TEMPLATE_FIELD);\n+\n+            final Template template = getTemplate(templateId, mode);\n+\n+            return asMap(template, user);\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbd530f80c0dc1c7d23d1e0b83f27a503bc220c5"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1973, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}