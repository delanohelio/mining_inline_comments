{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMjc3MTgx", "number": 19339, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzowMTowMlrOEq1kLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzowMTowMlrOEq1kLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzUzMjYwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/maintenance/MaintenanceResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzowMTowMlrOHdRaFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjo1MDowM1rOHhpKzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1NTk1OQ==", "bodyText": "probably _shutdown would be better", "url": "https://github.com/dotCMS/core/pull/19339#discussion_r500455959", "createdAt": "2020-10-06T17:01:02Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/maintenance/MaintenanceResource.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.dotcms.rest.api.v1.maintenance;\n+\n+import java.io.Serializable;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.Response.Status;\n+import org.glassfish.jersey.server.JSONP;\n+import com.dotcms.repackage.com.google.common.annotations.VisibleForTesting;\n+import com.dotcms.rest.InitDataObject;\n+import com.dotcms.rest.ResponseEntityView;\n+import com.dotcms.rest.WebResource;\n+import com.dotcms.rest.annotation.NoCache;\n+import com.dotcms.rest.api.v1.authentication.ResponseUtil;\n+import com.dotmarketing.business.ApiProvider;\n+import com.dotmarketing.business.Role;\n+import com.dotmarketing.util.Config;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.SecurityLogger;\n+\n+\n+@Path(\"/v1/maintenance\")\n+@SuppressWarnings(\"serial\")\n+public class MaintenanceResource implements Serializable {\n+\n+    private final WebResource webResource;\n+\n+    /**\n+     * Default class constructor.\n+     */\n+    public MaintenanceResource() {\n+        this(new WebResource(new ApiProvider()));\n+    }\n+\n+    @VisibleForTesting\n+    public MaintenanceResource(WebResource webResource) {\n+        this.webResource = webResource;\n+\n+    }\n+\n+\n+    /**\n+     * This me\n+     * \n+     * @param request\n+     * @param response\n+     * @return\n+     */\n+    @DELETE\n+    @Path(\"/shutdown\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d891e5019e992d638969d29c5ff4cbaaacbda78"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAzOTU2Nw==", "bodyText": "Done", "url": "https://github.com/dotCMS/core/pull/19339#discussion_r505039567", "createdAt": "2020-10-14T22:50:03Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/maintenance/MaintenanceResource.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.dotcms.rest.api.v1.maintenance;\n+\n+import java.io.Serializable;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.Response.Status;\n+import org.glassfish.jersey.server.JSONP;\n+import com.dotcms.repackage.com.google.common.annotations.VisibleForTesting;\n+import com.dotcms.rest.InitDataObject;\n+import com.dotcms.rest.ResponseEntityView;\n+import com.dotcms.rest.WebResource;\n+import com.dotcms.rest.annotation.NoCache;\n+import com.dotcms.rest.api.v1.authentication.ResponseUtil;\n+import com.dotmarketing.business.ApiProvider;\n+import com.dotmarketing.business.Role;\n+import com.dotmarketing.util.Config;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.SecurityLogger;\n+\n+\n+@Path(\"/v1/maintenance\")\n+@SuppressWarnings(\"serial\")\n+public class MaintenanceResource implements Serializable {\n+\n+    private final WebResource webResource;\n+\n+    /**\n+     * Default class constructor.\n+     */\n+    public MaintenanceResource() {\n+        this(new WebResource(new ApiProvider()));\n+    }\n+\n+    @VisibleForTesting\n+    public MaintenanceResource(WebResource webResource) {\n+        this.webResource = webResource;\n+\n+    }\n+\n+\n+    /**\n+     * This me\n+     * \n+     * @param request\n+     * @param response\n+     * @return\n+     */\n+    @DELETE\n+    @Path(\"/shutdown\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1NTk1OQ=="}, "originalCommit": {"oid": "2d891e5019e992d638969d29c5ff4cbaaacbda78"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1904, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}