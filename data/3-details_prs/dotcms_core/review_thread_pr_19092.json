{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NDQzMjY5", "number": 19092, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozNjozMlrOEYHAYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozNjozMlrOEYHAYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzE2MDY3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozNjozMlrOHARJ5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTo1OToyN1rOHASFDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MzEwOQ==", "bodyText": "stream() method can be removed", "url": "https://github.com/dotCMS/core/pull/19092#discussion_r470043109", "createdAt": "2020-08-13T15:36:32Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -294,23 +295,28 @@ private void addMappingForRemainingFields(final Set<String> mappedFields,\n     private void addMappingForContentTypeIfNeeded(final ContentType contentType,\n             final Set<String> mappedFields, final String... indexes) {\n         final Map<String, JSONObject> contentTypeMapping = new HashMap();\n-        contentType.fields().stream().forEach(field-> {\n-                try {\n-                    addMappingForFieldIfNeeded(contentType, field,\n-                            mappedFields, contentTypeMapping);\n-                    putContentTypeMapping(contentType, contentTypeMapping, indexes);\n-                } catch (Exception e) {\n-                    handleInvalidCustomMappingError(\n-                            \"notification.reindexing.content.type.mapping.error\",\n-                            contentType.name(), indexes);\n-                    final String message =\n-                            \"Error updating index mapping for content type \" + contentType.name()\n-                                    + \". This custom mapping will be ignored for index(es) \" +\n-                                    Arrays.stream(indexes).collect(Collectors.joining(\",\"));\n-                    Logger.warn(ESMappingUtilHelper.class, message, e);\n+        try {\n+            contentType.fields().stream().forEach(field-> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04939462863df5477e83f1978c940bc696755fab"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1MDI4Ng==", "bodyText": "Why having nested try-catches if you are throwing a DotRuntimeException to be caught outside the loop?", "url": "https://github.com/dotCMS/core/pull/19092#discussion_r470050286", "createdAt": "2020-08-13T15:47:19Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -294,23 +295,28 @@ private void addMappingForRemainingFields(final Set<String> mappedFields,\n     private void addMappingForContentTypeIfNeeded(final ContentType contentType,\n             final Set<String> mappedFields, final String... indexes) {\n         final Map<String, JSONObject> contentTypeMapping = new HashMap();\n-        contentType.fields().stream().forEach(field-> {\n-                try {\n-                    addMappingForFieldIfNeeded(contentType, field,\n-                            mappedFields, contentTypeMapping);\n-                    putContentTypeMapping(contentType, contentTypeMapping, indexes);\n-                } catch (Exception e) {\n-                    handleInvalidCustomMappingError(\n-                            \"notification.reindexing.content.type.mapping.error\",\n-                            contentType.name(), indexes);\n-                    final String message =\n-                            \"Error updating index mapping for content type \" + contentType.name()\n-                                    + \". This custom mapping will be ignored for index(es) \" +\n-                                    Arrays.stream(indexes).collect(Collectors.joining(\",\"));\n-                    Logger.warn(ESMappingUtilHelper.class, message, e);\n+        try {\n+            contentType.fields().stream().forEach(field-> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MzEwOQ=="}, "originalCommit": {"oid": "04939462863df5477e83f1978c940bc696755fab"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1NjM4OQ==", "bodyText": "Because these exceptions need to be logged but never interrupt the whole process. This logic is part of a full reindex, which can take a lot of time in large datasets. Here, it is important to give more priority to the full process itself, because otherwise the application is useless, even when just setting a field mapping fails.", "url": "https://github.com/dotCMS/core/pull/19092#discussion_r470056389", "createdAt": "2020-08-13T15:56:38Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -294,23 +295,28 @@ private void addMappingForRemainingFields(final Set<String> mappedFields,\n     private void addMappingForContentTypeIfNeeded(final ContentType contentType,\n             final Set<String> mappedFields, final String... indexes) {\n         final Map<String, JSONObject> contentTypeMapping = new HashMap();\n-        contentType.fields().stream().forEach(field-> {\n-                try {\n-                    addMappingForFieldIfNeeded(contentType, field,\n-                            mappedFields, contentTypeMapping);\n-                    putContentTypeMapping(contentType, contentTypeMapping, indexes);\n-                } catch (Exception e) {\n-                    handleInvalidCustomMappingError(\n-                            \"notification.reindexing.content.type.mapping.error\",\n-                            contentType.name(), indexes);\n-                    final String message =\n-                            \"Error updating index mapping for content type \" + contentType.name()\n-                                    + \". This custom mapping will be ignored for index(es) \" +\n-                                    Arrays.stream(indexes).collect(Collectors.joining(\",\"));\n-                    Logger.warn(ESMappingUtilHelper.class, message, e);\n+        try {\n+            contentType.fields().stream().forEach(field-> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MzEwOQ=="}, "originalCommit": {"oid": "04939462863df5477e83f1978c940bc696755fab"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1NjY2OA==", "bodyText": "By the way, the stream() suggestion was applied", "url": "https://github.com/dotCMS/core/pull/19092#discussion_r470056668", "createdAt": "2020-08-13T15:56:59Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -294,23 +295,28 @@ private void addMappingForRemainingFields(final Set<String> mappedFields,\n     private void addMappingForContentTypeIfNeeded(final ContentType contentType,\n             final Set<String> mappedFields, final String... indexes) {\n         final Map<String, JSONObject> contentTypeMapping = new HashMap();\n-        contentType.fields().stream().forEach(field-> {\n-                try {\n-                    addMappingForFieldIfNeeded(contentType, field,\n-                            mappedFields, contentTypeMapping);\n-                    putContentTypeMapping(contentType, contentTypeMapping, indexes);\n-                } catch (Exception e) {\n-                    handleInvalidCustomMappingError(\n-                            \"notification.reindexing.content.type.mapping.error\",\n-                            contentType.name(), indexes);\n-                    final String message =\n-                            \"Error updating index mapping for content type \" + contentType.name()\n-                                    + \". This custom mapping will be ignored for index(es) \" +\n-                                    Arrays.stream(indexes).collect(Collectors.joining(\",\"));\n-                    Logger.warn(ESMappingUtilHelper.class, message, e);\n+        try {\n+            contentType.fields().stream().forEach(field-> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MzEwOQ=="}, "originalCommit": {"oid": "04939462863df5477e83f1978c940bc696755fab"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1ODI1Mg==", "bodyText": "Fair enough! Thanks for clarifying.", "url": "https://github.com/dotCMS/core/pull/19092#discussion_r470058252", "createdAt": "2020-08-13T15:59:27Z", "author": {"login": "victoralfaro-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/util/ESMappingUtilHelper.java", "diffHunk": "@@ -294,23 +295,28 @@ private void addMappingForRemainingFields(final Set<String> mappedFields,\n     private void addMappingForContentTypeIfNeeded(final ContentType contentType,\n             final Set<String> mappedFields, final String... indexes) {\n         final Map<String, JSONObject> contentTypeMapping = new HashMap();\n-        contentType.fields().stream().forEach(field-> {\n-                try {\n-                    addMappingForFieldIfNeeded(contentType, field,\n-                            mappedFields, contentTypeMapping);\n-                    putContentTypeMapping(contentType, contentTypeMapping, indexes);\n-                } catch (Exception e) {\n-                    handleInvalidCustomMappingError(\n-                            \"notification.reindexing.content.type.mapping.error\",\n-                            contentType.name(), indexes);\n-                    final String message =\n-                            \"Error updating index mapping for content type \" + contentType.name()\n-                                    + \". This custom mapping will be ignored for index(es) \" +\n-                                    Arrays.stream(indexes).collect(Collectors.joining(\",\"));\n-                    Logger.warn(ESMappingUtilHelper.class, message, e);\n+        try {\n+            contentType.fields().stream().forEach(field-> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MzEwOQ=="}, "originalCommit": {"oid": "04939462863df5477e83f1978c940bc696755fab"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1976, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}