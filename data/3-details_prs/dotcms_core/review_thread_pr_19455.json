{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MjI1MjUy", "number": 19455, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0MVrOEuE_EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0OFrOEuE_RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzUxNjMyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/beans/UserProxy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0MVrOHiQRzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0MVrOHiQRzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MDMzMg==", "bodyText": "Codacy found an issue: Document empty method body", "url": "https://github.com/dotCMS/core/pull/19455#discussion_r505680332", "createdAt": "2020-10-15T16:30:41Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/beans/UserProxy.java", "diffHunk": "@@ -1,710 +1,71 @@\n package com.dotmarketing.beans;\n \n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Map;\n-\n import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.Layout;\n import com.dotmarketing.business.PermissionAPI;\n import com.dotmarketing.business.PermissionSummary;\n-import com.dotmarketing.util.Logger;\n-import com.dotmarketing.util.UtilMethods;\n-import com.liferay.portal.model.User;\n+import com.dotmarketing.business.Permissionable;\n+import com.dotmarketing.business.RelatedPermissionableGroup;\n+import com.dotmarketing.exception.DotDataException;\n \n /**\n  *\n- * @author  maria\n+ * @author maria\n  */\n-public class UserProxy extends Inode implements Serializable{\n+public class UserProxy implements Permissionable {\n+\n \n-    /**\n-     * \n-     */\n     private static final long serialVersionUID = 1L;\n+    private final String userId;\n \n+    public UserProxy(String userId) {\n+        this.userId = userId;\n \n-    public UserProxy() {\n-    \tthis.setType(\"user_proxy\");\n-    \t//prefix = \"\";\n-\t\t//suffix = \"\";\n-\t\t//title = \"\";\n-\t\t//school = \"\";\n-\t\tcontactMe = new String[0];\n-\t\tnoclicktracking = false;\n-\t\tmailSubscription = false;\n     }\n \n-\tprivate String userId;\t\n-\tprivate String prefix;\n-\tprivate String suffix;\n-\tprivate String title;\n-\tprivate String school;\n-\tprivate Integer graduationYear;\n-\tprivate String longLivedCookie;\n-\tprivate String website;\n-\tprivate String company;\n-\tprivate String howHeard;\n-\tprivate String[] contactMe;\n-\tprivate String organization;\n-    private boolean mailSubscription;\n-\n-\t/** nullable persistent field */\n-    private Integer lastResult = 0;\n+    public List<PermissionSummary> acceptedPermissions() {\n+        List<PermissionSummary> accepted = new ArrayList<PermissionSummary>();\n+        accepted.add(new PermissionSummary(\"view\", \"view-permission-description\", PermissionAPI.PERMISSION_READ));\n+        accepted.add(new PermissionSummary(\"edit\", \"edit-permission-description\", PermissionAPI.PERMISSION_WRITE));\n+        accepted.add(new PermissionSummary(\"edit-permissions\", \"edit-permissions-permission-description\",\n+                        PermissionAPI.PERMISSION_EDIT_PERMISSIONS));\n+        return accepted;\n+    }\n \n-    /** nullable persistent field */\n-    private String lastMessage;\n+    @Override\n+    public String getPermissionId() {\n+        return \"user:\" + this.userId;\n+    }\n \n-\tprivate String var1;\t\n-\tprivate String var2;\t\n-\tprivate String var3;\t\n-\tprivate String var4;\t\n-\tprivate String var5;\t\n-\tprivate String var6;\t\n-\tprivate String var7;\t\n-\tprivate String var8;\t\n-\tprivate String var9;\t\n-\tprivate String var10;\t\n-\tprivate String var11;\t\n-\tprivate String var12;\t\n-\tprivate String var13;\t\n-\tprivate String var14;\t\n-\tprivate String var15;\t\n-\tprivate String var16;\t\n-\tprivate String var17;\t\n-\tprivate String var18;\t\n-\tprivate String var19;\t\n-\tprivate String var20;\t\n-\tprivate String var21;\t\n-\tprivate String var22;\t\n-\tprivate String var23;\t\n-\tprivate String var24;\t\n-\tprivate String var25;\n-\t\n-\t/*ClickStream*/\n-\tprivate boolean noclicktracking;\n-\t\n-    public void setMailSubscription(Boolean b){\n-        if(b != null){\n-            mailSubscription = b.booleanValue();\n-        }\n-        else{\n-            mailSubscription = false;\n-        }\n+    @Override\n+    public String getOwner() {\n+        return null;\n     }\n \n-\tpublic void setNoclicktracking(Boolean b){\n-\t    if(b != null){\n-\t        noclicktracking = b.booleanValue();\n-\t    }   else{\n-\t            mailSubscription = false;\n-\t        }\n-\t}\n-\t\n-\tprivate String challengeQuestionId;\n-\tprivate String challengeQuestionAnswer;\n-\t\n-\tpublic boolean isNoclicktracking() {\n-\t\treturn noclicktracking;\n-\t}\n+    @Override\n+    public void setOwner(String owner) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ea30f72f5610e423604e9f41f09b7cf236e839"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzUxNjM4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/CMSUsersWebAPI.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0MlrOHiQR1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0MlrOHiQR1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MDM0MA==", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.util.HashMap'", "url": "https://github.com/dotCMS/core/pull/19455#discussion_r505680340", "createdAt": "2020-10-15T16:30:42Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/CMSUsersWebAPI.java", "diffHunk": "@@ -1,7 +1,16 @@\n package com.dotcms.rendering.velocity.viewtools;\r\n \r\n+import java.io.IOException;\r\n+import java.util.ArrayList;\r\n+import java.util.HashMap;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ea30f72f5610e423604e9f41f09b7cf236e839"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzUxNjQ3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/business/UserProxyAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0M1rOHiQR4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0M1rOHiQR4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MDM1Mw==", "bodyText": "Codacy found an issue: Document empty method body", "url": "https://github.com/dotCMS/core/pull/19455#discussion_r505680353", "createdAt": "2020-10-15T16:30:43Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/business/UserProxyAPIImpl.java", "diffHunk": "@@ -17,62 +14,40 @@\n  */\n public class UserProxyAPIImpl implements UserProxyAPI {\n \n-\tprivate final UserProxyFactory userProxyFactory;\n-\tprivate final PermissionAPI permissionAPI;\n-\t\n-\tpublic UserProxyAPIImpl() {\n-\t\tuserProxyFactory = FactoryLocator.getUserProxyFactory();\n-\t\tpermissionAPI = APILocator.getPermissionAPI();\n-\t}\n+    private final PermissionAPI permissionAPI;\n+\n+    public UserProxyAPIImpl() {\n+        permissionAPI = APILocator.getPermissionAPI();\n+    }\n+\n+    @CloseDBIfOpened\n+    public UserProxy getUserProxy(String userId, User user, boolean respectFrontEndRoles)\n+                    throws DotRuntimeException, DotSecurityException, DotDataException {\n+        if (userId == null) {\n+            return null;\n+        }\n+\n+        UserProxy up = new UserProxy(userId);\n+\n+        if (permissionAPI.doesUserHavePermission(up, PermissionAPI.PERMISSION_READ, user, respectFrontEndRoles)) {\n+            return up;\n+        } else {\n+            throw new DotSecurityException(\"User doesn't have permissions to retrieve UserProxy\");\n+        }\n+\n+    }\n+\n+    public UserProxy getUserProxy(User userToGetProxyFor, User user, boolean respectFrontEndRoles)\n+                    throws DotRuntimeException, DotSecurityException, DotDataException {\n+        return getUserProxy(userToGetProxyFor.getUserId(), user, respectFrontEndRoles);\n+    }\n \n-\t@CloseDBIfOpened\n-\tpublic UserProxy getUserProxy(String userId, User user, boolean respectFrontEndRoles) throws DotRuntimeException, DotSecurityException, DotDataException{\n-\t\tif(userId == null){\n-\t\t\treturn null;\n-\t\t}\n-\t\tUserProxy up = userProxyFactory.getUserProxy(userId);\n-\t\t\n-\t\tif(permissionAPI.doesUserHavePermission(up, PermissionAPI.PERMISSION_READ, user, respectFrontEndRoles)){\n-\t\t\treturn up;\n-\t\t}else{\n-\t\t\tthrow new DotSecurityException(\"User doesn't have permissions to retrieve UserProxy\");\n-\t\t}\n-\t}\n \n-\tpublic UserProxy getUserProxy(User userToGetProxyFor, User user, boolean respectFrontEndRoles) throws DotRuntimeException, DotSecurityException, DotDataException{\n-\t\treturn getUserProxy(userToGetProxyFor.getUserId(),user,respectFrontEndRoles);\n-\t}\n-\t\n-\t/*public static UserProxy getUserProxy(long userProxyInode) \n-\t{\t\t\n-\t\treturn (UserProxy) InodeFactory.getInode(userProxyInode,UserProxy.class);\n-\t}*/\n-\t@CloseDBIfOpened\n-\tpublic UserProxy getUserProxyByLongLiveCookie(String dotCMSID, User user, boolean respectFrontEndRoles) throws DotRuntimeException, DotSecurityException, DotDataException{\n-\t\tUserProxy up =  userProxyFactory.getUserProxyByLongLiveCookie(dotCMSID);\n-\t\tif(permissionAPI.doesUserHavePermission(up, PermissionAPI.PERMISSION_READ, user, respectFrontEndRoles)){\n-\t\t\treturn up;\n-\t\t}else{\n-\t\t\tthrow new DotSecurityException(\"User doesn't have permissions to retrieve UserProxy\");\n-\t\t}\n-\t}\n+    @WrapInTransaction\n+    public void saveUserProxy(UserProxy userProxy, User user, boolean respectFrontEndRoles)\n+                    throws DotRuntimeException, DotDataException, DotSecurityException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ea30f72f5610e423604e9f41f09b7cf236e839"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzUxNjU2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/beans/UserProxy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0NFrOHiQR7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0NFrOHiQR7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MDM2Ng==", "bodyText": "Codacy found an issue: Avoid unused imports such as 'com.dotmarketing.business.Layout'", "url": "https://github.com/dotCMS/core/pull/19455#discussion_r505680366", "createdAt": "2020-10-15T16:30:44Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/beans/UserProxy.java", "diffHunk": "@@ -1,710 +1,71 @@\n package com.dotmarketing.beans;\n \n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Map;\n-\n import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.Layout;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ea30f72f5610e423604e9f41f09b7cf236e839"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzUxNjYzOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/business/PermissionBitAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0NVrOHiQR_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0NVrOHiQR_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MDM4MA==", "bodyText": "Codacy found an issue: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/19455#discussion_r505680380", "createdAt": "2020-10-15T16:30:45Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/business/PermissionBitAPIImpl.java", "diffHunk": "@@ -254,33 +255,47 @@ public boolean doesUserHavePermission(Permissionable permissionable, int permiss\n \t\treturn doesUserHavePermission(permissionable, permissionType, user, true);\r\n \t}\r\n \r\n+\tprivate boolean userPermissions(final UserProxy userProxy, final User userIn) {\r\n+\t    \r\n+\t    if(userProxy.getPermissionId().equals(userIn.getUserId())) {\r\n+\t        return true;\r\n+\t    }\r\n+\t    return Try.of(()-> APILocator.getLayoutAPI().doesUserHaveAccessToPortlet(\"user\", userIn)).getOrElse(false);\r\n+\t}\r\n+\t\r\n+\t\r\n+\t\r\n \t@CloseDBIfOpened\r\n \t@Override\r\n \tpublic boolean doesUserHavePermission(final Permissionable permissionable, int permissionType, final User userIn, final boolean respectFrontendRoles) throws DotDataException {\r\n \t    \r\n+\t    User user = (userIn==null || userIn.getUserId()==null) ? APILocator.getUserAPI().getAnonymousUser() : userIn;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ea30f72f5610e423604e9f41f09b7cf236e839"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzUxNjcxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/CMSUsersWebAPI.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0NlrOHiQSCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0NlrOHiQSCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MDM5Mg==", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.io.IOException'", "url": "https://github.com/dotCMS/core/pull/19455#discussion_r505680392", "createdAt": "2020-10-15T16:30:46Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/CMSUsersWebAPI.java", "diffHunk": "@@ -1,7 +1,16 @@\n package com.dotcms.rendering.velocity.viewtools;\r\n \r\n+import java.io.IOException;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ea30f72f5610e423604e9f41f09b7cf236e839"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzUxNjc3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/business/UserProxyAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0N1rOHiQSDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0N1rOHiQSDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MDM5OA==", "bodyText": "Codacy found an issue: Avoid variables with short names like up", "url": "https://github.com/dotCMS/core/pull/19455#discussion_r505680398", "createdAt": "2020-10-15T16:30:47Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/business/UserProxyAPIImpl.java", "diffHunk": "@@ -17,62 +14,40 @@\n  */\n public class UserProxyAPIImpl implements UserProxyAPI {\n \n-\tprivate final UserProxyFactory userProxyFactory;\n-\tprivate final PermissionAPI permissionAPI;\n-\t\n-\tpublic UserProxyAPIImpl() {\n-\t\tuserProxyFactory = FactoryLocator.getUserProxyFactory();\n-\t\tpermissionAPI = APILocator.getPermissionAPI();\n-\t}\n+    private final PermissionAPI permissionAPI;\n+\n+    public UserProxyAPIImpl() {\n+        permissionAPI = APILocator.getPermissionAPI();\n+    }\n+\n+    @CloseDBIfOpened\n+    public UserProxy getUserProxy(String userId, User user, boolean respectFrontEndRoles)\n+                    throws DotRuntimeException, DotSecurityException, DotDataException {\n+        if (userId == null) {\n+            return null;\n+        }\n+\n+        UserProxy up = new UserProxy(userId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ea30f72f5610e423604e9f41f09b7cf236e839"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzUxNjg1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/CMSUsersWebAPI.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0OFrOHiQSGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjozMDo0OFrOHiQSGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MDQwOQ==", "bodyText": "Codacy found an issue: Avoid unused imports such as 'javax.servlet.http.HttpServletResponse'", "url": "https://github.com/dotCMS/core/pull/19455#discussion_r505680409", "createdAt": "2020-10-15T16:30:48Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/CMSUsersWebAPI.java", "diffHunk": "@@ -1,7 +1,16 @@\n package com.dotcms.rendering.velocity.viewtools;\r\n \r\n+import java.io.IOException;\r\n+import java.util.ArrayList;\r\n+import java.util.HashMap;\r\n+import java.util.List;\r\n+import javax.servlet.http.HttpServletRequest;\r\n+import javax.servlet.http.HttpServletResponse;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ea30f72f5610e423604e9f41f09b7cf236e839"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1770, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}