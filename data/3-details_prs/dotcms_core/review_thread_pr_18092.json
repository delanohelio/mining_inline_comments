{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMjE2MzU2", "number": 18092, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDozNToyOFrODlEVyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjozMjoxOFrODlHZSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTk1MDE4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDozNToyOFrOFxvqig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjowNDo1MFrOFxzbSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwNTQ4Mg==", "bodyText": "better:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } catch (final DotSecurityException e) {\n          \n          \n            \n                    } catch (final DotSecurityException | DotDataException e) {\n          \n          \n            \n                      ...", "url": "https://github.com/dotCMS/core/pull/18092#discussion_r387705482", "createdAt": "2020-03-04T14:35:28Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "diffHunk": "@@ -277,20 +249,72 @@ public void setLanguageId(long languageId) {\n         this.languageId = languageId;\r\n     }\r\n \r\n+    /**\r\n+     * @deprecated Use the method {@link #getContentTypeId()}\r\n+     *\r\n+     * @return\r\n+     */\r\n     public String getStructureInode() {\r\n-        return structureInode;\r\n+        return contentTypeId;\r\n+    }\r\n+\r\n+    /**\r\n+     * Returns the ID of the Content Type that this Contentlet belongs to.\r\n+     *\r\n+     * @return The Content Type ID.\r\n+     */\r\n+    public String getContentTypeId() {\r\n+        return this.contentTypeId;\r\n     }\r\n \r\n+    /**\r\n+     * @deprecated Use the method {@link #setContentTypeId(String)}\r\n+     *\r\n+     * @param structureInode\r\n+     */\r\n     public void setStructureInode(String structureInode) {\r\n-        this.structureInode = structureInode;\r\n+        this.contentTypeId = structureInode;\r\n     }\r\n+\r\n+    /**\r\n+     * Sets the Content Type ID that this Contentlet belongs to.\r\n+     *\r\n+     * @param contentTypeId The Content Type ID.\r\n+     */\r\n+    public void setContentTypeId(final String contentTypeId) {\r\n+        this.contentTypeId = contentTypeId;\r\n+    }\r\n+\r\n     /**\r\n+     * @deprecated Use the method {@link #getContentType()}\r\n+     *\r\n+     * @return\r\n      */\r\n     public Structure getStructure() {\r\n-        Structure structure = CacheLocator.getContentTypeCache().getStructureByInode(structureInode);\r\n+        Structure structure = CacheLocator.getContentTypeCache().getStructureByInode(contentTypeId);\r\n         return structure;\r\n     }\r\n \r\n+    /**\r\n+     * Returns the Content Type that this Contentlet belongs to.\r\n+     *\r\n+     * @return The {@link ContentType} object.\r\n+     */\r\n+    public ContentType getContentType() {\r\n+        final ContentType contentType;\r\n+        try {\r\n+            contentType = APILocator.getContentTypeAPI(APILocator.systemUser()).find(contentTypeId);\r\n+            return contentType;\r\n+        } catch (final DotSecurityException e) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392c07a75fa150e566ed98ba946e099d8a26077f"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2NzExMw==", "bodyText": "Done", "url": "https://github.com/dotCMS/core/pull/18092#discussion_r387767113", "createdAt": "2020-03-04T16:04:50Z", "author": {"login": "jcastro-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "diffHunk": "@@ -277,20 +249,72 @@ public void setLanguageId(long languageId) {\n         this.languageId = languageId;\r\n     }\r\n \r\n+    /**\r\n+     * @deprecated Use the method {@link #getContentTypeId()}\r\n+     *\r\n+     * @return\r\n+     */\r\n     public String getStructureInode() {\r\n-        return structureInode;\r\n+        return contentTypeId;\r\n+    }\r\n+\r\n+    /**\r\n+     * Returns the ID of the Content Type that this Contentlet belongs to.\r\n+     *\r\n+     * @return The Content Type ID.\r\n+     */\r\n+    public String getContentTypeId() {\r\n+        return this.contentTypeId;\r\n     }\r\n \r\n+    /**\r\n+     * @deprecated Use the method {@link #setContentTypeId(String)}\r\n+     *\r\n+     * @param structureInode\r\n+     */\r\n     public void setStructureInode(String structureInode) {\r\n-        this.structureInode = structureInode;\r\n+        this.contentTypeId = structureInode;\r\n     }\r\n+\r\n+    /**\r\n+     * Sets the Content Type ID that this Contentlet belongs to.\r\n+     *\r\n+     * @param contentTypeId The Content Type ID.\r\n+     */\r\n+    public void setContentTypeId(final String contentTypeId) {\r\n+        this.contentTypeId = contentTypeId;\r\n+    }\r\n+\r\n     /**\r\n+     * @deprecated Use the method {@link #getContentType()}\r\n+     *\r\n+     * @return\r\n      */\r\n     public Structure getStructure() {\r\n-        Structure structure = CacheLocator.getContentTypeCache().getStructureByInode(structureInode);\r\n+        Structure structure = CacheLocator.getContentTypeCache().getStructureByInode(contentTypeId);\r\n         return structure;\r\n     }\r\n \r\n+    /**\r\n+     * Returns the Content Type that this Contentlet belongs to.\r\n+     *\r\n+     * @return The {@link ContentType} object.\r\n+     */\r\n+    public ContentType getContentType() {\r\n+        final ContentType contentType;\r\n+        try {\r\n+            contentType = APILocator.getContentTypeAPI(APILocator.systemUser()).find(contentTypeId);\r\n+            return contentType;\r\n+        } catch (final DotSecurityException e) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwNTQ4Mg=="}, "originalCommit": {"oid": "392c07a75fa150e566ed98ba946e099d8a26077f"}, "originalPosition": 156}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTk2Mzg2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDozODo0OVrOFxvzDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjowNDo1NVrOFxzbgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwNzY2Mw==", "bodyText": "better:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } catch (final IllegalArgumentException iae) {\n          \n          \n            \n                    } catch (final DotRuntimeException | InvocationTargetException  | IllegalAccessException  e) {", "url": "https://github.com/dotCMS/core/pull/18092#discussion_r387707663", "createdAt": "2020-03-04T14:38:49Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "diffHunk": "@@ -1599,159 +1619,109 @@ public void setDisabledWysiwyg(String disabledWysiwyg) {\n \t\tthis.disabledWysiwyg = disabledWysiwyg;\r\n \t}\r\n \r\n-\t/*public String getFolder() {\r\n-\t\treturn folder;\r\n-\t}\r\n-\r\n-\tpublic void setFolder(String folder) {\r\n-\t\tthis.folder = folder;\r\n-\t}*/\r\n-\r\n \t/**\r\n \t *\r\n-\t * @param f\r\n+\t * @param field\r\n \t * @param value\r\n \t */\r\n-\tpublic void setField(Field f, Object value) throws DotRuntimeException {\r\n+\tpublic void setField(Field field, Object value) throws DotRuntimeException {\r\n \t\ttry {\r\n \t\t\tif(value != null && value instanceof Timestamp){\r\n \t\t\t\tvalue = new Date(((Timestamp)value).getTime());\r\n \t\t\t}\r\n-\r\n-\t\t\t/* This code is not being used anymore - issue 10529\r\n-\t\t\tif(value!=null && value instanceof String && ((String)value).indexOf(\"\\\\u\")>-1) {\r\n-\t\t\t\tvalue = ((String)value).replace(\"\\\\u\", \"${esc.b}u\");\r\n-\t\t\t}\r\n-\t\t\t*/\r\n-\t\t\tBeanUtils.setProperty(this, f.getFieldContentlet(), value);\r\n-\t\t}catch(IllegalArgumentException iae){\r\n-\t\t\tLogger.error(this, \"Unable to set the contentlet field.\");\r\n-\t\t\tthrow new DotRuntimeException(\"Unable to set the contentlet field.\", iae);\r\n-\t\t} catch (IllegalAccessException e) {\r\n-\t\t\tLogger.error(this, \"Unable to set the contentlet field.\");\r\n-\t\t\tthrow new DotRuntimeException(\"Unable to set the contentlet field.\", e);\r\n-\t\t} catch (InvocationTargetException e) {\r\n-\t\t\tLogger.error(this, \"Unable to set the contentlet field.\");\r\n-\t\t\tthrow new DotRuntimeException(\"Unable to set the contentlet field.\", e);\r\n-\t\t}\r\n-\t}\r\n-\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param fieldVarName velocityVarName\r\n-\t * @param value\r\n-\t * @throws DotRuntimeException if the field doesn't exist or it's not accesible\r\n-\t */\r\n-\tpublic void setField(String fieldVarName, Object value) throws DotRuntimeException {\r\n-\t\tStructure st = CacheLocator.getContentTypeCache().getStructureByInode(this.structureInode);\r\n-\t\tField f = st.getFieldVar(fieldVarName);\r\n-\t\tif(f == null)\r\n-\t\t\tthrow new DotRuntimeException(\"Field: \" + fieldVarName + \" doesn't exist.\");\r\n-\t\tsetField(f, value);\r\n-\t}\r\n+\t\t\tBeanUtils.setProperty(this, field.getFieldContentlet(), value);\r\n+        } catch (final IllegalArgumentException iae) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392c07a75fa150e566ed98ba946e099d8a26077f"}, "originalPosition": 252}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2NzE2OA==", "bodyText": "Done", "url": "https://github.com/dotCMS/core/pull/18092#discussion_r387767168", "createdAt": "2020-03-04T16:04:55Z", "author": {"login": "jcastro-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "diffHunk": "@@ -1599,159 +1619,109 @@ public void setDisabledWysiwyg(String disabledWysiwyg) {\n \t\tthis.disabledWysiwyg = disabledWysiwyg;\r\n \t}\r\n \r\n-\t/*public String getFolder() {\r\n-\t\treturn folder;\r\n-\t}\r\n-\r\n-\tpublic void setFolder(String folder) {\r\n-\t\tthis.folder = folder;\r\n-\t}*/\r\n-\r\n \t/**\r\n \t *\r\n-\t * @param f\r\n+\t * @param field\r\n \t * @param value\r\n \t */\r\n-\tpublic void setField(Field f, Object value) throws DotRuntimeException {\r\n+\tpublic void setField(Field field, Object value) throws DotRuntimeException {\r\n \t\ttry {\r\n \t\t\tif(value != null && value instanceof Timestamp){\r\n \t\t\t\tvalue = new Date(((Timestamp)value).getTime());\r\n \t\t\t}\r\n-\r\n-\t\t\t/* This code is not being used anymore - issue 10529\r\n-\t\t\tif(value!=null && value instanceof String && ((String)value).indexOf(\"\\\\u\")>-1) {\r\n-\t\t\t\tvalue = ((String)value).replace(\"\\\\u\", \"${esc.b}u\");\r\n-\t\t\t}\r\n-\t\t\t*/\r\n-\t\t\tBeanUtils.setProperty(this, f.getFieldContentlet(), value);\r\n-\t\t}catch(IllegalArgumentException iae){\r\n-\t\t\tLogger.error(this, \"Unable to set the contentlet field.\");\r\n-\t\t\tthrow new DotRuntimeException(\"Unable to set the contentlet field.\", iae);\r\n-\t\t} catch (IllegalAccessException e) {\r\n-\t\t\tLogger.error(this, \"Unable to set the contentlet field.\");\r\n-\t\t\tthrow new DotRuntimeException(\"Unable to set the contentlet field.\", e);\r\n-\t\t} catch (InvocationTargetException e) {\r\n-\t\t\tLogger.error(this, \"Unable to set the contentlet field.\");\r\n-\t\t\tthrow new DotRuntimeException(\"Unable to set the contentlet field.\", e);\r\n-\t\t}\r\n-\t}\r\n-\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param fieldVarName velocityVarName\r\n-\t * @param value\r\n-\t * @throws DotRuntimeException if the field doesn't exist or it's not accesible\r\n-\t */\r\n-\tpublic void setField(String fieldVarName, Object value) throws DotRuntimeException {\r\n-\t\tStructure st = CacheLocator.getContentTypeCache().getStructureByInode(this.structureInode);\r\n-\t\tField f = st.getFieldVar(fieldVarName);\r\n-\t\tif(f == null)\r\n-\t\t\tthrow new DotRuntimeException(\"Field: \" + fieldVarName + \" doesn't exist.\");\r\n-\t\tsetField(f, value);\r\n-\t}\r\n+\t\t\tBeanUtils.setProperty(this, field.getFieldContentlet(), value);\r\n+        } catch (final IllegalArgumentException iae) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwNzY2Mw=="}, "originalCommit": {"oid": "392c07a75fa150e566ed98ba946e099d8a26077f"}, "originalPosition": 252}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTk3MDc1OnYy", "diffSide": "LEFT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDo0MDozMFrOFxv3TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjowNDowMVrOFxzZIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwODc0OA==", "bodyText": "why all this are remove?", "url": "https://github.com/dotCMS/core/pull/18092#discussion_r387708748", "createdAt": "2020-03-04T14:40:30Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "diffHunk": "@@ -219,36 +221,6 @@\n     private boolean bool24;\r\n     private boolean bool25;\r\n \r\n-    //private String folder;\r\n-\r\n-    private File binary1;\r\n-    private File binary2;\r\n-    private File binary3;\r\n-    private File binary4;\r\n-    private File binary5;\r\n-    private File binary6;\r\n-    private File binary7;\r\n-    private File binary8;\r\n-    private File binary9;\r\n-    private File binary10;\r\n-    private File binary11;\r\n-    private File binary12;\r\n-    private File binary13;\r\n-    private File binary14;\r\n-    private File binary15;\r\n-    private File binary16;\r\n-    private File binary17;\r\n-    private File binary18;\r\n-    private File binary19;\r\n-    private File binary20;\r\n-    private File binary21;\r\n-    private File binary22;\r\n-    private File binary23;\r\n-    private File binary24;\r\n-    private File binary25;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392c07a75fa150e566ed98ba946e099d8a26077f"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2NjU2Mg==", "bodyText": "That code is marked by IntelliJ as not being used by any other class in the source code. It was probable caused by another refactoring not related to this issue.", "url": "https://github.com/dotCMS/core/pull/18092#discussion_r387766562", "createdAt": "2020-03-04T16:04:01Z", "author": {"login": "jcastro-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "diffHunk": "@@ -219,36 +221,6 @@\n     private boolean bool24;\r\n     private boolean bool25;\r\n \r\n-    //private String folder;\r\n-\r\n-    private File binary1;\r\n-    private File binary2;\r\n-    private File binary3;\r\n-    private File binary4;\r\n-    private File binary5;\r\n-    private File binary6;\r\n-    private File binary7;\r\n-    private File binary8;\r\n-    private File binary9;\r\n-    private File binary10;\r\n-    private File binary11;\r\n-    private File binary12;\r\n-    private File binary13;\r\n-    private File binary14;\r\n-    private File binary15;\r\n-    private File binary16;\r\n-    private File binary17;\r\n-    private File binary18;\r\n-    private File binary19;\r\n-    private File binary20;\r\n-    private File binary21;\r\n-    private File binary22;\r\n-    private File binary23;\r\n-    private File binary24;\r\n-    private File binary25;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwODc0OA=="}, "originalCommit": {"oid": "392c07a75fa150e566ed98ba946e099d8a26077f"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjAxMzc1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/business/ESContentFactoryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDo1MTowMlrOFxwSag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjowMToxOFrOFxzRrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcxNTY5MA==", "bodyText": "are you sure that you wanna show these exceptions as error? they might cause a lot of noise. I think Logger.warnAndDebug is better", "url": "https://github.com/dotCMS/core/pull/18092#discussion_r387715690", "createdAt": "2020-03-04T14:51:02Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/business/ESContentFactoryImpl.java", "diffHunk": "@@ -1584,20 +1585,18 @@ protected SearchHits indexSearch(String query, int limit, int offset, String sor\n \n             searchRequest.source(searchSourceBuilder);\n             response = RestHighLevelClientProvider.getInstance().getClient().search(searchRequest, RequestOptions.DEFAULT);\n-\n-\n-        } catch (ElasticsearchStatusException | IndexNotFoundException | SearchPhaseExecutionException infe ) {\n-            Logger.warn(this.getClass(), \"----------------------------------------------\");\n-            Logger.warn(this.getClass(), \"Elasticsearch Index Error : \" + indexToHit);\n-            Logger.warnAndDebug(this.getClass(), infe.getMessage(), infe);\n-            Logger.warn(this.getClass(), \"----------------------------------------------\");\n-\n+        } catch (final ElasticsearchStatusException | IndexNotFoundException | SearchPhaseExecutionException e) {\n+            Logger.error(this.getClass(), \"----------------------------------------------\");\n+            Logger.error(this.getClass(), String.format(\"Elasticsearch error in index '%s'\", indexToHit));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392c07a75fa150e566ed98ba946e099d8a26077f"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2NDY1Mw==", "bodyText": "Fixed", "url": "https://github.com/dotCMS/core/pull/18092#discussion_r387764653", "createdAt": "2020-03-04T16:01:18Z", "author": {"login": "jcastro-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/content/elasticsearch/business/ESContentFactoryImpl.java", "diffHunk": "@@ -1584,20 +1585,18 @@ protected SearchHits indexSearch(String query, int limit, int offset, String sor\n \n             searchRequest.source(searchSourceBuilder);\n             response = RestHighLevelClientProvider.getInstance().getClient().search(searchRequest, RequestOptions.DEFAULT);\n-\n-\n-        } catch (ElasticsearchStatusException | IndexNotFoundException | SearchPhaseExecutionException infe ) {\n-            Logger.warn(this.getClass(), \"----------------------------------------------\");\n-            Logger.warn(this.getClass(), \"Elasticsearch Index Error : \" + indexToHit);\n-            Logger.warnAndDebug(this.getClass(), infe.getMessage(), infe);\n-            Logger.warn(this.getClass(), \"----------------------------------------------\");\n-\n+        } catch (final ElasticsearchStatusException | IndexNotFoundException | SearchPhaseExecutionException e) {\n+            Logger.error(this.getClass(), \"----------------------------------------------\");\n+            Logger.error(this.getClass(), String.format(\"Elasticsearch error in index '%s'\", indexToHit));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcxNTY5MA=="}, "originalCommit": {"oid": "392c07a75fa150e566ed98ba946e099d8a26077f"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjQ1MDY2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjozMjoxOFrOFx0lAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjozMjoxOFrOFx0lAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc4NTk4NQ==", "bodyText": "Issue found: Local variable 'structure' could be declared final", "url": "https://github.com/dotCMS/core/pull/18092#discussion_r387785985", "createdAt": "2020-03-04T16:32:18Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/portlets/contentlet/business/Contentlet.java", "diffHunk": "@@ -277,20 +249,69 @@ public void setLanguageId(long languageId) {\n         this.languageId = languageId;\r\n     }\r\n \r\n+    /**\r\n+     * @deprecated Use the method {@link #getContentTypeId()}\r\n+     *\r\n+     * @return\r\n+     */\r\n     public String getStructureInode() {\r\n-        return structureInode;\r\n+        return contentTypeId;\r\n+    }\r\n+\r\n+    /**\r\n+     * Returns the ID of the Content Type that this Contentlet belongs to.\r\n+     *\r\n+     * @return The Content Type ID.\r\n+     */\r\n+    public String getContentTypeId() {\r\n+        return this.contentTypeId;\r\n     }\r\n \r\n+    /**\r\n+     * @deprecated Use the method {@link #setContentTypeId(String)}\r\n+     *\r\n+     * @param structureInode\r\n+     */\r\n     public void setStructureInode(String structureInode) {\r\n-        this.structureInode = structureInode;\r\n+        this.contentTypeId = structureInode;\r\n     }\r\n+\r\n+    /**\r\n+     * Sets the Content Type ID that this Contentlet belongs to.\r\n+     *\r\n+     * @param contentTypeId The Content Type ID.\r\n+     */\r\n+    public void setContentTypeId(final String contentTypeId) {\r\n+        this.contentTypeId = contentTypeId;\r\n+    }\r\n+\r\n     /**\r\n+     * @deprecated Use the method {@link #getContentType()}\r\n+     *\r\n+     * @return\r\n      */\r\n     public Structure getStructure() {\r\n-        Structure structure = CacheLocator.getContentTypeCache().getStructureByInode(structureInode);\r\n+        Structure structure = CacheLocator.getContentTypeCache().getStructureByInode(contentTypeId);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fcbdf37cb32264283c2e780a22173dfd8ba679f"}, "originalPosition": 142}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2358, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}