{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMzQxNjc2", "number": 18522, "title": "Issue 18419", "bodyText": "Refactor to the createFolders endpoint that was useless because it was not receiving the siteName param, update to use the ExceptionUtil mapper that we have for responses.\nTests for success, a user without permissions, and siteName that does not exist were created.", "createdAt": "2020-05-19T20:14:48Z", "url": "https://github.com/dotCMS/core/pull/18522", "merged": true, "mergeCommit": {"oid": "654e3acecdd9924dda62b07d25c9ae0050b15763"}, "closed": true, "closedAt": "2020-05-28T15:42:50Z", "author": {"login": "erickgonzalez"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci6O8-AH2gAyNDIwMzQxNjc2OmRkNmVlOTRmMWVmNGYzMmJiZTlkOTc2MzhhYTBkMjc3OWFkZTE0ZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclud0agFqTQyMDE0NTc2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dd6ee94f1ef4f32bbe9d97638aa0d2779ade14d3", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/dd6ee94f1ef4f32bbe9d97638aa0d2779ade14d3", "committedDate": "2020-05-19T20:10:20Z", "message": "#18419 refactor createfolders endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e99ae8e939ce6ea352425ecbc542d232a52eab0", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/3e99ae8e939ce6ea352425ecbc542d232a52eab0", "committedDate": "2020-05-19T20:11:04Z", "message": "#18419 add exception to mapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bb82325567c09e1480af55b73ff5d1eec24d8f6", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/1bb82325567c09e1480af55b73ff5d1eec24d8f6", "committedDate": "2020-05-19T20:11:43Z", "message": "#18419 tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6f478ace78ea29d4e8dae4a409ae7b360c0def6", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/e6f478ace78ea29d4e8dae4a409ae7b360c0def6", "committedDate": "2020-05-19T21:19:13Z", "message": "#18419 folderapi not checking host null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a6538db5e5df1a55f3ca7eb13d6e2d4248b5637", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/4a6538db5e5df1a55f3ca7eb13d6e2d4248b5637", "committedDate": "2020-05-19T21:21:58Z", "message": "#18419 feedback changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzkwMzgz", "url": "https://github.com/dotCMS/core/pull/18522#pullrequestreview-415390383", "createdAt": "2020-05-20T14:23:27Z", "commit": {"oid": "4a6538db5e5df1a55f3ca7eb13d6e2d4248b5637"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoyMzoyN1rOGYOXog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoyMzoyN1rOGYOXog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA1NDQzNA==", "bodyText": "here we should use the Exception Mapper", "url": "https://github.com/dotCMS/core/pull/18522#discussion_r428054434", "createdAt": "2020-05-20T14:23:27Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/folder/FolderResource.java", "diffHunk": "@@ -70,41 +61,24 @@ public final Response createFolders(@Context final HttpServletRequest httpServle\n                                         @Context final HttpServletResponse httpServletResponse,\n                                         final List<String> paths,\n                                         @PathParam(\"siteName\") final String siteName) {\n-        Response response = null;\n-        final InitDataObject initData = this.webResource.init(null, httpServletRequest, httpServletResponse, true, null);\n+\n+        final InitDataObject initData =\n+                new WebResource.InitBuilder(webResource)\n+                        .requiredBackendUser(true)\n+                        .requiredFrontendUser(false)\n+                        .requestAndResponse(httpServletRequest, httpServletResponse)\n+                        .init();\n+\n         final User user = initData.getUser();\n-        final List<Map<String, Object>> folderResults;\n \n         try {\n-            Locale locale = LocaleUtil.getLocale(user, httpServletRequest);\n-            FolderHelper.FolderResults results = folderHelper.createFolders(paths, siteName, user);\n-            folderResults = results.folders\n-                    .stream()\n-                    .map(folder -> {\n-                        try {\n-                            return folder.getMap();\n-                        } catch (Exception e) {\n-                            Logger.error(this, \"Data Exception while converting to map\", e);\n-                            throw new DotRuntimeException(\"Data Exception while converting to map\", e);\n-                        }\n-                    })\n-                    .collect(Collectors.toList());\n-            ;\n+            final List<Map<String, Object>> createdFolders = folderHelper.createFolders(paths, siteName, user);\n \n-            response = Response.ok(new ResponseEntityView\n-                    (map(\"result\", folderResults),\n-                            results.getErrorEntities(), null,\n-                            this.i18NUtil.getMessagesMap(locale, \"Invalid-option-selected\",\n-                                    \"cancel\")\n-                    )).build(); // 200\n-        } catch (Exception e) { // this is an unknown error, so we report as a 500.\n-            Logger.error(this, \"Error handling Save Folder Post Request\", e);\n-            if (ExceptionUtil.causedBy(e, DotSecurityException.class)) {\n-                throw new ForbiddenException(e);\n-            }\n-            response = ExceptionMapperUtil.createResponse(e, Response.Status.INTERNAL_SERVER_ERROR);\n+            return Response.ok(new ResponseEntityView(createdFolders)).build(); // 200\n+        } catch (Exception e) {\n+            Logger.error(this.getClass(),\"Exception saving/creating folders.\", e);\n+            return ResponseUtil.mapExceptionResponse(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a6538db5e5df1a55f3ca7eb13d6e2d4248b5637"}, "originalPosition": 104}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f7cd46a009f07407a7dc798256344bd0d800a91", "author": {"user": {"login": "erickgonzalez", "name": null}}, "url": "https://github.com/dotCMS/core/commit/3f7cd46a009f07407a7dc798256344bd0d800a91", "committedDate": "2020-05-20T20:12:32Z", "message": "#18419 feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NjgzNjE4", "url": "https://github.com/dotCMS/core/pull/18522#pullrequestreview-415683618", "createdAt": "2020-05-20T20:19:04Z", "commit": {"oid": "3f7cd46a009f07407a7dc798256344bd0d800a91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDoxOTowNFrOGYcXCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDoxOTowNFrOGYcXCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4MzY1OA==", "bodyText": "Issue found: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/18522#discussion_r428283658", "createdAt": "2020-05-20T20:19:04Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/folder/FolderResourceTest.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.dotcms.rest.api.v1.folder;\n+\n+import com.dotcms.datagen.SiteDataGen;\n+import com.dotcms.datagen.TestUserUtils;\n+import com.dotcms.mock.request.MockAttributeRequest;\n+import com.dotcms.mock.request.MockHeaderRequest;\n+import com.dotcms.mock.request.MockHttpRequest;\n+import com.dotcms.mock.request.MockSessionRequest;\n+import com.dotcms.mock.response.MockHttpResponse;\n+import com.dotcms.rest.ResponseEntityView;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.beans.Host;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.folders.business.FolderAPI;\n+import com.dotmarketing.portlets.folders.model.Folder;\n+import com.liferay.portal.model.User;\n+import com.liferay.util.Base64;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.Response.Status;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class FolderResourceTest {\n+\n+    static HttpServletResponse response;\n+    static FolderResource resource;\n+    static FolderAPI folderAPI;\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7cd46a009f07407a7dc798256344bd0d800a91"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NjgzNjM0", "url": "https://github.com/dotCMS/core/pull/18522#pullrequestreview-415683634", "createdAt": "2020-05-20T20:19:05Z", "commit": {"oid": "3f7cd46a009f07407a7dc798256344bd0d800a91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDoxOTowNVrOGYcXFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDoxOTowNVrOGYcXFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4MzY2OQ==", "bodyText": "Issue found: Avoid unused imports such as 'com.dotcms.rest.api.v1.authentication.ResponseUtil'", "url": "https://github.com/dotCMS/core/pull/18522#discussion_r428283669", "createdAt": "2020-05-20T20:19:05Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/folder/FolderResource.java", "diffHunk": "@@ -1,27 +1,23 @@\n package com.dotcms.rest.api.v1.folder;\n \n-import static com.dotcms.util.CollectionsUtils.map;\n-\n import com.dotcms.exception.ExceptionUtil;\n import com.dotcms.repackage.com.google.common.annotations.VisibleForTesting;\n import com.dotcms.rest.InitDataObject;\n import com.dotcms.rest.ResponseEntityView;\n import com.dotcms.rest.WebResource;\n import com.dotcms.rest.annotation.NoCache;\n+import com.dotcms.rest.api.v1.authentication.ResponseUtil;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7cd46a009f07407a7dc798256344bd0d800a91"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NzAwNTU4", "url": "https://github.com/dotCMS/core/pull/18522#pullrequestreview-415700558", "createdAt": "2020-05-20T20:45:14Z", "commit": {"oid": "3f7cd46a009f07407a7dc798256344bd0d800a91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MTg0Mzky", "url": "https://github.com/dotCMS/core/pull/18522#pullrequestreview-416184392", "createdAt": "2020-05-21T14:18:51Z", "commit": {"oid": "3f7cd46a009f07407a7dc798256344bd0d800a91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMTQ1NzY5", "url": "https://github.com/dotCMS/core/pull/18522#pullrequestreview-420145769", "createdAt": "2020-05-28T14:09:30Z", "commit": {"oid": "3f7cd46a009f07407a7dc798256344bd0d800a91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 849, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}