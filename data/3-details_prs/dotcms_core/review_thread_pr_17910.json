{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDA4Mzk3", "number": 17910, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTowMjo0MFrODanDRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyMjoxMlrODanVqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjI5MzgyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTowMjo0MFrOFhqUCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTowMjo0MFrOFhqUCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0MDU4Ng==", "bodyText": "is this line still needed?", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370840586", "createdAt": "2020-01-24T21:02:40Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java", "diffHunk": "@@ -19,25 +19,25 @@ public static void prepare() throws Exception {\n     }\n \n     @Test(expected = BadRequestException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bccecf272a710f311739f3d840c4e600e16171f"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjI5NDE4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTowMjo0N1rOFhqUQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTowMjo0N1rOFhqUQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0MDY0Mg==", "bodyText": "same as above", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370840642", "createdAt": "2020-01-24T21:02:47Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java", "diffHunk": "@@ -19,25 +19,25 @@ public static void prepare() throws Exception {\n     }\n \n     @Test(expected = BadRequestException.class)\n-    public void testValidURL_urlReturn400_throwsException() throws IOException {\n+    public void testValidURL_urlReturn400_throwsException() {\n         final String url =  \"https://raw.githubusercontent.com/url/throws/400.jpg\";\n-        APILocator.getTempFileAPI().validUrl(url);\n+        assertFalse(APILocator.getTempFileAPI().validUrl(url));\n     }\n \n     @Test(expected = BadRequestException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bccecf272a710f311739f3d840c4e600e16171f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjMzNjA2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyMDoxN1rOFhqt8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyNzowMlrOFhq4Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0NzIxNw==", "bodyText": "remove this, the method is not throwing a IOException anymore", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370847217", "createdAt": "2020-01-24T21:20:17Z", "author": {"login": "freddyucv"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java", "diffHunk": "@@ -217,17 +217,20 @@ public DotTempFile createTempFileFromUrl(final String incomingFileName,\n    * @return\n    * @throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0OTc5NQ==", "bodyText": "done", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370849795", "createdAt": "2020-01-24T21:27:02Z", "author": {"login": "erickgonzalez"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java", "diffHunk": "@@ -217,17 +217,20 @@ public DotTempFile createTempFileFromUrl(final String incomingFileName,\n    * @return\n    * @throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0NzIxNw=="}, "originalCommit": {"oid": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjMzODE2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/util/ImportUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyMToxMlrOFhqvNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyOTo1N1rOFhq8cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0NzU0MA==", "bodyText": "If we don't want this error in the logs I would remove it instead of change it to warn, is not a warning, is an error.\nBut to be honest I don't see the problem on having the extra error log in there.", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370847540", "createdAt": "2020-01-24T21:21:12Z", "author": {"login": "jgambarios"}, "path": "dotCMS/src/main/java/com/dotmarketing/util/ImportUtil.java", "diffHunk": "@@ -1476,7 +1475,7 @@ private static void importLine ( String[] line, String currentHostId, Structure\n                 }\n             }\n         } catch (Exception e) {\n-            Logger.error(ImportUtil.class,e.getMessage(),e);\n+            Logger.warn(ImportUtil.class,e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MDkyOQ==", "bodyText": "I thought the same, more logs better but was a Bryan and Will call", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370850929", "createdAt": "2020-01-24T21:29:57Z", "author": {"login": "erickgonzalez"}, "path": "dotCMS/src/main/java/com/dotmarketing/util/ImportUtil.java", "diffHunk": "@@ -1476,7 +1475,7 @@ private static void importLine ( String[] line, String currentHostId, Structure\n                 }\n             }\n         } catch (Exception e) {\n-            Logger.error(ImportUtil.class,e.getMessage(),e);\n+            Logger.warn(ImportUtil.class,e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0NzU0MA=="}, "originalCommit": {"oid": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM0MDkxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyMjoxMlrOFhqw3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyODozOVrOFhq6YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0Nzk2NA==", "bodyText": "We should handle the specific !=200 case instead of just catch any exception, we could be hiding real errors.", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370847964", "createdAt": "2020-01-24T21:22:12Z", "author": {"login": "jgambarios"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java", "diffHunk": "@@ -217,17 +217,20 @@ public DotTempFile createTempFileFromUrl(final String incomingFileName,\n    * @return\n    * @throws IOException\n    */\n-  public boolean validUrl(final String url) throws IOException {\n+  public boolean validUrl(final String url) {\n \n     if(!(url.toLowerCase().startsWith(\"http://\") ||\n             url.toLowerCase().startsWith(\"https://\"))){\n       Logger.error(this, \"URL does not starts with http or https\");\n       return false;\n     }\n-\n-    final CircuitBreakerUrl urlGetter =\n-            CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(url).build();\n-    urlGetter.doString();\n+    try {\n+      final CircuitBreakerUrl urlGetter =\n+              CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(url).build();\n+      urlGetter.doString();\n+    } catch (Exception e) {//If response is not 200, url is invalid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MDQwMQ==", "bodyText": "The CircuitBreakerUrl throws BadRequestException or DotRuntimeException, so the only way could be catching both exceptions.", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370850401", "createdAt": "2020-01-24T21:28:39Z", "author": {"login": "erickgonzalez"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java", "diffHunk": "@@ -217,17 +217,20 @@ public DotTempFile createTempFileFromUrl(final String incomingFileName,\n    * @return\n    * @throws IOException\n    */\n-  public boolean validUrl(final String url) throws IOException {\n+  public boolean validUrl(final String url) {\n \n     if(!(url.toLowerCase().startsWith(\"http://\") ||\n             url.toLowerCase().startsWith(\"https://\"))){\n       Logger.error(this, \"URL does not starts with http or https\");\n       return false;\n     }\n-\n-    final CircuitBreakerUrl urlGetter =\n-            CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(url).build();\n-    urlGetter.doString();\n+    try {\n+      final CircuitBreakerUrl urlGetter =\n+              CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(url).build();\n+      urlGetter.doString();\n+    } catch (Exception e) {//If response is not 200, url is invalid", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0Nzk2NA=="}, "originalCommit": {"oid": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2515, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}