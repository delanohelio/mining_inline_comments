{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NjAzMDMx", "number": 19551, "title": "Taking into account the PageMode when pull related content", "bodyText": "Taking PageMode into account when pull related content", "createdAt": "2020-11-04T19:47:20Z", "url": "https://github.com/dotCMS/core/pull/19551", "merged": true, "mergeCommit": {"oid": "8c524fe292505f03cce41314606225ff173964dc"}, "closed": true, "closedAt": "2020-11-10T16:56:25Z", "author": {"login": "freddyucv"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZTJ4iAH2gAyNTE1NjAzMDMxOjY1ZmVjMzYwMTlmMTA0ZGEzNTczYTllNTQwYjIxZDM1MjU3NGU4NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABda8wXgAH2gAyNTE1NjAzMDMxOjE4Zjg4MWViMWNiNzcyMzViYjQ1MGM5ZDI2YWQ0NGEyMTkxYTNkOWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "65fec36019f104da3573a9e540b21d352574e845", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/65fec36019f104da3573a9e540b21d352574e845", "committedDate": "2020-11-04T19:44:20Z", "message": "Taking into account the PageMode when pull related content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzIyNzc2", "url": "https://github.com/dotCMS/core/pull/19551#pullrequestreview-523722776", "createdAt": "2020-11-04T20:47:20Z", "commit": {"oid": "65fec36019f104da3573a9e540b21d352574e845"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDo0NzoyMFrOHtpIfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDo0NzoyMFrOHtpIfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyMTg4NA==", "bodyText": "I would check if it is not null or empty list", "url": "https://github.com/dotCMS/core/pull/19551#discussion_r517621884", "createdAt": "2020-11-04T20:47:20Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/content/ContentMap.java", "diffHunk": "@@ -342,20 +336,49 @@ private Object getRelationshipInfo(final Field field)\n \t\tfinal ContentletRelationshipRecords records = relationships.getRelationshipsRecords().get(0);\n \t\tif(records.getRecords().isEmpty()) {\n \t\t    return null;\n+\t\t} else if (records.doesAllowOnlyOne()){\n+\t\t\treturn new ContentMap(records.getRecords().get(0),user, EDIT_OR_PREVIEW_MODE, host, context);\n+\t\t} else {\n+\t\t\tfinal List<Contentlet> contents = records.getRecords().stream()\n+\t\t\t\t\t.filter(contentlet -> needLiveVersion(contentlet))\n+\t\t\t\t\t.map(relatedContent -> EDIT_OR_PREVIEW_MODE ? relatedContent : getLiveVersion(relatedContent))\n+\t\t\t\t\t.collect(Collectors.toList());\n+\n+\t\t\treturn perAPI.filterCollection(contents, PermissionAPI.PERMISSION_USE, true, user).stream()\n+\t\t\t\t\t.map(contentlet -> new ContentMap(contentlet, user, EDIT_OR_PREVIEW_MODE, host, context))\n+\t\t\t\t\t.collect(Collectors.toList());\n \t\t}\n-\t\telse if (records.doesAllowOnlyOne()){\n-\t\t\treturn new ContentMap(records.getRecords().get(0),user,\n-\t\t\t\t\tEDIT_OR_PREVIEW_MODE, host, context);\n-\t\t} else{\n-\t\t\treturn perAPI.filterCollection(records.getRecords(),\n-\t\t\t\t\tPermissionAPI.PERMISSION_USE, true, user).stream()\n-\t\t\t\t\t.map(contentlet -> new ContentMap((Contentlet) contentlet, user,\n-\t\t\t\t\t\t\tEDIT_OR_PREVIEW_MODE, host, context)).collect(Collectors.toList());\n-\t\t}\n \n \n \t}\n \n+\tprivate Contentlet getLiveVersion(final Contentlet relatedContent) {\n+\t\ttry {\n+\t\t\tif (relatedContent.isLive()) {\n+\t\t\t\treturn relatedContent;\n+\t\t\t} else {\n+\t\t\t\ttry {\n+\t\t\t\t\tfinal List<Contentlet>  contentlets = APILocator.getContentletAPI()\n+\t\t\t\t\t\t\t.findContentletsByIdentifiers(new String[]{relatedContent.getIdentifier()}, true, relatedContent.getLanguageId(), user, user.isFrontendUser());\n+\n+\t\t\t\t\treturn contentlets.get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65fec36019f104da3573a9e540b21d352574e845"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzIyOTcw", "url": "https://github.com/dotCMS/core/pull/19551#pullrequestreview-523722970", "createdAt": "2020-11-04T20:47:36Z", "commit": {"oid": "65fec36019f104da3573a9e540b21d352574e845"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDo0NzozN1rOHtpI_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDo0NzozN1rOHtpI_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyMjAxNA==", "bodyText": "is this ok", "url": "https://github.com/dotCMS/core/pull/19551#discussion_r517622014", "createdAt": "2020-11-04T20:47:37Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/content/ContentMap.java", "diffHunk": "@@ -342,20 +336,49 @@ private Object getRelationshipInfo(final Field field)\n \t\tfinal ContentletRelationshipRecords records = relationships.getRelationshipsRecords().get(0);\n \t\tif(records.getRecords().isEmpty()) {\n \t\t    return null;\n+\t\t} else if (records.doesAllowOnlyOne()){\n+\t\t\treturn new ContentMap(records.getRecords().get(0),user, EDIT_OR_PREVIEW_MODE, host, context);\n+\t\t} else {\n+\t\t\tfinal List<Contentlet> contents = records.getRecords().stream()\n+\t\t\t\t\t.filter(contentlet -> needLiveVersion(contentlet))\n+\t\t\t\t\t.map(relatedContent -> EDIT_OR_PREVIEW_MODE ? relatedContent : getLiveVersion(relatedContent))\n+\t\t\t\t\t.collect(Collectors.toList());\n+\n+\t\t\treturn perAPI.filterCollection(contents, PermissionAPI.PERMISSION_USE, true, user).stream()\n+\t\t\t\t\t.map(contentlet -> new ContentMap(contentlet, user, EDIT_OR_PREVIEW_MODE, host, context))\n+\t\t\t\t\t.collect(Collectors.toList());\n \t\t}\n-\t\telse if (records.doesAllowOnlyOne()){\n-\t\t\treturn new ContentMap(records.getRecords().get(0),user,\n-\t\t\t\t\tEDIT_OR_PREVIEW_MODE, host, context);\n-\t\t} else{\n-\t\t\treturn perAPI.filterCollection(records.getRecords(),\n-\t\t\t\t\tPermissionAPI.PERMISSION_USE, true, user).stream()\n-\t\t\t\t\t.map(contentlet -> new ContentMap((Contentlet) contentlet, user,\n-\t\t\t\t\t\t\tEDIT_OR_PREVIEW_MODE, host, context)).collect(Collectors.toList());\n-\t\t}\n \n \n \t}\n \n+\tprivate Contentlet getLiveVersion(final Contentlet relatedContent) {\n+\t\ttry {\n+\t\t\tif (relatedContent.isLive()) {\n+\t\t\t\treturn relatedContent;\n+\t\t\t} else {\n+\t\t\t\ttry {\n+\t\t\t\t\tfinal List<Contentlet>  contentlets = APILocator.getContentletAPI()\n+\t\t\t\t\t\t\t.findContentletsByIdentifiers(new String[]{relatedContent.getIdentifier()}, true, relatedContent.getLanguageId(), user, user.isFrontendUser());\n+\n+\t\t\t\t\treturn contentlets.get(0);\n+\t\t\t\t} catch (DotDataException| DotSecurityException e) {\n+\t\t\t\t\tthrow new RuntimeException(e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} catch (DotDataException | DotSecurityException e) {\n+\t\t\treturn relatedContent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65fec36019f104da3573a9e540b21d352574e845"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzIzMDk4", "url": "https://github.com/dotCMS/core/pull/19551#pullrequestreview-523723098", "createdAt": "2020-11-04T20:47:50Z", "commit": {"oid": "65fec36019f104da3573a9e540b21d352574e845"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDo0Nzo1MFrOHtpJUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMDo0Nzo1MFrOHtpJUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyMjA5OQ==", "bodyText": "you ca use Try.of", "url": "https://github.com/dotCMS/core/pull/19551#discussion_r517622099", "createdAt": "2020-11-04T20:47:50Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/content/ContentMap.java", "diffHunk": "@@ -342,20 +336,49 @@ private Object getRelationshipInfo(final Field field)\n \t\tfinal ContentletRelationshipRecords records = relationships.getRelationshipsRecords().get(0);\n \t\tif(records.getRecords().isEmpty()) {\n \t\t    return null;\n+\t\t} else if (records.doesAllowOnlyOne()){\n+\t\t\treturn new ContentMap(records.getRecords().get(0),user, EDIT_OR_PREVIEW_MODE, host, context);\n+\t\t} else {\n+\t\t\tfinal List<Contentlet> contents = records.getRecords().stream()\n+\t\t\t\t\t.filter(contentlet -> needLiveVersion(contentlet))\n+\t\t\t\t\t.map(relatedContent -> EDIT_OR_PREVIEW_MODE ? relatedContent : getLiveVersion(relatedContent))\n+\t\t\t\t\t.collect(Collectors.toList());\n+\n+\t\t\treturn perAPI.filterCollection(contents, PermissionAPI.PERMISSION_USE, true, user).stream()\n+\t\t\t\t\t.map(contentlet -> new ContentMap(contentlet, user, EDIT_OR_PREVIEW_MODE, host, context))\n+\t\t\t\t\t.collect(Collectors.toList());\n \t\t}\n-\t\telse if (records.doesAllowOnlyOne()){\n-\t\t\treturn new ContentMap(records.getRecords().get(0),user,\n-\t\t\t\t\tEDIT_OR_PREVIEW_MODE, host, context);\n-\t\t} else{\n-\t\t\treturn perAPI.filterCollection(records.getRecords(),\n-\t\t\t\t\tPermissionAPI.PERMISSION_USE, true, user).stream()\n-\t\t\t\t\t.map(contentlet -> new ContentMap((Contentlet) contentlet, user,\n-\t\t\t\t\t\t\tEDIT_OR_PREVIEW_MODE, host, context)).collect(Collectors.toList());\n-\t\t}\n \n \n \t}\n \n+\tprivate Contentlet getLiveVersion(final Contentlet relatedContent) {\n+\t\ttry {\n+\t\t\tif (relatedContent.isLive()) {\n+\t\t\t\treturn relatedContent;\n+\t\t\t} else {\n+\t\t\t\ttry {\n+\t\t\t\t\tfinal List<Contentlet>  contentlets = APILocator.getContentletAPI()\n+\t\t\t\t\t\t\t.findContentletsByIdentifiers(new String[]{relatedContent.getIdentifier()}, true, relatedContent.getLanguageId(), user, user.isFrontendUser());\n+\n+\t\t\t\t\treturn contentlets.get(0);\n+\t\t\t\t} catch (DotDataException| DotSecurityException e) {\n+\t\t\t\t\tthrow new RuntimeException(e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} catch (DotDataException | DotSecurityException e) {\n+\t\t\treturn relatedContent;\n+\t\t}\n+\t}\n+\n+\tprivate boolean needLiveVersion(final Contentlet contentlet) {\n+\t\ttry {\n+\t\t\treturn EDIT_OR_PREVIEW_MODE || !EDIT_OR_PREVIEW_MODE && contentlet.hasLiveVersion();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65fec36019f104da3573a9e540b21d352574e845"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ed56d60337cd0089bc8c6b1562ecf5fcd027a50", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/9ed56d60337cd0089bc8c6b1562ecf5fcd027a50", "committedDate": "2020-11-04T22:09:15Z", "message": "refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzg5OTkx", "url": "https://github.com/dotCMS/core/pull/19551#pullrequestreview-523789991", "createdAt": "2020-11-04T22:43:02Z", "commit": {"oid": "9ed56d60337cd0089bc8c6b1562ecf5fcd027a50"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMjo0MzowMlrOHtsWWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMjo0MzowMlrOHtsWWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY3NDU4Ng==", "bodyText": "Is it better to return Optional?", "url": "https://github.com/dotCMS/core/pull/19551#discussion_r517674586", "createdAt": "2020-11-04T22:43:02Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/content/ContentMap.java", "diffHunk": "@@ -342,20 +336,47 @@ private Object getRelationshipInfo(final Field field)\n \t\tfinal ContentletRelationshipRecords records = relationships.getRelationshipsRecords().get(0);\n \t\tif(records.getRecords().isEmpty()) {\n \t\t    return null;\n+\t\t} else if (records.doesAllowOnlyOne()){\n+\t\t\treturn new ContentMap(records.getRecords().get(0),user, EDIT_OR_PREVIEW_MODE, host, context);\n+\t\t} else {\n+\t\t\tfinal List<Contentlet> contents = records.getRecords().stream()\n+\t\t\t\t\t.filter(contentlet -> needLiveVersion(contentlet))\n+\t\t\t\t\t.map(relatedContent -> EDIT_OR_PREVIEW_MODE ? relatedContent : getLiveVersion(relatedContent))\n+\t\t\t\t\t.filter(Objects::nonNull)\n+\t\t\t\t\t.collect(Collectors.toList());\n+\n+\t\t\treturn perAPI.filterCollection(contents, PermissionAPI.PERMISSION_USE, true, user).stream()\n+\t\t\t\t\t.map(contentlet -> new ContentMap(contentlet, user, EDIT_OR_PREVIEW_MODE, host, context))\n+\t\t\t\t\t.collect(Collectors.toList());\n \t\t}\n-\t\telse if (records.doesAllowOnlyOne()){\n-\t\t\treturn new ContentMap(records.getRecords().get(0),user,\n-\t\t\t\t\tEDIT_OR_PREVIEW_MODE, host, context);\n-\t\t} else{\n-\t\t\treturn perAPI.filterCollection(records.getRecords(),\n-\t\t\t\t\tPermissionAPI.PERMISSION_USE, true, user).stream()\n-\t\t\t\t\t.map(contentlet -> new ContentMap((Contentlet) contentlet, user,\n-\t\t\t\t\t\t\tEDIT_OR_PREVIEW_MODE, host, context)).collect(Collectors.toList());\n-\t\t}\n \n \n \t}\n \n+\tprivate Contentlet getLiveVersion(final Contentlet relatedContent) {\n+\t\ttry {\n+\t\t\tif (relatedContent.isLive()) {\n+\t\t\t\treturn relatedContent;\n+\t\t\t} else {\n+\t\t\t\ttry {\n+\t\t\t\t\tfinal List<Contentlet> contentlets = APILocator.getContentletAPI()\n+\t\t\t\t\t\t\t.findContentletsByIdentifiers(new String[]{relatedContent.getIdentifier()}, true, relatedContent.getLanguageId(), user, user.isFrontendUser());\n+\n+\t\t\t\t\treturn contentlets != null && !contentlets.isEmpty() ? contentlets.get(0) : null;\n+\t\t\t\t} catch (DotDataException| DotSecurityException e) {\n+\t\t\t\t\tthrow new RuntimeException(e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} catch (DotDataException | DotSecurityException e) {\n+\t\t\treturn null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ed56d60337cd0089bc8c6b1562ecf5fcd027a50"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MzYyMjkx", "url": "https://github.com/dotCMS/core/pull/19551#pullrequestreview-524362291", "createdAt": "2020-11-05T15:13:33Z", "commit": {"oid": "9ed56d60337cd0089bc8c6b1562ecf5fcd027a50"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "840c9ea00f792e7dffa16e281d2fa9d9bab982ae", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/840c9ea00f792e7dffa16e281d2fa9d9bab982ae", "committedDate": "2020-11-05T16:23:54Z", "message": "Removing unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a885e7c966e5d0f51982d9223b8877b61e301686", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/a885e7c966e5d0f51982d9223b8877b61e301686", "committedDate": "2020-11-09T17:13:32Z", "message": "Merge remote-tracking branch 'origin/master' into issue-19044-Unpublished-related-content-appearing-in-Preview-Mode-/-Live-mode-"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NjEwMzA5", "url": "https://github.com/dotCMS/core/pull/19551#pullrequestreview-526610309", "createdAt": "2020-11-09T20:02:17Z", "commit": {"oid": "a885e7c966e5d0f51982d9223b8877b61e301686"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b45a686c78849e0fdc89fb7e78d58e13fdb31236", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/b45a686c78849e0fdc89fb7e78d58e13fdb31236", "committedDate": "2020-11-09T21:08:23Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18f881eb1cb77235bb450c9d26ad44a2191a3d9c", "author": {"user": {"login": "freddyucv", "name": "Freddy Rodriguez"}}, "url": "https://github.com/dotCMS/core/commit/18f881eb1cb77235bb450c9d26ad44a2191a3d9c", "committedDate": "2020-11-09T22:46:24Z", "message": "Fixing"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1797, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}