{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjEzMzAz", "number": 18638, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzowNTo1M1rOEFn1Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoyMlrOEG8JkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzMwODgyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumnTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzowNTo1M1rOGj7EWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzoxNjoxNVrOGj7aJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyMTExNA==", "bodyText": "we should validate the column actually exists after the upgrade", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r440321114", "createdAt": "2020-06-15T17:05:53Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumnTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.util.Logger;\n+import java.sql.SQLException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class Task05350AddDotSaltClusterColumnTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+    }\n+\n+    private void dropColumn() throws SQLException {\n+        try {\n+            final String dropColumnSQL = \"ALTER TABLE dot_cluster DROP COLUMN cluster_salt\";\n+            final DotConnect dotConnect = new DotConnect();\n+            dotConnect.executeStatement(dropColumnSQL);\n+        } catch (Exception e) {\n+            Logger.info(Task05350AddDotSaltClusterColumnTest.class, () -> \"Failed removing cluster_salt column. Maybe it didn't exist?\");\n+        }\n+    }\n+\n+    @Test\n+    public void test_upgradeTask_success() throws SQLException, DotDataException {\n+        dropColumn();\n+        final Task05350AddDotSaltClusterColumn task = new Task05350AddDotSaltClusterColumn();\n+        assertTrue(task.forceRun());//True because the column does not exists\n+        task.executeUpgrade();\n+        assertFalse(task.forceRun());//False because the column exists", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fcdc9ffad9770592a46f7e86cf04d661aa6de36"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyNjY5NA==", "bodyText": "task.forceRun() takes care of that. internally it verifies if the column does or does not exist", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r440326694", "createdAt": "2020-06-15T17:16:15Z", "author": {"login": "fabrizzio-dotCMS"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumnTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.util.Logger;\n+import java.sql.SQLException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class Task05350AddDotSaltClusterColumnTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+    }\n+\n+    private void dropColumn() throws SQLException {\n+        try {\n+            final String dropColumnSQL = \"ALTER TABLE dot_cluster DROP COLUMN cluster_salt\";\n+            final DotConnect dotConnect = new DotConnect();\n+            dotConnect.executeStatement(dropColumnSQL);\n+        } catch (Exception e) {\n+            Logger.info(Task05350AddDotSaltClusterColumnTest.class, () -> \"Failed removing cluster_salt column. Maybe it didn't exist?\");\n+        }\n+    }\n+\n+    @Test\n+    public void test_upgradeTask_success() throws SQLException, DotDataException {\n+        dropColumn();\n+        final Task05350AddDotSaltClusterColumn task = new Task05350AddDotSaltClusterColumn();\n+        assertTrue(task.forceRun());//True because the column does not exists\n+        task.executeUpgrade();\n+        assertFalse(task.forceRun());//False because the column exists", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyMTExNA=="}, "originalCommit": {"oid": "7fcdc9ffad9770592a46f7e86cf04d661aa6de36"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzMxNDg3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/CMSConfigResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzowNzo0NVrOGj7IQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToyOToyMVrOGkDagA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyMjExMg==", "bodyText": "Use the companyAPI object you just created", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r440322112", "createdAt": "2020-06-15T17:07:45Z", "author": {"login": "nollymar"}, "path": "dotCMS/src/main/java/com/dotcms/rest/CMSConfigResource.java", "diffHunk": "@@ -497,4 +500,30 @@ public Response deleteEndpoint ( @Context HttpServletRequest request,\n         return responseResource.response( responseMessage.toString() );\n     }\n \n+    @POST\n+    @Path (\"/regenerateKey\")\n+    @Produces (MediaType.APPLICATION_JSON)\n+    @Consumes (MediaType.APPLICATION_FORM_URLENCODED)\n+    public Response regenerateKey ( @Context final HttpServletRequest request,\n+            @Context final HttpServletResponse response) throws JSONException, IOException {\n+        try {\n+            final InitDataObject initData =\n+                    new WebResource.InitBuilder(webResource)\n+                            .requiredBackendUser(true)\n+                            .requiredFrontendUser(false)\n+                            .requestAndResponse(request, response)\n+                            .rejectWhenNoUser(true)\n+                            .init();\n+            final User user = initData.getUser();\n+            final CompanyAPI companyAPI = APILocator.getCompanyAPI();\n+            final Company defaultCompany = companyAPI.getDefaultCompany();\n+            final Company updatedCompany = APILocator.getCompanyAPI().regenerateKey(defaultCompany, user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fcdc9ffad9770592a46f7e86cf04d661aa6de36"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1Nzg1Ng==", "bodyText": "Good catch.", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r440457856", "createdAt": "2020-06-15T21:29:21Z", "author": {"login": "fabrizzio-dotCMS"}, "path": "dotCMS/src/main/java/com/dotcms/rest/CMSConfigResource.java", "diffHunk": "@@ -497,4 +500,30 @@ public Response deleteEndpoint ( @Context HttpServletRequest request,\n         return responseResource.response( responseMessage.toString() );\n     }\n \n+    @POST\n+    @Path (\"/regenerateKey\")\n+    @Produces (MediaType.APPLICATION_JSON)\n+    @Consumes (MediaType.APPLICATION_FORM_URLENCODED)\n+    public Response regenerateKey ( @Context final HttpServletRequest request,\n+            @Context final HttpServletResponse response) throws JSONException, IOException {\n+        try {\n+            final InitDataObject initData =\n+                    new WebResource.InitBuilder(webResource)\n+                            .requiredBackendUser(true)\n+                            .requiredFrontendUser(false)\n+                            .requestAndResponse(request, response)\n+                            .rejectWhenNoUser(true)\n+                            .init();\n+            final User user = initData.getUser();\n+            final CompanyAPI companyAPI = APILocator.getCompanyAPI();\n+            final Company defaultCompany = companyAPI.getDefaultCompany();\n+            final Company updatedCompany = APILocator.getCompanyAPI().regenerateKey(defaultCompany, user);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyMjExMg=="}, "originalCommit": {"oid": "7fcdc9ffad9770592a46f7e86cf04d661aa6de36"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzM3ODQxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/company/CompanyAPIFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzoyNjoyMVrOGj7wKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozMDo1NlrOGkDdLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzMjMyOQ==", "bodyText": "I think the user has a method called isAdmin, which is the same\nuser.isAdmin()", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r440332329", "createdAt": "2020-06-15T17:26:21Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/company/CompanyAPIFactory.java", "diffHunk": "@@ -155,5 +167,35 @@ public void updateDefaultUserSettings(String languageId, String timeZoneId,\n                     skinId, dottedSkins, roundedSkins,\n                     resolution);\n         }\n+\n+        @Override\n+        @WrapInTransaction\n+        public Company regenerateKey(final Company company, final User user)\n+                throws DotDataException, DotSecurityException {\n+            try {\n+                if (!APILocator.getRoleAPI()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fcdc9ffad9770592a46f7e86cf04d661aa6de36"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1ODU0Mw==", "bodyText": "very nice. I'm using it instead", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r440458543", "createdAt": "2020-06-15T21:30:56Z", "author": {"login": "fabrizzio-dotCMS"}, "path": "dotCMS/src/main/java/com/dotcms/company/CompanyAPIFactory.java", "diffHunk": "@@ -155,5 +167,35 @@ public void updateDefaultUserSettings(String languageId, String timeZoneId,\n                     skinId, dottedSkins, roundedSkins,\n                     resolution);\n         }\n+\n+        @Override\n+        @WrapInTransaction\n+        public Company regenerateKey(final Company company, final User user)\n+                throws DotDataException, DotSecurityException {\n+            try {\n+                if (!APILocator.getRoleAPI()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzMjMyOQ=="}, "originalCommit": {"oid": "7fcdc9ffad9770592a46f7e86cf04d661aa6de36"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzM4NjEwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/company/CompanyAPIFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzoyODozMVrOGj71GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzoyODozMVrOGj71GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzMzU5Mw==", "bodyText": "good", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r440333593", "createdAt": "2020-06-15T17:28:31Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotcms/company/CompanyAPIFactory.java", "diffHunk": "@@ -155,5 +167,35 @@ public void updateDefaultUserSettings(String languageId, String timeZoneId,\n                     skinId, dottedSkins, roundedSkins,\n                     resolution);\n         }\n+\n+        @Override\n+        @WrapInTransaction\n+        public Company regenerateKey(final Company company, final User user)\n+                throws DotDataException, DotSecurityException {\n+            try {\n+                if (!APILocator.getRoleAPI()\n+                        .doesUserHaveRole(user, APILocator.getRoleAPI().loadCMSAdminRole())) {\n+                    throw new DotSecurityException(String.format(\n+                            \"User `%s` does not have permission to regenerate company Key operation.\",\n+                            user.getUserId()));\n+                }\n+                final String originalKey = company.getKey();\n+                final String newKey = Base64.objectToString(Encryptor.generateKey());\n+                company.setKey(newKey);\n+                company.setModified(true);\n+                CompanyManagerUtil.updateCompany(company);\n+                final Key originalKeyObj = (Key) Base64.stringToObject(originalKey);\n+                final Key newKeyObj = (Key) Base64.stringToObject(newKey);\n+                HibernateUtil.addCommitListener(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fcdc9ffad9770592a46f7e86cf04d661aa6de36"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzQ3MzI2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumn.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzo1NDo1NFrOGj8ssQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzo1NDo1NFrOGj8ssQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NzgyNQ==", "bodyText": "good", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r440347825", "createdAt": "2020-06-15T17:54:54Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumn.java", "diffHunk": "@@ -0,0 +1,99 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.common.db.DotDatabaseMetaData;\n+import com.dotmarketing.db.DbConnectionFactory;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n+import com.liferay.util.Base64;\n+import com.liferay.util.Encryptor;\n+import com.liferay.util.EncryptorException;\n+import io.vavr.control.Try;\n+import java.sql.SQLException;\n+\n+public class Task05350AddDotSaltClusterColumn implements StartupTask {\n+\n+    private static final String SELECT = \"SELECT cluster_id FROM dot_cluster\";\n+    private static final String UPDATE = \"UPDATE dot_cluster SET cluster_salt = ? WHERE cluster_id = ? \";\n+\n+    private static final String POSTGRES_SQL_ADD_DOT_CLUSTER_SALT_COLUMN = \" ALTER TABLE dot_cluster ADD cluster_salt VARCHAR(256)\";\n+    private static final String MSSQL_ADD_DOT_CLUSTER_SALT_COLUMN = \" ALTER TABLE dot_cluster ADD cluster_salt VARCHAR(256)\";\n+    private static final String MYSQL_ADD_DOT_CLUSTER_SALT_COLUMN = \" ALTER TABLE dot_cluster ADD cluster_salt VARCHAR(256)\";\n+    private static final String ORACLE_ADD_DOT_CLUSTER_SALT_COLUMN = \" ALTER TABLE dot_cluster ADD cluster_salt VARCHAR(256)\";\n+\n+    @Override\n+    public boolean forceRun() {\n+        try {\n+            return !new DotDatabaseMetaData().getColumnNames(DbConnectionFactory.getConnection(), \"dot_cluster\").contains(\"cluster_salt\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fcdc9ffad9770592a46f7e86cf04d661aa6de36"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzQ4MjE0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzo1NzoxOVrOGj8yKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNDoxNDo1OFrOGkKn8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0OTIyNg==", "bodyText": "user.isAdmin", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r440349226", "createdAt": "2020-06-15T17:57:19Z", "author": {"login": "jdotcms"}, "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "diffHunk": "@@ -3,7 +3,10 @@\n <% request.setAttribute(\"requiredPortletAccess\", PortletID.CONFIGURATION.toString()); %>\n <%@ include file=\"/html/common/uservalidation.jsp\"%>\n \n-<%@page import=\"com.dotmarketing.business.APILocator\"%>\n+<%@page import=\"com.dotcms.rest.api.v1.system.ConfigurationHelper\"%>\n+<%\n+boolean hasAdminRole = com.dotmarketing.business.APILocator.getRoleAPI().doesUserHaveRole(user,com.dotmarketing.business.APILocator.getRoleAPI().loadCMSAdminRole());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fcdc9ffad9770592a46f7e86cf04d661aa6de36"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU3NTk4NQ==", "bodyText": "done", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r440575985", "createdAt": "2020-06-16T04:14:58Z", "author": {"login": "fabrizzio-dotCMS"}, "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "diffHunk": "@@ -3,7 +3,10 @@\n <% request.setAttribute(\"requiredPortletAccess\", PortletID.CONFIGURATION.toString()); %>\n <%@ include file=\"/html/common/uservalidation.jsp\"%>\n \n-<%@page import=\"com.dotmarketing.business.APILocator\"%>\n+<%@page import=\"com.dotcms.rest.api.v1.system.ConfigurationHelper\"%>\n+<%\n+boolean hasAdminRole = com.dotmarketing.business.APILocator.getRoleAPI().doesUserHaveRole(user,com.dotmarketing.business.APILocator.getRoleAPI().loadCMSAdminRole());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0OTIyNg=="}, "originalCommit": {"oid": "7fcdc9ffad9770592a46f7e86cf04d661aa6de36"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzM1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDowN1rOGmDABA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDowN1rOGmDABA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODIyOA==", "bodyText": "Codacy found an issue: Avoid having style information in JSP files.", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548228", "createdAt": "2020-06-18T23:10:07Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "diffHunk": "@@ -276,3 +320,28 @@\n         <%= LanguageUtil.get(pageContext, \"save\") %>\n     </button>\n </div>\n+\n+<div id=\"regenerateKeyDialog\" dojoType=\"dijit.Dialog\" style=\"display:none;width:500px;vertical-align: middle; \" draggable=\"true\" title=\"<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-prompt\") %>\" >\n+\n+\t<span class=\"ui-confirmdialog-message\" >\n+\t\t<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-warning\") %>\n+\t</span>\n+\n+    <div>\n+        <table class=\"sTypeTable\" style=\"width:90%; border-collapse: separate; border-spacing: 10px 15px;margin-bottom:10px;\">\n+          <tr>\n+\t\t\t<td style=\"width:50%;text-align: right\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 167}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzM5OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDowOFrOGmDACA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDowOFrOGmDACA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODIzMg==", "bodyText": "Codacy found an issue: Do not use an attribute called class.", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548232", "createdAt": "2020-06-18T23:10:08Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "diffHunk": "@@ -276,3 +320,28 @@\n         <%= LanguageUtil.get(pageContext, \"save\") %>\n     </button>\n </div>\n+\n+<div id=\"regenerateKeyDialog\" dojoType=\"dijit.Dialog\" style=\"display:none;width:500px;vertical-align: middle; \" draggable=\"true\" title=\"<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-prompt\") %>\" >\n+\n+\t<span class=\"ui-confirmdialog-message\" >\n+\t\t<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-warning\") %>\n+\t</span>\n+\n+    <div>\n+        <table class=\"sTypeTable\" style=\"width:90%; border-collapse: separate; border-spacing: 10px 15px;margin-bottom:10px;\">\n+          <tr>\n+\t\t\t<td style=\"width:50%;text-align: right\">\n+\t\t\t\t<button id=\"cancelButton\" dojoType=\"dijit.form.Button\" class=\"dijitButton\" data-dojo-props=\"onClick: regenerateKeyProxyCancel\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 168}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzQyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDowOVrOGmDADA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDowOVrOGmDADA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODIzNg==", "bodyText": "Codacy found an issue: Do not use an attribute called class.", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548236", "createdAt": "2020-06-18T23:10:09Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "diffHunk": "@@ -276,3 +320,28 @@\n         <%= LanguageUtil.get(pageContext, \"save\") %>\n     </button>\n </div>\n+\n+<div id=\"regenerateKeyDialog\" dojoType=\"dijit.Dialog\" style=\"display:none;width:500px;vertical-align: middle; \" draggable=\"true\" title=\"<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-prompt\") %>\" >\n+\n+\t<span class=\"ui-confirmdialog-message\" >", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzQ3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumn.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxMFrOGmDAEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxMFrOGmDAEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODI0Mw==", "bodyText": "Codacy found an issue: The String literal \" ALTER TABLE dot_cluster ADD cluster_salt VARCHAR(256)\" appears 4 times in this file; the first occurrence is on line 22", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548243", "createdAt": "2020-06-18T23:10:10Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumn.java", "diffHunk": "@@ -0,0 +1,99 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.common.db.DotDatabaseMetaData;\n+import com.dotmarketing.db.DbConnectionFactory;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n+import com.liferay.util.Base64;\n+import com.liferay.util.Encryptor;\n+import com.liferay.util.EncryptorException;\n+import io.vavr.control.Try;\n+import java.sql.SQLException;\n+\n+public class Task05350AddDotSaltClusterColumn implements StartupTask {\n+\n+    private static final String SELECT = \"SELECT cluster_id FROM dot_cluster\";\n+    private static final String UPDATE = \"UPDATE dot_cluster SET cluster_salt = ? WHERE cluster_id = ? \";\n+\n+    private static final String POSTGRES_SQL_ADD_DOT_CLUSTER_SALT_COLUMN = \" ALTER TABLE dot_cluster ADD cluster_salt VARCHAR(256)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzUwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumnTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxMVrOGmDAFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxMVrOGmDAFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODI0Ng==", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548246", "createdAt": "2020-06-18T23:10:11Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumnTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.util.Logger;\n+import java.sql.SQLException;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class Task05350AddDotSaltClusterColumnTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzY2OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/system/event/local/type/security/CompanyKeyResetEvent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxM1rOGmDAKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxM1rOGmDAKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODI2Ng==", "bodyText": "Codacy found an issue: Classes implementing Serializable should set a serialVersionUID", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548266", "createdAt": "2020-06-18T23:10:13Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/system/event/local/type/security/CompanyKeyResetEvent.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.dotcms.system.event.local.type.security;\n+\n+import java.io.Serializable;\n+import java.security.Key;\n+\n+\n+/**\n+ * This event is used to broadcast the info related with ResetKey event\n+ */\n+public class CompanyKeyResetEvent implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzcyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxNFrOGmDALg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxNFrOGmDALg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODI3MA==", "bodyText": "Codacy found an issue: Do not use an attribute called class.", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548270", "createdAt": "2020-06-18T23:10:14Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "diffHunk": "@@ -276,3 +320,28 @@\n         <%= LanguageUtil.get(pageContext, \"save\") %>\n     </button>\n </div>\n+\n+<div id=\"regenerateKeyDialog\" dojoType=\"dijit.Dialog\" style=\"display:none;width:500px;vertical-align: middle; \" draggable=\"true\" title=\"<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-prompt\") %>\" >\n+\n+\t<span class=\"ui-confirmdialog-message\" >\n+\t\t<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-warning\") %>\n+\t</span>\n+\n+    <div>\n+        <table class=\"sTypeTable\" style=\"width:90%; border-collapse: separate; border-spacing: 10px 15px;margin-bottom:10px;\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzczOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxNVrOGmDAMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxNVrOGmDAMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODI3Mg==", "bodyText": "Codacy found an issue: Avoid having style information in JSP files.", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548272", "createdAt": "2020-06-18T23:10:15Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "diffHunk": "@@ -276,3 +320,28 @@\n         <%= LanguageUtil.get(pageContext, \"save\") %>\n     </button>\n </div>\n+\n+<div id=\"regenerateKeyDialog\" dojoType=\"dijit.Dialog\" style=\"display:none;width:500px;vertical-align: middle; \" draggable=\"true\" title=\"<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-prompt\") %>\" >\n+\n+\t<span class=\"ui-confirmdialog-message\" >\n+\t\t<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-warning\") %>\n+\t</span>\n+\n+    <div>\n+        <table class=\"sTypeTable\" style=\"width:90%; border-collapse: separate; border-spacing: 10px 15px;margin-bottom:10px;\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzc3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/security/apps/AppsKeyDefaultProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxNlrOGmDANQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxNlrOGmDANQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODI3Nw==", "bodyText": "Codacy found an issue: A class which only has private constructors should be final", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548277", "createdAt": "2020-06-18T23:10:16Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/security/apps/AppsKeyDefaultProvider.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.dotcms.security.apps;\n+\n+import com.dotcms.auth.providers.jwt.factories.SigningKeyFactory;\n+import com.dotmarketing.business.APILocator;\n+import java.security.Key;\n+\n+public class AppsKeyDefaultProvider implements SigningKeyFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzc5OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/listener/SecurityKeyResetTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxN1rOGmDAOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxN1rOGmDAOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODI4MQ==", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548281", "createdAt": "2020-06-18T23:10:17Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/listener/SecurityKeyResetTest.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package com.dotcms.publishing.listener;\n+\n+import static com.dotcms.publisher.business.PublisherTestUtil.createEndpoint;\n+import static com.dotcms.publisher.business.PublisherTestUtil.createEnvironment;\n+\n+import com.dotcms.IntegrationTestBase;\n+import com.dotcms.LicenseTestUtil;\n+import com.dotcms.company.CompanyAPI;\n+import com.dotcms.company.CompanyAPIFactory;\n+import com.dotcms.datagen.TestUserUtils;\n+import com.dotcms.publisher.endpoint.bean.PublishingEndPoint;\n+import com.dotcms.publisher.endpoint.business.PublishingEndPointAPI;\n+import com.dotcms.publisher.environment.bean.Environment;\n+import com.dotcms.publisher.pusher.PushPublisher;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.business.APILocator;\n+import com.liferay.portal.model.Company;\n+import com.liferay.portal.model.User;\n+import com.liferay.util.Encryptor;\n+import java.security.Key;\n+import java.util.List;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class SecurityKeyResetTest extends IntegrationTestBase {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzgzOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxOFrOGmDAPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxOFrOGmDAPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODI4NQ==", "bodyText": "Codacy found an issue: Avoid having style information in JSP files.", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548285", "createdAt": "2020-06-18T23:10:18Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "diffHunk": "@@ -276,3 +320,28 @@\n         <%= LanguageUtil.get(pageContext, \"save\") %>\n     </button>\n </div>\n+\n+<div id=\"regenerateKeyDialog\" dojoType=\"dijit.Dialog\" style=\"display:none;width:500px;vertical-align: middle; \" draggable=\"true\" title=\"<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-prompt\") %>\" >\n+\n+\t<span class=\"ui-confirmdialog-message\" >\n+\t\t<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-warning\") %>\n+\t</span>\n+\n+    <div>\n+        <table class=\"sTypeTable\" style=\"width:90%; border-collapse: separate; border-spacing: 10px 15px;margin-bottom:10px;\">\n+          <tr>\n+\t\t\t<td style=\"width:50%;text-align: right\">\n+\t\t\t\t<button id=\"cancelButton\" dojoType=\"dijit.form.Button\" class=\"dijitButton\" data-dojo-props=\"onClick: regenerateKeyProxyCancel\">\n+\t\t\t\t\t<%= UtilMethods.escapeSingleQuotes(LanguageUtil.get(pageContext, \"cancel\")) %>\n+\t\t\t\t</button>\n+\t\t\t</td>\n+\t\t\t<td style=\"width:50%;text-align: left\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 172}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzg4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/listener/SecurityKeyResetTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxOVrOGmDAQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoxOVrOGmDAQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODI5MQ==", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548291", "createdAt": "2020-06-18T23:10:19Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/publishing/listener/SecurityKeyResetTest.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package com.dotcms.publishing.listener;\n+\n+import static com.dotcms.publisher.business.PublisherTestUtil.createEndpoint;\n+import static com.dotcms.publisher.business.PublisherTestUtil.createEnvironment;\n+\n+import com.dotcms.IntegrationTestBase;\n+import com.dotcms.LicenseTestUtil;\n+import com.dotcms.company.CompanyAPI;\n+import com.dotcms.company.CompanyAPIFactory;\n+import com.dotcms.datagen.TestUserUtils;\n+import com.dotcms.publisher.endpoint.bean.PublishingEndPoint;\n+import com.dotcms.publisher.endpoint.business.PublishingEndPointAPI;\n+import com.dotcms.publisher.environment.bean.Environment;\n+import com.dotcms.publisher.pusher.PushPublisher;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.business.APILocator;\n+import com.liferay.portal.model.Company;\n+import com.liferay.portal.model.User;\n+import com.liferay.util.Encryptor;\n+import java.security.Key;\n+import java.util.List;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class SecurityKeyResetTest extends IntegrationTestBase {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        //Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+        LicenseTestUtil.getLicense();\n+    }\n+\n+    /**\n+     * Given scenario: This basically tests that after a key reset the push publish endpoint are\n+     * still usable for decrypting important stuff using the new key; Expected: The endpoints that\n+     * were using the key that got re-generated remain usable.\n+     */\n+    @Test\n+    public void Test_Push_Publish_Endpoints_Have_Valid_Keys_After_Key_Reset_Expect_Success() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzkxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumnTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoyMFrOGmDASQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoyMFrOGmDASQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODI5Nw==", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548297", "createdAt": "2020-06-18T23:10:20Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task05350AddDotSaltClusterColumnTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.util.Logger;\n+import java.sql.SQLException;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class Task05350AddDotSaltClusterColumnTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+    }\n+\n+    private void dropColumn(final DotConnect dotConnect) throws SQLException {\n+        try {\n+            final String dropColumnSQL = \"ALTER TABLE dot_cluster DROP COLUMN cluster_salt\";\n+            dotConnect.executeStatement(dropColumnSQL);\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyMzk1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/publishing/listener/PushPublishKeyResetEventListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoyMVrOGmDAUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoyMVrOGmDAUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODMwNQ==", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548305", "createdAt": "2020-06-18T23:10:21Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/publishing/listener/PushPublishKeyResetEventListener.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.dotcms.publishing.listener;\n+\n+import com.dotcms.publisher.endpoint.bean.PublishingEndPoint;\n+import com.dotcms.publisher.endpoint.business.PublishingEndPointAPI;\n+import com.dotcms.system.event.local.model.EventSubscriber;\n+import com.dotcms.system.event.local.type.security.CompanyKeyResetEvent;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.util.Logger;\n+import com.liferay.util.Encryptor;\n+import java.security.Key;\n+import java.util.List;\n+\n+/**\n+ * Once registered this listener takes care or recreating the Push-Publish Auth-Keys\n+ * First decrypting the old content using the original Key then re-inserting it using the new Key.\n+ */\n+public final class PushPublishKeyResetEventListener implements EventSubscriber<CompanyKeyResetEvent> {\n+\n+    private final PublishingEndPointAPI publishingEndPointAPI;\n+\n+    private PushPublishKeyResetEventListener(final PublishingEndPointAPI publishingEndPointAPI) {\n+        this.publishingEndPointAPI = publishingEndPointAPI;\n+    }\n+\n+    private PushPublishKeyResetEventListener() {\n+       this(APILocator.getPublisherEndPointAPI());\n+    }\n+\n+    @Override\n+    public void notify(final CompanyKeyResetEvent event) {\n+        try {\n+            final Key originalKey = event.getOriginalKey();\n+            final Key newKey = event.getResetKey();\n+            final List<PublishingEndPoint> allEndPoints = publishingEndPointAPI.getAllEndPoints();\n+            for (final PublishingEndPoint publishingEndPoint : allEndPoints) {\n+                try {\n+                    final StringBuilder originalAuthKey = publishingEndPoint.getAuthKey();\n+                    final String authKey = Encryptor.decrypt(originalKey, originalAuthKey.toString());\n+                    final String encryptedKey = Encryptor.encrypt(newKey,authKey);\n+                    publishingEndPoint.setAuthKey(new StringBuilder(encryptedKey));\n+                } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzEyNDAwOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoyMlrOGmDAVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoxMDoyMlrOGmDAVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0ODMxMQ==", "bodyText": "Codacy found an issue: Do not use an attribute called class.", "url": "https://github.com/dotCMS/core/pull/18638#discussion_r442548311", "createdAt": "2020-06-18T23:10:22Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/webapp/html/portlet/ext/cmsconfig/company.jsp", "diffHunk": "@@ -276,3 +320,28 @@\n         <%= LanguageUtil.get(pageContext, \"save\") %>\n     </button>\n </div>\n+\n+<div id=\"regenerateKeyDialog\" dojoType=\"dijit.Dialog\" style=\"display:none;width:500px;vertical-align: middle; \" draggable=\"true\" title=\"<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-prompt\") %>\" >\n+\n+\t<span class=\"ui-confirmdialog-message\" >\n+\t\t<%= LanguageUtil.get(pageContext, \"key-digest-regenerate-warning\") %>\n+\t</span>\n+\n+    <div>\n+        <table class=\"sTypeTable\" style=\"width:90%; border-collapse: separate; border-spacing: 10px 15px;margin-bottom:10px;\">\n+          <tr>\n+\t\t\t<td style=\"width:50%;text-align: right\">\n+\t\t\t\t<button id=\"cancelButton\" dojoType=\"dijit.form.Button\" class=\"dijitButton\" data-dojo-props=\"onClick: regenerateKeyProxyCancel\">\n+\t\t\t\t\t<%= UtilMethods.escapeSingleQuotes(LanguageUtil.get(pageContext, \"cancel\")) %>\n+\t\t\t\t</button>\n+\t\t\t</td>\n+\t\t\t<td style=\"width:50%;text-align: left\">\n+\t\t\t\t<button id=\"okButton\" dojoType=\"dijit.form.Button\" class=\"dijitButton\" data-dojo-props=\"onClick: regenerateKeyProxyOk\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078baf5b98c5c22e48f68ecccc48a8f468335d98"}, "originalPosition": 173}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2149, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}