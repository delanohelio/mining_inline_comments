{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODExNzAy", "number": 18437, "title": "#18363 pagination fix", "bodyText": "The pagination wasn't working as expected", "createdAt": "2020-05-06T00:03:24Z", "url": "https://github.com/dotCMS/core/pull/18437", "merged": true, "mergeCommit": {"oid": "1c1ff026813e2e774d6880270b725f814912a109"}, "closed": true, "closedAt": "2020-05-06T21:02:17Z", "author": {"login": "jdotcms"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcedKwEAH2gAyNDEzODExNzAyOmY5MWViNWQwN2Q0YjY1Y2UzNDczNGNjMmVhNDQ0YzQzYzVjMTNiM2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcethq_gFqTQwNjkwNjQ3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f91eb5d07d4b65ce34734cc2ea444c43c5c13b3c", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/f91eb5d07d4b65ce34734cc2ea444c43c5c13b3c", "committedDate": "2020-05-06T00:02:48Z", "message": "#18363 pagination fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6decc750f57980a53a40731b032f6661ef7faf8", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/c6decc750f57980a53a40731b032f6661ef7faf8", "committedDate": "2020-05-06T00:08:08Z", "message": "#18363 pagination fix2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NjQ1MzE5", "url": "https://github.com/dotCMS/core/pull/18437#pullrequestreview-406645319", "createdAt": "2020-05-06T14:03:38Z", "commit": {"oid": "c6decc750f57980a53a40731b032f6661ef7faf8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NjUyMTg3", "url": "https://github.com/dotCMS/core/pull/18437#pullrequestreview-406652187", "createdAt": "2020-05-06T14:10:42Z", "commit": {"oid": "c6decc750f57980a53a40731b032f6661ef7faf8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NjU2NzYw", "url": "https://github.com/dotCMS/core/pull/18437#pullrequestreview-406656760", "createdAt": "2020-05-06T14:15:26Z", "commit": {"oid": "c6decc750f57980a53a40731b032f6661ef7faf8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dd435d28224f5133d6f9fea2963896327004f8e", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/1dd435d28224f5133d6f9fea2963896327004f8e", "committedDate": "2020-05-06T17:41:32Z", "message": "#18363 adding unit test for pagination"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODUwODcw", "url": "https://github.com/dotCMS/core/pull/18437#pullrequestreview-406850870", "createdAt": "2020-05-06T17:51:25Z", "commit": {"oid": "1dd435d28224f5133d6f9fea2963896327004f8e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/649f7bc5e0dc51e1c76cc495c8d0eab478e94f02", "committedDate": "2020-05-06T17:57:31Z", "message": "#18363 adding unit test for pagination doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODYwNTY5", "url": "https://github.com/dotCMS/core/pull/18437#pullrequestreview-406860569", "createdAt": "2020-05-06T18:03:56Z", "commit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1N1rOGRfFJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1N1rOGRfFJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4ODE5OQ==", "bodyText": "Issue found: Avoid declaring a variable if it is unreferenced before a possible exit point.", "url": "https://github.com/dotCMS/core/pull/18437#discussion_r420988199", "createdAt": "2020-05-06T18:03:57Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/browser/BrowserAPIImpl.java", "diffHunk": "@@ -60,6 +62,7 @@\n     @CloseDBIfOpened\n     public Map<String, Object> getFolderContent(final BrowserQuery browserQuery) throws DotSecurityException, DotDataException {\n \n+        final MutableInt countItems                     = new MutableInt(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODYwNTg1", "url": "https://github.com/dotCMS/core/pull/18437#pullrequestreview-406860585", "createdAt": "2020-05-06T18:03:57Z", "commit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1OFrOGRfFSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1OFrOGRfFSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4ODIzMg==", "bodyText": "Issue found: The String literal \"total\" appears 5 times in this file; the first occurrence is on line 149", "url": "https://github.com/dotCMS/core/pull/18437#discussion_r420988232", "createdAt": "2020-05-06T18:03:58Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/browser/BrowserAPITest.java", "diffHunk": "@@ -113,7 +117,108 @@ public static void prepare() throws Exception {\n \n     }\n \n-    \n+    /**\n+     * Method to test: testing the pagination of the BrowserAPI, the test creates a site and a folder, them add 100 files and iterate over them with the browser api\n+     * Given Scenario: 1)  request items from 0 to 10\n+     *                  2) request items form 10 to 60\n+     *                  3) request items form 60 to 100\n+     *                  4) out of range\n+     * ExpectedResult: Must have always 100 files as a total, and should retrieve the respective items per request\n+     *\n+     */\n+\n+    @Test()\n+    public void test_GetFolderContent_pagination() throws DotDataException, DotSecurityException, IOException {\n+\n+        // create a folder\n+        // create a 100 files\n+        // paginate 10 in 100\n+        final SiteDataGen   siteDataGen   = new SiteDataGen();\n+        final FolderDataGen folderDataGen = new FolderDataGen();\n+        final Host          host          = siteDataGen.nextPersisted();\n+        final Folder        folder        = folderDataGen.site(host).nextPersisted();\n+\n+        for (int i = 0; i < 100; ++i) {\n+\n+            new FileAssetDataGen(FileUtil.createTemporalFile(\"test\", \".txt\", \"this is a test\")).host(host)\n+                    .folder(folder).setPolicy(IndexPolicy.WAIT_FOR).nextPersisted();\n+        }\n+\n+        Map<String, Object> resultMap = browserAPI.getFolderContent(BrowserQuery.builder()\n+                .showDotAssets(true)\n+                .showLinks(true)\n+                .withHostOrFolderId(folder.getIdentifier())\n+                .offset(0)\n+                .showFiles(true)\n+                .showFolders(true)\n+                .showWorking(true)\n+                .maxResults(10)\n+                .build());\n+\n+        assertNotNull(resultMap);\n+        assertEquals(100l, resultMap.get(\"total\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODYwNjAz", "url": "https://github.com/dotCMS/core/pull/18437#pullrequestreview-406860603", "createdAt": "2020-05-06T18:03:58Z", "commit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1OVrOGRfFXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMzo1OVrOGRfFXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4ODI1NA==", "bodyText": "Issue found: The String literal \"list\" appears 6 times in this file; the first occurrence is on line 151", "url": "https://github.com/dotCMS/core/pull/18437#discussion_r420988254", "createdAt": "2020-05-06T18:03:59Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/browser/BrowserAPITest.java", "diffHunk": "@@ -113,7 +117,108 @@ public static void prepare() throws Exception {\n \n     }\n \n-    \n+    /**\n+     * Method to test: testing the pagination of the BrowserAPI, the test creates a site and a folder, them add 100 files and iterate over them with the browser api\n+     * Given Scenario: 1)  request items from 0 to 10\n+     *                  2) request items form 10 to 60\n+     *                  3) request items form 60 to 100\n+     *                  4) out of range\n+     * ExpectedResult: Must have always 100 files as a total, and should retrieve the respective items per request\n+     *\n+     */\n+\n+    @Test()\n+    public void test_GetFolderContent_pagination() throws DotDataException, DotSecurityException, IOException {\n+\n+        // create a folder\n+        // create a 100 files\n+        // paginate 10 in 100\n+        final SiteDataGen   siteDataGen   = new SiteDataGen();\n+        final FolderDataGen folderDataGen = new FolderDataGen();\n+        final Host          host          = siteDataGen.nextPersisted();\n+        final Folder        folder        = folderDataGen.site(host).nextPersisted();\n+\n+        for (int i = 0; i < 100; ++i) {\n+\n+            new FileAssetDataGen(FileUtil.createTemporalFile(\"test\", \".txt\", \"this is a test\")).host(host)\n+                    .folder(folder).setPolicy(IndexPolicy.WAIT_FOR).nextPersisted();\n+        }\n+\n+        Map<String, Object> resultMap = browserAPI.getFolderContent(BrowserQuery.builder()\n+                .showDotAssets(true)\n+                .showLinks(true)\n+                .withHostOrFolderId(folder.getIdentifier())\n+                .offset(0)\n+                .showFiles(true)\n+                .showFolders(true)\n+                .showWorking(true)\n+                .maxResults(10)\n+                .build());\n+\n+        assertNotNull(resultMap);\n+        assertEquals(100l, resultMap.get(\"total\"));\n+\n+        List<Map<String, Object>> results = (List<Map<String, Object>>)resultMap.get(\"list\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2OTA2NDcw", "url": "https://github.com/dotCMS/core/pull/18437#pullrequestreview-406906470", "createdAt": "2020-05-06T19:06:19Z", "commit": {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1081, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}