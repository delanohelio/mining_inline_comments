{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNDQzMzE2", "number": 18548, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMzo0NToyMlrOD_4euA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMjo1MVrOEBD-eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzEyMjQ4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMzo0NToyMlrOGaz7VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzo1MTozNlrOGbhETg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2NjkzMw==", "bodyText": "language shouldn't be a query parameter.\nPathing should be\nv2/languages/{language}/i18n to get all the messages for a language", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r430766933", "createdAt": "2020-05-26T23:45:22Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -184,6 +188,38 @@ public Response getMessages(@Context HttpServletRequest request,\n         return oldLanguagesResource.getMessages(request, i18NForm);\n     }\n \n+    /**\n+     * Gets all the Messages from the language passed.\n+     *\n+     * If no language is passed will use the default language.\n+     * @param request\n+     * @param response\n+     * @param language languageId or languageCountryCode e.g en_us, it_it\n+     * @return all the messages of the language\n+     */\n+    @GET\n+    @Path(\"/i18n/all\")\n+    @JSONP\n+    @NoCache\n+    @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n+    public Response getAllMessages (\n+            @Context final HttpServletRequest request,\n+            @Context final HttpServletResponse response,\n+            @DefaultValue(\"-1\") @QueryParam(\"language\") final String language){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a95ccce6c51ca2ccc1d18d67f85a95e770ab15d8"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2NzMwNA==", "bodyText": "Requesting changes above", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r430767304", "createdAt": "2020-05-26T23:46:32Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -184,6 +188,38 @@ public Response getMessages(@Context HttpServletRequest request,\n         return oldLanguagesResource.getMessages(request, i18NForm);\n     }\n \n+    /**\n+     * Gets all the Messages from the language passed.\n+     *\n+     * If no language is passed will use the default language.\n+     * @param request\n+     * @param response\n+     * @param language languageId or languageCountryCode e.g en_us, it_it\n+     * @return all the messages of the language\n+     */\n+    @GET\n+    @Path(\"/i18n/all\")\n+    @JSONP\n+    @NoCache\n+    @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n+    public Response getAllMessages (\n+            @Context final HttpServletRequest request,\n+            @Context final HttpServletResponse response,\n+            @DefaultValue(\"-1\") @QueryParam(\"language\") final String language){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2NjkzMw=="}, "originalCommit": {"oid": "a95ccce6c51ca2ccc1d18d67f85a95e770ab15d8"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI0NDkwMQ==", "bodyText": "The lang is optional, that's why is a queryparam.", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r431244901", "createdAt": "2020-05-27T15:45:16Z", "author": {"login": "fmontes"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -184,6 +188,38 @@ public Response getMessages(@Context HttpServletRequest request,\n         return oldLanguagesResource.getMessages(request, i18NForm);\n     }\n \n+    /**\n+     * Gets all the Messages from the language passed.\n+     *\n+     * If no language is passed will use the default language.\n+     * @param request\n+     * @param response\n+     * @param language languageId or languageCountryCode e.g en_us, it_it\n+     * @return all the messages of the language\n+     */\n+    @GET\n+    @Path(\"/i18n/all\")\n+    @JSONP\n+    @NoCache\n+    @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n+    public Response getAllMessages (\n+            @Context final HttpServletRequest request,\n+            @Context final HttpServletResponse response,\n+            @DefaultValue(\"-1\") @QueryParam(\"language\") final String language){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2NjkzMw=="}, "originalCommit": {"oid": "a95ccce6c51ca2ccc1d18d67f85a95e770ab15d8"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUwNjUxMA==", "bodyText": "done", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r431506510", "createdAt": "2020-05-27T23:51:36Z", "author": {"login": "erickgonzalez"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -184,6 +188,38 @@ public Response getMessages(@Context HttpServletRequest request,\n         return oldLanguagesResource.getMessages(request, i18NForm);\n     }\n \n+    /**\n+     * Gets all the Messages from the language passed.\n+     *\n+     * If no language is passed will use the default language.\n+     * @param request\n+     * @param response\n+     * @param language languageId or languageCountryCode e.g en_us, it_it\n+     * @return all the messages of the language\n+     */\n+    @GET\n+    @Path(\"/i18n/all\")\n+    @JSONP\n+    @NoCache\n+    @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n+    public Response getAllMessages (\n+            @Context final HttpServletRequest request,\n+            @Context final HttpServletResponse response,\n+            @DefaultValue(\"-1\") @QueryParam(\"language\") final String language){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2NjkzMw=="}, "originalCommit": {"oid": "a95ccce6c51ca2ccc1d18d67f85a95e770ab15d8"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTM1ODUyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo0ODo1NlrOGctQcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMjo1MDo0NlrOGcuXJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1NDgwMw==", "bodyText": "missing test in method name", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432754803", "createdAt": "2020-05-29T21:48:56Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -70,12 +73,18 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n     }\n \n     @Test\n-    public void getLanguageId_existing_base_expected_non_negative_lang_Test() throws DotSecurityException, DotDataException, SystemException {\n-\n-        final Language baseLanguage = new LanguageDataGen().languageCode(\"fr\").countryCode(null).nextPersisted();\n-        final Language frLanguage   = new LanguageDataGen().languageCode(\"fr\").countryCode(\"FR\").nextPersisted();\n+    public void getLanguageId_existing_base_expected_non_negative_lang_Test() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dadb1eac096767320e67cbe9a5c2049293665bc"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3MjkwMA==", "bodyText": "done", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432772900", "createdAt": "2020-05-29T22:50:46Z", "author": {"login": "erickgonzalez"}, "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -70,12 +73,18 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n     }\n \n     @Test\n-    public void getLanguageId_existing_base_expected_non_negative_lang_Test() throws DotSecurityException, DotDataException, SystemException {\n-\n-        final Language baseLanguage = new LanguageDataGen().languageCode(\"fr\").countryCode(null).nextPersisted();\n-        final Language frLanguage   = new LanguageDataGen().languageCode(\"fr\").countryCode(\"FR\").nextPersisted();\n+    public void getLanguageId_existing_base_expected_non_negative_lang_Test() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1NDgwMw=="}, "originalCommit": {"oid": "9dadb1eac096767320e67cbe9a5c2049293665bc"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTQ3ODQ1OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMjo1MzozOFrOGcuZyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMjo1Njo1OFrOGcucug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3MzU3OQ==", "bodyText": "start the class name with Uppercase", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432773579", "createdAt": "2020-05-29T22:53:38Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -69,31 +77,61 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n         APILocator.getLanguageAPI().deleteLanguage(language);\n     }\n \n+    private static class testCaseLanguageLocale{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57ce04a6a301fa0b4b387050fb0b0eb0315db921"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NDMzMA==", "bodyText": "done", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432774330", "createdAt": "2020-05-29T22:56:58Z", "author": {"login": "erickgonzalez"}, "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -69,31 +77,61 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n         APILocator.getLanguageAPI().deleteLanguage(language);\n     }\n \n+    private static class testCaseLanguageLocale{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3MzU3OQ=="}, "originalCommit": {"oid": "57ce04a6a301fa0b4b387050fb0b0eb0315db921"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTQ5MTcyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMjo0OVrOGcuh8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMjo0OVrOGcuh8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NTY2NA==", "bodyText": "Issue found: Avoid unused imports such as 'javax.ws.rs.DefaultValue'", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432775664", "createdAt": "2020-05-29T23:02:49Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -23,12 +23,16 @@\n import com.dotmarketing.util.StringUtils;\n import com.dotmarketing.util.UtilMethods;\n import com.google.common.collect.ImmutableList;\n+import com.liferay.portal.language.LanguageUtil;\n import com.liferay.portal.model.User;\n import com.rainerhahnekamp.sneakythrow.Sneaky;\n import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.ws.rs.DELETE;\n+import javax.ws.rs.DefaultValue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2eed7681a102ba600577ea40b5890be3fdfd190"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTQ5MTc0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMjo1MFrOGcuh8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMjo1MFrOGcuh8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NTY2Nw==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432775667", "createdAt": "2020-05-29T23:02:50Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -69,31 +76,61 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n         APILocator.getLanguageAPI().deleteLanguage(language);\n     }\n \n+    private static class TestCaseLanguageLocale {\n+        String localeRequested;\n+        long expectedLangId;\n+\n+        TestCaseLanguageLocale(final String localeRequested,final long expectedLangId){\n+            this.localeRequested = localeRequested;\n+            this.expectedLangId = expectedLangId;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] testCasesLanguageLocale() throws Exception {\n+\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+\n+        final Language baseLanguage = (UtilMethods.isSet(APILocator.getLanguageAPI().getLanguage(\"fr\",null))) ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2eed7681a102ba600577ea40b5890be3fdfd190"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTQ5MTc3OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMjo1MVrOGcuh9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMjo1MVrOGcuh9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NTY3MA==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432775670", "createdAt": "2020-05-29T23:02:51Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -69,31 +76,61 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n         APILocator.getLanguageAPI().deleteLanguage(language);\n     }\n \n+    private static class TestCaseLanguageLocale {\n+        String localeRequested;\n+        long expectedLangId;\n+\n+        TestCaseLanguageLocale(final String localeRequested,final long expectedLangId){\n+            this.localeRequested = localeRequested;\n+            this.expectedLangId = expectedLangId;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] testCasesLanguageLocale() throws Exception {\n+\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+\n+        final Language baseLanguage = (UtilMethods.isSet(APILocator.getLanguageAPI().getLanguage(\"fr\",null))) ?\n+                APILocator.getLanguageAPI().getLanguage(\"fr\",null) :\n+                new LanguageDataGen().languageCode(\"fr\").countryCode(null).nextPersisted();\n+        final Language frLanguage   = (UtilMethods.isSet(APILocator.getLanguageAPI().getLanguage(\"fr\",\"fr\"))) ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2eed7681a102ba600577ea40b5890be3fdfd190"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTQ5MTc4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMjo1MlrOGcuh-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMjo1MlrOGcuh-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NTY3NA==", "bodyText": "Issue found: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432775674", "createdAt": "2020-05-29T23:02:52Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -69,31 +76,61 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n         APILocator.getLanguageAPI().deleteLanguage(language);\n     }\n \n+    private static class TestCaseLanguageLocale {\n+        String localeRequested;\n+        long expectedLangId;\n+\n+        TestCaseLanguageLocale(final String localeRequested,final long expectedLangId){\n+            this.localeRequested = localeRequested;\n+            this.expectedLangId = expectedLangId;\n+        }\n+    }\n+\n+    @DataProvider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2eed7681a102ba600577ea40b5890be3fdfd190"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2101, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}