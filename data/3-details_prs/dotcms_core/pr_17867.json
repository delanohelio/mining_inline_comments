{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MzI5MjQ4", "number": 17867, "title": "#17864 fixed with test", "bodyText": "Adds a new method that populates the content map with the values of any constant fields of its content type.", "createdAt": "2020-01-17T21:38:11Z", "url": "https://github.com/dotCMS/core/pull/17867", "merged": true, "mergeCommit": {"oid": "17045393d8d8a19c82b6f690dc7905c8a528e4e3"}, "closed": true, "closedAt": "2020-01-22T15:38:16Z", "author": {"login": "wezell"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7VbjpAH2gAyMzY0MzI5MjQ4OjIyNDRhZTBkZWZjNmUyZTc3YTRkYjUzZTY3YTJlOTkyMmUzNjc3YTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9Nx26AFqTM0NzQ3NzU0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8", "author": {"user": {"login": "wezell", "name": "Will Ezell"}}, "url": "https://github.com/dotCMS/core/commit/2244ae0defc6e2e77a4db53e67a2e9922e3677a8", "committedDate": "2020-01-17T21:14:34Z", "message": "#17864 fixed with test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODU5NTcz", "url": "https://github.com/dotCMS/core/pull/17867#pullrequestreview-344859573", "createdAt": "2020-01-17T21:47:56Z", "commit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0Nzo1NlrOFfGGXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0Nzo1NlrOFfGGXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MDExMA==", "bodyText": "Issue found: Avoid unused imports such as 'java.util.Set'", "url": "https://github.com/dotCMS/core/pull/17867#discussion_r368150110", "createdAt": "2020-01-17T21:47:56Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/contentlet/transform/ContentletTransformerTest.java", "diffHunk": "@@ -21,10 +24,14 @@\n import com.dotmarketing.portlets.contentlet.struts.ContentletForm;\n import com.dotmarketing.portlets.htmlpageasset.business.HTMLPageAssetAPI;\n import com.dotmarketing.portlets.workflows.business.BaseWorkflowIntegrationTest;\n+import com.dotmarketing.util.UUIDGenerator;\n+import com.twelvemonkeys.util.LinkedSet;\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n+import java.util.Set;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODU5NTgz", "url": "https://github.com/dotCMS/core/pull/17867#pullrequestreview-344859583", "createdAt": "2020-01-17T21:47:57Z", "commit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0Nzo1N1rOFfGGZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0Nzo1N1rOFfGGZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MDExOQ==", "bodyText": "Issue found: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/17867#discussion_r368150119", "createdAt": "2020-01-17T21:47:57Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/contentlet/transform/ContentletTransformerTest.java", "diffHunk": "@@ -166,6 +175,68 @@ public String getUrl(Contentlet contentlet) {\n         assertEquals(urlExpected, newContentlet.getMap().get(HTMLPageAssetAPI.URL_FIELD));\n         assertFalse(newContentlet.getMap().containsKey(Contentlet.NULL_PROPERTIES));\n     }\n+    \n+    /**\n+     * this test creates a widget type that has constant fields and a content of this type.\n+     * It updates the constant field values and insures that the new constant field values are both\n+     * in the content object and the newly transformed map\n+     * @throws Exception\n+     */\n+    @Test\n+    public void Test_Constant_fields_are_in_map() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODU5NTkx", "url": "https://github.com/dotCMS/core/pull/17867#pullrequestreview-344859591", "createdAt": "2020-01-17T21:47:58Z", "commit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0Nzo1OFrOFfGGbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0Nzo1OFrOFfGGbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MDEyNQ==", "bodyText": "Issue found: Local variable 'newField' could be declared final", "url": "https://github.com/dotCMS/core/pull/17867#discussion_r368150125", "createdAt": "2020-01-17T21:47:58Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/contentlet/transform/ContentletTransformerTest.java", "diffHunk": "@@ -166,6 +175,68 @@ public String getUrl(Contentlet contentlet) {\n         assertEquals(urlExpected, newContentlet.getMap().get(HTMLPageAssetAPI.URL_FIELD));\n         assertFalse(newContentlet.getMap().containsKey(Contentlet.NULL_PROPERTIES));\n     }\n+    \n+    /**\n+     * this test creates a widget type that has constant fields and a content of this type.\n+     * It updates the constant field values and insures that the new constant field values are both\n+     * in the content object and the newly transformed map\n+     * @throws Exception\n+     */\n+    @Test\n+    public void Test_Constant_fields_are_in_map() throws Exception {\n+        \n+        \n+        // create a widget and a content of that widget;\n+        final ContentType widgetLikeContenType = TestDataUtils.getWidgetLikeContentType();\n+        final Contentlet newContentlet = TestDataUtils.getWidgetContent(true, 1, widgetLikeContenType.id());\n+        assertNotNull(newContentlet);\n+\n+        final List<Field> constants = widgetLikeContenType.fields(ConstantField.class);\n+        \n+        final String constantVar1 = constants.get(0).variable();\n+        final String constantVar2 = constants.get(1).variable();\n+        \n+        // assert our content type has no constant values in it\n+        assertTrue(constants.size()>1);\n+        assertNull(constants.get(0).values());\n+        assertNull(constants.get(1).values());\n+        \n+        // assert our content Map has no constant values in it\n+        Map<String,Object> map = new ContentletToMapTransformer(newContentlet).toMaps().get(0);\n+        assertNull(map.get(constantVar1));\n+        assertNull(map.get(constantVar2));\n+        \n+        \n+        // update our Content Type constants to have values\n+        final List<Field> allFields = new ArrayList<>(widgetLikeContenType.fields());\n+        allFields.removeIf(f->constants.contains(f));\n+        for(final Field field : constants) {\n+            final String value = UUIDGenerator.generateUuid();\n+            Field newField = FieldBuilder.builder(field).values(value).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODU5NjAz", "url": "https://github.com/dotCMS/core/pull/17867#pullrequestreview-344859603", "createdAt": "2020-01-17T21:47:59Z", "commit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0Nzo1OVrOFfGGdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0Nzo1OVrOFfGGdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MDEzMw==", "bodyText": "Issue found: Avoid unused imports such as 'com.twelvemonkeys.util.LinkedSet'", "url": "https://github.com/dotCMS/core/pull/17867#discussion_r368150133", "createdAt": "2020-01-17T21:47:59Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/contentlet/transform/ContentletTransformerTest.java", "diffHunk": "@@ -21,10 +24,14 @@\n import com.dotmarketing.portlets.contentlet.struts.ContentletForm;\n import com.dotmarketing.portlets.htmlpageasset.business.HTMLPageAssetAPI;\n import com.dotmarketing.portlets.workflows.business.BaseWorkflowIntegrationTest;\n+import com.dotmarketing.util.UUIDGenerator;\n+import com.twelvemonkeys.util.LinkedSet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODU5NjA2", "url": "https://github.com/dotCMS/core/pull/17867#pullrequestreview-344859606", "createdAt": "2020-01-17T21:48:01Z", "commit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0ODowMVrOFfGGew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0ODowMVrOFfGGew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MDEzOQ==", "bodyText": "Issue found: Local variable 'updatedType' could be declared final", "url": "https://github.com/dotCMS/core/pull/17867#discussion_r368150139", "createdAt": "2020-01-17T21:48:01Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/contentlet/transform/ContentletTransformerTest.java", "diffHunk": "@@ -166,6 +175,68 @@ public String getUrl(Contentlet contentlet) {\n         assertEquals(urlExpected, newContentlet.getMap().get(HTMLPageAssetAPI.URL_FIELD));\n         assertFalse(newContentlet.getMap().containsKey(Contentlet.NULL_PROPERTIES));\n     }\n+    \n+    /**\n+     * this test creates a widget type that has constant fields and a content of this type.\n+     * It updates the constant field values and insures that the new constant field values are both\n+     * in the content object and the newly transformed map\n+     * @throws Exception\n+     */\n+    @Test\n+    public void Test_Constant_fields_are_in_map() throws Exception {\n+        \n+        \n+        // create a widget and a content of that widget;\n+        final ContentType widgetLikeContenType = TestDataUtils.getWidgetLikeContentType();\n+        final Contentlet newContentlet = TestDataUtils.getWidgetContent(true, 1, widgetLikeContenType.id());\n+        assertNotNull(newContentlet);\n+\n+        final List<Field> constants = widgetLikeContenType.fields(ConstantField.class);\n+        \n+        final String constantVar1 = constants.get(0).variable();\n+        final String constantVar2 = constants.get(1).variable();\n+        \n+        // assert our content type has no constant values in it\n+        assertTrue(constants.size()>1);\n+        assertNull(constants.get(0).values());\n+        assertNull(constants.get(1).values());\n+        \n+        // assert our content Map has no constant values in it\n+        Map<String,Object> map = new ContentletToMapTransformer(newContentlet).toMaps().get(0);\n+        assertNull(map.get(constantVar1));\n+        assertNull(map.get(constantVar2));\n+        \n+        \n+        // update our Content Type constants to have values\n+        final List<Field> allFields = new ArrayList<>(widgetLikeContenType.fields());\n+        allFields.removeIf(f->constants.contains(f));\n+        for(final Field field : constants) {\n+            final String value = UUIDGenerator.generateUuid();\n+            Field newField = FieldBuilder.builder(field).values(value).build();\n+            allFields.add(newField);\n+        }\n+        ContentType updatedType =APILocator.getContentTypeAPI(APILocator.systemUser()).save(widgetLikeContenType, allFields);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "originalPosition": 89}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1OTkzOTM4", "url": "https://github.com/dotCMS/core/pull/17867#pullrequestreview-345993938", "createdAt": "2020-01-21T16:02:29Z", "commit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MTU3ODQ4", "url": "https://github.com/dotCMS/core/pull/17867#pullrequestreview-346157848", "createdAt": "2020-01-21T20:08:13Z", "commit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NDc3NTQw", "url": "https://github.com/dotCMS/core/pull/17867#pullrequestreview-347477540", "createdAt": "2020-01-23T17:27:32Z", "commit": {"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1324, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}