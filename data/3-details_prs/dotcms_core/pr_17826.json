{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjI5NTM0", "number": 17826, "title": "Issue 17772 binary validations", "bodyText": "With this change the properties allowedFileTypes and maxFileLength when added to a Binary field into a content type are being respects.\nmaxFileLength supports conventions such as 1kb, 1mb, 1gb\nallowedFileTypes supports mime type with wildcards such as text/, application/, or specific ones such as application/pdf, separated by commas.\nSo, When checkin a contentlet with a binary fields, if these validations are in placed, will be fired and throw an exception if not compliance.\nIn addition, a small change has been made in order to support hooks by osgi when called the validateContentlet inside the checkin.", "createdAt": "2020-01-10T21:29:33Z", "url": "https://github.com/dotCMS/core/pull/17826", "merged": true, "mergeCommit": {"oid": "115628fb751b53efc5dd05b926c8e5ef104cceca"}, "closed": true, "closedAt": "2020-02-06T15:37:34Z", "author": {"login": "jgambarios"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb30JhvAH2gAyMzYxNjI5NTM0OmIzYWQyZWFhMDFjYTgyOGQxOTgyM2M1MTU4MjQ5MzlhOGExZDQwZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBEsaMAFqTM1MzE0OTU4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b3ad2eaa01ca828d19823c515824939a8a1d40d2", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/b3ad2eaa01ca828d19823c515824939a8a1d40d2", "committedDate": "2020-01-06T22:46:14Z", "message": "#17772 adding validations for binary files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0600bd67191bf6da6113fe777e37d4290bed482", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/d0600bd67191bf6da6113fe777e37d4290bed482", "committedDate": "2020-01-07T19:35:50Z", "message": "#17772 unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "449a815d74b58e21a4a852ebe1b868d6cbf93883", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/449a815d74b58e21a4a852ebe1b868d6cbf93883", "committedDate": "2020-01-07T20:09:20Z", "message": "#17772 feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf019ca5368e2dc37f95fe2fd85a91286b531b57", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/cf019ca5368e2dc37f95fe2fd85a91286b531b57", "committedDate": "2020-01-07T20:09:37Z", "message": "#17772 feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd75eb00f5335b17c4d9ae92a463bbb56163532", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/8cd75eb00f5335b17c4d9ae92a463bbb56163532", "committedDate": "2020-01-07T23:01:35Z", "message": "#17772 feedback 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86e2be6c1e19ef7c0b4f0ddbfa9a5c2e2cd5b828", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/86e2be6c1e19ef7c0b4f0ddbfa9a5c2e2cd5b828", "committedDate": "2020-01-08T18:18:56Z", "message": "#17772 adding feedback and fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa1bd84b08529a7afe4f202616c2551234e43ab8", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/fa1bd84b08529a7afe4f202616c2551234e43ab8", "committedDate": "2020-01-09T18:14:19Z", "message": "#17772 adding fixes, refactoring and test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8696da7c5e9a3f75b2f9df089d8006edc29f7cf", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/d8696da7c5e9a3f75b2f9df089d8006edc29f7cf", "committedDate": "2020-01-09T18:28:30Z", "message": "#17772 adding fixes, refactoring and test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40b3eba569977c5ff5f9254797c8379ee03cc8df", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/40b3eba569977c5ff5f9254797c8379ee03cc8df", "committedDate": "2020-01-13T21:39:51Z", "message": "#17772 adding a fix to ignore the field variable keys from jackson"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNjYxNjE1", "url": "https://github.com/dotCMS/core/pull/17826#pullrequestreview-342661615", "createdAt": "2020-01-14T16:22:13Z", "commit": {"oid": "40b3eba569977c5ff5f9254797c8379ee03cc8df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "339154d57a0fda67203c4b1549873daf11a66ad9", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/339154d57a0fda67203c4b1549873daf11a66ad9", "committedDate": "2020-01-14T21:37:23Z", "message": "#17772 feedback done"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTQ1OTA5", "url": "https://github.com/dotCMS/core/pull/17826#pullrequestreview-343545909", "createdAt": "2020-01-15T21:51:02Z", "commit": {"oid": "339154d57a0fda67203c4b1549873daf11a66ad9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMzQwODU5", "url": "https://github.com/dotCMS/core/pull/17826#pullrequestreview-352340859", "createdAt": "2020-02-03T15:30:10Z", "commit": {"oid": "339154d57a0fda67203c4b1549873daf11a66ad9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107", "author": {"user": {"login": "jdotcms", "name": "Jonathan"}}, "url": "https://github.com/dotCMS/core/commit/cd20109c5a2babb8a13014744225a1bf2303d107", "committedDate": "2020-02-04T15:57:01Z", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17772-binary-validations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTQ5NDcz", "url": "https://github.com/dotCMS/core/pull/17826#pullrequestreview-353149473", "createdAt": "2020-02-04T17:08:00Z", "commit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowMFrOFlcMGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowMFrOFlcMGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzQ4Mw==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803483", "createdAt": "2020-02-04T17:08:00Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "diffHunk": "@@ -13,6 +13,40 @@\n  */\n public class ConversionUtilsTest extends UnitTestBase {\n \n+    @Test\n+    public void toLongFromByteCountHumanDisplaySizeTest () {\n+\n+        long value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"0\", -1l);\n+        Assert.assertEquals(0l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"10\", -1l);\n+        Assert.assertEquals(10l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"900\", -1l);\n+        Assert.assertEquals(900l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"9000\", -1l);\n+        Assert.assertEquals(9000l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"1kb\", -1l);\n+        Assert.assertEquals(1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"112kb\", -1l);\n+        Assert.assertEquals(112l * 1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"3kb\", -1l);\n+        Assert.assertEquals( (3l * 1024l), value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"2mb\", -1l);\n+        Assert.assertEquals( (2l * 1024l * 1024l), value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"4gb\", -1l);\n+        Assert.assertEquals( (4l * 1024l * 1024l * 1024l), value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTQ5NDk3", "url": "https://github.com/dotCMS/core/pull/17826#pullrequestreview-353149497", "createdAt": "2020-02-04T17:08:01Z", "commit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowMVrOFlcMJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowMVrOFlcMJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzQ5Mg==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803492", "createdAt": "2020-02-04T17:08:01Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "diffHunk": "@@ -13,6 +13,40 @@\n  */\n public class ConversionUtilsTest extends UnitTestBase {\n \n+    @Test\n+    public void toLongFromByteCountHumanDisplaySizeTest () {\n+\n+        long value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"0\", -1l);\n+        Assert.assertEquals(0l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"10\", -1l);\n+        Assert.assertEquals(10l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"900\", -1l);\n+        Assert.assertEquals(900l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"9000\", -1l);\n+        Assert.assertEquals(9000l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"1kb\", -1l);\n+        Assert.assertEquals(1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"112kb\", -1l);\n+        Assert.assertEquals(112l * 1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"3kb\", -1l);\n+        Assert.assertEquals( (3l * 1024l), value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"2mb\", -1l);\n+        Assert.assertEquals( (2l * 1024l * 1024l), value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTQ5NTEy", "url": "https://github.com/dotCMS/core/pull/17826#pullrequestreview-353149512", "createdAt": "2020-02-04T17:08:03Z", "commit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowM1rOFlcMMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowM1rOFlcMMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzUwNQ==", "bodyText": "Issue found: Avoid unused imports such as 'javax.ws.rs'", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803505", "createdAt": "2020-02-04T17:08:03Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileResource.java", "diffHunk": "@@ -33,10 +10,25 @@\n import com.dotmarketing.exception.DoesNotExistException;\n import com.dotmarketing.util.Config;\n import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.collect.ImmutableMap;\n-\n import io.vavr.control.Try;\n+import org.glassfish.jersey.media.multipart.BodyPart;\n+import org.glassfish.jersey.media.multipart.ContentDisposition;\n+import org.glassfish.jersey.media.multipart.FormDataMultiPart;\n+import org.glassfish.jersey.server.JSONP;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTQ5NTM3", "url": "https://github.com/dotCMS/core/pull/17826#pullrequestreview-353149537", "createdAt": "2020-02-04T17:08:04Z", "commit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowNFrOFlcMRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowNFrOFlcMRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzUyNw==", "bodyText": "Issue found: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803527", "createdAt": "2020-02-04T17:08:04Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/util/MimeTypeUtilsTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.UnitTestBase;\n+import com.dotcms.repackage.org.apache.commons.io.FileUtils;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import javax.imageio.ImageIO;\n+import java.awt.*;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Date;\n+\n+/**\n+ * MimeTypeUtils unit test.\n+ * @author jsanca\n+ */\n+public class MimeTypeUtilsTest extends UnitTestBase {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTQ5NTUw", "url": "https://github.com/dotCMS/core/pull/17826#pullrequestreview-353149550", "createdAt": "2020-02-04T17:08:05Z", "commit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowNVrOFlcMVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowNVrOFlcMVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzU0MQ==", "bodyText": "Issue found: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803541", "createdAt": "2020-02-04T17:08:05Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/util/MimeTypeUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.tika.TikaUtils;\n+import com.dotmarketing.util.Config;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n+import com.rainerhahnekamp.sneakythrow.Sneaky;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+/**\n+ * Mime Type Utils\n+ * @author jsanca\n+ */\n+public class MimeTypeUtils {\n+\n+    /**\n+     * Gets the mime type of a file.\n+     * @param binary {@link File}\n+     * @return String\n+     */\n+    public static String getMimeType (final File binary) {\n+\n+        final Path path = binary.toPath();\n+        String mimeType = Sneaky.sneak(() -> Files.probeContentType(path));\n+\n+        if  (!UtilMethods.isSet(mimeType)) {\n+\n+            mimeType    = Config.CONTEXT.getMimeType(binary.getAbsolutePath());\n+\n+            if( !UtilMethods.isSet(mimeType)){\n+                try {\n+                    mimeType = new TikaUtils().detect(binary);\n+                } catch(Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTQ5NTY3", "url": "https://github.com/dotCMS/core/pull/17826#pullrequestreview-353149567", "createdAt": "2020-02-04T17:08:06Z", "commit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowN1rOFlcMZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowN1rOFlcMZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzU1Nw==", "bodyText": "Issue found: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803557", "createdAt": "2020-02-04T17:08:07Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/util/MimeTypeUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.tika.TikaUtils;\n+import com.dotmarketing.util.Config;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n+import com.rainerhahnekamp.sneakythrow.Sneaky;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+/**\n+ * Mime Type Utils\n+ * @author jsanca\n+ */\n+public class MimeTypeUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTQ5NTg1", "url": "https://github.com/dotCMS/core/pull/17826#pullrequestreview-353149585", "createdAt": "2020-02-04T17:08:08Z", "commit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowOFrOFlcMfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowOFrOFlcMfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzU4MA==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803580", "createdAt": "2020-02-04T17:08:08Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "diffHunk": "@@ -13,6 +13,40 @@\n  */\n public class ConversionUtilsTest extends UnitTestBase {\n \n+    @Test\n+    public void toLongFromByteCountHumanDisplaySizeTest () {\n+\n+        long value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"0\", -1l);\n+        Assert.assertEquals(0l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"10\", -1l);\n+        Assert.assertEquals(10l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"900\", -1l);\n+        Assert.assertEquals(900l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"9000\", -1l);\n+        Assert.assertEquals(9000l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"1kb\", -1l);\n+        Assert.assertEquals(1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"112kb\", -1l);\n+        Assert.assertEquals(112l * 1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"3kb\", -1l);\n+        Assert.assertEquals( (3l * 1024l), value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1289, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}