{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMjEzNjQ4", "number": 18378, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyOToxNlrOD3U5oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODozMjoyMVrOD3U-UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzQwNzA0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/vanityurl/business/VanityUrlAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyOToxNlrOGNhcdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoyOToxNlrOGNhcdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMjYzMQ==", "bodyText": "This method needs Integration Tests", "url": "https://github.com/dotCMS/core/pull/18378#discussion_r416832631", "createdAt": "2020-04-28T18:29:16Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/vanityurl/business/VanityUrlAPIImpl.java", "diffHunk": "@@ -133,10 +133,42 @@ private void initializeActiveVanityURLsCacheBySiteAndLanguage(final String siteI\n                         (siteId, languageId, includeSystemHost);\n             }\n         } catch (final Exception e) {\n-            throw new DotRuntimeException(\"Error searching and populating the Vanity URL Cache\", e);\n+            throw new DotRuntimeException(String.format(\"Error searching and populating the Vanity URL from DB for \" +\n+                    \"Site ID '%s', language ID = '%s': %s\", siteId, languageId, e.getMessage()), e);\n         }\n     } // initializeActiveVanityURLsCacheBySiteAndLanguage.\n \n+    /**\n+     * Searches for all Vanity URLs for a given Site in the system <b>without loading data into any of the Vanity URL\n+     * Cache Regions</b>. This initialization routine will also add Vanity URLs located under System Host.\n+     *\n+     * @param siteId     The ID of the Site whose Vanity URLs will be retrieved.\n+     * @param languageId The ID of the language for the Vanity URLs.\n+     *\n+     * @return A list of Vanity URLs read from the data source.\n+     */\n+    private List<CachedVanityUrl> getActiveVanityURLsNoCacheBySiteAndLanguage(final String siteId, final Long languageId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22993c63d53b99daf5ae8ee5c13479744f18797f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzQxOTA0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/vanityurl/business/VanityUrlAPIImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODozMjoyMVrOGNhjzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODozMjoyMVrOGNhjzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzNDUxMA==", "bodyText": "do we have existing Integration Tests that end up calling this private method?", "url": "https://github.com/dotCMS/core/pull/18378#discussion_r416834510", "createdAt": "2020-04-28T18:32:21Z", "author": {"login": "dsilvam"}, "path": "dotCMS/src/main/java/com/dotcms/vanityurl/business/VanityUrlAPIImpl.java", "diffHunk": "@@ -155,7 +187,8 @@ private void initializeActiveVanityURLsCacheBySiteAndLanguage(final String siteI\n         List<Contentlet> contentlets = new ArrayList<>();\n         final StringBuilder query = new StringBuilder();\n         query.append(\"SELECT cvi.live_inode FROM contentlet c \");\n-        query.append(\"INNER JOIN identifier i ON c.identifier = i.id AND i.host_inode \");\n+        //c.text2 is the Site Field for Vanity URL Content Type\n+        query.append(\"INNER JOIN identifier i ON c.identifier = i.id AND c.text2 \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22993c63d53b99daf5ae8ee5c13479744f18797f"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2255, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}