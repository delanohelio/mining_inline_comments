{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjI5NTM0", "number": 17826, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowMFrODdDqbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowOFrODdDqqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzk1MzA5OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowMFrOFlcMGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowMFrOFlcMGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzQ4Mw==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803483", "createdAt": "2020-02-04T17:08:00Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "diffHunk": "@@ -13,6 +13,40 @@\n  */\n public class ConversionUtilsTest extends UnitTestBase {\n \n+    @Test\n+    public void toLongFromByteCountHumanDisplaySizeTest () {\n+\n+        long value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"0\", -1l);\n+        Assert.assertEquals(0l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"10\", -1l);\n+        Assert.assertEquals(10l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"900\", -1l);\n+        Assert.assertEquals(900l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"9000\", -1l);\n+        Assert.assertEquals(9000l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"1kb\", -1l);\n+        Assert.assertEquals(1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"112kb\", -1l);\n+        Assert.assertEquals(112l * 1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"3kb\", -1l);\n+        Assert.assertEquals( (3l * 1024l), value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"2mb\", -1l);\n+        Assert.assertEquals( (2l * 1024l * 1024l), value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"4gb\", -1l);\n+        Assert.assertEquals( (4l * 1024l * 1024l * 1024l), value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzk1MzEyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowMVrOFlcMJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowMVrOFlcMJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzQ5Mg==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803492", "createdAt": "2020-02-04T17:08:01Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "diffHunk": "@@ -13,6 +13,40 @@\n  */\n public class ConversionUtilsTest extends UnitTestBase {\n \n+    @Test\n+    public void toLongFromByteCountHumanDisplaySizeTest () {\n+\n+        long value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"0\", -1l);\n+        Assert.assertEquals(0l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"10\", -1l);\n+        Assert.assertEquals(10l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"900\", -1l);\n+        Assert.assertEquals(900l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"9000\", -1l);\n+        Assert.assertEquals(9000l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"1kb\", -1l);\n+        Assert.assertEquals(1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"112kb\", -1l);\n+        Assert.assertEquals(112l * 1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"3kb\", -1l);\n+        Assert.assertEquals( (3l * 1024l), value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"2mb\", -1l);\n+        Assert.assertEquals( (2l * 1024l * 1024l), value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzk1MzIzOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowM1rOFlcMMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowM1rOFlcMMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzUwNQ==", "bodyText": "Issue found: Avoid unused imports such as 'javax.ws.rs'", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803505", "createdAt": "2020-02-04T17:08:03Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileResource.java", "diffHunk": "@@ -33,10 +10,25 @@\n import com.dotmarketing.exception.DoesNotExistException;\n import com.dotmarketing.util.Config;\n import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.collect.ImmutableMap;\n-\n import io.vavr.control.Try;\n+import org.glassfish.jersey.media.multipart.BodyPart;\n+import org.glassfish.jersey.media.multipart.ContentDisposition;\n+import org.glassfish.jersey.media.multipart.FormDataMultiPart;\n+import org.glassfish.jersey.server.JSONP;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzk1MzM0OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/integration-test/java/com/dotcms/util/MimeTypeUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowNFrOFlcMRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowNFrOFlcMRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzUyNw==", "bodyText": "Issue found: A method/constructor should not explicitly throw java.lang.Exception", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803527", "createdAt": "2020-02-04T17:08:04Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/integration-test/java/com/dotcms/util/MimeTypeUtilsTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.UnitTestBase;\n+import com.dotcms.repackage.org.apache.commons.io.FileUtils;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import javax.imageio.ImageIO;\n+import java.awt.*;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Date;\n+\n+/**\n+ * MimeTypeUtils unit test.\n+ * @author jsanca\n+ */\n+public class MimeTypeUtilsTest extends UnitTestBase {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzk1MzQyOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/util/MimeTypeUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowNVrOFlcMVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowNVrOFlcMVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzU0MQ==", "bodyText": "Issue found: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803541", "createdAt": "2020-02-04T17:08:05Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/util/MimeTypeUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.tika.TikaUtils;\n+import com.dotmarketing.util.Config;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n+import com.rainerhahnekamp.sneakythrow.Sneaky;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+/**\n+ * Mime Type Utils\n+ * @author jsanca\n+ */\n+public class MimeTypeUtils {\n+\n+    /**\n+     * Gets the mime type of a file.\n+     * @param binary {@link File}\n+     * @return String\n+     */\n+    public static String getMimeType (final File binary) {\n+\n+        final Path path = binary.toPath();\n+        String mimeType = Sneaky.sneak(() -> Files.probeContentType(path));\n+\n+        if  (!UtilMethods.isSet(mimeType)) {\n+\n+            mimeType    = Config.CONTEXT.getMimeType(binary.getAbsolutePath());\n+\n+            if( !UtilMethods.isSet(mimeType)){\n+                try {\n+                    mimeType = new TikaUtils().detect(binary);\n+                } catch(Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzk1MzUxOnYy", "diffSide": "RIGHT", "path": "dotCMS/src/main/java/com/dotcms/util/MimeTypeUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowN1rOFlcMZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowN1rOFlcMZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzU1Nw==", "bodyText": "Issue found: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803557", "createdAt": "2020-02-04T17:08:07Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/main/java/com/dotcms/util/MimeTypeUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.tika.TikaUtils;\n+import com.dotmarketing.util.Config;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n+import com.rainerhahnekamp.sneakythrow.Sneaky;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+/**\n+ * Mime Type Utils\n+ * @author jsanca\n+ */\n+public class MimeTypeUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzk1MzY4OnYy", "diffSide": "RIGHT", "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowOFrOFlcMfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzowODowOFrOFlcMfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzU4MA==", "bodyText": "Issue found: Useless parentheses.", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803580", "createdAt": "2020-02-04T17:08:08Z", "author": {"login": "dev-dotcms"}, "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "diffHunk": "@@ -13,6 +13,40 @@\n  */\n public class ConversionUtilsTest extends UnitTestBase {\n \n+    @Test\n+    public void toLongFromByteCountHumanDisplaySizeTest () {\n+\n+        long value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"0\", -1l);\n+        Assert.assertEquals(0l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"10\", -1l);\n+        Assert.assertEquals(10l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"900\", -1l);\n+        Assert.assertEquals(900l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"9000\", -1l);\n+        Assert.assertEquals(9000l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"1kb\", -1l);\n+        Assert.assertEquals(1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"112kb\", -1l);\n+        Assert.assertEquals(112l * 1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"3kb\", -1l);\n+        Assert.assertEquals( (3l * 1024l), value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2472, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}