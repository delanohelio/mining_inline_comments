{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MjIzMzU2", "number": 9513, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDoyMDoxNlrOE-A0mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDoyMDoxNlrOE-A0mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDYwNjM1OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-ccdm-flow-navigation/sw.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDoyMDoxNlrOH7AB3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNzozNTowNFrOH7FG4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYyODUwOQ==", "bodyText": "Was this file intended to be added?", "url": "https://github.com/vaadin/flow/pull/9513#discussion_r531628509", "createdAt": "2020-11-27T14:20:16Z", "author": {"login": "joheriks"}, "path": "flow-tests/test-ccdm-flow-navigation/sw.ts", "diffHunk": "@@ -0,0 +1,45 @@\n+/// <reference lib=\"webworker\" />\n+\n+importScripts('sw-runtime-resources-precache.js');\n+import {skipWaiting, clientsClaim} from 'workbox-core';\n+import {matchPrecache, precacheAndRoute} from 'workbox-precaching';\n+import {NavigationRoute, registerRoute} from 'workbox-routing';\n+import {PrecacheEntry} from 'workbox-precaching/_types';\n+import {NetworkOnly} from 'workbox-strategies';\n+\n+skipWaiting();\n+clientsClaim();\n+\n+const appShellPath = '/';\n+// @ts-ignore: OFFLINE_PATH_ENABLED and OFFLINE_PATH are defined by webpack.generated.js\n+const offlinePath = OFFLINE_PATH_ENABLED ? '/' + OFFLINE_PATH : appShellPath;\n+const networkOnly = new NetworkOnly();\n+const navigationFallback = new NavigationRoute(async (params: any) => {\n+  // Use offlinePath fallback if offline was detected\n+  if (!self.navigator.onLine) {\n+    const offlinePathPrecachedResponse = await matchPrecache(offlinePath);\n+    if (offlinePathPrecachedResponse) {\n+      return offlinePathPrecachedResponse;\n+    }\n+  }\n+\n+  // Sometimes navigator.onLine is not reliable, use fallback to offlinePath\n+  // also in case of network failure\n+  try {\n+    return await networkOnly.handle(params);\n+  } catch (error) {\n+    return (await matchPrecache(offlinePath)) || error;\n+  }\n+});\n+\n+registerRoute(navigationFallback);\n+\n+// @ts-ignore: __WB_MANIFEST is injected by the InjectManifest plugin\n+let manifestEntries: Array<PrecacheEntry> = self.__WB_MANIFEST;\n+// @ts-ignore: additionalManifestEntries is defined in sw-runtime-resources-precache.js\n+const additionalManifestEntries: Array<PrecacheEntry> = self.additionalManifestEntries;\n+if (additionalManifestEntries && additionalManifestEntries.length) {\n+  manifestEntries = [...manifestEntries, ...additionalManifestEntries];\n+}\n+\n+precacheAndRoute(manifestEntries);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2587aaa44d2d12407c19d5bb65451462e59b6843"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcxMTcxMg==", "bodyText": "oops, accidental. Removed.", "url": "https://github.com/vaadin/flow/pull/9513#discussion_r531711712", "createdAt": "2020-11-27T17:35:04Z", "author": {"login": "platosha"}, "path": "flow-tests/test-ccdm-flow-navigation/sw.ts", "diffHunk": "@@ -0,0 +1,45 @@\n+/// <reference lib=\"webworker\" />\n+\n+importScripts('sw-runtime-resources-precache.js');\n+import {skipWaiting, clientsClaim} from 'workbox-core';\n+import {matchPrecache, precacheAndRoute} from 'workbox-precaching';\n+import {NavigationRoute, registerRoute} from 'workbox-routing';\n+import {PrecacheEntry} from 'workbox-precaching/_types';\n+import {NetworkOnly} from 'workbox-strategies';\n+\n+skipWaiting();\n+clientsClaim();\n+\n+const appShellPath = '/';\n+// @ts-ignore: OFFLINE_PATH_ENABLED and OFFLINE_PATH are defined by webpack.generated.js\n+const offlinePath = OFFLINE_PATH_ENABLED ? '/' + OFFLINE_PATH : appShellPath;\n+const networkOnly = new NetworkOnly();\n+const navigationFallback = new NavigationRoute(async (params: any) => {\n+  // Use offlinePath fallback if offline was detected\n+  if (!self.navigator.onLine) {\n+    const offlinePathPrecachedResponse = await matchPrecache(offlinePath);\n+    if (offlinePathPrecachedResponse) {\n+      return offlinePathPrecachedResponse;\n+    }\n+  }\n+\n+  // Sometimes navigator.onLine is not reliable, use fallback to offlinePath\n+  // also in case of network failure\n+  try {\n+    return await networkOnly.handle(params);\n+  } catch (error) {\n+    return (await matchPrecache(offlinePath)) || error;\n+  }\n+});\n+\n+registerRoute(navigationFallback);\n+\n+// @ts-ignore: __WB_MANIFEST is injected by the InjectManifest plugin\n+let manifestEntries: Array<PrecacheEntry> = self.__WB_MANIFEST;\n+// @ts-ignore: additionalManifestEntries is defined in sw-runtime-resources-precache.js\n+const additionalManifestEntries: Array<PrecacheEntry> = self.additionalManifestEntries;\n+if (additionalManifestEntries && additionalManifestEntries.length) {\n+  manifestEntries = [...manifestEntries, ...additionalManifestEntries];\n+}\n+\n+precacheAndRoute(manifestEntries);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYyODUwOQ=="}, "originalCommit": {"oid": "2587aaa44d2d12407c19d5bb65451462e59b6843"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2848, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}