{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MDY0MzY5", "number": 9618, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMTowOToxOFrOFC3dXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMTo0NjozNlrOFC4bog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTUwMTExOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMTowOToxOFrOICPHmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNjo0NTowN1rOIC5EQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIxNTc3MA==", "bodyText": "Why do we have a runnable running a runnable. can't we just have access as the default instead of  () -> access` else drop access and put it directly in the getAttribute default value.", "url": "https://github.com/vaadin/flow/pull/9618#discussion_r539215770", "createdAt": "2020-12-09T11:09:18Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -513,4 +520,22 @@ public void destroy() {\n         getService().destroy();\n     }\n \n+    private VaadinServletContext initializeContext() {\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        VaadinServletContext vaadinServletContext = new VaadinServletContext(\n+                servletContext);\n+        // ensure the web application classloader is available via context\n+        ApplicationClassLoaderAccess access = () -> servletContext\n+                .getClassLoader();\n+        vaadinServletContext.getAttribute(ApplicationClassLoaderAccess.class,\n+                () -> access);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f23f1007dcbbe4801005e74d79a3dfd795afdaf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI1MjA4NQ==", "bodyText": "The first \"runnable\" is a factory which produces a value for the attribute.\nThe second \"runnable\" is the access which returns a classloader.\nYou suggestion means  the ClassLoader  instance will be set as the attribute  \"ClassLoader.class\" value.\nThere are two reasons why I don't want to use ClassLoader instance directly but instead wrap it:\n\nif I recall correctly you had problems with accessing to ServletContext::getClassLoader . Sometimes it may throw an exception if it's called \"too early\" (I have no idea what \"too early\" means). ServletContext::getClassLoader has bad API since there is a public method which you may call at any point but in fact it may not be called at any point. So I'm trying to avoid calling it right away. Instead \"access\"/factory is used to call it.\nI don't want to expose ClassLoader  as the attribute value for \"ClassLoader.class\"  attribute.\nClassLoader is the standard JVM class. So it's possible that someone (an app  developer) may use ClassLoader.class  attribute for his own purposes. This will break internal assumptions.\n\nIdeally ApplicationClassLoaderAccess would be a private class so no-one is able to use ApplicationClassLoaderAccess.class  attribute to override its value. But that will require the servlet class in osgi  module (which can be done but then OSGiXXXXServlet should be used instead of VaadinServlet and I'm trying to avoid that).", "url": "https://github.com/vaadin/flow/pull/9618#discussion_r539252085", "createdAt": "2020-12-09T12:07:13Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -513,4 +520,22 @@ public void destroy() {\n         getService().destroy();\n     }\n \n+    private VaadinServletContext initializeContext() {\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        VaadinServletContext vaadinServletContext = new VaadinServletContext(\n+                servletContext);\n+        // ensure the web application classloader is available via context\n+        ApplicationClassLoaderAccess access = () -> servletContext\n+                .getClassLoader();\n+        vaadinServletContext.getAttribute(ApplicationClassLoaderAccess.class,\n+                () -> access);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIxNTc3MA=="}, "originalCommit": {"oid": "3f23f1007dcbbe4801005e74d79a3dfd795afdaf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI2MDIyNA==", "bodyText": "A conversation is not resolved by you answering it. It should be up to the one making the comment to resolve it as agreed on slack a while ago.", "url": "https://github.com/vaadin/flow/pull/9618#discussion_r539260224", "createdAt": "2020-12-09T12:20:14Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -513,4 +520,22 @@ public void destroy() {\n         getService().destroy();\n     }\n \n+    private VaadinServletContext initializeContext() {\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        VaadinServletContext vaadinServletContext = new VaadinServletContext(\n+                servletContext);\n+        // ensure the web application classloader is available via context\n+        ApplicationClassLoaderAccess access = () -> servletContext\n+                .getClassLoader();\n+        vaadinServletContext.getAttribute(ApplicationClassLoaderAccess.class,\n+                () -> access);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIxNTc3MA=="}, "originalCommit": {"oid": "3f23f1007dcbbe4801005e74d79a3dfd795afdaf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4NzM5NA==", "bodyText": "Do you mean I should not click \"resolved\" ?\nDoes it mean that you should resolve it ?\nBut then why the button is shown to me ?\nOr should I use the button only when I made some change ?", "url": "https://github.com/vaadin/flow/pull/9618#discussion_r539287394", "createdAt": "2020-12-09T13:02:01Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -513,4 +520,22 @@ public void destroy() {\n         getService().destroy();\n     }\n \n+    private VaadinServletContext initializeContext() {\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        VaadinServletContext vaadinServletContext = new VaadinServletContext(\n+                servletContext);\n+        // ensure the web application classloader is available via context\n+        ApplicationClassLoaderAccess access = () -> servletContext\n+                .getClassLoader();\n+        vaadinServletContext.getAttribute(ApplicationClassLoaderAccess.class,\n+                () -> access);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIxNTc3MA=="}, "originalCommit": {"oid": "3f23f1007dcbbe4801005e74d79a3dfd795afdaf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4OTA5Mg==", "bodyText": "But you may click technically \"unresolve conversation\" if you disagree .....\nI'm trying to make all the conversations resolved if I answer it so if I don't go into the same conversation if I forget that it has a complete answer.\nAnd I expect that it will be unresolved if it's not resolved yet...", "url": "https://github.com/vaadin/flow/pull/9618#discussion_r539289092", "createdAt": "2020-12-09T13:04:35Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -513,4 +520,22 @@ public void destroy() {\n         getService().destroy();\n     }\n \n+    private VaadinServletContext initializeContext() {\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        VaadinServletContext vaadinServletContext = new VaadinServletContext(\n+                servletContext);\n+        // ensure the web application classloader is available via context\n+        ApplicationClassLoaderAccess access = () -> servletContext\n+                .getClassLoader();\n+        vaadinServletContext.getAttribute(ApplicationClassLoaderAccess.class,\n+                () -> access);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIxNTc3MA=="}, "originalCommit": {"oid": "3f23f1007dcbbe4801005e74d79a3dfd795afdaf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI5NTMxNg==", "bodyText": "OK, I missed the agreement.\nSo then it's the responsibility of the author to resolve regardless of comment or real cahnge.\nOK.", "url": "https://github.com/vaadin/flow/pull/9618#discussion_r539295316", "createdAt": "2020-12-09T13:14:09Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -513,4 +520,22 @@ public void destroy() {\n         getService().destroy();\n     }\n \n+    private VaadinServletContext initializeContext() {\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        VaadinServletContext vaadinServletContext = new VaadinServletContext(\n+                servletContext);\n+        // ensure the web application classloader is available via context\n+        ApplicationClassLoaderAccess access = () -> servletContext\n+                .getClassLoader();\n+        vaadinServletContext.getAttribute(ApplicationClassLoaderAccess.class,\n+                () -> access);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIxNTc3MA=="}, "originalCommit": {"oid": "3f23f1007dcbbe4801005e74d79a3dfd795afdaf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkwMzA0Mw==", "bodyText": "This is more of an issue with how this works on github. With reviewable it only hid the conversation for the one clicking the acc button, but here it fully closes the comment block  making finding the conversation really hard especially if there happens to be multiple review rounds with comments in different faces.", "url": "https://github.com/vaadin/flow/pull/9618#discussion_r539903043", "createdAt": "2020-12-10T06:45:07Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -513,4 +520,22 @@ public void destroy() {\n         getService().destroy();\n     }\n \n+    private VaadinServletContext initializeContext() {\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        VaadinServletContext vaadinServletContext = new VaadinServletContext(\n+                servletContext);\n+        // ensure the web application classloader is available via context\n+        ApplicationClassLoaderAccess access = () -> servletContext\n+                .getClassLoader();\n+        vaadinServletContext.getAttribute(ApplicationClassLoaderAccess.class,\n+                () -> access);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIxNTc3MA=="}, "originalCommit": {"oid": "3f23f1007dcbbe4801005e74d79a3dfd795afdaf"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTY2MDUwOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMTo0NjozNlrOICQjmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMTo0NjozNlrOICQjmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzOTMyMA==", "bodyText": "Replace this lambda with a method reference.", "url": "https://github.com/vaadin/flow/pull/9618#discussion_r539239320", "createdAt": "2020-12-09T11:46:36Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -513,4 +520,22 @@ public void destroy() {\n         getService().destroy();\n     }\n \n+    private VaadinServletContext initializeContext() {\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        VaadinServletContext vaadinServletContext = new VaadinServletContext(\n+                servletContext);\n+        // ensure the web application classloader is available via context\n+        ApplicationClassLoaderAccess access = () -> servletContext", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f23f1007dcbbe4801005e74d79a3dfd795afdaf"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2914, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}