{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwOTE4MDg4", "number": 8397, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNTo1MjoxNVrOEqK1dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNVQxMzo1MDowMlrOF6mEmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjUzMTcyOnYy", "diffSide": "RIGHT", "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNTo1MjoxNVrOHcOYjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMTo0NzoyMFrOH5f_yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1NzgzNw==", "bodyText": "I would rename this API to setTarget and have it as overloaded method name. This is what we have done in other places too. The getter can then have the more specific name.", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r499357837", "createdAt": "2020-10-05T05:52:15Z", "author": {"login": "pleku"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "diffHunk": "@@ -183,4 +205,47 @@ public void setTarget(String target) {\n         return get(targetDescriptor);\n     }\n \n+    /**\n+     * Sets the target window, tab or frame for this anchor. The target is one of these\n+     * special values:\n+     * <ul>\n+     * <li><code>AnchorTarget.DEFAULT</code>: Removes the target value. This has the same effect as setting the target to <code>AnchorTarget.SELF</code>.\n+     * <li><code>AnchorTarget.SELF</code>: Opens the link in the current context.\n+     * <li><code>AnchorTarget.BLANK</code>: Opens the link in a new unnamed context.\n+     * <li><code>AnchorTarget.PARENT</code>: Opens the link in the parent context, or the\n+     * current context if there is no parent context.\n+     * <li><code>AnchorTarget.TOP</code>: Opens the link in the top most grandparent\n+     * context, or the current context if there is no parent context.\n+     * </ul>\n+     *\n+     * @param target\n+     *            the target value, not null\n+     */\n+    public void setTargetEnum(AnchorTarget target) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27b9420efb43c85b2b2233459f5c2d88270ca279"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0NzE1OA==", "bodyText": "@pleku,\nIf I use setTarget and keep getTargetEnum, I get this error (from HtmlComponentSmokeTest):\n[ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.259 s <<< FAILURE! - in com.vaadin.flow.component.html.HtmlComponentSmokeTest\n[ERROR] testAllHtmlComponents(com.vaadin.flow.component.html.HtmlComponentSmokeTest)  Time elapsed: 0.226 s  <<< FAILURE!\njava.lang.AssertionError: public void com.vaadin.flow.component.html.Anchor.setTarget(com.vaadin.flow.component.html.AnchorTarget) should have the same type as its getter expected:<class com.vaadin.flow.component.html.AnchorTarget> but was:<class java.lang.String>\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\n\tat org.junit.Assert.assertEquals(Assert.java:118)\n\tat com.vaadin.flow.component.html.HtmlComponentSmokeTest.testSetter(HtmlComponentSmokeTest.java:200)\n\tat com.vaadin.flow.component.html.HtmlComponentSmokeTest.lambda$testSetters$3(HtmlComponentSmokeTest.java:145)\n\tat com.vaadin.flow.component.html.HtmlComponentSmokeTest$$Lambda$150/000000002006F0E0.accept(Unknown Source)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)\n\tat com.vaadin.flow.component.html.HtmlComponentSmokeTest.testSetters(HtmlComponentSmokeTest.java:145)\n\tat com.vaadin.flow.component.html.HtmlComponentSmokeTest.smokeTestComponent(HtmlComponentSmokeTest.java:107)\n\tat com.vaadin.flow.component.html.HtmlComponentSmokeTest$$Lambda$71/0000000020029460.accept(Unknown Source)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)\n\tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:497)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:487)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:239)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)\n\tat com.vaadin.flow.component.html.HtmlComponentSmokeTest.testAllHtmlComponents(HtmlComponentSmokeTest.java:87)\n\nAny suggestions on how to rectify?", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r500447158", "createdAt": "2020-10-06T16:47:03Z", "author": {"login": "jhult"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "diffHunk": "@@ -183,4 +205,47 @@ public void setTarget(String target) {\n         return get(targetDescriptor);\n     }\n \n+    /**\n+     * Sets the target window, tab or frame for this anchor. The target is one of these\n+     * special values:\n+     * <ul>\n+     * <li><code>AnchorTarget.DEFAULT</code>: Removes the target value. This has the same effect as setting the target to <code>AnchorTarget.SELF</code>.\n+     * <li><code>AnchorTarget.SELF</code>: Opens the link in the current context.\n+     * <li><code>AnchorTarget.BLANK</code>: Opens the link in a new unnamed context.\n+     * <li><code>AnchorTarget.PARENT</code>: Opens the link in the parent context, or the\n+     * current context if there is no parent context.\n+     * <li><code>AnchorTarget.TOP</code>: Opens the link in the top most grandparent\n+     * context, or the current context if there is no parent context.\n+     * </ul>\n+     *\n+     * @param target\n+     *            the target value, not null\n+     */\n+    public void setTargetEnum(AnchorTarget target) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1NzgzNw=="}, "originalCommit": {"oid": "27b9420efb43c85b2b2233459f5c2d88270ca279"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMzNzY5OQ==", "bodyText": "I think it just about adding an exception to the check, as a property ignoredMethodNames or such which would have this included and then ignored in the test", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r502337699", "createdAt": "2020-10-09T10:32:42Z", "author": {"login": "pleku"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "diffHunk": "@@ -183,4 +205,47 @@ public void setTarget(String target) {\n         return get(targetDescriptor);\n     }\n \n+    /**\n+     * Sets the target window, tab or frame for this anchor. The target is one of these\n+     * special values:\n+     * <ul>\n+     * <li><code>AnchorTarget.DEFAULT</code>: Removes the target value. This has the same effect as setting the target to <code>AnchorTarget.SELF</code>.\n+     * <li><code>AnchorTarget.SELF</code>: Opens the link in the current context.\n+     * <li><code>AnchorTarget.BLANK</code>: Opens the link in a new unnamed context.\n+     * <li><code>AnchorTarget.PARENT</code>: Opens the link in the parent context, or the\n+     * current context if there is no parent context.\n+     * <li><code>AnchorTarget.TOP</code>: Opens the link in the top most grandparent\n+     * context, or the current context if there is no parent context.\n+     * </ul>\n+     *\n+     * @param target\n+     *            the target value, not null\n+     */\n+    public void setTargetEnum(AnchorTarget target) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1NzgzNw=="}, "originalCommit": {"oid": "27b9420efb43c85b2b2233459f5c2d88270ca279"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA1NTExNQ==", "bodyText": "I didn't see the exact way to ignore this. So, I followed the example for Label.setFor.", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r530055115", "createdAt": "2020-11-25T01:47:20Z", "author": {"login": "jhult"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "diffHunk": "@@ -183,4 +205,47 @@ public void setTarget(String target) {\n         return get(targetDescriptor);\n     }\n \n+    /**\n+     * Sets the target window, tab or frame for this anchor. The target is one of these\n+     * special values:\n+     * <ul>\n+     * <li><code>AnchorTarget.DEFAULT</code>: Removes the target value. This has the same effect as setting the target to <code>AnchorTarget.SELF</code>.\n+     * <li><code>AnchorTarget.SELF</code>: Opens the link in the current context.\n+     * <li><code>AnchorTarget.BLANK</code>: Opens the link in a new unnamed context.\n+     * <li><code>AnchorTarget.PARENT</code>: Opens the link in the parent context, or the\n+     * current context if there is no parent context.\n+     * <li><code>AnchorTarget.TOP</code>: Opens the link in the top most grandparent\n+     * context, or the current context if there is no parent context.\n+     * </ul>\n+     *\n+     * @param target\n+     *            the target value, not null\n+     */\n+    public void setTargetEnum(AnchorTarget target) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1NzgzNw=="}, "originalCommit": {"oid": "27b9420efb43c85b2b2233459f5c2d88270ca279"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjUzNDExOnYy", "diffSide": "RIGHT", "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/AnchorTarget.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNTo1MzozOFrOHcOZ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjo0OToyOVrOHdQ9cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1ODE3NA==", "bodyText": "Since tags should be kept empty, we'll fix those once we know what release the enhancement lands into first.", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r499358174", "createdAt": "2020-10-05T05:53:38Z", "author": {"login": "pleku"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/AnchorTarget.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component.html;\n+\n+/**\n+ * Enum representing <code>target</code> attribute values for an <code>&lt;a&gt;</code> element.\n+ *\n+ * @author Vaadin Ltd\n+ * @since 3.2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27b9420efb43c85b2b2233459f5c2d88270ca279"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0ODYyNw==", "bodyText": "Rebased on master and emptied @since.", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r500448627", "createdAt": "2020-10-06T16:49:29Z", "author": {"login": "jhult"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/AnchorTarget.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component.html;\n+\n+/**\n+ * Enum representing <code>target</code> attribute values for an <code>&lt;a&gt;</code> element.\n+ *\n+ * @author Vaadin Ltd\n+ * @since 3.2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1ODE3NA=="}, "originalCommit": {"oid": "27b9420efb43c85b2b2233459f5c2d88270ca279"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTc3Mzg0OnYy", "diffSide": "RIGHT", "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMDo0OTozMlrOH5tqig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzozMTozMVrOH7upFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI3OTA1MA==", "bodyText": "Should this just return AnchorTarget.DEFAULT when the actual string value is null instead of an optional ? I understood from the javadocs that it is semantically the same thing ?", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r530279050", "createdAt": "2020-11-25T10:49:32Z", "author": {"login": "pleku"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "diffHunk": "@@ -183,4 +205,47 @@ public void setTarget(String target) {\n         return get(targetDescriptor);\n     }\n \n+    /**\n+     * Sets the target window, tab or frame for this anchor. The target is one of these\n+     * special values:\n+     * <ul>\n+     * <li><code>AnchorTarget.DEFAULT</code>: Removes the target value. This has the same effect as setting the target to <code>AnchorTarget.SELF</code>.\n+     * <li><code>AnchorTarget.SELF</code>: Opens the link in the current context.\n+     * <li><code>AnchorTarget.BLANK</code>: Opens the link in a new unnamed context.\n+     * <li><code>AnchorTarget.PARENT</code>: Opens the link in the parent context, or the\n+     * current context if there is no parent context.\n+     * <li><code>AnchorTarget.TOP</code>: Opens the link in the top most grandparent\n+     * context, or the current context if there is no parent context.\n+     * </ul>\n+     *\n+     * @param target\n+     *            the target value, not null\n+     */\n+    public void setTarget(AnchorTarget target) {\n+        Objects.requireNonNull(target, \"target cannot be null.\");\n+        setTarget(target.getValue());\n+    }\n+\n+    /**\n+     * Gets the target window, tab or frame value for this anchor.\n+     *\n+     * @see #setTarget(AnchorTarget)\n+     *\n+     * @return an optional target, or an empty optional if no target has been\n+     *         set\n+     */\n+    public Optional<AnchorTarget> getTargetEnum() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4714525e866aa603ee90f6e655c2ee5111b34efc"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTc3OTI2MA==", "bodyText": "This now returns AnchorTarget.DEFAULT if no target has been set.", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r531779260", "createdAt": "2020-11-27T20:32:52Z", "author": {"login": "jhult"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "diffHunk": "@@ -183,4 +205,47 @@ public void setTarget(String target) {\n         return get(targetDescriptor);\n     }\n \n+    /**\n+     * Sets the target window, tab or frame for this anchor. The target is one of these\n+     * special values:\n+     * <ul>\n+     * <li><code>AnchorTarget.DEFAULT</code>: Removes the target value. This has the same effect as setting the target to <code>AnchorTarget.SELF</code>.\n+     * <li><code>AnchorTarget.SELF</code>: Opens the link in the current context.\n+     * <li><code>AnchorTarget.BLANK</code>: Opens the link in a new unnamed context.\n+     * <li><code>AnchorTarget.PARENT</code>: Opens the link in the parent context, or the\n+     * current context if there is no parent context.\n+     * <li><code>AnchorTarget.TOP</code>: Opens the link in the top most grandparent\n+     * context, or the current context if there is no parent context.\n+     * </ul>\n+     *\n+     * @param target\n+     *            the target value, not null\n+     */\n+    public void setTarget(AnchorTarget target) {\n+        Objects.requireNonNull(target, \"target cannot be null.\");\n+        setTarget(target.getValue());\n+    }\n+\n+    /**\n+     * Gets the target window, tab or frame value for this anchor.\n+     *\n+     * @see #setTarget(AnchorTarget)\n+     *\n+     * @return an optional target, or an empty optional if no target has been\n+     *         set\n+     */\n+    public Optional<AnchorTarget> getTargetEnum() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI3OTA1MA=="}, "originalCommit": {"oid": "4714525e866aa603ee90f6e655c2ee5111b34efc"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5MjIxNQ==", "bodyText": "Sorry, not done, reopening the discussion as I'm not sure if I was clear enough - I meant that instead of returning an empty optional, it would return AnchorTarget.DEFAULT so the return type would not be Optional for getTargetEnum(). Is there any other issue for this than if they user uses setTarget(\"foobar\") which cannot be parsed to the enum ? I'm not sure if returning null would be just fine then, as wrapping the enum in Optional just feels unnecessary complication.\nNow that I'm thinking this, it might make sense to even deprecate the String version of setTarget(String) and recommend using the enum one instead to avoid errors.", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r532392215", "createdAt": "2020-11-30T07:31:31Z", "author": {"login": "pleku"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "diffHunk": "@@ -183,4 +205,47 @@ public void setTarget(String target) {\n         return get(targetDescriptor);\n     }\n \n+    /**\n+     * Sets the target window, tab or frame for this anchor. The target is one of these\n+     * special values:\n+     * <ul>\n+     * <li><code>AnchorTarget.DEFAULT</code>: Removes the target value. This has the same effect as setting the target to <code>AnchorTarget.SELF</code>.\n+     * <li><code>AnchorTarget.SELF</code>: Opens the link in the current context.\n+     * <li><code>AnchorTarget.BLANK</code>: Opens the link in a new unnamed context.\n+     * <li><code>AnchorTarget.PARENT</code>: Opens the link in the parent context, or the\n+     * current context if there is no parent context.\n+     * <li><code>AnchorTarget.TOP</code>: Opens the link in the top most grandparent\n+     * context, or the current context if there is no parent context.\n+     * </ul>\n+     *\n+     * @param target\n+     *            the target value, not null\n+     */\n+    public void setTarget(AnchorTarget target) {\n+        Objects.requireNonNull(target, \"target cannot be null.\");\n+        setTarget(target.getValue());\n+    }\n+\n+    /**\n+     * Gets the target window, tab or frame value for this anchor.\n+     *\n+     * @see #setTarget(AnchorTarget)\n+     *\n+     * @return an optional target, or an empty optional if no target has been\n+     *         set\n+     */\n+    public Optional<AnchorTarget> getTargetEnum() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI3OTA1MA=="}, "originalCommit": {"oid": "4714525e866aa603ee90f6e655c2ee5111b34efc"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk2OTc5MzMzOnYy", "diffSide": "RIGHT", "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/AnchorTargetValue.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNVQxMzozOTo0MlrOJVjC8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNVQxMzozOTo0MlrOJVjC8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjU3NDA2Nw==", "bodyText": "Non-blocking: I wonder why this is an anonymous class instead of private class here but I don't think it makes any difference", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r626574067", "createdAt": "2021-05-05T13:39:42Z", "author": {"login": "pleku"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/AnchorTargetValue.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2000-2021 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component.html;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+/**\n+ * Represents <code>target</code> attribute values for an <code>&lt;a&gt;</code>\n+ * element.\n+ * \n+ * @author Vaadin Ltd\n+ * @since\n+ * \n+ * @see AnchorTarget\n+ *\n+ */\n+@FunctionalInterface\n+public interface AnchorTargetValue extends Serializable {\n+\n+    /**\n+     * Gets the string value representation.\n+     * \n+     * @return string value representation\n+     */\n+    String getValue();\n+\n+    /**\n+     * Gets an object instance wrapping the {@code value} string representation.\n+     * \n+     * @param value\n+     *            the string value representation, not {@code null}\n+     * @return an object wrapping the string value\n+     */\n+    public static AnchorTargetValue forString(String value) {\n+        Optional<AnchorTarget> target = Stream.of(AnchorTarget.values()).filter(\n+                type -> type.getValue().equals(Objects.requireNonNull(value)))\n+                .findFirst();\n+        if (target.isPresent()) {\n+            return target.get();\n+        }\n+        return new AnchorTargetValue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5801c5d4c44b769019ab64acf2a83be0592d5f80"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk2OTg1NDk2OnYy", "diffSide": "RIGHT", "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNVQxMzo1MDowMlrOJVjnoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNVQxMzo1MDowMlrOJVjnoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjU4MzQ1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *\n          \n          \n            \n                 * For targeting an {@code <iframe>}, browser window or tab by its name, use\n          \n          \n            \n                 * {@link #setTarget(String)} instead.\n          \n          \n            \n                 *", "url": "https://github.com/vaadin/flow/pull/8397#discussion_r626583456", "createdAt": "2021-05-05T13:50:02Z", "author": {"login": "pleku"}, "path": "flow-html-components/src/main/java/com/vaadin/flow/component/html/Anchor.java", "diffHunk": "@@ -183,4 +205,47 @@ public void setTarget(String target) {\n         return get(targetDescriptor);\n     }\n \n+    /**\n+     * Sets the target window, tab or frame for this anchor. The target may be\n+     * the one of these special values:\n+     * <ul>\n+     * <li><code>AnchorTarget.DEFAULT</code>: Removes the target value. This has\n+     * the same effect as setting the target to <code>AnchorTarget.SELF</code>.\n+     * <li><code>AnchorTarget.SELF</code>: Opens the link in the current\n+     * context.\n+     * <li><code>AnchorTarget.BLANK</code>: Opens the link in a new unnamed\n+     * context.\n+     * <li><code>AnchorTarget.PARENT</code>: Opens the link in the parent\n+     * context, or the current context if there is no parent context.\n+     * <li><code>AnchorTarget.TOP</code>: Opens the link in the top most\n+     * grandparent context, or the current context if there is no parent\n+     * context.\n+     * </ul>\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5801c5d4c44b769019ab64acf2a83be0592d5f80"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3546, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}