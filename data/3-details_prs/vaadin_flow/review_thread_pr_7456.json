{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NDkzNDE4", "number": 7456, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo1MDo0OVrODcLw-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODozMjoxOFrODcjQ1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODc5NDgxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/pnpmfile.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo1MDo0OVrOFkGPIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo1MDo0OVrOFkGPIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5NTIzMw==", "bodyText": "nit: probably better to remove before merging, there might be a lot of logging output.", "url": "https://github.com/vaadin/flow/pull/7456#discussion_r373395233", "createdAt": "2020-01-31T09:50:49Z", "author": {"login": "web-padawan"}, "path": "flow-server/src/main/resources/pnpmfile.js", "diffHunk": "@@ -0,0 +1,42 @@\n+const fs = require('fs');\n+\n+const packageJson = JSON.parse(fs.readFileSync('./package.json', 'utf-8'));\n+\n+const versionsFile = '[to-be-generated-by-flow]';\n+\n+if (!fs.existsSync(versionsFile)) {\n+    return;\n+}\n+const versions = JSON.parse(fs.readFileSync(versionsFile, 'utf-8'));\n+\n+let vaadinDeps;\n+\n+module.exports = {\n+  hooks: {\n+    readPackage\n+  }\n+};\n+\n+function getExactVersion(string) {\n+  return string.replace('^', '');\n+}\n+\n+\n+function readPackage(pkg) {\n+  const deps = versions;\n+\n+  const { dependencies } = pkg;\n+\n+  if (dependencies) {\n+    for (let k in deps) {\n+      if (dependencies[k] && dependencies[k] !== deps[k]) {\n+        console.log(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79de59d9966eaabdb0d0dda1db1f3fa53add0076"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODc5NTcwOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/pnpmfile.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo1MToxM1rOFkGPvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo1MToxM1rOFkGPvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5NTM5MA==", "bodyText": "nit: unused variable from the original script, please remove.", "url": "https://github.com/vaadin/flow/pull/7456#discussion_r373395390", "createdAt": "2020-01-31T09:51:13Z", "author": {"login": "web-padawan"}, "path": "flow-server/src/main/resources/pnpmfile.js", "diffHunk": "@@ -0,0 +1,42 @@\n+const fs = require('fs');\n+\n+const packageJson = JSON.parse(fs.readFileSync('./package.json', 'utf-8'));\n+\n+const versionsFile = '[to-be-generated-by-flow]';\n+\n+if (!fs.existsSync(versionsFile)) {\n+    return;\n+}\n+const versions = JSON.parse(fs.readFileSync(versionsFile, 'utf-8'));\n+\n+let vaadinDeps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79de59d9966eaabdb0d0dda1db1f3fa53add0076"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODgxNzM3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/pnpmfile.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo1ODo0NFrOFkGcpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo1ODo0NFrOFkGcpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5ODY5NA==", "bodyText": "nit: this extra assignment is not necessary.\nyou can remove it and use for (let k in versions) { etc below.", "url": "https://github.com/vaadin/flow/pull/7456#discussion_r373398694", "createdAt": "2020-01-31T09:58:44Z", "author": {"login": "web-padawan"}, "path": "flow-server/src/main/resources/pnpmfile.js", "diffHunk": "@@ -0,0 +1,42 @@\n+const fs = require('fs');\n+\n+const packageJson = JSON.parse(fs.readFileSync('./package.json', 'utf-8'));\n+\n+const versionsFile = '[to-be-generated-by-flow]';\n+\n+if (!fs.existsSync(versionsFile)) {\n+    return;\n+}\n+const versions = JSON.parse(fs.readFileSync(versionsFile, 'utf-8'));\n+\n+let vaadinDeps;\n+\n+module.exports = {\n+  hooks: {\n+    readPackage\n+  }\n+};\n+\n+function getExactVersion(string) {\n+  return string.replace('^', '');\n+}\n+\n+\n+function readPackage(pkg) {\n+  const deps = versions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79de59d9966eaabdb0d0dda1db1f3fa53add0076"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwOTI3NDc3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/pnpmfile.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzowNDozMlrOFkKv9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzowNDozMlrOFkKv9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2OTE3Mg==", "bodyText": "nit: this function can be removed altogether and there are extra newlines below it.\ndidn't notice this during the first review round, sorry about that.", "url": "https://github.com/vaadin/flow/pull/7456#discussion_r373469172", "createdAt": "2020-01-31T13:04:32Z", "author": {"login": "web-padawan"}, "path": "flow-server/src/main/resources/pnpmfile.js", "diffHunk": "@@ -0,0 +1,35 @@\n+const fs = require('fs');\n+\n+const packageJson = JSON.parse(fs.readFileSync('./package.json', 'utf-8'));\n+\n+const versionsFile = '[to-be-generated-by-flow]';\n+\n+if (!fs.existsSync(versionsFile)) {\n+    return;\n+}\n+const versions = JSON.parse(fs.readFileSync(versionsFile, 'utf-8'));\n+\n+module.exports = {\n+  hooks: {\n+    readPackage\n+  }\n+};\n+\n+function getExactVersion(string) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58839b2a404e666611f138f2765b2530b7e5d99a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjY0NDY1OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/VersionsJsonConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODozMjoxN1rOFkpdBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODozMjoxN1rOFkpdBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk3MjIzMQ==", "bodyText": "Remove the declaration of thrown exception 'java.io.IOException', as it cannot be thrown from method's body.", "url": "https://github.com/vaadin/flow/pull/7456#discussion_r373972231", "createdAt": "2020-02-03T08:32:17Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/VersionsJsonConverter.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2000-2018 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.server.frontend;\n+\n+import java.io.IOException;\n+\n+import elemental.json.Json;\n+import elemental.json.JsonObject;\n+import elemental.json.JsonValue;\n+\n+/**\n+ * Converts platform versions file to internal format which doesn't contain\n+ * extra information.\n+ * <p>\n+ * The result contains all dependencies as keys and their versions as value.\n+ *\n+ * @author Vaadin Ltd\n+ *\n+ */\n+class VersionsJsonConverter {\n+\n+    private static final String JS_VERSION = \"jsVersion\";\n+    private static final String NPM_NAME = \"npmName\";\n+    private final JsonObject convertedObject;\n+\n+    VersionsJsonConverter(JsonObject platformVersions) {\n+        convertedObject = Json.createObject();\n+\n+        collectDependencies(platformVersions);\n+    }\n+\n+    JsonObject convert() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe4664d8a6cbde4388f08abe0b6ee19a4a856ec"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjY0NDY5OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/frontend/VersionsJsonConverterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODozMjoxOFrOFkpdDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODozMjoxOFrOFkpdDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk3MjIzNg==", "bodyText": "Remove this unused \"TemporaryFolder\".", "url": "https://github.com/vaadin/flow/pull/7456#discussion_r373972236", "createdAt": "2020-02-03T08:32:18Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/frontend/VersionsJsonConverterTest.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2000-2018 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.server.frontend;\n+\n+import java.io.IOException;\n+\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import elemental.json.Json;\n+import elemental.json.JsonObject;\n+\n+public class VersionsJsonConverterTest {\n+\n+    @Rule\n+    public TemporaryFolder temporaryFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe4664d8a6cbde4388f08abe0b6ee19a4a856ec"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3642, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}