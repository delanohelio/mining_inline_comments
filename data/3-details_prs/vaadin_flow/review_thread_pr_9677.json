{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNjU4Mzgy", "number": 9677, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMDo1NlrOFGn6_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNDoxNDozOFrOFK6HIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDg5ODUyOnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/java/com/vaadin/client/communication/ReconnectConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMDo1NlrOIHtvvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMDo1NlrOIHtvvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MDQ0Nw==", "bodyText": "Do not forget to remove this deprecated code someday.", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r544960447", "createdAt": "2020-12-17T10:00:56Z", "author": {"login": "vaadin-bot"}, "path": "flow-client/src/main/java/com/vaadin/client/communication/ReconnectConfiguration.java", "diffHunk": "@@ -95,12 +85,14 @@ public String getDialogText() {\n      *\n      * @return the text to show in the reconnect dialog when no longer trying to\n      *         reconnect\n+     *\n+     * @deprecated The API for configuring the connection indicator has changed.\n      */\n+    @Deprecated\n     public String getDialogTextGaveUp() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dedb4dbb76dc9713c5c3d5b32cd68d4af245655f"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDg5ODYxOnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/java/com/vaadin/client/communication/ReconnectConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMDo1N1rOIHtvzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMDo1N1rOIHtvzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MDQ2MA==", "bodyText": "Do not forget to remove this deprecated code someday.", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r544960460", "createdAt": "2020-12-17T10:00:57Z", "author": {"login": "vaadin-bot"}, "path": "flow-client/src/main/java/com/vaadin/client/communication/ReconnectConfiguration.java", "diffHunk": "@@ -66,27 +66,17 @@ private MapProperty getProperty(String key) {\n         return configurationMap.getProperty(key);\n     }\n \n-    /**\n-     * Checks whether the reconnect dialog should be modal, i.e. prevent\n-     * application usage while being shown.\n-     *\n-     * @return true if the dialog is modal, false otherwise\n-     */\n-    public boolean isDialogModal() {\n-        return getProperty(ReconnectDialogConfigurationMap.DIALOG_MODAL_KEY)\n-                .getValueOrDefault(\n-                        ReconnectDialogConfigurationMap.DIALOG_MODAL_DEFAULT);\n-    }\n-\n     /**\n      * Gets the text to show in the reconnect dialog.\n      *\n      * @return the text to show in the reconnect dialog.\n+     *\n+     * @deprecated The API for configuring the connection indicator has changed.\n      */\n+    @Deprecated\n     public String getDialogText() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dedb4dbb76dc9713c5c3d5b32cd68d4af245655f"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDg5ODc1OnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/java/com/vaadin/client/communication/DefaultConnectionStateHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMDo1OVrOIHtv3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMDo1OVrOIHtv3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MDQ3OQ==", "bodyText": "Remove this use of \"getDialogTextGaveUp\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r544960479", "createdAt": "2020-12-17T10:00:59Z", "author": {"login": "vaadin-bot"}, "path": "flow-client/src/main/java/com/vaadin/client/communication/DefaultConnectionStateHandler.java", "diffHunk": "@@ -385,11 +312,18 @@ protected String getDialogText(int reconnectAttempt) {\n     @Override\n     public void configurationUpdated() {\n         // All other properties are fetched directly from the state when needed\n-        reconnectDialog.setModal(getConfiguration().isDialogModal());\n+        if (getConfiguration().getDialogText() != null) {\n+            ConnectionIndicator.setProperty(\"reconnectingText\",\n+                    getConfiguration().getDialogText());\n+        }\n+        if (getConfiguration().getDialogTextGaveUp() != null) {\n+        ConnectionIndicator.setProperty(\"offlineText\",\n+                getConfiguration().getDialogTextGaveUp());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dedb4dbb76dc9713c5c3d5b32cd68d4af245655f"}, "originalPosition": 184}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDg5ODgwOnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/java/com/vaadin/client/communication/DefaultConnectionStateHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMTowMFrOIHtv6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMTowMFrOIHtv6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MDQ4OQ==", "bodyText": "Remove this use of \"getDialogText\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r544960489", "createdAt": "2020-12-17T10:01:00Z", "author": {"login": "vaadin-bot"}, "path": "flow-client/src/main/java/com/vaadin/client/communication/DefaultConnectionStateHandler.java", "diffHunk": "@@ -385,11 +312,18 @@ protected String getDialogText(int reconnectAttempt) {\n     @Override\n     public void configurationUpdated() {\n         // All other properties are fetched directly from the state when needed\n-        reconnectDialog.setModal(getConfiguration().isDialogModal());\n+        if (getConfiguration().getDialogText() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dedb4dbb76dc9713c5c3d5b32cd68d4af245655f"}, "originalPosition": 178}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDg5ODg1OnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/java/com/vaadin/client/communication/DefaultConnectionStateHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMTowMFrOIHtv8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMTowMFrOIHtv8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MDQ5OA==", "bodyText": "Remove this use of \"getDialogText\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r544960498", "createdAt": "2020-12-17T10:01:00Z", "author": {"login": "vaadin-bot"}, "path": "flow-client/src/main/java/com/vaadin/client/communication/DefaultConnectionStateHandler.java", "diffHunk": "@@ -385,11 +312,18 @@ protected String getDialogText(int reconnectAttempt) {\n     @Override\n     public void configurationUpdated() {\n         // All other properties are fetched directly from the state when needed\n-        reconnectDialog.setModal(getConfiguration().isDialogModal());\n+        if (getConfiguration().getDialogText() != null) {\n+            ConnectionIndicator.setProperty(\"reconnectingText\",\n+                    getConfiguration().getDialogText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dedb4dbb76dc9713c5c3d5b32cd68d4af245655f"}, "originalPosition": 180}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDg5ODkwOnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/java/com/vaadin/client/communication/DefaultConnectionStateHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMTowMVrOIHtv-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMTowMVrOIHtv-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MDUwNQ==", "bodyText": "Remove this use of \"getDialogTextGaveUp\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r544960505", "createdAt": "2020-12-17T10:01:01Z", "author": {"login": "vaadin-bot"}, "path": "flow-client/src/main/java/com/vaadin/client/communication/DefaultConnectionStateHandler.java", "diffHunk": "@@ -385,11 +312,18 @@ protected String getDialogText(int reconnectAttempt) {\n     @Override\n     public void configurationUpdated() {\n         // All other properties are fetched directly from the state when needed\n-        reconnectDialog.setModal(getConfiguration().isDialogModal());\n+        if (getConfiguration().getDialogText() != null) {\n+            ConnectionIndicator.setProperty(\"reconnectingText\",\n+                    getConfiguration().getDialogText());\n+        }\n+        if (getConfiguration().getDialogTextGaveUp() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dedb4dbb76dc9713c5c3d5b32cd68d4af245655f"}, "originalPosition": 182}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDg5OTAxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/startup/DevModeInitializer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMTowMlrOIHtwCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMTowMlrOIHtwCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MDUyMA==", "bodyText": "Complete the task associated to this TODO comment.", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r544960520", "createdAt": "2020-12-17T10:01:02Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/startup/DevModeInitializer.java", "diffHunk": "@@ -311,12 +313,14 @@ public static void initDevModeHandler(Set<Class<?>> classes,\n         File generatedPackages = new File(builder.generatedFolder,\n                 PACKAGE_JSON);\n \n-        // If we are missing the generated webpack configuration then generate\n-        // webpack configurations\n-        if (!new File(builder.npmFolder, WEBPACK_GENERATED).exists()) {\n-            builder.withWebpack(builder.npmFolder, FrontendUtils.WEBPACK_CONFIG,\n-                    FrontendUtils.WEBPACK_GENERATED);\n-        }\n+        // Regenerate webpack configuration, as it may be necessary to update it\n+        // TODO: make sure target directories are aligned with build config,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dedb4dbb76dc9713c5c3d5b32cd68d4af245655f"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDg5OTQ3OnYy", "diffSide": "RIGHT", "path": "flow-maven-plugin/src/main/java/com/vaadin/flow/plugin/maven/PrepareFrontendMojo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMTowOVrOIHtwTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMTowOVrOIHtwTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MDU5MQ==", "bodyText": "Remove this use of \"SERVLET_PARAMETER_PRODUCTION_MODE\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r544960591", "createdAt": "2020-12-17T10:01:09Z", "author": {"login": "vaadin-bot"}, "path": "flow-maven-plugin/src/main/java/com/vaadin/flow/plugin/maven/PrepareFrontendMojo.java", "diffHunk": "@@ -161,7 +143,7 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n     private void propagateBuildInfo() {\n         // For forked processes not accessing to System.properties we leave a\n         // token file with the information about the build\n-        File token = new File(webpackOutputDirectory, TOKEN_FILE);\n+        File token = new File(resourceOutputDirectory, TOKEN_FILE);\n         JsonObject buildInfo = Json.createObject();\n         buildInfo.put(SERVLET_PARAMETER_PRODUCTION_MODE, productionMode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dedb4dbb76dc9713c5c3d5b32cd68d4af245655f"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDg5OTU4OnYy", "diffSide": "RIGHT", "path": "flow-maven-plugin/src/main/java/com/vaadin/flow/plugin/maven/PrepareFrontendMojo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMToxMFrOIHtwXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDowMToxMFrOIHtwXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MDYwNw==", "bodyText": "Remove this use of \"SERVLET_PARAMETER_USE_V14_BOOTSTRAP\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r544960607", "createdAt": "2020-12-17T10:01:10Z", "author": {"login": "vaadin-bot"}, "path": "flow-maven-plugin/src/main/java/com/vaadin/flow/plugin/maven/PrepareFrontendMojo.java", "diffHunk": "@@ -161,7 +143,7 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n     private void propagateBuildInfo() {\n         // For forked processes not accessing to System.properties we leave a\n         // token file with the information about the build\n-        File token = new File(webpackOutputDirectory, TOKEN_FILE);\n+        File token = new File(resourceOutputDirectory, TOKEN_FILE);\n         JsonObject buildInfo = Json.createObject();\n         buildInfo.put(SERVLET_PARAMETER_PRODUCTION_MODE, productionMode);\n         buildInfo.put(SERVLET_PARAMETER_USE_V14_BOOTSTRAP,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dedb4dbb76dc9713c5c3d5b32cd68d4af245655f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2OTgyMTc5OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/webpack.generated.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNDoxNDozOFrOINzIqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOTo0NzoyMVrOIN-vng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM0MDIwMA==", "bodyText": "I guess these comments should be removed. My fault as I think I introduced them. :P", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r551340200", "createdAt": "2021-01-04T14:14:38Z", "author": {"login": "Haprog"}, "path": "flow-server/src/main/resources/webpack.generated.js", "diffHunk": "@@ -107,6 +122,52 @@ if (useClientSideIndexFileForBootstrapping) {\n   webPackEntries.bundle = fileNameOfTheFlowGeneratedMainEntryPoint;\n }\n \n+const appShellUrl = '.';\n+\n+const swManifestTransform = (manifestEntries) => {\n+  const warnings = [];\n+  const manifest = manifestEntries;\n+\n+  // `index.html` is a special case: in contrast with the JS bundles produced by webpack\n+  // it's not served as-is directly from the webpack output at `/index.html`.\n+  // It goes through IndexHtmlRequestHandler and is served at `/`.\n+  //\n+  // TODO: calculate the revision based on the IndexHtmlRequestHandler-processed content\n+  // of the index.html file\n+  const indexEntryIdx = manifest.findIndex(entry => entry.url === 'index.html');\n+  if (indexEntryIdx !== -1) {\n+    manifest[indexEntryIdx].url = appShellUrl;\n+  }\n+\n+  return { manifest, warnings };\n+};\n+\n+const serviceWorkerPlugin = new InjectManifest({\n+  swSrc: clientServiceWorkerEntryPoint,\n+  swDest: serviceWorkerPath,\n+  manifestTransforms: [swManifestTransform],\n+  maximumFileSizeToCacheInBytes: 100 * 1024 * 1024,\n+  dontCacheBustURLsMatching: /.*-[a-z0-9]{20}\\.cache\\.js/,\n+  include: [\n+    (chunk) => {\n+      return true;\n+    },\n+  ],\n+  webpackCompilationPlugins: [\n+    new DefinePlugin({\n+      OFFLINE_PATH_ENABLED: offlinePathEnabled,\n+      OFFLINE_PATH: JSON.stringify(offlinePath)\n+    }),\n+  ],\n+  //navigateFallback: rootUrl,\n+  /*runtimeCaching: [\n+    {\n+      urlPattern: /.* /,\n+      handler: \"NetworkFirst\",\n+    },\n+  ],*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a660332327a17edea8e8c094a9e3d1df07ef674b"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzMDM5OA==", "bodyText": "Done.", "url": "https://github.com/vaadin/flow/pull/9677#discussion_r551530398", "createdAt": "2021-01-04T19:47:21Z", "author": {"login": "joheriks"}, "path": "flow-server/src/main/resources/webpack.generated.js", "diffHunk": "@@ -107,6 +122,52 @@ if (useClientSideIndexFileForBootstrapping) {\n   webPackEntries.bundle = fileNameOfTheFlowGeneratedMainEntryPoint;\n }\n \n+const appShellUrl = '.';\n+\n+const swManifestTransform = (manifestEntries) => {\n+  const warnings = [];\n+  const manifest = manifestEntries;\n+\n+  // `index.html` is a special case: in contrast with the JS bundles produced by webpack\n+  // it's not served as-is directly from the webpack output at `/index.html`.\n+  // It goes through IndexHtmlRequestHandler and is served at `/`.\n+  //\n+  // TODO: calculate the revision based on the IndexHtmlRequestHandler-processed content\n+  // of the index.html file\n+  const indexEntryIdx = manifest.findIndex(entry => entry.url === 'index.html');\n+  if (indexEntryIdx !== -1) {\n+    manifest[indexEntryIdx].url = appShellUrl;\n+  }\n+\n+  return { manifest, warnings };\n+};\n+\n+const serviceWorkerPlugin = new InjectManifest({\n+  swSrc: clientServiceWorkerEntryPoint,\n+  swDest: serviceWorkerPath,\n+  manifestTransforms: [swManifestTransform],\n+  maximumFileSizeToCacheInBytes: 100 * 1024 * 1024,\n+  dontCacheBustURLsMatching: /.*-[a-z0-9]{20}\\.cache\\.js/,\n+  include: [\n+    (chunk) => {\n+      return true;\n+    },\n+  ],\n+  webpackCompilationPlugins: [\n+    new DefinePlugin({\n+      OFFLINE_PATH_ENABLED: offlinePathEnabled,\n+      OFFLINE_PATH: JSON.stringify(offlinePath)\n+    }),\n+  ],\n+  //navigateFallback: rootUrl,\n+  /*runtimeCaching: [\n+    {\n+      urlPattern: /.* /,\n+      handler: \"NetworkFirst\",\n+    },\n+  ],*/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM0MDIwMA=="}, "originalCommit": {"oid": "a660332327a17edea8e8c094a9e3d1df07ef674b"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3770, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}