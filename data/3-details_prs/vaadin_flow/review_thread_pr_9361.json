{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NDYyMjUx", "number": 9361, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoxNTo1MFrOE3ZYqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowMjowNlrOE3ouoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTIzMDUxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/osgi/VaadinBundleTracker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoxNTo1MFrOHwuAEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoxNTo1MFrOHwuAEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg0NzM3OQ==", "bodyText": "Remove this call from a constructor to the overridable \"open\" method.", "url": "https://github.com/vaadin/flow/pull/9361#discussion_r520847379", "createdAt": "2020-11-10T20:15:50Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/osgi/VaadinBundleTracker.java", "diffHunk": "@@ -99,15 +105,26 @@ protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n \n     /**\n      * Creates a new instance of a bundle tracker.\n-     *\n+     * OSGi ServiceComponentRuntime injects the BundleContext because of the @Activate\n      * @param context\n      *            the {@code BundleContext} against which the tracking is done\n      */\n+    @Activate\n     public VaadinBundleTracker(BundleContext context) {\n         super(context, Bundle.ACTIVE | Bundle.RESOLVED, null);\n         flowServerBundle = context.getBundle();\n+        open();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173f672744bf1d6c8feaa16af9fb3262af3059fe"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTIzMDYwOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/osgi/VaadinBundleTracker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoxNTo1MVrOHwuAIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoxNTo1MVrOHwuAIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg0NzM5Mg==", "bodyText": "Replace the synchronized class \"Hashtable\" by an unsynchronized one such as \"HashMap\".", "url": "https://github.com/vaadin/flow/pull/9361#discussion_r520847392", "createdAt": "2020-11-10T20:15:51Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/osgi/VaadinBundleTracker.java", "diffHunk": "@@ -145,7 +162,7 @@ public Bundle addingBundle(Bundle bundle, BundleEvent event) {\n \n     private void registerPushResources(Bundle pushBundle) {\n         Hashtable<String, Object> properties = new Hashtable<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173f672744bf1d6c8feaa16af9fb3262af3059fe"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTIzMDcyOnYy", "diffSide": "RIGHT", "path": "flow-polymer-template/src/main/java/com/vaadin/flow/component/polymertemplate/rpc/PolymerPublishedEventRpcHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoxNTo1MlrOHwuAMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoxNTo1MlrOHwuAMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg0NzQxMA==", "bodyText": "Remove this use of \"DeprecatedPolymerPublishedEventHandler\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/9361#discussion_r520847410", "createdAt": "2020-11-10T20:15:52Z", "author": {"login": "vaadin-bot"}, "path": "flow-polymer-template/src/main/java/com/vaadin/flow/component/polymertemplate/rpc/PolymerPublishedEventRpcHandler.java", "diffHunk": "@@ -31,8 +32,11 @@\n /**\n  * Polymer utilitiy class for handling polymer rpc events for @EventHandler.\n  *\n+ * Registers {@link PolymerPublishedEventRpcHandler} as a service to make it\n+ * available in {@link Lookup} in an OSGi container. *\n  * @since\n  */\n+@org.osgi.service.component.annotations.Component(immediate = true)\n public class PolymerPublishedEventRpcHandler\n         implements DeprecatedPolymerPublishedEventHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173f672744bf1d6c8feaa16af9fb3262af3059fe"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2Nzc0NDMyOnYy", "diffSide": "RIGHT", "path": "flow-polymer-template/src/main/java/com/vaadin/flow/component/polymertemplate/rpc/PolymerPublishedEventRpcHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowMjowNlrOHxGWfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowMjowNlrOHxGWfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0NjMzNA==", "bodyText": "No need to use FQN. Just add an import.", "url": "https://github.com/vaadin/flow/pull/9361#discussion_r521246334", "createdAt": "2020-11-11T10:02:06Z", "author": {"login": "denis-anisimov"}, "path": "flow-polymer-template/src/main/java/com/vaadin/flow/component/polymertemplate/rpc/PolymerPublishedEventRpcHandler.java", "diffHunk": "@@ -31,8 +32,11 @@\n /**\n  * Polymer utilitiy class for handling polymer rpc events for @EventHandler.\n  *\n+ * Registers {@link PolymerPublishedEventRpcHandler} as a service to make it\n+ * available in {@link Lookup} in an OSGi container. *\n  * @since\n  */\n+@org.osgi.service.component.annotations.Component(immediate = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173f672744bf1d6c8feaa16af9fb3262af3059fe"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3010, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}