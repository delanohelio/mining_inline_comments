{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMjQ1OTU5", "number": 8739, "title": "Store webpack dev server port in tempfile named from JVM unique constant and project folder", "bodyText": "See #8723 (comment).\nFixes #8723", "createdAt": "2020-07-20T09:27:35Z", "url": "https://github.com/vaadin/flow/pull/8739", "merged": true, "mergeCommit": {"oid": "459026e9508c1cd9683d1f2eabe911bbc47d3156"}, "closed": true, "closedAt": "2020-07-23T09:47:16Z", "author": {"login": "joheriks"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2xH_SAFqTQ1MTU3NTU4Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3rcUbAFqTQ1Mzk0MTU5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTc1NTg2", "url": "https://github.com/vaadin/flow/pull/8739#pullrequestreview-451575586", "createdAt": "2020-07-20T12:51:58Z", "commit": {"oid": "2ab807c4b75d054f60cd9eab95fcb3dc62126d93"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMjo1MTo1OFrOG0KtIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMjo1MTo1OFrOG0KtIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM1NDUzMQ==", "bodyText": "I think I don't understand the reason of the issue.\nDoes JVM exit ?\nThe current (before the patch) state of code assumes that the port file is 1:1 JVM.\nIf JVM has exited then I don't understand how this code allows to get the same file name in new JVM.\nIf JVM has not terminated then why there is a need to modify the code ?\nIn the second case if JVM has terminated watchdog should terminate the webpack dev server as well.\nAnd it looks like the fix is done in a wrong place ?....", "url": "https://github.com/vaadin/flow/pull/8739#discussion_r457354531", "createdAt": "2020-07-20T12:51:58Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -464,7 +468,7 @@ public String getFailedOutput() {\n      * Remove the running port from the vaadinContext and temporary file.\n      */\n     public void removeRunningDevServerPort() {\n-        FileUtils.deleteQuietly(LazyDevServerPortFileInit.DEV_SERVER_PORT_FILE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ab807c4b75d054f60cd9eab95fcb3dc62126d93"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMTI5Nzkz", "url": "https://github.com/vaadin/flow/pull/8739#pullrequestreview-452129793", "createdAt": "2020-07-21T05:09:18Z", "commit": {"oid": "2ab807c4b75d054f60cd9eab95fcb3dc62126d93"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNTowOToxOFrOG0oTrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNToxMDo1OVrOG0oVww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzOTUzMg==", "bodyText": "Hmmm.....\nLazyDevServerPortFileInit.DEV_SERVER_PORT_FILE can't be lost since JVM is not terminated.\nIt doesn't matter whether initializers are rerun or not. Class is loaded once and should be there since JVM is alive.\nThe only thing which I missed is: the app is loaded via another classloader after Jetty restart even though JVM is not\nterminiated.\nThat's why static initializers are rerun: they are not rerun in fact. Classes are loaded by another classloader so that previous initializers initialized differerent classes (in a different scope).\nNow I see my mistake.", "url": "https://github.com/vaadin/flow/pull/8739#discussion_r457839532", "createdAt": "2020-07-21T05:09:18Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -464,7 +468,7 @@ public String getFailedOutput() {\n      * Remove the running port from the vaadinContext and temporary file.\n      */\n     public void removeRunningDevServerPort() {\n-        FileUtils.deleteQuietly(LazyDevServerPortFileInit.DEV_SERVER_PORT_FILE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM1NDUzMQ=="}, "originalCommit": {"oid": "2ab807c4b75d054f60cd9eab95fcb3dc62126d93"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzOTg2MA==", "bodyText": "Alright, now I understand the reason by I don't understand the solution.....\nBut that should be a comment in another place.", "url": "https://github.com/vaadin/flow/pull/8739#discussion_r457839860", "createdAt": "2020-07-21T05:10:14Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -464,7 +468,7 @@ public String getFailedOutput() {\n      * Remove the running port from the vaadinContext and temporary file.\n      */\n     public void removeRunningDevServerPort() {\n-        FileUtils.deleteQuietly(LazyDevServerPortFileInit.DEV_SERVER_PORT_FILE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM1NDUzMQ=="}, "originalCommit": {"oid": "2ab807c4b75d054f60cd9eab95fcb3dc62126d93"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0MDA2Nw==", "bodyText": "What I don't understand here: why the thread group will be the same after restart ?\nWhich way it's forced ?", "url": "https://github.com/vaadin/flow/pull/8739#discussion_r457840067", "createdAt": "2020-07-21T05:10:59Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -742,18 +745,21 @@ void join() {\n         devServerStartFuture.join();\n     }\n \n-    private static final class LazyDevServerPortFileInit {\n-\n-        private static final File DEV_SERVER_PORT_FILE = createDevServerPortFile();\n-\n-        private static File createDevServerPortFile() {\n-            try {\n-                return File.createTempFile(\"flow-dev-server\", \"port\");\n-            } catch (IOException exception) {\n-                throw new UncheckedIOException(exception);\n-            }\n-        }\n \n+    private static File getDevServerPortFile(File npmFolder) {\n+        // The thread group is the same in each servlet-container restart\n+        String threadGroup = String\n+                .valueOf(Thread.currentThread().getThreadGroup().hashCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ab807c4b75d054f60cd9eab95fcb3dc62126d93"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMTU0OTUy", "url": "https://github.com/vaadin/flow/pull/8739#pullrequestreview-452154952", "createdAt": "2020-07-21T06:17:23Z", "commit": {"oid": "2ab807c4b75d054f60cd9eab95fcb3dc62126d93"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNjoxNzoyM1rOG0poYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNjoxNzoyM1rOG0poYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2MTIxNg==", "bodyText": "What do you think about using File.createTempFile instead? (https://docs.oracle.com/javase/8/docs/api/java/io/File.html#createTempFile-java.lang.String-java.lang.String-)", "url": "https://github.com/vaadin/flow/pull/8739#discussion_r457861216", "createdAt": "2020-07-21T06:17:23Z", "author": {"login": "knoobie"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -742,18 +745,21 @@ void join() {\n         devServerStartFuture.join();\n     }\n \n-    private static final class LazyDevServerPortFileInit {\n-\n-        private static final File DEV_SERVER_PORT_FILE = createDevServerPortFile();\n-\n-        private static File createDevServerPortFile() {\n-            try {\n-                return File.createTempFile(\"flow-dev-server\", \"port\");\n-            } catch (IOException exception) {\n-                throw new UncheckedIOException(exception);\n-            }\n-        }\n \n+    private static File getDevServerPortFile(File npmFolder) {\n+        // The thread group is the same in each servlet-container restart\n+        String threadGroup = String\n+                .valueOf(Thread.currentThread().getThreadGroup().hashCode());\n+        String frontendBuildPath = npmFolder.getAbsolutePath();\n+\n+        // #8723: keep webpack alive when Jetty restarts.\n+        // Thread group ID prevents the port file from being picked up after JVM\n+        // restart. Frontend path ensures uniqueness when multiple devmode apps\n+        // are deployed.\n+        String uniqueUid = UUID\n+                .nameUUIDFromBytes((threadGroup + frontendBuildPath)\n+                        .getBytes(StandardCharsets.UTF_8))\n+                .toString();\n+        return new File(System.getProperty(\"java.io.tmpdir\"), uniqueUid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ab807c4b75d054f60cd9eab95fcb3dc62126d93"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a9ddc400f3949caf4cf4b70d85150157a1ff57c", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/6a9ddc400f3949caf4cf4b70d85150157a1ff57c", "committedDate": "2020-07-21T14:12:24Z", "message": "Store webpack dev server in tempfile named from threadgroup and frontend folder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6825f136b40adb42604483ccc8cb1e3f239307a9", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/6825f136b40adb42604483ccc8cb1e3f239307a9", "committedDate": "2020-07-21T14:12:24Z", "message": "Fixed failing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0aec4c0861feef9d2b1797ac7ea9f8647fd8b3b3", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/0aec4c0861feef9d2b1797ac7ea9f8647fd8b3b3", "committedDate": "2020-07-21T14:12:24Z", "message": "IT module that verifies webpack reuse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c598c273dba007aaa8956735e8aa98835158fae", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/5c598c273dba007aaa8956735e8aa98835158fae", "committedDate": "2020-07-21T14:12:24Z", "message": "Use UUID in system property to distinguish JVM runtimes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55ab92eeb7e8178fbc931f32e8440d3501028a42", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/55ab92eeb7e8178fbc931f32e8440d3501028a42", "committedDate": "2020-07-21T12:36:48Z", "message": "Use UUID in system property to distinguish JVM runtimes"}, "afterCommit": {"oid": "5c598c273dba007aaa8956735e8aa98835158fae", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/5c598c273dba007aaa8956735e8aa98835158fae", "committedDate": "2020-07-21T14:12:24Z", "message": "Use UUID in system property to distinguish JVM runtimes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb5534e7d558bbad57a537176fe4db384991a366", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/eb5534e7d558bbad57a537176fe4db384991a366", "committedDate": "2020-07-21T16:00:24Z", "message": "Debugging aids"}, "afterCommit": {"oid": "83c4d407940266fa34a1c5c7570f491dc3be34ef", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/83c4d407940266fa34a1c5c7570f491dc3be34ef", "committedDate": "2020-07-21T17:43:38Z", "message": "Debugging aids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87c0f927ce645154172c49058dc35c95030addb5", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/87c0f927ce645154172c49058dc35c95030addb5", "committedDate": "2020-07-21T20:02:18Z", "message": "Debugging aids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9033f99d53510b7f6ad35654f638b6a7f7d1a6d", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/f9033f99d53510b7f6ad35654f638b6a7f7d1a6d", "committedDate": "2020-07-21T20:02:52Z", "message": "Set reuseDevServer property explicity"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83c4d407940266fa34a1c5c7570f491dc3be34ef", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/83c4d407940266fa34a1c5c7570f491dc3be34ef", "committedDate": "2020-07-21T17:43:38Z", "message": "Debugging aids"}, "afterCommit": {"oid": "f9033f99d53510b7f6ad35654f638b6a7f7d1a6d", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/f9033f99d53510b7f6ad35654f638b6a7f7d1a6d", "committedDate": "2020-07-21T20:02:52Z", "message": "Set reuseDevServer property explicity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40a0aa237d13b196feb63a440d886a74419be1bd", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/40a0aa237d13b196feb63a440d886a74419be1bd", "committedDate": "2020-07-22T08:34:09Z", "message": "More log"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "625648945cc2b18f3b5fb2593adec8bb16928437", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/625648945cc2b18f3b5fb2593adec8bb16928437", "committedDate": "2020-07-22T07:52:34Z", "message": "Log sysprop"}, "afterCommit": {"oid": "40a0aa237d13b196feb63a440d886a74419be1bd", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/40a0aa237d13b196feb63a440d886a74419be1bd", "committedDate": "2020-07-22T08:34:09Z", "message": "More log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3198a8b406dd0af0bd523a0f82726b752c6114f5", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/3198a8b406dd0af0bd523a0f82726b752c6114f5", "committedDate": "2020-07-22T09:59:49Z", "message": "Force system property override"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cdec265910567f11e3ac39817c81ff6ef76d14af", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/cdec265910567f11e3ac39817c81ff6ef76d14af", "committedDate": "2020-07-22T09:39:04Z", "message": "Reorder tests"}, "afterCommit": {"oid": "3198a8b406dd0af0bd523a0f82726b752c6114f5", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/3198a8b406dd0af0bd523a0f82726b752c6114f5", "committedDate": "2020-07-22T09:59:49Z", "message": "Force system property override"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b47e8c0939bde4822212087bd380eae03792ed8b", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/b47e8c0939bde4822212087bd380eae03792ed8b", "committedDate": "2020-07-22T10:11:36Z", "message": "Revert \"More log\"\n\nThis reverts commit 40a0aa237d13b196feb63a440d886a74419be1bd."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df31a69e2ae93646f972ffda7460cf803b23ce36", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/df31a69e2ae93646f972ffda7460cf803b23ce36", "committedDate": "2020-07-22T10:11:46Z", "message": "Revert \"Debugging aids\"\n\nThis reverts commit 87c0f927ce645154172c49058dc35c95030addb5."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODI4ODMz", "url": "https://github.com/vaadin/flow/pull/8739#pullrequestreview-453828833", "createdAt": "2020-07-23T04:27:07Z", "commit": {"oid": "df31a69e2ae93646f972ffda7460cf803b23ce36"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDoyNzowOFrOG172Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDozNTozNFrOG178bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwODE5OQ==", "bodyText": "Minor : please avoid one letter variable .\nFix only if there are other things to fix as well...", "url": "https://github.com/vaadin/flow/pull/8739#discussion_r459208199", "createdAt": "2020-07-23T04:27:08Z", "author": {"login": "denis-anisimov"}, "path": "flow-tests/test-jetty-reload/src/main/java/com/vaadin/flow/uitest/ui/WebpackDevServerPortView.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.UUID;\n+\n+import com.vaadin.flow.component.html.Div;\n+import com.vaadin.flow.component.html.NativeButton;\n+import com.vaadin.flow.component.html.Span;\n+import com.vaadin.flow.router.Route;\n+import com.vaadin.flow.server.DevModeHandler;\n+import com.vaadin.flow.uitest.servlet.ViewTestLayout;\n+\n+@Route(value = \"com.vaadin.flow.uitest.ui.WebpackDevServerPortView\", layout = ViewTestLayout.class)\n+public class WebpackDevServerPortView extends Div {\n+\n+    public static final String UUID_ID = \"uuid\";\n+    public static final String WEBPACK_PORT_ID = \"webpackPortId\";\n+    public static final String TRIGGER_RELOAD_ID = \"triggerReload\";\n+\n+    private static final UUID uuid = UUID.randomUUID();\n+\n+    public WebpackDevServerPortView() {\n+        // Add a unique number to identify reload\n+        Span unique = new Span(String.valueOf(uuid));\n+        unique.setId(UUID_ID);\n+        add(unique);\n+\n+        DevModeHandler handler = DevModeHandler.getDevModeHandler();\n+        Span portSpan = new Span(String.valueOf(handler.getPort()));\n+        portSpan.setId(WEBPACK_PORT_ID);\n+        add(portSpan);\n+\n+        final NativeButton triggerButton = new NativeButton(\"Trigger reload\",\n+                e -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df31a69e2ae93646f972ffda7460cf803b23ce36"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwODI4NA==", "bodyText": "Any reason to have it ?", "url": "https://github.com/vaadin/flow/pull/8739#discussion_r459208284", "createdAt": "2020-07-23T04:27:37Z", "author": {"login": "denis-anisimov"}, "path": "flow-tests/test-jetty-reload/src/test/java/com/vaadin/flow/uitest/ui/WebpackDevServerPortIT.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui;\n+\n+import net.jcip.annotations.NotThreadSafe;\n+import org.apache.commons.lang3.math.NumberUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.TimeoutException;\n+\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+@NotThreadSafe", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df31a69e2ae93646f972ffda7460cf803b23ce36"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwOTgzOQ==", "bodyText": "10 is a magic constant.\nI would perhaps use waitUntil with some hardcoded big timeout.\nwaitUntil is effectively doing the same: run the condition until it becomes true over and over again.\nSo you may just put getDriver().navigate().refresh(); and return !initialUUID.equals( findElement(By.id(WebpackDevServerPortView.UUID_ID)) .getText() as the expected condition impl.\nAlso add a second parameter as a timeout.\nThat will allow to avoid: magic 10 constant, cycle, reconnected flag, catch an exception.", "url": "https://github.com/vaadin/flow/pull/8739#discussion_r459209839", "createdAt": "2020-07-23T04:35:34Z", "author": {"login": "denis-anisimov"}, "path": "flow-tests/test-jetty-reload/src/test/java/com/vaadin/flow/uitest/ui/WebpackDevServerPortIT.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui;\n+\n+import net.jcip.annotations.NotThreadSafe;\n+import org.apache.commons.lang3.math.NumberUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.TimeoutException;\n+\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+@NotThreadSafe\n+public class WebpackDevServerPortIT extends ChromeBrowserTest {\n+\n+    @Test\n+    public void webpackDevServerPortShouldBeReusedOnReload() {\n+        open();\n+\n+        String initialUUID = findElement(\n+                By.id(WebpackDevServerPortView.UUID_ID)).getText();\n+        Assert.assertEquals(36, initialUUID.length());\n+\n+        String initialPort = findElement(\n+                By.id(WebpackDevServerPortView.WEBPACK_PORT_ID)).getText();\n+        Assert.assertTrue(NumberUtils.isDigits(initialPort));\n+\n+        // trigger jetty reload\n+        findElement(By.id(WebpackDevServerPortView.TRIGGER_RELOAD_ID)).click();\n+\n+        // keep refreshing until page comes back (the UUID has changed)\n+        boolean reconnected = false;\n+        for (int i = 0; i < 10; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df31a69e2ae93646f972ffda7460cf803b23ce36"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "711692c76219dde71dae592caf769b1d5c62d889", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/711692c76219dde71dae592caf769b1d5c62d889", "committedDate": "2020-07-23T06:36:49Z", "message": "Renamed variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzOTA1Nzk2", "url": "https://github.com/vaadin/flow/pull/8739#pullrequestreview-453905796", "createdAt": "2020-07-23T07:54:12Z", "commit": {"oid": "711692c76219dde71dae592caf769b1d5c62d889"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNzo1NDoxMlrOG1_1LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNzo1NDoxMlrOG1_1LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI3MzUxNg==", "bodyText": "", "url": "https://github.com/vaadin/flow/pull/8739#discussion_r459273516", "createdAt": "2020-07-23T07:54:12Z", "author": {"login": "denis-anisimov"}, "path": "flow-tests/test-jetty-reload/src/test/java/com/vaadin/flow/uitest/ui/WebpackDevServerPortIT.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui;\n+\n+import net.jcip.annotations.NotThreadSafe;\n+import org.apache.commons.lang3.math.NumberUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.TimeoutException;\n+\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+@NotThreadSafe\n+public class WebpackDevServerPortIT extends ChromeBrowserTest {\n+\n+    @Test\n+    public void webpackDevServerPortShouldBeReusedOnReload() {\n+        open();\n+\n+        String initialUUID = findElement(\n+                By.id(WebpackDevServerPortView.UUID_ID)).getText();\n+        Assert.assertEquals(36, initialUUID.length());\n+\n+        String initialPort = findElement(\n+                By.id(WebpackDevServerPortView.WEBPACK_PORT_ID)).getText();\n+        Assert.assertTrue(NumberUtils.isDigits(initialPort));\n+\n+        // trigger jetty reload\n+        findElement(By.id(WebpackDevServerPortView.TRIGGER_RELOAD_ID)).click();\n+\n+        // keep refreshing until page comes back (the UUID has changed)\n+        boolean reconnected = false;\n+        for (int i = 0; i < 10; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwOTgzOQ=="}, "originalCommit": {"oid": "df31a69e2ae93646f972ffda7460cf803b23ce36"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83811f491944621205e477406334b81ff133dd0e", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/83811f491944621205e477406334b81ff133dd0e", "committedDate": "2020-07-23T08:27:59Z", "message": "Simplified wait loop for Jetty reload"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzOTQxNTkx", "url": "https://github.com/vaadin/flow/pull/8739#pullrequestreview-453941591", "createdAt": "2020-07-23T08:48:46Z", "commit": {"oid": "83811f491944621205e477406334b81ff133dd0e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 302, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}