{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NTMzNjI0", "number": 9036, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0NjowN1rOEogqvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo1MTo1OFrOEogyhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTEzNzI1OnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/Connect.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0NjowN1rOHZpNMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0NjowN1rOHZpNMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1MTU3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if(shouldSubmit){\n          \n          \n            \n                if (shouldSubmit) {", "url": "https://github.com/vaadin/flow/pull/9036#discussion_r496651571", "createdAt": "2020-09-29T11:46:07Z", "author": {"login": "Haprog"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/Connect.ts", "diffHunk": "@@ -407,15 +411,75 @@ export class ConnectClient {\n     return navigator.onLine;\n   }\n \n-  private async cacheEndpointRequest(endpointRequest: EndpointRequest) {\n-    await set(endpointRequest.id, endpointRequest, this.getOrCreateEndpointRequetsQueue());\n+  private async cacheEndpointRequest(endpointRequest: EndpointRequest): Promise<EndpointRequest>{\n+    const db = await this.openOrCreateDB();\n+    const id = await db.add(REQUEST_QUEUE_STORE_NAME, endpointRequest);\n+    db.close();\n+    endpointRequest.id = id;\n+    return endpointRequest;\n   }\n \n-  private getOrCreateEndpointRequetsQueue(): Store {\n-    if (!this.endpointRequetsQueue) {\n-      this.endpointRequetsQueue = new Store('cached-vaadin-endpoint-requests');\n+  private async openOrCreateDB(): Promise<IDBPDatabase<RequestQueueDB>> {\n+    return openDB<RequestQueueDB>(REQUEST_QUEUE_DB_NAME, 1, {\n+      upgrade(db) {\n+        db.createObjectStore(REQUEST_QUEUE_STORE_NAME, {\n+          keyPath: 'id',\n+          autoIncrement: true\n+        });\n+      },\n+    });\n+  }\n+\n+  private async checkAndSubmitCachedRequests(){\n+    const db = await this.openOrCreateDB();\n+\n+    /**\n+     * Cannot wait for submitting the cached requests in the indexed db transaction, \n+     * as the transaction only wait for db operations. \n+     * See https://github.com/jakearchibald/idb#transaction-lifetime\n+     */\n+    const shouldSubmit = await this.shouldSubmitCachedRequests(db);\n+\n+    if(shouldSubmit){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8051df2b8d1b5a61048f6252c3d20ef56e59258"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTE1NzE5OnYy", "diffSide": "RIGHT", "path": "flow-client/src/test/frontend/ConnectTests.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo1MTo1OFrOHZpZJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo1MTo1OFrOHZpZJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NDYyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(!request.id){\n          \n          \n            \n                    if (!request.id) {", "url": "https://github.com/vaadin/flow/pull/9036#discussion_r496654629", "createdAt": "2020-09-29T11:51:58Z", "author": {"login": "Haprog"}, "path": "flow-client/src/test/frontend/ConnectTests.ts", "diffHunk": "@@ -508,19 +508,19 @@ describe('ConnectClient', () => {\n \n   describe(\"Defer Request\", () => {\n     let client: ConnectClient;\n-    const offlineRequestQueue = new Store('cached-vaadin-endpoint-requests');\n \n     beforeEach(() => {\n       client = new ConnectClient();\n     });\n \n-    afterEach(() => {\n-      fetchMock.restore();\n-      clear(offlineRequestQueue);\n-    });\n-\n     it(\"Should return a DeferrableResult that retains request meta when invoking deferRequest offline\", async () => {\n       sinon.stub(client, \"checkOnline\").callsFake(() => false);\n+      sinon.stub(client, \"cacheEndpointRequest\").callsFake((request:any) => {\n+        if(!request.id){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8051df2b8d1b5a61048f6252c3d20ef56e59258"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3075, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}