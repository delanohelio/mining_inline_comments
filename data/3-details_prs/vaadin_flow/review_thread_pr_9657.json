{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMTI4NjEw", "number": 9657, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjozNzoyNlrOFFkM4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo0ODoyNFrOFGJr0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzgwMzIzOnYy", "diffSide": "RIGHT", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/CompositeDataGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjozNzoyNlrOIGIx6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjo0NzowMFrOIGJKQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwNjIxOA==", "bodyText": "Does this change API slightly in that addDataGenerator is no longer idempotent? Would perhaps be safer to use LinkedHashSet, which has set semantics but preserves order.", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r543306218", "createdAt": "2020-12-15T12:37:26Z", "author": {"login": "joheriks"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/CompositeDataGenerator.java", "diffHunk": "@@ -39,7 +39,7 @@\n public class CompositeDataGenerator<T>\n         implements DataGenerator<T>, HasDataGenerators<T> {\n \n-    private final Set<DataGenerator<T>> dataGenerators = new HashSet<>();\n+    private final List<DataGenerator<T>> dataGenerators = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c03cc070b134178196d7fc945972ad5efab50ab8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxMjQ0OQ==", "bodyText": "True", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r543312449", "createdAt": "2020-12-15T12:47:00Z", "author": {"login": "TatuLund"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/CompositeDataGenerator.java", "diffHunk": "@@ -39,7 +39,7 @@\n public class CompositeDataGenerator<T>\n         implements DataGenerator<T>, HasDataGenerators<T> {\n \n-    private final Set<DataGenerator<T>> dataGenerators = new HashSet<>();\n+    private final List<DataGenerator<T>> dataGenerators = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwNjIxOA=="}, "originalCommit": {"oid": "c03cc070b134178196d7fc945972ad5efab50ab8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDYxODUwOnYy", "diffSide": "RIGHT", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTowOTo1MVrOIGQPXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTowOTo1MVrOIGQPXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyODQ0Nw==", "bodyText": "Arrays may need import.", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r543428447", "createdAt": "2020-12-15T15:09:51Z", "author": {"login": "joheriks"}, "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "diffHunk": "@@ -196,4 +196,14 @@ public void dataGeneratorRegistration_remove_dataIsDestroyed() {\n                 CoreMatchers.not(CoreMatchers.hasItem(\"item1\")));\n     }\n \n+    @Test\n+    public void orderIsPreserved() {\n+        CompositeDataGenerator<String> cdg = new CompositeDataGenerator<>();\n+        DataGenerator<String> dg1 = (String, JsonObject) -> {};\n+        DataGenerator<String> dg2 = (String, JsonObject) -> {};\n+        List<DataGenerator<String>> expected = Arrays.asList(dg1,dg2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd9540c899bed4b1feab5d438346d038c86859e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDYxOTg1OnYy", "diffSide": "RIGHT", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNToxMDowNFrOIGQQIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNToxMDowNFrOIGQQIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyODY0Mg==", "bodyText": "Assert.assertEquals or import.", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r543428642", "createdAt": "2020-12-15T15:10:04Z", "author": {"login": "joheriks"}, "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "diffHunk": "@@ -196,4 +196,14 @@ public void dataGeneratorRegistration_remove_dataIsDestroyed() {\n                 CoreMatchers.not(CoreMatchers.hasItem(\"item1\")));\n     }\n \n+    @Test\n+    public void orderIsPreserved() {\n+        CompositeDataGenerator<String> cdg = new CompositeDataGenerator<>();\n+        DataGenerator<String> dg1 = (String, JsonObject) -> {};\n+        DataGenerator<String> dg2 = (String, JsonObject) -> {};\n+        List<DataGenerator<String>> expected = Arrays.asList(dg1,dg2);\n+        cdg.addDataGenerator(dg1);\n+        cdg.addDataGenerator(dg2);\n+        assertEquals(expected,new ArrayList<>(cdg.dataGenerators));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd9540c899bed4b1feab5d438346d038c86859e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTUzNzE1OnYy", "diffSide": "RIGHT", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/CompositeDataGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODowNDo0NlrOIGYxfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODowNDo0NlrOIGYxfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2ODI1Mg==", "bodyText": "Make \"dataGenerators\" private or transient.", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r543568252", "createdAt": "2020-12-15T18:04:46Z", "author": {"login": "vaadin-bot"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/CompositeDataGenerator.java", "diffHunk": "@@ -39,7 +39,7 @@\n public class CompositeDataGenerator<T>\n         implements DataGenerator<T>, HasDataGenerators<T> {\n \n-    private final Set<DataGenerator<T>> dataGenerators = new HashSet<>();\n+    final Set<DataGenerator<T>> dataGenerators = new LinkedHashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9bc0241f0eb3c5930a52f4338a1d8b476b48b23"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTkzNjgxOnYy", "diffSide": "RIGHT", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo0NjozNFrOIHBYfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo0NjozNFrOIHBYfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzMzU5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void orderIsPreserved() {\n          \n          \n            \n                public void addDataGenerator_orderIsPreserved() {", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r544233599", "createdAt": "2020-12-16T11:46:34Z", "author": {"login": "mshabarov"}, "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "diffHunk": "@@ -196,4 +200,14 @@ public void dataGeneratorRegistration_remove_dataIsDestroyed() {\n                 CoreMatchers.not(CoreMatchers.hasItem(\"item1\")));\n     }\n \n+    @Test\n+    public void orderIsPreserved() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9bc0241f0eb3c5930a52f4338a1d8b476b48b23"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTk0Mzg2OnYy", "diffSide": "RIGHT", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo0ODoxMlrOIHBcZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo0ODoxMlrOIHBcZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNDU5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(expected,new ArrayList<>(cdg.dataGenerators));\n          \n          \n            \n                    assertEquals(expected, new ArrayList<>(cdg.dataGenerators));", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r544234596", "createdAt": "2020-12-16T11:48:12Z", "author": {"login": "mshabarov"}, "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "diffHunk": "@@ -196,4 +200,14 @@ public void dataGeneratorRegistration_remove_dataIsDestroyed() {\n                 CoreMatchers.not(CoreMatchers.hasItem(\"item1\")));\n     }\n \n+    @Test\n+    public void orderIsPreserved() {\n+        CompositeDataGenerator<String> cdg = new CompositeDataGenerator<>();\n+        DataGenerator<String> dg1 = (String, JsonObject) -> {};\n+        DataGenerator<String> dg2 = (String, JsonObject) -> {};\n+        List<DataGenerator<String>> expected = Arrays.asList(dg1,dg2);\n+        cdg.addDataGenerator(dg1);\n+        cdg.addDataGenerator(dg2);\n+        assertEquals(expected,new ArrayList<>(cdg.dataGenerators));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9bc0241f0eb3c5930a52f4338a1d8b476b48b23"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTk0NDUxOnYy", "diffSide": "RIGHT", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo0ODoyNFrOIHBcxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo0ODoyNFrOIHBcxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNDY5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<DataGenerator<String>> expected = Arrays.asList(dg1,dg2);\n          \n          \n            \n                    List<DataGenerator<String>> expected = Arrays.asList(dg1, dg2);", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r544234693", "createdAt": "2020-12-16T11:48:24Z", "author": {"login": "mshabarov"}, "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "diffHunk": "@@ -196,4 +200,14 @@ public void dataGeneratorRegistration_remove_dataIsDestroyed() {\n                 CoreMatchers.not(CoreMatchers.hasItem(\"item1\")));\n     }\n \n+    @Test\n+    public void orderIsPreserved() {\n+        CompositeDataGenerator<String> cdg = new CompositeDataGenerator<>();\n+        DataGenerator<String> dg1 = (String, JsonObject) -> {};\n+        DataGenerator<String> dg2 = (String, JsonObject) -> {};\n+        List<DataGenerator<String>> expected = Arrays.asList(dg1,dg2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9bc0241f0eb3c5930a52f4338a1d8b476b48b23"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3751, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}