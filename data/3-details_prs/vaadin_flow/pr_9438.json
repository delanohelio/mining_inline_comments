{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMTY1MjUy", "number": 9438, "title": "Cherry Picks for 2.5", "bodyText": "Merge, not squash", "createdAt": "2020-11-18T12:54:52Z", "url": "https://github.com/vaadin/flow/pull/9438", "merged": true, "mergeCommit": {"oid": "1bf5579ef0c7ac2f8889513c435233bf63ff98d8"}, "closed": true, "closedAt": "2020-11-26T14:36:01Z", "author": {"login": "mshabarov"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddsgvAgH2gAyNTIzMTY1MjUyOjE0NzQ4NjczZmExZmMwNzM1MmY3YmM2NWFkYTY3YTQ1OTE1YWQwZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgTu7cAFqTUzOTM1NTcwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "14748673fa1fc07352f7bc65ada67a45915ad0ef", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/14748673fa1fc07352f7bc65ada67a45915ad0ef", "committedDate": "2020-11-18T11:32:37Z", "message": "fix: check if Url contains directory change in Dev Mode (#9392)\n\nChecks whether the Url contains a directory change and a double encoding in Dev Mode. Returns 403 Forbidden immediately and skip the request handling, if does.\n\n(cherry picked from commit 19fe3864f9d1567c5ac7a211189986ac093e781f)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47bcc83fdfdf98c3e658a83ded2321e2d2e265f5", "author": {"user": {"login": "pleku", "name": "Pekka Hyv\u00f6nen"}}, "url": "https://github.com/vaadin/flow/commit/47bcc83fdfdf98c3e658a83ded2321e2d2e265f5", "committedDate": "2020-11-18T13:19:49Z", "message": "chore: update readme with discord link (#9382)\n\n(cherry picked from commit 1b26485146c7333e7527a1a02e22325a02c00e27)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cf23366bc84e53240e20e06a652880dbb07f1e0", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/0cf23366bc84e53240e20e06a652880dbb07f1e0", "committedDate": "2020-11-18T13:21:59Z", "message": "fix: support Range requests with either start or end byte index omitted (#9368)\n\nSupports headers of the type Range: -123 and Range: 123-.\n\nFixes #9083.\n\n(cherry picked from commit ff28dd041ce8f477b4a0734c37540cec71ea524d)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c927cde8ab80c8e753133d401b8b3ca296675b78", "author": {"user": {"login": "fluorumlabs", "name": "Artem Godin"}}, "url": "https://github.com/vaadin/flow/commit/c927cde8ab80c8e753133d401b8b3ca296675b78", "committedDate": "2020-11-18T13:33:46Z", "message": "refactor: make web browser immutable (#9298)\n\n(cherry picked from commit 9f7cfa76fd21d8d18338237e6e325c1eeaf5c21b)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea61787150a00e4200139c086302c5f4789f07b8", "author": {"user": {"login": "Legioth", "name": "Leif \u00c5strand"}}, "url": "https://github.com/vaadin/flow/commit/ea61787150a00e4200139c086302c5f4789f07b8", "committedDate": "2020-11-18T13:43:08Z", "message": "fix: Simplify check for recursive Composite::getContent() (#9180)\n\nUsing a regular instance field instead of a non-static ThreadLocal has\nno functional difference except in the hypothetical case when\ngetContent() would be called concurrently on a different thread. That\ncase is not supposed to happen since the session lock should be used to\nprevent concurrent access. Furthermore, concurrent invocation would\nstill not work properly since use of the `content` field is not\nsynchronized.\n\nA simple boolean communicates the intent more clearly, thus making the\npurpose of the implementation easier to understand. The simpler approach\nalso has a minimal positive impact on CPU usage and memory allocation.\n\nFixes #9160\n\n(cherry picked from commit 51f0eda33063e00b4cdc79e97f4724159ea9a09f)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d532282b6d9dfe775a09762213ee36c51ceb1628", "author": {"user": {"login": "caalador", "name": null}}, "url": "https://github.com/vaadin/flow/commit/d532282b6d9dfe775a09762213ee36c51ceb1628", "committedDate": "2020-11-20T06:55:02Z", "message": "chore: update chrome expectation to 87 (#9445)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68e9cb8453af12d9c75b93c53a08456583e002fa", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/68e9cb8453af12d9c75b93c53a08456583e002fa", "committedDate": "2020-11-23T08:11:26Z", "message": "refactor: make WebBrowser CTORs to be available in child classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16c6f3a9151d5cfd25e74660f8887c51d3e06168", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/16c6f3a9151d5cfd25e74660f8887c51d3e06168", "committedDate": "2020-11-23T09:19:24Z", "message": "test: run UriValidationIT with DevMode and JS resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MzQ1NjUz", "url": "https://github.com/vaadin/flow/pull/9438#pullrequestreview-536345653", "createdAt": "2020-11-23T10:34:02Z", "commit": {"oid": "16c6f3a9151d5cfd25e74660f8887c51d3e06168"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDozNDowMlrOH4HirQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDozNDowMlrOH4HirQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwNTg2OQ==", "bodyText": "Define and throw a dedicated exception instead of using a generic one.", "url": "https://github.com/vaadin/flow/pull/9438#discussion_r528605869", "createdAt": "2020-11-23T10:34:02Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/HandlerHelper.java", "diffHunk": "@@ -171,4 +184,26 @@ public static String getCancelingRelativePath(String pathToCancel) {\n         return sb.toString();\n     }\n \n+    /**\n+     * Checks if the given URL path contains the directory change instruction\n+     * (dot-dot), taking into account possible double encoding in hexadecimal\n+     * format, which can be injected maliciously.\n+     *\n+     * @param path\n+     *            the URL path to be verified.\n+     * @return {@code true}, if the given path has a directory change\n+     *         instruction, {@code false} otherwise.\n+     */\n+    public static boolean isPathUnsafe(String path) {\n+        // Check that the path does not have '/../', '\\..\\', %5C..%5C,\n+        // %2F..%2F, nor '/..', '\\..', %5C.., %2F..\n+        try {\n+            path = URLDecoder.decode(path, StandardCharsets.UTF_8.name());\n+        } catch (UnsupportedEncodingException e) {\n+            throw new RuntimeException(\"An error occurred during decoding URL.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16c6f3a9151d5cfd25e74660f8887c51d3e06168"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "354efc12bde65266a69b6309534b6ed6257dc762", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/354efc12bde65266a69b6309534b6ed6257dc762", "committedDate": "2020-11-23T12:00:53Z", "message": "chore: update header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82c88882aee79a716c361e36ce11d1dae1807fc1", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/82c88882aee79a716c361e36ce11d1dae1807fc1", "committedDate": "2020-11-25T13:11:03Z", "message": "fix: optimize handling of requests containing Range header (#9484)\n\nMore efficient parsing of the header value. Also, range count is capped at 16\n(additional will be ignored) and overlapping ranges at 2 (request will be denied\nif above)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NTIwMDAw", "url": "https://github.com/vaadin/flow/pull/9438#pullrequestreview-538520000", "createdAt": "2020-11-25T13:59:51Z", "commit": {"oid": "82c88882aee79a716c361e36ce11d1dae1807fc1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzo1OTo1MVrOH50q5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzo1OTo1MVrOH50q5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM5MzgzMQ==", "bodyText": "Replace the synchronized class \"Stack\" by an unsynchronized one such as \"Deque\".", "url": "https://github.com/vaadin/flow/pull/9438#discussion_r530393831", "createdAt": "2020-11-25T13:59:51Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/internal/ResponseWriter.java", "diffHunk": "@@ -226,18 +238,36 @@ private void writeRangeContents(String range, HttpServletResponse response,\n         long resourceLength = connection.getContentLengthLong();\n         Matcher rangeMatcher = BYTE_RANGE_PATTERN.matcher(byteRanges);\n \n-        List<Pair<Long, Long>> ranges = new ArrayList<>();\n-        while (rangeMatcher.find()) {\n-            final long start = Long.parseLong(rangeMatcher.group(1));\n-            final long end = Long.parseLong(rangeMatcher.group(2));\n+        Stack<Pair<Long, Long>> ranges = new Stack<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82c88882aee79a716c361e36ce11d1dae1807fc1"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NTIwMDA4", "url": "https://github.com/vaadin/flow/pull/9438#pullrequestreview-538520008", "createdAt": "2020-11-25T13:59:52Z", "commit": {"oid": "82c88882aee79a716c361e36ce11d1dae1807fc1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzo1OTo1MlrOH50q9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzo1OTo1MlrOH50q9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM5Mzg0Nw==", "bodyText": "Invoke method(s) only conditionally.", "url": "https://github.com/vaadin/flow/pull/9438#discussion_r530393847", "createdAt": "2020-11-25T13:59:52Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/internal/ResponseWriter.java", "diffHunk": "@@ -226,18 +238,36 @@ private void writeRangeContents(String range, HttpServletResponse response,\n         long resourceLength = connection.getContentLengthLong();\n         Matcher rangeMatcher = BYTE_RANGE_PATTERN.matcher(byteRanges);\n \n-        List<Pair<Long, Long>> ranges = new ArrayList<>();\n-        while (rangeMatcher.find()) {\n-            final long start = Long.parseLong(rangeMatcher.group(1));\n-            final long end = Long.parseLong(rangeMatcher.group(2));\n+        Stack<Pair<Long, Long>> ranges = new Stack<>();\n+        while (rangeMatcher.find() && ranges.size() < MAX_RANGE_COUNT) {\n+            String startGroup = rangeMatcher.group(1);\n+            String endGroup = rangeMatcher.group(2);\n+            if (startGroup.isEmpty() && endGroup.isEmpty()) {\n+                response.setContentLengthLong(0L);\n+                response.setStatus(416); // Range Not Satisfiable\n+                getLogger().info(\"received a malformed range: '{}'\", rangeMatcher.group());\n+                return;\n+            }\n+            long start = startGroup.isEmpty() ? 0L : Long.parseLong(startGroup);\n+            long end = endGroup.isEmpty() ? Long.MAX_VALUE\n+                    : Long.parseLong(endGroup);\n             if (end < start\n                     || (resourceLength >= 0 && start >= resourceLength)) {\n                 // illegal range -> 416\n+                getLogger().info(\"received an illegal range '{}' for resource '{}'\",\n+                        rangeMatcher.group(), resourceURL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82c88882aee79a716c361e36ce11d1dae1807fc1"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NTIwMDI1", "url": "https://github.com/vaadin/flow/pull/9438#pullrequestreview-538520025", "createdAt": "2020-11-25T13:59:53Z", "commit": {"oid": "82c88882aee79a716c361e36ce11d1dae1807fc1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzo1OTo1M1rOH50rAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzo1OTo1M1rOH50rAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM5Mzg1Nw==", "bodyText": "Invoke method(s) only conditionally.", "url": "https://github.com/vaadin/flow/pull/9438#discussion_r530393857", "createdAt": "2020-11-25T13:59:53Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/internal/ResponseWriter.java", "diffHunk": "@@ -226,18 +238,36 @@ private void writeRangeContents(String range, HttpServletResponse response,\n         long resourceLength = connection.getContentLengthLong();\n         Matcher rangeMatcher = BYTE_RANGE_PATTERN.matcher(byteRanges);\n \n-        List<Pair<Long, Long>> ranges = new ArrayList<>();\n-        while (rangeMatcher.find()) {\n-            final long start = Long.parseLong(rangeMatcher.group(1));\n-            final long end = Long.parseLong(rangeMatcher.group(2));\n+        Stack<Pair<Long, Long>> ranges = new Stack<>();\n+        while (rangeMatcher.find() && ranges.size() < MAX_RANGE_COUNT) {\n+            String startGroup = rangeMatcher.group(1);\n+            String endGroup = rangeMatcher.group(2);\n+            if (startGroup.isEmpty() && endGroup.isEmpty()) {\n+                response.setContentLengthLong(0L);\n+                response.setStatus(416); // Range Not Satisfiable\n+                getLogger().info(\"received a malformed range: '{}'\", rangeMatcher.group());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82c88882aee79a716c361e36ce11d1dae1807fc1"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66521b42d8583c262d5d26d0ebedbb44ad2fed6a", "author": {"user": {"login": "pleku", "name": "Pekka Hyv\u00f6nen"}}, "url": "https://github.com/vaadin/flow/commit/66521b42d8583c262d5d26d0ebedbb44ad2fed6a", "committedDate": "2020-11-26T12:08:57Z", "message": "Stop logging error when updating dev dependencies (#9476)\n\nAs there is a conflict with the dependencies and prevent adding\r\nthe flow-dev-dependencies package to the platform (#9345), this will hide\r\nthe unavoidable error that was logged for Vaadin apps.\r\n \r\nFixes #9251"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab4c7fe24a5217fc8b88788fa6351772caf72769", "author": {"user": {"login": "caalador", "name": null}}, "url": "https://github.com/vaadin/flow/commit/ab4c7fe24a5217fc8b88788fa6351772caf72769", "committedDate": "2020-11-26T12:09:54Z", "message": "fix: Correct regexp to only match when digit first (#9496)\n\nUse Matcher::find instead of Matcher::matches as matches never matched.\r\n\r\nFixes #9494"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjgwNjg3", "url": "https://github.com/vaadin/flow/pull/9438#pullrequestreview-539280687", "createdAt": "2020-11-26T12:40:58Z", "commit": {"oid": "ab4c7fe24a5217fc8b88788fa6351772caf72769"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e74bd72d87a1819560b9b703d642a7f0902116c", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/7e74bd72d87a1819560b9b703d642a7f0902116c", "committedDate": "2020-11-26T13:22:46Z", "message": "refactor: deprecate WebBrowser::updateRequestDetails, not remove"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MzI4NDE2", "url": "https://github.com/vaadin/flow/pull/9438#pullrequestreview-539328416", "createdAt": "2020-11-26T13:46:49Z", "commit": {"oid": "7e74bd72d87a1819560b9b703d642a7f0902116c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MzU1NzAw", "url": "https://github.com/vaadin/flow/pull/9438#pullrequestreview-539355700", "createdAt": "2020-11-26T14:22:16Z", "commit": {"oid": "7e74bd72d87a1819560b9b703d642a7f0902116c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDoyMjoxNlrOH6daNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDoyMjoxNlrOH6daNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA2MTMwMA==", "bodyText": "Do not forget to remove this deprecated code someday.", "url": "https://github.com/vaadin/flow/pull/9438#discussion_r531061300", "createdAt": "2020-11-26T14:22:16Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/WebBrowser.java", "diffHunk": "@@ -323,7 +349,12 @@ public boolean isChromeOS() {\n      *\n      * @param request\n      *            the Vaadin request to read the information from\n+     *\n+     * @deprecated Use {@link #WebBrowser(VaadinRequest)} constructor instead\n+     *             and create a new instance of WebBrowser to apply the changes\n+     *             from given {@link VaadinRequest}.\n      */\n+    @Deprecated\n     public void updateRequestDetails(VaadinRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e74bd72d87a1819560b9b703d642a7f0902116c"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4517, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}