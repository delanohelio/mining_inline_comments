{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDU5NzQ0", "number": 8468, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDowNTo1NVrOEoV5zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDowNTo1NVrOEoV5zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzM3MzU3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/StreamReceiverHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDowNTo1NVrOHZXwAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNDowNTo1NVrOHZXwAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM2NTU2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected boolean handleFileUploadValidationAndData(VaadinSession session,\n          \n          \n            \n                /**\n          \n          \n            \n                 * Validate that stream target is in a valid state for receiving data\n          \n          \n            \n                 * and send stream to receiver. Handles cleanup and error in reading stream\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param session\n          \n          \n            \n                 *         The session containing the stream variable\n          \n          \n            \n                 * @param inputStream\n          \n          \n            \n                 *         the request content input stream\n          \n          \n            \n                 * @param streamReceiver\n          \n          \n            \n                 *         the receiver containing the destination stream variable\n          \n          \n            \n                 * @param filename\n          \n          \n            \n                 *         name of the streamed file\n          \n          \n            \n                 * @param mimeType\n          \n          \n            \n                 *         file mime type\n          \n          \n            \n                 * @param contentLength\n          \n          \n            \n                 *         The length of the request content\n          \n          \n            \n                 * @param node\n          \n          \n            \n                 *         The owner of the stream\n          \n          \n            \n                 * @return true if upload successful, else false\n          \n          \n            \n                 * @throws UploadException\n          \n          \n            \n                 *         Thrown for illegal target node state\n          \n          \n            \n                 */\n          \n          \n            \n                protected boolean handleFileUploadValidationAndData(VaadinSession session,\n          \n      \n    \n    \n  \n\nProtected methods need to have javadocs.", "url": "https://github.com/vaadin/flow/pull/8468#discussion_r496365568", "createdAt": "2020-09-29T04:05:55Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/StreamReceiverHandler.java", "diffHunk": "@@ -326,7 +326,7 @@ protected void doHandleXhrFilePost(VaadinSession session,\n         sendUploadResponse(response, success);\n     }\n \n-    private boolean handleFileUploadValidationAndData(VaadinSession session,\n+    protected boolean handleFileUploadValidationAndData(VaadinSession session,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0657cc2ace5429b53fa9c86d61d41399ea3ad622"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3430, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}