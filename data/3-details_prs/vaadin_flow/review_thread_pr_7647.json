{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MzA4MDM3", "number": 7647, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDozNDoyMlrODh5c7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToxNzo1NlrODiSo5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODcwODk1OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDozNDoyMlrOFs42rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDozNDoyMlrOFs42rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxMzE2Nw==", "bodyText": "Make \"devServerStartFuture\" transient or serializable.", "url": "https://github.com/vaadin/flow/pull/7647#discussion_r382613167", "createdAt": "2020-02-21T14:34:22Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -99,129 +102,34 @@\n \n     private boolean notified = false;\n \n-    private String failedOutput;\n+    private volatile String failedOutput;\n \n     /**\n      * The local installation path of the webpack-dev-server node script.\n      */\n     public static final String WEBPACK_SERVER = \"node_modules/webpack-dev-server/bin/webpack-dev-server.js\";\n \n-    private int port;\n-    private Process webpackProcess;\n+    private volatile int port;\n+    private final AtomicReference<Process> webpackProcess = new AtomicReference<>();\n     private final boolean reuseDevServer;\n-    private DevServerWatchDog watchDog;\n+    private final AtomicReference<DevServerWatchDog> watchDog = new AtomicReference<>();\n \n     private StringBuilder cumulativeOutput = new StringBuilder();\n \n+    private final CompletableFuture<Void> devServerStartFuture;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39edc3cb9c00e383b7cf5ba2e69e68016f28e3ba"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODcwOTAyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDozNDoyM1rOFs42vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDozNDoyM1rOFs42vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxMzE4Mg==", "bodyText": "Null passed for non-null parameter of java.util.concurrent.CompletableFuture.getNow(Object) in com.vaadin.flow.server.DevModeHandler.handleRequest(VaadinSession, VaadinRequest, VaadinResponse)", "url": "https://github.com/vaadin/flow/pull/7647#discussion_r382613182", "createdAt": "2020-02-21T14:34:23Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -271,45 +183,44 @@ public static DevModeHandler getDevModeHandler() {\n         return atomicHandler.get();\n     }\n \n+    @Override\n+    public boolean handleRequest(VaadinSession session, VaadinRequest request,\n+            VaadinResponse response) throws IOException {\n+        if (devServerStartFuture.isDone()) {\n+            try {\n+                devServerStartFuture.getNow(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39edc3cb9c00e383b7cf5ba2e69e68016f28e3ba"}, "originalPosition": 223}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjgzNTU4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskRunNpmInstall.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToxNzo1NlrOFtdMsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToxNzo1NlrOFtdMsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIwODYyNg==", "bodyText": "Possible null pointer dereference in com.vaadin.flow.server.frontend.TaskRunNpmInstall.cleanUp() due to return value of called method", "url": "https://github.com/vaadin/flow/pull/7647#discussion_r383208626", "createdAt": "2020-02-24T11:17:56Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskRunNpmInstall.java", "diffHunk": "@@ -269,8 +269,16 @@ private void cleanUp() throws IOException {\n         File modulesYaml = new File(packageUpdater.nodeModulesFolder,\n                 MODULES_YAML);\n         boolean hasModulesYaml = modulesYaml.exists() && modulesYaml.isFile();\n-        if (hasModulesYaml != enablePnpm) {\n+        if (!enablePnpm && hasModulesYaml) {\n             FileUtils.forceDelete(packageUpdater.nodeModulesFolder);\n+        } else if (enablePnpm && !hasModulesYaml) {\n+            // presence of .staging dir with a \"pnpm-*\" folder means that pnpm\n+            // download is in progress, don't remove anything in this case\n+            File staging = new File(\".staging\");\n+            if (!staging.isDirectory() || staging.listFiles(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfca85e8c26a8486181641cd917875e5af3cc1e1"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3682, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}