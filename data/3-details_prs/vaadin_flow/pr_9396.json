{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNzQ3MTAw", "number": 9396, "title": "feat(offline): add connection indicator element", "bodyText": "Fixes #9322", "createdAt": "2020-11-13T18:06:55Z", "url": "https://github.com/vaadin/flow/pull/9396", "merged": true, "mergeCommit": {"oid": "3866f99acdcd4e22a9fdc661d3a28252c18f979e"}, "closed": true, "closedAt": "2020-11-23T15:08:24Z", "author": {"login": "platosha"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddUzjZgFqTUzMjA5NTE1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfVJ5LAFqTUzNjQ3MDM0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMDk1MTU3", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-532095157", "createdAt": "2020-11-17T07:55:27Z", "commit": {"oid": "97ff7d233865aa6a935ac2b691ac7a62f86a3110"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzo1NToyN1rOH0oInw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzo1NToyN1rOH0oInw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NTU2Nw==", "bodyText": "Would it be better to have a single property of a type that restricts the possible states to only valid ones (such as 0|1|2|3 or enum)?", "url": "https://github.com/vaadin/flow/pull/9396#discussion_r524945567", "createdAt": "2020-11-17T07:55:27Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/ConnectionIndicator.ts", "diffHunk": "@@ -0,0 +1,342 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import {css, html, LitElement, property} from \"lit-element\";\n+import {classMap} from \"lit-html/directives/class-map\";\n+\n+export class ConnectionIndicator extends LitElement {\n+  firstDelay: number = 300;\n+  secondDelay: number = 1500;\n+  thirdDelay: number = 5000;\n+  applyDefaultTheme: boolean = true;\n+\n+  @property({type: Boolean, reflect: true})\n+  offline: boolean = false;\n+\n+  @property({type: Boolean})\n+  reconnecting: boolean = false;\n+\n+  @property({type: Boolean})\n+  reconnectModal: boolean = false;\n+\n+  @property({type: String})\n+  onlineText: string = 'Online';\n+\n+  @property({type: String})\n+  offlineText: string = 'Connection lost'\n+\n+  @property({type: String})\n+  reconnectingText: string =\n+    'Connection lost, trying to reconnect...';\n+\n+  @property({type: Boolean})\n+  private loadingState: boolean = false;\n+\n+  @property({type: Boolean})\n+  private loadingFirst: boolean = false;\n+\n+  @property({type: Boolean})\n+  private loadingSecond: boolean = false;\n+\n+  @property({type: Boolean})\n+  private loadingThird: boolean = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ff7d233865aa6a935ac2b691ac7a62f86a3110"}, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97ff7d233865aa6a935ac2b691ac7a62f86a3110", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/97ff7d233865aa6a935ac2b691ac7a62f86a3110", "committedDate": "2020-11-13T18:06:11Z", "message": "feat(offline): add connection indicator element"}, "afterCommit": {"oid": "fcc6560caa992a1a92b36f3e56b163928113320a", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/fcc6560caa992a1a92b36f3e56b163928113320a", "committedDate": "2020-11-17T16:09:44Z", "message": "combine separate loading boolean states into LoadingBarState enum"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fcc6560caa992a1a92b36f3e56b163928113320a", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/fcc6560caa992a1a92b36f3e56b163928113320a", "committedDate": "2020-11-17T16:09:44Z", "message": "combine separate loading boolean states into LoadingBarState enum"}, "afterCommit": {"oid": "974f09ca388ba2eccd82fa75c4ac6b71b9442bd1", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/974f09ca388ba2eccd82fa75c4ac6b71b9442bd1", "committedDate": "2020-11-17T17:13:43Z", "message": "combine separate loading boolean states into LoadingBarState enum"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzI3NTU2", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-533327556", "createdAt": "2020-11-18T10:57:30Z", "commit": {"oid": "b586e0eca18b438ebcb60bc8d243d778a71e614c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMDo1NzozMFrOH1oNFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMDo1NzozMFrOH1oNFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk5NTI4Ng==", "bodyText": "Is it safe to pass document.head for container? The doc for container parameter of render states The entire contents are either replaced, or efficiently updated if the same result type was previous rendered there. I got some weird broken styles when trying this with basic starter from https://start.vaadin.com/", "url": "https://github.com/vaadin/flow/pull/9396#discussion_r525995286", "createdAt": "2020-11-18T10:57:30Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/ConnectionIndicator.ts", "diffHunk": "@@ -0,0 +1,387 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import {html, LitElement, property} from \"lit-element\";\n+import {render} from \"lit-html\";\n+import {classMap} from \"lit-html/directives/class-map\";\n+import {ConnectionState, ConnectionStateStore} from \"./ConnectionState\";\n+\n+export class ConnectionIndicator extends LitElement {\n+\n+  @property({type: Number })\n+  firstDelay: number = 300;\n+\n+  @property({type: Number })\n+  secondDelay: number = 1500;\n+\n+  @property({type: Number })\n+  thirdDelay: number = 5000;\n+\n+  @property({type: Boolean, reflect: true})\n+  offline: boolean = false;\n+\n+  @property({type: Boolean})\n+  reconnecting: boolean = false;\n+\n+  @property({type: Boolean})\n+  reconnectModal: boolean = false;\n+\n+  @property({type: String})\n+  onlineText: string = 'Online';\n+\n+  @property({type: String})\n+  offlineText: string = 'Connection lost'\n+\n+  @property({type: String})\n+  reconnectingText: string =\n+    'Connection lost, trying to reconnect...';\n+\n+  @property({type: Boolean})\n+  loadingState: boolean = false;\n+\n+  @property({type: String})\n+  loadingBarState: LoadingBarState = LoadingBarState.IDLE;\n+\n+  private applyDefaultThemeState: boolean = true;\n+\n+  private timeoutFirst: number = 0;\n+  private timeoutSecond: number = 0;\n+  private timeoutThird: number = 0;\n+\n+  private connectionStateStore?: ConnectionStateStore;\n+  private readonly connectionStateListener: () => void;\n+\n+  constructor() {\n+    super();\n+\n+    this.connectionStateListener = () => {\n+      const state = this.connectionStateStore?.state;\n+      this.offline = state === ConnectionState.CONNECTION_LOST\n+      this.reconnecting = state === ConnectionState.RECONNECTING;\n+      this.loading = state === ConnectionState.LOADING;\n+    };\n+  }\n+\n+  render() {\n+    return html`\n+      <div\n+       class=\"v-loading-indicator ${this.loadingBarState}\"\n+       style=\"${this.getLoadingBarStyle()}\"></div>\n+\n+      <div class=\"v-status-message ${classMap({\n+        active: this.reconnecting,\n+        modal: this.reconnectModal\n+      })}\">\n+        <span class=\"text\">\n+          ${this.renderMessage()}\n+        </span>\n+      </div>\n+    `;\n+  }\n+\n+  connectedCallback() {\n+    super.connectedCallback();\n+\n+    const $wnd = window as any;\n+    if ($wnd.Vaadin?.connectionState) {\n+      this.connectionStateStore = $wnd.Vaadin.connectionState as ConnectionStateStore;\n+      this.connectionStateStore.addStateChangeListener(this.connectionStateListener);\n+      this.connectionStateListener();\n+    }\n+\n+    this.updateTheme();\n+  }\n+\n+  disconnectedCallback() {\n+    super.disconnectedCallback();\n+\n+    if (this.connectionStateStore) {\n+      this.connectionStateStore.removeStateChangeListener(this.connectionStateListener);\n+    }\n+\n+    this.updateTheme();\n+  }\n+\n+  get loading() {\n+    return this.loadingState;\n+  }\n+\n+  set loading(loading: boolean) {\n+    this.loadingState = loading;\n+\n+    if (this.timeoutFirst) {\n+      window.clearTimeout(this.timeoutFirst);\n+      this.timeoutFirst = 0;\n+    }\n+\n+    if (this.timeoutSecond) {\n+      window.clearTimeout(this.timeoutSecond);\n+      this.timeoutSecond = 0;\n+    }\n+\n+    if (this.timeoutThird) {\n+      window.clearTimeout(this.timeoutThird);\n+      this.timeoutThird = 0;\n+    }\n+\n+    this.loadingBarState = LoadingBarState.IDLE;\n+    if (loading) {\n+      this.timeoutFirst = window.setTimeout(\n+        () => this.loadingBarState = LoadingBarState.FIRST,\n+        this.firstDelay\n+      );\n+      this.timeoutSecond = window.setTimeout(\n+        () => this.loadingBarState = LoadingBarState.SECOND,\n+        this.secondDelay\n+      );\n+      this.timeoutThird = window.setTimeout(\n+        () => this.loadingBarState = LoadingBarState.THIRD,\n+        this.thirdDelay\n+      );\n+    }\n+  }\n+\n+  @property({type: Boolean})\n+  get applyDefaultTheme() {\n+    return this.applyDefaultThemeState;\n+  }\n+\n+  set applyDefaultTheme(applyDefaultTheme: boolean) {\n+    if (applyDefaultTheme !== this.applyDefaultThemeState) {\n+      this.applyDefaultThemeState = applyDefaultTheme;\n+      this.updateTheme();\n+    }\n+  }\n+\n+  protected createRenderRoot() {\n+    return this;\n+  }\n+\n+  private renderMessage() {\n+    return this.offline\n+      ? (this.reconnecting\n+          ? this.reconnectingText\n+          : this.offlineText\n+      )\n+      : this.onlineText\n+  }\n+\n+  private updateTheme() {\n+    render(html`${\n+      this.isConnected && this.applyDefaultThemeState\n+        ? this.renderDefaultLoadingCss()\n+        : ''\n+    }`, document.head);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b586e0eca18b438ebcb60bc8d243d778a71e614c"}, "originalPosition": 187}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNDIyMTA3", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-533422107", "createdAt": "2020-11-18T13:03:05Z", "commit": {"oid": "16a7eed3ed2f0464baa2a5b5babc2db97d0af338"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMzowMzowNVrOH1stGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMzowMzowNVrOH1stGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA2OTAxNg==", "bodyText": "For consistency, maybe we could rename window.Vaadin.loadingIndicator now also to window.Vaadin.connectionIndicator.", "url": "https://github.com/vaadin/flow/pull/9396#discussion_r526069016", "createdAt": "2020-11-18T13:03:05Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/Flow.ts", "diffHunk": "@@ -329,7 +329,7 @@ export class Flow {\n \n   // Create shared connection state store and loading indicator\n   private addLoadingIndicator() {\n-    $wnd.Vaadin.loadingIndicator = document.createElement('vaadin-loading-indicator');\n+    $wnd.Vaadin.loadingIndicator = document.createElement('vaadin-connection-indicator');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a7eed3ed2f0464baa2a5b5babc2db97d0af338"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNTMzMDc1", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-533533075", "createdAt": "2020-11-18T15:00:04Z", "commit": {"oid": "793a3ffb7de0aefa0acef5a09809bfc00a8c1647"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTowMDowNVrOH1x60g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTowMDowNVrOH1x60g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE1NDQ1MA==", "bodyText": "Perhaps state === ConnectionState.CONNECTION_LOST || state === ConnectionState.RECONNECTING alternatively this.connectionStateStore.offline? Else renderMessage will show \"Online\" text for reconnecting state.", "url": "https://github.com/vaadin/flow/pull/9396#discussion_r526154450", "createdAt": "2020-11-18T15:00:05Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/ConnectionIndicator.ts", "diffHunk": "@@ -0,0 +1,395 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import {css, html, LitElement, property} from \"lit-element\";\n+import {classMap} from \"lit-html/directives/class-map\";\n+import {ConnectionState, ConnectionStateStore} from \"./ConnectionState\";\n+\n+const DEFAULT_STYLE_ID = 'css-loading-indicator';\n+\n+export class ConnectionIndicator extends LitElement {\n+  @property({type: Number })\n+  firstDelay: number = 300;\n+\n+  @property({type: Number })\n+  secondDelay: number = 1500;\n+\n+  @property({type: Number })\n+  thirdDelay: number = 5000;\n+\n+  @property({type: Boolean, reflect: true})\n+  offline: boolean = false;\n+\n+  @property({type: Boolean, reflect: true})\n+  reconnecting: boolean = false;\n+\n+  @property({type: Boolean})\n+  reconnectModal: boolean = false;\n+\n+  @property({type: String})\n+  onlineText: string = 'Online';\n+\n+  @property({type: String})\n+  offlineText: string = 'Connection lost'\n+\n+  @property({type: String})\n+  reconnectingText: string =\n+    'Connection lost, trying to reconnect...';\n+\n+  @property({type: Boolean})\n+  loadingState: boolean = false;\n+\n+  @property({type: String})\n+  loadingBarState: LoadingBarState = LoadingBarState.IDLE;\n+\n+  private applyDefaultThemeState: boolean = true;\n+\n+  private timeoutFirst: number = 0;\n+  private timeoutSecond: number = 0;\n+  private timeoutThird: number = 0;\n+\n+  private connectionStateStore?: ConnectionStateStore;\n+  private readonly connectionStateListener: () => void;\n+\n+  constructor() {\n+    super();\n+\n+    this.connectionStateListener = () => {\n+      const state = this.connectionStateStore?.state;\n+      this.offline = state === ConnectionState.CONNECTION_LOST", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "793a3ffb7de0aefa0acef5a09809bfc00a8c1647"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODgwMjg2", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-533880286", "createdAt": "2020-11-18T21:12:44Z", "commit": {"oid": "2a4768da2fad4c9bdf0b819c67a2304b8eeeb489"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMToxMjo0NFrOH2CWzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMToxMjo0NFrOH2CWzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQyMzc1OQ==", "bodyText": "Blue \"Online\", expanded, flashes incorrectly before showing \"Connection lost, trying to reconnect\" when offline and e.g. clicking on a button from a server-side view to trigger the transition to RECONNECTING. This is because flow-client goes from CONNECTION_LOST to RECONNECTING via LOADING. Note that the connections state handler receives the transition  parameter as a pair of (prev, next) states that is guaranteed to be stutter-free (i.e., it never receives a pair (s,s)). Utilizing these it could be fixed by having the following if-condition:\nthis.connectionStateListener = (prev: ConnectionState, next: ConnectionState) => {\n  this.updateConnectionState();\n  if ( (next !== ConnectionState.LOADING && prev !== ConnectionState.LOADING)\n        || next === ConnectionState.RECONNECTING) {\n   ...\n}\nI.e.: do not expand if going to or from LOADING, except always expand if going to RECONNECTING.", "url": "https://github.com/vaadin/flow/pull/9396#discussion_r526423759", "createdAt": "2020-11-18T21:12:44Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/ConnectionIndicator.ts", "diffHunk": "@@ -0,0 +1,370 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import {css, html, LitElement, property} from \"lit-element\";\n+import {classMap} from \"lit-html/directives/class-map\";\n+import {ConnectionState, ConnectionStateStore} from \"./ConnectionState\";\n+\n+const DEFAULT_STYLE_ID = 'css-loading-indicator';\n+\n+export class ConnectionIndicator extends LitElement {\n+  @property({type: Number })\n+  firstDelay: number = 300;\n+\n+  @property({type: Number })\n+  secondDelay: number = 1500;\n+\n+  @property({type: Number })\n+  thirdDelay: number = 5000;\n+\n+  @property({type: Boolean, reflect: true})\n+  offline: boolean = false;\n+\n+  @property({type: Boolean, reflect: true})\n+  reconnecting: boolean = false;\n+\n+  @property({type: Boolean})\n+  reconnectModal: boolean = false;\n+\n+  @property({type: String})\n+  onlineText: string = 'Online';\n+\n+  @property({type: String})\n+  offlineText: string = 'Connection lost'\n+\n+  @property({type: Boolean, reflect: true})\n+  expanded: boolean = false;\n+\n+  @property({type: String})\n+  reconnectingText: string =\n+    'Connection lost, trying to reconnect...';\n+\n+  @property({type: Boolean})\n+  loadingState: boolean = false;\n+\n+  @property({type: String})\n+  loadingBarState: LoadingBarState = LoadingBarState.IDLE;\n+\n+  private applyDefaultThemeState: boolean = true;\n+\n+  private firstTimeout: number = 0;\n+  private secondTimeout: number = 0;\n+  private thirdTimeout: number = 0;\n+\n+  private expandedTimeout: number = 0;\n+  private expandedDelay: number = 2000;\n+\n+  private connectionStateStore?: ConnectionStateStore;\n+  private readonly connectionStateListener: () => void;\n+\n+  constructor() {\n+    super();\n+\n+    this.connectionStateListener = () => {\n+      const wasReconnecting = this.reconnecting;\n+      const wasOffline = this.offline;\n+\n+      this.updateConnectionState();\n+\n+      // Temporarily expand the indicator on state changes\n+      if (this.offline !== wasOffline || this.reconnecting !== wasReconnecting) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a4768da2fad4c9bdf0b819c67a2304b8eeeb489"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODgyOTIx", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-533882921", "createdAt": "2020-11-18T21:16:35Z", "commit": {"oid": "2a4768da2fad4c9bdf0b819c67a2304b8eeeb489"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMToxNjozNVrOH2Cfgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMToxNjozNVrOH2Cfgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQyNTk4Ng==", "bodyText": "Maybe terminate by ; for consistency.", "url": "https://github.com/vaadin/flow/pull/9396#discussion_r526425986", "createdAt": "2020-11-18T21:16:35Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/ConnectionIndicator.ts", "diffHunk": "@@ -0,0 +1,370 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import {css, html, LitElement, property} from \"lit-element\";\n+import {classMap} from \"lit-html/directives/class-map\";\n+import {ConnectionState, ConnectionStateStore} from \"./ConnectionState\";\n+\n+const DEFAULT_STYLE_ID = 'css-loading-indicator';\n+\n+export class ConnectionIndicator extends LitElement {\n+  @property({type: Number })\n+  firstDelay: number = 300;\n+\n+  @property({type: Number })\n+  secondDelay: number = 1500;\n+\n+  @property({type: Number })\n+  thirdDelay: number = 5000;\n+\n+  @property({type: Boolean, reflect: true})\n+  offline: boolean = false;\n+\n+  @property({type: Boolean, reflect: true})\n+  reconnecting: boolean = false;\n+\n+  @property({type: Boolean})\n+  reconnectModal: boolean = false;\n+\n+  @property({type: String})\n+  onlineText: string = 'Online';\n+\n+  @property({type: String})\n+  offlineText: string = 'Connection lost'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a4768da2fad4c9bdf0b819c67a2304b8eeeb489"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODkxNzMw", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-533891730", "createdAt": "2020-11-18T21:29:33Z", "commit": {"oid": "2a4768da2fad4c9bdf0b819c67a2304b8eeeb489"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMToyOTozM1rOH2C7Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMToyOTozM1rOH2C7Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQzMzA0Mw==", "bodyText": "Maybe terminate by ; for consistency.", "url": "https://github.com/vaadin/flow/pull/9396#discussion_r526433043", "createdAt": "2020-11-18T21:29:33Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/ConnectionIndicator.ts", "diffHunk": "@@ -0,0 +1,370 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import {css, html, LitElement, property} from \"lit-element\";\n+import {classMap} from \"lit-html/directives/class-map\";\n+import {ConnectionState, ConnectionStateStore} from \"./ConnectionState\";\n+\n+const DEFAULT_STYLE_ID = 'css-loading-indicator';\n+\n+export class ConnectionIndicator extends LitElement {\n+  @property({type: Number })\n+  firstDelay: number = 300;\n+\n+  @property({type: Number })\n+  secondDelay: number = 1500;\n+\n+  @property({type: Number })\n+  thirdDelay: number = 5000;\n+\n+  @property({type: Boolean, reflect: true})\n+  offline: boolean = false;\n+\n+  @property({type: Boolean, reflect: true})\n+  reconnecting: boolean = false;\n+\n+  @property({type: Boolean})\n+  reconnectModal: boolean = false;\n+\n+  @property({type: String})\n+  onlineText: string = 'Online';\n+\n+  @property({type: String})\n+  offlineText: string = 'Connection lost'\n+\n+  @property({type: Boolean, reflect: true})\n+  expanded: boolean = false;\n+\n+  @property({type: String})\n+  reconnectingText: string =\n+    'Connection lost, trying to reconnect...';\n+\n+  @property({type: Boolean})\n+  loadingState: boolean = false;\n+\n+  @property({type: String})\n+  loadingBarState: LoadingBarState = LoadingBarState.IDLE;\n+\n+  private applyDefaultThemeState: boolean = true;\n+\n+  private firstTimeout: number = 0;\n+  private secondTimeout: number = 0;\n+  private thirdTimeout: number = 0;\n+\n+  private expandedTimeout: number = 0;\n+  private expandedDelay: number = 2000;\n+\n+  private connectionStateStore?: ConnectionStateStore;\n+  private readonly connectionStateListener: () => void;\n+\n+  constructor() {\n+    super();\n+\n+    this.connectionStateListener = () => {\n+      const wasReconnecting = this.reconnecting;\n+      const wasOffline = this.offline;\n+\n+      this.updateConnectionState();\n+\n+      // Temporarily expand the indicator on state changes\n+      if (this.offline !== wasOffline || this.reconnecting !== wasReconnecting) {\n+        this.expanded = true;\n+        this.expandedTimeout = this.timeoutFor(\n+          this.expandedTimeout,\n+          true,\n+          () => this.expanded = false,\n+          this.expandedDelay\n+        );\n+      }\n+    };\n+  }\n+\n+  render() {\n+    return html`\n+      <div\n+       class=\"v-loading-indicator ${this.loadingBarState}\"\n+       style=\"${this.getLoadingBarStyle()}\"></div>\n+\n+      <div class=\"v-status-message ${classMap({\n+        active: this.reconnecting,\n+        modal: this.reconnectModal\n+      })}\">\n+        <span class=\"text\">\n+          ${this.renderMessage()}\n+        </span>\n+      </div>\n+    `;\n+  }\n+\n+  connectedCallback() {\n+    super.connectedCallback();\n+\n+    const $wnd = window as any;\n+    if ($wnd.Vaadin?.connectionState) {\n+      this.connectionStateStore = $wnd.Vaadin.connectionState as ConnectionStateStore;\n+      this.connectionStateStore.addStateChangeListener(this.connectionStateListener);\n+      this.updateConnectionState();\n+    }\n+\n+    this.updateTheme();\n+  }\n+\n+  disconnectedCallback() {\n+    super.disconnectedCallback();\n+\n+    if (this.connectionStateStore) {\n+      this.connectionStateStore.removeStateChangeListener(this.connectionStateListener);\n+    }\n+\n+    this.updateTheme();\n+  }\n+\n+  get loading() {\n+    return this.loadingState;\n+  }\n+\n+  set loading(loading: boolean) {\n+    this.loadingState = loading;\n+    this.loadingBarState = LoadingBarState.IDLE;\n+\n+    this.firstTimeout = this.timeoutFor(\n+      this.firstTimeout,\n+      loading,\n+      () => this.loadingBarState = LoadingBarState.FIRST,\n+      this.firstDelay\n+    );\n+\n+    this.secondTimeout = this.timeoutFor(\n+      this.secondTimeout,\n+      loading,\n+      () => this.loadingBarState = LoadingBarState.SECOND,\n+      this.secondDelay\n+    );\n+\n+    this.thirdTimeout = this.timeoutFor(\n+      this.thirdTimeout,\n+      loading,\n+      () => this.loadingBarState = LoadingBarState.THIRD,\n+      this.thirdDelay\n+    );\n+  }\n+\n+  @property({type: Boolean})\n+  get applyDefaultTheme() {\n+    return this.applyDefaultThemeState;\n+  }\n+\n+  set applyDefaultTheme(applyDefaultTheme: boolean) {\n+    if (applyDefaultTheme !== this.applyDefaultThemeState) {\n+      this.applyDefaultThemeState = applyDefaultTheme;\n+      this.updateTheme();\n+    }\n+  }\n+\n+  protected createRenderRoot() {\n+    return this;\n+  }\n+\n+  private updateConnectionState() {\n+    const state = this.connectionStateStore?.state;\n+    this.offline = state === ConnectionState.CONNECTION_LOST", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a4768da2fad4c9bdf0b819c67a2304b8eeeb489"}, "originalPosition": 183}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODkzMDg5", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-533893089", "createdAt": "2020-11-18T21:31:33Z", "commit": {"oid": "2a4768da2fad4c9bdf0b819c67a2304b8eeeb489"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTozMTozNFrOH2C_XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTozMTozNFrOH2C_XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQzNDE0MQ==", "bodyText": "Maybe terminate by ; for consistency.\nNot blocking, but is this more readable than an if-else statement?", "url": "https://github.com/vaadin/flow/pull/9396#discussion_r526434141", "createdAt": "2020-11-18T21:31:34Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/ConnectionIndicator.ts", "diffHunk": "@@ -0,0 +1,370 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import {css, html, LitElement, property} from \"lit-element\";\n+import {classMap} from \"lit-html/directives/class-map\";\n+import {ConnectionState, ConnectionStateStore} from \"./ConnectionState\";\n+\n+const DEFAULT_STYLE_ID = 'css-loading-indicator';\n+\n+export class ConnectionIndicator extends LitElement {\n+  @property({type: Number })\n+  firstDelay: number = 300;\n+\n+  @property({type: Number })\n+  secondDelay: number = 1500;\n+\n+  @property({type: Number })\n+  thirdDelay: number = 5000;\n+\n+  @property({type: Boolean, reflect: true})\n+  offline: boolean = false;\n+\n+  @property({type: Boolean, reflect: true})\n+  reconnecting: boolean = false;\n+\n+  @property({type: Boolean})\n+  reconnectModal: boolean = false;\n+\n+  @property({type: String})\n+  onlineText: string = 'Online';\n+\n+  @property({type: String})\n+  offlineText: string = 'Connection lost'\n+\n+  @property({type: Boolean, reflect: true})\n+  expanded: boolean = false;\n+\n+  @property({type: String})\n+  reconnectingText: string =\n+    'Connection lost, trying to reconnect...';\n+\n+  @property({type: Boolean})\n+  loadingState: boolean = false;\n+\n+  @property({type: String})\n+  loadingBarState: LoadingBarState = LoadingBarState.IDLE;\n+\n+  private applyDefaultThemeState: boolean = true;\n+\n+  private firstTimeout: number = 0;\n+  private secondTimeout: number = 0;\n+  private thirdTimeout: number = 0;\n+\n+  private expandedTimeout: number = 0;\n+  private expandedDelay: number = 2000;\n+\n+  private connectionStateStore?: ConnectionStateStore;\n+  private readonly connectionStateListener: () => void;\n+\n+  constructor() {\n+    super();\n+\n+    this.connectionStateListener = () => {\n+      const wasReconnecting = this.reconnecting;\n+      const wasOffline = this.offline;\n+\n+      this.updateConnectionState();\n+\n+      // Temporarily expand the indicator on state changes\n+      if (this.offline !== wasOffline || this.reconnecting !== wasReconnecting) {\n+        this.expanded = true;\n+        this.expandedTimeout = this.timeoutFor(\n+          this.expandedTimeout,\n+          true,\n+          () => this.expanded = false,\n+          this.expandedDelay\n+        );\n+      }\n+    };\n+  }\n+\n+  render() {\n+    return html`\n+      <div\n+       class=\"v-loading-indicator ${this.loadingBarState}\"\n+       style=\"${this.getLoadingBarStyle()}\"></div>\n+\n+      <div class=\"v-status-message ${classMap({\n+        active: this.reconnecting,\n+        modal: this.reconnectModal\n+      })}\">\n+        <span class=\"text\">\n+          ${this.renderMessage()}\n+        </span>\n+      </div>\n+    `;\n+  }\n+\n+  connectedCallback() {\n+    super.connectedCallback();\n+\n+    const $wnd = window as any;\n+    if ($wnd.Vaadin?.connectionState) {\n+      this.connectionStateStore = $wnd.Vaadin.connectionState as ConnectionStateStore;\n+      this.connectionStateStore.addStateChangeListener(this.connectionStateListener);\n+      this.updateConnectionState();\n+    }\n+\n+    this.updateTheme();\n+  }\n+\n+  disconnectedCallback() {\n+    super.disconnectedCallback();\n+\n+    if (this.connectionStateStore) {\n+      this.connectionStateStore.removeStateChangeListener(this.connectionStateListener);\n+    }\n+\n+    this.updateTheme();\n+  }\n+\n+  get loading() {\n+    return this.loadingState;\n+  }\n+\n+  set loading(loading: boolean) {\n+    this.loadingState = loading;\n+    this.loadingBarState = LoadingBarState.IDLE;\n+\n+    this.firstTimeout = this.timeoutFor(\n+      this.firstTimeout,\n+      loading,\n+      () => this.loadingBarState = LoadingBarState.FIRST,\n+      this.firstDelay\n+    );\n+\n+    this.secondTimeout = this.timeoutFor(\n+      this.secondTimeout,\n+      loading,\n+      () => this.loadingBarState = LoadingBarState.SECOND,\n+      this.secondDelay\n+    );\n+\n+    this.thirdTimeout = this.timeoutFor(\n+      this.thirdTimeout,\n+      loading,\n+      () => this.loadingBarState = LoadingBarState.THIRD,\n+      this.thirdDelay\n+    );\n+  }\n+\n+  @property({type: Boolean})\n+  get applyDefaultTheme() {\n+    return this.applyDefaultThemeState;\n+  }\n+\n+  set applyDefaultTheme(applyDefaultTheme: boolean) {\n+    if (applyDefaultTheme !== this.applyDefaultThemeState) {\n+      this.applyDefaultThemeState = applyDefaultTheme;\n+      this.updateTheme();\n+    }\n+  }\n+\n+  protected createRenderRoot() {\n+    return this;\n+  }\n+\n+  private updateConnectionState() {\n+    const state = this.connectionStateStore?.state;\n+    this.offline = state === ConnectionState.CONNECTION_LOST\n+    this.reconnecting = state === ConnectionState.RECONNECTING;\n+    this.loading = state === ConnectionState.LOADING;\n+  }\n+\n+  private renderMessage() {\n+    return this.reconnecting\n+      ? this.reconnectingText\n+      : this.offline\n+        ? this.offlineText\n+        : this.onlineText", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a4768da2fad4c9bdf0b819c67a2304b8eeeb489"}, "originalPosition": 193}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MzkyNDgx", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-535392481", "createdAt": "2020-11-20T12:37:56Z", "commit": {"oid": "f2c5eed9d36e4c6f17ecf6890569788cb7eb8a48"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2c5eed9d36e4c6f17ecf6890569788cb7eb8a48", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/f2c5eed9d36e4c6f17ecf6890569788cb7eb8a48", "committedDate": "2020-11-20T08:42:28Z", "message": "fix linter error"}, "afterCommit": {"oid": "631d67aef0aa72850e62b5f898d93f38e8fac4fe", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/631d67aef0aa72850e62b5f898d93f38e8fac4fe", "committedDate": "2020-11-23T12:08:13Z", "message": "fix linter error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NDY3MTQz", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-536467143", "createdAt": "2020-11-23T13:23:46Z", "commit": {"oid": "631d67aef0aa72850e62b5f898d93f38e8fac4fe"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4b25b4df67224bd1884be2e1da1924abb0d651a", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/a4b25b4df67224bd1884be2e1da1924abb0d651a", "committedDate": "2020-11-23T13:27:05Z", "message": "feat(offline): add connection indicator element"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6a4b81a3877d7a402c51a61dbf75245b07834de", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/b6a4b81a3877d7a402c51a61dbf75245b07834de", "committedDate": "2020-11-23T13:27:05Z", "message": "use ConnectionStateStore in connection indicator element"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e6091cf8ee43f6c9e8944c521e3d46cc9b31cd8", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/4e6091cf8ee43f6c9e8944c521e3d46cc9b31cd8", "committedDate": "2020-11-23T13:27:05Z", "message": "combine separate loading boolean states into LoadingBarState enum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adf82fa292c1d20e2b94cb6917e8ac78bad9c5f4", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/adf82fa292c1d20e2b94cb6917e8ac78bad9c5f4", "committedDate": "2020-11-23T13:27:05Z", "message": "fix linter errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e93b82b396595af8c32f89fc5123c4765f190719", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/e93b82b396595af8c32f89fc5123c4765f190719", "committedDate": "2020-11-23T13:27:05Z", "message": "render connection indicator style under head"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "568b5cfe6b302390325288da1c38698883d4c6f4", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/568b5cfe6b302390325288da1c38698883d4c6f4", "committedDate": "2020-11-23T13:27:05Z", "message": "fix document.head contents removed by accident"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9daea3eb503b546a3de8391e503e90fd794bb1d7", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/9daea3eb503b546a3de8391e503e90fd794bb1d7", "committedDate": "2020-11-23T13:27:05Z", "message": "reflect reconnecting attribute"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c65e136d5fe97a04487f7c09c8d523a71e9eea3b", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/c65e136d5fe97a04487f7c09c8d523a71e9eea3b", "committedDate": "2020-11-23T13:27:05Z", "message": "remove obsolete LoadingIndicator.ts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c538d63f0c8c56c9be44e087d8db2a73f3d1d242", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/c538d63f0c8c56c9be44e087d8db2a73f3d1d242", "committedDate": "2020-11-23T13:27:05Z", "message": "rename Vaadin.loadingIndicator to .connectionIndicator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "471f6baf7e83e69383550ef9042805d306dfbfc0", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/471f6baf7e83e69383550ef9042805d306dfbfc0", "committedDate": "2020-11-23T13:27:05Z", "message": "fix ConnectionIndicator showing online text for reconnecting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "127a0e8d4efb011eddd79c1859945f6530e7c8fb", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/127a0e8d4efb011eddd79c1859945f6530e7c8fb", "committedDate": "2020-11-23T13:27:05Z", "message": "fix: only expand connection indicator when after state changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1af2a8f6ac1b2783a13af305f379573c95f5df83", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/1af2a8f6ac1b2783a13af305f379573c95f5df83", "committedDate": "2020-11-23T13:27:05Z", "message": "chore: better formatting, add missing semicolons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c66d97bcabd0e8485ab98d10601f66481ac595ab", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/c66d97bcabd0e8485ab98d10601f66481ac595ab", "committedDate": "2020-11-23T13:27:05Z", "message": "add tests and cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "618b69c2a78271cd86c3b1434ec1adb23f0fd331", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/618b69c2a78271cd86c3b1434ec1adb23f0fd331", "committedDate": "2020-11-23T13:27:05Z", "message": "assert message text in ConnectionIndicator tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63187e5dd80d05bf286b3e0b7079a490d2a09247", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/63187e5dd80d05bf286b3e0b7079a490d2a09247", "committedDate": "2020-11-23T13:27:06Z", "message": "fix linter error"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "631d67aef0aa72850e62b5f898d93f38e8fac4fe", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/631d67aef0aa72850e62b5f898d93f38e8fac4fe", "committedDate": "2020-11-23T12:08:13Z", "message": "fix linter error"}, "afterCommit": {"oid": "63187e5dd80d05bf286b3e0b7079a490d2a09247", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/63187e5dd80d05bf286b3e0b7079a490d2a09247", "committedDate": "2020-11-23T13:27:06Z", "message": "fix linter error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NDcwMzQx", "url": "https://github.com/vaadin/flow/pull/9396#pullrequestreview-536470341", "createdAt": "2020-11-23T13:27:42Z", "commit": {"oid": "63187e5dd80d05bf286b3e0b7079a490d2a09247"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4857, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}