{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NzAwNjQz", "number": 9387, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMDozNDo1MFrOE4GWpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjo1MzowN1rOE7CYLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MjU5ODEzOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/WebBrowser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMDozNDo1MFrOHx0k_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMDozNDo1MFrOHx0k_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwMzcwOA==", "bodyText": "Do not forget to remove this deprecated code someday.", "url": "https://github.com/vaadin/flow/pull/9387#discussion_r522003708", "createdAt": "2020-11-12T10:34:50Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/WebBrowser.java", "diffHunk": "@@ -296,7 +322,12 @@ public boolean isChromeOS() {\n      *\n      * @param request\n      *            the Vaadin request to read the information from\n+     *\n+     * @deprecated Use {@link #WebBrowser(VaadinRequest)} constructor instead\n+     *             and create a new instance of WebBrowser to apply the changes\n+     *             from given {@link VaadinRequest}.\n      */\n+    @Deprecated\n     public void updateRequestDetails(VaadinRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5666cd61f3b39b0ffbe3b0f71d156b79d0283684"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODIwNjE4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/HandlerHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMjoyMTo1OFrOH1rOFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMjoyMTo1OFrOH1rOFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA0NDY5NQ==", "bodyText": "Define and throw a dedicated exception instead of using a generic one.", "url": "https://github.com/vaadin/flow/pull/9387#discussion_r526044695", "createdAt": "2020-11-18T12:21:58Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/HandlerHelper.java", "diffHunk": "@@ -176,4 +189,26 @@ public static String getCancelingRelativePath(String pathToCancel) {\n         return sb.toString();\n     }\n \n+    /**\n+     * Checks if the given URL path contains the directory change instruction\n+     * (dot-dot), taking into account possible double encoding in hexadecimal\n+     * format, which can be injected maliciously.\n+     *\n+     * @param path\n+     *            the URL path to be verified.\n+     * @return {@code true}, if the given path has a directory change\n+     *         instruction, {@code false} otherwise.\n+     */\n+    public static boolean isPathUnsafe(String path) {\n+        // Check that the path does not have '/../', '\\..\\', %5C..%5C,\n+        // %2F..%2F, nor '/..', '\\..', %5C.., %2F..\n+        try {\n+            path = URLDecoder.decode(path, StandardCharsets.UTF_8.name());\n+        } catch (UnsupportedEncodingException e) {\n+            throw new RuntimeException(\"An error occurred during decoding URL.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7725740fb537610eebd57c92df5b5ba1779ed2c0"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzM5ODY5OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjo1MTo0MVrOH2cwag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMzoxMTo1NlrOH2dgoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1NjI5OA==", "bodyText": "Is this now picked intentionally or not ?", "url": "https://github.com/vaadin/flow/pull/9387#discussion_r526856298", "createdAt": "2020-11-19T12:51:41Z", "author": {"login": "pleku"}, "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "diffHunk": "@@ -55,7 +55,7 @@ public void devModeInitializerToWebpackUpIsBelowThreshold() {\n         final int thresholdMs = Boolean.getBoolean(\n                 System.getProperty(\"vaadin.useDeprecatedV14Bootstrapping\"))\n                         ? 5500\n-                        : 10500;\n+                        : 10700;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808a8ee29035e8098ee5363ff1c439b01c8ed70c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1ODQzMQ==", "bodyText": "I picked that before our discussion that the threshold version-specific. Will revert it.", "url": "https://github.com/vaadin/flow/pull/9387#discussion_r526858431", "createdAt": "2020-11-19T12:55:14Z", "author": {"login": "mshabarov"}, "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "diffHunk": "@@ -55,7 +55,7 @@ public void devModeInitializerToWebpackUpIsBelowThreshold() {\n         final int thresholdMs = Boolean.getBoolean(\n                 System.getProperty(\"vaadin.useDeprecatedV14Bootstrapping\"))\n                         ? 5500\n-                        : 10500;\n+                        : 10700;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1NjI5OA=="}, "originalCommit": {"oid": "808a8ee29035e8098ee5363ff1c439b01c8ed70c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg2Njc1NA==", "bodyText": "Oh, stop. I'm confused. The label is still there target/5.0. We agreed to not CP in to 2.4 and 2.5 branches, since they have significantly different startup performance.", "url": "https://github.com/vaadin/flow/pull/9387#discussion_r526866754", "createdAt": "2020-11-19T13:08:55Z", "author": {"login": "mshabarov"}, "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "diffHunk": "@@ -55,7 +55,7 @@ public void devModeInitializerToWebpackUpIsBelowThreshold() {\n         final int thresholdMs = Boolean.getBoolean(\n                 System.getProperty(\"vaadin.useDeprecatedV14Bootstrapping\"))\n                         ? 5500\n-                        : 10500;\n+                        : 10700;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1NjI5OA=="}, "originalCommit": {"oid": "808a8ee29035e8098ee5363ff1c439b01c8ed70c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg2NzU5MQ==", "bodyText": "Yes, but it was you who added the label, not the PR author or the reviewer. So we better ask them if it is needed here or not ?", "url": "https://github.com/vaadin/flow/pull/9387#discussion_r526867591", "createdAt": "2020-11-19T13:10:14Z", "author": {"login": "pleku"}, "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "diffHunk": "@@ -55,7 +55,7 @@ public void devModeInitializerToWebpackUpIsBelowThreshold() {\n         final int thresholdMs = Boolean.getBoolean(\n                 System.getProperty(\"vaadin.useDeprecatedV14Bootstrapping\"))\n                         ? 5500\n-                        : 10500;\n+                        : 10700;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1NjI5OA=="}, "originalCommit": {"oid": "808a8ee29035e8098ee5363ff1c439b01c8ed70c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg2ODY0MA==", "bodyText": "Well, the difference is not so much that it should matter that much", "url": "https://github.com/vaadin/flow/pull/9387#discussion_r526868640", "createdAt": "2020-11-19T13:11:56Z", "author": {"login": "pleku"}, "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "diffHunk": "@@ -55,7 +55,7 @@ public void devModeInitializerToWebpackUpIsBelowThreshold() {\n         final int thresholdMs = Boolean.getBoolean(\n                 System.getProperty(\"vaadin.useDeprecatedV14Bootstrapping\"))\n                         ? 5500\n-                        : 10500;\n+                        : 10700;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1NjI5OA=="}, "originalCommit": {"oid": "808a8ee29035e8098ee5363ff1c439b01c8ed70c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzQwMzk2OnYy", "diffSide": "LEFT", "path": "flow-component-demo-helpers/src/main/java/com/vaadin/flow/demo/DemoView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjo1MzowN1rOH2czsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjo1ODozNlrOH2dAtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1NzEzOQ==", "bodyText": "Why was this picked to 5.0 ?", "url": "https://github.com/vaadin/flow/pull/9387#discussion_r526857139", "createdAt": "2020-11-19T12:53:07Z", "author": {"login": "pleku"}, "path": "flow-component-demo-helpers/src/main/java/com/vaadin/flow/demo/DemoView.java", "diffHunk": "@@ -47,7 +45,6 @@\n  * @since 1.0\n  */\n @Tag(Tag.DIV)\n-@Theme(Lumo.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808a8ee29035e8098ee5363ff1c439b01c8ed70c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg2MDQ3MA==", "bodyText": "Because fix: AppShellConfigurator is now considered for theme endpoint and feat!: Theme annotation should be only on AppShellConfigurator are picked to 5.0 from master (according to labels). And without this commit the components tests will fail.", "url": "https://github.com/vaadin/flow/pull/9387#discussion_r526860470", "createdAt": "2020-11-19T12:58:36Z", "author": {"login": "mshabarov"}, "path": "flow-component-demo-helpers/src/main/java/com/vaadin/flow/demo/DemoView.java", "diffHunk": "@@ -47,7 +45,6 @@\n  * @since 1.0\n  */\n @Tag(Tag.DIV)\n-@Theme(Lumo.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1NzEzOQ=="}, "originalCommit": {"oid": "808a8ee29035e8098ee5363ff1c439b01c8ed70c"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3018, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}