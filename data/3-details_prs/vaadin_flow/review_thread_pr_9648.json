{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NDU4MzIy", "number": 9648, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDowNTozMlrOFE_8Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToyMDo1NlrOFIFcKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzg2MjAyOnYy", "diffSide": "RIGHT", "path": "flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/ThemeIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDowNTozMlrOIFSAVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjowNjo1MFrOIF6caA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwODc4OA==", "bodyText": "How about a third test that css from the parent theme can be overwritten by the child? (e.g. having Lumo as parent and customizing a specific color)\nEdit: Looks like there is a typo in test above as well; you probably mean 'Margin from theme should be applied.'", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r542408788", "createdAt": "2020-12-14T14:05:32Z", "author": {"login": "knoobie"}, "path": "flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/ThemeIT.java", "diffHunk": "@@ -105,6 +105,22 @@ public void applicationTheme_importCSS_isUsed() {\n                 driver.getPageSource().contains(\"HTTP ERROR 404 Not Found\"));\n     }\n \n+    @Test\n+    public void parentTheme_isApplied() {\n+        open();\n+        checkLogsForErrors();\n+\n+        Assert.assertEquals(\n+            \"Color from parent theme should be applied.\",\n+            \"rgba(0, 255, 255, 1)\", $(SpanElement.class).id(FONTAWESOME_ID)\n+                .getCssValue(\"color\"));\n+\n+        Assert.assertEquals(\n+            \"Color from parent theme should be applied.\",\n+            \"5px\", $(SpanElement.class).id(FONTAWESOME_ID)\n+                .getCssValue(\"margin\"));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f807f1191a81584f0302616789c82d4e329c69b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3MTMzNg==", "bodyText": "Yes I noted also that I forgot to change the message. But this will wait for the reusable theme test to be done first and I will need to move the functionality test to another module at that point.", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r543071336", "createdAt": "2020-12-15T06:06:50Z", "author": {"login": "caalador"}, "path": "flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/ThemeIT.java", "diffHunk": "@@ -105,6 +105,22 @@ public void applicationTheme_importCSS_isUsed() {\n                 driver.getPageSource().contains(\"HTTP ERROR 404 Not Found\"));\n     }\n \n+    @Test\n+    public void parentTheme_isApplied() {\n+        open();\n+        checkLogsForErrors();\n+\n+        Assert.assertEquals(\n+            \"Color from parent theme should be applied.\",\n+            \"rgba(0, 255, 255, 1)\", $(SpanElement.class).id(FONTAWESOME_ID)\n+                .getCssValue(\"color\"));\n+\n+        Assert.assertEquals(\n+            \"Color from parent theme should be applied.\",\n+            \"5px\", $(SpanElement.class).id(FONTAWESOME_ID)\n+                .getCssValue(\"margin\"));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwODc4OA=="}, "originalCommit": {"oid": "6f807f1191a81584f0302616789c82d4e329c69b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDE2NjA1OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/plugins/application-theme-plugin/application-theme-plugin.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMDoyNzoyNFrOIIdXrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMDoyNzoyNFrOIIdXrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc0MDcxNg==", "bodyText": "As this will now recursively also do things for all parent themes, maybe that could be clarified here", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r545740716", "createdAt": "2020-12-18T10:27:24Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/application-theme-plugin.js", "diffHunk": "@@ -96,6 +74,40 @@ class ApplicationThemePlugin {\n \n module.exports = ApplicationThemePlugin;\n \n+/**\n+ * Search for the given theme in the project and resource folders.\n+ *\n+ * @param {string} name of theme to find\n+ */\n+function findThemeFolderAndHandleTheme(themeName) {\n+\n+  let themeFound = false;\n+  for (let i = 0; i < executionOptions.themeProjectFolders.length; i++) {\n+    const themeProjectFolder = executionOptions.themeProjectFolders[i];\n+    if (fs.existsSync(themeProjectFolder)) {\n+      logger.info(\"Searching themes folder \", themeProjectFolder, \" for theme \", themeName);\n+      const handled = handleThemes(themeName, themeProjectFolder, executionOptions.projectStaticAssetsOutputFolder);\n+      if (handled) {\n+        if (themeFound) {\n+          throw new Error(\"Found theme files in '\" + themeProjectFolder + \"' and '\"\n+            + themeFound + \"'. Theme should only be available in one folder\");\n+        }\n+        logger.info(\"Found theme files from '\", themeProjectFolder, \"'\");\n+        themeFound = themeProjectFolder;\n+      }\n+    }\n+  }\n+\n+  if (fs.existsSync(executionOptions.themeResourceFolder)) {\n+    if (themeFound && fs.existsSync(path.resolve(executionOptions.themeResourceFolder, themeName))) {\n+      throw new Error(\"Theme '\" + themeName + \"'should not exist inside a jar and in the project at the same time\\n\" +\n+        \"Extending another theme is possible by adding { \\\"parent\\\": \\\"my-parent-theme\\\" } entry to the theme.json file inside your theme folder.\");\n+    }\n+    logger.debug(\"Searching theme jar resource folder \", executionOptions.themeResourceFolder, \" for theme \", themeName);\n+    handleThemes(themeName, executionOptions.themeResourceFolder, executionOptions.projectStaticAssetsOutputFolder);\n+  }\n+}\n+\n /**\n  * Copies static resources for theme and generates/writes the [theme-name].js for webpack to handle.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f807f1191a81584f0302616789c82d4e329c69b"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDIwNTUxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMDozOTowMFrOIIdvKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMDozOTowMFrOIIdvKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc0NjcyOQ==", "bodyText": "Non-blocking: Just a thought that it would probably be a good idea to have an util method that \"gets the generated file for a given theme name\" that is reused in all places, but that refactoring can be done later if needed", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r545746729", "createdAt": "2020-12-18T10:39:00Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -61,21 +61,25 @@ function generateThemeFile(themeFolder, themeName, themeProperties) {\n \n   let themeFile = headerImport;\n \n-  if(componentsFiles.length > 0){\n-    themeFile += 'import { css, unsafeCSS, registerStyles } from \\'@vaadin/vaadin-themable-mixin/register-styles\\';';\n+  if (componentsFiles.length > 0) {\n+    themeFile += 'import { css, unsafeCSS, registerStyles } from \\'@vaadin/vaadin-themable-mixin/register-styles\\';\\n';\n+  }\n+\n+  if (themeProperties.parent) {\n+    themeFile += `import {applyTheme as applyBaseTheme} from 'themes/${themeProperties.parent}/${themeProperties.parent}.generated.js';`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f807f1191a81584f0302616789c82d4e329c69b"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDE5MTE1OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxMTo1NlrOIJz3aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1MjoyMVrOIJ1HOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1Nzg2NA==", "bodyText": "Nit: this is not background ...", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547157864", "createdAt": "2020-12-22T09:11:56Z", "author": {"login": "pleku"}, "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.JavascriptExecutor;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ImageElement;\n+import com.vaadin.flow.component.html.testbench.SpanElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+import com.vaadin.testbench.TestBenchElement;\n+\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.BUTTERFLY_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.FONTAWESOME_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.MY_POLYMER_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SNOWFLAKE_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.OCTOPUSS_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SUB_COMPONENT_ID;\n+\n+public class ParentThemeIT extends ChromeBrowserTest {\n+\n+    @Test\n+    public void childTheme_overridesParentTheme() {\n+        open();\n+        // No exception for bg-image should exist\n+        checkLogsForErrors();\n+\n+        final WebElement body = findElement(By.tagName(\"body\"));\n+        // Note themes/reusable-theme gets VAADIN/static from the file-loader\n+        Assert.assertEquals(\n+            \"url(\\\"\" + getRootURL() + \"/VAADIN/static/themes/child-theme/bg.jpg\\\")\",\n+            body.getCssValue(\"background-image\"));\n+\n+        Assert.assertEquals(\"\\\"IBM Plex Mono\\\"\", body.getCssValue(\"font-family\"));\n+\n+        Assert.assertEquals(\"Child should override parent external.\",\n+            \"url(\\\"\" + getRootURL()\n+                + \"/VAADIN/static/themes/child-theme/img/gobo.png\\\")\",\n+            $(SpanElement.class).id(BUTTERFLY_ID)\n+                .getCssValue(\"background-image\"));\n+\n+        Assert.assertEquals(\"Child img selector should be used\",\n+            \"url(\\\"\" + getRootURL() + \"/VAADIN/static/themes/child-theme/img/viking.png\\\")\",\n+            $(SpanElement.class).id(OCTOPUSS_ID)\n+                .getCssValue(\"background-image\"));\n+    }\n+\n+    @Test\n+    public void componentThemeIsApplied_childThemeTextColorIsApplied() {\n+        open();\n+        TestBenchElement myField = $(TestBenchElement.class).id(MY_POLYMER_ID);\n+        TestBenchElement input = myField.$(TestBenchElement.class)\n+            .id(\"vaadin-text-field-input-0\");\n+        Assert.assertEquals(\"Polymer text field should have red background\",\n+            \"rgba(255, 0, 0, 1)\", input.getCssValue(\"background-color\"));\n+\n+        Assert.assertEquals(\"Polymer text field should have red background\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3ODI5OQ==", "bodyText": "CopyPaste do something else problem. fixed", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547178299", "createdAt": "2020-12-22T09:52:21Z", "author": {"login": "caalador"}, "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.JavascriptExecutor;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ImageElement;\n+import com.vaadin.flow.component.html.testbench.SpanElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+import com.vaadin.testbench.TestBenchElement;\n+\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.BUTTERFLY_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.FONTAWESOME_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.MY_POLYMER_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SNOWFLAKE_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.OCTOPUSS_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SUB_COMPONENT_ID;\n+\n+public class ParentThemeIT extends ChromeBrowserTest {\n+\n+    @Test\n+    public void childTheme_overridesParentTheme() {\n+        open();\n+        // No exception for bg-image should exist\n+        checkLogsForErrors();\n+\n+        final WebElement body = findElement(By.tagName(\"body\"));\n+        // Note themes/reusable-theme gets VAADIN/static from the file-loader\n+        Assert.assertEquals(\n+            \"url(\\\"\" + getRootURL() + \"/VAADIN/static/themes/child-theme/bg.jpg\\\")\",\n+            body.getCssValue(\"background-image\"));\n+\n+        Assert.assertEquals(\"\\\"IBM Plex Mono\\\"\", body.getCssValue(\"font-family\"));\n+\n+        Assert.assertEquals(\"Child should override parent external.\",\n+            \"url(\\\"\" + getRootURL()\n+                + \"/VAADIN/static/themes/child-theme/img/gobo.png\\\")\",\n+            $(SpanElement.class).id(BUTTERFLY_ID)\n+                .getCssValue(\"background-image\"));\n+\n+        Assert.assertEquals(\"Child img selector should be used\",\n+            \"url(\\\"\" + getRootURL() + \"/VAADIN/static/themes/child-theme/img/viking.png\\\")\",\n+            $(SpanElement.class).id(OCTOPUSS_ID)\n+                .getCssValue(\"background-image\"));\n+    }\n+\n+    @Test\n+    public void componentThemeIsApplied_childThemeTextColorIsApplied() {\n+        open();\n+        TestBenchElement myField = $(TestBenchElement.class).id(MY_POLYMER_ID);\n+        TestBenchElement input = myField.$(TestBenchElement.class)\n+            .id(\"vaadin-text-field-input-0\");\n+        Assert.assertEquals(\"Polymer text field should have red background\",\n+            \"rgba(255, 0, 0, 1)\", input.getCssValue(\"background-color\"));\n+\n+        Assert.assertEquals(\"Polymer text field should have red background\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1Nzg2NA=="}, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIwMjMwOnYy", "diffSide": "RIGHT", "path": "flow-tests/test-themes/frontend/themes/parent-theme/parent.css", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNToxN1rOIJz-BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1NDo0NlrOIJ1MEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTU1Ng==", "bodyText": "Non-blocking: I think it is not nice to have different css value here than in the tests that verify using the rgb value, makes it more cumbersome to follow things", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547159556", "createdAt": "2020-12-22T09:15:17Z", "author": {"login": "pleku"}, "path": "flow-tests/test-themes/frontend/themes/parent-theme/parent.css", "diffHunk": "@@ -0,0 +1,10 @@\n+#font-awesome {\n+    color: aqua;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3OTUzOQ==", "bodyText": "Updated.", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547179539", "createdAt": "2020-12-22T09:54:46Z", "author": {"login": "caalador"}, "path": "flow-tests/test-themes/frontend/themes/parent-theme/parent.css", "diffHunk": "@@ -0,0 +1,10 @@\n+#font-awesome {\n+    color: aqua;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTU1Ng=="}, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIxNTczOnYy", "diffSide": "RIGHT", "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxOToxNlrOIJ0GIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMToxOTowMVrOIJ3sXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MTYzNA==", "bodyText": "Is this really ParentThemeIT as it is mostly testing overriding parent theme things ? At least individual test names appear so... maybe the parts that check that something from the parent theme is still applied could be moved inside one test, I think there is not many checks for that, maybe two ?", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547161634", "createdAt": "2020-12-22T09:19:16Z", "author": {"login": "pleku"}, "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.JavascriptExecutor;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ImageElement;\n+import com.vaadin.flow.component.html.testbench.SpanElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+import com.vaadin.testbench.TestBenchElement;\n+\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.BUTTERFLY_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.FONTAWESOME_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.MY_POLYMER_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SNOWFLAKE_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.OCTOPUSS_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SUB_COMPONENT_ID;\n+\n+public class ParentThemeIT extends ChromeBrowserTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MDM5MA==", "bodyText": "Well as this is for testing the reusable theme as parent most parent theme specifics are already tested there. This is testing the reusable theme as parent so I feel the important is here to be able to override parent parts as the reusable is fully tested in another module.", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547180390", "createdAt": "2020-12-22T09:56:21Z", "author": {"login": "caalador"}, "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.JavascriptExecutor;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ImageElement;\n+import com.vaadin.flow.component.html.testbench.SpanElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+import com.vaadin.testbench.TestBenchElement;\n+\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.BUTTERFLY_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.FONTAWESOME_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.MY_POLYMER_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SNOWFLAKE_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.OCTOPUSS_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SUB_COMPONENT_ID;\n+\n+public class ParentThemeIT extends ChromeBrowserTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MTYzNA=="}, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxOTkxNw==", "bodyText": "Yeah, but my point was that to me this is mostly about \"Overriding Parent Theme\".", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547219917", "createdAt": "2020-12-22T11:17:38Z", "author": {"login": "pleku"}, "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.JavascriptExecutor;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ImageElement;\n+import com.vaadin.flow.component.html.testbench.SpanElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+import com.vaadin.testbench.TestBenchElement;\n+\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.BUTTERFLY_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.FONTAWESOME_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.MY_POLYMER_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SNOWFLAKE_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.OCTOPUSS_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SUB_COMPONENT_ID;\n+\n+public class ParentThemeIT extends ChromeBrowserTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MTYzNA=="}, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIyMDU3NQ==", "bodyText": "CustomiseParentThemeIT?", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547220575", "createdAt": "2020-12-22T11:19:01Z", "author": {"login": "caalador"}, "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.JavascriptExecutor;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ImageElement;\n+import com.vaadin.flow.component.html.testbench.SpanElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+import com.vaadin.testbench.TestBenchElement;\n+\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.BUTTERFLY_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.FONTAWESOME_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.MY_POLYMER_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SNOWFLAKE_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.OCTOPUSS_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SUB_COMPONENT_ID;\n+\n+public class ParentThemeIT extends ChromeBrowserTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MTYzNA=="}, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIxOTU2OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToyMDozM1rOIJ0Ilg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1MDoyMVrOIJ1DaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MjI2Mg==", "bodyText": "Is this actually valid comment ? As the path is for child-theme", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547162262", "createdAt": "2020-12-22T09:20:33Z", "author": {"login": "pleku"}, "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.JavascriptExecutor;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ImageElement;\n+import com.vaadin.flow.component.html.testbench.SpanElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+import com.vaadin.testbench.TestBenchElement;\n+\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.BUTTERFLY_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.FONTAWESOME_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.MY_POLYMER_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SNOWFLAKE_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.OCTOPUSS_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SUB_COMPONENT_ID;\n+\n+public class ParentThemeIT extends ChromeBrowserTest {\n+\n+    @Test\n+    public void childTheme_overridesParentTheme() {\n+        open();\n+        // No exception for bg-image should exist\n+        checkLogsForErrors();\n+\n+        final WebElement body = findElement(By.tagName(\"body\"));\n+        // Note themes/reusable-theme gets VAADIN/static from the file-loader", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3NzMyMQ==", "bodyText": "Unecessay note. removed", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547177321", "createdAt": "2020-12-22T09:50:21Z", "author": {"login": "caalador"}, "path": "flow-tests/test-application-theme/test-reusable-as-parent/src/test/java/com/vaadin/flow/uitest/ui/theme/ParentThemeIT.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.JavascriptExecutor;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ImageElement;\n+import com.vaadin.flow.component.html.testbench.SpanElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+import com.vaadin.testbench.TestBenchElement;\n+\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.BUTTERFLY_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.FONTAWESOME_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.MY_POLYMER_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SNOWFLAKE_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.OCTOPUSS_ID;\n+import static com.vaadin.flow.uitest.ui.theme.ParentThemeView.SUB_COMPONENT_ID;\n+\n+public class ParentThemeIT extends ChromeBrowserTest {\n+\n+    @Test\n+    public void childTheme_overridesParentTheme() {\n+        open();\n+        // No exception for bg-image should exist\n+        checkLogsForErrors();\n+\n+        final WebElement body = findElement(By.tagName(\"body\"));\n+        // Note themes/reusable-theme gets VAADIN/static from the file-loader", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MjI2Mg=="}, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIyMDU4OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/ThemeIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToyMDo1NlrOIJ0JOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1NToyNlrOIJ1Ncg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MjQyNQ==", "bodyText": "This has nothing to do with border radius", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547162425", "createdAt": "2020-12-22T09:20:56Z", "author": {"login": "pleku"}, "path": "flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/ThemeIT.java", "diffHunk": "@@ -105,6 +105,36 @@ public void applicationTheme_importCSS_isUsed() {\n                 driver.getPageSource().contains(\"HTTP ERROR 404 Not Found\"));\n     }\n \n+    @Test\n+    public void parentTheme_isApplied() {\n+        open();\n+        checkLogsForErrors();\n+\n+        Assert.assertEquals(\n+            \"Color from parent theme should be applied.\",\n+            \"rgba(0, 255, 255, 1)\", $(SpanElement.class).id(FONTAWESOME_ID)\n+                .getCssValue(\"color\"));\n+\n+        Assert.assertEquals(\n+            \"Child theme should override parent theme values\",\n+            \"5px\", $(SpanElement.class).id(FONTAWESOME_ID)\n+                .getCssValue(\"margin\"));\n+\n+        Assert.assertEquals(\n+            \"Child theme values should be applied\",\n+            \"5px\", $(SpanElement.class).id(FONTAWESOME_ID)\n+                .getCssValue(\"padding\"));\n+\n+        TestBenchElement myField = $(TestBenchElement.class).id(MY_POLYMER_ID);\n+        TestBenchElement input = myField.$(TestBenchElement.class)\n+            .id(\"vaadin-text-field-input-0\");\n+        Assert.assertEquals(\"Polymer text field should get parent border radius\",\n+            \"0px\", input.getCssValue(\"border-radius\"));\n+\n+        Assert.assertEquals(\"Polymer text field should get parent border radius\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3OTg5MA==", "bodyText": "CP. fixed", "url": "https://github.com/vaadin/flow/pull/9648#discussion_r547179890", "createdAt": "2020-12-22T09:55:26Z", "author": {"login": "caalador"}, "path": "flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/ThemeIT.java", "diffHunk": "@@ -105,6 +105,36 @@ public void applicationTheme_importCSS_isUsed() {\n                 driver.getPageSource().contains(\"HTTP ERROR 404 Not Found\"));\n     }\n \n+    @Test\n+    public void parentTheme_isApplied() {\n+        open();\n+        checkLogsForErrors();\n+\n+        Assert.assertEquals(\n+            \"Color from parent theme should be applied.\",\n+            \"rgba(0, 255, 255, 1)\", $(SpanElement.class).id(FONTAWESOME_ID)\n+                .getCssValue(\"color\"));\n+\n+        Assert.assertEquals(\n+            \"Child theme should override parent theme values\",\n+            \"5px\", $(SpanElement.class).id(FONTAWESOME_ID)\n+                .getCssValue(\"margin\"));\n+\n+        Assert.assertEquals(\n+            \"Child theme values should be applied\",\n+            \"5px\", $(SpanElement.class).id(FONTAWESOME_ID)\n+                .getCssValue(\"padding\"));\n+\n+        TestBenchElement myField = $(TestBenchElement.class).id(MY_POLYMER_ID);\n+        TestBenchElement input = myField.$(TestBenchElement.class)\n+            .id(\"vaadin-text-field-input-0\");\n+        Assert.assertEquals(\"Polymer text field should get parent border radius\",\n+            \"0px\", input.getCssValue(\"border-radius\"));\n+\n+        Assert.assertEquals(\"Polymer text field should get parent border radius\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MjQyNQ=="}, "originalCommit": {"oid": "e7b8ed9ff279039e4d4e86ef07e319a090850cff"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3739, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}