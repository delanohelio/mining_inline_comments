{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTg5MTY1", "number": 9451, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoxODo0MlrOE7epmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo0NTozNFrOE8M4Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODAzNjA4OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoxODo0MlrOH3Jn6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNjo1NjowNFrOH4A80g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTQwMg==", "bodyText": "Isn't that exactly the opposite of #9430?  @pleku", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527591402", "createdAt": "2020-11-20T10:18:42Z", "author": {"login": "knoobie"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,3 +1,3 @@\n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b088d805652b7db7a642b772e5635b0dd5576ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYwMDMxNg==", "bodyText": "hmm... but now it's a direct reference from the css file so IDEA (and others) can for instance auto complete and validate the reference file.", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527600316", "createdAt": "2020-11-20T10:34:02Z", "author": {"login": "caalador"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,3 +1,3 @@\n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTQwMg=="}, "originalCommit": {"oid": "b088d805652b7db7a642b772e5635b0dd5576ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYxMDIxNg==", "bodyText": "That's a convenient for developer for \"small\" projects but can be a huge burden for dev or ops teams in bigger projects when you have requirements to load images from something outside of the app.\nAt least this \"magic\" should be configurable(opt-out) if that's something you need to have for vaadin's DX.", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527610216", "createdAt": "2020-11-20T10:50:55Z", "author": {"login": "knoobie"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,3 +1,3 @@\n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTQwMg=="}, "originalCommit": {"oid": "b088d805652b7db7a642b772e5635b0dd5576ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1MDA5NQ==", "bodyText": "Updated so that we only change the url if the file actually exists relative to the css being handled.", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527650095", "createdAt": "2020-11-20T12:09:37Z", "author": {"login": "caalador"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,3 +1,3 @@\n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTQwMg=="}, "originalCommit": {"oid": "b088d805652b7db7a642b772e5635b0dd5576ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2MDEwMQ==", "bodyText": "Interesting idea!\nJust a test case to verify: Project setup: Vaadin + Spring Boot\nresources/public/img/first.png\nresources/META-INF/VAADIN/static/img/second.jpg\nresources/VAADIN/themes/my-theme/global.css\nglobal.css:\nbody {\n background-image: url(\"./img/first.png\");\n}\nmain {\n background-image: url(\"./img/second.jpg\");\n}\nSpring boot would serve the image first.png because it is inside the public folder. Now your change would not change the background-image of the css because first.png isn't reachable for webpack. And the background-image of main would be rewritten and of course served successfully. Correct?", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527660101", "createdAt": "2020-11-20T12:30:45Z", "author": {"login": "knoobie"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,3 +1,3 @@\n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTQwMg=="}, "originalCommit": {"oid": "b088d805652b7db7a642b772e5635b0dd5576ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2NzI5Mg==", "bodyText": "The theme-loader will now actually check that the file exists relative to the css file handled so: if it can find the file resources/VAADIN/themes/my-theme/img/second.jpg it will be rewritten with VAADIN/static else it's seen as \"external\" and supplied by someone else.", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527667292", "createdAt": "2020-11-20T12:44:39Z", "author": {"login": "caalador"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,3 +1,3 @@\n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTQwMg=="}, "originalCommit": {"oid": "b088d805652b7db7a642b772e5635b0dd5576ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MDM3Mg==", "bodyText": "That was the missing piece, thanks!", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527670372", "createdAt": "2020-11-20T12:50:34Z", "author": {"login": "knoobie"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,3 +1,3 @@\n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTQwMg=="}, "originalCommit": {"oid": "b088d805652b7db7a642b772e5635b0dd5576ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MTI5MQ==", "bodyText": "I think if we check that the file exists either in the folder or inside a the parent theme .jar \ud83d\udc40 and only modify it then, we would be handling only the URLs that we should. But then ofc. it might be quite hard for the users to detect typos (?) if those only result in 404 on the page. Could do something for that, e.g. make them more visible in development mode", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527671291", "createdAt": "2020-11-20T12:52:32Z", "author": {"login": "pleku"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,3 +1,3 @@\n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTQwMg=="}, "originalCommit": {"oid": "b088d805652b7db7a642b772e5635b0dd5576ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ5Nzg3NA==", "bodyText": "for dev mode we now log any url not modified.", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528497874", "createdAt": "2020-11-23T06:56:04Z", "author": {"login": "caalador"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,3 +1,3 @@\n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5MTQwMg=="}, "originalCommit": {"oid": "b088d805652b7db7a642b772e5635b0dd5576ad3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU0NjE2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/StaticFileServerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo0OTowOVrOH3OZNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNjo1NTozNFrOH4A8YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2OTU1OQ==", "bodyText": "We could verify that a file that is not intended to be copied is not actually copied (and served), maybe like .css or theme.json", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527669559", "createdAt": "2020-11-20T12:49:09Z", "author": {"login": "pleku"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/StaticFileServerTest.java", "diffHunk": "@@ -488,6 +488,37 @@ public void serveStaticBundleBuildResource() throws IOException {\n         assertBundleBuildResource(pathInfo);\n     }\n \n+    @Test\n+    public void contextAndServletPath_serveStaticFileResource()\n+            throws IOException {\n+        String pathInfo = \"/VAADIN/static/img/bg.jpg\";\n+        setupRequestURI(\"/context\", \"/servlet\", pathInfo);\n+        assertBundleBuildResource(pathInfo);\n+    }\n+\n+    @Test\n+    public void ServletPath_serveStaticFileResource()\n+            throws IOException {\n+        String pathInfo = \"/VAADIN/static/img/bg.jpg\";\n+        setupRequestURI(\"\", \"/servlet\", pathInfo);\n+        assertBundleBuildResource(pathInfo);\n+    }\n+\n+    @Test\n+    public void contextPath_serveStaticFileResource()\n+            throws IOException {\n+        String pathInfo = \"/VAADIN/static/img/bg.jpg\";\n+        setupRequestURI(\"/context\", \"\", pathInfo);\n+        assertBundleBuildResource(pathInfo);\n+    }\n+\n+    @Test\n+    public void serveStaticFileResource() throws IOException {\n+        String pathInfo = \"/VAADIN/static/img/bg.jpg\";\n+        setupRequestURI(\"\", \"\", pathInfo);\n+        assertBundleBuildResource(pathInfo);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84588d133fa429fecfdc340fafd74f85c5ae00b3"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ5Nzc2MA==", "bodyText": "This can only be done in the IT test as here we don't copy anything and anything in VAADIN/static should be shared.", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528497760", "createdAt": "2020-11-23T06:55:34Z", "author": {"login": "caalador"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/StaticFileServerTest.java", "diffHunk": "@@ -488,6 +488,37 @@ public void serveStaticBundleBuildResource() throws IOException {\n         assertBundleBuildResource(pathInfo);\n     }\n \n+    @Test\n+    public void contextAndServletPath_serveStaticFileResource()\n+            throws IOException {\n+        String pathInfo = \"/VAADIN/static/img/bg.jpg\";\n+        setupRequestURI(\"/context\", \"/servlet\", pathInfo);\n+        assertBundleBuildResource(pathInfo);\n+    }\n+\n+    @Test\n+    public void ServletPath_serveStaticFileResource()\n+            throws IOException {\n+        String pathInfo = \"/VAADIN/static/img/bg.jpg\";\n+        setupRequestURI(\"\", \"/servlet\", pathInfo);\n+        assertBundleBuildResource(pathInfo);\n+    }\n+\n+    @Test\n+    public void contextPath_serveStaticFileResource()\n+            throws IOException {\n+        String pathInfo = \"/VAADIN/static/img/bg.jpg\";\n+        setupRequestURI(\"/context\", \"\", pathInfo);\n+        assertBundleBuildResource(pathInfo);\n+    }\n+\n+    @Test\n+    public void serveStaticFileResource() throws IOException {\n+        String pathInfo = \"/VAADIN/static/img/bg.jpg\";\n+        setupRequestURI(\"\", \"\", pathInfo);\n+        assertBundleBuildResource(pathInfo);\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2OTU1OQ=="}, "originalCommit": {"oid": "84588d133fa429fecfdc340fafd74f85c5ae00b3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU4OTM3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-copy.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzowMTo1NlrOH3Oyig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNjowNTo1NFrOH4AMyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NjA0Mg==", "bodyText": "maybe clarify what theme files will be copied", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527676042", "createdAt": "2020-11-20T13:01:56Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-copy.js", "diffHunk": "@@ -16,30 +16,23 @@\n \n /**\n  * This file handles copying of theme files to\n- * [staticResourcesFolder]/theme/[theme-name]\n+ * [staticResourcesFolder]\n  */\n \n const fs = require('fs');\n const path = require('path');\n \n /**\n- * create theme/themeName folders and copy theme files there.\n+ * copy theme files  to static assets folder.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb7d2d50f91fc64c5bb9e458a84af10e40846215"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ4NTU3Ng==", "bodyText": "done", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528485576", "createdAt": "2020-11-23T06:05:54Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-copy.js", "diffHunk": "@@ -16,30 +16,23 @@\n \n /**\n  * This file handles copying of theme files to\n- * [staticResourcesFolder]/theme/[theme-name]\n+ * [staticResourcesFolder]\n  */\n \n const fs = require('fs');\n const path = require('path');\n \n /**\n- * create theme/themeName folders and copy theme files there.\n+ * copy theme files  to static assets folder.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NjA0Mg=="}, "originalCommit": {"oid": "cb7d2d50f91fc64c5bb9e458a84af10e40846215"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODYyMjI3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/plugins/theme-loader/theme-loader.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoxMjowNlrOH3PGWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDo0NzowOFrOH4IAXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4MTExNA==", "bodyText": "I think to be reused you would have to make a new Regexp(...)", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527681114", "createdAt": "2020-11-20T13:12:06Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/resources/plugins/theme-loader/theme-loader.js", "diffHunk": "@@ -0,0 +1,26 @@\n+const fs = require('fs');\n+const path = require('path');\n+\n+const urlMatcher = /(url\\()(\\'|\\\")?(\\.\\/)(.*\\2\\))/g;\n+\n+module.exports = function (source, map) {\n+  const handledResourceFolder = path.dirname(this._module.resource);\n+  const logger = this.getLogger(\"theme-loader\");\n+\n+  // Collect groups [url(] [ |'|\"]optional './' and end of url\n+  source = source.replace(urlMatcher, function (match, url, quoteMark, replace, endString) {\n+    // for some reason this matcher can not be reused as a constant", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb7d2d50f91fc64c5bb9e458a84af10e40846215"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ4NTkxNA==", "bodyText": "The issue was the global flag which adds a position on last use.\nFixed by removing g as it doesn't need to remember the position of the last exec.", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528485914", "createdAt": "2020-11-23T06:07:27Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/resources/plugins/theme-loader/theme-loader.js", "diffHunk": "@@ -0,0 +1,26 @@\n+const fs = require('fs');\n+const path = require('path');\n+\n+const urlMatcher = /(url\\()(\\'|\\\")?(\\.\\/)(.*\\2\\))/g;\n+\n+module.exports = function (source, map) {\n+  const handledResourceFolder = path.dirname(this._module.resource);\n+  const logger = this.getLogger(\"theme-loader\");\n+\n+  // Collect groups [url(] [ |'|\"]optional './' and end of url\n+  source = source.replace(urlMatcher, function (match, url, quoteMark, replace, endString) {\n+    // for some reason this matcher can not be reused as a constant", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4MTExNA=="}, "originalCommit": {"oid": "cb7d2d50f91fc64c5bb9e458a84af10e40846215"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxMzQ2OQ==", "bodyText": "In the end the main matcher was updated so that we get the url part directly from there.", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528613469", "createdAt": "2020-11-23T10:47:08Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/resources/plugins/theme-loader/theme-loader.js", "diffHunk": "@@ -0,0 +1,26 @@\n+const fs = require('fs');\n+const path = require('path');\n+\n+const urlMatcher = /(url\\()(\\'|\\\")?(\\.\\/)(.*\\2\\))/g;\n+\n+module.exports = function (source, map) {\n+  const handledResourceFolder = path.dirname(this._module.resource);\n+  const logger = this.getLogger(\"theme-loader\");\n+\n+  // Collect groups [url(] [ |'|\"]optional './' and end of url\n+  source = source.replace(urlMatcher, function (match, url, quoteMark, replace, endString) {\n+    // for some reason this matcher can not be reused as a constant", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4MTExNA=="}, "originalCommit": {"oid": "cb7d2d50f91fc64c5bb9e458a84af10e40846215"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODYyOTk5OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoxNDozN1rOH3PLGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDo1NTo1OFrOH4ITXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4MjMzMA==", "bodyText": "Lets add another test which verifies that `url(\"../icons/icon.png\"); or similar works", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r527682330", "createdAt": "2020-11-20T13:14:37Z", "author": {"login": "pleku"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,9 +1,9 @@\n @font-face {\n     font-family: \"Ostrich\";\n-    src: url(\"theme/app-theme/font/ostrich-sans-regular.ttf\") format(\"TrueType\");\n+    src: url(\"./font/ostrich-sans-regular.ttf\") format(\"TrueType\");\n }\n \n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb7d2d50f91fc64c5bb9e458a84af10e40846215"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ4Mjk5Ng==", "bodyText": "Here we have a small problem in that we won't accept static serving for anything that contains ../\nWhat we could do would be to accept navigation inside the theme folder and rewrite those to be absolute to the file target so we wouldn't have ../ e.g. ../icons/icon.png  would fail from /app-theme/global.css, but would be rewritten to icons/icon.png in app-theme/sub/extras.css", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528482996", "createdAt": "2020-11-23T05:53:27Z", "author": {"login": "caalador"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,9 +1,9 @@\n @font-face {\n     font-family: \"Ostrich\";\n-    src: url(\"theme/app-theme/font/ostrich-sans-regular.ttf\") format(\"TrueType\");\n+    src: url(\"./font/ostrich-sans-regular.ttf\") format(\"TrueType\");\n }\n \n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4MjMzMA=="}, "originalCommit": {"oid": "cb7d2d50f91fc64c5bb9e458a84af10e40846215"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NDYyOQ==", "bodyText": "Another option could be to use a magic URL thingy there like theme:// but not sure if it should resolve to\n\nto the theme/ folder\nto the currently active theme\nUsually it should resolve to 2) but in some cases when you're creating a reusable theme it should refer to the parent theme and not the currently active theme ... so probably this is just unnecessary complication and thus a bad idea.\n\nI think using e.g. ../icons/icon.png is common so if we can just automatically handle it, lets go with that.\nFor Java code, we'll expect people to anyway use the full path \"frontend/theme/my-theme/icons/icon.png\".\nOne thing to note, even though it is not directly part of this issue, that the npm-based imports it is supposed to work with:\n\"foobar/images/image.png\" when the package has been declared to be imported in theme.json. These URLs should not be touched even though they are not \"external\".", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528544629", "createdAt": "2020-11-23T08:50:11Z", "author": {"login": "pleku"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,9 +1,9 @@\n @font-face {\n     font-family: \"Ostrich\";\n-    src: url(\"theme/app-theme/font/ostrich-sans-regular.ttf\") format(\"TrueType\");\n+    src: url(\"./font/ostrich-sans-regular.ttf\") format(\"TrueType\");\n }\n \n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4MjMzMA=="}, "originalCommit": {"oid": "cb7d2d50f91fc64c5bb9e458a84af10e40846215"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxODMzNA==", "bodyText": "in the format \"foobar/images/image.png\" they won't be touched. Only ./is handled.", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528618334", "createdAt": "2020-11-23T10:55:58Z", "author": {"login": "caalador"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/global.css", "diffHunk": "@@ -1,9 +1,9 @@\n @font-face {\n     font-family: \"Ostrich\";\n-    src: url(\"theme/app-theme/font/ostrich-sans-regular.ttf\") format(\"TrueType\");\n+    src: url(\"./font/ostrich-sans-regular.ttf\") format(\"TrueType\");\n }\n \n body {\n-    background-image: url('theme/app-theme/img/bg.jpg');\n+    background-image: url(\"./img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4MjMzMA=="}, "originalCommit": {"oid": "cb7d2d50f91fc64c5bb9e458a84af10e40846215"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTYwNDQ3OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-themes/frontend/theme/app-theme/sub-css/sub.css", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo0NDoxNFrOH4L3Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzowODo0NFrOH4Mtfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3NjcwNg==", "bodyText": "As looking at url(...) examples from MDN, it has\nlist-style-image: url('../images/bullet.jpg');\nso I think we should be able to have the same, ../ is less things to type than ./../.", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528676706", "createdAt": "2020-11-23T12:44:14Z", "author": {"login": "pleku"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/sub-css/sub.css", "diffHunk": "@@ -0,0 +1,6 @@\n+#sub-component {\n+    background: url('./../icons/archive.png') left top;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e63eb7c5408f09431f4d4c03f7fa00b19cbe725"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY5MDU1OQ==", "bodyText": "done", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528690559", "createdAt": "2020-11-23T13:08:44Z", "author": {"login": "caalador"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/sub-css/sub.css", "diffHunk": "@@ -0,0 +1,6 @@\n+#sub-component {\n+    background: url('./../icons/archive.png') left top;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3NjcwNg=="}, "originalCommit": {"oid": "7e63eb7c5408f09431f4d4c03f7fa00b19cbe725"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTYwOTc1OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/plugins/theme-loader/theme-loader.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo0NTozNFrOH4L6lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzowNzo0OFrOH4Mrjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3NzUyNA==", "bodyText": "So this IMO should handle ../ too and not just ./", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528677524", "createdAt": "2020-11-23T12:45:34Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/resources/plugins/theme-loader/theme-loader.js", "diffHunk": "@@ -1,23 +1,34 @@\n+const loaderUtils = require(\"loader-utils\");\n const fs = require('fs');\n const path = require('path');\n \n-const urlMatcher = /(url\\()(\\'|\\\")?(\\.\\/)(.*\\2\\))/g;\n+// Collect groups [url(] [ |'|\"]optional './', file part and end of url\n+const urlMatcher = /(url\\()(\\'|\\\")?(\\.\\/)(\\S*)(\\2\\))/g;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e63eb7c5408f09431f4d4c03f7fa00b19cbe725"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY5MDA2Mw==", "bodyText": "Added now with more \\ and /", "url": "https://github.com/vaadin/flow/pull/9451#discussion_r528690063", "createdAt": "2020-11-23T13:07:48Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/resources/plugins/theme-loader/theme-loader.js", "diffHunk": "@@ -1,23 +1,34 @@\n+const loaderUtils = require(\"loader-utils\");\n const fs = require('fs');\n const path = require('path');\n \n-const urlMatcher = /(url\\()(\\'|\\\")?(\\.\\/)(.*\\2\\))/g;\n+// Collect groups [url(] [ |'|\"]optional './', file part and end of url\n+const urlMatcher = /(url\\()(\\'|\\\")?(\\.\\/)(\\S*)(\\2\\))/g;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3NzUyNA=="}, "originalCommit": {"oid": "7e63eb7c5408f09431f4d4c03f7fa00b19cbe725"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2804, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}