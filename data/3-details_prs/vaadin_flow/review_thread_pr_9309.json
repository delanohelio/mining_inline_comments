{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1Mjk4NzI5", "number": 9309, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo0MjowNVrOE1jVoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzo0MjowOFrOE3GOLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTg4OTYxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo0MjowNVrOHt4vCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo0MjowNVrOHt4vCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg3NzUxNA==", "bodyText": "createWebpackUpdater is run by setup so not needed to run explicitly unless creating a new PwaConfiguration in the test.", "url": "https://github.com/vaadin/flow/pull/9309#discussion_r517877514", "createdAt": "2020-11-05T08:42:05Z", "author": {"login": "joheriks"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java", "diffHunk": "@@ -263,6 +263,37 @@ public void should_setPwaEnabledTrue_when_Pwa()\n                         .contains(\"const pwaEnabled = true;\"));\n     }\n \n+    @Test\n+    public void should_Not_generateServiceworkerFile_when_noPwa(){\n+        pwaConfiguration = new PwaConfiguration();\n+        createWebpackUpdater();\n+        webpackUpdater.execute();\n+\n+        File serviceWorkerFile = new File(frontendFolder,\n+                SERVICE_WORKER_SRC);\n+        Assert.assertFalse(serviceWorkerFile.exists());\n+    }\n+\n+    @Test\n+    public void should_generateServiceworkerFile_when_pwa(){\n+        createWebpackUpdater();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d6cd06b374f911b8d10fd18e7c53198e384973c"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTg5MDE4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo0MjoxM1rOHt4vXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo0MjoxM1rOHt4vXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg3NzU5OQ==", "bodyText": "createWebpackUpdater is run by setup so not needed to run explicitly unless creating a new PwaConfiguration in the test.", "url": "https://github.com/vaadin/flow/pull/9309#discussion_r517877599", "createdAt": "2020-11-05T08:42:13Z", "author": {"login": "joheriks"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java", "diffHunk": "@@ -263,6 +263,37 @@ public void should_setPwaEnabledTrue_when_Pwa()\n                         .contains(\"const pwaEnabled = true;\"));\n     }\n \n+    @Test\n+    public void should_Not_generateServiceworkerFile_when_noPwa(){\n+        pwaConfiguration = new PwaConfiguration();\n+        createWebpackUpdater();\n+        webpackUpdater.execute();\n+\n+        File serviceWorkerFile = new File(frontendFolder,\n+                SERVICE_WORKER_SRC);\n+        Assert.assertFalse(serviceWorkerFile.exists());\n+    }\n+\n+    @Test\n+    public void should_generateServiceworkerFile_when_pwa(){\n+        createWebpackUpdater();\n+        webpackUpdater.execute();\n+\n+        File serviceWorkerFile = new File(frontendFolder,\n+                SERVICE_WORKER_SRC);\n+        Assert.assertTrue(serviceWorkerFile.exists());\n+    }\n+\n+    @Test\n+    public void should_Not_generateServiceworkerFile_inProjectRootFoler_when_pwa(){\n+        createWebpackUpdater();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d6cd06b374f911b8d10fd18e7c53198e384973c"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjA5MDcxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzo0MjowOFrOHwPpFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODoxOTozMVrOHwQ08w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0OTk3NA==", "bodyText": "Would perhaps make sense to extract this duplicate logic into a private method, e.g. addServiceWorkerTask(Builder bilder, FrontendDependencies frontendDependencies).", "url": "https://github.com/vaadin/flow/pull/9309#discussion_r520349974", "createdAt": "2020-11-10T07:42:08Z", "author": {"login": "joheriks"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java", "diffHunk": "@@ -619,6 +623,13 @@ private void addBootstrapTasks(Builder builder) {\n         TaskGenerateTsDefinitions taskGenerateTsDefinitions = new TaskGenerateTsDefinitions(\n                 builder.npmFolder);\n         commands.add(taskGenerateTsDefinitions);\n+\n+        if (frontendDependencies != null) {\n+            PwaConfiguration pwaConfiguration = frontendDependencies.getPwaConfiguration();\n+            if (pwaConfiguration.isEnabled()) {\n+                commands.add(new TaskGenerateServiceWorker(builder.frontendDirectory, outputDirectory));\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32eabe9545f49f5d220c1628c12691f5de7a17fb"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM2OTM5NQ==", "bodyText": "Removed the other code block which should've been deleted.", "url": "https://github.com/vaadin/flow/pull/9309#discussion_r520369395", "createdAt": "2020-11-10T08:19:31Z", "author": {"login": "haijian-vaadin"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java", "diffHunk": "@@ -619,6 +623,13 @@ private void addBootstrapTasks(Builder builder) {\n         TaskGenerateTsDefinitions taskGenerateTsDefinitions = new TaskGenerateTsDefinitions(\n                 builder.npmFolder);\n         commands.add(taskGenerateTsDefinitions);\n+\n+        if (frontendDependencies != null) {\n+            PwaConfiguration pwaConfiguration = frontendDependencies.getPwaConfiguration();\n+            if (pwaConfiguration.isEnabled()) {\n+                commands.add(new TaskGenerateServiceWorker(builder.frontendDirectory, outputDirectory));\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0OTk3NA=="}, "originalCommit": {"oid": "32eabe9545f49f5d220c1628c12691f5de7a17fb"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2983, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}