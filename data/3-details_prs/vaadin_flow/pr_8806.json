{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMDEyOTQ0", "number": 8806, "title": "Add client-side authentication features", "bodyText": "", "createdAt": "2020-08-03T07:50:11Z", "url": "https://github.com/vaadin/flow/pull/8806", "merged": true, "mergeCommit": {"oid": "5083324587d38041ede058703a249424bca2d47e"}, "closed": true, "closedAt": "2020-08-07T09:41:42Z", "author": {"login": "haijian-vaadin"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5681BAH2gAyNDYyMDEyOTQ0OjUyMTA1YjI3YmIzZmViZDhjM2I4ZmYyZTc3MjkzZmQ5NzMxZWJkZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8gSEPAFqTQ2MzEzNjA2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "52105b27bb3febd8c3b8ff2e77293fd9731ebdfe", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/52105b27bb3febd8c3b8ff2e77293fd9731ebdfe", "committedDate": "2020-07-30T08:00:42Z", "message": "add login method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7f64d4d97814c0a9b9e9c8b387afec41e1d9160", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/c7f64d4d97814c0a9b9e9c8b387afec41e1d9160", "committedDate": "2020-07-30T10:29:58Z", "message": "export login as function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9f26772a71d177821777c58d998c8f3ac575ad8", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/f9f26772a71d177821777c58d998c8f3ac575ad8", "committedDate": "2020-08-03T08:19:16Z", "message": "add logout function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3bae48ccd8b828ad763988c1b57a90920727ffb", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/f3bae48ccd8b828ad763988c1b57a90920727ffb", "committedDate": "2020-08-03T08:36:59Z", "message": "remove unneccesary default connect  prefix config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9850b8665ece5cfe24e3002653e1fef5d96490c", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/f9850b8665ece5cfe24e3002653e1fef5d96490c", "committedDate": "2020-08-03T10:33:09Z", "message": "fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5ee1142a064d8b69d0eb5457485ce8e17ac38a2", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/a5ee1142a064d8b69d0eb5457485ce8e17ac38a2", "committedDate": "2020-08-03T11:02:49Z", "message": "Revert \"remove unneccesary default connect  prefix config\"\n\nThis reverts commit f3bae48ccd8b828ad763988c1b57a90920727ffb."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c8670cbd15153a3c276d5ce7c28c770e4eff0ca", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/7c8670cbd15153a3c276d5ce7c28c770e4eff0ca", "committedDate": "2020-08-03T11:11:07Z", "message": "revert the default connect prefix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f4e66f9b792b8d6c729b145bc5d14657739a96f", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/3f4e66f9b792b8d6c729b145bc5d14657739a96f", "committedDate": "2020-08-03T12:24:08Z", "message": "add tests for login"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ecf52ffd0d0cc44739532e08faf4b30e1534997", "author": {"user": {"login": "Haprog", "name": "Kari S\u00f6derholm"}}, "url": "https://github.com/vaadin/flow/commit/9ecf52ffd0d0cc44739532e08faf4b30e1534997", "committedDate": "2020-08-03T18:04:32Z", "message": "fix login tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8de3f311cb5b32cbbad6baf6b6fbd4a305f0de7b", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/8de3f311cb5b32cbbad6baf6b6fbd4a305f0de7b", "committedDate": "2020-08-04T10:29:17Z", "message": "add tests for invalid session callback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjc3MjA2", "url": "https://github.com/vaadin/flow/pull/8806#pullrequestreview-460677206", "createdAt": "2020-08-04T10:09:17Z", "commit": {"oid": "9ecf52ffd0d0cc44739532e08faf4b30e1534997"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDowOToxN1rOG7Z-sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozMjoyNFrOG7aqng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk0NDgxOQ==", "bodyText": "Why export const login instead of export async function login?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            export const login = async (username: string, password: string): Promise<LoginResult> => {\n          \n          \n            \n            export async function login(username: string, password: string): Promise<LoginResult> {", "url": "https://github.com/vaadin/flow/pull/8806#discussion_r464944819", "createdAt": "2020-08-04T10:09:17Z", "author": {"login": "Haprog"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/Connect.ts", "diffHunk": "@@ -369,3 +369,93 @@ export class ConnectClient {\n     }\n   }\n }\n+\n+export interface LoginResult {\n+  token?: string;\n+  error: boolean;\n+  errorTitle: string;\n+  errorMessage: string;\n+}\n+\n+export const login = async (username: string, password: string): Promise<LoginResult> => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecf52ffd0d0cc44739532e08faf4b30e1534997"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk0NzY0Mw==", "bodyText": "I think this is ok for a first version so not a blocker, but this catching could be improved to check for some type of errors (like specifically network errors) so we could give a bit more meaningful error messages (different message for actual network errors and different for other errors that may be caused by bugs in our logic. Maybe wrap only smaller parts of the code in try/catch block.\nNow this always results in \"Communication error\" even if there's a bug in the try block that throws for other reason like  trying to access properties in undefined objects.", "url": "https://github.com/vaadin/flow/pull/8806#discussion_r464947643", "createdAt": "2020-08-04T10:15:07Z", "author": {"login": "Haprog"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/Connect.ts", "diffHunk": "@@ -369,3 +369,93 @@ export class ConnectClient {\n     }\n   }\n }\n+\n+export interface LoginResult {\n+  token?: string;\n+  error: boolean;\n+  errorTitle: string;\n+  errorMessage: string;\n+}\n+\n+export const login = async (username: string, password: string): Promise<LoginResult> => {\n+  let result;\n+  try {\n+    // this assumes the default Spring Security form login configuration (parameter names)\n+    const data = new FormData();\n+    data.append('username', username);\n+    data.append('password', password);\n+\n+    const response = await fetch('/login', {method: 'POST', body: data});\n+\n+    // this assumes the default Spring Security form login configuration (handler URL and responses)\n+    if (response.ok && response.redirected && response.url.endsWith('/login?error')) {\n+      result = {\n+        error: true,\n+        errorTitle: 'Incorrect username or password.',\n+        errorMessage: 'Check that you have entered the correct username and password and try again.'\n+      };\n+    } else if (response.ok && response.redirected && response.url.endsWith('/')) {\n+      // TODO: find a more efficient way to get a new CSRF token\n+      // parsing the full response body just to get a token may be wasteful\n+      const token = getCsrfTokenFromResponseBody(await response.text());\n+      if (token) {\n+        (window as any).Vaadin.TypeScript = (window as any).Vaadin.TypeScript || {};\n+        (window as any).Vaadin.TypeScript.csrfToken = token;\n+        result = {\n+          error: false,\n+          errorTitle: '',\n+          errorMessage: '',\n+          token\n+        };\n+      }\n+    }\n+  } catch (e) {\n+    // eat the exception\n+  }\n+\n+  return result || {\n+    error: true,\n+    errorTitle: 'Communication error.',\n+    errorMessage: 'Please check your network connection and try again.',\n+  };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecf52ffd0d0cc44739532e08faf4b30e1534997"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1NjA2Mg==", "bodyText": "I wonder if there should be some \"base URL\" prefix for this so it works even if the app is hosted in different directory? Or does Spring always have /login at the root? Or should this login path be configurable?", "url": "https://github.com/vaadin/flow/pull/8806#discussion_r464956062", "createdAt": "2020-08-04T10:32:24Z", "author": {"login": "Haprog"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/Connect.ts", "diffHunk": "@@ -369,3 +369,93 @@ export class ConnectClient {\n     }\n   }\n }\n+\n+export interface LoginResult {\n+  token?: string;\n+  error: boolean;\n+  errorTitle: string;\n+  errorMessage: string;\n+}\n+\n+export const login = async (username: string, password: string): Promise<LoginResult> => {\n+  let result;\n+  try {\n+    // this assumes the default Spring Security form login configuration (parameter names)\n+    const data = new FormData();\n+    data.append('username', username);\n+    data.append('password', password);\n+\n+    const response = await fetch('/login', {method: 'POST', body: data});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecf52ffd0d0cc44739532e08faf4b30e1534997"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93890bab03ed581bed3cccd486845a46010002a4", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/93890bab03ed581bed3cccd486845a46010002a4", "committedDate": "2020-08-04T11:28:47Z", "message": "apply code review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzQ4Nzcw", "url": "https://github.com/vaadin/flow/pull/8806#pullrequestreview-461348770", "createdAt": "2020-08-05T05:25:52Z", "commit": {"oid": "93890bab03ed581bed3cccd486845a46010002a4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToyNTo1MlrOG76sBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTozMTozOFrOG76y2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MDcxMA==", "bodyText": "Prefer to continue the convention that test descriptions are naturally readable like \"it should do [this] when [that]\" or so. So try to start with it('should ... or similar. For example in this case I'd maybe write something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  it('on invalid credential', async () => {\n          \n          \n            \n                  it('should return an error on invalid credentials', async () => {", "url": "https://github.com/vaadin/flow/pull/8806#discussion_r465480710", "createdAt": "2020-08-05T05:25:52Z", "author": {"login": "Haprog"}, "path": "flow-client/src/test/frontend/ConnectTests.ts", "diffHunk": "@@ -396,5 +395,111 @@ describe('ConnectClient', () => {\n         await client.call('FooEndpoint', 'fooMethod', {fooParam: 'foo'});\n       });\n     });\n+\n+    describe('login', () => {\n+      afterEach(() => fetchMock.restore());\n+\n+      it('on invalid credential', async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93890bab03ed581bed3cccd486845a46010002a4"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MTk2Ng==", "bodyText": "Suggestion for more natural description.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  it('on valid credential', async () => {\n          \n          \n            \n                  it('should return a CSRF token on valid credentials', async () => {\n          \n      \n    \n    \n  \n\n(btw I'm not 100% sure how this CSRF protection should work in our case. At least some Spring example I saw included the token in the login POST request already along with the username and password. Not sure if we should do it like that too? Now we're just expecting it back in the response, not sending it in the request)", "url": "https://github.com/vaadin/flow/pull/8806#discussion_r465481966", "createdAt": "2020-08-05T05:30:03Z", "author": {"login": "Haprog"}, "path": "flow-client/src/test/frontend/ConnectTests.ts", "diffHunk": "@@ -396,5 +395,111 @@ describe('ConnectClient', () => {\n         await client.call('FooEndpoint', 'fooMethod', {fooParam: 'foo'});\n       });\n     });\n+\n+    describe('login', () => {\n+      afterEach(() => fetchMock.restore());\n+\n+      it('on invalid credential', async () => {\n+        fetchMock.post('/login', { redirectUrl: '/login?error' });\n+        const result = await login('invalid-username', 'invalid-password');\n+        const expectedResult = {\n+          error: true,\n+          errorTitle: 'Incorrect username or password.',\n+          errorMessage: 'Check that you have entered the correct username and password and try again.'\n+        };\n+\n+        expect(fetchMock.calls()).to.have.lengthOf(1);\n+        expect(result).to.deep.equal(expectedResult);\n+      })\n+\n+      it('on valid credential', async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93890bab03ed581bed3cccd486845a46010002a4"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MjQ1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  it('on other erros', async () => {\n          \n          \n            \n                  it('should return an error on other unexpected responses', async () => {", "url": "https://github.com/vaadin/flow/pull/8806#discussion_r465482457", "createdAt": "2020-08-05T05:31:38Z", "author": {"login": "Haprog"}, "path": "flow-client/src/test/frontend/ConnectTests.ts", "diffHunk": "@@ -396,5 +395,111 @@ describe('ConnectClient', () => {\n         await client.call('FooEndpoint', 'fooMethod', {fooParam: 'foo'});\n       });\n     });\n+\n+    describe('login', () => {\n+      afterEach(() => fetchMock.restore());\n+\n+      it('on invalid credential', async () => {\n+        fetchMock.post('/login', { redirectUrl: '/login?error' });\n+        const result = await login('invalid-username', 'invalid-password');\n+        const expectedResult = {\n+          error: true,\n+          errorTitle: 'Incorrect username or password.',\n+          errorMessage: 'Check that you have entered the correct username and password and try again.'\n+        };\n+\n+        expect(fetchMock.calls()).to.have.lengthOf(1);\n+        expect(result).to.deep.equal(expectedResult);\n+      })\n+\n+      it('on valid credential', async () => {\n+        fetchMock.post('/login', {\n+          body: 'window.Vaadin = {TypeScript: {\"csrfToken\":\"6a60700e-852b-420f-a126-a1c61b73d1ba\"}};',\n+          redirectUrl: '/'\n+        });\n+        const result = await login('valid-username', 'valid-password');\n+        const expectedResult = {\n+          error: false,\n+          errorTitle: '',\n+          errorMessage: '',\n+          token: '6a60700e-852b-420f-a126-a1c61b73d1ba'\n+        };\n+\n+        expect(fetchMock.calls()).to.have.lengthOf(1);\n+        expect(result).to.deep.equal(expectedResult);\n+      })\n+\n+      it('on other erros', async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93890bab03ed581bed3cccd486845a46010002a4"}, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "774d7b2635f4d6cb6726b4b20bf6ec99f182be18", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/774d7b2635f4d6cb6726b4b20bf6ec99f182be18", "committedDate": "2020-08-06T13:56:56Z", "message": "apply code review sugguestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71cb0a64d6207c45ebb2a3cefc80039a11732ac0", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/71cb0a64d6207c45ebb2a3cefc80039a11732ac0", "committedDate": "2020-08-06T13:57:18Z", "message": "Merge branch 'master' into haijian/auth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5db5e87df2cf4f20dfef957aca06a11dd96b915", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/b5db5e87df2cf4f20dfef957aca06a11dd96b915", "committedDate": "2020-08-06T14:27:18Z", "message": "fix compile error in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMDcxNTM5", "url": "https://github.com/vaadin/flow/pull/8806#pullrequestreview-463071539", "createdAt": "2020-08-07T06:46:07Z", "commit": {"oid": "b5db5e87df2cf4f20dfef957aca06a11dd96b915"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjo0NjowOFrOG9ObkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjo0NjoyNFrOG9Ob-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg1Mjc1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * It takes a <code>EndpointCallContinue</code> paramter, which can be \n          \n          \n            \n             * It takes an <code>EndpointCallContinue</code> parameter, which can be", "url": "https://github.com/vaadin/flow/pull/8806#discussion_r466852753", "createdAt": "2020-08-07T06:46:08Z", "author": {"login": "Haprog"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/Connect.ts", "diffHunk": "@@ -439,27 +465,38 @@ const getCsrfTokenFromResponseBody = (body: string): string | undefined => {\n   return match ? match[1] : undefined;\n }\n \n-export type EndpointCallContinue = (token: string) => void;\n+type EndpointCallContinue = (token: string) => void;\n+\n+/**\n+ * It defines what to do when it detects a session is invalid. E.g., \n+ * show a login view.\n+ * It takes a <code>EndpointCallContinue</code> paramter, which can be ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5db5e87df2cf4f20dfef957aca06a11dd96b915"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg1Mjg1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * used to continune the endpoint call.  \n          \n          \n            \n             * used to continue the endpoint call.", "url": "https://github.com/vaadin/flow/pull/8806#discussion_r466852856", "createdAt": "2020-08-07T06:46:24Z", "author": {"login": "Haprog"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/Connect.ts", "diffHunk": "@@ -439,27 +465,38 @@ const getCsrfTokenFromResponseBody = (body: string): string | undefined => {\n   return match ? match[1] : undefined;\n }\n \n-export type EndpointCallContinue = (token: string) => void;\n+type EndpointCallContinue = (token: string) => void;\n+\n+/**\n+ * It defines what to do when it detects a session is invalid. E.g., \n+ * show a login view.\n+ * It takes a <code>EndpointCallContinue</code> paramter, which can be \n+ * used to continune the endpoint call.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5db5e87df2cf4f20dfef957aca06a11dd96b915"}, "originalPosition": 111}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3292139571f88518a4f7d71e4f31ae87c31b99c3", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/3292139571f88518a4f7d71e4f31ae87c31b99c3", "committedDate": "2020-08-07T07:59:19Z", "message": "apply code review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMTE4ODcx", "url": "https://github.com/vaadin/flow/pull/8806#pullrequestreview-463118871", "createdAt": "2020-08-07T08:11:43Z", "commit": {"oid": "3292139571f88518a4f7d71e4f31ae87c31b99c3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwODoxMTo0M1rOG9QvmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwODoxMzo1NFrOG9Qzdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5MDY0OQ==", "bodyText": "I think this also needs to be exported still. Otherwise users can't do class MyMiddleware implements MiddlewareClass, right?", "url": "https://github.com/vaadin/flow/pull/8806#discussion_r466890649", "createdAt": "2020-08-07T08:11:43Z", "author": {"login": "Haprog"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/Connect.ts", "diffHunk": "@@ -207,18 +207,29 @@ export interface MiddlewareContext {\n export type MiddlewareNext = (context: MiddlewareContext) =>\n   Promise<Response> | Response;\n \n-/**\n- * An async callback function that can intercept the request and response\n- * of a call.\n- */\n-export interface Middleware {\n+\n+\n+interface MiddlewareClass {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3292139571f88518a4f7d71e4f31ae87c31b99c3"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5MTYzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            export class InvalidSessionMiddleWare implements MiddlewareClass {\n          \n          \n            \n            export class InvalidSessionMiddleware implements MiddlewareClass {\n          \n      \n    \n    \n  \n\nI just noticed this is the only place where middleware is written like MiddleWare, in all other places it's Middleware.", "url": "https://github.com/vaadin/flow/pull/8806#discussion_r466891639", "createdAt": "2020-08-07T08:13:54Z", "author": {"login": "Haprog"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/Connect.ts", "diffHunk": "@@ -480,10 +497,10 @@ export type OnInvalidSessionCallback = (continueFunc: EndpointCallContinue) => v\n  * E.g., you can use this to show user a login page when the session has expired.\n  * Use <code>InvalidSessionMiddleWare.create()</code> to create the middleware.\n  */\n-export class InvalidSessionMiddleWare implements Middleware {\n+export class InvalidSessionMiddleWare implements MiddlewareClass {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3292139571f88518a4f7d71e4f31ae87c31b99c3"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d6dd724fd80b9269794467bdd5836d2c921368b", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/7d6dd724fd80b9269794467bdd5836d2c921368b", "committedDate": "2020-08-07T08:25:20Z", "message": "export MiddlewareClass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59626ef4c9c71f57809a7e0c21be031a2d927912", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/59626ef4c9c71f57809a7e0c21be031a2d927912", "committedDate": "2020-08-07T08:28:54Z", "message": "correct typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b581ab4cc361425ccfb3565caed2162dfe6a974", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/4b581ab4cc361425ccfb3565caed2162dfe6a974", "committedDate": "2020-08-07T08:36:54Z", "message": "fix tests after renaming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMTM2MDYy", "url": "https://github.com/vaadin/flow/pull/8806#pullrequestreview-463136062", "createdAt": "2020-08-07T08:38:14Z", "commit": {"oid": "4b581ab4cc361425ccfb3565caed2162dfe6a974"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 55, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}