{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMTM0NTk4", "number": 9699, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMjoyMjoyN1rOFHpImA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wMlQwODowNzo1OFrOFgO1EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTU4Mjk2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/StreamResourceHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMjoyMjoyN1rOIJKX3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMjoyMjoyN1rOIJKX3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ3ODA0Nw==", "bodyText": "Remove this unused import 'javax.servlet.ServletRequestWrapper'.", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r546478047", "createdAt": "2020-12-21T02:22:27Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/StreamResourceHandler.java", "diffHunk": "@@ -16,6 +16,8 @@\n package com.vaadin.flow.server.communication;\n \n import javax.servlet.ServletContext;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletRequestWrapper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4803667113cbc1848152f170d75af346c285e2ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5MTY4NzUxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwNzowMTo0N1rOIflT4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwODoxNjowNlrOIfndkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODA2NA==", "bodyText": "Since this is VaadinServlet it means that there should be a servlet. I don't see a point in doing any changes for this class for \"no servlet present\". Why are there changes done here ?", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569988064", "createdAt": "2021-02-04T07:01:47Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -51,7 +51,7 @@\n  * @since 1.0\n  */\n public class VaadinServlet extends HttpServlet {\n-    private VaadinServletService servletService;\n+    private VaadinService servletService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDAyMzMxNA==", "bodyText": "I do not use the VaadinServletService i am using my own VaadinServic.If I want to use your VaadinServlet.class i have no way to do this because it must be your VaadinServletService.\nBut you are not using any methods of VaadinServletService because VaadinService is enough.", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570023314", "createdAt": "2021-02-04T08:16:06Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -51,7 +51,7 @@\n  * @since 1.0\n  */\n public class VaadinServlet extends HttpServlet {\n-    private VaadinServletService servletService;\n+    private VaadinService servletService;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODA2NA=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5MTY4OTYyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServletRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwNzowMjo0MFrOIflVFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwODoxODowNFrOIfniFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODM3NQ==", "bodyText": "This is a servlet request, so why shouldn't it have access to servlet service ?", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569988375", "createdAt": "2021-02-04T07:02:40Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServletRequest.java", "diffHunk": "@@ -32,7 +32,7 @@\n public class VaadinServletRequest extends HttpServletRequestWrapper\n         implements VaadinRequest {\n \n-    private final VaadinServletService vaadinService;\n+    private final VaadinService vaadinService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDAyNDQ3MQ==", "bodyText": "because then you cant use it with other VasdinService Implementations then yours", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570024471", "createdAt": "2021-02-04T08:18:04Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServletRequest.java", "diffHunk": "@@ -32,7 +32,7 @@\n public class VaadinServletRequest extends HttpServletRequestWrapper\n         implements VaadinRequest {\n \n-    private final VaadinServletService vaadinService;\n+    private final VaadinService vaadinService;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODM3NQ=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5MTY5MTcwOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServletService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwNzowMzo0MVrOIflWeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwODo0NjoxMlrOIfokOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODcyOQ==", "bodyText": "Again, servlet based class and these changes seem like a waste of time, or why would these be needed ?", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569988729", "createdAt": "2021-02-04T07:03:41Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServletService.java", "diffHunk": "@@ -285,14 +285,14 @@ private InputStream getResourceInServletContextAsStream(String path) {\n \n     @Override\n     public String getContextRootRelativePath(VaadinRequest request) {\n-        assert request instanceof VaadinServletRequest;\n+        assert request instanceof HttpServletRequest;\n         // Generate location from the request by finding how many \"../\" should\n         // be added to the servlet path before we get to the context root\n \n         // Should not take pathinfo into account because the base URI refers to\n         // the servlet path\n \n-        String servletPath = ((VaadinServletRequest) request).getServletPath();\n+        String servletPath = ((HttpServletRequest) request).getServletPath();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTQwMg==", "bodyText": "I fixed the description.\nhere it is just a cleanup because you do not need a VaadinServletRequest. The HttpServletRequestWrapper is enough to .getServletPath(). And others that do not use the VaadinServletRequestwill not end with a ClassCastException", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041402", "createdAt": "2021-02-04T08:46:12Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServletService.java", "diffHunk": "@@ -285,14 +285,14 @@ private InputStream getResourceInServletContextAsStream(String path) {\n \n     @Override\n     public String getContextRootRelativePath(VaadinRequest request) {\n-        assert request instanceof VaadinServletRequest;\n+        assert request instanceof HttpServletRequest;\n         // Generate location from the request by finding how many \"../\" should\n         // be added to the servlet path before we get to the context root\n \n         // Should not take pathinfo into account because the base URI refers to\n         // the servlet path\n \n-        String servletPath = ((VaadinServletRequest) request).getServletPath();\n+        String servletPath = ((HttpServletRequest) request).getServletPath();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODcyOQ=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5MTY5NzQ3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwNzowNTo1OVrOIflZ-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwODo0NjoxN1rOIfokeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTYyNg==", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989626", "createdAt": "2021-02-04T07:05:59Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -239,7 +255,7 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             return false;\n         }\n \n-        if (request instanceof VaadinServletRequest) {\n+        if (request instanceof HttpServletRequest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTQ2Ng==", "bodyText": "I fixed the description.\nwhen it is a HttpServletRequest but not a VaadinServletRequest", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041466", "createdAt": "2021-02-04T08:46:17Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -239,7 +255,7 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             return false;\n         }\n \n-        if (request instanceof VaadinServletRequest) {\n+        if (request instanceof HttpServletRequest) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTYyNg=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5MTY5NzcyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwNzowNjowM1rOIflaHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwODo1MjowNVrOIfozNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTY2Mw==", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989663", "createdAt": "2021-02-04T07:06:03Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -248,16 +264,16 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             try {\n                 atmosphere.doCometSupport(\n                         AtmosphereRequestImpl\n-                                .wrap((VaadinServletRequest) request),\n+                                .wrap((HttpServletRequest) request),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0NTIzNw==", "bodyText": "when it is a HttpServletRequest but not a VaadinServletRequest", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570045237", "createdAt": "2021-02-04T08:52:05Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -248,16 +264,16 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             try {\n                 atmosphere.doCometSupport(\n                         AtmosphereRequestImpl\n-                                .wrap((VaadinServletRequest) request),\n+                                .wrap((HttpServletRequest) request),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTY2Mw=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5MTY5Nzg5OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwNzowNjowOFrOIflaOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwODo0NjoyNFrOIfokzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTY4OQ==", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989689", "createdAt": "2021-02-04T07:06:08Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -248,16 +264,16 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             try {\n                 atmosphere.doCometSupport(\n                         AtmosphereRequestImpl\n-                                .wrap((VaadinServletRequest) request),\n+                                .wrap((HttpServletRequest) request),\n                         AtmosphereResponseImpl\n-                                .wrap((VaadinServletResponse) response));\n+                                .wrap((HttpServletResponse) response));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTU1MQ==", "bodyText": "I fixed the description.", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041551", "createdAt": "2021-02-04T08:46:24Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -248,16 +264,16 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             try {\n                 atmosphere.doCometSupport(\n                         AtmosphereRequestImpl\n-                                .wrap((VaadinServletRequest) request),\n+                                .wrap((HttpServletRequest) request),\n                         AtmosphereResponseImpl\n-                                .wrap((VaadinServletResponse) response));\n+                                .wrap((HttpServletResponse) response));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTY4OQ=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5MTY5ODMwOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwNzowNjoxNFrOIflabw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwODo0NjozMlrOIfolHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTc0Mw==", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989743", "createdAt": "2021-02-04T07:06:14Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -248,16 +264,16 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             try {\n                 atmosphere.doCometSupport(\n                         AtmosphereRequestImpl\n-                                .wrap((VaadinServletRequest) request),\n+                                .wrap((HttpServletRequest) request),\n                         AtmosphereResponseImpl\n-                                .wrap((VaadinServletResponse) response));\n+                                .wrap((HttpServletResponse) response));\n             } catch (ServletException e) {\n                 // TODO PUSH decide how to handle\n                 throw new RuntimeException(e);\n             }\n         } else {\n             throw new IllegalArgumentException(\n-                    \"Only VaadinServletRequests are supported\");\n+                    \"Only HttpServletRequest are supported\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTYyOA==", "bodyText": "I fixed the description.", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041628", "createdAt": "2021-02-04T08:46:32Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -248,16 +264,16 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             try {\n                 atmosphere.doCometSupport(\n                         AtmosphereRequestImpl\n-                                .wrap((VaadinServletRequest) request),\n+                                .wrap((HttpServletRequest) request),\n                         AtmosphereResponseImpl\n-                                .wrap((VaadinServletResponse) response));\n+                                .wrap((HttpServletResponse) response));\n             } catch (ServletException e) {\n                 // TODO PUSH decide how to handle\n                 throw new RuntimeException(e);\n             }\n         } else {\n             throw new IllegalArgumentException(\n-                    \"Only VaadinServletRequests are supported\");\n+                    \"Only HttpServletRequest are supported\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTc0Mw=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5MTY5ODg1OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/StreamResourceHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwNzowNjoyOFrOIflaxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwODo0NjozN1rOIfolRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTgzMQ==", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989831", "createdAt": "2021-02-04T07:06:28Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/StreamResourceHandler.java", "diffHunk": "@@ -60,7 +61,7 @@ public void handleRequest(VaadinSession session, VaadinRequest request,\n         StreamResourceWriter writer;\n         session.lock();\n         try {\n-            ServletContext context = ((VaadinServletRequest) request)\n+            ServletContext context = ((ServletRequest) request)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTY3MQ==", "bodyText": "here it is just a cleanup because you do not need a VaadinServletRequest. The ServletRequest is enough to get the Context. And others that do not use the VaadinServletRequestwill not end with a ClassCastException", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041671", "createdAt": "2021-02-04T08:46:37Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/StreamResourceHandler.java", "diffHunk": "@@ -60,7 +61,7 @@ public void handleRequest(VaadinSession session, VaadinRequest request,\n         StreamResourceWriter writer;\n         session.lock();\n         try {\n-            ServletContext context = ((VaadinServletRequest) request)\n+            ServletContext context = ((ServletRequest) request)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTgzMQ=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5MTY5OTIxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwNzowNjozOFrOIfla_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwODo0Njo0MlrOIfolkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTg4NA==", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989884", "createdAt": "2021-02-04T07:06:38Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java", "diffHunk": "@@ -136,7 +138,7 @@ protected boolean canHandleRequest(VaadinRequest request) {\n      * @return Request's url.\n      */\n     protected String getRequestUrl(VaadinRequest request) {\n-        return ((VaadinServletRequest) request).getRequestURL().toString();\n+        return ((HttpServletRequest) request).getRequestURL().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTc0NA==", "bodyText": "here it is just a cleanup because you do not need a VaadinServletRequest. The HttpServletRequestWrapper is enough to .getRequestURL(). And others that do not use the VaadinServletRequestwill not end with a ClassCastException", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041744", "createdAt": "2021-02-04T08:46:42Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java", "diffHunk": "@@ -136,7 +138,7 @@ protected boolean canHandleRequest(VaadinRequest request) {\n      * @return Request's url.\n      */\n     protected String getRequestUrl(VaadinRequest request) {\n-        return ((VaadinServletRequest) request).getRequestURL().toString();\n+        return ((HttpServletRequest) request).getRequestURL().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTg4NA=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5MTY5OTI4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwNzowNjo0MlrOIflbCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQwODo0OTowMFrOIforcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTg5Ng==", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989896", "createdAt": "2021-02-04T07:06:42Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java", "diffHunk": "@@ -434,7 +436,7 @@ protected String getServiceUrl(VaadinRequest request,\n         String url = request.getParameter(REQ_PARAM_URL);\n         // if 'url' parameter was not available, use request url\n         if (url == null) {\n-            url = ((VaadinServletRequest) request).getRequestURL().toString();\n+            url = ((HttpServletRequestWrapper) request).getRequestURL().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MzI1MQ==", "bodyText": "here it is just a cleanup because you do not need a VaadinServletRequest. The HttpServletRequestWrapper is enough to .getRequestURL(). And others that do not use the VaadinServletRequestwill not end with a ClassCastException", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570043251", "createdAt": "2021-02-04T08:49:00Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java", "diffHunk": "@@ -434,7 +436,7 @@ protected String getServiceUrl(VaadinRequest request,\n         String url = request.getParameter(REQ_PARAM_URL);\n         // if 'url' parameter was not available, use request url\n         if (url == null) {\n-            url = ((VaadinServletRequest) request).getRequestURL().toString();\n+            url = ((HttpServletRequestWrapper) request).getRequestURL().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTg5Ng=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYwNTEzMjAxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQxMTozNTo0MlrOIhevPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOVQxMjo1MTo0NVrOIiUg_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTk3NzUzMw==", "bodyText": "This change doesn't really make any sense as it is a private method and the type is regardless VaadinServletContext.", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r571977533", "createdAt": "2021-02-08T11:35:42Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -520,7 +520,7 @@ public void destroy() {\n         getService().destroy();\n     }\n \n-    private VaadinServletContext initializeContext() {\n+    private VaadinContext initializeContext() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjg1ODYyMg==", "bodyText": "sure. will change this back.", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r572858622", "createdAt": "2021-02-09T12:51:45Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -520,7 +520,7 @@ public void destroy() {\n         getService().destroy();\n     }\n \n-    private VaadinServletContext initializeContext() {\n+    private VaadinContext initializeContext() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTk3NzUzMw=="}, "originalCommit": {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY0NzE2NTIyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xOFQxMToxNzo0NFrOIniueQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wMlQwNzo0MzowOVrOIuNidA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODMzNDMyOQ==", "bodyText": "Overall I like the idea behind this PR, I just have a problem with the explicit downcast from VaadinServletResponse to HttpServletResponse with the upcoming jakarta namespace change in mind. Totally out of scope, just my 2 cents.", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r578334329", "createdAt": "2021-02-18T11:17:44Z", "author": {"login": "knoobie"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java", "diffHunk": "@@ -1706,9 +1706,10 @@ protected void handleSessionExpired(VaadinRequest request,\n             SystemMessages systemMessages = getSystemMessages(\n                     HandlerHelper.findLocale(null, request), request);\n             String sessionExpiredURL = systemMessages.getSessionExpiredURL();\n+\n             if (sessionExpiredURL != null\n-                    && (response instanceof VaadinServletResponse)) {\n-                ((VaadinServletResponse) response)\n+                    && (response instanceof HttpServletResponse)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4070f7c49e20cbfeddeb254787a5b5897e367f0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODMzODc0OQ==", "bodyText": "New interfaces that extends response and provides the Methods may be a way to solve this", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r578338749", "createdAt": "2021-02-18T11:24:46Z", "author": {"login": "stbischof"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java", "diffHunk": "@@ -1706,9 +1706,10 @@ protected void handleSessionExpired(VaadinRequest request,\n             SystemMessages systemMessages = getSystemMessages(\n                     HandlerHelper.findLocale(null, request), request);\n             String sessionExpiredURL = systemMessages.getSessionExpiredURL();\n+\n             if (sessionExpiredURL != null\n-                    && (response instanceof VaadinServletResponse)) {\n-                ((VaadinServletResponse) response)\n+                    && (response instanceof HttpServletResponse)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODMzNDMyOQ=="}, "originalCommit": {"oid": "c4070f7c49e20cbfeddeb254787a5b5897e367f0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTMyNzIyMA==", "bodyText": "Would it make sense now to keep the original cast as an alternative that will work most of the time ? Or does it require checking for the existence of the class somehow", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r585327220", "createdAt": "2021-03-02T07:43:09Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java", "diffHunk": "@@ -1706,9 +1706,10 @@ protected void handleSessionExpired(VaadinRequest request,\n             SystemMessages systemMessages = getSystemMessages(\n                     HandlerHelper.findLocale(null, request), request);\n             String sessionExpiredURL = systemMessages.getSessionExpiredURL();\n+\n             if (sessionExpiredURL != null\n-                    && (response instanceof VaadinServletResponse)) {\n-                ((VaadinServletResponse) response)\n+                    && (response instanceof HttpServletResponse)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODMzNDMyOQ=="}, "originalCommit": {"oid": "c4070f7c49e20cbfeddeb254787a5b5897e367f0"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3MjU5NTY2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNFQxODoyNTowMVrOIrOhRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNFQxODoyNTowMVrOIrOhRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjE5NzU3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (request instanceof HttpServletRequest&&((HttpServletRequest)request).getRequestedSessionId() == null) {\n          \n          \n            \n                        if (request instanceof HttpServletRequest && ((HttpServletRequest) request).getRequestedSessionId() == null) {\n          \n      \n    \n    \n  \n\n@stbischof This could help with your rebuild as well ;) and makes the code a little bit easier to read.", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r582197572", "createdAt": "2021-02-24T18:25:01Z", "author": {"login": "knoobie"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -457,13 +457,13 @@ public VaadinServletService getService() {\n      * @return false if cookies are disabled, true otherwise\n      * @throws IOException\n      */\n-    private boolean ensureCookiesEnabled(VaadinServletRequest request,\n-            VaadinServletResponse response) throws IOException {\n+    private boolean ensureCookiesEnabled(VaadinRequest request,\n+            VaadinResponse response) throws IOException {\n         if (HandlerHelper.isRequestType(request, RequestType.UIDL)) {\n             // In all other but the first UIDL request a cookie should be\n             // returned by the browser.\n             // This can be removed if cookieless mode (#3228) is supported\n-            if (request.getRequestedSessionId() == null) {\n+            if (request instanceof HttpServletRequest&&((HttpServletRequest)request).getRequestedSessionId() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4070f7c49e20cbfeddeb254787a5b5897e367f0"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3NTQ2OTE4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQwODo0OToyNVrOIrp9CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQwODo0OToyNVrOIrp9CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjY0NzA0OA==", "bodyText": "Remove use of this unsecured \"getRequestedSessionId()\" method", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r582647048", "createdAt": "2021-02-25T08:49:25Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -457,13 +457,13 @@ public VaadinServletService getService() {\n      * @return false if cookies are disabled, true otherwise\n      * @throws IOException\n      */\n-    private boolean ensureCookiesEnabled(VaadinServletRequest request,\n-            VaadinServletResponse response) throws IOException {\n+    private boolean ensureCookiesEnabled(VaadinRequest request,\n+            VaadinResponse response) throws IOException {\n         if (HandlerHelper.isRequestType(request, RequestType.UIDL)) {\n             // In all other but the first UIDL request a cookie should be\n             // returned by the browser.\n             // This can be removed if cookieless mode (#3228) is supported\n-            if (request.getRequestedSessionId() == null) {\n+            if (request instanceof HttpServletRequest && ((HttpServletRequest) request).getRequestedSessionId() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bf814261bd477995489588f7f50d1b3852b2bf4"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY5MzQxMTM5OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wMlQwODowNjozNFrOIuOT_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wMlQxNTowNzo1NVrOIug56w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTMzOTkwMw==", "bodyText": "non-blocking nit: typoed Vaadin here and c/p the error to other method names too ...", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r585339903", "createdAt": "2021-03-02T08:06:34Z", "author": {"login": "pleku"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.vaadin.flow.server;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.reflect.Method;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import com.vaadin.flow.server.communication.PushRequestHandler;\n+\n+public class OtherImplementationsTest {\n+    @Test\n+    public void StaticFileServer_Constructor_uses_VadinService()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "152aace6fb4aed57f307db28e3582edfc470d431"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTY0NDUyMw==", "bodyText": "changed into Vaadin", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r585644523", "createdAt": "2021-03-02T15:07:55Z", "author": {"login": "stbischof"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.vaadin.flow.server;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.reflect.Method;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import com.vaadin.flow.server.communication.PushRequestHandler;\n+\n+public class OtherImplementationsTest {\n+    @Test\n+    public void StaticFileServer_Constructor_uses_VadinService()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTMzOTkwMw=="}, "originalCommit": {"oid": "152aace6fb4aed57f307db28e3582edfc470d431"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY5MzQxNzEyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wMlQwODowNzo1OFrOIuOXYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wMlQxNTowNzowNFrOIug21A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTM0MDc2OA==", "bodyText": "I get the test, but at a glance probably most developers will not. Please change the name to CustomVaadinServiceImplementationTest and maybe add a comment line \"Makes sure that a custom vaadin service that is not vaadin servlet service can be used in when desired\".", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r585340768", "createdAt": "2021-03-02T08:07:58Z", "author": {"login": "pleku"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.vaadin.flow.server;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.reflect.Method;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import com.vaadin.flow.server.communication.PushRequestHandler;\n+\n+public class OtherImplementationsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "152aace6fb4aed57f307db28e3582edfc470d431"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTY0MzczMg==", "bodyText": "Done, Thx", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r585643732", "createdAt": "2021-03-02T15:07:04Z", "author": {"login": "stbischof"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.vaadin.flow.server;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.reflect.Method;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import com.vaadin.flow.server.communication.PushRequestHandler;\n+\n+public class OtherImplementationsTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTM0MDc2OA=="}, "originalCommit": {"oid": "152aace6fb4aed57f307db28e3582edfc470d431"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3779, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}