{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3ODQzNDgz", "number": 8850, "title": "Backend is requested for pages that don't exist", "bodyText": "Fixes #8844", "createdAt": "2020-08-14T08:17:49Z", "url": "https://github.com/vaadin/flow/pull/8850", "merged": true, "mergeCommit": {"oid": "fa92487554972d02be295aedd878bfc0af722088"}, "closed": true, "closedAt": "2020-08-19T08:00:50Z", "author": {"login": "mshabarov"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-xssQgH2gAyNDY3ODQzNDgzOjA1MjBiMmY1MTIyZjEwNmIzYjQxMmI0ZDJmMDMwMTQwNmIwMmI5MDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAW1m3AFqTQ3MDIxMDQxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0520b2f5122f106b3b412b4d2f0301406b02b907", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/0520b2f5122f106b3b412b4d2f0301406b02b907", "committedDate": "2020-08-14T10:03:33Z", "message": "Backend is requested for pages that don't exist"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dfde029c52b0ccd903f7b32546bf0c3ceea6006f", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/dfde029c52b0ccd903f7b32546bf0c3ceea6006f", "committedDate": "2020-08-14T08:06:26Z", "message": "Backend is requested for pages that don't exist"}, "afterCommit": {"oid": "0520b2f5122f106b3b412b4d2f0301406b02b907", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/0520b2f5122f106b3b412b4d2f0301406b02b907", "committedDate": "2020-08-14T10:03:33Z", "message": "Backend is requested for pages that don't exist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d659820c1f5ab098ae9f160cfce42e499db04d3", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/0d659820c1f5ab098ae9f160cfce42e499db04d3", "committedDate": "2020-08-14T12:26:49Z", "message": "Useless assignment to local variable 'stream' removed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTcxMDgy", "url": "https://github.com/vaadin/flow/pull/8850#pullrequestreview-468171082", "createdAt": "2020-08-17T05:25:25Z", "commit": {"oid": "0d659820c1f5ab098ae9f160cfce42e499db04d3"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTk3NjY2", "url": "https://github.com/vaadin/flow/pull/8850#pullrequestreview-468197666", "createdAt": "2020-08-17T06:39:41Z", "commit": {"oid": "0d659820c1f5ab098ae9f160cfce42e499db04d3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjozOTo0MVrOHBbbQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjozOTo0MVrOHBbbQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI1OTk2OA==", "bodyText": "As everything is returned as a Stream anyway in the end, I started to wonder if there would be a good way to not collect each page into a list to get the size. It seems that the only (?) way to do that without a terminal operation for a stream would be to use a builder, atomic boolean and a consumer. While this is a bit on the \"premature optimization\" side of things, at least we could avoid the collection this way.\nBuilder<T> builder = Stream.builder();\nAtomicBoolean pageHasItems= new AtomicBoolean(true);\nConsumer<T> consumer = item -> {\n    builder.add(item);\n    pageHasItems.set(true);\n}\nfor (int page = 0; page < pages && pageHasItems.getAndSet(false); page++) {\n  ...\n  getDataProvider().fetch(query).forEach(consumer);\n}\n...\nstream = builder.build();\nWhat do you think? I know it adds a bit complexity but it would avoid collecting items.", "url": "https://github.com/vaadin/flow/pull/8850#discussion_r471259968", "createdAt": "2020-08-17T06:39:41Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -723,20 +725,24 @@ protected Object getFilter() {\n                  * Requested range is split to several pages, and queried from\n                  * backend page by page\n                  */\n+                final Collection<T> fetchedPages = new LinkedList<>();\n                 for (int page = 0; page < pages; page++) {\n                     final int newOffset = offset + page * pageSize;\n                     query = new QueryTrace(newOffset, pageSize, backEndSorting,\n                             inMemorySorting, filter);\n-                    /*\n-                    * TODO: DataProvider is still queried for next pages\n-                    * even when backend returns empty pages/partial page.\n-                    * This should be improved so as to analyze the returned\n-                    * page item count and stop if it's empty/partial.\n-                    * See https://github.com/vaadin/flow/issues/8844\n-                    */\n-                    stream = Stream.concat(stream,\n-                            getDataProvider().fetch(query));\n+                    Stream<T> fetchedPageStream =\n+                            getDataProvider().fetch(query);\n+                    List<T> fetchedPage =\n+                            fetchedPageStream.collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d659820c1f5ab098ae9f160cfce42e499db04d3"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a832d0ac24d2f4ad62ba0637f3c6a2a18818bff", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/3a832d0ac24d2f4ad62ba0637f3c6a2a18818bff", "committedDate": "2020-08-17T13:12:05Z", "message": "Replace items collecting with a stream building"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "029cabba6beedf5065ed916702807b00858f5531", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/029cabba6beedf5065ed916702807b00858f5531", "committedDate": "2020-08-17T13:42:38Z", "message": "Add missed Serializable marker"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4OTg5NDMy", "url": "https://github.com/vaadin/flow/pull/8850#pullrequestreview-468989432", "createdAt": "2020-08-18T04:53:33Z", "commit": {"oid": "029cabba6beedf5065ed916702807b00858f5531"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MDI1MTAz", "url": "https://github.com/vaadin/flow/pull/8850#pullrequestreview-469025103", "createdAt": "2020-08-18T06:28:18Z", "commit": {"oid": "029cabba6beedf5065ed916702807b00858f5531"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNjoyODoxOVrOHCFGcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNjoyODoxOVrOHCFGcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk0Mjc2OA==", "bodyText": "When the query is split to pages we only check that the last query has getLimit/getPageSize and getOffset/getPage called ? It feels weird to me that we have to add this new class here to just check the last query. If we insist on keeping the check, which I suppose might help some users, why shouldn't it be checked consistently for each page query and not just the last one? Or how is the last one so significant - is it enough indication on whether or not the user has called the methods ? If this has been decided on purpose, it is not visible on the code and should be documented so in a comment.\nI would not add this extra class, I would just instead maybe move the checking part to its own method and call it directly here. It seems fine to move the checking before the size verification and parallel stream check even for the other queries (in the method calling this method).", "url": "https://github.com/vaadin/flow/pull/8850#discussion_r471942768", "createdAt": "2020-08-18T06:28:19Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -1116,6 +1101,29 @@ private JsonValue generateJson(T item) {\n         return json;\n     }\n \n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    private PagesFetchResult<T> fetchPages(int pages, int offset) {\n+        QueryTrace query;\n+        final Stream.Builder<T> streamBuilder = Stream.builder();\n+\n+        final AtomicInteger fetchedPerPage = new AtomicInteger(0);\n+        Consumer<T> addItemAndCheckConsumer = item -> {\n+            streamBuilder.add(item);\n+            fetchedPerPage.getAndIncrement();\n+        };\n+        // Keep fetching the pages until we get empty/partial page,\n+        // or run out of pages to request\n+        int page = 0;\n+        do {\n+            final int newOffset = offset + (page++) * pageSize;\n+            query = new QueryTrace(newOffset, pageSize, backEndSorting,\n+                    inMemorySorting, filter);\n+            getDataProvider().fetch(query).forEach(addItemAndCheckConsumer);\n+        } while (page < pages && fetchedPerPage.getAndSet(0) == pageSize);\n+\n+        return new PagesFetchResult<>(streamBuilder.build(), query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "029cabba6beedf5065ed916702807b00858f5531"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MDI2NDI4", "url": "https://github.com/vaadin/flow/pull/8850#pullrequestreview-469026428", "createdAt": "2020-08-18T06:31:08Z", "commit": {"oid": "029cabba6beedf5065ed916702807b00858f5531"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNjozMTowOFrOHCFKsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNjozMTowOFrOHCFKsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk0Mzg1OA==", "bodyText": "Non-blocking comment while you are making changes: I would not mind having the page++; on its own line in the end of the loop, it is just cleaner that way IMO.", "url": "https://github.com/vaadin/flow/pull/8850#discussion_r471943858", "createdAt": "2020-08-18T06:31:08Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -1116,6 +1101,29 @@ private JsonValue generateJson(T item) {\n         return json;\n     }\n \n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    private PagesFetchResult<T> fetchPages(int pages, int offset) {\n+        QueryTrace query;\n+        final Stream.Builder<T> streamBuilder = Stream.builder();\n+\n+        final AtomicInteger fetchedPerPage = new AtomicInteger(0);\n+        Consumer<T> addItemAndCheckConsumer = item -> {\n+            streamBuilder.add(item);\n+            fetchedPerPage.getAndIncrement();\n+        };\n+        // Keep fetching the pages until we get empty/partial page,\n+        // or run out of pages to request\n+        int page = 0;\n+        do {\n+            final int newOffset = offset + (page++) * pageSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "029cabba6beedf5065ed916702807b00858f5531"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26c26920a40e12a47af8624451537b955270dd97", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/26c26920a40e12a47af8624451537b955270dd97", "committedDate": "2020-08-18T11:14:53Z", "message": "Check offset and limit invocation for all queries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MjUzMTk0", "url": "https://github.com/vaadin/flow/pull/8850#pullrequestreview-469253194", "createdAt": "2020-08-18T11:22:24Z", "commit": {"oid": "26c26920a40e12a47af8624451537b955270dd97"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "256dabfca90e98218a076b059ed306afd63d26e7", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/256dabfca90e98218a076b059ed306afd63d26e7", "committedDate": "2020-08-18T12:29:48Z", "message": "Remove unused variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMjEwNDEz", "url": "https://github.com/vaadin/flow/pull/8850#pullrequestreview-470210413", "createdAt": "2020-08-19T07:53:42Z", "commit": {"oid": "256dabfca90e98218a076b059ed306afd63d26e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 94, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}