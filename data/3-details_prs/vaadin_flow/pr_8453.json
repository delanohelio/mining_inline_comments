{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0Njk3MTc5", "number": 8453, "title": "AbstractDataView listener test #8345", "bodyText": "Part of #8345\n\n\nThis change is\u2002", "createdAt": "2020-05-28T19:43:47Z", "url": "https://github.com/vaadin/flow/pull/8453", "merged": true, "mergeCommit": {"oid": "a7d00e64444960ba686e5580af9024cb0b96e382"}, "closed": true, "closedAt": "2020-05-29T17:31:00Z", "author": {"login": "mshabarov"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl8C8cAFqTQyMDY2NTk2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmF8QqgFqTQyMTE1MTU5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjY1OTY2", "url": "https://github.com/vaadin/flow/pull/8453#pullrequestreview-420665966", "createdAt": "2020-05-29T05:43:16Z", "commit": {"oid": "bbd24993f3140d68342d31e9def189848c0c3ffe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTo0MzoxNlrOGcPd3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTo0MzoxNlrOGcPd3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2NjcxOQ==", "bodyText": "To make this unified with the DataCommunicator size change non communicator events should also be sent onBeforeClientResponse e.g. on the component we should use:\n        StateNode node = getElement().getNode();\n        node.runWhenAttached(ui -> ui.getInternals().getStateTree()\n                .beforeClientResponse(node, executionContext -> fireEvent(new SizeChangeEvent<>(this, newSize))));\nThis will need some more code in the test also see: https://github.com/vaadin/vaadin-grid-flow/pull/1002/files", "url": "https://github.com/vaadin/flow/pull/8453#discussion_r432266719", "createdAt": "2020-05-29T05:43:16Z", "author": {"login": "caalador"}, "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/AbstractDataViewListenerTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.data.provider;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+public abstract class AbstractDataViewListenerTest {\n+\n+    private final String[] ITEMS = new String[] { \"one\", \"two\", \"three\",\n+            \"four\" };\n+\n+    @Test\n+    public void addSizeChangeListener_sizeChanged_listenersAreNotified() {\n+        HasListDataView<String, ? extends AbstractListDataView<String>> hasListDataView =\n+                getComponent();\n+        AbstractListDataView<String> dataView =\n+                hasListDataView.setDataProvider(Arrays.stream(ITEMS));\n+\n+        AtomicInteger invocationCounter = new AtomicInteger(0);\n+\n+        dataView.addSizeChangeListener(event -> invocationCounter.incrementAndGet());\n+\n+        dataView.withFilter(\"one\"::equals);\n+        dataView.withFilter(null);\n+        dataView.addItemAfter(\"five\", \"four\");\n+        dataView.addItemBefore(\"zero\", \"one\");\n+        dataView.addItem(\"last\");\n+        dataView.removeItem(\"zero\");\n+\n+        Assert.assertEquals(\n+                \"Unexpected count of size change listener invocations occurred\",\n+                6, invocationCounter.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbd24993f3140d68342d31e9def189848c0c3ffe"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjcxNzM5", "url": "https://github.com/vaadin/flow/pull/8453#pullrequestreview-420671739", "createdAt": "2020-05-29T05:59:42Z", "commit": {"oid": "bbd24993f3140d68342d31e9def189848c0c3ffe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODg1ODA2", "url": "https://github.com/vaadin/flow/pull/8453#pullrequestreview-420885806", "createdAt": "2020-05-29T11:58:00Z", "commit": {"oid": "bbd24993f3140d68342d31e9def189848c0c3ffe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo1ODowMFrOGcZvrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo1ODowMFrOGcZvrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQzNTExNw==", "bodyText": "Should probably be AbstractListDataViewListenerTest as the test uses the List DataView.", "url": "https://github.com/vaadin/flow/pull/8453#discussion_r432435117", "createdAt": "2020-05-29T11:58:00Z", "author": {"login": "caalador"}, "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/AbstractDataViewListenerTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.data.provider;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+public abstract class AbstractDataViewListenerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbd24993f3140d68342d31e9def189848c0c3ffe"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7be8e57d4ec9d23f2f29eb3bebefade70c15d3a", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/d7be8e57d4ec9d23f2f29eb3bebefade70c15d3a", "committedDate": "2020-05-29T13:55:31Z", "message": "AbstractDataView listener test #8345"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "deefbb07301c0beef61435b841a8d06b2ccd0564", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/deefbb07301c0beef61435b841a8d06b2ccd0564", "committedDate": "2020-05-29T13:55:31Z", "message": "BeforeClientResponse case is taken into account"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87d8aab91f8ff0d78d84873d33ee78c3e214fa74", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/87d8aab91f8ff0d78d84873d33ee78c3e214fa74", "committedDate": "2020-05-29T13:21:41Z", "message": "BeforeClientResponse case is taken into account"}, "afterCommit": {"oid": "deefbb07301c0beef61435b841a8d06b2ccd0564", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/deefbb07301c0beef61435b841a8d06b2ccd0564", "committedDate": "2020-05-29T13:55:31Z", "message": "BeforeClientResponse case is taken into account"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTUxNTk2", "url": "https://github.com/vaadin/flow/pull/8453#pullrequestreview-421151596", "createdAt": "2020-05-29T17:30:33Z", "commit": {"oid": "deefbb07301c0beef61435b841a8d06b2ccd0564"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 383, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}