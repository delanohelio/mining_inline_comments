{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNTM0Mjkz", "number": 8529, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoxODoxOFrOEF7uZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoyMzo1MVrOEF73vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjU2ODY5OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/Composite.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoxODoxOFrOGka2MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNToyOTo0MFrOGk2JFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0MTc3Nw==", "bodyText": "transient?", "url": "https://github.com/vaadin/flow/pull/8529#discussion_r440841777", "createdAt": "2020-06-16T13:18:18Z", "author": {"login": "joheriks"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/Composite.java", "diffHunk": "@@ -50,6 +50,8 @@\n public abstract class Composite<T extends Component> extends Component {\n     private T content;\n \n+    private ThreadLocal<Boolean> contentIsInitializing = new ThreadLocal<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26bb1bffe05fd71b84e37efd9296d073cde95cf6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4ODk4MQ==", "bodyText": "good point", "url": "https://github.com/vaadin/flow/pull/8529#discussion_r441288981", "createdAt": "2020-06-17T05:29:40Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/Composite.java", "diffHunk": "@@ -50,6 +50,8 @@\n public abstract class Composite<T extends Component> extends Component {\n     private T content;\n \n+    private ThreadLocal<Boolean> contentIsInitializing = new ThreadLocal<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0MTc3Nw=="}, "originalCommit": {"oid": "26bb1bffe05fd71b84e37efd9296d073cde95cf6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjU5MjYwOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/Composite.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoyMzo1MVrOGkbFFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzoyMzo1MVrOGkbFFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0NTU4OA==", "bodyText": "I would suggest:\nThe content is not yet initialized. \nDetected direct or indirect call to 'getContent' from 'initContent'. \nYou may not call any framework method on a 'Composite' instance before 'initContent' has completed initializing the component .\n\nRationale: The infinite loop symptom is because of our implementation choice, user does not need to be aware since it is prevented by this code. Also the last suggestion to \"Call methods on the content component instead\" may be assuming too much about what the dev is trying to do.", "url": "https://github.com/vaadin/flow/pull/8529#discussion_r440845588", "createdAt": "2020-06-16T13:23:51Z", "author": {"login": "joheriks"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/Composite.java", "diffHunk": "@@ -113,12 +115,27 @@ private static String getExceptionMessage(Type type) {\n      */\n     public T getContent() {\n         if (content == null) {\n-            T newContent = initContent();\n-            if (newContent == null) {\n-                throw new IllegalStateException(\n-                        \"initContent returned null instead of a component\");\n+            try {\n+                if (Boolean.TRUE.equals(contentIsInitializing.get())) {\n+                    throw new IllegalStateException(\n+                            \"The content is not yet initialized. \"\n+                                    + \"Infinite loop detected: you are calling a code inside 'initContent' \"\n+                                    + \"which directly or indirectly is calling 'getContent'/'initContent'. \"\n+                                    + \"You may not call any method on \"\n+                                    + Composite.class.getSimpleName()\n+                                    + \" instance until it initialized (inside 'getContent' or 'initContent'). \"\n+                                    + \"Call methods on the content component instead.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26bb1bffe05fd71b84e37efd9296d073cde95cf6"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3472, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}