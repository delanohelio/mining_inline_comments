{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNjg1MzE2", "number": 8635, "title": "Add matrix support to client-side form binding", "bodyText": "Fixes #8582", "createdAt": "2020-06-26T16:47:16Z", "url": "https://github.com/vaadin/flow/pull/8635", "merged": true, "mergeCommit": {"oid": "675d0e9ed7231589f1f3b51fae1901b0e3148500"}, "closed": true, "closedAt": "2020-07-01T13:16:15Z", "author": {"login": "platosha"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwHN6rgH2gAyNDQwNjg1MzE2OjVmYmM2MTVlMDRjZDc3MmUwNDA4NTkwNTY4NjE0ZWMyNTE0NDgyODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwoPkHgFqTQ0MDc3MDU2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5fbc615e04cd772e0408590568614ec251448282", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/5fbc615e04cd772e0408590568614ec251448282", "committedDate": "2020-06-29T20:38:59Z", "message": "Enable passing value model arguments in ArrayModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c89aaab08c83eacdc561ff2e3494d6f08c2bf483", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/c89aaab08c83eacdc561ff2e3494d6f08c2bf483", "committedDate": "2020-06-29T20:38:59Z", "message": "Generate ArrayModel value model arguments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ee048b8b2133445732dfe7e1ab8154ad9b18212", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/1ee048b8b2133445732dfe7e1ab8154ad9b18212", "committedDate": "2020-06-29T20:38:59Z", "message": "Generate simple ObjectModel for map properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a558bbc4b6833a57a4153f49100a893730127b9", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/2a558bbc4b6833a57a4153f49100a893730127b9", "committedDate": "2020-06-29T20:38:59Z", "message": "Add test for matrix in ArrayModel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31a40884e709dddb00d11708227384908b20d7db", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/31a40884e709dddb00d11708227384908b20d7db", "committedDate": "2020-06-29T20:26:46Z", "message": "Add test for matrix in ArrayModel"}, "afterCommit": {"oid": "2a558bbc4b6833a57a4153f49100a893730127b9", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/2a558bbc4b6833a57a4153f49100a893730127b9", "committedDate": "2020-06-29T20:38:59Z", "message": "Add test for matrix in ArrayModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab83552a0ecd58b11f29ccd8c1b2fb67f32eb23d", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/ab83552a0ecd58b11f29ccd8c1b2fb67f32eb23d", "committedDate": "2020-06-30T08:33:45Z", "message": "Cleanup and comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzkyNjgx", "url": "https://github.com/vaadin/flow/pull/8635#pullrequestreview-439792681", "createdAt": "2020-06-30T08:35:12Z", "commit": {"oid": "2a558bbc4b6833a57a4153f49100a893730127b9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODozNToxMlrOGqx3eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODozNToyNlrOGqx4Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxMDM5NA==", "bodyText": "There are no public setters, the only initialisation happens in constructor time, so I marked all fields as readonly.", "url": "https://github.com/vaadin/flow/pull/8635#discussion_r447510394", "createdAt": "2020-06-30T08:35:12Z", "author": {"login": "platosha"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Models.ts", "diffHunk": "@@ -93,17 +96,20 @@ export class ArrayModel<T, M extends AbstractModel<T>> extends AbstractModel<Rea\n     return [] as ReadonlyArray<unknown>;\n   }\n \n-  private [ModelSymbol]: ModelConstructor<T, M>;\n-  private models: M[] = [];\n+  private readonly [ModelSymbol]: ModelConstructor<T, M>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a558bbc4b6833a57a4153f49100a893730127b9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxMDQyMA==", "bodyText": "The Model will be instantiated for every item in array. While the first two of its constructor arguments are always pre-determined parent and key, the rest of arguments could now be provided using this array.\nSee the test case below for example: https://github.com/vaadin/flow/pull/8635/files#diff-614fd2442b09cef10656a24d2cc52926R74-R76", "url": "https://github.com/vaadin/flow/pull/8635#discussion_r447510420", "createdAt": "2020-06-30T08:35:14Z", "author": {"login": "platosha"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Models.ts", "diffHunk": "@@ -93,17 +96,20 @@ export class ArrayModel<T, M extends AbstractModel<T>> extends AbstractModel<Rea\n     return [] as ReadonlyArray<unknown>;\n   }\n \n-  private [ModelSymbol]: ModelConstructor<T, M>;\n-  private models: M[] = [];\n+  private readonly [ModelSymbol]: ModelConstructor<T, M>;\n+  private readonly modelArgs: ReadonlyArray<any>;\n+  private readonly models: M[] = [];\n \n   constructor(\n     parent: ModelParent<ReadonlyArray<T>>,\n     key: keyof any,\n     Model: ModelConstructor<T, M>,\n+    modelArgs: ModelVariableArguments<typeof Model>,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a558bbc4b6833a57a4153f49100a893730127b9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxMDU1OQ==", "bodyText": "Moved appending the \"Model\" here, since it was repeated for every call of this method.", "url": "https://github.com/vaadin/flow/pull/8635#discussion_r447510559", "createdAt": "2020-06-30T08:35:26Z", "author": {"login": "platosha"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/connect/generator/VaadinConnectTsGenerator.java", "diffHunk": "@@ -538,26 +548,58 @@ private String getModelConstructor(CodegenProperty property,\n         String name = property.name;\n         String dataType = property.datatype;\n         String simpleName = getSimpleNameFromImports(dataType, imports);\n-        String validators = getConstrainsArguments(property);\n+        String arguments = getConstrainsArguments(property);\n+\n+        Matcher matcher = ARRAY_TYPE_NAME_PATTERN.matcher(simpleName);\n+        if (matcher.find()) {\n+            arguments = \", \" + getModelVariableArguments(matcher.group(1))\n+                    + arguments;\n+        }\n+        return \"new \" + fixNameForModel(simpleName) + \"(this, '\" + name + \"'\"\n+                + arguments + \")\";\n+    }\n+\n+    private String getModelFullType(String name) {\n+        Matcher matcher = ARRAY_TYPE_NAME_PATTERN.matcher(name);\n+        if (matcher.find()) {\n+            String variableName = matcher.group(1);\n+            return \"Array\" + MODEL + \"<\" + getModelVariableType(variableName)\n+                    + \", \" + getModelFullType(variableName) + \">\";\n+        }\n+        matcher = MAPPED_TYPE_NAME_PATTERN.matcher(name);\n+        if (matcher.find()) {\n+            return \"Object\" + MODEL + \"<{ [key: string]: \"\n+                    + getModelVariableType(matcher.group(1)) + \"; }>\";\n+        }\n+        return fixNameForModel(name);\n+    }\n \n-        Matcher matcher = Pattern.compile(\"Array<(.+)>\").matcher(simpleName);\n+    private String getModelVariableType(String variableName) {\n+        if (variableName.matches(\"string|number|boolean\")) {\n+            return variableName;\n+        }\n+        return MODEL + \"Type<\" + getModelFullType(variableName) + \">\";\n+    }\n+\n+    private String getModelVariableArguments(String name) {\n+        Matcher matcher = ARRAY_TYPE_NAME_PATTERN.matcher(name);\n         if (matcher.find()) {\n-            simpleName = \"Array\" + MODEL + \"(this, '\" + name + \"', \"\n-                    + fixNameForModel(matcher.group(1)) + MODEL + validators + \")\";\n+            return fixNameForModel(name) + \", [\"\n+                    + getModelVariableArguments(matcher.group(1)) + \"]\";\n         } else {\n-            simpleName = fixNameForModel(simpleName) + MODEL + \"(this, '\" + name\n-                    + \"'\" + validators + \")\";\n+            return fixNameForModel(name) + \", []\";\n         }\n-        return \"new \" + simpleName;\n     }\n \n     private String fixNameForModel(String name) {\n-        if (\"any\".equals(name)) {\n+        if (ARRAY_TYPE_NAME_PATTERN.matcher(name).find()) {\n+            name = \"Array\";\n+        } else if (\"any\".equals(name) || MAPPED_TYPE_NAME_PATTERN.matcher(name).find()) {\n             name = \"Object\";\n         } else if (name.matches(\"string|number|boolean\")) {\n             name = GeneratorUtils.capitalize(name);\n         }\n-        return name;\n+        return name + MODEL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a558bbc4b6833a57a4153f49100a893730127b9"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDgyNTQ1", "url": "https://github.com/vaadin/flow/pull/8635#pullrequestreview-440082545", "createdAt": "2020-06-30T14:37:18Z", "commit": {"oid": "ab83552a0ecd58b11f29ccd8c1b2fb67f32eb23d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozNzoxOFrOGq_i0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozNzoxOFrOGq_i0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNDQ4MQ==", "bodyText": "MyEntity[][] selfMatrix fails the build with\nType 'ArrayModel<unknown, AbstractModel<any>>' is not assignable to type 'ArrayModel<any, MyEntityModel<MyEntity>>'\nWhat can we do about it? I'm OK if it's not usable in form binding, but I would like it to compile.", "url": "https://github.com/vaadin/flow/pull/8635#discussion_r447734481", "createdAt": "2020-06-30T14:37:18Z", "author": {"login": "vlukashov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/connect/generator/tsmodel/TsFormEndpoint.java", "diffHunk": "@@ -98,5 +99,9 @@ public String stringNullable() {\n         @FutureOrPresent LocalTime futureOrPresent;\n         @Pattern(regexp = \"\\\\d+\\\\..+\") String pattern;\n         List<MyEntity> children;\n+        String[] stringArray;\n+        Number[][] numberMatrix;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab83552a0ecd58b11f29ccd8c1b2fb67f32eb23d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59f43411d28ef6aa104b27b893b5bd856f3b6820", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/59f43411d28ef6aa104b27b893b5bd856f3b6820", "committedDate": "2020-07-01T08:43:59Z", "message": "Add support for matrices of objects"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjc1Mzcz", "url": "https://github.com/vaadin/flow/pull/8635#pullrequestreview-440675373", "createdAt": "2020-07-01T08:54:26Z", "commit": {"oid": "59f43411d28ef6aa104b27b893b5bd856f3b6820"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo1NDoyNlrOGrdCqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo1NDoyNlrOGrdCqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIxNzc2OA==", "bodyText": "I think the usage of generic word \"model\" is slightly confusing in some places since the ArrayModel is a model and the items have a model. I'd like to have something like ItemModel and itemModelArgs in context of ArrayModel when referring to the items instead of the parent model itself to make the code a bit more clear.", "url": "https://github.com/vaadin/flow/pull/8635#discussion_r448217768", "createdAt": "2020-07-01T08:54:26Z", "author": {"login": "Haprog"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Models.ts", "diffHunk": "@@ -93,17 +96,20 @@ export class ArrayModel<T, M extends AbstractModel<T>> extends AbstractModel<Rea\n     return [] as ReadonlyArray<unknown>;\n   }\n \n-  private [ModelSymbol]: ModelConstructor<T, M>;\n-  private models: M[] = [];\n+  private readonly [ModelSymbol]: ModelConstructor<T, M>;\n+  private readonly modelArgs: ReadonlyArray<any>;\n+  private readonly models: M[] = [];\n \n   constructor(\n     parent: ModelParent<ReadonlyArray<T>>,\n     key: keyof any,\n     Model: ModelConstructor<T, M>,\n+    modelArgs: ModelVariableArguments<typeof Model>,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxMDQyMA=="}, "originalCommit": {"oid": "2a558bbc4b6833a57a4153f49100a893730127b9"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86d76431fcd9fc89cfff6e961426d5430abd43fd", "author": {"user": {"login": "platosha", "name": "Anton Platonov"}}, "url": "https://github.com/vaadin/flow/commit/86d76431fcd9fc89cfff6e961426d5430abd43fd", "committedDate": "2020-07-01T10:39:17Z", "message": "Rename Model ArrayModel argument to ItemModel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzcwNTY5", "url": "https://github.com/vaadin/flow/pull/8635#pullrequestreview-440770569", "createdAt": "2020-07-01T11:07:39Z", "commit": {"oid": "86d76431fcd9fc89cfff6e961426d5430abd43fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 230, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}