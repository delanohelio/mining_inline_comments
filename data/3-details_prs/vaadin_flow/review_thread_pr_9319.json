{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NjYxMjky", "number": 9319, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODoxODozMlrOE1ixng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOToxNTozOFrOE1kJ7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTc5NzQyOnYy", "diffSide": "RIGHT", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "isResolved": true, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODoxODozMlrOHt337Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzozODozMVrOHvvTIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ==", "bodyText": "This goes through all the expanded items that HierarchyMapper says are expanded.\nDoes the hierarchy mapper have items only related to the active range (on client side) or ? Just wondering what is the cost of this operation. I bet that it throws out items that are not in the active range (done by DataCommunicator), but just want to verify as this look suspicious and there is no comment in the code.", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517863405", "createdAt": "2020-11-05T08:18:32Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NDI2OQ==", "bodyText": "HierarchyMapper does not currently know anything about whether the expanded item is active or not. We could force the HierarchyMapper to hold only the active items somehow, but it looks like another fix/improvement.", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517884269", "createdAt": "2020-11-05T08:53:03Z", "author": {"login": "mshabarov"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4ODc4MA==", "bodyText": "And another point is that the scroll position is not (?) preserved (after attach/detach/refresh page). So, if we were in the middle of TreeGrid and the active items list contains the items in the middle, and then we refresh the page and come back to 0 position...I would expect the items in the 0 position also preserve the expanding state, though they could be not in active range before page refreshing. Does it make sense?", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517888780", "createdAt": "2020-11-05T08:59:50Z", "author": {"login": "mshabarov"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg5MDQ5Mw==", "bodyText": "HierarchyMapper#fetchRootItems(null) ignores the range by passing null, and fetches all the root nodes. HierarchyMapper has a set of fetchXXXItems methods accepting a Range object, I believe it stores the whole hierarchy rather than the active range.", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517890493", "createdAt": "2020-11-05T09:02:36Z", "author": {"login": "taefi"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg5MzIzNg==", "bodyText": "Ok. So just thinking about the case where the user has expanded a lot of nodes, like thousands, then all of those are stored on the server side memory for now ? But this fix doesn't change that fact ? Then I think it is fine to document in as comment in code and move on, maybe think about if this could/should be improved and create another issue.\nOr would it be possible that here the code only limits the \"checking of expanded items\" to the active range to be, which means that\na) if the scrolling position is reset, it can guess that only couple of pages of nodes from the top should be reported for expanded state ?\nb) if the scrolling position is not reset (?), it would just try stick to reporting the expanded state of the active range of nodes\nBut yeah lets try to avoid premature optimization.", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517893236", "createdAt": "2020-11-05T09:07:05Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk0ODI2OQ==", "bodyText": "I think the cost of the operation is not good for big data obviously, and @mshabarov's discussion also make sense. At least, the cost of traversing the whole hierarchicy can be omitted by having that public method in HierarchyMapper for the next minor version (2.5).", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517948269", "createdAt": "2020-11-05T10:33:14Z", "author": {"login": "taefi"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc3NDYwMg==", "bodyText": "So is it either done already for 2.5 and master changes or another issue opened so that it is not forgotten ?\nProbably would be also good to acknowledge the resolution to this discussion in the code as a comment to make it easier for maintainers. Like // FIXME This will cause xyz, to be fixed by #1234", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r519774602", "createdAt": "2020-11-09T12:36:05Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc3NjMyNQ==", "bodyText": "Or well, this is already 2.4 branch so it makes little impact here to add the comment. Would have been different for master but didn't notice it then", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r519776325", "createdAt": "2020-11-09T12:39:19Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc5OTU4NQ==", "bodyText": "The public method is already there in master and 5.0 branches, but not in 2.5. So is it fine if I cherry pick the master changes directly to 2.5 instead of the // FIXME comment?", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r519799585", "createdAt": "2020-11-09T13:10:56Z", "author": {"login": "taefi"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgwMDE3MA==", "bodyText": "Ok", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r519800170", "createdAt": "2020-11-09T13:11:27Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyMDA2NA==", "bodyText": "This issue should address this for the next minor version branches 2.5 and 4.1.", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r519820064", "createdAt": "2020-11-09T13:38:31Z", "author": {"login": "taefi"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, "originalCommit": {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjAyMzUwOnYy", "diffSide": "RIGHT", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOToxNTozOFrOHt6B9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOTo0NDoxNVrOHt7I4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg5ODc0Mw==", "bodyText": "Collections.emptySet() already produces empty unmodifiable set, as I recall, why do you wrap it again?", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517898743", "createdAt": "2020-11-05T09:15:38Z", "author": {"login": "mshabarov"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.unmodifiableCollection(Collections.emptySet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aba4809bc8f7b14079db559674188c1119c4fff0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkxNjg5OA==", "bodyText": "Correct, my bad. Undid it.", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517916898", "createdAt": "2020-11-05T09:44:15Z", "author": {"login": "taefi"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.unmodifiableCollection(Collections.emptySet());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg5ODc0Mw=="}, "originalCommit": {"oid": "aba4809bc8f7b14079db559674188c1119c4fff0"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2991, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}