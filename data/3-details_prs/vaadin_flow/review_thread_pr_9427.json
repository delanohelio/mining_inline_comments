{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNTA3ODgy", "number": 9427, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODoyNjoxMVrOE67Tgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTowNzo1OFrOE8ltbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjI0NTE0OnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/AppShell.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODoyNjoxMVrOH2Rn1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwOToxNjoxMFrOH2TgNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY3Mzg3OQ==", "bodyText": "Maybe it's better to put this at the top of the file", "url": "https://github.com/vaadin/flow/pull/9427#discussion_r526673879", "createdAt": "2020-11-19T08:26:11Z", "author": {"login": "haijian-vaadin"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/AppShell.ts", "diffHunk": "@@ -0,0 +1,103 @@\n+export interface ConnectionIndicatorConfiguration {\n+  onlineText?: string;\n+  offlineText?: string;\n+  firstDelay?: number;\n+  secondDelay?: number;\n+  thirdDelay?: number;\n+  applyDefaultTheme?: boolean;\n+  reconnectModal?: boolean;\n+  reconnectingText?: string;\n+}\n+\n+const $wnd = window as any;\n+\n+/**\n+ * Configures window.Vaadin.connectionIndicator. If not available globally, schedules a repeating\n+ * task until it becomes available.\n+ *\n+ * @param conf All defined fields are applied to the connection indicator configuration.\n+ * @returns The updated configuration of the connection indicator.\n+ */\n+export async function setConnectionIndicatorConfiguration(conf: ConnectionIndicatorConfiguration):\n+  Promise<ConnectionIndicatorConfiguration> {\n+  return new Promise((resolve, reject) => {\n+    const updateConfiguration = () => {\n+      try {\n+        validateDelay(conf.firstDelay);\n+        validateDelay(conf.secondDelay);\n+        validateDelay(conf.thirdDelay);\n+      } catch (error) {\n+        reject(error);\n+      }\n+      if ($wnd.Vaadin?.connectionIndicator) {\n+        setValidatedConnectionIndicatorConfiguration(conf);\n+        return true;\n+      } else {\n+        return false;\n+      }\n+    };\n+    let attempts = 0;\n+    const interval = setInterval(() => {\n+      if (updateConfiguration()) {\n+        clearInterval(interval);\n+        resolve(getConnectionIndicatorConfiguration());\n+      } else {\n+        attempts += 1;\n+        if (attempts >= 10) {\n+          throw new ConfigurationError('window.Vaadin.connectionIndicator not defined');\n+        }\n+      }\n+    }, 100);\n+  });\n+}\n+\n+/**\n+ * An exception that gets thrown for illegal configuration values.\n+ */\n+export class ConfigurationError extends Error {\n+  /**\n+   * @param message the `message` property value\n+   */\n+  constructor(message: string) {\n+    super(message);\n+  }\n+}\n+\n+function validateDelay(delay?: number) {\n+  if (delay !== undefined && delay! < 0) {\n+    throw new ConfigurationError('delays must be positive');\n+  }\n+}\n+\n+/**\n+ * Concrete values for each ConnectionIndicatorConfiguration to enable reflection over the field names.\n+ */\n+\n+/* tslint:disable: max-classes-per-file */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30af65e9ac09e5c2a177e351406d952249c9d07"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjcwNDY5Mg==", "bodyText": "Done.", "url": "https://github.com/vaadin/flow/pull/9427#discussion_r526704692", "createdAt": "2020-11-19T09:16:10Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/AppShell.ts", "diffHunk": "@@ -0,0 +1,103 @@\n+export interface ConnectionIndicatorConfiguration {\n+  onlineText?: string;\n+  offlineText?: string;\n+  firstDelay?: number;\n+  secondDelay?: number;\n+  thirdDelay?: number;\n+  applyDefaultTheme?: boolean;\n+  reconnectModal?: boolean;\n+  reconnectingText?: string;\n+}\n+\n+const $wnd = window as any;\n+\n+/**\n+ * Configures window.Vaadin.connectionIndicator. If not available globally, schedules a repeating\n+ * task until it becomes available.\n+ *\n+ * @param conf All defined fields are applied to the connection indicator configuration.\n+ * @returns The updated configuration of the connection indicator.\n+ */\n+export async function setConnectionIndicatorConfiguration(conf: ConnectionIndicatorConfiguration):\n+  Promise<ConnectionIndicatorConfiguration> {\n+  return new Promise((resolve, reject) => {\n+    const updateConfiguration = () => {\n+      try {\n+        validateDelay(conf.firstDelay);\n+        validateDelay(conf.secondDelay);\n+        validateDelay(conf.thirdDelay);\n+      } catch (error) {\n+        reject(error);\n+      }\n+      if ($wnd.Vaadin?.connectionIndicator) {\n+        setValidatedConnectionIndicatorConfiguration(conf);\n+        return true;\n+      } else {\n+        return false;\n+      }\n+    };\n+    let attempts = 0;\n+    const interval = setInterval(() => {\n+      if (updateConfiguration()) {\n+        clearInterval(interval);\n+        resolve(getConnectionIndicatorConfiguration());\n+      } else {\n+        attempts += 1;\n+        if (attempts >= 10) {\n+          throw new ConfigurationError('window.Vaadin.connectionIndicator not defined');\n+        }\n+      }\n+    }, 100);\n+  });\n+}\n+\n+/**\n+ * An exception that gets thrown for illegal configuration values.\n+ */\n+export class ConfigurationError extends Error {\n+  /**\n+   * @param message the `message` property value\n+   */\n+  constructor(message: string) {\n+    super(message);\n+  }\n+}\n+\n+function validateDelay(delay?: number) {\n+  if (delay !== undefined && delay! < 0) {\n+    throw new ConfigurationError('delays must be positive');\n+  }\n+}\n+\n+/**\n+ * Concrete values for each ConnectionIndicatorConfiguration to enable reflection over the field names.\n+ */\n+\n+/* tslint:disable: max-classes-per-file */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY3Mzg3OQ=="}, "originalCommit": {"oid": "b30af65e9ac09e5c2a177e351406d952249c9d07"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjI1Mzg2OnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/index.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODoyODozMFrOH2RtPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwOToxNjoxN1rOH2TgeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY3NTI2Mg==", "bodyText": "Could also add Appshell.ts here?", "url": "https://github.com/vaadin/flow/pull/9427#discussion_r526675262", "createdAt": "2020-11-19T08:28:30Z", "author": {"login": "haijian-vaadin"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/index.ts", "diffHunk": "@@ -2,3 +2,4 @@ export * from './Flow';\n export * from './Connect';\n export * from './Authentication';\n export * from './Offline';\n+export * from './ConnectionIndicator';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30af65e9ac09e5c2a177e351406d952249c9d07"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjcwNDc2MA==", "bodyText": "Done.", "url": "https://github.com/vaadin/flow/pull/9427#discussion_r526704760", "createdAt": "2020-11-19T09:16:17Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/index.ts", "diffHunk": "@@ -2,3 +2,4 @@ export * from './Flow';\n export * from './Connect';\n export * from './Authentication';\n export * from './Offline';\n+export * from './ConnectionIndicator';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY3NTI2Mg=="}, "originalCommit": {"oid": "b30af65e9ac09e5c2a177e351406d952249c9d07"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzE0MTI3OnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/AppShell.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjowMjozMVrOH2aLRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjoxOTo0OVrOH4VI7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgxNDAyMg==", "bodyText": "Maybe DefaultConnectionIndicatorConfiguration would be better than ConnectionIndicatorConfigurationImpl?", "url": "https://github.com/vaadin/flow/pull/9427#discussion_r526814022", "createdAt": "2020-11-19T12:02:31Z", "author": {"login": "haijian-vaadin"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/AppShell.ts", "diffHunk": "@@ -0,0 +1,82 @@\n+/* tslint:disable: max-classes-per-file */\n+\n+import {addConnectionIndicator} from \"./ConnectionIndicator\";\n+\n+export interface ConnectionIndicatorConfiguration {\n+  onlineText?: string;\n+  offlineText?: string;\n+  firstDelay?: number;\n+  secondDelay?: number;\n+  thirdDelay?: number;\n+  applyDefaultTheme?: boolean;\n+  reconnectModal?: boolean;\n+  reconnectingText?: string;\n+}\n+\n+const $wnd = window as any;\n+\n+/**\n+ * Configures window.Vaadin.connectionIndicator.\n+ *\n+ * @param conf All defined fields are applied to the connection indicator configuration.\n+ * @returns The updated configuration of the connection indicator.\n+ */\n+export function setConnectionIndicatorConfiguration(conf: ConnectionIndicatorConfiguration):\n+  ConnectionIndicatorConfiguration {\n+  // ensure the connection indicator is in the DOM and accessible via window.Vaadin.connectionIndicator\n+  addConnectionIndicator();\n+  validateDelay(conf.firstDelay);\n+  validateDelay(conf.secondDelay);\n+  validateDelay(conf.thirdDelay);\n+  setValidatedConnectionIndicatorConfiguration(conf);\n+  return getConnectionIndicatorConfiguration();\n+}\n+\n+/**\n+ * An exception that gets thrown for illegal configuration values.\n+ */\n+export class ConfigurationError extends Error {\n+  /**\n+   * @param message the `message` property value\n+   */\n+  constructor(message: string) {\n+    super(message);\n+  }\n+}\n+\n+function validateDelay(delay?: number) {\n+  if (delay !== undefined && delay! < 0) {\n+    throw new ConfigurationError('delays must be positive');\n+  }\n+}\n+\n+/**\n+ * Concrete values for each ConnectionIndicatorConfiguration to enable reflection over the field names.\n+ */\n+class ConnectionIndicatorConfigurationImpl implements ConnectionIndicatorConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11bd03d449a294b838c0d156281873fb63616b98"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyODY1Mg==", "bodyText": "Renamed to ConcreteConnectionIndicatorConfiguration instead (to avoid potential confusion with default configuration values, which are defined in the ConnectionIndicator component).", "url": "https://github.com/vaadin/flow/pull/9427#discussion_r528828652", "createdAt": "2020-11-23T16:19:49Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/AppShell.ts", "diffHunk": "@@ -0,0 +1,82 @@\n+/* tslint:disable: max-classes-per-file */\n+\n+import {addConnectionIndicator} from \"./ConnectionIndicator\";\n+\n+export interface ConnectionIndicatorConfiguration {\n+  onlineText?: string;\n+  offlineText?: string;\n+  firstDelay?: number;\n+  secondDelay?: number;\n+  thirdDelay?: number;\n+  applyDefaultTheme?: boolean;\n+  reconnectModal?: boolean;\n+  reconnectingText?: string;\n+}\n+\n+const $wnd = window as any;\n+\n+/**\n+ * Configures window.Vaadin.connectionIndicator.\n+ *\n+ * @param conf All defined fields are applied to the connection indicator configuration.\n+ * @returns The updated configuration of the connection indicator.\n+ */\n+export function setConnectionIndicatorConfiguration(conf: ConnectionIndicatorConfiguration):\n+  ConnectionIndicatorConfiguration {\n+  // ensure the connection indicator is in the DOM and accessible via window.Vaadin.connectionIndicator\n+  addConnectionIndicator();\n+  validateDelay(conf.firstDelay);\n+  validateDelay(conf.secondDelay);\n+  validateDelay(conf.thirdDelay);\n+  setValidatedConnectionIndicatorConfiguration(conf);\n+  return getConnectionIndicatorConfiguration();\n+}\n+\n+/**\n+ * An exception that gets thrown for illegal configuration values.\n+ */\n+export class ConfigurationError extends Error {\n+  /**\n+   * @param message the `message` property value\n+   */\n+  constructor(message: string) {\n+    super(message);\n+  }\n+}\n+\n+function validateDelay(delay?: number) {\n+  if (delay !== undefined && delay! < 0) {\n+    throw new ConfigurationError('delays must be positive');\n+  }\n+}\n+\n+/**\n+ * Concrete values for each ConnectionIndicatorConfiguration to enable reflection over the field names.\n+ */\n+class ConnectionIndicatorConfigurationImpl implements ConnectionIndicatorConfiguration {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgxNDAyMg=="}, "originalCommit": {"oid": "11bd03d449a294b838c0d156281873fb63616b98"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzE0NDMxOnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/AppShell.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjowMzozNVrOH2aNYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjoyMDo0M1rOH4VLrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgxNDU2Mw==", "bodyText": "Could we have some inline doc for the class and the properties?", "url": "https://github.com/vaadin/flow/pull/9427#discussion_r526814563", "createdAt": "2020-11-19T12:03:35Z", "author": {"login": "haijian-vaadin"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/AppShell.ts", "diffHunk": "@@ -0,0 +1,82 @@\n+/* tslint:disable: max-classes-per-file */\n+\n+import {addConnectionIndicator} from \"./ConnectionIndicator\";\n+\n+export interface ConnectionIndicatorConfiguration {\n+  onlineText?: string;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11bd03d449a294b838c0d156281873fb63616b98"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyOTM1OQ==", "bodyText": "Done. However, there is now duplication of properties and documentation here. Maybe we should consider whether we really need this intermediate configuration DTO, or if we instead could consider the ConnectionIndicator the public configuration interface instead.", "url": "https://github.com/vaadin/flow/pull/9427#discussion_r528829359", "createdAt": "2020-11-23T16:20:43Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/AppShell.ts", "diffHunk": "@@ -0,0 +1,82 @@\n+/* tslint:disable: max-classes-per-file */\n+\n+import {addConnectionIndicator} from \"./ConnectionIndicator\";\n+\n+export interface ConnectionIndicatorConfiguration {\n+  onlineText?: string;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgxNDU2Mw=="}, "originalCommit": {"oid": "11bd03d449a294b838c0d156281873fb63616b98"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxOTY3ODUyOnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/ConnectionIndicator.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTowNzo1OFrOH4zCUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDowNToxMFrOH43btA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMxODQ4MA==", "bodyText": "indentations missing?", "url": "https://github.com/vaadin/flow/pull/9427#discussion_r529318480", "createdAt": "2020-11-24T09:07:58Z", "author": {"login": "haijian-vaadin"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/ConnectionIndicator.ts", "diffHunk": "@@ -124,9 +124,9 @@ export class ConnectionIndicator extends LitElement {\n        style=\"${this.getLoadingBarStyle()}\"></div>\n \n       <div class=\"v-status-message ${classMap({\n-        active: this.reconnecting,\n-        modal: this.reconnectModal\n-      })}\">\n+      active: this.reconnecting,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6bb6b2b548838cf47d579c539063fdfbef26127"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM5MDUxNg==", "bodyText": "Done (apparently this was too difficult for my IDE to auto-indent properly).", "url": "https://github.com/vaadin/flow/pull/9427#discussion_r529390516", "createdAt": "2020-11-24T10:05:10Z", "author": {"login": "joheriks"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/ConnectionIndicator.ts", "diffHunk": "@@ -124,9 +124,9 @@ export class ConnectionIndicator extends LitElement {\n        style=\"${this.getLoadingBarStyle()}\"></div>\n \n       <div class=\"v-status-message ${classMap({\n-        active: this.reconnecting,\n-        modal: this.reconnectModal\n-      })}\">\n+      active: this.reconnecting,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMxODQ4MA=="}, "originalCommit": {"oid": "b6bb6b2b548838cf47d579c539063fdfbef26127"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2788, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}