{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxOTgyMzk0", "number": 8971, "title": "Do not force installation of compatible pnpm version when system property `vaadin.ignoreVersionChecks` is set", "bodyText": "Fixes #8889.", "createdAt": "2020-09-08T11:41:47Z", "url": "https://github.com/vaadin/flow/pull/8971", "merged": true, "mergeCommit": {"oid": "9b8409f90db89063c5c25c548f73bbd9b872b39f"}, "closed": true, "closedAt": "2020-09-10T08:18:08Z", "author": {"login": "joheriks"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG2SBEABqjM3NDA1NTU0MTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHbmmNAFqTQ4NTY1MDEyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c31b54f84c7e940bcae887437335586c44c5670c", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/c31b54f84c7e940bcae887437335586c44c5670c", "committedDate": "2020-09-08T11:36:08Z", "message": "Do not force installation of compatible pnpm version when system property `vaadin.ignoreVersionChecks` is set"}, "afterCommit": {"oid": "fc0086c0799371c20fca93e435fe74636a605e68", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/fc0086c0799371c20fca93e435fe74636a605e68", "committedDate": "2020-09-08T11:55:04Z", "message": "Do not force installation of compatible pnpm version when system property `vaadin.ignoreVersionChecks` is set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90605de29958098f5bfe7e704e76cf284d075db5", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/90605de29958098f5bfe7e704e76cf284d075db5", "committedDate": "2020-09-08T11:57:47Z", "message": "Do not force installation of compatible pnpm version when system property `vaadin.ignoreVersionChecks` is set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc0086c0799371c20fca93e435fe74636a605e68", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/fc0086c0799371c20fca93e435fe74636a605e68", "committedDate": "2020-09-08T11:55:04Z", "message": "Do not force installation of compatible pnpm version when system property `vaadin.ignoreVersionChecks` is set"}, "afterCommit": {"oid": "90605de29958098f5bfe7e704e76cf284d075db5", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/90605de29958098f5bfe7e704e76cf284d075db5", "committedDate": "2020-09-08T11:57:47Z", "message": "Do not force installation of compatible pnpm version when system property `vaadin.ignoreVersionChecks` is set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bbc265700d0303e3c0d74b32a90ba9e174b6805a", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/bbc265700d0303e3c0d74b32a90ba9e174b6805a", "committedDate": "2020-09-08T12:47:32Z", "message": "Address sonar concerns"}, "afterCommit": {"oid": "87db010b2d80ad940fdc5d33a2dad12c9697960f", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/87db010b2d80ad940fdc5d33a2dad12c9697960f", "committedDate": "2020-09-08T12:49:44Z", "message": "Address Sonar concerns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f6d11ec18e20403205d41fc88aaf2301fae9a01", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/0f6d11ec18e20403205d41fc88aaf2301fae9a01", "committedDate": "2020-09-08T13:53:32Z", "message": "Address Sonar concerns"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87db010b2d80ad940fdc5d33a2dad12c9697960f", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/87db010b2d80ad940fdc5d33a2dad12c9697960f", "committedDate": "2020-09-08T12:49:44Z", "message": "Address Sonar concerns"}, "afterCommit": {"oid": "0f6d11ec18e20403205d41fc88aaf2301fae9a01", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/0f6d11ec18e20403205d41fc88aaf2301fae9a01", "committedDate": "2020-09-08T13:53:32Z", "message": "Address Sonar concerns"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzY0NTgz", "url": "https://github.com/vaadin/flow/pull/8971#pullrequestreview-484764583", "createdAt": "2020-09-09T08:13:20Z", "commit": {"oid": "0f6d11ec18e20403205d41fc88aaf2301fae9a01"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoxMzoyMFrOHO71aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoxNjoxOVrOHO78Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyMjQ0MA==", "bodyText": "Two issues here:\n\nskip version check is done after version check. Version check may throw an exception and skip will not skip.\nFrontendTools has been created to avoid static things like  FrontendUtils.skippingVersionCheck.\n\nskip version check flag should be passed to the FrontendTools  CTOR.\nFrontendUtils  as a helper class should contain only helper generic methods.\nEverything else should be a state of FrontendTools otherwise it goes to the same direction as  FrontendTools", "url": "https://github.com/vaadin/flow/pull/8971#discussion_r485422440", "createdAt": "2020-09-09T08:13:20Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendTools.java", "diffHunk": "@@ -676,32 +676,39 @@ private String getNonNull(String... valueArray) {\n         return returnCommand;\n     }\n \n-    private List<String> getSuitablePnpm(String dir) {\n+    List<String> getSuitablePnpm(String dir) {\n         final List<String> pnpmCommand = getPnpmExecutable(dir, false);\n-        if (!pnpmCommand.isEmpty()) {\n-            // check whether globally or locally installed pnpm is new enough\n-            try {\n-                List<String> versionCmd = new ArrayList<>(pnpmCommand);\n-                versionCmd.add(\"--version\"); // NOSONAR\n-                FrontendVersion pnpmVersion = FrontendUtils.getVersion(\"pnpm\",\n-                        versionCmd);\n-                if (FrontendUtils.isVersionAtLeast(pnpmVersion,\n-                        SUPPORTED_PNPM_VERSION)\n-                        && pnpmVersion.isOlderThan(BREAKING_PNPM_VERSION)) {\n+        if (pnpmCommand.isEmpty()) {\n+            return Collections.emptyList();\n+        }\n+        // check whether globally or locally installed pnpm is new enough\n+        try {\n+            List<String> versionCmd = new ArrayList<>(pnpmCommand);\n+            versionCmd.add(\"--version\"); // NOSONAR\n+            FrontendVersion pnpmVersion = FrontendUtils.getVersion(\"pnpm\",\n+                    versionCmd);\n+            if (FrontendUtils.isVersionAtLeast(pnpmVersion,\n+                    SUPPORTED_PNPM_VERSION)\n+                    && pnpmVersion.isOlderThan(BREAKING_PNPM_VERSION)) {\n+                return pnpmCommand;\n+            } else {\n+                final String pnpmCommandString = String.join(\" \", pnpmCommand);\n+                getLogger().warn(\n+                        \"installed pnpm ('{}', version {}) is not in the compatible versions range (>={}, <{})\",\n+                        pnpmCommandString, pnpmVersion.getFullVersion(),\n+                        SUPPORTED_PNPM_VERSION.getFullVersion(),\n+                        BREAKING_PNPM_VERSION.getFullVersion());\n+                if (FrontendUtils.skippingVersionCheck()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f6d11ec18e20403205d41fc88aaf2301fae9a01"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyNDE4Ng==", "bodyText": "Making flag a parameter in the CTOR will allow to test FrontendTools  properly: without any system properties.\nEvery code which sets system property is not thread safe at least: the same property may be modified outside of this test at any time.", "url": "https://github.com/vaadin/flow/pull/8971#discussion_r485424186", "createdAt": "2020-09-09T08:16:19Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/frontend/FrontendToolsTest.java", "diffHunk": "@@ -489,6 +489,49 @@ public void should_useHomeNpmFirst() throws Exception {\n         assertNpmCommand(() -> vaadinHomeDir);\n     }\n \n+    @Test\n+    public void getSuitablePnpm_compatibleVersionInstalled_accepted() throws Exception {\n+        Assume.assumeFalse(\n+                tools.getNodeExecutable().isEmpty());\n+        createFakePnpm(\"4.5.0\");\n+        List<String> pnpmCommand = tools.getSuitablePnpm(baseDir);\n+        Assert.assertNotEquals(\"expected pnpm version 4.5.0 accepted\", 0,\n+                pnpmCommand.size());\n+    }\n+    @Test\n+    public void getSuitablePnpm_tooNewVersionInstalled_rejected() throws Exception {\n+        Assume.assumeFalse(\n+                tools.getNodeExecutable().isEmpty());\n+        createFakePnpm(\"5.5.0\");\n+        List<String> pnpmCommand = tools.getSuitablePnpm(baseDir);\n+        Assert.assertEquals(\"expected pnpm version 5.5.0 rejected\", 0,\n+                pnpmCommand.size());\n+    }\n+\n+    @Test\n+    public void getSuitablePnpm_tooNewVersionInstalledAndSkipVersionCheck_accepted()\n+            throws Exception {\n+        Assume.assumeFalse(\n+                tools.getNodeExecutable().isEmpty());\n+        String originalPropertyValue = System", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f6d11ec18e20403205d41fc88aaf2301fae9a01"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ec8b216bca3b8a224c2520a2a62fd838fc84701", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/5ec8b216bca3b8a224c2520a2a62fd838fc84701", "committedDate": "2020-09-09T14:24:47Z", "message": "Use found pnpm even if version check fails when `ignoreVersionChecks=true`. Package private ctor in FrontendTools with ignoreVersionChecks parameter."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NTkxNTA4", "url": "https://github.com/vaadin/flow/pull/8971#pullrequestreview-485591508", "createdAt": "2020-09-10T05:26:09Z", "commit": {"oid": "5ec8b216bca3b8a224c2520a2a62fd838fc84701"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNToyNjowOVrOHPjj8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNToyOToyN1rOHPjnhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA3MzMzMA==", "bodyText": "I would avoid version check via getVersion  at all if it should be ignored anyway: it takes additional time\nand it may throw an exception whose catching is always more expensive than just check a condition.\nNot blocking though.\nThe only benefit from the current code is logging about failed version check but this is something we failed internally: the node of course has some version and we just not able to detect it. So it's an internal issue which will be ignored anyway. So I don't see why spend significant time on checking something which won't be used anyway.", "url": "https://github.com/vaadin/flow/pull/8971#discussion_r486073330", "createdAt": "2020-09-10T05:26:09Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendTools.java", "diffHunk": "@@ -297,10 +308,12 @@ public void validateNodeAndNpmVersion() {\n             List<String> nodeVersionCommand = new ArrayList<>();\n             nodeVersionCommand.add(getNodeExecutable());\n             nodeVersionCommand.add(\"--version\"); // NOSONAR\n-            FrontendVersion nodeVersion = FrontendUtils.getVersion(\"node\",\n+            FrontendVersion foundNodeVersion = FrontendUtils.getVersion(\"node\",\n                     nodeVersionCommand);\n-            FrontendUtils.validateToolVersion(\"node\", nodeVersion,\n-                    SUPPORTED_NODE_VERSION, SHOULD_WORK_NODE_VERSION);\n+            if (!ignoreVersionChecks) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec8b216bca3b8a224c2520a2a62fd838fc84701"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA3NDI0NQ==", "bodyText": "Same here: check is done after attempt to get a version and check whether it's good enough.\nWhy just don't return immediately without any checks in case  ignoreVersionChecks?", "url": "https://github.com/vaadin/flow/pull/8971#discussion_r486074245", "createdAt": "2020-09-10T05:29:27Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendTools.java", "diffHunk": "@@ -676,34 +691,42 @@ private String getNonNull(String... valueArray) {\n         return returnCommand;\n     }\n \n-    private List<String> getSuitablePnpm(String dir) {\n+    List<String> getSuitablePnpm(String dir) {\n         final List<String> pnpmCommand = getPnpmExecutable(dir, false);\n-        if (!pnpmCommand.isEmpty()) {\n-            // check whether globally or locally installed pnpm is new enough\n-            try {\n-                List<String> versionCmd = new ArrayList<>(pnpmCommand);\n-                versionCmd.add(\"--version\"); // NOSONAR\n-                FrontendVersion pnpmVersion = FrontendUtils.getVersion(\"pnpm\",\n-                        versionCmd);\n-                if (FrontendUtils.isVersionAtLeast(pnpmVersion,\n-                        SUPPORTED_PNPM_VERSION)\n-                        && pnpmVersion.isOlderThan(BREAKING_PNPM_VERSION)) {\n-                    return pnpmCommand;\n-                } else {\n-                    getLogger().warn(String.format(\n-                            \"installed pnpm ('%s', version %s) is not in the compatible versions range (>=%s, <%s), installing supported version locally\",\n-                            String.join(\" \", pnpmCommand),\n-                            pnpmVersion.getFullVersion(),\n-                            SUPPORTED_PNPM_VERSION.getFullVersion(),\n-                            BREAKING_PNPM_VERSION.getFullVersion()));\n-                }\n-            } catch (UnknownVersionException e) {\n+        if (pnpmCommand.isEmpty()) {\n+            return Collections.emptyList();\n+        }\n+        final String pnpmCommandString = String.join(\" \", pnpmCommand);\n+        // check whether globally or locally installed pnpm is new enough\n+        try {\n+            List<String> versionCmd = new ArrayList<>(pnpmCommand);\n+            versionCmd.add(\"--version\"); // NOSONAR\n+            FrontendVersion pnpmVersion = FrontendUtils.getVersion(\"pnpm\",\n+                    versionCmd);\n+            if (FrontendUtils.isVersionAtLeast(pnpmVersion,\n+                    SUPPORTED_PNPM_VERSION)\n+                    && pnpmVersion.isOlderThan(BREAKING_PNPM_VERSION)) {\n+                return pnpmCommand;\n+            } else {\n                 getLogger().warn(\n-                        \"Error checking pnpm version, installing pnpm locally\",\n-                        e);\n+                        \"installed pnpm ('{}', version {}) is not in the compatible versions range (>={}, <{})\",\n+                        pnpmCommandString, pnpmVersion.getFullVersion(),\n+                        SUPPORTED_PNPM_VERSION.getFullVersion(),\n+                        BREAKING_PNPM_VERSION.getFullVersion());\n             }\n+        } catch (UnknownVersionException e) {\n+            getLogger().warn(\"error checking pnpm version\", e);\n+        }\n+        if (ignoreVersionChecks) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec8b216bca3b8a224c2520a2a62fd838fc84701"}, "originalPosition": 123}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e27ca09f882d066e29c9b39dac039d9d2af9cf1", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/8e27ca09f882d066e29c9b39dac039d9d2af9cf1", "committedDate": "2020-09-10T06:35:28Z", "message": "Skip version check altogether when ignoreVersionChecks flag is set"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NjUwMTI4", "url": "https://github.com/vaadin/flow/pull/8971#pullrequestreview-485650128", "createdAt": "2020-09-10T07:24:18Z", "commit": {"oid": "8e27ca09f882d066e29c9b39dac039d9d2af9cf1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 149, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}