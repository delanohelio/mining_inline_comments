{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNTkxODM2", "number": 8559, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MTo1NVrOEFBCBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjoxMTo0M1rOEFCVPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjk1MjM4OnYy", "diffSide": "RIGHT", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/HasDataView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MTo1NVrOGi_sKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MTo1NVrOGi_sKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODI2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Note! Using a ListDataProvider instead of a InMemoryDataProvider is\n          \n          \n            \n                 * Note! Using a {@link ListDataProvider} instead of a {@link InMemoryDataProvider} is", "url": "https://github.com/vaadin/flow/pull/8559#discussion_r439348266", "createdAt": "2020-06-12T10:51:55Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/HasDataView.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.data.provider;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Interface that defines methods for setting data.\n+ * This will return a {@link DataView}.\n+ *\n+ * @param <T>\n+ *         data type\n+ * @param <V>\n+ *         DataView type\n+ * @since\n+ */\n+public interface HasDataView<T, V extends DataView<T>> extends Serializable {\n+\n+    /**\n+     * Sets an InMemory data provider for the component to use.\n+     * <p>\n+     * Note! Using a ListDataProvider instead of a InMemoryDataProvider is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17221616adf61f9bd82f1c851a554a9774ab4fa9"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjk2NzA4OnYy", "diffSide": "RIGHT", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/HasDataView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1NjoxOFrOGi_0iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1NjoxOFrOGi_0iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1MDQwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * recommended to get more help from the DataView API.\n          \n          \n            \n                 * recommended to get access to\n          \n          \n            \n                 * {@link ListDataView} API by using\n          \n          \n            \n                 * {@link HasListDataView#setDataProvider(ListDataProvider)}.\n          \n          \n            \n            .", "url": "https://github.com/vaadin/flow/pull/8559#discussion_r439350409", "createdAt": "2020-06-12T10:56:18Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/HasDataView.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.data.provider;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Interface that defines methods for setting data.\n+ * This will return a {@link DataView}.\n+ *\n+ * @param <T>\n+ *         data type\n+ * @param <V>\n+ *         DataView type\n+ * @since\n+ */\n+public interface HasDataView<T, V extends DataView<T>> extends Serializable {\n+\n+    /**\n+     * Sets an InMemory data provider for the component to use.\n+     * <p>\n+     * Note! Using a ListDataProvider instead of a InMemoryDataProvider is\n+     * recommended to get more help from the DataView API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17221616adf61f9bd82f1c851a554a9774ab4fa9"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzE2NTQwOnYy", "diffSide": "RIGHT", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/HasDataView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjoxMTo0M1rOGjBtGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjoxMTo0M1rOGjBtGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4MTI3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Set a generic data provider dor the component to use.\n          \n          \n            \n                 * Set a generic data provider for the component to use.", "url": "https://github.com/vaadin/flow/pull/8559#discussion_r439381273", "createdAt": "2020-06-12T12:11:43Z", "author": {"login": "mshabarov"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/HasDataView.java", "diffHunk": "@@ -30,6 +30,18 @@\n  */\n public interface HasDataView<T, V extends DataView<T>> extends Serializable {\n \n+    /**\n+     * Set a generic data provider dor the component to use.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27ee14d2e141d97c9eda330bcd1322fd4897b842"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3505, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}