{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNjg2OTA2", "number": 9697, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODowNDo0OVrOFHSkKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODowNDo0OVrOFHSkKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTg4NTIzOnYy", "diffSide": "RIGHT", "path": "flow-client/src/test/frontend/FlowTests.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODowNDo1MFrOIItKdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODoxOToxM1rOIItrcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk5OTQ3Ng==", "bodyText": "Is this commented line needed?", "url": "https://github.com/vaadin/flow/pull/9697#discussion_r545999476", "createdAt": "2020-12-18T18:04:50Z", "author": {"login": "haijian-vaadin"}, "path": "flow-client/src/test/frontend/FlowTests.ts", "diffHunk": "@@ -488,20 +492,23 @@ suite(\"Flow\", () => {\n             return {cancel: true};\n           }})\n           .then(obj => assert.isTrue(obj.cancel));\n-\n       });\n   });\n \n-  test(\"onBeforeLeave should cancel `server->client` navigation\", () => {\n+  test(\"onBeforeLeave should cancel `server->client` navigation\", async () => {\n     // true to prevent navigation from server\n     stubServerRemoteFunction('foobar-12345', true);\n     mockInitResponse('foobar-12345');\n \n+    await new Promise(resolve => setTimeout(resolve, 150));\n+\n     const flow = new Flow();\n     const route = flow.serverSideRoutes[0];\n \n     return route.action({pathname: 'Foo'})\n       .then((elem: any) => {\n+        //await new Promise(resolve => setTimeout(resolve, 500));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b765461dd23f07925f884bfd9e7b3d4175448daf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMDUxNA==", "bodyText": "Good catch! Neither this comment nor the above await should be in the test, they are remnants from inserting waits to provoke the race condition. Removed.", "url": "https://github.com/vaadin/flow/pull/9697#discussion_r546000514", "createdAt": "2020-12-18T18:06:55Z", "author": {"login": "joheriks"}, "path": "flow-client/src/test/frontend/FlowTests.ts", "diffHunk": "@@ -488,20 +492,23 @@ suite(\"Flow\", () => {\n             return {cancel: true};\n           }})\n           .then(obj => assert.isTrue(obj.cancel));\n-\n       });\n   });\n \n-  test(\"onBeforeLeave should cancel `server->client` navigation\", () => {\n+  test(\"onBeforeLeave should cancel `server->client` navigation\", async () => {\n     // true to prevent navigation from server\n     stubServerRemoteFunction('foobar-12345', true);\n     mockInitResponse('foobar-12345');\n \n+    await new Promise(resolve => setTimeout(resolve, 150));\n+\n     const flow = new Flow();\n     const route = flow.serverSideRoutes[0];\n \n     return route.action({pathname: 'Foo'})\n       .then((elem: any) => {\n+        //await new Promise(resolve => setTimeout(resolve, 500));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk5OTQ3Ng=="}, "originalCommit": {"oid": "b765461dd23f07925f884bfd9e7b3d4175448daf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwNzkyMw==", "bodyText": "thanks, now it looks good", "url": "https://github.com/vaadin/flow/pull/9697#discussion_r546007923", "createdAt": "2020-12-18T18:19:13Z", "author": {"login": "haijian-vaadin"}, "path": "flow-client/src/test/frontend/FlowTests.ts", "diffHunk": "@@ -488,20 +492,23 @@ suite(\"Flow\", () => {\n             return {cancel: true};\n           }})\n           .then(obj => assert.isTrue(obj.cancel));\n-\n       });\n   });\n \n-  test(\"onBeforeLeave should cancel `server->client` navigation\", () => {\n+  test(\"onBeforeLeave should cancel `server->client` navigation\", async () => {\n     // true to prevent navigation from server\n     stubServerRemoteFunction('foobar-12345', true);\n     mockInitResponse('foobar-12345');\n \n+    await new Promise(resolve => setTimeout(resolve, 150));\n+\n     const flow = new Flow();\n     const route = flow.serverSideRoutes[0];\n \n     return route.action({pathname: 'Foo'})\n       .then((elem: any) => {\n+        //await new Promise(resolve => setTimeout(resolve, 500));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk5OTQ3Ng=="}, "originalCommit": {"oid": "b765461dd23f07925f884bfd9e7b3d4175448daf"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3775, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}