{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3ODUyMDMy", "number": 8598, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToxNzozMFrOEH4qfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTozMDo0NFrOEH49aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzAzODY5OnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/BinderNode.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToxNzozMFrOGngp7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzo0MTo1MlrOGoGmyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4MjY2OA==", "bodyText": "This relies on presence of impliesRequired: true validator now, does not need to assess the validator type anymore.", "url": "https://github.com/vaadin/flow/pull/8598#discussion_r444082668", "createdAt": "2020-06-23T09:17:30Z", "author": {"login": "platosha"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/BinderNode.ts", "diffHunk": "@@ -153,15 +152,7 @@ export class BinderNode<T, M extends AbstractModel<T>> {\n   }\n \n   get required() {\n-    return !!this[validatorsSymbol].find(val => {\n-      if (val instanceof Required) {\n-        return true;\n-      } else if (val instanceof Size) {\n-        const min = (val as Size).value.min;\n-        return min && min > 0;\n-      }\n-      return false;\n-    });\n+    return !!this[validatorsSymbol].find(val => !!val.impliesRequired);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4168278f4ca2f4f94ac9e626da51d04bc5e73eef"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcwNDQ1Nw==", "bodyText": "This can be slightly simplified by using some() (which returns a boolean) instead of find().\nAlso imo the explicit boolean cast !! inside the callback is unnecessary in this case (but it's also ok).\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return !!this[validatorsSymbol].find(val => !!val.impliesRequired);\n          \n          \n            \n                return this[validatorsSymbol].some(validator => validator.impliesRequired);", "url": "https://github.com/vaadin/flow/pull/8598#discussion_r444704457", "createdAt": "2020-06-24T07:41:52Z", "author": {"login": "Haprog"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/BinderNode.ts", "diffHunk": "@@ -153,15 +152,7 @@ export class BinderNode<T, M extends AbstractModel<T>> {\n   }\n \n   get required() {\n-    return !!this[validatorsSymbol].find(val => {\n-      if (val instanceof Required) {\n-        return true;\n-      } else if (val instanceof Size) {\n-        const min = (val as Size).value.min;\n-        return min && min > 0;\n-      }\n-      return false;\n-    });\n+    return !!this[validatorsSymbol].find(val => !!val.impliesRequired);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4MjY2OA=="}, "originalCommit": {"oid": "4168278f4ca2f4f94ac9e626da51d04bc5e73eef"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzA1MjM3OnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyMTozN1rOGngzPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyMTozN1rOGngzPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4NTA1NQ==", "bodyText": "Renamed from options to attributes for couple of reasons:\n\nmost often these are not optional, but rather required for validators to specify\nin Java annotations the term attributes is used\n\nAlso used interfaces instead of type aliases for consistency, as all of them specify object contents.", "url": "https://github.com/vaadin/flow/pull/8598#discussion_r444085055", "createdAt": "2020-06-23T09:21:37Z", "author": {"login": "platosha"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "diffHunk": "@@ -3,24 +3,40 @@\n import * as validator from 'validator';\n import { Validator } from './Validation';\n \n-interface FormOptions { message?: string };\n-type ValueNumberOptions = FormOptions & { value: number | string };\n-type DigitOptions = FormOptions & { integer: number, fraction: number };\n-type SizeOptions = FormOptions & { min?: number, max?: number };\n-type PatternOptions = FormOptions & { regexp: RegExp | string };\n-type DecimalOptions = ValueNumberOptions & { inclusive: boolean | undefined };\n+interface ValidatorAttributes {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4168278f4ca2f4f94ac9e626da51d04bc5e73eef"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzA1ODIyOnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validation.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyMzoxM1rOGng3Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyMzoxM1rOGng3Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4NjAzMQ==", "bodyText": "Added a flag. The old value referred to validator constrain argument (e. g., minimum value specified in annotation), removed from here to reduce confusion.", "url": "https://github.com/vaadin/flow/pull/8598#discussion_r444086031", "createdAt": "2020-06-23T09:23:13Z", "author": {"login": "platosha"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validation.ts", "diffHunk": "@@ -29,7 +29,7 @@ export type ValidationCallback<T> = (value: T) => boolean | ValueError<T> | void\n export interface Validator<T> {\n   validate: ValidationCallback<T>,\n   message: string,\n-  value?: any\n+  impliesRequired?: boolean", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4168278f4ca2f4f94ac9e626da51d04bc5e73eef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzA1ODQ5OnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyMzoxNlrOGng3Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyMzoxNlrOGng3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4NjA3MA==", "bodyText": "Not strictly required in runtime, but still specifying this explicitly. This allows for simple asserting false in the tests.", "url": "https://github.com/vaadin/flow/pull/8598#discussion_r444086070", "createdAt": "2020-06-23T09:23:16Z", "author": {"login": "platosha"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "diffHunk": "@@ -3,24 +3,40 @@\n import * as validator from 'validator';\n import { Validator } from './Validation';\n \n-interface FormOptions { message?: string };\n-type ValueNumberOptions = FormOptions & { value: number | string };\n-type DigitOptions = FormOptions & { integer: number, fraction: number };\n-type SizeOptions = FormOptions & { min?: number, max?: number };\n-type PatternOptions = FormOptions & { regexp: RegExp | string };\n-type DecimalOptions = ValueNumberOptions & { inclusive: boolean | undefined };\n+interface ValidatorAttributes {\n+  message?: string;\n+}\n+interface ValueNumberAttributes extends ValidatorAttributes {\n+  value: number | string;\n+}\n+interface DigitAttributes extends ValidatorAttributes {\n+  integer: number;\n+  fraction: number;\n+}\n+interface SizeAttributes extends ValidatorAttributes {\n+  min?: number;\n+  max?: number;\n+}\n+interface PatternAttributes extends ValidatorAttributes {\n+  regexp: RegExp | string;\n+}\n+interface DecimalAttributes extends ValueNumberAttributes {\n+  inclusive?: boolean;\n+}\n \n abstract class AbstractValidator<T> implements Validator<T> {\n   message = 'invalid';\n-  constructor(options?: FormOptions) {\n-    if (options && options.message) {\n-      this.message = options.message;\n+  impliesRequired = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4168278f4ca2f4f94ac9e626da51d04bc5e73eef"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzA2NjUwOnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyNToxOFrOGng8Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyNToxOFrOGng8Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4NzM1NQ==", "bodyText": "Exposed attribute keys on the validator directly, removing the wrapper object for consistency with other validators.", "url": "https://github.com/vaadin/flow/pull/8598#discussion_r444087355", "createdAt": "2020-06-23T09:25:18Z", "author": {"login": "platosha"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "diffHunk": "@@ -97,28 +113,35 @@ export class PositiveOrZero extends AbstractValidator<any> {\n }\n \n export class Size extends AbstractValidator<string> {\n-  value: SizeOptions;\n-  constructor(opts: SizeOptions) {\n-    super(opts);\n-    this.value = { min: opts.min || 0, max: opts.max || 0x7fffffff };\n+  min: number;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4168278f4ca2f4f94ac9e626da51d04bc5e73eef"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzA4NzEyOnYy", "diffSide": "RIGHT", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTozMDo0NFrOGnhJEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTozMDo0NFrOGnhJEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5MDY0Mw==", "bodyText": "Minimum greater than zero means required.", "url": "https://github.com/vaadin/flow/pull/8598#discussion_r444090643", "createdAt": "2020-06-23T09:30:44Z", "author": {"login": "platosha"}, "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "diffHunk": "@@ -97,28 +113,35 @@ export class PositiveOrZero extends AbstractValidator<any> {\n }\n \n export class Size extends AbstractValidator<string> {\n-  value: SizeOptions;\n-  constructor(opts: SizeOptions) {\n-    super(opts);\n-    this.value = { min: opts.min || 0, max: opts.max || 0x7fffffff };\n+  min: number;\n+  max: number;\n+  constructor(attrs: SizeAttributes) {\n+    super(attrs);\n+    this.min = attrs.min || 0;\n+    this.max = attrs.max || Number.MAX_SAFE_INTEGER;\n+    if (this.min > 0) {\n+      this.impliesRequired = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4168278f4ca2f4f94ac9e626da51d04bc5e73eef"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3275, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}