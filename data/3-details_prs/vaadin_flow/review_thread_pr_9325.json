{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MTEzODc3", "number": 9325, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzozMzoxOVrOE1-Wvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDozODozM1rOE2CJJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDMxNjE1OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-ccdm-flow-navigation/src/test/java/com/vaadin/flow/navigate/ServiceWorkerIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzozMzoxOVrOHui6GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzozOTo1OFrOHujEVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU2ODQ3Mg==", "bodyText": "I think we don't need to ignore this test?", "url": "https://github.com/vaadin/flow/pull/9325#discussion_r518568472", "createdAt": "2020-11-06T07:33:19Z", "author": {"login": "haijian-vaadin"}, "path": "flow-tests/test-ccdm-flow-navigation/src/test/java/com/vaadin/flow/navigate/ServiceWorkerIT.java", "diffHunk": "@@ -129,4 +131,79 @@ public void openTsView_goOffline_navigateToOtherTsView_navigationSuccessful() th\n         }\n     }\n \n+    @Test\n+    @Ignore\n+    // This test fails currently because leaveNavigation currently tries to\n+    // connect to the server in offline mode.\n+    public void offlineServerView_navigateToTsView_navigationSuccessful() throws IOException {\n+        getDriver().get(getRootURL() + \"/hello\");\n+        waitForServiceWorkerReady();\n+\n+        // Set offline network conditions in ChromeDriver\n+        setConnectionType(NetworkConnection.ConnectionType.AIRPLANE_MODE);\n+\n+        try {\n+            $(\"main-view\").first().$(\"a\").id(\"menu-another\").click();\n+\n+            // Wait for component inside shadow root as there is no vaadin\n+            // to wait for as with server-side\n+            waitUntil(input -> $(\"another-view\").first().$(\"div\").id(\"another-content\")\n+                    .isDisplayed());\n+\n+            MatcherAssert.assertThat(getDriver().getCurrentUrl(),\n+                    CoreMatchers.endsWith(\"/another\"));\n+            Assert.assertTrue(getInShadowRoot(findElement(By.tagName(\"another-view\")),\n+                    By.id(\"another-content\")).isDisplayed());\n+        } finally {\n+            // Reset network conditions back\n+            setConnectionType(NetworkConnection.ConnectionType.ALL);\n+        }\n+    }\n+\n+    @Test\n+    @Ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63c995df8a9bb2ac3279428cccb887819e5d4b08"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3MTA5Mw==", "bodyText": "Yes, it was a mistake. Fixed.", "url": "https://github.com/vaadin/flow/pull/9325#discussion_r518571093", "createdAt": "2020-11-06T07:39:58Z", "author": {"login": "joheriks"}, "path": "flow-tests/test-ccdm-flow-navigation/src/test/java/com/vaadin/flow/navigate/ServiceWorkerIT.java", "diffHunk": "@@ -129,4 +131,79 @@ public void openTsView_goOffline_navigateToOtherTsView_navigationSuccessful() th\n         }\n     }\n \n+    @Test\n+    @Ignore\n+    // This test fails currently because leaveNavigation currently tries to\n+    // connect to the server in offline mode.\n+    public void offlineServerView_navigateToTsView_navigationSuccessful() throws IOException {\n+        getDriver().get(getRootURL() + \"/hello\");\n+        waitForServiceWorkerReady();\n+\n+        // Set offline network conditions in ChromeDriver\n+        setConnectionType(NetworkConnection.ConnectionType.AIRPLANE_MODE);\n+\n+        try {\n+            $(\"main-view\").first().$(\"a\").id(\"menu-another\").click();\n+\n+            // Wait for component inside shadow root as there is no vaadin\n+            // to wait for as with server-side\n+            waitUntil(input -> $(\"another-view\").first().$(\"div\").id(\"another-content\")\n+                    .isDisplayed());\n+\n+            MatcherAssert.assertThat(getDriver().getCurrentUrl(),\n+                    CoreMatchers.endsWith(\"/another\"));\n+            Assert.assertTrue(getInShadowRoot(findElement(By.tagName(\"another-view\")),\n+                    By.id(\"another-content\")).isDisplayed());\n+        } finally {\n+            // Reset network conditions back\n+            setConnectionType(NetworkConnection.ConnectionType.ALL);\n+        }\n+    }\n+\n+    @Test\n+    @Ignore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU2ODQ3Mg=="}, "originalCommit": {"oid": "63c995df8a9bb2ac3279428cccb887819e5d4b08"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDkzNjcwOnYy", "diffSide": "RIGHT", "path": "flow-tests/test-ccdm-flow-navigation/src/test/java/com/vaadin/flow/navigate/ServiceWorkerIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDozODozM1rOHuo0Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDozODozM1rOHuo0Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY2NTIxOA==", "bodyText": "BTW there is one ignored test in test-ccdm module: com.vaadin.flow.ccdmtest.IndexHtmlRequestHandlerIT#should_installServiceWorker\nI verified, it is passing if running in a ChromeDeviceTest suite. So the ignoring could be removed. Should we move it here, perhaps?", "url": "https://github.com/vaadin/flow/pull/9325#discussion_r518665218", "createdAt": "2020-11-06T10:38:33Z", "author": {"login": "platosha"}, "path": "flow-tests/test-ccdm-flow-navigation/src/test/java/com/vaadin/flow/navigate/ServiceWorkerIT.java", "diffHunk": "@@ -129,4 +131,78 @@ public void openTsView_goOffline_navigateToOtherTsView_navigationSuccessful() th\n         }\n     }\n \n+    @Test\n+    @Ignore\n+    // This test fails currently because leaveNavigation currently tries to\n+    // connect to the server in offline mode.\n+    public void offlineServerView_navigateToTsView_navigationSuccessful() throws IOException {\n+        getDriver().get(getRootURL() + \"/hello\");\n+        waitForServiceWorkerReady();\n+\n+        // Set offline network conditions in ChromeDriver\n+        setConnectionType(NetworkConnection.ConnectionType.AIRPLANE_MODE);\n+\n+        try {\n+            $(\"main-view\").first().$(\"a\").id(\"menu-another\").click();\n+\n+            // Wait for component inside shadow root as there is no vaadin\n+            // to wait for as with server-side\n+            waitUntil(input -> $(\"another-view\").first().$(\"div\").id(\"another-content\")\n+                    .isDisplayed());\n+\n+            MatcherAssert.assertThat(getDriver().getCurrentUrl(),\n+                    CoreMatchers.endsWith(\"/another\"));\n+            Assert.assertTrue(getInShadowRoot(findElement(By.tagName(\"another-view\")),\n+                    By.id(\"another-content\")).isDisplayed());\n+        } finally {\n+            // Reset network conditions back\n+            setConnectionType(NetworkConnection.ConnectionType.ALL);\n+        }\n+    }\n+\n+    @Test\n+    public void offlineTsView_navigateToServerView_offlineStubShown()\n+            throws IOException {\n+        getDriver().get(getRootURL() + \"/another\");\n+        waitForServiceWorkerReady();\n+\n+        setConnectionType(NetworkConnection.ConnectionType.AIRPLANE_MODE);\n+        try {\n+            $(\"main-view\").first().$(\"a\").id(\"menu-hello\").click();\n+\n+            waitForElementPresent(By.tagName(\"vaadin-offline-stub\"));\n+            WebElement offlineStub = findElement(\n+                    By.tagName(\"vaadin-offline-stub\"));\n+\n+            Assert.assertFalse(\n+                    \"vaadin-offline-stub shadow root expected to contain an element with class offline\",\n+                    findInShadowRoot(offlineStub, By.className(\"offline\"))\n+                            .isEmpty());\n+        } finally {\n+            setConnectionType(NetworkConnection.ConnectionType.ALL);\n+        }\n+    }\n+\n+    @Test\n+    public void offlineServerView_navigateToServerView_offlineStubShown()\n+            throws IOException {\n+        getDriver().get(getRootURL() + \"/hello\");\n+        waitForServiceWorkerReady();\n+\n+        setConnectionType(NetworkConnection.ConnectionType.AIRPLANE_MODE);\n+        try {\n+            $(\"main-view\").first().$(\"a\").id(\"menu-hello\").click();\n+\n+            waitForElementPresent(By.tagName(\"vaadin-offline-stub\"));\n+            WebElement offlineStub = findElement(\n+                    By.tagName(\"vaadin-offline-stub\"));\n+\n+            Assert.assertFalse(\n+                    \"vaadin-offline-stub shadow root expected to contain an element with class offline\",\n+                    findInShadowRoot(offlineStub, By.className(\"offline\"))\n+                            .isEmpty());\n+        } finally {\n+            setConnectionType(NetworkConnection.ConnectionType.ALL);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de6f26bc192532f271a7cab874808b2c6b05a81"}, "originalPosition": 116}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3004, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}