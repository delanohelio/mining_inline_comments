{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MjM5ODYz", "number": 8925, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOTowMjowMFrOEfXBRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoxMjozMVrOEf1giQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzE4NDY4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOTowMjowMFrOHLlsUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOTowMjowMFrOHLlsUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkxMzkzNw==", "bodyText": "Should this be somehow reformulated to include pnpm as it's the default now?\n(p)npm install or pnpm/npm install or just check it from the configuration and give the correct one expected to be used. As running the wrong one will create slowness and possibly even mess up the node_modules folder.", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r481913937", "createdAt": "2020-09-02T09:02:00Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -570,6 +505,162 @@ private void saveRunningDevServerPort() {\n         }\n     }\n \n+    private void doStartDevModeServer(DeploymentConfiguration config)\n+            throws ExecutionFailedException {\n+        // If port is defined, means that webpack is already running\n+        if (port > 0) {\n+            if (checkWebpackConnection()) {\n+                getLogger().info(\"Reusing webpack-dev-server running at {}:{}\",\n+                        WEBPACK_HOST, port);\n+\n+                // Save running port for next usage\n+                saveRunningDevServerPort();\n+                watchDog.set(null);\n+                return;\n+            }\n+            throw new IllegalStateException(String.format(\n+                    \"%s webpack-dev-server port '%d' is defined but it's not working properly\",\n+                    START_FAILURE, port));\n+        }\n+        // here the port == 0\n+        Pair<File, File> webPackFiles = validateFiles(npmFolder);\n+\n+        long start = System.nanoTime();\n+        getLogger().info(\"Starting webpack-dev-server\");\n+\n+        watchDog.set(new DevServerWatchDog());\n+\n+        // Look for a free port\n+        port = getFreePort();\n+\n+        ProcessBuilder processBuilder = new ProcessBuilder()\n+                .directory(npmFolder);\n+\n+        FrontendTools tools = new FrontendTools(npmFolder.getAbsolutePath(),\n+                () -> FrontendUtils.getVaadinHomeDirectory().getAbsolutePath());\n+        tools.validateNodeAndNpmVersion();\n+\n+        boolean useHomeNodeExec = config.getBooleanProperty(\n+                InitParameters.REQUIRE_HOME_NODE_EXECUTABLE, false);\n+\n+        String nodeExec = null;\n+        if (useHomeNodeExec) {\n+            nodeExec = tools.forceAlternativeNodeExecutable();\n+        } else {\n+            nodeExec = tools.getNodeExecutable();\n+        }\n+\n+        List<String> command = makeCommands(config, webPackFiles.getFirst(),\n+                webPackFiles.getSecond(), nodeExec);\n+\n+        console(GREEN, START);\n+        if (getLogger().isDebugEnabled()) {\n+            getLogger().debug(\n+                    commandToString(npmFolder.getAbsolutePath(), command));\n+        }\n+\n+        processBuilder.command(command);\n+        try {\n+            webpackProcess.set(\n+                    processBuilder.redirectError(ProcessBuilder.Redirect.PIPE)\n+                            .redirectErrorStream(true).start());\n+\n+            // We only can save the webpackProcess reference the first time that\n+            // the DevModeHandler is created. There is no way to store\n+            // it in the servlet container, and we do not want to save it in the\n+            // global JVM.\n+            // We instruct the JVM to stop the webpack-dev-server daemon when\n+            // the JVM stops, to avoid leaving daemons running in the system.\n+            // NOTE: that in the corner case that the JVM crashes or it is\n+            // killed\n+            // the daemon will be kept running. But anyways it will also happens\n+            // if the system was configured to be stop the daemon when the\n+            // servlet context is destroyed.\n+            Runtime.getRuntime().addShutdownHook(new Thread(this::stop));\n+\n+            Pattern succeed = Pattern.compile(config.getStringProperty(\n+                    SERVLET_PARAMETER_DEVMODE_WEBPACK_SUCCESS_PATTERN,\n+                    DEFAULT_OUTPUT_PATTERN));\n+\n+            Pattern failure = Pattern.compile(config.getStringProperty(\n+                    SERVLET_PARAMETER_DEVMODE_WEBPACK_ERROR_PATTERN,\n+                    DEFAULT_ERROR_PATTERN));\n+\n+            logStream(webpackProcess.get().getInputStream(), succeed, failure);\n+\n+            getLogger().info(LOG_START);\n+            synchronized (this) {\n+                this.wait(Integer.parseInt(config.getStringProperty( // NOSONAR\n+                        SERVLET_PARAMETER_DEVMODE_WEBPACK_TIMEOUT,\n+                        DEFAULT_TIMEOUT_FOR_PATTERN)));\n+            }\n+\n+            if (!webpackProcess.get().isAlive()) {\n+                throw new IllegalStateException(\"Webpack exited prematurely\");\n+            }\n+\n+            long ms = (System.nanoTime() - start) / 1000000;\n+            getLogger().info(LOG_END, ms);\n+            saveRunningDevServerPort();\n+        } catch (IOException | InterruptedException e) {\n+            getLogger().error(\"Failed to start the webpack process\", e);\n+        }\n+    }\n+\n+    private List<String> makeCommands(DeploymentConfiguration config,\n+            File webpack, File webpackConfig, String nodeExec) {\n+        List<String> command = new ArrayList<>();\n+        command.add(nodeExec);\n+        command.add(webpack.getAbsolutePath());\n+        command.add(\"--config\");\n+        command.add(webpackConfig.getAbsolutePath());\n+        command.add(\"--port\");\n+        command.add(String.valueOf(port));\n+        command.add(\"--watchDogPort=\" + watchDog.get().getWatchDogPort());\n+        command.addAll(Arrays.asList(config\n+                .getStringProperty(SERVLET_PARAMETER_DEVMODE_WEBPACK_OPTIONS,\n+                        \"-d --inline=false\")\n+                .split(\" +\")));\n+        return command;\n+    }\n+\n+    private Pair<File, File> validateFiles(File npmFolder)\n+            throws ExecutionFailedException {\n+        assert port == 0;\n+        // Skip checks if we have a webpack-dev-server already running\n+        File webpack = new File(npmFolder, WEBPACK_SERVER);\n+        File webpackConfig = new File(npmFolder, FrontendUtils.WEBPACK_CONFIG);\n+        if (!npmFolder.exists()) {\n+            getLogger().warn(\"No project folder '{}' exists\", npmFolder);\n+            throw new ExecutionFailedException(START_FAILURE\n+                    + \" the target execution folder doesn't exist.\");\n+        }\n+        if (!webpack.exists()) {\n+            getLogger().warn(\"'{}' doesn't exist. Did you run `npm install`?\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777ceac82e75e1671325d3ccdc69095fc90cdfac"}, "originalPosition": 543}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzIwNjkzOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendToolsLocator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOTowNjoyMVrOHLl6ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOTowNjoyMVrOHLl6ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkxNzYwMw==", "bodyText": "Unrelated formatting changes in File.", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r481917603", "createdAt": "2020-09-02T09:06:21Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendToolsLocator.java", "diffHunk": "@@ -154,10 +154,11 @@ boolean isWindows() {\n         }\n         List<String> stdout = new ArrayList<>();\n         try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777ceac82e75e1671325d3ccdc69095fc90cdfac"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY5MDI3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/com/vaadin/flow/server/dev-mode-not-ready.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxOToxNVrOHLqelg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxOToxNVrOHLqelg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MjM0Mg==", "bodyText": "Non-blocking: we should try to avoid double negation, this should have been devServerIsLoaded but not worth to change it now", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r481992342", "createdAt": "2020-09-02T11:19:15Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/resources/com/vaadin/flow/server/dev-mode-not-ready.html", "diffHunk": "@@ -0,0 +1,62 @@\n+<html>\n+<head>\n+<style>\n+.flex-center {\n+    display: flex;\n+    width: 100%;\n+    justify-content: center;\n+    margin-top: 1rem;\n+}\n+\n+.message {\n+    position: relative;\n+    background-color: rgba(50,50,50,1);\n+    color: rgba(255,255,255,.9);\n+    border-radius: 1rem;\n+    box-sizing: border-box;\n+    padding: 0.5em 1em 0.5em 2.25em;\n+    line-height: 1;\n+    font-family: system-ui;\n+}\n+\n+/* Spinner */\n+.message:before {\n+  content: '';\n+  box-sizing: border-box;\n+  position: absolute;\n+  top: 50%;\n+  left: 1rem;\n+  width: 20px;\n+  height: 20px;\n+  margin-top: -10px;\n+  margin-left: -10px;\n+  border-radius: 50%;\n+  border: 2px solid #2CA6FF;\n+  border-top-color: rgba(50,50,50,1);\n+  animation: spinner .6s linear infinite;\n+}\n+\n+@keyframes spinner {\n+  to {transform: rotate(360deg);}\n+}\n+</style>\n+<script type=\"text/javascript\">\n+\n+// Set specific flag for TB and make sure that there are no any clients.\n+// It allows to work correct waitForVaadin in TB\n+window.Vaadin = {Flow: {devServerIsNotLoaded: true}};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDE3NTAxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoyNzoyOVrOHLvEaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNTo1ODoyMFrOHMW_MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2NzU2Mw==", "bodyText": "Just a note that now the start time is recorded during a different phase, it used to be just before the processbuilder.command(command);.\nIs this change intentional and why ? I know it hardly matters for the execution itself, just curious as there is some additional things now done after that compared to before.", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482067563", "createdAt": "2020-09-02T13:27:29Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -570,6 +505,162 @@ private void saveRunningDevServerPort() {\n         }\n     }\n \n+    private void doStartDevModeServer(DeploymentConfiguration config)\n+            throws ExecutionFailedException {\n+        // If port is defined, means that webpack is already running\n+        if (port > 0) {\n+            if (checkWebpackConnection()) {\n+                getLogger().info(\"Reusing webpack-dev-server running at {}:{}\",\n+                        WEBPACK_HOST, port);\n+\n+                // Save running port for next usage\n+                saveRunningDevServerPort();\n+                watchDog.set(null);\n+                return;\n+            }\n+            throw new IllegalStateException(String.format(\n+                    \"%s webpack-dev-server port '%d' is defined but it's not working properly\",\n+                    START_FAILURE, port));\n+        }\n+        // here the port == 0\n+        Pair<File, File> webPackFiles = validateFiles(npmFolder);\n+\n+        long start = System.nanoTime();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 432}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyMTU4NA==", "bodyText": "Right....\nIt's consistent with the master  branch now:\nhttps://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java#L540\nBut yes, it was in another place.\nOK, I will move it there.", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482721584", "createdAt": "2020-09-03T05:58:20Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -570,6 +505,162 @@ private void saveRunningDevServerPort() {\n         }\n     }\n \n+    private void doStartDevModeServer(DeploymentConfiguration config)\n+            throws ExecutionFailedException {\n+        // If port is defined, means that webpack is already running\n+        if (port > 0) {\n+            if (checkWebpackConnection()) {\n+                getLogger().info(\"Reusing webpack-dev-server running at {}:{}\",\n+                        WEBPACK_HOST, port);\n+\n+                // Save running port for next usage\n+                saveRunningDevServerPort();\n+                watchDog.set(null);\n+                return;\n+            }\n+            throw new IllegalStateException(String.format(\n+                    \"%s webpack-dev-server port '%d' is defined but it's not working properly\",\n+                    START_FAILURE, port));\n+        }\n+        // here the port == 0\n+        Pair<File, File> webPackFiles = validateFiles(npmFolder);\n+\n+        long start = System.nanoTime();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2NzU2Mw=="}, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 432}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDIxNDU0OnYy", "diffSide": "RIGHT", "path": "flow-test-util/src/main/java/com/vaadin/flow/testutil/TestBenchHelpers.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzozNjoxM1rOHLvdLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoyNzo0M1rOHMXpsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA3MzkwMw==", "bodyText": "I'm sure this has been discussed earlier too, but I'm going still ask: why do we need to explicitly wait for it in tests instead of just fixing TB or Flow's wait for Vaadin to handle it automatically when devserver is being run ?", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482073903", "createdAt": "2020-09-02T13:36:13Z", "author": {"login": "pleku"}, "path": "flow-test-util/src/main/java/com/vaadin/flow/testutil/TestBenchHelpers.java", "diffHunk": "@@ -398,6 +398,19 @@ protected void checkLogsForErrors() {\n         checkLogsForErrors(msg -> false);\n     }\n \n+    /**\n+     * If dev server start in progress wait until it's started. Otherwise return\n+     * immidiately.\n+     */\n+    protected void waitForDevServer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyMjIzNg==", "bodyText": "TB is a different product.\nI've asked to fix that in TB and explained how.\nBut nobody cared.\nThe original PR couldn't pass the validation without this fix.\nSo it was necessary. And it's still necessary to make validation passing at the moment.\nTB may be fixed separately and then this can be removed.", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482722236", "createdAt": "2020-09-03T06:00:13Z", "author": {"login": "denis-anisimov"}, "path": "flow-test-util/src/main/java/com/vaadin/flow/testutil/TestBenchHelpers.java", "diffHunk": "@@ -398,6 +398,19 @@ protected void checkLogsForErrors() {\n         checkLogsForErrors(msg -> false);\n     }\n \n+    /**\n+     * If dev server start in progress wait until it's started. Otherwise return\n+     * immidiately.\n+     */\n+    protected void waitForDevServer() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA3MzkwMw=="}, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyNTA1Mg==", "bodyText": "As a reminder, to the users there is one product: Vaadin. And if users tests get broken because we're are making changes in the ways things are working, we are (in my opinion) responsible for that.\nWe should be probably in the best position to contribute it to https://github.com/vaadin/testbench/blob/23efeafc771448876886233123bc12dcc4cdd45e/vaadin-testbench-core/src/main/java/com/vaadin/testbench/DriverInvocationHandler.java#L64\nAt least then we could remove this debt from our testing code. Can you create a ticket about this or is there one already ? If there is, then it should be mentioned here.", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482725052", "createdAt": "2020-09-03T06:08:07Z", "author": {"login": "pleku"}, "path": "flow-test-util/src/main/java/com/vaadin/flow/testutil/TestBenchHelpers.java", "diffHunk": "@@ -398,6 +398,19 @@ protected void checkLogsForErrors() {\n         checkLogsForErrors(msg -> false);\n     }\n \n+    /**\n+     * If dev server start in progress wait until it's started. Otherwise return\n+     * immidiately.\n+     */\n+    protected void waitForDevServer() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA3MzkwMw=="}, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczMTQyNg==", "bodyText": "There is a ticket : vaadin/testbench#1244", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482731426", "createdAt": "2020-09-03T06:25:07Z", "author": {"login": "denis-anisimov"}, "path": "flow-test-util/src/main/java/com/vaadin/flow/testutil/TestBenchHelpers.java", "diffHunk": "@@ -398,6 +398,19 @@ protected void checkLogsForErrors() {\n         checkLogsForErrors(msg -> false);\n     }\n \n+    /**\n+     * If dev server start in progress wait until it's started. Otherwise return\n+     * immidiately.\n+     */\n+    protected void waitForDevServer() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA3MzkwMw=="}, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczMjQ2NQ==", "bodyText": "This is a cherry-pick.\nSo technically this should have been done (or not) in the master  branch.\nNow we desync the branches.", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482732465", "createdAt": "2020-09-03T06:27:43Z", "author": {"login": "denis-anisimov"}, "path": "flow-test-util/src/main/java/com/vaadin/flow/testutil/TestBenchHelpers.java", "diffHunk": "@@ -398,6 +398,19 @@ protected void checkLogsForErrors() {\n         checkLogsForErrors(msg -> false);\n     }\n \n+    /**\n+     * If dev server start in progress wait until it's started. Otherwise return\n+     * immidiately.\n+     */\n+    protected void waitForDevServer() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA3MzkwMw=="}, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDI0NjE4OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo0Mzo0MFrOHLvxpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo0Mzo0MFrOHLvxpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA3OTE0MQ==", "bodyText": "Maybe might be a good clarifying comment to the test that this is not really part of the test, but instead just for waiting for the devserver to be done", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482079141", "createdAt": "2020-09-02T13:43:40Z", "author": {"login": "pleku"}, "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "diffHunk": "@@ -25,18 +25,29 @@\n \n import org.junit.Assert;\n import org.junit.Test;\n+import org.openqa.selenium.By;\n \n-public class StartupPerformanceIT {\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+public class StartupPerformanceIT extends ChromeBrowserTest {\n     @Test\n-    public void devModeInitializerToWebpackUpIsBelow5500ms() {\n+    public void devModeInitializerToWebpackUpIsBelowThreshold() {\n+        getDriver().get(getRootURL());\n+        waitForDevServer();\n+\n+        long timeoutTime = System.currentTimeMillis() + 20000;\n+        while (System.currentTimeMillis() < timeoutTime\n+                && !isElementPresent(By.id(\"performance-component\"))) {\n+            getDriver().navigate().refresh();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDMwOTc1OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/DevModeHandlerStopTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo1Njo0M1rOHLwYwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoxNjoyOVrOHMXYQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA4OTE1Mw==", "bodyText": "This test class is ignored for flakiness for Java 11 and PR validation (?).\nIt could instead be configured for the surefire plugin to be included/excluded in certain JDK version activated profile. Now it seems to me we are never running this test even though it might pass.\nBut I suppose this is a non-blocking comment...", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482089153", "createdAt": "2020-09-02T13:56:43Z", "author": {"login": "pleku"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/DevModeHandlerStopTest.java", "diffHunk": "@@ -93,7 +94,8 @@ public void devModeHandler_should_StopWebPack() throws Exception {\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyODAwMQ==", "bodyText": "Github.\nThere are no changes in this method: it's not removed or ignored.\nIt's here : https://github.com/vaadin/flow/blob/2729a22dd4f0c916e3251240b17f0646f70a71b7/flow-server/src/test/java/com/vaadin/flow/server/DevModeHandlerStopTest.java", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482728001", "createdAt": "2020-09-03T06:16:29Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/DevModeHandlerStopTest.java", "diffHunk": "@@ -93,7 +94,8 @@ public void devModeHandler_should_StopWebPack() throws Exception {\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA4OTE1Mw=="}, "originalCommit": {"oid": "5fc7f5835f53b03a6cac7f74997153e0f1bdb020"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODE3OTkzOnYy", "diffSide": "RIGHT", "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoxMjozMVrOHMXSzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjozMToxNlrOHMXvqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyNjYwNA==", "bodyText": "But this issue is for 15+ so why is it picked for 14 ??? It should not be here. 14 should have 5500", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482726604", "createdAt": "2020-09-03T06:12:31Z", "author": {"login": "pleku"}, "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "diffHunk": "@@ -25,22 +25,37 @@\n \n import org.junit.Assert;\n import org.junit.Test;\n+import org.openqa.selenium.By;\n \n-public class StartupPerformanceIT {\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+public class StartupPerformanceIT extends ChromeBrowserTest {\n     @Test\n-    public void devModeInitializerToWebpackUpIsBelow5500ms() {\n+    public void devModeInitializerToWebpackUpIsBelowThreshold() {\n+        getDriver().get(getRootURL());\n+        waitForDevServer();\n+\n+        // wait until dev server is ready and the component is rendered\n+        long timeoutTime = System.currentTimeMillis() + 20000;\n+        while (System.currentTimeMillis() < timeoutTime\n+                && !isElementPresent(By.id(\"performance-component\"))) {\n+            getDriver().navigate().refresh();\n+        }\n+\n         int startupTime = measureLogEntryTimeDistance(\n                 \"- Starting dev-mode updaters in\",\n                 \"- (Started|Reusing) webpack-dev-server\", true);\n \n         int npmInstallTime = measureLogEntryTimeDistance(\n                 \"- Running `pnpm install`\",\n-                \"- Frontend dependencies resolved successfully\",\n-                false);\n+                \"- Frontend dependencies resolved successfully\", false);\n \n         int startupTimeWithoutNpmInstallTime = startupTime - npmInstallTime;\n \n-        final int thresholdMs = 5500;\n+        // https://github.com/vaadin/flow/issues/7596", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2729a22dd4f0c916e3251240b17f0646f70a71b7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyOTAxMQ==", "bodyText": "Right.......\nAnd I'm very curious how that has been cherry-picked if this is commit is not a part of cherry-picks.\ngit never works for me as it should.", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482729011", "createdAt": "2020-09-03T06:19:20Z", "author": {"login": "denis-anisimov"}, "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "diffHunk": "@@ -25,22 +25,37 @@\n \n import org.junit.Assert;\n import org.junit.Test;\n+import org.openqa.selenium.By;\n \n-public class StartupPerformanceIT {\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+public class StartupPerformanceIT extends ChromeBrowserTest {\n     @Test\n-    public void devModeInitializerToWebpackUpIsBelow5500ms() {\n+    public void devModeInitializerToWebpackUpIsBelowThreshold() {\n+        getDriver().get(getRootURL());\n+        waitForDevServer();\n+\n+        // wait until dev server is ready and the component is rendered\n+        long timeoutTime = System.currentTimeMillis() + 20000;\n+        while (System.currentTimeMillis() < timeoutTime\n+                && !isElementPresent(By.id(\"performance-component\"))) {\n+            getDriver().navigate().refresh();\n+        }\n+\n         int startupTime = measureLogEntryTimeDistance(\n                 \"- Starting dev-mode updaters in\",\n                 \"- (Started|Reusing) webpack-dev-server\", true);\n \n         int npmInstallTime = measureLogEntryTimeDistance(\n                 \"- Running `pnpm install`\",\n-                \"- Frontend dependencies resolved successfully\",\n-                false);\n+                \"- Frontend dependencies resolved successfully\", false);\n \n         int startupTimeWithoutNpmInstallTime = startupTime - npmInstallTime;\n \n-        final int thresholdMs = 5500;\n+        // https://github.com/vaadin/flow/issues/7596", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyNjYwNA=="}, "originalCommit": {"oid": "2729a22dd4f0c916e3251240b17f0646f70a71b7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczMzk5Mw==", "bodyText": "Not sure what could cause it. Maybe there is some difference between merge strategies.", "url": "https://github.com/vaadin/flow/pull/8925#discussion_r482733993", "createdAt": "2020-09-03T06:31:16Z", "author": {"login": "pleku"}, "path": "flow-tests/test-npm-only-features/test-npm-performance-regression/src/test/java/com/vaadin/flow/testnpmonlyfeatures/performanceregression/StartupPerformanceIT.java", "diffHunk": "@@ -25,22 +25,37 @@\n \n import org.junit.Assert;\n import org.junit.Test;\n+import org.openqa.selenium.By;\n \n-public class StartupPerformanceIT {\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+public class StartupPerformanceIT extends ChromeBrowserTest {\n     @Test\n-    public void devModeInitializerToWebpackUpIsBelow5500ms() {\n+    public void devModeInitializerToWebpackUpIsBelowThreshold() {\n+        getDriver().get(getRootURL());\n+        waitForDevServer();\n+\n+        // wait until dev server is ready and the component is rendered\n+        long timeoutTime = System.currentTimeMillis() + 20000;\n+        while (System.currentTimeMillis() < timeoutTime\n+                && !isElementPresent(By.id(\"performance-component\"))) {\n+            getDriver().navigate().refresh();\n+        }\n+\n         int startupTime = measureLogEntryTimeDistance(\n                 \"- Starting dev-mode updaters in\",\n                 \"- (Started|Reusing) webpack-dev-server\", true);\n \n         int npmInstallTime = measureLogEntryTimeDistance(\n                 \"- Running `pnpm install`\",\n-                \"- Frontend dependencies resolved successfully\",\n-                false);\n+                \"- Frontend dependencies resolved successfully\", false);\n \n         int startupTimeWithoutNpmInstallTime = startupTime - npmInstallTime;\n \n-        final int thresholdMs = 5500;\n+        // https://github.com/vaadin/flow/issues/7596", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyNjYwNA=="}, "originalCommit": {"oid": "2729a22dd4f0c916e3251240b17f0646f70a71b7"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3213, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}