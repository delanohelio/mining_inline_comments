{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3ODQzODE3", "number": 9500, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNjo0NzozNlrOE9fynA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMjowNTowNFrOE9m3Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTE5NDUyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNjo0NzozNlrOH6Ns2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzo1OToyMlrOH6Pheg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzkzMQ==", "bodyText": "init is called by the container so why would this be called more than once.\nAlso I don't know the reason why we are overriding init(ServletConfig) except to get the config when we could just override init() and get the config with getServletConfig() and not have to call super.init", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530803931", "createdAt": "2020-11-26T06:47:36Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwOTU3Mw==", "bodyText": "Yeah this check makes no sense according to the javadocs of the init methods", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530809573", "createdAt": "2020-11-26T07:02:51Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzkzMQ=="}, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgxNTM1NA==", "bodyText": "Yeah, why init is not overriden instead is not clean.\nBut I think it allows to override init without caring to call super.init().\nIt's not supposed that you are going to override super.init(ServletConfig).\nIn \"plain\" WAR case nothing is changed: init will be called once by the container and it never will be called one more time.\nThis is done for OSGi case: even though if ServletContextListener (which is registered via HTTP Whiteboard spec) is instantiated before the servlet is registered the ServletContextListener::contextInitialized method may be called after Servlet::init which is quite unexpected.\nThat doesn't allow to put all necessary info into the ServletContext before the servlet is initialized.\nIn the latter case ServletContextListener::contextInitialized will call Servlet::init  if the servlet is not yet initialized.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530815354", "createdAt": "2020-11-26T07:18:50Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzkzMQ=="}, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgxODc3Mg==", "bodyText": "Yeah this check makes no sense according to the javadocs of the init methods\n\nI have no any idea what you are talking about .\nWhich javadoc ?\nThis  check allows to check whether this is the first time of method call or not.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530818772", "createdAt": "2020-11-26T07:27:05Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzkzMQ=="}, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzMzc4Ng==", "bodyText": "is the initial context more valuable than the secondary?\nShouldn't they be the same so setting it shouldn't be a problem as super.init(context) only stores the reference.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530833786", "createdAt": "2020-11-26T07:59:22Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzkzMQ=="}, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTE5NDY0OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNjo0NzozOFrOH6Ns8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzoyMTo0N1rOH6OeAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzk1Mw==", "bodyText": "Who will call again for the init of a VaadinServlet?\nThe container should only inform once that you are being taken into use.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530803953", "createdAt": "2020-11-26T06:47:38Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {\n+            super.init(servletConfig);\n+        }\n+\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        if (new VaadinServletContext(servletContext)\n+                .getAttribute(Lookup.class) == null) {\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgxNjUxMw==", "bodyText": "See above.\ninit methods are evil: it's public method which may be called by anyone at any time.\nIt's supposed that it will be called by the container. But Java API doesn't prevent to call this method by anyone at any point.\nSo in fact this method should be normally implemented to be aware of the fact that it can be called several times.\ninit methods make API weak overall.\nIn WAR case nothing changes.\nThis is needed for OSGi only", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530816513", "createdAt": "2020-11-26T07:21:47Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {\n+            super.init(servletConfig);\n+        }\n+\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        if (new VaadinServletContext(servletContext)\n+                .getAttribute(Lookup.class) == null) {\n+            return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzk1Mw=="}, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTM5NDQxOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzo1ODoxNVrOH6Pfbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODoyNTowMFrOH6QWAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzMzI2Mw==", "bodyText": "I would merge this if check to the lookup check so we would always return if service is initialized or Lookup is missing.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530833263", "createdAt": "2020-11-26T07:58:15Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {\n+            super.init(servletConfig);\n+        }\n+\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        if (new VaadinServletContext(servletContext)\n+                .getAttribute(Lookup.class) == null) {\n+            return;\n         }\n \n-        // Sets current service as it is needed in static file server even\n-        // though there are no request and response.\n-        servletService.setCurrentInstances(null, null);\n+        if (servletService == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg0NzIzMw==", "bodyText": "Actually this comment  allowed me to find a bug: return may be called without calling CurrentInstance.clearAll().", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530847233", "createdAt": "2020-11-26T08:25:00Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {\n+            super.init(servletConfig);\n+        }\n+\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        if (new VaadinServletContext(servletContext)\n+                .getAttribute(Lookup.class) == null) {\n+            return;\n         }\n \n-        // Sets current service as it is needed in static file server even\n-        // though there are no request and response.\n-        servletService.setCurrentInstances(null, null);\n+        if (servletService == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzMzI2Mw=="}, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTU4OTExOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODo1MDozN1rOH6RVDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTozNjo0MFrOH6THwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2MzM3NA==", "bodyText": "Please add a comment here that this method is called the second time for OSGi and why it is so.\nThe practice of \"answer review questions in code\" is in my opinion a good one, as it makes the maintenance of the code easier. If there is something that cannot be understood from just looking at the code, it should be commented there.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530863374", "createdAt": "2020-11-26T08:50:37Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,43 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n         try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n-        }\n+            if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae6a15965899c79a8816095fd39eee63a3670da7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3NzAyOA==", "bodyText": "I will add it but it's useless.\nOSGi is in the different repo. Without looking at the code and knowing the context the comment means anything to someone who will see this code first time.\nOr may be the comment should be formulated in a totally different way. In that case it makes sense.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530877028", "createdAt": "2020-11-26T09:12:58Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,43 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n         try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n-        }\n+            if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2MzM3NA=="}, "originalCommit": {"oid": "ae6a15965899c79a8816095fd39eee63a3670da7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3OTM0OA==", "bodyText": "In case there is no comment, it will be impossible to know that the reason for this code is to support some code that is in another repository. The tests in this repository should prevent them from breaking things, but they will not still be able to understand why the code is like that when it looks like it should not be (based on the javadocs for servlet). Then they have to spend time to search history/blame for the changes that were done and check the review for help on understanding. That will take time that a simple comment could have spared them from.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530879348", "createdAt": "2020-11-26T09:16:38Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,43 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n         try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n-        }\n+            if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2MzM3NA=="}, "originalCommit": {"oid": "ae6a15965899c79a8816095fd39eee63a3670da7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg5MjczOA==", "bodyText": "Yes and no.\nThe comment should be extremely simple and give the idea why it's done this way and not another without going into details.\nI was against of \"mentioning\" OSGi here: because it's useless. If you don't even know what OSGi is the comment gives you 0 chances to make anything clearer.\nBut I've added the comment which makes OSGi just a detail. So that way it has sense.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530892738", "createdAt": "2020-11-26T09:36:40Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,43 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n         try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n-        }\n+            if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2MzM3NA=="}, "originalCommit": {"oid": "ae6a15965899c79a8816095fd39eee63a3670da7"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTYwMjc3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODo1NDoxOFrOH6RdVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToxNTowNFrOH6SPow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2NTQ5NQ==", "bodyText": "Apparently there is no (existing) test for verifying that the current instances are cleared, as you've stated that you almost caused that bug yourself. Should unit test this ?", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530865495", "createdAt": "2020-11-26T08:54:18Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,43 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n         try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n-        }\n+            if (getServletConfig() == null) {\n+                super.init(servletConfig);\n+            }\n+\n+            if (getServletConfig() != servletConfig) {\n+                throw new IllegalArgumentException(\n+                        \"Servlet config instance may not differ from the \"\n+                                + \"instance which has been used for the initial method call\");\n+            }\n \n-        // Sets current service as it is needed in static file server even\n-        // though there are no request and response.\n-        servletService.setCurrentInstances(null, null);\n+            ServletContext servletContext = getServletConfig()\n+                    .getServletContext();\n+            if (servletService != null\n+                    || new VaadinServletContext(servletContext)\n+                            .getAttribute(Lookup.class) == null) {\n+                return;\n+            }\n \n-        staticFileHandler = createStaticFileHandler(servletService);\n+            try {\n+                servletService = createServletService();\n+            } catch (ServiceException e) {\n+                throw new ServletException(\"Could not initialize VaadinServlet\",\n+                        e);\n+            }\n \n-        servletInitialized();\n-        CurrentInstance.clearAll();\n+            // Sets current service as it is needed in static file server even\n+            // though there are no request and response.\n+            servletService.setCurrentInstances(null, null);\n \n+            staticFileHandler = createStaticFileHandler(servletService);\n+\n+            servletInitialized();\n+        } finally {\n+            CurrentInstance.clearAll();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae6a15965899c79a8816095fd39eee63a3670da7"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3ODM3MQ==", "bodyText": "Sure.\n#9503\nThis is not a new code and it had no unit tests so this is a separate issue.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530878371", "createdAt": "2020-11-26T09:15:04Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,43 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n         try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n-        }\n+            if (getServletConfig() == null) {\n+                super.init(servletConfig);\n+            }\n+\n+            if (getServletConfig() != servletConfig) {\n+                throw new IllegalArgumentException(\n+                        \"Servlet config instance may not differ from the \"\n+                                + \"instance which has been used for the initial method call\");\n+            }\n \n-        // Sets current service as it is needed in static file server even\n-        // though there are no request and response.\n-        servletService.setCurrentInstances(null, null);\n+            ServletContext servletContext = getServletConfig()\n+                    .getServletContext();\n+            if (servletService != null\n+                    || new VaadinServletContext(servletContext)\n+                            .getAttribute(Lookup.class) == null) {\n+                return;\n+            }\n \n-        staticFileHandler = createStaticFileHandler(servletService);\n+            try {\n+                servletService = createServletService();\n+            } catch (ServiceException e) {\n+                throw new ServletException(\"Could not initialize VaadinServlet\",\n+                        e);\n+            }\n \n-        servletInitialized();\n-        CurrentInstance.clearAll();\n+            // Sets current service as it is needed in static file server even\n+            // though there are no request and response.\n+            servletService.setCurrentInstances(null, null);\n \n+            staticFileHandler = createStaticFileHandler(servletService);\n+\n+            servletInitialized();\n+        } finally {\n+            CurrentInstance.clearAll();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2NTQ5NQ=="}, "originalCommit": {"oid": "ae6a15965899c79a8816095fd39eee63a3670da7"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTk1Mzg2OnYy", "diffSide": "RIGHT", "path": "flow-polymer-template/src/test/java/com/vaadin/flow/server/MockVaadinServletService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDoxODo1MVrOH6U08A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMTowOTozMlrOH6WwEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkyMDY4OA==", "bodyText": "This could instead just be a check at the beginning of init that if\nif(this.equals(getServlet())) return; or at least the mocks should be included inside the if as they are not used in this case\nBasically we have gone wrong at creation as the constructor init will create an instantiator that we then set later again. Perhaps we should have a constructor that takes in the instantiator so init is only called once by the tests.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530920688", "createdAt": "2020-11-26T10:18:51Z", "author": {"login": "caalador"}, "path": "flow-polymer-template/src/test/java/com/vaadin/flow/server/MockVaadinServletService.java", "diffHunk": "@@ -120,7 +120,10 @@ public void init() {\n                     .thenReturn(resourceProvider);\n             Mockito.when(context.getAttribute(Lookup.class.getName()))\n                     .thenReturn(lookup);\n-            getServlet().init(config);\n+            if ( getServlet().getServletConfig() ==null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e889355d8360110bb98a0827f9c221d2568074"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk1MjIwOQ==", "bodyText": "I didn't get how this which is instance of VaadinService may equal a servlet instance but this doesn't matter.\nI've redone this.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530952209", "createdAt": "2020-11-26T11:09:32Z", "author": {"login": "denis-anisimov"}, "path": "flow-polymer-template/src/test/java/com/vaadin/flow/server/MockVaadinServletService.java", "diffHunk": "@@ -120,7 +120,10 @@ public void init() {\n                     .thenReturn(resourceProvider);\n             Mockito.when(context.getAttribute(Lookup.class.getName()))\n                     .thenReturn(lookup);\n-            getServlet().init(config);\n+            if ( getServlet().getServletConfig() ==null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkyMDY4OA=="}, "originalCommit": {"oid": "e1e889355d8360110bb98a0827f9c221d2568074"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDIxNDIyOnYy", "diffSide": "LEFT", "path": "flow-polymer-template/src/test/java/com/vaadin/flow/server/MockVaadinServletService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMToyNjoxN1rOH6XVWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMjowOTowNlrOH6Yxyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk2MTc1Mw==", "bodyText": "This makes the init use the wrong instantiator for all the initial things making this init method basically useless.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530961753", "createdAt": "2020-11-26T11:26:17Z", "author": {"login": "caalador"}, "path": "flow-polymer-template/src/test/java/com/vaadin/flow/server/MockVaadinServletService.java", "diffHunk": "@@ -95,8 +95,6 @@ protected RouteRegistry getRouteRegistry() {\n \n     public void init(Instantiator instantiator) {\n         this.instantiator = instantiator;\n-\n-        init();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dd49c9b06c1f01fa3eb6c3fc1742c2c88e0f985"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk2MzAwMg==", "bodyText": "Tests are passing........\nWell, I will revert everything back since I don't understand your previous comment.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530963002", "createdAt": "2020-11-26T11:28:31Z", "author": {"login": "denis-anisimov"}, "path": "flow-polymer-template/src/test/java/com/vaadin/flow/server/MockVaadinServletService.java", "diffHunk": "@@ -95,8 +95,6 @@ protected RouteRegistry getRouteRegistry() {\n \n     public void init(Instantiator instantiator) {\n         this.instantiator = instantiator;\n-\n-        init();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk2MTc1Mw=="}, "originalCommit": {"oid": "3dd49c9b06c1f01fa3eb6c3fc1742c2c88e0f985"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk4NTQxOQ==", "bodyText": "I guess the usage of the init(Instantiator) should be that we wouldn't execute VaadinService.createInstantiator()  but we now execute this as the first line in VaadinService.init() is instantiator = createInstantiator();\nofc it blocks any other instantiations later in the tests.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530985419", "createdAt": "2020-11-26T12:09:06Z", "author": {"login": "caalador"}, "path": "flow-polymer-template/src/test/java/com/vaadin/flow/server/MockVaadinServletService.java", "diffHunk": "@@ -95,8 +95,6 @@ protected RouteRegistry getRouteRegistry() {\n \n     public void init(Instantiator instantiator) {\n         this.instantiator = instantiator;\n-\n-        init();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk2MTc1Mw=="}, "originalCommit": {"oid": "3dd49c9b06c1f01fa3eb6c3fc1742c2c88e0f985"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDM1MzI3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMjowNTowNFrOH6Ypmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMjowNTowNFrOH6Ypmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk4MzMyMg==", "bodyText": "Non-blocking: typoed servletcontextlistener. Also I don't think it is necessary to lecture about how \"anyone call this method at any time\" and \"weak API\". I would have just settled for the reason:\n\"This init method is called twice in some scenarios, like with OSGi {@code ServletContextListener} because not all things are available when the container triggers the first init. Duplicate initialization needs to be avoided and creation of service needs lookup to be present.\"", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530983322", "createdAt": "2020-11-26T12:05:04Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -68,6 +68,22 @@ public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n \n         try {\n+            /*\n+             * There are plenty of reasons why the check should be done. The\n+             * main reason is: init method is public which means that everyone\n+             * may call this method at any time (including an app developer).\n+             * But it's not supposed to be called any times any time.\n+             * \n+             * This code protects weak API from being called several times so\n+             * that config is reset after the very first initialization.\n+             * \n+             * Normally \"init\" method is called only once by the servlet\n+             * container. But in a specific OSGi case {@code\n+             * ServletCointextListener} may be called after the servlet\n+             * initialized. To be able to initialize the VaadinServlet properly\n+             * its \"init\" method is called from the {@code\n+             * ServletCointextListener} with the same ServletConfig instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4363810e206a44ae9e4960aed0ac22f1ce6281d5"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2842, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}