{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MTgwNzgz", "number": 8922, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOTo1ODo0MlrOEePZaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjoyODo0NVrOEeSWpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTQ1MDAwOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOTo1ODo0MlrOHJyQEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNTozNTozMVrOHLacGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAyMjU0NQ==", "bodyText": "Empty @since tag please", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r480022545", "createdAt": "2020-08-31T09:58:42Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.flow.dom.Element;\n+\n+/**\n+ * Mixin interface for field components that have helper text as property and\n+ * slots for inserting components.\n+ *\n+ * @author Vaadin Ltd", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0NzU2Ng==", "bodyText": "Added.I wasn't sure which version to add, since it's for 2.4, but it won't be in 3.0.", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r481147566", "createdAt": "2020-09-01T13:43:26Z", "author": {"login": "DiegoCardoso"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.flow.dom.Element;\n+\n+/**\n+ * Mixin interface for field components that have helper text as property and\n+ * slots for inserting components.\n+ *\n+ * @author Vaadin Ltd", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAyMjU0NQ=="}, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcyOTU2Mg==", "bodyText": "That is why we prefer to just add the tags as empty @since - those can be then later on fixed at any point", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r481729562", "createdAt": "2020-09-02T05:35:31Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.flow.dom.Element;\n+\n+/**\n+ * Mixin interface for field components that have helper text as property and\n+ * slots for inserting components.\n+ *\n+ * @author Vaadin Ltd", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAyMjU0NQ=="}, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTgyMzg2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTo1NDozOVrOHJ1wgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo1MTowMVrOHK3PYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4MDAwMw==", "bodyText": "One might wonder, \"what is helper text\" as it is not that universal concept (yet?) compared to e.g. placeholder. At least could be unfamiliar for Java developers. So I think it would be good to add a clarification on \"how/when it might be shown on the component\"", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r480080003", "createdAt": "2020-08-31T11:54:39Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.flow.dom.Element;\n+\n+/**\n+ * Mixin interface for field components that have helper text as property and\n+ * slots for inserting components.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public interface HasHelper extends HasElement {\n+  /**\n+   * String used for the helper text.\n+   *\n+   * @return the {@code helperText} property from the web component\n+   */\n+  default String getHelperText() {\n+    return getElement().getProperty(\"helperText\");\n+  }\n+\n+  /**\n+   * <p>\n+   * String used for the helper text.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4MDEwNw==", "bodyText": "And same for setHelperComponent", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r480080107", "createdAt": "2020-08-31T11:54:51Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.flow.dom.Element;\n+\n+/**\n+ * Mixin interface for field components that have helper text as property and\n+ * slots for inserting components.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public interface HasHelper extends HasElement {\n+  /**\n+   * String used for the helper text.\n+   *\n+   * @return the {@code helperText} property from the web component\n+   */\n+  default String getHelperText() {\n+    return getElement().getProperty(\"helperText\");\n+  }\n+\n+  /**\n+   * <p>\n+   * String used for the helper text.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4MDAwMw=="}, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1Mjg2NA==", "bodyText": "Added text describing the feature more for both setters.", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r481152864", "createdAt": "2020-09-01T13:51:01Z", "author": {"login": "DiegoCardoso"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.flow.dom.Element;\n+\n+/**\n+ * Mixin interface for field components that have helper text as property and\n+ * slots for inserting components.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public interface HasHelper extends HasElement {\n+  /**\n+   * String used for the helper text.\n+   *\n+   * @return the {@code helperText} property from the web component\n+   */\n+  default String getHelperText() {\n+    return getElement().getProperty(\"helperText\");\n+  }\n+\n+  /**\n+   * <p>\n+   * String used for the helper text.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4MDAwMw=="}, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTg4NTE2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjoxNDoyNVrOHJ2Udg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0NTo0OFrOHK3BWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4OTIwNg==", "bodyText": "Unnecessary collecting to a list since it seems like there can only ever be one child with the slot=helper, so could go with findAny().ifPresent(...) instead", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r480089206", "createdAt": "2020-08-31T12:14:25Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.flow.dom.Element;\n+\n+/**\n+ * Mixin interface for field components that have helper text as property and\n+ * slots for inserting components.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public interface HasHelper extends HasElement {\n+  /**\n+   * String used for the helper text.\n+   *\n+   * @return the {@code helperText} property from the web component\n+   */\n+  default String getHelperText() {\n+    return getElement().getProperty(\"helperText\");\n+  }\n+\n+  /**\n+   * <p>\n+   * String used for the helper text.\n+   * </p>\n+   * \n+   * <p>\n+   * In case both {@link #setHelperText(String)} and\n+   * {@link #setHelperComponent(Component)} are used, only the element defined\n+   * by {@link #setHelperComponent(Component)} will be visible, regardless of\n+   * the order on which they are defined.\n+   * </p>\n+   *\n+   * @param helperText\n+   *            the String value to set\n+   */\n+  default void setHelperText(String helperText) {\n+    getElement().setProperty(\"helperText\", helperText);\n+  }\n+  /**\n+   * Adds the given component into helper slot of component, replacing any\n+   * existing helper component.\n+   * \n+   * @param component\n+   *            the component to set, can be {@code null} to remove existing\n+   *            helper component\n+   * \n+   * @see #setHelperText(String)\n+   */\n+  default void setHelperComponent(Component component) {\n+    getElement().getChildren()\n+      .filter(child -> \"helper\".equals(child.getAttribute(\"slot\")))\n+      .collect(Collectors.toList())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0OTI3NA==", "bodyText": "Changed.", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r481149274", "createdAt": "2020-09-01T13:45:48Z", "author": {"login": "DiegoCardoso"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.flow.dom.Element;\n+\n+/**\n+ * Mixin interface for field components that have helper text as property and\n+ * slots for inserting components.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public interface HasHelper extends HasElement {\n+  /**\n+   * String used for the helper text.\n+   *\n+   * @return the {@code helperText} property from the web component\n+   */\n+  default String getHelperText() {\n+    return getElement().getProperty(\"helperText\");\n+  }\n+\n+  /**\n+   * <p>\n+   * String used for the helper text.\n+   * </p>\n+   * \n+   * <p>\n+   * In case both {@link #setHelperText(String)} and\n+   * {@link #setHelperComponent(Component)} are used, only the element defined\n+   * by {@link #setHelperComponent(Component)} will be visible, regardless of\n+   * the order on which they are defined.\n+   * </p>\n+   *\n+   * @param helperText\n+   *            the String value to set\n+   */\n+  default void setHelperText(String helperText) {\n+    getElement().setProperty(\"helperText\", helperText);\n+  }\n+  /**\n+   * Adds the given component into helper slot of component, replacing any\n+   * existing helper component.\n+   * \n+   * @param component\n+   *            the component to set, can be {@code null} to remove existing\n+   *            helper component\n+   * \n+   * @see #setHelperText(String)\n+   */\n+  default void setHelperComponent(Component component) {\n+    getElement().getChildren()\n+      .filter(child -> \"helper\".equals(child.getAttribute(\"slot\")))\n+      .collect(Collectors.toList())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4OTIwNg=="}, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTkyNzM2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjoyNjo0NVrOHJ2s_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0Njo1MFrOHK3EAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA5NTQ4NA==", "bodyText": "I don't think this is necessary for readability as it adds more lines, could just use mapping to the Stream with map(Element::get) before findFirst() and then return component.orElse(null);.", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r480095484", "createdAt": "2020-08-31T12:26:45Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.flow.dom.Element;\n+\n+/**\n+ * Mixin interface for field components that have helper text as property and\n+ * slots for inserting components.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public interface HasHelper extends HasElement {\n+  /**\n+   * String used for the helper text.\n+   *\n+   * @return the {@code helperText} property from the web component\n+   */\n+  default String getHelperText() {\n+    return getElement().getProperty(\"helperText\");\n+  }\n+\n+  /**\n+   * <p>\n+   * String used for the helper text.\n+   * </p>\n+   * \n+   * <p>\n+   * In case both {@link #setHelperText(String)} and\n+   * {@link #setHelperComponent(Component)} are used, only the element defined\n+   * by {@link #setHelperComponent(Component)} will be visible, regardless of\n+   * the order on which they are defined.\n+   * </p>\n+   *\n+   * @param helperText\n+   *            the String value to set\n+   */\n+  default void setHelperText(String helperText) {\n+    getElement().setProperty(\"helperText\", helperText);\n+  }\n+  /**\n+   * Adds the given component into helper slot of component, replacing any\n+   * existing helper component.\n+   * \n+   * @param component\n+   *            the component to set, can be {@code null} to remove existing\n+   *            helper component\n+   * \n+   * @see #setHelperText(String)\n+   */\n+  default void setHelperComponent(Component component) {\n+    getElement().getChildren()\n+      .filter(child -> \"helper\".equals(child.getAttribute(\"slot\")))\n+      .collect(Collectors.toList())\n+      .forEach(getElement()::removeChild);\n+\n+    if (component != null) {\n+        component.getElement().setAttribute(\"slot\", \"helper\");\n+        getElement().appendChild(component.getElement());\n+    }\n+  }\n+\n+  /**\n+   * Gets the component in the helper slot of this field.\n+   * \n+   * @return the helper component of this field, or {@code null} if no helper\n+   *         component has been set\n+   * @see #setHelperComponent(Component)\n+   */\n+  default Component getHelperComponent() {\n+    Optional<Element> element = getElement().getChildren()\n+      .filter(child -> \"helper\".equals(child.getAttribute(\"slot\")))\n+      .findFirst();\n+    if (element.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0OTk1NA==", "bodyText": "I changed as suggested, but then findFirst() returns an Optional<Optional<Component>> object, so I had to add a .orElse(Optional.empty()).", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r481149954", "createdAt": "2020-09-01T13:46:50Z", "author": {"login": "DiegoCardoso"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasHelper.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.flow.dom.Element;\n+\n+/**\n+ * Mixin interface for field components that have helper text as property and\n+ * slots for inserting components.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public interface HasHelper extends HasElement {\n+  /**\n+   * String used for the helper text.\n+   *\n+   * @return the {@code helperText} property from the web component\n+   */\n+  default String getHelperText() {\n+    return getElement().getProperty(\"helperText\");\n+  }\n+\n+  /**\n+   * <p>\n+   * String used for the helper text.\n+   * </p>\n+   * \n+   * <p>\n+   * In case both {@link #setHelperText(String)} and\n+   * {@link #setHelperComponent(Component)} are used, only the element defined\n+   * by {@link #setHelperComponent(Component)} will be visible, regardless of\n+   * the order on which they are defined.\n+   * </p>\n+   *\n+   * @param helperText\n+   *            the String value to set\n+   */\n+  default void setHelperText(String helperText) {\n+    getElement().setProperty(\"helperText\", helperText);\n+  }\n+  /**\n+   * Adds the given component into helper slot of component, replacing any\n+   * existing helper component.\n+   * \n+   * @param component\n+   *            the component to set, can be {@code null} to remove existing\n+   *            helper component\n+   * \n+   * @see #setHelperText(String)\n+   */\n+  default void setHelperComponent(Component component) {\n+    getElement().getChildren()\n+      .filter(child -> \"helper\".equals(child.getAttribute(\"slot\")))\n+      .collect(Collectors.toList())\n+      .forEach(getElement()::removeChild);\n+\n+    if (component != null) {\n+        component.getElement().setAttribute(\"slot\", \"helper\");\n+        getElement().appendChild(component.getElement());\n+    }\n+  }\n+\n+  /**\n+   * Gets the component in the helper slot of this field.\n+   * \n+   * @return the helper component of this field, or {@code null} if no helper\n+   *         component has been set\n+   * @see #setHelperComponent(Component)\n+   */\n+  default Component getHelperComponent() {\n+    Optional<Element> element = getElement().getChildren()\n+      .filter(child -> \"helper\".equals(child.getAttribute(\"slot\")))\n+      .findFirst();\n+    if (element.isPresent()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA5NTQ4NA=="}, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTkzNDQ3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/component/HasHelperTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjoyODo0NVrOHJ2xbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0NzowNlrOHK3EvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA5NjYyMg==", "bodyText": "Slightly nit-picking, but could validate the default values too so that those are not accidentally changed", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r480096622", "createdAt": "2020-08-31T12:28:45Z", "author": {"login": "pleku"}, "path": "flow-server/src/test/java/com/vaadin/flow/component/HasHelperTest.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class HasHelperTest {\n+\n+    @Tag(\"div\")\n+    public static class HasHelperComponent extends Component implements HasHelper {\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1MDE0MQ==", "bodyText": "Added.", "url": "https://github.com/vaadin/flow/pull/8922#discussion_r481150141", "createdAt": "2020-09-01T13:47:06Z", "author": {"login": "DiegoCardoso"}, "path": "flow-server/src/test/java/com/vaadin/flow/component/HasHelperTest.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class HasHelperTest {\n+\n+    @Tag(\"div\")\n+    public static class HasHelperComponent extends Component implements HasHelper {\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA5NjYyMg=="}, "originalCommit": {"oid": "978c29a8ddbc1dab11579a26f890e6c3ba57fb7f"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3210, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}