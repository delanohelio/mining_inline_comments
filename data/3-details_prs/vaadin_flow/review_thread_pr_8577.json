{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1Njg2MjEw", "number": 8577, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0MDo1MVrOEIveWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0NzozMlrOEIvoDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjAxODgyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/WebBrowserTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0MDo1MVrOGo4xkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0MDo1MVrOGo4xkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNjQxNg==", "bodyText": "Not blocking this, but how about less redundancy by moving the WebBrowser to a field?", "url": "https://github.com/vaadin/flow/pull/8577#discussion_r445526416", "createdAt": "2020-06-25T12:40:51Z", "author": {"login": "joheriks"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/WebBrowserTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.server;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class WebBrowserTest {\n+\n+    @Test\n+    public void isLinux_noDetails_returnsFalse() {\n+        WebBrowser browser = new WebBrowser();\n+\n+        Assert.assertFalse(browser.isLinux());\n+    }\n+\n+    @Test\n+    public void isMacOSX_noDetails_returnsFalse() {\n+        WebBrowser browser = new WebBrowser();\n+\n+        Assert.assertFalse(browser.isMacOSX());\n+    }\n+\n+    @Test\n+    public void isWindows_noDetails_returnsFalse() {\n+        WebBrowser browser = new WebBrowser();\n+\n+        Assert.assertFalse(browser.isWindows());\n+    }\n+\n+    @Test\n+    public void isWindowsPhone_noDetails_returnsFalse() {\n+        WebBrowser browser = new WebBrowser();\n+\n+        Assert.assertFalse(browser.isWindowsPhone());\n+    }\n+\n+    @Test\n+    public void isAndroid_noDetails_returnsFalse() {\n+        WebBrowser browser = new WebBrowser();\n+\n+        Assert.assertFalse(browser.isAndroid());\n+    }\n+\n+    @Test\n+    public void isIPhone_noDetails_returnsFalse() {\n+        WebBrowser browser = new WebBrowser();\n+\n+        Assert.assertFalse(browser.isIPhone());\n+    }\n+\n+    @Test\n+    public void isChromeOS_noDetails_returnsFalse() {\n+        WebBrowser browser = new WebBrowser();\n+\n+        Assert.assertFalse(browser.isChromeOS());\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed2aefb8aa8279835c3ed250d13c2f9b2737a478"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjA0MzY2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/WebBrowser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0NzozMlrOGo5BCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNDo1NDo0OFrOGpTpqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMDM3OA==", "bodyText": "Couldn't all these if (browserDetails == null) guards be removed if the browserDetails field was initialized with a default value (in which all fields are anyway false or -1).", "url": "https://github.com/vaadin/flow/pull/8577#discussion_r445530378", "createdAt": "2020-06-25T12:47:32Z", "author": {"login": "joheriks"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/WebBrowser.java", "diffHunk": "@@ -205,6 +205,9 @@ public int getBrowserMinorVersion() {\n      *         Linux or if no information on the browser is present\n      */\n     public boolean isLinux() {\n+        if (browserDetails == null) {\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed2aefb8aa8279835c3ed250d13c2f9b2737a478"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk2Njc2MA==", "bodyText": "That was my original intention.\nBut then I've realized that there is already a plenty of methods which has impl with checking browserDetails == null.\nSo I decided to follow the existing pattern because:\n\nI'm too lazy to rewrite all the existing code\neven though I was sure that the new code that I was going to write will work correctly I was not sure that the existing code won't be broken with the default initialization like new BrowserDetails(\"\");.\ndecided to keep have consistent code", "url": "https://github.com/vaadin/flow/pull/8577#discussion_r445966760", "createdAt": "2020-06-26T04:54:48Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/WebBrowser.java", "diffHunk": "@@ -205,6 +205,9 @@ public int getBrowserMinorVersion() {\n      *         Linux or if no information on the browser is present\n      */\n     public boolean isLinux() {\n+        if (browserDetails == null) {\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMDM3OA=="}, "originalCommit": {"oid": "ed2aefb8aa8279835c3ed250d13c2f9b2737a478"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3511, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}