{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MjgzMTUy", "number": 9031, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzoxODozM1rOEk92qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwOTowNjo0MFrOElkHWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTk3NjA5OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/AbstractSinglePropertyField.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzoxODozM1rOHUMxcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzoxODozM1rOHUMxcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk0MjgzMg==", "bodyText": "Remove this call from a constructor to the overridable \"getElement\" method.", "url": "https://github.com/vaadin/flow/pull/9031#discussion_r490942832", "createdAt": "2020-09-18T13:18:33Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/AbstractSinglePropertyField.java", "diffHunk": "@@ -242,6 +241,12 @@ public AbstractSinglePropertyField(String propertyName, T defaultValue,\n         propertyReader = typeHandler.createReader(element, propertyName,\n                 presentationToModel);\n \n+        // if underlying element already has a property value then it should be\n+        // set for the component\n+        if (getElement().getPropertyRaw(propertyName) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42775c0b8e2352eb5743a52e1aba7c6bbf1d5a03"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODI0NDcyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/AbstractSinglePropertyField.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwOTowNjo0MFrOHVGp-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjozNjowMlrOHVN12Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MTE5Mw==", "bodyText": "Is this really the right fix as the AbstractField creates the AbstractFieldSupport which sets the given default value to defaultValue and bufferedValue. I would expect it to be fixed there by setting something else as the initial value.\nOtherwise any component that extends AbstractField but not AbstractSinglePropertyField would be broken.", "url": "https://github.com/vaadin/flow/pull/9031#discussion_r491891193", "createdAt": "2020-09-21T09:06:40Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/AbstractSinglePropertyField.java", "diffHunk": "@@ -242,6 +241,12 @@ public AbstractSinglePropertyField(String propertyName, T defaultValue,\n         propertyReader = typeHandler.createReader(element, propertyName,\n                 presentationToModel);\n \n+        // if underlying element already has a property value then it should be\n+        // set for the component\n+        if (getElement().getPropertyRaw(propertyName) != null) {\n+            doSetModelValue(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42775c0b8e2352eb5743a52e1aba7c6bbf1d5a03"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkzMDkyMQ==", "bodyText": "Every component which extends AbstractField should be aware of this thing in the same way as AbstractSinglePropertyField  is aware in this PR.\nIn this sense any component which  extends AbstractField directly is not better anyhow than AbstractSinglePropertyField .\nThe problem with AbstractField is : it doesn't know anything about property.\nOnly AbstractSinglePropertyField has knowledge about the property so it's possible to get getElement().getProperty(propertyName).\nAs I understand AbstractField is on another layer of abstraction : it cares only about model nature of the field.\nI don't have deep knowledge of the overall design AbstractField/AbstractSinglePropertyField but it seems AbstractField is intentionally designed in this way so that it's simply impossible to fix this issue anyhow in AbstractField: the abstraction layer doesn't allow to do this.\nBut as I said: don't have deep knowledge in this area.\nI don't see any way how this issue can be fixed in AbstractField: if you see this way please let me know.\nAbout the right fix: I think it's good enough: doSetModelValue sets the model value regardless of default value based on the property value.\nThis is proven by the unit test.", "url": "https://github.com/vaadin/flow/pull/9031#discussion_r491930921", "createdAt": "2020-09-21T10:14:13Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/AbstractSinglePropertyField.java", "diffHunk": "@@ -242,6 +241,12 @@ public AbstractSinglePropertyField(String propertyName, T defaultValue,\n         propertyReader = typeHandler.createReader(element, propertyName,\n                 presentationToModel);\n \n+        // if underlying element already has a property value then it should be\n+        // set for the component\n+        if (getElement().getPropertyRaw(propertyName) != null) {\n+            doSetModelValue(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MTE5Mw=="}, "originalCommit": {"oid": "42775c0b8e2352eb5743a52e1aba7c6bbf1d5a03"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAwODkyMQ==", "bodyText": "The problem with AbstractField is : it doesn't know anything about property.\n\nRight. AF is mostly for server side state and it is a layer that doesn't know anything about the value that goes to client side. It might contribute to a similar issue in the field components that extend it, when there is maybe multiple elements or components that compose the value to the client side, but it is the up for those classes to fix it so that the value is jointly read from the template as an attribute.", "url": "https://github.com/vaadin/flow/pull/9031#discussion_r492008921", "createdAt": "2020-09-21T12:36:02Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/AbstractSinglePropertyField.java", "diffHunk": "@@ -242,6 +241,12 @@ public AbstractSinglePropertyField(String propertyName, T defaultValue,\n         propertyReader = typeHandler.createReader(element, propertyName,\n                 presentationToModel);\n \n+        // if underlying element already has a property value then it should be\n+        // set for the component\n+        if (getElement().getPropertyRaw(propertyName) != null) {\n+            doSetModelValue(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MTE5Mw=="}, "originalCommit": {"oid": "42775c0b8e2352eb5743a52e1aba7c6bbf1d5a03"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3070, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}