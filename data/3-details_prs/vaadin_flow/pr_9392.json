{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMTI0MjU4", "number": 9392, "title": "fix: check if Url path is encoded twice in Dev Mode", "bodyText": "Checks double encoding in Dev Mode requests paths, and if the given path contains unsafe double encoding, it then doesn't serve the request.", "createdAt": "2020-11-12T19:59:40Z", "url": "https://github.com/vaadin/flow/pull/9392", "merged": true, "mergeCommit": {"oid": "19fe3864f9d1567c5ac7a211189986ac093e781f"}, "closed": true, "closedAt": "2020-11-18T10:59:40Z", "author": {"login": "mshabarov"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb2a8xAH2gAyNTIwMTI0MjU4OjFhMzFiZjExZTkyM2UyYTE4MmUxMGI5YmFiYmNkNDc5NWNhNzVkYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddr4IYAFqTUzMzMxOTg5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1a31bf11e923e2a182e10b9babbcd4795ca75da5", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/1a31bf11e923e2a182e10b9babbcd4795ca75da5", "committedDate": "2020-11-12T17:57:30Z", "message": "fix: check if Url path is safe in Dev Mode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NDg4NDM0", "url": "https://github.com/vaadin/flow/pull/9392#pullrequestreview-529488434", "createdAt": "2020-11-12T20:53:22Z", "commit": {"oid": "1a31bf11e923e2a182e10b9babbcd4795ca75da5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDo1MzoyMlrOHyN8vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDo1MzoyMlrOHyN8vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQxOTM5MQ==", "bodyText": "Define and throw a dedicated exception instead of using a generic one.", "url": "https://github.com/vaadin/flow/pull/9392#discussion_r522419391", "createdAt": "2020-11-12T20:53:22Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/HandlerHelper.java", "diffHunk": "@@ -176,4 +189,25 @@ public static String getCancelingRelativePath(String pathToCancel) {\n         return sb.toString();\n     }\n \n+    /**\n+     * Checks if the given URL path contains the symbols encoded twice in\n+     * hexadecimal format, which can be injected maliciously.\n+     *\n+     * @param path\n+     *            the URL path to be verified.\n+     * @return {@code true}, if the given path has a double encoding,\n+     *         {@code false} otherwise.\n+     */\n+    public static boolean isPathUnsafe(String path) {\n+        // Check that the path does not have '/../', '\\..\\', %5C..%5C, or\n+        // %2F..%2F\n+        try {\n+            path = URLDecoder.decode(path, StandardCharsets.UTF_8.name());\n+        } catch (UnsupportedEncodingException e) {\n+            throw new RuntimeException(\"An error occurred during decoding URL.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a31bf11e923e2a182e10b9babbcd4795ca75da5"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMDE0NzIz", "url": "https://github.com/vaadin/flow/pull/9392#pullrequestreview-530014723", "createdAt": "2020-11-13T12:17:23Z", "commit": {"oid": "1a31bf11e923e2a182e10b9babbcd4795ca75da5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMjoxNzoyM1rOHysK1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMjoxOTo0NlrOHysPLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkxNDUxOQ==", "bodyText": "Two questions here:\n\nserveDevModeRequest  looks too late for checking.\nI think this may be preserved BUT this could be just double check.\nwhy it sets HttpServletResponse.SC_NOT_MODIFIED ?\n\nClarification:\nisDevModeRequest should be called before serveDevModeRequest (if I understand correctly).\nThe method should return just false  and then some other handler will be used to handle a request or some status (404 most likely , but this doesn't matter) will be set.\nDouble check here can be done but then the code should just throw: since isDevModeRequest should be checked first by design and serveDevModeRequest shouldn't be ever called.\nIf it's called then our imp is broken and we should just throw.", "url": "https://github.com/vaadin/flow/pull/9392#discussion_r522914519", "createdAt": "2020-11-13T12:17:23Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -305,6 +305,13 @@ public boolean serveDevModeRequest(HttpServletRequest request,\n         // a valid request for webpack-dev-server should start with '/VAADIN/'\n         String requestFilename = request.getPathInfo();\n \n+        if (HandlerHelper.isPathUnsafe(requestFilename)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a31bf11e923e2a182e10b9babbcd4795ca75da5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkxNTMzOA==", "bodyText": "If I remember correctly @caalador mentioned that we already has similar code somewhere.\nIf it's true then the code should be reused (may be extracted as an utility method but then some existing code should be modified as well since it already contains it).", "url": "https://github.com/vaadin/flow/pull/9392#discussion_r522915338", "createdAt": "2020-11-13T12:19:10Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/HandlerHelper.java", "diffHunk": "@@ -176,4 +189,25 @@ public static String getCancelingRelativePath(String pathToCancel) {\n         return sb.toString();\n     }\n \n+    /**\n+     * Checks if the given URL path contains the symbols encoded twice in\n+     * hexadecimal format, which can be injected maliciously.\n+     *\n+     * @param path\n+     *            the URL path to be verified.\n+     * @return {@code true}, if the given path has a double encoding,\n+     *         {@code false} otherwise.\n+     */\n+    public static boolean isPathUnsafe(String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a31bf11e923e2a182e10b9babbcd4795ca75da5"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkxNTYzMA==", "bodyText": "Ah, sorry, I just realized that this is exactly done.\nJust ignore this.", "url": "https://github.com/vaadin/flow/pull/9392#discussion_r522915630", "createdAt": "2020-11-13T12:19:46Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/HandlerHelper.java", "diffHunk": "@@ -176,4 +189,25 @@ public static String getCancelingRelativePath(String pathToCancel) {\n         return sb.toString();\n     }\n \n+    /**\n+     * Checks if the given URL path contains the symbols encoded twice in\n+     * hexadecimal format, which can be injected maliciously.\n+     *\n+     * @param path\n+     *            the URL path to be verified.\n+     * @return {@code true}, if the given path has a double encoding,\n+     *         {@code false} otherwise.\n+     */\n+    public static boolean isPathUnsafe(String path) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkxNTMzOA=="}, "originalCommit": {"oid": "1a31bf11e923e2a182e10b9babbcd4795ca75da5"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0dcaf86b63dbcab3adbbe107d1c49d490ead8eb", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/e0dcaf86b63dbcab3adbbe107d1c49d490ead8eb", "committedDate": "2020-11-13T14:27:30Z", "message": "Update the path pattern to block slash-dot-dot either"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ae6460ca4f3a9b50bd46fbf49c807fe67718307", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/6ae6460ca4f3a9b50bd46fbf49c807fe67718307", "committedDate": "2020-11-16T06:10:38Z", "message": "Add unit tests and change status code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwOTU0Njg1", "url": "https://github.com/vaadin/flow/pull/9392#pullrequestreview-530954685", "createdAt": "2020-11-16T07:02:24Z", "commit": {"oid": "6ae6460ca4f3a9b50bd46fbf49c807fe67718307"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNzowMjoyNFrOHzqNAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNzowMzo0NVrOHzqOjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkzMDg4Mg==", "bodyText": "I would rename the method to have different name than pathsWithDirectoryChange: they have quite different nature (at least the types are different) event though they are connected.\nAnother thing : I'm pretty sure that DevModeHandlerTest should not be made parameterized .\nAs I understand when you parameterize the class its instance is created per every parameter AND for every test method.\nSo if you have N parameters and M test methods then there will be N*M executed tests.\nSince this class contains tests which don't need any parameters this is very excessive and will increase the time of execution dramatically.\nSo: either the method should accept parameter and there should be just one test method per parameter (hardcoded) or the class should be refactored to contain only test methods which really requires parameters.", "url": "https://github.com/vaadin/flow/pull/9392#discussion_r523930882", "createdAt": "2020-11-16T07:02:24Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/DevModeHandlerTest.java", "diffHunk": "@@ -575,6 +585,29 @@ public void devModeNotReady_handleRequest_returnsHtml() throws Exception {\n         Mockito.verify(response).setContentType(\"text/html;charset=utf-8\");\n     }\n \n+    @Parameterized.Parameters\n+    public static Collection<String> pathsWithDirectoryChange() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae6460ca4f3a9b50bd46fbf49c807fe67718307"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkzMTI3Ng==", "bodyText": "Same thing here: check whether this class should be refactored", "url": "https://github.com/vaadin/flow/pull/9392#discussion_r523931276", "createdAt": "2020-11-16T07:03:45Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/StaticFileServerTest.java", "diffHunk": "@@ -537,34 +547,25 @@ private void staticBuildResourceWithDirectoryChange_nothingServed(\n \n         Assert.assertTrue(fileServer.serveStaticResource(request, response));\n         Assert.assertEquals(0, out.getOutput().length);\n+        Assert.assertEquals(HttpServletResponse.SC_FORBIDDEN,\n+                responseCode.get());\n     }\n \n-    @Test\n-    public void staticBuildResourceWithDirectoryChangeWithSlash_nothingServed()\n-            throws IOException {\n-        staticBuildResourceWithDirectoryChange_nothingServed(\n-                \"/VAADIN/build/../vaadin-bundle-1234.cache.js\");\n-    }\n-\n-    @Test\n-    public void staticBuildResourceWithDirectoryChangeWithBackslash_nothingServed()\n-            throws IOException {\n-        staticBuildResourceWithDirectoryChange_nothingServed(\n-                \"/VAADIN/build/something\\\\..\\\\vaadin-bundle-1234.cache.js\");\n-    }\n-\n-    @Test\n-    public void staticBuildResourceWithDirectoryChangeWithEncodedBackslashUpperCase_nothingServed()\n-            throws IOException {\n-        staticBuildResourceWithDirectoryChange_nothingServed(\n-                \"/VAADIN/build/something%5C..%5Cvaadin-bundle-1234.cache.js\");\n+    @Parameterized.Parameters\n+    public static Collection<String> paths() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae6460ca4f3a9b50bd46fbf49c807fe67718307"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "563140d181ec9b7d3e7905d7f311a5de262057a2", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/563140d181ec9b7d3e7905d7f311a5de262057a2", "committedDate": "2020-11-16T08:53:20Z", "message": "Split Uri validation tests and remove parameterized feature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66dead9e0a458a77044e048ed901cf0aa0d37ecc", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/66dead9e0a458a77044e048ed901cf0aa0d37ecc", "committedDate": "2020-11-17T15:44:35Z", "message": "test: add IT test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTIwMDYy", "url": "https://github.com/vaadin/flow/pull/9392#pullrequestreview-533120062", "createdAt": "2020-11-18T05:45:47Z", "commit": {"oid": "66dead9e0a458a77044e048ed901cf0aa0d37ecc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNTo0NTo0N1rOH1eCJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNTo0NTo0N1rOH1eCJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgyODY0NQ==", "bodyText": "test-root-context  doesn't use dev mode.\nit compiles the resources and web pack dev server is not started.\nIt should not be changed because these tests are used for OSGi which is not able to run webpack dev server at all.\nSo the IT which relies on webpack dev server will fail there.\nThere are a bunch of modules which are executed in dev mode. E.g. test-dev-mode  which is explicitly made for dev mode. Please use another module for the test.", "url": "https://github.com/vaadin/flow/pull/9392#discussion_r525828645", "createdAt": "2020-11-18T05:45:47Z", "author": {"login": "denis-anisimov"}, "path": "flow-tests/test-root-context/src/test/java/com/vaadin/flow/uitest/ui/UrlValidationIT.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.uitest.ui;\n+\n+import java.io.IOException;\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class UrlValidationIT extends ChromeBrowserTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66dead9e0a458a77044e048ed901cf0aa0d37ecc"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5e52744cba7d00c689835a00ea1d759577f3e5a", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/c5e52744cba7d00c689835a00ea1d759577f3e5a", "committedDate": "2020-11-18T07:05:42Z", "message": "test: move IT to another module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11b6e6fca7cec706cb6f33e648b8d9c89670baef", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/11b6e6fca7cec706cb6f33e648b8d9c89670baef", "committedDate": "2020-11-18T08:44:11Z", "message": "Merge remote-tracking branch 'origin/master' into unsafe-path-dev-mode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzE5ODk3", "url": "https://github.com/vaadin/flow/pull/9392#pullrequestreview-533319897", "createdAt": "2020-11-18T10:48:16Z", "commit": {"oid": "11b6e6fca7cec706cb6f33e648b8d9c89670baef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4850, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}