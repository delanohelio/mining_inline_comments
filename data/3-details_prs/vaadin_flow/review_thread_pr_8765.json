{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NjIxMTgw", "number": 8765, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyMjowNVrOEYAmQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzozMDoyMlrOEYDbyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjExMDc1OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyMjowNVrOHAHN_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo1MzoyNVrOHAKJOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MDMxOA==", "bodyText": "I believe you can use @Rule ExpectedException exceptionRule and then expect() and exceptionRule.expectMessage() here. Flow project has many examples of such a usage.", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469880318", "createdAt": "2020-08-13T11:22:05Z", "author": {"login": "mshabarov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();\n+        } catch (Exception ignored) {}\n+\n+        try {\n+            indexHtmlRequestHandler.synchronizedHandleRequest(session,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODI0OA==", "bodyText": "Fixed", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928248", "createdAt": "2020-08-13T12:53:25Z", "author": {"login": "hfazai"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();\n+        } catch (Exception ignored) {}\n+\n+        try {\n+            indexHtmlRequestHandler.synchronizedHandleRequest(session,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MDMxOA=="}, "originalCommit": {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjEyMjM5OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyNTo1NVrOHAHU-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo1MzozMVrOHAKJdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MjEwNg==", "bodyText": "Better use Assert.assertNotNull(), because it's a test, not a production code.", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469882106", "createdAt": "2020-08-13T11:25:55Z", "author": {"login": "mshabarov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODMwOQ==", "bodyText": "Fixed", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928309", "createdAt": "2020-08-13T12:53:31Z", "author": {"login": "hfazai"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MjEwNg=="}, "originalCommit": {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjEzNjc5OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTozMDo1MFrOHAHd_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo1Mzo0MlrOHAKJ7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDQxMg==", "bodyText": "Why are you ignore the exceptions? Try-catch should be excluded and those exceptions should be added to method signature, and if being thrown, fails the test.", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469884412", "createdAt": "2020-08-13T11:30:50Z", "author": {"login": "mshabarov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();\n+        } catch (Exception ignored) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODQzMQ==", "bodyText": "Fixed", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928431", "createdAt": "2020-08-13T12:53:42Z", "author": {"login": "hfazai"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();\n+        } catch (Exception ignored) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDQxMg=="}, "originalCommit": {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjE0ODc4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTozNDo0MlrOHAHlXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo1MzowNFrOHAKIdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjMwMQ==", "bodyText": "Maybe I missed something, but this file deletion looks like a side effect that may have an impact on other tests, because the require this file to be presented. I think we have to re-create this file in the end of test.", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469886301", "createdAt": "2020-08-13T11:34:42Z", "author": {"login": "mshabarov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NzI0Ng==", "bodyText": "UPDATE: Yes. The tests are failing because of that. So, please re-create a file or choose another way to simulate the index.html absence.", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469887246", "createdAt": "2020-08-13T11:36:44Z", "author": {"login": "mshabarov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjMwMQ=="}, "originalCommit": {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODA1Mw==", "bodyText": "Yes indead, So I simulated the absence by renaming the file and finally restore it", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928053", "createdAt": "2020-08-13T12:53:04Z", "author": {"login": "hfazai"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjMwMQ=="}, "originalCommit": {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjUyNTkyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoxODo1N1rOHALILA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo1MzoyOFrOHAMkvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDM2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .format(\"Failed to load content of '%1$s'.\"\n          \n          \n            \n                            .format(\"Failed to load content of '%1$s'. \"", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469944364", "createdAt": "2020-08-13T13:18:57Z", "author": {"login": "mshabarov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandler.java", "diffHunk": "@@ -172,10 +174,16 @@ private static Document getIndexHtmlDocument(VaadinRequest request)\n         }\n         String frontendDir = FrontendUtils.getProjectFrontendDir(\n                 request.getService().getDeploymentConfiguration());\n+        String indexHtmlFilePath;\n+        if(frontendDir.endsWith(File.separator)) {\n+            indexHtmlFilePath = frontendDir + \"index.html\";\n+        } else {\n+            indexHtmlFilePath = frontendDir + File.separatorChar + \"index.html\";\n+        }\n         String message = String\n-                .format(\"Failed to load content of '%1$sindex.html'.\"\n-                        + \"It is required to have '%1$sindex.html' file when \"\n-                        + \"using client side bootstrapping.\", frontendDir);\n+                .format(\"Failed to load content of '%1$s'.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NzEwNQ==", "bodyText": "Suggestion to add a space between sentences for pretty format", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469947105", "createdAt": "2020-08-13T13:23:10Z", "author": {"login": "mshabarov"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandler.java", "diffHunk": "@@ -172,10 +174,16 @@ private static Document getIndexHtmlDocument(VaadinRequest request)\n         }\n         String frontendDir = FrontendUtils.getProjectFrontendDir(\n                 request.getService().getDeploymentConfiguration());\n+        String indexHtmlFilePath;\n+        if(frontendDir.endsWith(File.separator)) {\n+            indexHtmlFilePath = frontendDir + \"index.html\";\n+        } else {\n+            indexHtmlFilePath = frontendDir + File.separatorChar + \"index.html\";\n+        }\n         String message = String\n-                .format(\"Failed to load content of '%1$sindex.html'.\"\n-                        + \"It is required to have '%1$sindex.html' file when \"\n-                        + \"using client side bootstrapping.\", frontendDir);\n+                .format(\"Failed to load content of '%1$s'.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDM2NA=="}, "originalCommit": {"oid": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2ODA2MA==", "bodyText": "Fixed", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469968060", "createdAt": "2020-08-13T13:53:28Z", "author": {"login": "hfazai"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandler.java", "diffHunk": "@@ -172,10 +174,16 @@ private static Document getIndexHtmlDocument(VaadinRequest request)\n         }\n         String frontendDir = FrontendUtils.getProjectFrontendDir(\n                 request.getService().getDeploymentConfiguration());\n+        String indexHtmlFilePath;\n+        if(frontendDir.endsWith(File.separator)) {\n+            indexHtmlFilePath = frontendDir + \"index.html\";\n+        } else {\n+            indexHtmlFilePath = frontendDir + File.separatorChar + \"index.html\";\n+        }\n         String message = String\n-                .format(\"Failed to load content of '%1$sindex.html'.\"\n-                        + \"It is required to have '%1$sindex.html' file when \"\n-                        + \"using client side bootstrapping.\", frontendDir);\n+                .format(\"Failed to load content of '%1$s'.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDM2NA=="}, "originalCommit": {"oid": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjUyNzg1OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoxOToyOFrOHALJVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo1MzozMlrOHAMk6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDY2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String expectedError = \"Failed to load content of './frontend/index.html'.\" +\n          \n          \n            \n                        String expectedError = \"Failed to load content of './frontend/index.html'. \" +", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469944661", "createdAt": "2020-08-13T13:19:28Z", "author": {"login": "mshabarov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +111,37 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n+        try {\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);\n+\n+            String expectedError = \"Failed to load content of './frontend/index.html'.\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NzE1OQ==", "bodyText": "Suggestion to add a space between sentences for pretty format", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469947159", "createdAt": "2020-08-13T13:23:15Z", "author": {"login": "mshabarov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +111,37 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n+        try {\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);\n+\n+            String expectedError = \"Failed to load content of './frontend/index.html'.\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDY2MQ=="}, "originalCommit": {"oid": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2ODEwNQ==", "bodyText": "Fixed", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469968105", "createdAt": "2020-08-13T13:53:32Z", "author": {"login": "hfazai"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +111,37 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n+        try {\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);\n+\n+            String expectedError = \"Failed to load content of './frontend/index.html'.\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDY2MQ=="}, "originalCommit": {"oid": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjU3NTQ0OnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzozMDoyMlrOHALlqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo1MzozN1rOHAMlGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1MTkxNA==", "bodyText": "Please also add an assertion of returned value, so as to be sure the file has been renamed.", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469951914", "createdAt": "2020-08-13T13:30:22Z", "author": {"login": "mshabarov"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +111,37 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n+        try {\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2ODE1Mg==", "bodyText": "Fixed", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469968152", "createdAt": "2020-08-13T13:53:37Z", "author": {"login": "hfazai"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +111,37 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n+        try {\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1MTkxNA=="}, "originalCommit": {"oid": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3381, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}