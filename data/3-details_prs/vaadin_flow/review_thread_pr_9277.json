{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzOTI4MDMx", "number": 9277, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyNzowN1rOE0UWlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyNzowOFrOE0UWng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjk0ODY4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/osgi/VaadinBundleTracker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyNzowN1rOHr-iDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyNzowN1rOHr-iDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3NTM0Mg==", "bodyText": "Replace the synchronized class \"Hashtable\" by an unsynchronized one such as \"HashMap\".", "url": "https://github.com/vaadin/flow/pull/9277#discussion_r515875342", "createdAt": "2020-11-02T10:27:07Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/osgi/VaadinBundleTracker.java", "diffHunk": "@@ -139,24 +145,52 @@ private void registerPushResources(Bundle pushBundle) {\n         Hashtable<String, Object> properties = new Hashtable<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6359b55ff4d8ed300dc4e54663056c7254f43ccc"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjk0ODc4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/osgi/VaadinBundleTracker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyNzowOFrOHr-iGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyNzowOFrOHr-iGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3NTM1NA==", "bodyText": "Replace the synchronized class \"Hashtable\" by an unsynchronized one such as \"HashMap\".", "url": "https://github.com/vaadin/flow/pull/9277#discussion_r515875354", "createdAt": "2020-11-02T10:27:08Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/osgi/VaadinBundleTracker.java", "diffHunk": "@@ -139,24 +145,52 @@ private void registerPushResources(Bundle pushBundle) {\n         Hashtable<String, Object> properties = new Hashtable<>();\n         properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_PATTERN,\n                 \"/VAADIN/static/push/*\");\n-        servletRegistration.compareAndSet(null,\n+        servletPushRegistration.compareAndSet(null,\n                 pushBundle.getBundleContext().registerService(Servlet.class,\n-                        new PushResourceServlet(pushBundle), properties));\n+                        new ResourceServlet(pushBundle,\n+                                \"/META-INF/resources/VAADIN/static/push\"),\n+                        properties));\n     }\n \n     private void unregisterPushResource(Bundle pushBundle) {\n-        ServiceRegistration<Servlet> registration = servletRegistration.get();\n+        ServiceRegistration<Servlet> registration = servletPushRegistration\n+                .get();\n         if (registration != null && registration.getReference().getBundle()\n                 .getBundleId() == pushBundle.getBundleId()) {\n             registration.unregister();\n-            servletRegistration.compareAndSet(registration, null);\n+            servletPushRegistration.compareAndSet(registration, null);\n+        }\n+    }\n+\n+    private void registerClientResources(Bundle clientBundle) {\n+        Hashtable<String, Object> properties = new Hashtable<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6359b55ff4d8ed300dc4e54663056c7254f43ccc"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2962, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}