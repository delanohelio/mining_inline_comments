{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjc2NjQ3", "number": 7544, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDozOTowNFrODe0-ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDozOTowNFrODe0-ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjUxODEzOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/internal/JavaScriptBootstrapUI.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDozOTowNFrOFoLZqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDozOTowNFrOFoLZqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY3NDE1Mg==", "bodyText": "Define and throw a dedicated exception instead of using a generic one.", "url": "https://github.com/vaadin/flow/pull/7544#discussion_r377674152", "createdAt": "2020-02-11T14:39:04Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/internal/JavaScriptBootstrapUI.java", "diffHunk": "@@ -209,6 +212,30 @@ private boolean handleNavigation(Location location,\n         return getInternals().getContinueNavigationAction() != null;\n     }\n \n+    private boolean handleExceptionNavigation(Location location, Exception exception) {\n+        Optional<ErrorTargetEntry> maybeLookupResult = this.getRouter().getErrorNavigationTarget(\n+                exception);\n+        if (maybeLookupResult.isPresent()) {\n+            ErrorTargetEntry lookupResult = maybeLookupResult.get();\n+\n+            ErrorParameter<?> errorParameter = new ErrorParameter<>(\n+                    lookupResult.getHandledExceptionType(), exception,\n+                    exception.getMessage());\n+            ErrorStateRenderer errorStateRenderer = new ErrorStateRenderer(\n+                    new NavigationStateBuilder(this.getRouter())\n+                            .withTarget(lookupResult.getNavigationTarget())\n+                            .build());\n+\n+            ErrorNavigationEvent errorNavigationEvent = new ErrorNavigationEvent(\n+                    this.getRouter(), location, this, NavigationTrigger.CLIENT_SIDE, errorParameter);\n+\n+            errorStateRenderer.handle(errorNavigationEvent);\n+        } else {\n+            throw new RuntimeException(exception);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0748118719802d5b1ed092ec8b84d2fdbef7104b"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3654, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}