{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNzQxOTM1", "number": 9709, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMjowMTozMlrOFIUHdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMjowNjoxMFrOFIULvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MjYyNTE4OnYy", "diffSide": "RIGHT", "path": "fusion-endpoint/src/main/java/com/vaadin/flow/server/connect/generator/SchemaResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMjowMTozMlrOIKKdIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwODo0MToxMlrOINpSpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzUyNzk3MQ==", "bodyText": "Collection already extends Iterable", "url": "https://github.com/vaadin/flow/pull/9709#discussion_r547527971", "createdAt": "2020-12-22T22:01:32Z", "author": {"login": "fluorumlabs"}, "path": "fusion-endpoint/src/main/java/com/vaadin/flow/server/connect/generator/SchemaResolver.java", "diffHunk": "@@ -161,7 +161,7 @@ private boolean isNumberType(ResolvedType type) {\n     }\n \n     private boolean isCollectionType(ResolvedType type) {\n-        return !type.isPrimitive() && isTypeOf(type, Collection.class);\n+        return !type.isPrimitive() && (isTypeOf(type, Collection.class) || isTypeOf(type, Iterable.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66eb66db82bab9d9be5cbb2e865aca71aed10fa3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE3ODkxNw==", "bodyText": "Sure, so you think we can keep only Iterable here to allow such usage?\n@endpoint\n@AnonymousAllowed\npublic class VaadinEndpoint {\npublic static class Foo {\n    public String bar = \"bar\";\n}\n\npublic Iterable<Foo> getFoos() {\n    return Arrays.asList(new Foo(), new Foo());\n}\n\n}", "url": "https://github.com/vaadin/flow/pull/9709#discussion_r551178917", "createdAt": "2021-01-04T08:41:12Z", "author": {"login": "tdq"}, "path": "fusion-endpoint/src/main/java/com/vaadin/flow/server/connect/generator/SchemaResolver.java", "diffHunk": "@@ -161,7 +161,7 @@ private boolean isNumberType(ResolvedType type) {\n     }\n \n     private boolean isCollectionType(ResolvedType type) {\n-        return !type.isPrimitive() && isTypeOf(type, Collection.class);\n+        return !type.isPrimitive() && (isTypeOf(type, Collection.class) || isTypeOf(type, Iterable.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzUyNzk3MQ=="}, "originalCommit": {"oid": "66eb66db82bab9d9be5cbb2e865aca71aed10fa3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MjYzNjE1OnYy", "diffSide": "RIGHT", "path": "fusion-endpoint/src/test/java/com/vaadin/flow/server/connect/VaadinConnectControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMjowNjoxMFrOIKKjrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMjowNjoxMFrOIKKjrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzUyOTY0Nw==", "bodyText": "Looks like you forgot to commit IterableEndpoint", "url": "https://github.com/vaadin/flow/pull/9709#discussion_r547529647", "createdAt": "2020-12-22T22:06:10Z", "author": {"login": "fluorumlabs"}, "path": "fusion-endpoint/src/test/java/com/vaadin/flow/server/connect/VaadinConnectControllerTest.java", "diffHunk": "@@ -50,6 +50,7 @@\n import com.vaadin.flow.server.connect.auth.VaadinConnectAccessChecker;\n import com.vaadin.flow.server.connect.exception.EndpointException;\n import com.vaadin.flow.server.connect.exception.EndpointValidationException;\n+import com.vaadin.flow.server.connect.generator.endpoints.collectionendpoint.IterableEndpoint;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66eb66db82bab9d9be5cbb2e865aca71aed10fa3"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3792, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}