{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3ODQzODE3", "number": 9500, "title": "fix: Initialize VaadinServlet after Lookup is available", "bodyText": "In WAR case init will be called as usual without any changes\nIN OSGi ServletContextListener::contextInitialized may be called after Servet::init is called and in this case info necessary for the servlet won't be available yet.\nServletContextListener::contextInitialized  will call Servet::init one more time to complete initialization.", "createdAt": "2020-11-26T05:56:24Z", "url": "https://github.com/vaadin/flow/pull/9500", "merged": true, "mergeCommit": {"oid": "47e9a17b337d0099c31defec9e7786d23fa0570f"}, "closed": true, "closedAt": "2020-11-26T12:37:14Z", "author": {"login": "denis-anisimov"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgM7yzgH2gAyNTI3ODQzODE3OjlhYjMyNzA5MDU4MmNlODYwYzQ4MmMyNTNjYmI2NjM2ODQwNTUxYTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgR_CTgFqTUzOTI2NjMxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/9ab327090582ce860c482c253cbb6636840551a6", "committedDate": "2020-11-26T06:26:59Z", "message": "fix: don't initialize Vaadin servlet until Lookup is not available"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6e48301ecd0588df76ee0f3e65bdc0b611ad7ab", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/e6e48301ecd0588df76ee0f3e65bdc0b611ad7ab", "committedDate": "2020-11-26T05:55:56Z", "message": "fix: don't initialize Vaadin servlet until Lookup is not available"}, "afterCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/9ab327090582ce860c482c253cbb6636840551a6", "committedDate": "2020-11-26T06:26:59Z", "message": "fix: don't initialize Vaadin servlet until Lookup is not available"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MDMwNTc0", "url": "https://github.com/vaadin/flow/pull/9500#pullrequestreview-539030574", "createdAt": "2020-11-26T06:47:36Z", "commit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNjo0NzozNlrOH6Ns2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNjo0NzozOFrOH6Ns8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzkzMQ==", "bodyText": "init is called by the container so why would this be called more than once.\nAlso I don't know the reason why we are overriding init(ServletConfig) except to get the config when we could just override init() and get the config with getServletConfig() and not have to call super.init", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530803931", "createdAt": "2020-11-26T06:47:36Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzk1Mw==", "bodyText": "Who will call again for the init of a VaadinServlet?\nThe container should only inform once that you are being taken into use.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530803953", "createdAt": "2020-11-26T06:47:38Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {\n+            super.init(servletConfig);\n+        }\n+\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        if (new VaadinServletContext(servletContext)\n+                .getAttribute(Lookup.class) == null) {\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MDM3MjI5", "url": "https://github.com/vaadin/flow/pull/9500#pullrequestreview-539037229", "createdAt": "2020-11-26T07:02:51Z", "commit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzowMjo1MVrOH6OC5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzowMjo1MVrOH6OC5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwOTU3Mw==", "bodyText": "Yeah this check makes no sense according to the javadocs of the init methods", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530809573", "createdAt": "2020-11-26T07:02:51Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzkzMQ=="}, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MDY2MzM2", "url": "https://github.com/vaadin/flow/pull/9500#pullrequestreview-539066336", "createdAt": "2020-11-26T07:58:15Z", "commit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzo1ODoxNVrOH6Pfbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzo1OToyMlrOH6Pheg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzMzI2Mw==", "bodyText": "I would merge this if check to the lookup check so we would always return if service is initialized or Lookup is missing.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530833263", "createdAt": "2020-11-26T07:58:15Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {\n+            super.init(servletConfig);\n+        }\n+\n+        ServletContext servletContext = getServletConfig().getServletContext();\n+        if (new VaadinServletContext(servletContext)\n+                .getAttribute(Lookup.class) == null) {\n+            return;\n         }\n \n-        // Sets current service as it is needed in static file server even\n-        // though there are no request and response.\n-        servletService.setCurrentInstances(null, null);\n+        if (servletService == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzMzc4Ng==", "bodyText": "is the initial context more valuable than the secondary?\nShouldn't they be the same so setting it shouldn't be a problem as super.init(context) only stores the reference.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530833786", "createdAt": "2020-11-26T07:59:22Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,35 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n-        try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n+        if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwMzkzMQ=="}, "originalCommit": {"oid": "9ab327090582ce860c482c253cbb6636840551a6"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fff803728b9e25b66913a7ffddb41e15c63c065c", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/fff803728b9e25b66913a7ffddb41e15c63c065c", "committedDate": "2020-11-26T08:27:38Z", "message": "fix : merge two \"if\" checks and call clearAll in finally block"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae6a15965899c79a8816095fd39eee63a3670da7", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/ae6a15965899c79a8816095fd39eee63a3670da7", "committedDate": "2020-11-26T08:41:16Z", "message": "fix: prevent call \"init\" method with different config instance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MTA0MzYw", "url": "https://github.com/vaadin/flow/pull/9500#pullrequestreview-539104360", "createdAt": "2020-11-26T08:50:36Z", "commit": {"oid": "ae6a15965899c79a8816095fd39eee63a3670da7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODo1MDozN1rOH6RVDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODo1NDoxOFrOH6RdVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2MzM3NA==", "bodyText": "Please add a comment here that this method is called the second time for OSGi and why it is so.\nThe practice of \"answer review questions in code\" is in my opinion a good one, as it makes the maintenance of the code easier. If there is something that cannot be understood from just looking at the code, it should be commented there.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530863374", "createdAt": "2020-11-26T08:50:37Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,43 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n         try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n-        }\n+            if (getServletConfig() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae6a15965899c79a8816095fd39eee63a3670da7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2NTQ5NQ==", "bodyText": "Apparently there is no (existing) test for verifying that the current instances are cleared, as you've stated that you almost caused that bug yourself. Should unit test this ?", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530865495", "createdAt": "2020-11-26T08:54:18Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -64,23 +66,43 @@\n     @Override\n     public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n-        super.init(servletConfig);\n \n         try {\n-            servletService = createServletService();\n-        } catch (ServiceException e) {\n-            throw new ServletException(\"Could not initialize VaadinServlet\", e);\n-        }\n+            if (getServletConfig() == null) {\n+                super.init(servletConfig);\n+            }\n+\n+            if (getServletConfig() != servletConfig) {\n+                throw new IllegalArgumentException(\n+                        \"Servlet config instance may not differ from the \"\n+                                + \"instance which has been used for the initial method call\");\n+            }\n \n-        // Sets current service as it is needed in static file server even\n-        // though there are no request and response.\n-        servletService.setCurrentInstances(null, null);\n+            ServletContext servletContext = getServletConfig()\n+                    .getServletContext();\n+            if (servletService != null\n+                    || new VaadinServletContext(servletContext)\n+                            .getAttribute(Lookup.class) == null) {\n+                return;\n+            }\n \n-        staticFileHandler = createStaticFileHandler(servletService);\n+            try {\n+                servletService = createServletService();\n+            } catch (ServiceException e) {\n+                throw new ServletException(\"Could not initialize VaadinServlet\",\n+                        e);\n+            }\n \n-        servletInitialized();\n-        CurrentInstance.clearAll();\n+            // Sets current service as it is needed in static file server even\n+            // though there are no request and response.\n+            servletService.setCurrentInstances(null, null);\n \n+            staticFileHandler = createStaticFileHandler(servletService);\n+\n+            servletInitialized();\n+        } finally {\n+            CurrentInstance.clearAll();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae6a15965899c79a8816095fd39eee63a3670da7"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8385025cad9150d3fe04dac5a8e3cdeb562bc61", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/c8385025cad9150d3fe04dac5a8e3cdeb562bc61", "committedDate": "2020-11-26T09:31:31Z", "message": "fix: fix unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MTc4MDg5", "url": "https://github.com/vaadin/flow/pull/9500#pullrequestreview-539178089", "createdAt": "2020-11-26T10:18:50Z", "commit": {"oid": "e1e889355d8360110bb98a0827f9c221d2568074"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDoxODo1MVrOH6U08A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDoxODo1MVrOH6U08A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkyMDY4OA==", "bodyText": "This could instead just be a check at the beginning of init that if\nif(this.equals(getServlet())) return; or at least the mocks should be included inside the if as they are not used in this case\nBasically we have gone wrong at creation as the constructor init will create an instantiator that we then set later again. Perhaps we should have a constructor that takes in the instantiator so init is only called once by the tests.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530920688", "createdAt": "2020-11-26T10:18:51Z", "author": {"login": "caalador"}, "path": "flow-polymer-template/src/test/java/com/vaadin/flow/server/MockVaadinServletService.java", "diffHunk": "@@ -120,7 +120,10 @@ public void init() {\n                     .thenReturn(resourceProvider);\n             Mockito.when(context.getAttribute(Lookup.class.getName()))\n                     .thenReturn(lookup);\n-            getServlet().init(config);\n+            if ( getServlet().getServletConfig() ==null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e889355d8360110bb98a0827f9c221d2568074"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dd49c9b06c1f01fa3eb6c3fc1742c2c88e0f985", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/3dd49c9b06c1f01fa3eb6c3fc1742c2c88e0f985", "committedDate": "2020-11-26T11:09:48Z", "message": "fix: fix unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1e889355d8360110bb98a0827f9c221d2568074", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/e1e889355d8360110bb98a0827f9c221d2568074", "committedDate": "2020-11-26T10:07:15Z", "message": "fix: fix unit test"}, "afterCommit": {"oid": "3dd49c9b06c1f01fa3eb6c3fc1742c2c88e0f985", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/3dd49c9b06c1f01fa3eb6c3fc1742c2c88e0f985", "committedDate": "2020-11-26T11:09:48Z", "message": "fix: fix unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjI5NTcz", "url": "https://github.com/vaadin/flow/pull/9500#pullrequestreview-539229573", "createdAt": "2020-11-26T11:26:17Z", "commit": {"oid": "3dd49c9b06c1f01fa3eb6c3fc1742c2c88e0f985"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMToyNjoxN1rOH6XVWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMToyNjoxN1rOH6XVWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk2MTc1Mw==", "bodyText": "This makes the init use the wrong instantiator for all the initial things making this init method basically useless.", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530961753", "createdAt": "2020-11-26T11:26:17Z", "author": {"login": "caalador"}, "path": "flow-polymer-template/src/test/java/com/vaadin/flow/server/MockVaadinServletService.java", "diffHunk": "@@ -95,8 +95,6 @@ protected RouteRegistry getRouteRegistry() {\n \n     public void init(Instantiator instantiator) {\n         this.instantiator = instantiator;\n-\n-        init();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dd49c9b06c1f01fa3eb6c3fc1742c2c88e0f985"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4363810e206a44ae9e4960aed0ac22f1ce6281d5", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/4363810e206a44ae9e4960aed0ac22f1ce6281d5", "committedDate": "2020-11-26T11:33:15Z", "message": "fix: one more tests fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51291db8bbdc260299f5942b3f4491ea6db82921", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/51291db8bbdc260299f5942b3f4491ea6db82921", "committedDate": "2020-11-26T11:30:58Z", "message": "fix: one more tests fix"}, "afterCommit": {"oid": "4363810e206a44ae9e4960aed0ac22f1ce6281d5", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/4363810e206a44ae9e4960aed0ac22f1ce6281d5", "committedDate": "2020-11-26T11:33:15Z", "message": "fix: one more tests fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjU2MjI0", "url": "https://github.com/vaadin/flow/pull/9500#pullrequestreview-539256224", "createdAt": "2020-11-26T12:05:04Z", "commit": {"oid": "4363810e206a44ae9e4960aed0ac22f1ce6281d5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMjowNTowNFrOH6Ypmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMjowNTowNFrOH6Ypmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk4MzMyMg==", "bodyText": "Non-blocking: typoed servletcontextlistener. Also I don't think it is necessary to lecture about how \"anyone call this method at any time\" and \"weak API\". I would have just settled for the reason:\n\"This init method is called twice in some scenarios, like with OSGi {@code ServletContextListener} because not all things are available when the container triggers the first init. Duplicate initialization needs to be avoided and creation of service needs lookup to be present.\"", "url": "https://github.com/vaadin/flow/pull/9500#discussion_r530983322", "createdAt": "2020-11-26T12:05:04Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -68,6 +68,22 @@ public void init(ServletConfig servletConfig) throws ServletException {\n         CurrentInstance.clearAll();\n \n         try {\n+            /*\n+             * There are plenty of reasons why the check should be done. The\n+             * main reason is: init method is public which means that everyone\n+             * may call this method at any time (including an app developer).\n+             * But it's not supposed to be called any times any time.\n+             * \n+             * This code protects weak API from being called several times so\n+             * that config is reset after the very first initialization.\n+             * \n+             * Normally \"init\" method is called only once by the servlet\n+             * container. But in a specific OSGi case {@code\n+             * ServletCointextListener} may be called after the servlet\n+             * initialized. To be able to initialize the VaadinServlet properly\n+             * its \"init\" method is called from the {@code\n+             * ServletCointextListener} with the same ServletConfig instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4363810e206a44ae9e4960aed0ac22f1ce6281d5"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjY2MzE5", "url": "https://github.com/vaadin/flow/pull/9500#pullrequestreview-539266319", "createdAt": "2020-11-26T12:20:03Z", "commit": {"oid": "4363810e206a44ae9e4960aed0ac22f1ce6281d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4573, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}