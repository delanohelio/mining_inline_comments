{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NTEyMDgw", "number": 9014, "title": "merge master to offline", "bodyText": "", "createdAt": "2020-09-15T19:25:59Z", "url": "https://github.com/vaadin/flow/pull/9014", "merged": true, "mergeCommit": {"oid": "e7f5a3b902e9de09964fb655d54113ddd00842ec"}, "closed": true, "closedAt": "2020-09-18T09:01:02Z", "author": {"login": "haijian-vaadin"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFRBNlAH2gAyNDg3NTEyMDgwOjE1ZTQ2MTU4OTg1NTY4MzIwY2IyNWU2ZjZkZmFjYjcyYTQ1Y2IyNDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKBSNEAFqTQ5MTI1NDM0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "15e46158985568320cb25e6f6dfacb72a45cb241", "author": {"user": {"login": "caalador", "name": null}}, "url": "https://github.com/vaadin/flow/commit/15e46158985568320cb25e6f6dfacb72a45cb241", "committedDate": "2020-09-03T13:56:34Z", "message": "Don't use the deprecated method (#8938)\n\nStop using the method that was deprecated in 1.11.1\r\n\r\nCloses #8929"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a194485ee9bc62bd7d80e697482d47e3dbad651", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/4a194485ee9bc62bd7d80e697482d47e3dbad651", "committedDate": "2020-09-04T13:46:44Z", "message": "fix: fetch real type for generic typed parameter (#8939)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15ac978ccbec962c86288a2899b31895c93e0045", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/15ac978ccbec962c86288a2899b31895c93e0045", "committedDate": "2020-09-08T06:42:57Z", "message": "Fixes from backporting frontend live-reload into master (#8937)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a87e6146fadc5b10910e14b6af6f95c79f4f9e5", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/3a87e6146fadc5b10910e14b6af6f95c79f4f9e5", "committedDate": "2020-09-08T07:44:28Z", "message": "Make the CustomInMemoryDataProvider implement listeners handling (#8961)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af11c30bd7b21a5a35ed7343331cc25c48c845b3", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/af11c30bd7b21a5a35ed7343331cc25c48c845b3", "committedDate": "2020-09-08T08:37:37Z", "message": "Read attribute value from template (#8957)\n\nRead static attributes values for @Id mapped elements\r\n\r\nFixes #3735"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fc997fadc7a9fed921b4aa0d8d57aeab73c2ed5", "author": {"user": {"login": "caalador", "name": null}}, "url": "https://github.com/vaadin/flow/commit/3fc997fadc7a9fed921b4aa0d8d57aeab73c2ed5", "committedDate": "2020-09-09T07:20:43Z", "message": "Always consume the stdout stream from (p)npm and log at debug level (#7325) (#8980)\n\n(cherry picked from commit 816a09474f2a3d105de00e4eb81960f7932dc0c3)\r\n\r\n# Conflicts:\r\n#\tflow-server/src/main/java/com/vaadin/flow/server/frontend/TaskRunNpmInstall.java\r\n\r\nCo-authored-by: Johannes Eriksson <joheriks@vaadin.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bb5f12f266a33b3f1b9720a044d3b2bffa6c11d", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/0bb5f12f266a33b3f1b9720a044d3b2bffa6c11d", "committedDate": "2020-09-09T08:22:59Z", "message": "Upgrade auto-installed Node to latest LTS and suppress some `npm install` errors (#8956)\n\nUpgrade installed node to latest LTS and set `scripts-prepend-node-artifact` to ensure same node is used to run npm and package install scripts\r\n\r\nRelated to #8741"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a9b02d2a48492d6e7ecb2f6dc6bc0a82a6a97df", "author": {"user": {"login": "Haprog", "name": "Kari S\u00f6derholm"}}, "url": "https://github.com/vaadin/flow/commit/5a9b02d2a48492d6e7ecb2f6dc6bc0a82a6a97df", "committedDate": "2020-09-09T19:42:12Z", "message": "Fix typo in variable DEAULT_FLOW_RESOURCES_FOLDER (#8897)\n\nReplace DEAULT_FLOW_RESOURCES_FOLDER with DEFAULT_FLOW_RESOURCES_FOLDER, but keep the old variable as deprecated."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14c82be4647fdf66502c444700e5061a2b833280", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/14c82be4647fdf66502c444700e5061a2b833280", "committedDate": "2020-09-10T06:18:34Z", "message": "Support for disabling Win-specific tests in CI (#8986)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b8409f90db89063c5c25c548f73bbd9b872b39f", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/9b8409f90db89063c5c25c548f73bbd9b872b39f", "committedDate": "2020-09-10T08:18:07Z", "message": "Do not force installation of compatible pnpm version when system property `vaadin.ignoreVersionChecks` is set (#8971)\n\nSkip all version checks when ignoreVersionChecks flag is set\r\n\r\nUse found pnpm even if version outside of range when `ignoreVersionChecks=true`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dc256e8951fd66eb2f05f734587fcb3998bc472", "author": {"user": {"login": "fluorumlabs", "name": "Artem Godin"}}, "url": "https://github.com/vaadin/flow/commit/4dc256e8951fd66eb2f05f734587fcb3998bc472", "committedDate": "2020-09-10T12:52:21Z", "message": "Cache original index.html Document in production mode (#8998)\n\n* Cache original index.html Document in production mode\r\n\r\n* Make IndexHtmlHolder serializable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a177b6462afb2fbf3b65ff61124ba087f5fec166", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/a177b6462afb2fbf3b65ff61124ba087f5fec166", "committedDate": "2020-09-10T16:47:51Z", "message": "Show webpack error on live reload of frontend resources (#8990)\n\nIdentify recompile using webpack console output instead of using a separate comm channel.\r\nThis ensures that webpack errors in `DevModeHandler` are synced when the live reload occurs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6231b035fd593f3b2bec4798bd9f08ebfb8ea89", "author": {"user": {"login": "DiegoCardoso", "name": "Diego Cardoso"}}, "url": "https://github.com/vaadin/flow/commit/f6231b035fd593f3b2bec4798bd9f08ebfb8ea89", "committedDate": "2020-09-11T04:01:35Z", "message": "fix: surround 404 check with spaces (#8997)\n\n`checkLogsForErrors` checks if the message contains `404`, \r\nbut it will match if the sequence is part of a number."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "721758d52e7bdc02e846a89764ffdf2b90e75388", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/721758d52e7bdc02e846a89764ffdf2b90e75388", "committedDate": "2020-09-11T10:17:38Z", "message": "Implement lit template parser for limited template formats which extends LitTemplate element (#8979)\n\nImplement lit template parser for limited template formats which extends LitTemplate element \r\n\r\nFixes #8966"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff84fba172058351fc43458f8594ca9400201f86", "author": {"user": {"login": "joheriks", "name": "Johannes Eriksson"}}, "url": "https://github.com/vaadin/flow/commit/ff84fba172058351fc43458f8594ca9400201f86", "committedDate": "2020-09-11T12:38:38Z", "message": "Use JS rather than CSS file for testing Webpack live reload, (#9003)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab017106a85c5cc54cec2a780bdf803a1db432fa", "author": {"user": {"login": "mvysny", "name": "Martin Vysny"}}, "url": "https://github.com/vaadin/flow/commit/ab017106a85c5cc54cec2a780bdf803a1db432fa", "committedDate": "2020-09-11T13:09:30Z", "message": "Fixed: flow-server now closes resources properly when parsing java classes (#9002)\n\nAs the ClassReader(InputStream) constructor doesn't close the input stream itself, the stream is then left hanging. This is a problem with the Gradle Plugin since the input stream is left hanging in the Gradle Daemon, which can stay around for hours. \r\n\r\nThis could be a possible cause for vaadin/vaadin-gradle-plugin#81"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66fe870c37d5350cebc4bc120a29079ae3201b2c", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/66fe870c37d5350cebc4bc120a29079ae3201b2c", "committedDate": "2020-09-14T08:17:10Z", "message": "Read template attributes as properties (#8988)\n\nRead template attributes as properties\r\n\r\nFixes #8974"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fba4e1e257f2c79ed7b7744fe0f5403a02f49f2", "author": {"user": null}, "url": "https://github.com/vaadin/flow/commit/8fba4e1e257f2c79ed7b7744fe0f5403a02f49f2", "committedDate": "2020-09-15T11:57:05Z", "message": "Set enable state based on template element attribute (#9007)\n\nSet element disabled if template has disabled property\r\nFixes #8973"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9", "author": {"user": {"login": "haijian-vaadin", "name": "Haijian Wang"}}, "url": "https://github.com/vaadin/flow/commit/8f998e067224b1525d069a1ee78e040d937ae3e9", "committedDate": "2020-09-15T19:24:42Z", "message": "Merge branch 'master' into haijian/merge-master-to-offline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDg5NDAx", "url": "https://github.com/vaadin/flow/pull/9014#pullrequestreview-489089401", "createdAt": "2020-09-15T21:15:26Z", "commit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNToyNlrOHSU0gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNToyNlrOHSU0gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3NzUzNg==", "bodyText": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.", "url": "https://github.com/vaadin/flow/pull/9014#discussion_r488977536", "createdAt": "2020-09-15T21:15:26Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/littemplate/LitTemplateParserImpl.java", "diffHunk": "@@ -0,0 +1,254 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component.littemplate;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.concurrent.locks.ReentrantLock;\n+import java.util.stream.Collectors;\n+\n+import org.jsoup.UncheckedIOException;\n+import org.jsoup.nodes.Element;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vaadin.flow.component.dependency.JsModule;\n+import com.vaadin.flow.component.polymertemplate.BundleParser;\n+import com.vaadin.flow.function.DeploymentConfiguration;\n+import com.vaadin.flow.internal.AnnotationReader;\n+import com.vaadin.flow.internal.Pair;\n+import com.vaadin.flow.server.DependencyFilter;\n+import com.vaadin.flow.server.VaadinService;\n+import com.vaadin.flow.server.frontend.FrontendUtils;\n+import com.vaadin.flow.shared.ui.Dependency;\n+import com.vaadin.flow.shared.ui.LoadMode;\n+\n+import elemental.json.JsonObject;\n+\n+/**\n+ * Lit template parser implementation.\n+ * <p>\n+ * The implementation scans all JsModule annotations for the given template\n+ * class and tries to find the one that contains template definition using the\n+ * tag name.\n+ * <p>\n+ * The class is Singleton. Use {@link LitTemplateParserImpl#getInstance()} to\n+ * get its instance.\n+ *\n+ *\n+ * @author Vaadin Ltd\n+ * @since\n+ *\n+ * @see BundleParser\n+ */\n+class LitTemplateParserImpl implements LitTemplateParser {\n+\n+    private static final LitTemplateParser INSTANCE = new LitTemplateParserImpl();\n+\n+    private final HashMap<String, String> cache = new HashMap<>();\n+    private final ReentrantLock templateSourceslock = new ReentrantLock();\n+    private JsonObject jsonStats;\n+\n+    /**\n+     * The default constructor. Protected in order to prevent direct\n+     * instantiation, but not private in order to allow mocking/overrides for\n+     * testing purposes.\n+     */\n+    protected LitTemplateParserImpl() {\n+    }\n+\n+    static LitTemplateParser getInstance() {\n+        return INSTANCE;\n+    }\n+\n+    @Override\n+    public TemplateData getTemplateContent(Class<? extends LitTemplate> clazz,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDg5NDMy", "url": "https://github.com/vaadin/flow/pull/9014#pullrequestreview-489089432", "createdAt": "2020-09-15T21:15:27Z", "commit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNToyN1rOHSU0hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNToyN1rOHSU0hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3NzU0Mg==", "bodyText": "Reduce the total number of break and continue statements in this loop to use at most one.", "url": "https://github.com/vaadin/flow/pull/9014#discussion_r488977542", "createdAt": "2020-09-15T21:15:27Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/littemplate/LitTemplateParserImpl.java", "diffHunk": "@@ -0,0 +1,254 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component.littemplate;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.concurrent.locks.ReentrantLock;\n+import java.util.stream.Collectors;\n+\n+import org.jsoup.UncheckedIOException;\n+import org.jsoup.nodes.Element;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vaadin.flow.component.dependency.JsModule;\n+import com.vaadin.flow.component.polymertemplate.BundleParser;\n+import com.vaadin.flow.function.DeploymentConfiguration;\n+import com.vaadin.flow.internal.AnnotationReader;\n+import com.vaadin.flow.internal.Pair;\n+import com.vaadin.flow.server.DependencyFilter;\n+import com.vaadin.flow.server.VaadinService;\n+import com.vaadin.flow.server.frontend.FrontendUtils;\n+import com.vaadin.flow.shared.ui.Dependency;\n+import com.vaadin.flow.shared.ui.LoadMode;\n+\n+import elemental.json.JsonObject;\n+\n+/**\n+ * Lit template parser implementation.\n+ * <p>\n+ * The implementation scans all JsModule annotations for the given template\n+ * class and tries to find the one that contains template definition using the\n+ * tag name.\n+ * <p>\n+ * The class is Singleton. Use {@link LitTemplateParserImpl#getInstance()} to\n+ * get its instance.\n+ *\n+ *\n+ * @author Vaadin Ltd\n+ * @since\n+ *\n+ * @see BundleParser\n+ */\n+class LitTemplateParserImpl implements LitTemplateParser {\n+\n+    private static final LitTemplateParser INSTANCE = new LitTemplateParserImpl();\n+\n+    private final HashMap<String, String> cache = new HashMap<>();\n+    private final ReentrantLock templateSourceslock = new ReentrantLock();\n+    private JsonObject jsonStats;\n+\n+    /**\n+     * The default constructor. Protected in order to prevent direct\n+     * instantiation, but not private in order to allow mocking/overrides for\n+     * testing purposes.\n+     */\n+    protected LitTemplateParserImpl() {\n+    }\n+\n+    static LitTemplateParser getInstance() {\n+        return INSTANCE;\n+    }\n+\n+    @Override\n+    public TemplateData getTemplateContent(Class<? extends LitTemplate> clazz,\n+            String tag, VaadinService service) {\n+\n+        List<Dependency> dependencies = AnnotationReader\n+                .getAnnotationsFor(clazz, JsModule.class).stream()\n+                .map(jsModule -> new Dependency(Dependency.Type.JS_MODULE,\n+                        jsModule.value(), LoadMode.EAGER)) // load mode doesn't\n+                                                           // matter here\n+                .collect(Collectors.toList());\n+\n+        for (DependencyFilter filter : service.getDependencyFilters()) {\n+            dependencies = filter.filter(new ArrayList<>(dependencies),\n+                    service);\n+        }\n+\n+        Pair<Dependency, String> chosenDep = null;\n+\n+        for (Dependency dependency : dependencies) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDg5NDY1", "url": "https://github.com/vaadin/flow/pull/9014#pullrequestreview-489089465", "createdAt": "2020-09-15T21:15:28Z", "commit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNToyOFrOHSU0jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNToyOFrOHSU0jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3NzU1MQ==", "bodyText": "Make \"parser\" transient or serializable.", "url": "https://github.com/vaadin/flow/pull/9014#discussion_r488977551", "createdAt": "2020-09-15T21:15:28Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/littemplate/LitTemplateDataAnalyzer.java", "diffHunk": "@@ -17,29 +17,51 @@\n \n import java.io.Serializable;\n import java.util.Collections;\n+import java.util.Optional;\n \n+import org.jsoup.nodes.Element;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.vaadin.flow.component.Tag;\n+import com.vaadin.flow.component.littemplate.LitTemplateParser.TemplateData;\n import com.vaadin.flow.component.polymertemplate.IdCollector;\n import com.vaadin.flow.component.polymertemplate.TemplateDataAnalyzer.ParserData;\n+import com.vaadin.flow.internal.AnnotationReader;\n+import com.vaadin.flow.server.VaadinService;\n \n /**\n  * Template data analyzer which produces immutable data required for template\n  * initializer using provided template class and a parser.\n  *\n  * @author Vaadin Ltd\n+ * @since\n  *\n  */\n class LitTemplateDataAnalyzer implements Serializable {\n \n     private final Class<? extends LitTemplate> templateClass;\n+    private final LitTemplateParser parser;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDg5NDk3", "url": "https://github.com/vaadin/flow/pull/9014#pullrequestreview-489089497", "createdAt": "2020-09-15T21:15:29Z", "commit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNToyOVrOHSU0lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNToyOVrOHSU0lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3NzU1OQ==", "bodyText": "Remove this use of \"DEAULT_FLOW_RESOURCES_FOLDER\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/9014#discussion_r488977559", "createdAt": "2020-09-15T21:15:29Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/polymertemplate/BundleParser.java", "diffHunk": "@@ -256,8 +324,8 @@ private static String getSourceFromObject(JsonObject module,\n             // using ./ as the actual path contains\n             // \"node_modules/@vaadin/flow-frontend/\" instead of \"./\"\n             // \"target/flow-frontend/\" instead of \"./\"\n-            if (name.contains(FLOW_NPM_PACKAGE_NAME) ||\n-                    name.contains(DEAULT_FLOW_RESOURCES_FOLDER)) {\n+            if (name.contains(FLOW_NPM_PACKAGE_NAME)\n+                    || name.contains(DEAULT_FLOW_RESOURCES_FOLDER)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "originalPosition": 155}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDg5NTMz", "url": "https://github.com/vaadin/flow/pull/9014#pullrequestreview-489089533", "createdAt": "2020-09-15T21:15:30Z", "commit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNTozMFrOHSU0oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNTozMFrOHSU0oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3NzU2OA==", "bodyText": "Do not forget to remove this deprecated code someday.", "url": "https://github.com/vaadin/flow/pull/9014#discussion_r488977568", "createdAt": "2020-09-15T21:15:30Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java", "diffHunk": "@@ -129,9 +129,20 @@\n      * Default folder for copying front-end resources present in the classpath\n      * jars.\n      */\n-    public static final String DEAULT_FLOW_RESOURCES_FOLDER = TARGET\n+    public static final String DEFAULT_FLOW_RESOURCES_FOLDER = TARGET\n             + \"flow-frontend\";\n \n+    /**\n+     * Default folder for copying front-end resources present in the classpath\n+     * jars.\n+     * @deprecated This is deprecated due to a typo.\n+     *             Use DEFAULT_FLOW_RESOURCES_FOLDER instead.\n+     * @see #DEFAULT_FLOW_RESOURCES_FOLDER\n+     */\n+    @Deprecated\n+    public static final String DEAULT_FLOW_RESOURCES_FOLDER =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDg5NTYx", "url": "https://github.com/vaadin/flow/pull/9014#pullrequestreview-489089561", "createdAt": "2020-09-15T21:15:31Z", "commit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNTozMVrOHSU0pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToxNTozMVrOHSU0pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3NzU3NQ==", "bodyText": "Call \"tagName.isPresent()\" before accessing the value.", "url": "https://github.com/vaadin/flow/pull/9014#discussion_r488977575", "createdAt": "2020-09-15T21:15:31Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/polymertemplate/IdCollector.java", "diffHunk": "@@ -121,19 +126,21 @@ private void collectedInjectedId(Field field,\n      * @return <code>false</code> if the mapping did not pass validation,\n      *         <code>true</code> otherwise\n      */\n-    private boolean addTagName(String id, Field field) {\n+    private boolean collectElementData(String id, Field field) {\n         idByField.put(field, id);\n         if (templateRoot != null) {\n             // The template is available for parsing so check up front if the id\n             // exists\n-            Optional<String> tagName = Optional\n-                    .ofNullable(templateRoot.getElementById(id))\n+            Optional<Element> element = Optional\n+                    .ofNullable(templateRoot.getElementById(id));\n+            Optional<String> tagName = element\n                     .map(org.jsoup.nodes.Element::tagName);\n-            if (tagName.isPresent()) {\n+            if (element.isPresent()) {\n                 tagById.put(id, tagName.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjU0MzQ3", "url": "https://github.com/vaadin/flow/pull/9014#pullrequestreview-491254347", "createdAt": "2020-09-18T08:26:16Z", "commit": {"oid": "8f998e067224b1525d069a1ee78e040d937ae3e9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4882, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}