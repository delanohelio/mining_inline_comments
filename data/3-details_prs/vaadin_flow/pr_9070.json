{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MzE3NTM2", "number": 9070, "title": "Add data communicator API for disabling data provider interactions", "bodyText": "", "createdAt": "2020-09-28T18:12:30Z", "url": "https://github.com/vaadin/flow/pull/9070", "merged": true, "mergeCommit": {"oid": "c4ffe6c5b873346f9b0730bf06dea69a7a6d08b5"}, "closed": true, "closedAt": "2020-09-30T07:44:42Z", "author": {"login": "mshabarov"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNiYrtgFqTQ5ODEyODUyOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdN3077gFqTQ5OTE2MTMzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MTI4NTI5", "url": "https://github.com/vaadin/flow/pull/9070#pullrequestreview-498128529", "createdAt": "2020-09-29T06:24:54Z", "commit": {"oid": "6a021a0c941a23095e2ec92aedb8e0b9b135e0c9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjoyNDo1NFrOHZclWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjo0MDoxMlrOHZc-5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ0NDc2Mw==", "bodyText": "Unrelated unnecessary changes", "url": "https://github.com/vaadin/flow/pull/9070#discussion_r496444763", "createdAt": "2020-09-29T06:24:54Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -530,8 +571,8 @@ public int getItemCountEstimateIncrease() {\n     public void setDefinedSize(boolean definedSize) {\n         if (this.definedSize != definedSize) {\n             this.definedSize = definedSize;\n-            countCallback = null;\n-            skipCountIncreaseUntilReset = false;\n+            this.countCallback = null;\n+            this.skipCountIncreaseUntilReset = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a021a0c941a23095e2ec92aedb8e0b9b135e0c9"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ0NTExOQ==", "bodyText": "Unrelated unnecessary change (yes the this. for countCallback is unnecessary too)", "url": "https://github.com/vaadin/flow/pull/9070#discussion_r496445119", "createdAt": "2020-09-29T06:25:38Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -496,7 +537,7 @@ public void setItemCountEstimateIncrease(int itemCountEstimateIncrease) {\n         }\n         this.itemCountEstimateIncrease = itemCountEstimateIncrease;\n         this.countCallback = null;\n-        definedSize = false;\n+        this.definedSize = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a021a0c941a23095e2ec92aedb8e0b9b135e0c9"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1MDM4OA==", "bodyText": "Why should this be blocked ??? Since this API is not directly exposed to users, like it should not, it feels weird to me that for some components I can do\nComponent listing = createListing();\nlisting.setItems(query -> getStuff(query));\nlisting.getItem(0);\nbut not for all. So for Grid this would work and not for combobox (I guess) ??? That is confusing.", "url": "https://github.com/vaadin/flow/pull/9070#discussion_r496450388", "createdAt": "2020-09-29T06:38:05Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -341,36 +375,43 @@ public T getItem(int index) {\n         int activeDataEnd = activeStart + activeKeyOrder.size() - 1;\n         /*\n          * Check if the item on a requested index is already in the cache of\n-         * active items. No matter is this currently a defined or undefined\n-         * mode\n+         * active items. No matter is this currently a defined or undefined mode\n          */\n         if (index >= activeStart && index <= activeDataEnd) {\n             return getKeyMapper().get(activeKeyOrder.get(index - activeStart));\n         } else {\n             final int itemCount = getItemCount();\n             /*\n-             * The exception is thrown if the exact size is used and the data\n-             * is empty, or the index is outside of the item count range,\n-             * because we definitely know the item count from a backend.\n+             * The exception is thrown if the exact size is used and the data is\n+             * empty, or the index is outside of the item count range, because\n+             * we definitely know the item count from a backend.\n              */\n             if (isDefinedSize()) {\n                 if (itemCount == 0) {\n-                    throw new IndexOutOfBoundsException(String\n-                            .format(\"Requested index %d on empty data.\", index));\n+                    throw new IndexOutOfBoundsException(String.format(\n+                            \"Requested index %d on empty data.\", index));\n                 } else if (index >= itemCount) {\n                     throw new IndexOutOfBoundsException(String.format(\n                             \"Given index %d is outside of the accepted range '0 - %d'\",\n                             index, itemCount - 1));\n                 }\n             }\n+\n+            if (fetchDisabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a021a0c941a23095e2ec92aedb8e0b9b135e0c9"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1MTMwMg==", "bodyText": "Again, it would be weird for a data view API user that the same things work for another component, but not for another.", "url": "https://github.com/vaadin/flow/pull/9070#discussion_r496451302", "createdAt": "2020-09-29T06:40:12Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -648,15 +689,56 @@ public void setPagingEnabled(boolean pagingEnabled) {\n         this.pagingEnabled = pagingEnabled;\n     }\n \n+    /**\n+     * Returns whether the data communicator will call Data Provider for\n+     * fetching the items and/or getting the items count, or ignore such a\n+     * calls.\n+     *\n+     * @return {@code true} if the calls to data provider are ignored,\n+     *         {@code false} otherwise\n+     */\n+    public boolean isFetchDisabled() {\n+        return fetchDisabled;\n+    }\n+\n+    /**\n+     * Sets whether the data communicator will call Data Provider for fetching\n+     * the items and/or getting the items count, or ignore such a calls.\n+     * <p>\n+     * One may need to disable the data provider calls in order to configure the\n+     * data communicator and to postpone these calls until some event, i.e.\n+     * dropdown open event of the combo box.\n+     * <p>\n+     * This sets to {@code false} by default.\n+     *\n+     * @param fetchDisabled\n+     *            if {@code true} then the calls to data provider are ignored,\n+     *            otherwise the data provider is queried when needed.\n+     */\n+    public void setFetchDisabled(boolean fetchDisabled) {\n+        this.fetchDisabled = fetchDisabled;\n+    }\n+\n     /**\n      * Getter method for determining the item count of the data. Can be\n      * overridden by a subclass that uses a specific type of DataProvider and/or\n      * query.\n      *\n+     * @throws IllegalStateException\n+     *             if the calls to data provider are disabled.\n+     *\n      * @return the size of data provider with current filter\n      */\n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     protected int getDataProviderSize() {\n+        if (fetchDisabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a021a0c941a23095e2ec92aedb8e0b9b135e0c9"}, "originalPosition": 194}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4627d823d060e35fa683a7e32301dc9b137521c8", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/4627d823d060e35fa683a7e32301dc9b137521c8", "committedDate": "2020-09-29T10:58:54Z", "message": "Add data communicator API for disabling data provider interactions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec18d31715b65e27ed25ee7e58e76002aff18358", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/ec18d31715b65e27ed25ee7e58e76002aff18358", "committedDate": "2020-09-29T13:27:33Z", "message": "Exclude unnecessary restrictions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a021a0c941a23095e2ec92aedb8e0b9b135e0c9", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/6a021a0c941a23095e2ec92aedb8e0b9b135e0c9", "committedDate": "2020-09-28T18:11:04Z", "message": "Add data communicator API for disabling data provider interactions"}, "afterCommit": {"oid": "ec18d31715b65e27ed25ee7e58e76002aff18358", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/ec18d31715b65e27ed25ee7e58e76002aff18358", "committedDate": "2020-09-29T13:27:33Z", "message": "Exclude unnecessary restrictions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NzYxNTQ1", "url": "https://github.com/vaadin/flow/pull/9070#pullrequestreview-498761545", "createdAt": "2020-09-29T18:22:45Z", "commit": {"oid": "ec18d31715b65e27ed25ee7e58e76002aff18358"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5928dc891c2c2cfd3d1cb761100fe291ba0b313b", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/5928dc891c2c2cfd3d1cb761100fe291ba0b313b", "committedDate": "2020-09-29T18:48:49Z", "message": "Revert unchanged code formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "742842bbc03b20bc7eaff57df00c4b524d66e5f3", "author": {"user": {"login": "mshabarov", "name": "Mikhail Shabarov"}}, "url": "https://github.com/vaadin/flow/commit/742842bbc03b20bc7eaff57df00c4b524d66e5f3", "committedDate": "2020-09-29T19:03:23Z", "message": "More reverts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MTYxMzMx", "url": "https://github.com/vaadin/flow/pull/9070#pullrequestreview-499161331", "createdAt": "2020-09-30T07:40:51Z", "commit": {"oid": "742842bbc03b20bc7eaff57df00c4b524d66e5f3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4951, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}