{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMjY5Mjk1", "number": 8424, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzowNDowNFrOD_9d2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowMjo0NFrOEGZAVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzkzOTQ0OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzowNDowNFrOGa7_Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzowNDowNFrOGa7_Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5OTAxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * @since 3.0\n          \n          \n            \n             * @since", "url": "https://github.com/vaadin/flow/pull/8424#discussion_r430899011", "createdAt": "2020-05-27T07:04:04Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import com.vaadin.flow.dom.ElementConstants;\n+\n+/**\n+ * A component that supports label definition.\n+ * <p>\n+ * The default implementations set the label of the component to the given text for\n+ * {@link #getElement()}. Override all methods in this interface if the text\n+ * should be added to some other element.\n+ *\n+ *\n+ * @author Vaadin Ltd\n+ * @since 3.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12ba880f57a4efe1924eafde6eae7afa67d1f585"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDA4NjA2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzo1MDowOFrOGa9b4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNToxODo1NFrOGk19PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMjcyMQ==", "bodyText": "return getElement().getProperty(ElementConstants.LABEL_PROPERTY_NAME, \"\");\n\nBecause currently all of our text components like TextField work in an inconsistent way and return either null for initial value or \"\" if cleared after value has been set, we will discuss internally that how we want to fix this design flaw that is existing. I'll comment later on if/how we'll want to change the current behavior.", "url": "https://github.com/vaadin/flow/pull/8424#discussion_r430922721", "createdAt": "2020-05-27T07:50:08Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import com.vaadin.flow.dom.ElementConstants;\n+\n+/**\n+ * A component that supports label definition.\n+ * <p>\n+ * The default implementations set the label of the component to the given text for\n+ * {@link #getElement()}. Override all methods in this interface if the text\n+ * should be added to some other element.\n+ *\n+ *\n+ * @author Vaadin Ltd\n+ * @since 3.0\n+ */\n+public interface HasLabel extends HasElement{\n+    /**\n+     * Set the label of the component to the given text.\n+     *\n+     * @param label\n+     *            the label text to set\n+     */\n+    default void setLabel(String label) {\n+        getElement().setProperty(ElementConstants.LABEL_PROPERTY_NAME, label == null ? \"\" : label);\n+    }\n+\n+    /**\n+     * Gets the label of the component.\n+     *\n+     * @return the label of the component or <code>\"\"</code> if no label has\n+     *         been set\n+     */\n+    default String getLabel() {\n+        return getElement().getProperty(ElementConstants.LABEL_PROPERTY_NAME, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12ba880f57a4efe1924eafde6eae7afa67d1f585"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE3MTA1NA==", "bodyText": "Ok, sure. Let me know when there's a decision \ud83d\udc4d", "url": "https://github.com/vaadin/flow/pull/8424#discussion_r431171054", "createdAt": "2020-05-27T14:22:16Z", "author": {"login": "ovidiupopa91"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import com.vaadin.flow.dom.ElementConstants;\n+\n+/**\n+ * A component that supports label definition.\n+ * <p>\n+ * The default implementations set the label of the component to the given text for\n+ * {@link #getElement()}. Override all methods in this interface if the text\n+ * should be added to some other element.\n+ *\n+ *\n+ * @author Vaadin Ltd\n+ * @since 3.0\n+ */\n+public interface HasLabel extends HasElement{\n+    /**\n+     * Set the label of the component to the given text.\n+     *\n+     * @param label\n+     *            the label text to set\n+     */\n+    default void setLabel(String label) {\n+        getElement().setProperty(ElementConstants.LABEL_PROPERTY_NAME, label == null ? \"\" : label);\n+    }\n+\n+    /**\n+     * Gets the label of the component.\n+     *\n+     * @return the label of the component or <code>\"\"</code> if no label has\n+     *         been set\n+     */\n+    default String getLabel() {\n+        return getElement().getProperty(ElementConstants.LABEL_PROPERTY_NAME, \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMjcyMQ=="}, "originalCommit": {"oid": "12ba880f57a4efe1924eafde6eae7afa67d1f585"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY0ODQyNA==", "bodyText": "Sorry for the delay.\nThe decision is to go with returning null for the default value when setLabel(null) has been done.\nPlease change the setter to also just to pass null as the value of the property and not \"\".", "url": "https://github.com/vaadin/flow/pull/8424#discussion_r440648424", "createdAt": "2020-06-16T07:41:05Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import com.vaadin.flow.dom.ElementConstants;\n+\n+/**\n+ * A component that supports label definition.\n+ * <p>\n+ * The default implementations set the label of the component to the given text for\n+ * {@link #getElement()}. Override all methods in this interface if the text\n+ * should be added to some other element.\n+ *\n+ *\n+ * @author Vaadin Ltd\n+ * @since 3.0\n+ */\n+public interface HasLabel extends HasElement{\n+    /**\n+     * Set the label of the component to the given text.\n+     *\n+     * @param label\n+     *            the label text to set\n+     */\n+    default void setLabel(String label) {\n+        getElement().setProperty(ElementConstants.LABEL_PROPERTY_NAME, label == null ? \"\" : label);\n+    }\n+\n+    /**\n+     * Gets the label of the component.\n+     *\n+     * @return the label of the component or <code>\"\"</code> if no label has\n+     *         been set\n+     */\n+    default String getLabel() {\n+        return getElement().getProperty(ElementConstants.LABEL_PROPERTY_NAME, \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMjcyMQ=="}, "originalCommit": {"oid": "12ba880f57a4efe1924eafde6eae7afa67d1f585"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4NTk0OA==", "bodyText": "HI @pleku . Just updated the implementation and the unit tests. Also I added 2 new unit tests.\nLet me know if there is something else that I should improve.", "url": "https://github.com/vaadin/flow/pull/8424#discussion_r441285948", "createdAt": "2020-06-17T05:18:54Z", "author": {"login": "ovidiupopa91"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import com.vaadin.flow.dom.ElementConstants;\n+\n+/**\n+ * A component that supports label definition.\n+ * <p>\n+ * The default implementations set the label of the component to the given text for\n+ * {@link #getElement()}. Override all methods in this interface if the text\n+ * should be added to some other element.\n+ *\n+ *\n+ * @author Vaadin Ltd\n+ * @since 3.0\n+ */\n+public interface HasLabel extends HasElement{\n+    /**\n+     * Set the label of the component to the given text.\n+     *\n+     * @param label\n+     *            the label text to set\n+     */\n+    default void setLabel(String label) {\n+        getElement().setProperty(ElementConstants.LABEL_PROPERTY_NAME, label == null ? \"\" : label);\n+    }\n+\n+    /**\n+     * Gets the label of the component.\n+     *\n+     * @return the label of the component or <code>\"\"</code> if no label has\n+     *         been set\n+     */\n+    default String getLabel() {\n+        return getElement().getProperty(ElementConstants.LABEL_PROPERTY_NAME, \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMjcyMQ=="}, "originalCommit": {"oid": "12ba880f57a4efe1924eafde6eae7afa67d1f585"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTM2MzUyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowMjoxNVrOGlKC2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowMjoxNVrOGlKC2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxNTA2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *            the label text to set\n          \n          \n            \n                 *            the label text to set or {@code null} to clear", "url": "https://github.com/vaadin/flow/pull/8424#discussion_r441615067", "createdAt": "2020-06-17T15:02:15Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import com.vaadin.flow.dom.ElementConstants;\n+\n+/**\n+ * A component that supports label definition.\n+ * <p>\n+ * The default implementations set the label of the component to the given text for\n+ * {@link #getElement()}. Override all methods in this interface if the text\n+ * should be added to some other element.\n+ *\n+ *\n+ * @author Vaadin Ltd\n+ * @since\n+ */\n+public interface HasLabel extends HasElement{\n+    /**\n+     * Set the label of the component to the given text.\n+     *\n+     * @param label\n+     *            the label text to set", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c54a3947091d5e9c6cd33122bfb97fe02dbb55"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTM2NTk3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowMjo0NFrOGlKEaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowMjo0NFrOGlKEaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxNTQ2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the label of the component or <code>\"\"</code> if no label has\n          \n          \n            \n                 * @return the label of the component or {@code null} if no label has", "url": "https://github.com/vaadin/flow/pull/8424#discussion_r441615467", "createdAt": "2020-06-17T15:02:44Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/HasLabel.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.component;\n+\n+import com.vaadin.flow.dom.ElementConstants;\n+\n+/**\n+ * A component that supports label definition.\n+ * <p>\n+ * The default implementations set the label of the component to the given text for\n+ * {@link #getElement()}. Override all methods in this interface if the text\n+ * should be added to some other element.\n+ *\n+ *\n+ * @author Vaadin Ltd\n+ * @since\n+ */\n+public interface HasLabel extends HasElement{\n+    /**\n+     * Set the label of the component to the given text.\n+     *\n+     * @param label\n+     *            the label text to set\n+     */\n+    default void setLabel(String label) {\n+        getElement().setProperty(ElementConstants.LABEL_PROPERTY_NAME, label);\n+    }\n+\n+    /**\n+     * Gets the label of the component.\n+     *\n+     * @return the label of the component or <code>\"\"</code> if no label has", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c54a3947091d5e9c6cd33122bfb97fe02dbb55"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3404, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}