{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyOTk5NjM3", "number": 7353, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToxOFrODYGuUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToyM1rODYGubg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjAyNTc4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/page/Page.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToxOFrOFdxaow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToxOFrOFdxaow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2MjY1OQ==", "bodyText": "Do not forget to remove this deprecated code someday.", "url": "https://github.com/vaadin/flow/pull/7353#discussion_r366762659", "createdAt": "2020-01-15T09:11:18Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/page/Page.java", "diffHunk": "@@ -284,6 +303,42 @@ public void addDynamicImport(String expression) {\n         addDependency(new Dependency(Type.DYNAMIC_IMPORT, expression));\n     }\n \n+    // When updating JavaDocs here, keep in sync with Element.executeJavaScript\n+    /**\n+     * Asynchronously runs the given JavaScript expression in the browser. The\n+     * given parameters will be available to the expression as variables named\n+     * <code>$0</code>, <code>$1</code>, and so on. Supported parameter types\n+     * are:\n+     * <ul>\n+     * <li>{@link String}\n+     * <li>{@link Integer}\n+     * <li>{@link Double}\n+     * <li>{@link Boolean}\n+     * <li>{@link JsonValue}\n+     * <li>{@link Element} (will be sent as <code>null</code> if the server-side\n+     * element instance is not attached when the invocation is sent to the\n+     * client)\n+     * </ul>\n+     * Note that the parameter variables can only be used in contexts where a\n+     * JavaScript variable can be used. You should for instance do\n+     * <code>'prefix' + $0</code> instead of <code>'prefix$0'</code> and\n+     * <code>value[$0]</code> instead of <code>value.$0</code> since JavaScript\n+     * variables aren't evaluated inside strings or property names.\n+     *\n+     * @param expression\n+     *            the JavaScript expression to invoke\n+     * @param parameters\n+     *            parameters to pass to the expression\n+     * @return a callback for canceling the execution if not yet sent to browser\n+     * @deprecated Use {@link #executeJs(String,Serializable...)} instead since\n+     *             it also allows getting return value back.\n+     */\n+    @Deprecated\n+    public ExecutionCanceler executeJavaScript(String expression,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69d2b1aee0dba55422503835c0578b64b61ae100"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjAyNTgyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/page/Page.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToyMFrOFdxarg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToyMFrOFdxarg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2MjY3MA==", "bodyText": "Do not forget to remove this deprecated code someday.", "url": "https://github.com/vaadin/flow/pull/7353#discussion_r366762670", "createdAt": "2020-01-15T09:11:20Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/page/Page.java", "diffHunk": "@@ -128,6 +128,25 @@ public void remove() {\n \n     private ResizeEventReceiver resizeReceiver;\n \n+    /**\n+     * Callback method for canceling executable javascript set with\n+     * {@link Page#executeJs(String, Serializable...)}.\n+     *\n+     * @deprecated superseded by {@link PendingJavaScriptResult}\n+     */\n+    @FunctionalInterface\n+    @Deprecated\n+    public interface ExecutionCanceler extends Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69d2b1aee0dba55422503835c0578b64b61ae100"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjAyNTkwOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/dom/Element.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToyMVrOFdxauQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToyMVrOFdxauQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2MjY4MQ==", "bodyText": "Do not forget to remove this deprecated code someday.", "url": "https://github.com/vaadin/flow/pull/7353#discussion_r366762681", "createdAt": "2020-01-15T09:11:21Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/dom/Element.java", "diffHunk": "@@ -1593,6 +1622,43 @@ public PendingJavaScriptResult callJsFunction(String functionName,\n                 + paramPlaceholderString + \")\", jsParameters);\n     }\n \n+    // When updating JavaDocs here, keep in sync with Page.executeJavaScript\n+    /**\n+     * Asynchronously runs the given JavaScript expression in the browser in the\n+     * context of this element. This element will be available to the expression\n+     * as <code>this</code>. The given parameters will be available as variables\n+     * named <code>$0</code>, <code>$1</code>, and so on. Supported parameter\n+     * types are:\n+     * <ul>\n+     * <li>{@link String}\n+     * <li>{@link Integer}\n+     * <li>{@link Double}\n+     * <li>{@link Boolean}\n+     * <li>{@link JsonValue}\n+     * <li>{@link Element} (will be sent as <code>null</code> if the server-side\n+     * element instance is not attached when the invocation is sent to the\n+     * client)\n+     * </ul>\n+     * Note that the parameter variables can only be used in contexts where a\n+     * JavaScript variable can be used. You should for instance do\n+     * <code>'prefix' + $0</code> instead of <code>'prefix$0'</code> and\n+     * <code>value[$0]</code> instead of <code>value.$0</code> since JavaScript\n+     * variables aren't evaluated inside strings or property names.\n+     *\n+     * @param expression\n+     *            the JavaScript expression to invoke\n+     * @param parameters\n+     *            parameters to pass to the expression\n+     * @deprecated Use {@link #executeJs(String,Serializable...)} instead since\n+     *             it also allows getting return value back.\n+     */\n+    @Deprecated\n+    public void executeJavaScript(String expression,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69d2b1aee0dba55422503835c0578b64b61ae100"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjAyNTk2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/dom/Element.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToyMlrOFdxawA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToyMlrOFdxawA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2MjY4OA==", "bodyText": "Do not forget to remove this deprecated code someday.", "url": "https://github.com/vaadin/flow/pull/7353#discussion_r366762688", "createdAt": "2020-01-15T09:11:22Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/dom/Element.java", "diffHunk": "@@ -1550,6 +1550,35 @@ public String getOuterHTML() {\n         return ComponentUtil.componentFromElement(this, componentType, false);\n     }\n \n+    /**\n+     * Calls the given function on the element with the given arguments.\n+     * <p>\n+     * The function will be called after all pending DOM updates have completed,\n+     * at the same time that {@link Page#executeJs(String, Serializable...)}\n+     * calls are invoked.\n+     * <p>\n+     * If the element is not attached, the function call will be deferred until\n+     * the element is attached.\n+     *\n+     * @see JsonCodec JsonCodec for supported argument types\n+     *\n+     * @param functionName\n+     *            the name of the function to call, may contain dots to indicate\n+     *            a function on a property.\n+     * @param arguments\n+     *            the arguments to pass to the function. Must be of a type\n+     *            supported by the communication mechanism, as defined by\n+     *            {@link JsonCodec}\n+     *\n+     * @deprecated Use {@link #callJsFunction(String,Serializable...)} instead\n+     *             since it also allows getting return value back.\n+     */\n+    @Deprecated\n+    public void callFunction(String functionName, Serializable... arguments) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69d2b1aee0dba55422503835c0578b64b61ae100"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjAyNjA2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/page/PendingJavaScriptResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToyM1rOFdxa0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxMToyM1rOFdxa0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2MjcwNA==", "bodyText": "Remove this use of \"ExecutionCanceler\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/7353#discussion_r366762704", "createdAt": "2020-01-15T09:11:23Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/page/PendingJavaScriptResult.java", "diffHunk": "@@ -40,7 +41,8 @@\n  * @author Vaadin Ltd\n  * @since 2.0\n  */\n-public interface PendingJavaScriptResult extends Serializable {\n+public interface PendingJavaScriptResult\n+        extends Serializable, ExecutionCanceler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69d2b1aee0dba55422503835c0578b64b61ae100"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3703, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}