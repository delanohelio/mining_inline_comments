{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTU1NDUy", "number": 8051, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyNjoxMlrODxq8BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDozNDozMVrODxrLnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDEwMzA4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/connect/VaadinConnectController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyNjoxMlrOGFRRVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyNjoxMlrOGFRRVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3OTAyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private ObjectMapper getDefaultObjectMapper(ApplicationContext context) {\n          \n          \n            \n                private ObjectMapper createVaadinConnectObjectMapper(ApplicationContext context) {\n          \n      \n    \n    \n  \n\n\nI would rename the get to create, because we create a new instance\nI would rename the method to show that we create the default ObjectMapper for VaadinConnect, not the default ObjectMapper", "url": "https://github.com/vaadin/flow/pull/8051#discussion_r408179029", "createdAt": "2020-04-14T14:26:12Z", "author": {"login": "knoobie"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/connect/VaadinConnectController.java", "diffHunk": "@@ -153,6 +161,17 @@ public VaadinConnectController(\n         }\n     }\n \n+    private ObjectMapper getDefaultObjectMapper(ApplicationContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "970c9d9add64de948a0922501851dfbb645406c1"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDExODMzOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/connect/VaadinConnectController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyOToxN1rOGFRa9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyOToxN1rOGFRa9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4MTQ5NQ==", "bodyText": "Edit: This could be all wrong - let me check it.. just saw that it is a static method call.\nEdit2: It is working like this (it inherits in my test spring's config) - this is surprising.. but I it feels wrong. I would still be in favor ofcontext.getBean(Jackson2ObjectMapperBuilder.class) - just in case.\nThis won't work Because you create a completely new instance again (this time from the Jackson2ObjectMapperBuilder) - so all spring related defaults are gone again.\nThis can be fixed in two ways:\n\nadd Jackson2ObjectMapperBuilder to the constructor of the class and in this method as argument\ncontext.getBean(Jackson2ObjectMapperBuilder.class) could be used to get the current impl of spring.\n\nSee here for more information what is configured: https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java#L172", "url": "https://github.com/vaadin/flow/pull/8051#discussion_r408181495", "createdAt": "2020-04-14T14:29:17Z", "author": {"login": "knoobie"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/connect/VaadinConnectController.java", "diffHunk": "@@ -153,6 +161,17 @@ public VaadinConnectController(\n         }\n     }\n \n+    private ObjectMapper getDefaultObjectMapper(ApplicationContext context) {\n+        ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "970c9d9add64de948a0922501851dfbb645406c1"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDE0MzAzOnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/server/connect/VaadinConnectControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDozNDozMVrOGFRquA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDozNDozMVrOGFRquA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4NTUyOA==", "bodyText": "Not blocking, just my personal opinion: I feel this needs a lot more tests.\n\nno mocking - a real test with Spring / Spring Boot's Applicationcontext to verify that multiple instances are created with different qualifier (default and vaadin) - example:  Can be done with ApplicationContextRunner\na test that verifies that the bug described by the user is fixed\nmy comment in the last PR: #8016 (comment)", "url": "https://github.com/vaadin/flow/pull/8051#discussion_r408185528", "createdAt": "2020-04-14T14:34:31Z", "author": {"login": "knoobie"}, "path": "flow-server/src/test/java/com/vaadin/flow/server/connect/VaadinConnectControllerTest.java", "diffHunk": "@@ -813,9 +813,34 @@ public void should_Never_UseSpringObjectMapper() {\n                 mock(ServletContext.class));\n \n         verify(contextMock, never()).getBean(ObjectMapper.class);\n+        verify(contextMock, times(1)).getBean(JacksonProperties.class);\n         verify(mockSpringObjectMapper, never()).setVisibility(\n                 PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);\n-        verify(contextMock, never()).getBean(JacksonProperties.class);\n+    }\n+\n+    @Test\n+    public void should_NotOverrideVisibility_When_JacksonPropertiesProvideVisibility() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "970c9d9add64de948a0922501851dfbb645406c1"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3559, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}