{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTYxODE2", "number": 8458, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxM1rOECGscg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxN1rOECGsjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjQyMjkwOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/DefaultDeploymentConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxM1rOGeWyFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxM1rOGeWyFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4MzczMw==", "bodyText": "Merge this if statement with the enclosing one.", "url": "https://github.com/vaadin/flow/pull/8458#discussion_r434483733", "createdAt": "2020-06-03T11:00:13Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DefaultDeploymentConfiguration.java", "diffHunk": "@@ -146,18 +143,13 @@ private void logMessages() {\n         Logger logger = LoggerFactory.getLogger(getClass().getName());\n \n         if (!warnings.isEmpty()) {\n-            warnings.add(0, HEADER);\n-            warnings.add(1, DEPLOYMENT_WARNINGS);\n-            warnings.add(\"\\n\");\n+            warnings.add(0, DEPLOYMENT_WARNINGS);\n             // merging info messages to warnings for now\n             warnings.addAll(info);\n-            warnings.add(SEPARATOR);\n             if (logger.isWarnEnabled()) {\n                 logger.warn(String.join(\"\\n\", warnings));\n             }\n         } else if (!info.isEmpty()) {\n-            info.add(0, HEADER);\n-            info.add(SEPARATOR);\n             if (logger.isInfoEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1c615cd853e9eb9085edd00352b9b328ef2574"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjQyMjk2OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementListenerMapUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxNFrOGeWyHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxNFrOGeWyHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4Mzc0Mg==", "bodyText": "Add a private constructor to hide the implicit public one.", "url": "https://github.com/vaadin/flow/pull/8458#discussion_r434483742", "createdAt": "2020-06-03T11:00:14Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementListenerMapUtil.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.internal.nodefeature;\n+\n+import java.util.Set;\n+\n+public class ElementListenerMapUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1c615cd853e9eb9085edd00352b9b328ef2574"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjQyMzAyOnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendTools.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxNVrOGeWyJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxNVrOGeWyJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4Mzc0OQ==", "bodyText": "Remove this use of \"SUPPORTED_PNPM_MAJOR_VERSION\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/8458#discussion_r434483749", "createdAt": "2020-06-03T11:00:15Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendTools.java", "diffHunk": "@@ -113,6 +113,10 @@\n     public static final int SUPPORTED_PNPM_MAJOR_VERSION = Constants.SUPPORTED_PNPM_MAJOR_VERSION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1c615cd853e9eb9085edd00352b9b328ef2574"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjQyMzA1OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendTools.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxNlrOGeWyKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxNlrOGeWyKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4Mzc1NQ==", "bodyText": "Remove this use of \"SUPPORTED_PNPM_MINOR_VERSION\"; it is deprecated.", "url": "https://github.com/vaadin/flow/pull/8458#discussion_r434483755", "createdAt": "2020-06-03T11:00:16Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendTools.java", "diffHunk": "@@ -113,6 +113,10 @@\n     public static final int SUPPORTED_PNPM_MAJOR_VERSION = Constants.SUPPORTED_PNPM_MAJOR_VERSION;\n     public static final int SUPPORTED_PNPM_MINOR_VERSION = Constants.SUPPORTED_PNPM_MINOR_VERSION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1c615cd853e9eb9085edd00352b9b328ef2574"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjQyMzE3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/ShortcutRegistration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxN1rOGeWyPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxN1rOGeWyPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4Mzc3Mg==", "bodyText": "Reduce this lambda expression number of lines from 21 to at most 20.", "url": "https://github.com/vaadin/flow/pull/8458#discussion_r434483772", "createdAt": "2020-06-03T11:00:17Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/ShortcutRegistration.java", "diffHunk": "@@ -70,17 +71,40 @@\n \n     private ShortcutEventListener eventListener;\n \n+    private List<Registration> registrations = new ArrayList<>();\n+\n     // beforeClientResponse callback\n     private final SerializableConsumer<ExecutionContext> beforeClientResponseConsumer = executionContext -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1c615cd853e9eb9085edd00352b9b328ef2574"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3425, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}