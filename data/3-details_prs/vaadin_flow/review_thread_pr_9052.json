{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNjIxNDE4", "number": 9052, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwOToyNDowM1rOEmd8Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwOTo0ODozNVrOEme1gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzcxOTM1OnYy", "diffSide": "RIGHT", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwOToyNDowM1rOHWgayg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOTo1NDo0NlrOHXSysw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2MTg2Ng==", "bodyText": "This should be before instance variables, and any static variables too", "url": "https://github.com/vaadin/flow/pull/9052#discussion_r493361866", "createdAt": "2020-09-23T09:24:03Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -648,6 +648,30 @@ public void setPagingEnabled(boolean pagingEnabled) {\n         this.pagingEnabled = pagingEnabled;\n     }\n \n+    /**\n+     * In-memory data provider with no items.\n+     * <p>\n+     * Data Communicator is initialised with this data provider by default\n+     * until a new data provider is assigned with\n+     * {@link #setDataProvider(DataProvider, Object)}.\n+     * <p>\n+     * This type of data provider signals to data view to skip the data\n+     * provider verification on data view instantiation phase, so as to\n+     * support generic API for lazy loading case (add item count listener,\n+     * for instance), even if no backend data provider set by user.\n+     *\n+     * @param <T1> item type\n+     */\n+    static final class EmptyDataProvider<T1> extends ListDataProvider<T1> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cec4557c7e755ae1d1a0f00ac1ce786f3ffe553"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE4NzE4Nw==", "bodyText": "I would better place it just before SizeVerifier declaration and after the instance variables, because IMO inner class declaration on the top of outer class decrease the readability, and I couldn't find the recommendations (from Oracle) to place inner classes on the top (before variables declaration).", "url": "https://github.com/vaadin/flow/pull/9052#discussion_r494187187", "createdAt": "2020-09-24T09:54:46Z", "author": {"login": "mshabarov"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -648,6 +648,30 @@ public void setPagingEnabled(boolean pagingEnabled) {\n         this.pagingEnabled = pagingEnabled;\n     }\n \n+    /**\n+     * In-memory data provider with no items.\n+     * <p>\n+     * Data Communicator is initialised with this data provider by default\n+     * until a new data provider is assigned with\n+     * {@link #setDataProvider(DataProvider, Object)}.\n+     * <p>\n+     * This type of data provider signals to data view to skip the data\n+     * provider verification on data view instantiation phase, so as to\n+     * support generic API for lazy loading case (add item count listener,\n+     * for instance), even if no backend data provider set by user.\n+     *\n+     * @param <T1> item type\n+     */\n+    static final class EmptyDataProvider<T1> extends ListDataProvider<T1> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2MTg2Ng=="}, "originalCommit": {"oid": "3cec4557c7e755ae1d1a0f00ac1ce786f3ffe553"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Nzg1NDQ3OnYy", "diffSide": "RIGHT", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwOTo0NjozNFrOHWhxnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDozNTo1MFrOHXUO-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM4NDA5Mg==", "bodyText": "NIT: it feels like this is documented now in two places, abstract data view and here, IMO this is a bit excessive and one would have sufficed with a comment // see xyz for the other place", "url": "https://github.com/vaadin/flow/pull/9052#discussion_r493384092", "createdAt": "2020-09-23T09:46:34Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -648,6 +648,30 @@ public void setPagingEnabled(boolean pagingEnabled) {\n         this.pagingEnabled = pagingEnabled;\n     }\n \n+    /**\n+     * In-memory data provider with no items.\n+     * <p>\n+     * Data Communicator is initialised with this data provider by default\n+     * until a new data provider is assigned with\n+     * {@link #setDataProvider(DataProvider, Object)}.\n+     * <p>\n+     * This type of data provider signals to data view to skip the data\n+     * provider verification on data view instantiation phase, so as to\n+     * support generic API for lazy loading case (add item count listener,\n+     * for instance), even if no backend data provider set by user.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cec4557c7e755ae1d1a0f00ac1ce786f3ffe553"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIxMDgwOQ==", "bodyText": "Done", "url": "https://github.com/vaadin/flow/pull/9052#discussion_r494210809", "createdAt": "2020-09-24T10:35:50Z", "author": {"login": "mshabarov"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -648,6 +648,30 @@ public void setPagingEnabled(boolean pagingEnabled) {\n         this.pagingEnabled = pagingEnabled;\n     }\n \n+    /**\n+     * In-memory data provider with no items.\n+     * <p>\n+     * Data Communicator is initialised with this data provider by default\n+     * until a new data provider is assigned with\n+     * {@link #setDataProvider(DataProvider, Object)}.\n+     * <p>\n+     * This type of data provider signals to data view to skip the data\n+     * provider verification on data view instantiation phase, so as to\n+     * support generic API for lazy loading case (add item count listener,\n+     * for instance), even if no backend data provider set by user.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM4NDA5Mg=="}, "originalCommit": {"oid": "3cec4557c7e755ae1d1a0f00ac1ce786f3ffe553"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Nzg2NTYzOnYy", "diffSide": "RIGHT", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/AbstractDataView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwOTo0ODozNVrOHWh46Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMDo0NDoxNlrOHXUftQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM4NTk2MQ==", "bodyText": "This documentation (and the other duplicate in the empty data provider) is missing the part that in-memory data view API is supported without explicitly setting the data provider. Since you're documenting the usage, might add that too", "url": "https://github.com/vaadin/flow/pull/9052#discussion_r493385961", "createdAt": "2020-09-23T09:48:35Z", "author": {"login": "pleku"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/AbstractDataView.java", "diffHunk": "@@ -56,13 +56,27 @@ public AbstractDataView(\n                 \"DataProvider supplier cannot be null\");\n         this.dataProviderSupplier = dataProviderSupplier;\n         this.component = component;\n-        verifyDataProviderType(dataProviderSupplier.get().getClass());\n+        final Class<?> dataProviderType = dataProviderSupplier.get().getClass();\n+        /*\n+         * Skip verification if the verified data provider has not been\n+         * initialized yet.\n+         * This mainly refers to the following cases:\n+         * 1. Component uses data communicator which initialises data provider\n+         * lazily and meanwhile has a default empty one. Good example is a\n+         * ComboBox.\n+         * 2. Developer wants to set the ItemCountChangeListener before the data\n+         * provider has been set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cec4557c7e755ae1d1a0f00ac1ce786f3ffe553"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIxNTA5Mw==", "bodyText": "Done", "url": "https://github.com/vaadin/flow/pull/9052#discussion_r494215093", "createdAt": "2020-09-24T10:44:16Z", "author": {"login": "mshabarov"}, "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/AbstractDataView.java", "diffHunk": "@@ -56,13 +56,27 @@ public AbstractDataView(\n                 \"DataProvider supplier cannot be null\");\n         this.dataProviderSupplier = dataProviderSupplier;\n         this.component = component;\n-        verifyDataProviderType(dataProviderSupplier.get().getClass());\n+        final Class<?> dataProviderType = dataProviderSupplier.get().getClass();\n+        /*\n+         * Skip verification if the verified data provider has not been\n+         * initialized yet.\n+         * This mainly refers to the following cases:\n+         * 1. Component uses data communicator which initialises data provider\n+         * lazily and meanwhile has a default empty one. Good example is a\n+         * ComboBox.\n+         * 2. Developer wants to set the ItemCountChangeListener before the data\n+         * provider has been set.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM4NTk2MQ=="}, "originalCommit": {"oid": "3cec4557c7e755ae1d1a0f00ac1ce786f3ffe553"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3083, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}