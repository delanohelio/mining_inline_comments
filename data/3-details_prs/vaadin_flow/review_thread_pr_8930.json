{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MDM3MDQ1", "number": 8930, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMDoyMjozN1rOEfY6Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjo1OTozM1rOEf2WLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzQ5NDA3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/Constants.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMDoyMjozN1rOHLoqig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMDoyMjozN1rOHLoqig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk2MjYzNA==", "bodyText": "Do not forget to remove this deprecated code someday.", "url": "https://github.com/vaadin/flow/pull/8930#discussion_r481962634", "createdAt": "2020-09-02T10:22:37Z", "author": {"login": "vaadin-bot"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/Constants.java", "diffHunk": "@@ -496,6 +496,12 @@\n     @Deprecated\n     public static final String SERVLET_PARAMETER_DEVMODE_ENABLE_LIVE_RELOAD = InitParameters.SERVLET_PARAMETER_DEVMODE_ENABLE_LIVE_RELOAD;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73666967e988eb28f446f56ca84eb00fff03881b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzk0MjQ0OnYy", "diffSide": "RIGHT", "path": "flow-client/tsconfig.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNDowNzoxN1rOHMVHrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNDowNzoxN1rOHMVHrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY5MDk5MQ==", "bodyText": "new line missing", "url": "https://github.com/vaadin/flow/pull/8930#discussion_r482690991", "createdAt": "2020-09-03T04:07:17Z", "author": {"login": "caalador"}, "path": "flow-client/tsconfig.json", "diffHunk": "@@ -0,0 +1,24 @@\n+{\n+  \"compilerOptions\": {\n+    \"sourceMap\": true,\n+    \"inlineSources\": true,\n+    \"module\": \"esNext\",\n+    \"target\": \"es2015\",\n+    \"moduleResolution\": \"node\",\n+    \"strict\": true,\n+    \"noFallthroughCasesInSwitch\": true,\n+    \"noImplicitReturns\": true,\n+    \"noImplicitAny\": true,\n+    \"noImplicitThis\": true,\n+    \"noUnusedLocals\": true,\n+    \"noUnusedParameters\": true,\n+    \"experimentalDecorators\": true,\n+    \"outDir\": \"target/classes/META-INF/resources/frontend\",\n+    \"declaration\": true,\n+    \"skipLibCheck\": true\n+  },\n+  \"include\": [\n+    \"src/main/resources/META-INF/resources/frontend/**/*.ts\"\n+  ],\n+  \"exclude\": []\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e21ce2f6eb98a4421fec668d936176c2ae428eb"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzk1MDE3OnYy", "diffSide": "RIGHT", "path": "flow-client/tsconfig.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNDoxMTo0N1rOHMVMFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNDoxMTo0N1rOHMVMFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY5MjExOA==", "bodyText": "new line missing", "url": "https://github.com/vaadin/flow/pull/8930#discussion_r482692118", "createdAt": "2020-09-03T04:11:47Z", "author": {"login": "caalador"}, "path": "flow-client/tsconfig.json", "diffHunk": "@@ -0,0 +1,24 @@\n+{\n+  \"compilerOptions\": {\n+    \"sourceMap\": true,\n+    \"inlineSources\": true,\n+    \"module\": \"esNext\",\n+    \"target\": \"es2015\",\n+    \"moduleResolution\": \"node\",\n+    \"strict\": true,\n+    \"noFallthroughCasesInSwitch\": true,\n+    \"noImplicitReturns\": true,\n+    \"noImplicitAny\": true,\n+    \"noImplicitThis\": true,\n+    \"noUnusedLocals\": true,\n+    \"noUnusedParameters\": true,\n+    \"experimentalDecorators\": true,\n+    \"outDir\": \"target/classes/META-INF/resources/frontend\",\n+    \"declaration\": true,\n+    \"skipLibCheck\": true\n+  },\n+  \"include\": [\n+    \"src/main/resources/META-INF/resources/frontend/**/*.ts\"\n+  ],\n+  \"exclude\": []\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e21ce2f6eb98a4421fec668d936176c2ae428eb"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODA5MjU5OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/server/DevServerWatchDog.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNTozMTozN1rOHMWffA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoyODo0OFrOHMXrYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxMzQ2OA==", "bodyText": "Could perhaps be BufferedReader in = new BufferedReader(new InputStreamReader(accept.getInputStream(), StandardCharsets.UTF_8)); so there are no suprises on the encodings.", "url": "https://github.com/vaadin/flow/pull/8930#discussion_r482713468", "createdAt": "2020-09-03T05:31:37Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevServerWatchDog.java", "diffHunk": "@@ -79,6 +82,18 @@ private Logger getLogger() {\n             return LoggerFactory.getLogger(WatchDogServer.class);\n         }\n \n+        private void enterReloadMessageReadLoop(Socket accept) throws IOException{\n+            BufferedReader in = new BufferedReader(new InputStreamReader(accept.getInputStream()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e21ce2f6eb98a4421fec668d936176c2ae428eb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczMjg5Nw==", "bodyText": "Done. Also set encoding from the webpack side.", "url": "https://github.com/vaadin/flow/pull/8930#discussion_r482732897", "createdAt": "2020-09-03T06:28:48Z", "author": {"login": "joheriks"}, "path": "flow-server/src/main/java/com/vaadin/flow/server/DevServerWatchDog.java", "diffHunk": "@@ -79,6 +82,18 @@ private Logger getLogger() {\n             return LoggerFactory.getLogger(WatchDogServer.class);\n         }\n \n+        private void enterReloadMessageReadLoop(Socket accept) throws IOException{\n+            BufferedReader in = new BufferedReader(new InputStreamReader(accept.getInputStream()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxMzQ2OA=="}, "originalCommit": {"oid": "1e21ce2f6eb98a4421fec668d936176c2ae428eb"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODI1NzQ0OnYy", "diffSide": "RIGHT", "path": "flow-client/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjo0MDowNFrOHMYAoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozMTo1NlrOHMZv8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczODMzNg==", "bodyText": "That assumes that npm  is installed globally ?\nWhat happens if this is not a case ?", "url": "https://github.com/vaadin/flow/pull/8930#discussion_r482738336", "createdAt": "2020-09-03T06:40:04Z", "author": {"login": "denis-anisimov"}, "path": "flow-client/pom.xml", "diffHunk": "@@ -228,6 +228,42 @@\n                     </execution>\n                 </executions>\n             </plugin>\n+\n+            <plugin>\n+                <groupId>org.codehaus.mojo</groupId>\n+                <artifactId>exec-maven-plugin</artifactId>\n+                <version>1.6.0</version>\n+                <executions>\n+                    <execution>\n+                        <id>npm-install</id>\n+                        <phase>validate</phase>\n+                        <goals>\n+                            <goal>exec</goal>\n+                        </goals>\n+                        <configuration>\n+                            <executable>npm</executable>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f226590b2d987485c5ad8357a7fa75a3e54e980"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NTYyOA==", "bodyText": "The build would fail, AFAIK V17 makes the same assumption about the environment when building flow-client.", "url": "https://github.com/vaadin/flow/pull/8930#discussion_r482765628", "createdAt": "2020-09-03T07:29:49Z", "author": {"login": "joheriks"}, "path": "flow-client/pom.xml", "diffHunk": "@@ -228,6 +228,42 @@\n                     </execution>\n                 </executions>\n             </plugin>\n+\n+            <plugin>\n+                <groupId>org.codehaus.mojo</groupId>\n+                <artifactId>exec-maven-plugin</artifactId>\n+                <version>1.6.0</version>\n+                <executions>\n+                    <execution>\n+                        <id>npm-install</id>\n+                        <phase>validate</phase>\n+                        <goals>\n+                            <goal>exec</goal>\n+                        </goals>\n+                        <configuration>\n+                            <executable>npm</executable>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczODMzNg=="}, "originalCommit": {"oid": "8f226590b2d987485c5ad8357a7fa75a3e54e980"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NjgzNQ==", "bodyText": "I would say it's a bad assumption but since it's already there then it's late to fix it here at least.\n:(", "url": "https://github.com/vaadin/flow/pull/8930#discussion_r482766835", "createdAt": "2020-09-03T07:31:56Z", "author": {"login": "denis-anisimov"}, "path": "flow-client/pom.xml", "diffHunk": "@@ -228,6 +228,42 @@\n                     </execution>\n                 </executions>\n             </plugin>\n+\n+            <plugin>\n+                <groupId>org.codehaus.mojo</groupId>\n+                <artifactId>exec-maven-plugin</artifactId>\n+                <version>1.6.0</version>\n+                <executions>\n+                    <execution>\n+                        <id>npm-install</id>\n+                        <phase>validate</phase>\n+                        <goals>\n+                            <goal>exec</goal>\n+                        </goals>\n+                        <configuration>\n+                            <executable>npm</executable>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczODMzNg=="}, "originalCommit": {"oid": "8f226590b2d987485c5ad8357a7fa75a3e54e980"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODMxNzI1OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/internal/BootstrapHandlerHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjo1OTozM1rOHMYj0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzozMDoyMFrOHMZsag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0NzM0NQ==", "bodyText": "Helper class could be final.\nAnd it should have a default private CTOR to avoid instantiation which shows that this is a class with only static methods.", "url": "https://github.com/vaadin/flow/pull/8930#discussion_r482747345", "createdAt": "2020-09-03T06:59:33Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/main/java/com/vaadin/flow/internal/BootstrapHandlerHelper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.internal;\n+\n+import java.io.Serializable;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+\n+import com.vaadin.flow.server.BootstrapHandler;\n+import com.vaadin.flow.server.HandlerHelper;\n+import com.vaadin.flow.server.VaadinRequest;\n+import com.vaadin.flow.server.VaadinSession;\n+\n+/**\n+ * Helper methods for use in bootstrapping.\n+ *\n+ */\n+public class BootstrapHandlerHelper implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f226590b2d987485c5ad8357a7fa75a3e54e980"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2NTkzMA==", "bodyText": "Done", "url": "https://github.com/vaadin/flow/pull/8930#discussion_r482765930", "createdAt": "2020-09-03T07:30:20Z", "author": {"login": "joheriks"}, "path": "flow-server/src/main/java/com/vaadin/flow/internal/BootstrapHandlerHelper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.internal;\n+\n+import java.io.Serializable;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+\n+import com.vaadin.flow.server.BootstrapHandler;\n+import com.vaadin.flow.server.HandlerHelper;\n+import com.vaadin.flow.server.VaadinRequest;\n+import com.vaadin.flow.server.VaadinSession;\n+\n+/**\n+ * Helper methods for use in bootstrapping.\n+ *\n+ */\n+public class BootstrapHandlerHelper implements Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0NzM0NQ=="}, "originalCommit": {"oid": "8f226590b2d987485c5ad8357a7fa75a3e54e980"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3216, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}