{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNTgyNjAw", "number": 9559, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjo1ODo0NFrOFAOraQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzoxMDoyMVrOFGs0pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Nzg0ODA5OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjo1ODo0NFrOH-aZxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzoxMTozM1rOH-a4wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwNjM0Mw==", "bodyText": "(stupid question): I cannot figure out where the target comes from to the generated file", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535206343", "createdAt": "2020-12-03T12:58:44Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIxNDI3NA==", "bodyText": "The generated theme.js will contain these inside export const applyTheme = (target) => {\nwhich is called from the generated-flow-imports.js with\nimport {applyTheme} from 'theme/theme-generated.js';\napplyTheme(document);\n\n=_= I can't compute today.", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535214274", "createdAt": "2020-12-03T13:11:33Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwNjM0Mw=="}, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Nzg2MjA4OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzowMjowNFrOH-aiNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjozOToyMlrOIHzviA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg==", "bodyText": "While this is the same as to the global files, maybe the reason why this needs to be injected to both could be documented here", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535208502", "createdAt": "2020-12-03T13:02:04Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), document);\\n`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIxNDMxMg==", "bodyText": "it should perhaps not need to. will verify once we get the resource PR merged.", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535214312", "createdAt": "2020-12-03T13:11:36Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), document);\\n`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2NTU4NQ==", "bodyText": "I guess the document level target is for webcomponents that need to have the css inside the shadowroot, but also on the document.\nLet's have this PR on hold as this is apparently a embedded feature as a normal application always injects to document.", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535865585", "createdAt": "2020-12-04T06:26:32Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), document);\\n`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAxOTkwMg==", "bodyText": "I'm not certain about the document level css feature. On the Embedded component only adding it to the global scope makes the css not apply into the embedded component, but adding it only to the shadow target works fine.\nAnother issue is that the shadow targeted css bleeds out from the shadow to the global space.\nFor non embedded the issue doesn't exist as they by default target document", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r539019902", "createdAt": "2020-12-09T05:38:33Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), document);\\n`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAyODQ5Nw==", "bodyText": "The documentCss needs to be injected both to the document root and to the shadow root as chrome has a bug in having font-face go into shadowRoot Issue 336876: @font-face definitions in shadowRoot cannot be used within the shadowRoot\nSo it needs to be defined on both levels.", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r545028497", "createdAt": "2020-12-17T11:47:19Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), document);\\n`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1MDk5NA==", "bodyText": "Can you add the issue reference as a comment to the code ?", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r545050994", "createdAt": "2020-12-17T12:26:09Z", "author": {"login": "pleku"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), document);\\n`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1ODY5Ng==", "bodyText": "Added.", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r545058696", "createdAt": "2020-12-17T12:39:22Z", "author": {"login": "caalador"}, "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), document);\\n`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Nzg2NjM5OnYy", "diffSide": "RIGHT", "path": "flow-tests/test-themes/frontend/theme/app-theme/theme.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzowMzoyMFrOH-ak5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMjoyNDowM1rOIDGtTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwOTE4OQ==", "bodyText": "I thought this fort was a typo first \ud83e\udd26", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535209189", "createdAt": "2020-12-03T13:03:20Z", "author": {"login": "pleku"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/theme.json", "diffHunk": "@@ -1,4 +1,5 @@\n {\n+  \"documentCss\": [\"@fortawesome/fontawesome-free/css/all.css\"],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyNjU0Mg==", "bodyText": "Same for me ;) I asked Google and wondered it's indeed fort, not font", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r540126542", "createdAt": "2020-12-10T12:24:03Z", "author": {"login": "mshabarov"}, "path": "flow-tests/test-themes/frontend/theme/app-theme/theme.json", "diffHunk": "@@ -1,4 +1,5 @@\n {\n+  \"documentCss\": [\"@fortawesome/fontawesome-free/css/all.css\"],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwOTE4OQ=="}, "originalCommit": {"oid": "0c229a34ce321766f4caa68c0cd921df7073d6d6"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTcwMTUwOnYy", "diffSide": "RIGHT", "path": "flow-tests/test-embedding/test-embedding-application-theme/src/test/java/com/vaadin/flow/webcomponent/ApplicationThemeComponentIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzoxMDoyMVrOIH06Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzoxMzoxMlrOIH1BJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3Nzc4Mw==", "bodyText": "Broken indent", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r545077783", "createdAt": "2020-12-17T13:10:21Z", "author": {"login": "pleku"}, "path": "flow-tests/test-embedding/test-embedding-application-theme/src/test/java/com/vaadin/flow/webcomponent/ApplicationThemeComponentIT.java", "diffHunk": "@@ -73,11 +68,34 @@ public void applicationTheme_GlobalCss_isUsedOnlyInEmbeddeComponent() {\n \n         Assert.assertNotEquals(\"Ostrich\", body.getCssValue(\"font-family\"));\n \n-        getDriver().get(getRootURL() + \"/VAADIN/static/themes/embedded-theme/img/bg.jpg\");\n+        Assert\n+            .assertEquals(\"Embedded style should not match external component\",\n+                \"rgba(0, 0, 255, 1)\",\n+                $(SpanElement.class).id(\"overflow\").getCssValue(\"color\"));\n+                getDriver().get(getRootURL() + \"/themes/embedded-theme/img/bg.jpg\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc73782cec69271b4bc68628ffc36f11fa129d97"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3OTU5MQ==", "bodyText": "I'll fix it if the build breaks.", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r545079591", "createdAt": "2020-12-17T13:13:12Z", "author": {"login": "caalador"}, "path": "flow-tests/test-embedding/test-embedding-application-theme/src/test/java/com/vaadin/flow/webcomponent/ApplicationThemeComponentIT.java", "diffHunk": "@@ -73,11 +68,34 @@ public void applicationTheme_GlobalCss_isUsedOnlyInEmbeddeComponent() {\n \n         Assert.assertNotEquals(\"Ostrich\", body.getCssValue(\"font-family\"));\n \n-        getDriver().get(getRootURL() + \"/VAADIN/static/themes/embedded-theme/img/bg.jpg\");\n+        Assert\n+            .assertEquals(\"Embedded style should not match external component\",\n+                \"rgba(0, 0, 255, 1)\",\n+                $(SpanElement.class).id(\"overflow\").getCssValue(\"color\"));\n+                getDriver().get(getRootURL() + \"/themes/embedded-theme/img/bg.jpg\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3Nzc4Mw=="}, "originalCommit": {"oid": "bc73782cec69271b4bc68628ffc36f11fa129d97"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2865, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}