{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MjgzNDcw", "number": 9631, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QyMjoyMToxMFrOFEu0ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QyMjoyMToxMFrOFEu0ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTA1NzIzOnYy", "diffSide": "RIGHT", "path": "fusion-endpoint/src/test/java/com/vaadin/flow/server/startup/fusion/DevModeInitializerEndpointTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QyMjoyMToxMFrOIE6Mqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QyMjoyMToxMFrOIE6Mqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAxODczMQ==", "bodyText": "Remove this use of \"Thread.sleep()\".", "url": "https://github.com/vaadin/flow/pull/9631#discussion_r542018731", "createdAt": "2020-12-13T22:21:10Z", "author": {"login": "vaadin-bot"}, "path": "fusion-endpoint/src/test/java/com/vaadin/flow/server/startup/fusion/DevModeInitializerEndpointTest.java", "diffHunk": "@@ -128,63 +128,105 @@ public void teardown() throws Exception, SecurityException {\n     @Test\n     public void should_generateOpenApi_when_EndpointPresents()\n             throws Exception {\n-\n-        // Configure a folder that has .java classes with valid endpoints\n-        // Not using `src/test/java` because there are invalid endpoint names\n-        // in some tests\n-        File src = new File(\n-                getClass().getClassLoader().getResource(\"java\").getFile());\n-        System.setProperty(\"vaadin.\" + CONNECT_JAVA_SOURCE_FOLDER_TOKEN,\n-                src.getAbsolutePath());\n-\n+        String originalJavaSourceFolder = null;\n         File generatedOpenApiJson = Paths\n-                .get(baseDir, DEFAULT_CONNECT_OPENAPI_JSON_FILE).toFile();\n-\n-        Assert.assertFalse(generatedOpenApiJson.exists());\n-        DevModeInitializer devModeInitializer = new DevModeInitializer();\n-        devModeInitializer.onStartup(classes, servletContext);\n-        waitForDevModeServer();\n-        Thread.sleep(200);\n-        Assert.assertTrue(\"Should generate OpenAPI spec if Endpoint is used.\",\n-                generatedOpenApiJson.exists());\n+                    .get(baseDir, DEFAULT_CONNECT_OPENAPI_JSON_FILE).toFile();\n+        try {\n+            originalJavaSourceFolder = System.getProperty(\"vaadin.\" \n+                + CONNECT_JAVA_SOURCE_FOLDER_TOKEN);\n+            // Configure a folder that has .java classes with valid endpoints\n+            // Not using `src/test/java` because there are invalid endpoint names\n+            // in some tests\n+            File src = new File(\n+                    getClass().getClassLoader().getResource(\"java\").getFile());\n+            System.setProperty(\"vaadin.\" + CONNECT_JAVA_SOURCE_FOLDER_TOKEN,\n+                    src.getAbsolutePath());\n+\n+            Assert.assertFalse(generatedOpenApiJson.exists());\n+            DevModeInitializer devModeInitializer = new DevModeInitializer();\n+            devModeInitializer.onStartup(classes, servletContext);\n+            waitForDevModeServer();\n+            Thread.sleep(200);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f354e3909685c798fe7230f85988a38dc7eda508"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2923, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}