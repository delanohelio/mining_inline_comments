{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMDk2MzU4", "number": 8527, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MDowN1rOEFA_wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1OToyMlrOEFBLkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjk0NjU4OnYy", "diffSide": "RIGHT", "path": "flow-client/src/test/frontend/form/ValidationTests.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MDowN1rOGi_o0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MDowN1rOGi_o0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0NzQxMQ==", "bodyText": "I noticed in https://github.com/vaadin/ts-forms-demo/pull/4/files#diff-766915b446ddcf464dc22465c8163a4dL184-R183 you changed this kind of line to other style. Should this be preferred everywhere or is there a difference?\nShould this be like?:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <button id=\"add\" @click=${() => appendItem(this.binder.model.products)}>+</button>\n          \n          \n            \n                <button id=\"add\" @click=${() => this.binder.for(this.binder.model.products).appendItem()}>+</button>\n          \n      \n    \n    \n  \n\nThere's also one test below which uses appendItem() twice. I tried updating these and then removing the unused import of appendItem and tests still pass.", "url": "https://github.com/vaadin/flow/pull/8527#discussion_r439347411", "createdAt": "2020-06-12T10:50:07Z", "author": {"login": "Haprog"}, "path": "flow-client/src/test/frontend/form/ValidationTests.ts", "diffHunk": "@@ -42,9 +43,9 @@ class OrderView extends LitElement {\n     <input id=\"fullName\" ...=\"${field(this.binder.model.customer.fullName)}\" />\n     <input id=\"nickName\" ...=\"${field(this.binder.model.customer.nickName)}\" />\n     <button id=\"add\" @click=${() => appendItem(this.binder.model.products)}>+</button>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4aeec02a3135e78178c91a4a53e5f43b94c047d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjk3NjgwOnYy", "diffSide": "RIGHT", "path": "flow-client/src/test/frontend/form/ValidationTests.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1OToyMlrOGi_6ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1OToyMlrOGi_6ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1MTkwOQ==", "bodyText": "Minor nit: These lines could be shortened a bit by destructuring the model to local variables to avoid repeating this.binder.model. a lot.\nFor example:\n  render() {\n    const binder = this.binder;\n    const { notes, products, customer: { fullName, nickName } } = binder.model;\n    return html`\n    <input id=\"notes\" ...=\"${field(notes)}\" />\n    <input id=\"fullName\" ...=\"${field(fullName)}\" />\n    <input id=\"nickName\" ...=\"${field(nickName)}\" />\n    <button id=\"add\" @click=${() => binder.for(products).appendItem()}>+</button>\n    ${repeat(products, (productNode, index) => html`<div>\n        <input id=\"description${index}\" ...=\"${field(productNode.model.description)}\" />\n        <input id=\"price${index}\" ...=\"${field(productNode.model.price)}\">\n      </div>`)}\n    `;\n  }\nThough maybe the nested destructure is a bit over the top. Maybe this would be nicer and easier to read?:\n  render() {\n    const binder = this.binder;\n    const { notes, products, customer } = binder.model;\n    return html`\n    <input id=\"notes\" ...=\"${field(notes)}\" />\n    <input id=\"fullName\" ...=\"${field(customer.fullName)}\" />\n    <input id=\"nickName\" ...=\"${field(customer.nickName)}\" />\n    <button id=\"add\" @click=${() => binder.for(products).appendItem()}>+</button>\n    ${repeat(products, (productNode, index) => html`<div>\n        <input id=\"description${index}\" ...=\"${field(productNode.model.description)}\" />\n        <input id=\"price${index}\" ...=\"${field(productNode.model.price)}\">\n      </div>`)}\n    `;\n  }", "url": "https://github.com/vaadin/flow/pull/8527#discussion_r439351909", "createdAt": "2020-06-12T10:59:22Z", "author": {"login": "Haprog"}, "path": "flow-client/src/test/frontend/form/ValidationTests.ts", "diffHunk": "@@ -42,9 +43,9 @@ class OrderView extends LitElement {\n     <input id=\"fullName\" ...=\"${field(this.binder.model.customer.fullName)}\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4aeec02a3135e78178c91a4a53e5f43b94c047d"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3464, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}