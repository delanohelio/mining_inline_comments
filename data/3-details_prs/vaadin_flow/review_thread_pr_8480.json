{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NDg5NjY4", "number": 8480, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDowMTozNVrOECk4vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDowNTowNFrOECk_Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTM2OTU3OnYy", "diffSide": "RIGHT", "path": "flow-server/src/main/java/com/vaadin/flow/component/Text.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDowMTozNVrOGfHeZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDowMTozNVrOGfHeZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4MTUwOQ==", "bodyText": "Typo: \"visibiltiy\" -> \"visibility\".", "url": "https://github.com/vaadin/flow/pull/8480#discussion_r435281509", "createdAt": "2020-06-04T14:01:35Z", "author": {"login": "joheriks"}, "path": "flow-server/src/main/java/com/vaadin/flow/component/Text.java", "diffHunk": "@@ -59,4 +59,20 @@ public String getText() {\n         return getElement().getText();\n     }\n \n+    @Override\n+    protected <T> void set(PropertyDescriptor<T, ?> descriptor, T value) {\n+        throw new UnsupportedOperationException(\"Cannot set '\"\n+                + descriptor.getPropertyName() + \"' property to the \"\n+                + getClass().getSimpleName() + \" component because it doesn't \"\n+                + \"represent an HTML Element but a text Node on the client side.\");\n+    }\n+\n+    @Override\n+    public void setVisible(boolean visible) {\n+        throw new UnsupportedOperationException(\"Cannot change \"\n+                + getClass().getSimpleName()\n+                + \" component visibiltiy because it doesn't \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dfc81041258c0cd83ee3960f788295d18edd469"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTM4NjEwOnYy", "diffSide": "RIGHT", "path": "flow-server/src/test/java/com/vaadin/flow/component/TextTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDowNTowNFrOGfHpOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjozNToxNlrOGg6pbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4NDI4MQ==", "bodyText": "Unnecessary redundant strings adds maintenance burden, could the test just check for UnsupportedOperationException agnostic about message contents?", "url": "https://github.com/vaadin/flow/pull/8480#discussion_r435284281", "createdAt": "2020-06-04T14:05:04Z", "author": {"login": "joheriks"}, "path": "flow-server/src/test/java/com/vaadin/flow/component/TextTest.java", "diffHunk": "@@ -44,4 +48,41 @@ public void setGetText() {\n         Assert.assertEquals(\"Simple\", new Text(\"Simple\").getText());\n         Assert.assertEquals(\"\u00e5\u00e4\u00f6 \u20ac#%\u00b0#\", new Text(\"\u00e5\u00e4\u00f6 \u20ac#%\u00b0#\").getText());\n     }\n+\n+    @Test\n+    public void setId_throwsWithMeaningfulMessage() {\n+        assertExceptionOnSetProperty(\"id\");\n+\n+        new Text(\"\").setId(\"foo\");\n+    }\n+\n+    @Test\n+    public void setFooProperty_throwsWithMeaningfulMessage() {\n+        assertExceptionOnSetProperty(\"foo\");\n+\n+        new Text(\"\").set(PropertyDescriptors.propertyWithDefault(\"foo\", true),\n+                false);\n+    }\n+\n+    @Test\n+    public void setVisibility_throwsWithMeaningfulMessage() {\n+        exception.expect(UnsupportedOperationException.class);\n+\n+        exception.expectMessage(CoreMatchers.allOf(\n+                CoreMatchers.containsString(\n+                        \"Cannot change Text component visibiltiy\"),\n+                CoreMatchers.containsString(\n+                        \"because it doesn't represent an HTML Element\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dfc81041258c0cd83ee3960f788295d18edd469"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEzODk3Ng==", "bodyText": "Unfortunately no.\nI agree that it's better to avoid checking the exception messages .\nBut the original ticket is exactly about \"Unsupported operation exception\".\nSo if I don't check anything then I cannot be sure that the behavior is fixed.\nUnsupported exception is thrown in the same way as it already has been thrown previously.\nThe only change is meaningful message in the exception.", "url": "https://github.com/vaadin/flow/pull/8480#discussion_r437138976", "createdAt": "2020-06-09T05:03:14Z", "author": {"login": "denis-anisimov"}, "path": "flow-server/src/test/java/com/vaadin/flow/component/TextTest.java", "diffHunk": "@@ -44,4 +48,41 @@ public void setGetText() {\n         Assert.assertEquals(\"Simple\", new Text(\"Simple\").getText());\n         Assert.assertEquals(\"\u00e5\u00e4\u00f6 \u20ac#%\u00b0#\", new Text(\"\u00e5\u00e4\u00f6 \u20ac#%\u00b0#\").getText());\n     }\n+\n+    @Test\n+    public void setId_throwsWithMeaningfulMessage() {\n+        assertExceptionOnSetProperty(\"id\");\n+\n+        new Text(\"\").setId(\"foo\");\n+    }\n+\n+    @Test\n+    public void setFooProperty_throwsWithMeaningfulMessage() {\n+        assertExceptionOnSetProperty(\"foo\");\n+\n+        new Text(\"\").set(PropertyDescriptors.propertyWithDefault(\"foo\", true),\n+                false);\n+    }\n+\n+    @Test\n+    public void setVisibility_throwsWithMeaningfulMessage() {\n+        exception.expect(UnsupportedOperationException.class);\n+\n+        exception.expectMessage(CoreMatchers.allOf(\n+                CoreMatchers.containsString(\n+                        \"Cannot change Text component visibiltiy\"),\n+                CoreMatchers.containsString(\n+                        \"because it doesn't represent an HTML Element\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4NDI4MQ=="}, "originalCommit": {"oid": "1dfc81041258c0cd83ee3960f788295d18edd469"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2ODQ5NQ==", "bodyText": "Alright.", "url": "https://github.com/vaadin/flow/pull/8480#discussion_r437168495", "createdAt": "2020-06-09T06:35:16Z", "author": {"login": "joheriks"}, "path": "flow-server/src/test/java/com/vaadin/flow/component/TextTest.java", "diffHunk": "@@ -44,4 +48,41 @@ public void setGetText() {\n         Assert.assertEquals(\"Simple\", new Text(\"Simple\").getText());\n         Assert.assertEquals(\"\u00e5\u00e4\u00f6 \u20ac#%\u00b0#\", new Text(\"\u00e5\u00e4\u00f6 \u20ac#%\u00b0#\").getText());\n     }\n+\n+    @Test\n+    public void setId_throwsWithMeaningfulMessage() {\n+        assertExceptionOnSetProperty(\"id\");\n+\n+        new Text(\"\").setId(\"foo\");\n+    }\n+\n+    @Test\n+    public void setFooProperty_throwsWithMeaningfulMessage() {\n+        assertExceptionOnSetProperty(\"foo\");\n+\n+        new Text(\"\").set(PropertyDescriptors.propertyWithDefault(\"foo\", true),\n+                false);\n+    }\n+\n+    @Test\n+    public void setVisibility_throwsWithMeaningfulMessage() {\n+        exception.expect(UnsupportedOperationException.class);\n+\n+        exception.expectMessage(CoreMatchers.allOf(\n+                CoreMatchers.containsString(\n+                        \"Cannot change Text component visibiltiy\"),\n+                CoreMatchers.containsString(\n+                        \"because it doesn't represent an HTML Element\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4NDI4MQ=="}, "originalCommit": {"oid": "1dfc81041258c0cd83ee3960f788295d18edd469"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3438, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}