{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NzI3NTYx", "number": 7615, "title": "IGNITE-12764 Regression: Thin JDBC streaming fails/BatchUpdateException if function is used", "bodyText": "\u2026on if function is used", "createdAt": "2020-04-02T17:49:46Z", "url": "https://github.com/apache/ignite/pull/7615", "merged": true, "mergeCommit": {"oid": "00cb1ad7a3420024b2a4ecdab58d1c1056ea35b6"}, "closed": true, "closedAt": "2020-04-10T14:55:06Z", "author": {"login": "x-kreator"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTwBM-AH2gAyMzk3NzI3NTYxOjU5YjAwYTRkZTY1OTllZjFiYzJmY2RmYmIyZGFkYjRlZTcwNTNjZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWSQ9hAH2gAyMzk3NzI3NTYxOjg4NDczYjBhMzAwMDc1MGFhNjRkZDYzNzBkNGE1OGMyZDQ0MmRmY2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59b00a4de6599ef1bc2fcdfbb2dadb4ee7053cea", "author": {"user": {"login": "x-kreator", "name": "Dmitriy Sorokin"}}, "url": "https://github.com/apache/ignite/commit/59b00a4de6599ef1bc2fcdfbb2dadb4ee7053cea", "committedDate": "2020-04-02T17:47:24Z", "message": "IGNITE-12764 Regression: Thin JDBC streaming fails/BatchUpdateException if function is used"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDU2Mzc2", "url": "https://github.com/apache/ignite/pull/7615#pullrequestreview-388056376", "createdAt": "2020-04-06T08:59:08Z", "commit": {"oid": "59b00a4de6599ef1bc2fcdfbb2dadb4ee7053cea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1OTowOVrOGBOHdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODo1OTowOVrOGBOHdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzMzA0NQ==", "bodyText": "Can you, please, rewrite this test using Ignite code style?\nhttps://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines", "url": "https://github.com/apache/ignite/pull/7615#discussion_r403933045", "createdAt": "2020-04-06T08:59:09Z", "author": {"login": "nizhikov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/JdbcSqlStreamingTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.query;\n+\n+import java.sql.Connection;\n+import java.sql.Driver;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.util.Properties;\n+import java.util.UUID;\n+import org.apache.ignite.IgniteJdbcThinDriver;\n+import org.apache.ignite.internal.IgniteEx;\n+import org.apache.ignite.internal.processors.cache.index.AbstractIndexingCommonTest;\n+import org.junit.Test;\n+\n+/**\n+ *\n+ */\n+public class JdbcSqlStreamingTest extends AbstractIndexingCommonTest {\n+    /** */\n+    private static final int ROW_NUM = 1600;\n+\n+    /**\n+     * @throws Exception If failed.\n+     */\n+    @Test\n+    public void testStreamingWithFunctionValues() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b00a4de6599ef1bc2fcdfbb2dadb4ee7053cea"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDc5NTQw", "url": "https://github.com/apache/ignite/pull/7615#pullrequestreview-388079540", "createdAt": "2020-04-06T09:30:27Z", "commit": {"oid": "59b00a4de6599ef1bc2fcdfbb2dadb4ee7053cea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTozMDoyN1rOGBPTcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTozMDoyN1rOGBPTcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk1MjQ5Nw==", "bodyText": "Why this query is always local?", "url": "https://github.com/apache/ignite/pull/7615#discussion_r403952497", "createdAt": "2020-04-06T09:30:27Z", "author": {"login": "nizhikov"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/IgniteH2Indexing.java", "diffHunk": "@@ -691,36 +691,58 @@ private long streamQuery0(String qry, String schemaName, IgniteDataStreamer stre\n         try {\n             UpdatePlan plan = dml.plan();\n \n-            List<List<?>> planRows = plan.createRows(args != null ? args : X.EMPTY_OBJECT_ARRAY);\n+            Object[] params = args != null ? args : X.EMPTY_OBJECT_ARRAY;\n+\n+            Iterator<List<?>> iter0;\n+\n+            if (!F.isEmpty(plan.selectQuery())) {\n+                SqlFieldsQuery selectQry = new SqlFieldsQuery(plan.selectQuery())\n+                    .setArgs(params)\n+                    .setLocal(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b00a4de6599ef1bc2fcdfbb2dadb4ee7053cea"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MTQxMTAx", "url": "https://github.com/apache/ignite/pull/7615#pullrequestreview-388141101", "createdAt": "2020-04-06T10:59:14Z", "commit": {"oid": "59b00a4de6599ef1bc2fcdfbb2dadb4ee7053cea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMDo1OToxNVrOGBScYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMDo1OToxNVrOGBScYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAwMzkzOA==", "bodyText": "It seems this piece of code should be rewritten as follows to minimize changes in the code and improve readability:\n    private long streamQuery0(String qry, String schemaName, IgniteDataStreamer streamer, QueryParserResultDml dml,\n        final Object[] args) throws IgniteCheckedException {\n        Long qryId = runningQryMgr.register(qry, GridCacheQueryType.SQL_FIELDS, schemaName, true, null);\n\n        Exception failReason = null;\n\n        try {\n            UpdatePlan plan = dml.plan();\n\n            Iterator<List<?>> iter = updateQueryRows(schemaName, plan, args);\n\n            if (!iter.hasNext())\n                return 0;\n\n            IgniteBiTuple t = plan.processRow(iter.next());\n\n            if (!iter.hasNext()) {\n                streamer.addData(t.getKey(), t.getValue());\n\n                return 1;\n            }\n            else {\n                Map<Object, Object> rows = new LinkedHashMap<>(plan.rowCount());\n\n                rows.put(t.getKey(), t.getValue());\n\n                while (iter.hasNext()) {\n                    List<?> row = iter.next();\n\n                    t = plan.processRow(row);\n\n                    rows.put(t.getKey(), t.getValue());\n                }\n\n                streamer.addData(rows);\n\n                return rows.size();\n            }\n        }\n        catch (IgniteException | IgniteCheckedException e) {\n            failReason = e;\n\n            throw e;\n        }\n        finally {\n            runningQryMgr.unregister(qryId, failReason);\n        }\n    }\n\n    /**\n     * Calculates rows for update query.\n     *\n     * @param schemaName Schema name.\n     * @param plan Update plan.\n     * @param args Statement arguments.\n     * @return Rows for update.\n     * @throws IgniteCheckedException If failed.\n     */\n    Iterator<List<?>> updateQueryRows(String schemaName, UpdatePlan plan, Object[] args) throws IgniteCheckedException {\n        Object[] params = args != null ? args : X.EMPTY_OBJECT_ARRAY;\n\n        if (!F.isEmpty(plan.selectQuery())) {\n            SqlFieldsQuery selectQry = new SqlFieldsQuery(plan.selectQuery())\n                .setArgs(params)\n                .setLocal(true);\n\n            QueryParserResult selectParseRes = parser.parse(schemaName, selectQry, false);\n\n            GridQueryFieldsResult res = executeSelectLocal(\n                selectParseRes.queryDescriptor(),\n                selectParseRes.queryParameters(),\n                selectParseRes.select(),\n                null,\n                null,\n                null,\n                false,\n                0\n            );\n\n            return res.iterator();\n        } else\n            return plan.createRows(params).iterator();\n    }", "url": "https://github.com/apache/ignite/pull/7615#discussion_r404003938", "createdAt": "2020-04-06T10:59:15Z", "author": {"login": "nizhikov"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/IgniteH2Indexing.java", "diffHunk": "@@ -691,36 +691,58 @@ private long streamQuery0(String qry, String schemaName, IgniteDataStreamer stre\n         try {\n             UpdatePlan plan = dml.plan();\n \n-            List<List<?>> planRows = plan.createRows(args != null ? args : X.EMPTY_OBJECT_ARRAY);\n+            Object[] params = args != null ? args : X.EMPTY_OBJECT_ARRAY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b00a4de6599ef1bc2fcdfbb2dadb4ee7053cea"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faa4bfcbff1f27f9e13873ddd154a276ce9fe15e", "author": {"user": {"login": "x-kreator", "name": "Dmitriy Sorokin"}}, "url": "https://github.com/apache/ignite/commit/faa4bfcbff1f27f9e13873ddd154a276ce9fe15e", "committedDate": "2020-04-08T08:37:39Z", "message": "IGNITE-12764 Regression: Thin JDBC streaming fails/BatchUpdateException if function is used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48d70f823d079715061766415a1db62931875097", "author": {"user": {"login": "x-kreator", "name": "Dmitriy Sorokin"}}, "url": "https://github.com/apache/ignite/commit/48d70f823d079715061766415a1db62931875097", "committedDate": "2020-04-08T08:59:00Z", "message": "IGNITE-12764 Regression: Thin JDBC streaming fails/BatchUpdateException if function is used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c9db786a46e783f22eefc4b93952de5dfcdf725", "author": {"user": {"login": "x-kreator", "name": "Dmitriy Sorokin"}}, "url": "https://github.com/apache/ignite/commit/5c9db786a46e783f22eefc4b93952de5dfcdf725", "committedDate": "2020-04-08T12:54:21Z", "message": "IGNITE-12764 Regression: Thin JDBC streaming fails/BatchUpdateException if function is used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "daab8a31811b6e15b5f3cf58da9d56c5c6f3b6ec", "author": {"user": {"login": "x-kreator", "name": "Dmitriy Sorokin"}}, "url": "https://github.com/apache/ignite/commit/daab8a31811b6e15b5f3cf58da9d56c5c6f3b6ec", "committedDate": "2020-04-10T07:55:23Z", "message": "IGNITE-12764 Regression: Thin JDBC streaming fails/BatchUpdateException if function is used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "136ac36e54b195887c80d6f0f6360cbe2e5ad9ad", "author": {"user": {"login": "x-kreator", "name": "Dmitriy Sorokin"}}, "url": "https://github.com/apache/ignite/commit/136ac36e54b195887c80d6f0f6360cbe2e5ad9ad", "committedDate": "2020-04-10T08:48:12Z", "message": "IGNITE-12764 Regression: Thin JDBC streaming fails/BatchUpdateException if function is used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b962728906a6891fe7a7beb1b87ee79a2d212aca", "author": {"user": {"login": "x-kreator", "name": "Dmitriy Sorokin"}}, "url": "https://github.com/apache/ignite/commit/b962728906a6891fe7a7beb1b87ee79a2d212aca", "committedDate": "2020-04-10T12:36:37Z", "message": "IGNITE-12764 Regression: Thin JDBC streaming fails/BatchUpdateException if function is used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88473b0a3000750aa64dd6370d4a58c2d442dfcc", "author": {"user": {"login": "x-kreator", "name": "Dmitriy Sorokin"}}, "url": "https://github.com/apache/ignite/commit/88473b0a3000750aa64dd6370d4a58c2d442dfcc", "committedDate": "2020-04-10T14:49:14Z", "message": "IGNITE-12764 Regression: Thin JDBC streaming fails/BatchUpdateException if function is used"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2661, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}