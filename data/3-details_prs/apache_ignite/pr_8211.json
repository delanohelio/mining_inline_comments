{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MDcwMDEw", "number": 8211, "title": "Ducktests iptables", "bodyText": "network failure simulation instead of 'kill -9'", "createdAt": "2020-09-02T18:31:26Z", "url": "https://github.com/apache/ignite/pull/8211", "merged": true, "mergeCommit": {"oid": "8e9350e676ac7ab9a631cba12c28ff69ff2ed281"}, "closed": true, "closedAt": "2020-10-21T07:09:55Z", "author": {"login": "Vladsz83"}, "timelineItems": {"totalCount": 107, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUBfDwgH2gAyNDc4MDcwMDEwOjdkMzQ0NDQ3Nzg1ODYyMGMwZWFmMDg3ZDU4YzEyMTNkYWUzMWNkMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUW7pdgH2gAyNDc4MDcwMDEwOjkxN2UzMmE4ZThjYmY2MTYzNzFlMTA5YjQ1NTI3Y2JjYWYyODYyZmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7d3444477858620c0eaf087d58c1213dae31cd18", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/7d3444477858620c0eaf087d58c1213dae31cd18", "committedDate": "2020-10-19T10:19:33Z", "message": "fixes after review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bedf1ff9e82feacb07b1313940186aa06bfc08c7", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/bedf1ff9e82feacb07b1313940186aa06bfc08c7", "committedDate": "2020-10-19T12:25:04Z", "message": "fixes after review 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4158d2c82e5cc9361e6340f62b195b241d959d2e", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/4158d2c82e5cc9361e6340f62b195b241d959d2e", "committedDate": "2020-10-19T15:01:34Z", "message": "fixes after review 3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bbdf14106137d0504a7fb1888178c91faa4de79", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/9bbdf14106137d0504a7fb1888178c91faa4de79", "committedDate": "2020-10-20T07:32:53Z", "message": "fixes after review 5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2a01c805acc8e694e68af6dd9d6e46c55c6bc67", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/d2a01c805acc8e694e68af6dd9d6e46c55c6bc67", "committedDate": "2020-10-20T08:45:34Z", "message": "fixes after review 6"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b159dde7581fba4adb34ce8d70d2df6553e67c9", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/8b159dde7581fba4adb34ce8d70d2df6553e67c9", "committedDate": "2020-10-20T10:58:32Z", "message": "fixes after review 7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "917e32a8e8cbf616371e109b45527cbcaf2862fb", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/917e32a8e8cbf616371e109b45527cbcaf2862fb", "committedDate": "2020-10-20T11:18:47Z", "message": "fixes after review 8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "734bd8397b92f3eae5c71b92d80155666eb29c38", "author": {"user": {"login": "ivandasch", "name": "Ivan Daschinskiy"}}, "url": "https://github.com/apache/ignite/commit/734bd8397b92f3eae5c71b92d80155666eb29c38", "committedDate": "2020-09-02T13:26:52Z", "message": "in progress. amend."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27d514c02ed9bc923cbc3312851d515fef313a18", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/27d514c02ed9bc923cbc3312851d515fef313a18", "committedDate": "2020-09-02T18:27:43Z", "message": "first impl."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96da4f3ae4f4175811a1836a9dd46cb553cfee06", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/96da4f3ae4f4175811a1836a9dd46cb553cfee06", "committedDate": "2020-09-02T18:37:17Z", "message": "Merge branch 'ignite-ducktape' into ducktests-iptables\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/services/utils/ignite_configuration/discovery.py\n#\tmodules/ducktests/tests/ignitetest/services/utils/templates/discovery_macro.j2\n#\tmodules/ducktests/tests/ignitetest/tests/discovery_test.py"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c24798378a669e98fb3b3427440e04349251b2b", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/7c24798378a669e98fb3b3427440e04349251b2b", "committedDate": "2020-09-03T08:29:20Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5106bc70e2eae13713d019de589f2062f6bf8a9", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/c5106bc70e2eae13713d019de589f2062f6bf8a9", "committedDate": "2020-09-04T15:59:01Z", "message": "impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad513b6f6adf32152415e6274f6854fd4c1fdac4", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/ad513b6f6adf32152415e6274f6854fd4c1fdac4", "committedDate": "2020-09-04T16:05:03Z", "message": "Merge branch 'ignite-ducktape' into ducktests-iptables\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/tests/discovery_test.py"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ce73f3b4f663aedc15f96e878db2c9e36ab976b", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/7ce73f3b4f663aedc15f96e878db2c9e36ab976b", "committedDate": "2020-09-04T16:18:37Z", "message": "merged ignite-ducktape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55f2b581f756a0f20de030337ac4f160f6587357", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/55f2b581f756a0f20de030337ac4f160f6587357", "committedDate": "2020-09-04T16:19:31Z", "message": "Merge remote-tracking branch 'origin/ducktests-iptables' into ducktests-iptables\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/services/ignite.py"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c19d8da95245fb16f992bca83a28c2069691af45", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/c19d8da95245fb16f992bca83a28c2069691af45", "committedDate": "2020-09-04T16:21:27Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be178a3186a36f2bb37a1e54d04f80845f960533", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/be178a3186a36f2bb37a1e54d04f80845f960533", "committedDate": "2020-09-07T09:51:53Z", "message": "removed double call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab236576ab42c0fcb9f22ad84105355cd5985fe8", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/ab236576ab42c0fcb9f22ad84105355cd5985fe8", "committedDate": "2020-09-07T16:45:21Z", "message": "+ logs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd506051a3a5384b6b20b6f36ad159772f546362", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/bd506051a3a5384b6b20b6f36ad159772f546362", "committedDate": "2020-09-08T14:52:43Z", "message": "restoring rules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "171c4b4e853385932cdbd3425a0b0fc87f37fc86", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/171c4b4e853385932cdbd3425a0b0fc87f37fc86", "committedDate": "2020-09-08T15:45:19Z", "message": "choice of iptables or iptables-legacy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7176c5321454e8cd12b535b15d53fd44893e2960", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/7176c5321454e8cd12b535b15d53fd44893e2960", "committedDate": "2020-09-08T16:21:44Z", "message": "style fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a08a674eb94c93a052a3f3acc77b1af9133d805e", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/a08a674eb94c93a052a3f3acc77b1af9133d805e", "committedDate": "2020-09-08T18:06:30Z", "message": "test with iptables -F"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "998cce7701a752afe1267f0a644663d0310a5e45", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/998cce7701a752afe1267f0a644663d0310a5e45", "committedDate": "2020-09-09T11:03:20Z", "message": "+ iptables log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2071fdeeebf6d3aaeb60e77acc8f7729c0c79060", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/2071fdeeebf6d3aaeb60e77acc8f7729c0c79060", "committedDate": "2020-09-10T10:04:52Z", "message": "+ not-started node name in the log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33dd82b2a99183babd778e8e3822c1a0357f51d1", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/33dd82b2a99183babd778e8e3822c1a0357f51d1", "committedDate": "2020-09-10T12:43:57Z", "message": "looks good"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30390634ab9cd0ec686a9239a215bf505c2a05ce", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/30390634ab9cd0ec686a9239a215bf505c2a05ce", "committedDate": "2020-09-10T16:58:07Z", "message": "test with '-F' again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a90f785ef4db4feb3a7f52933a15dbe30e3a1cb6", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/a90f785ef4db4feb3a7f52933a15dbe30e3a1cb6", "committedDate": "2020-09-11T10:05:03Z", "message": "+ output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9114562b905f9419188c93921d063c99d0c0eedf", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/9114562b905f9419188c93921d063c99d0c0eedf", "committedDate": "2020-09-11T11:46:32Z", "message": "bigger FDT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2e0ac1b8a753529efbad4f35a47eec556cd62c9", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e2e0ac1b8a753529efbad4f35a47eec556cd62c9", "committedDate": "2020-09-11T13:21:36Z", "message": "+ new iptables settings log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dae8ddfbaa37fc0fdbaafdf623acae8d74615b98", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/dae8ddfbaa37fc0fdbaafdf623acae8d74615b98", "committedDate": "2020-09-11T14:13:19Z", "message": "longer timeout to wait for the failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "561c54f540e4b4eb1b1950a49e6c4ce1726ff9e5", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/561c54f540e4b4eb1b1950a49e6c4ce1726ff9e5", "committedDate": "2020-09-11T14:31:44Z", "message": "longer timeout to wait for the failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1b04c110cf74830ca0b2954df4b9324c871da46", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/b1b04c110cf74830ca0b2954df4b9324c871da46", "committedDate": "2020-09-11T16:17:09Z", "message": "reverted to restoring instead of clearing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "400ee762263a63ffc9765490d3673a1b049e76e6", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/400ee762263a63ffc9765490d3673a1b049e76e6", "committedDate": "2020-09-11T17:29:05Z", "message": "looks good 2."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f55fea093db65974ab92195140d1430a3df4f4c", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/4f55fea093db65974ab92195140d1430a3df4f4c", "committedDate": "2020-09-14T11:34:19Z", "message": "loglevel info"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "413832e5b58d1b181b1d66bedeb802f34f8e58e1", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/413832e5b58d1b181b1d66bedeb802f34f8e58e1", "committedDate": "2020-09-14T14:25:59Z", "message": "loglevel info 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad9c7bee7b5debb7285ff7dd2176ac2d120aeda5", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/ad9c7bee7b5debb7285ff7dd2176ac2d120aeda5", "committedDate": "2020-09-14T15:36:56Z", "message": "loglevel info 3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84ac3e8ff2995b80f0c90b32977c790471738f6f", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/84ac3e8ff2995b80f0c90b32977c790471738f6f", "committedDate": "2020-09-14T16:35:42Z", "message": "looks good 3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d32d51966d1d18c822bac1712456f026d7b3268f", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/d32d51966d1d18c822bac1712456f026d7b3268f", "committedDate": "2020-09-15T12:36:12Z", "message": "+ saved/restored comparation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc66b5c4ada5856fb6a3cc7bf02267505715d012", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/bc66b5c4ada5856fb6a3cc7bf02267505715d012", "committedDate": "2020-09-15T12:38:04Z", "message": "+ saved/restored comparation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce67e48238c4de698e6adbfad8227d1284fda518", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/ce67e48238c4de698e6adbfad8227d1284fda518", "committedDate": "2020-09-15T12:38:13Z", "message": "Merge remote-tracking branch 'origin/ducktests-iptables' into ducktests-iptables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a009cd381dba771d80dca19c338681adcdd917a5", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/a009cd381dba771d80dca19c338681adcdd917a5", "committedDate": "2020-09-15T13:12:42Z", "message": "+ tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37ca0c83a4ebbc2fe6871af442c48968a5b063b0", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/37ca0c83a4ebbc2fe6871af442c48968a5b063b0", "committedDate": "2020-09-15T13:41:13Z", "message": "almost all tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7234d44528899602a73ff13f1f635b3e66a3abf", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/b7234d44528899602a73ff13f1f635b3e66a3abf", "committedDate": "2020-09-15T13:42:18Z", "message": "not all tests, better FDT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37d5d600012cae0f37538956d7adfe808687b50f", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/37d5d600012cae0f37538956d7adfe808687b50f", "committedDate": "2020-09-15T14:25:55Z", "message": "fix in iptables comparation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39c0e04ad48cf1bcae7f4055365dd8e383f0aed0", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/39c0e04ad48cf1bcae7f4055365dd8e383f0aed0", "committedDate": "2020-09-15T14:53:54Z", "message": "all tests for 2.8.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e26e0120b73c71038123518b540686e0ed044190", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e26e0120b73c71038123518b540686e0ed044190", "committedDate": "2020-09-15T15:32:04Z", "message": "all tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e36ed4db860f77c09f125c26cfa5557e31a05ea3", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e36ed4db860f77c09f125c26cfa5557e31a05ea3", "committedDate": "2020-09-15T19:37:11Z", "message": "only dev version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc1b1ebfa92f62c749cfcfb014744930c47ec8f5", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/fc1b1ebfa92f62c749cfcfb014744930c47ec8f5", "committedDate": "2020-09-16T11:20:55Z", "message": "dev, port range == 0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b511c9e2620a2bf212606dad8e0d5ab1e1faedc", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/8b511c9e2620a2bf212606dad8e0d5ab1e1faedc", "committedDate": "2020-09-16T11:39:53Z", "message": "dev, + tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8312e070b3e7fcaeccc22cb7dd9b595700468e33", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/8312e070b3e7fcaeccc22cb7dd9b595700468e33", "committedDate": "2020-09-16T12:39:47Z", "message": "no rules clearing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3d7e2f94e148a832e4099ed43c2f7a90cdb5b39", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/c3d7e2f94e148a832e4099ed43c2f7a90cdb5b39", "committedDate": "2020-09-16T13:34:16Z", "message": "bigger timeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bc8fc8353786ed9a6d3996fb8ff1131000719ab", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/1bc8fc8353786ed9a6d3996fb8ff1131000719ab", "committedDate": "2020-09-16T14:09:13Z", "message": "bigger timeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "697f6e6a26ded768d10bbc4b241c22c6767e944b", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/697f6e6a26ded768d10bbc4b241c22c6767e944b", "committedDate": "2020-09-16T14:47:34Z", "message": "+ rules cleaning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b872d26df5090b75af4091a35ad492f1fcc80995", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/b872d26df5090b75af4091a35ad492f1fcc80995", "committedDate": "2020-09-16T15:39:30Z", "message": "+ conntrack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2262e9839f1b1d60874269658b34f4bef78012b", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e2262e9839f1b1d60874269658b34f4bef78012b", "committedDate": "2020-09-16T16:19:57Z", "message": "try adding rule again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66529bb3bc71353fb9bd8558db357e70735f06b7", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/66529bb3bc71353fb9bd8558db357e70735f06b7", "committedDate": "2020-09-17T11:05:03Z", "message": "+ tests tcp for dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c463e909d759b5a56daccefa5752af1ad3e34ce", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/2c463e909d759b5a56daccefa5752af1ad3e34ce", "committedDate": "2020-09-17T12:00:02Z", "message": "all tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41f5590dac59b9ecbb6dee5a7377a3ef754bb694", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/41f5590dac59b9ecbb6dee5a7377a3ef754bb694", "committedDate": "2020-09-17T12:08:35Z", "message": "Merge branch 'ignite-ducktape' into ducktests-iptables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d28cd4cbc9b2126ad2b7c06b7aa5fff964c4402", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/1d28cd4cbc9b2126ad2b7c06b7aa5fff964c4402", "committedDate": "2020-09-17T13:21:00Z", "message": "test 2.8.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da230deebc75f059745dc7796b07ba0367acbfd0", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/da230deebc75f059745dc7796b07ba0367acbfd0", "committedDate": "2020-09-17T13:45:19Z", "message": "all ignite versions, insert rule, + rules log at start"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95ebba5629651392fdcaa0cd82c5ae4577f3e444", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/95ebba5629651392fdcaa0cd82c5ae4577f3e444", "committedDate": "2020-09-17T14:39:49Z", "message": "looks good 4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ea318626025f14be891046dac27ae06a120e124", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/0ea318626025f14be891046dac27ae06a120e124", "committedDate": "2020-09-17T15:58:43Z", "message": "fix of tear down"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba74c00bd61ff1e7aab88fb8d45eb713356aa175", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/ba74c00bd61ff1e7aab88fb8d45eb713356aa175", "committedDate": "2020-09-17T17:18:19Z", "message": "-F again, dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1033c8a2b979c6e254019216e4e1bd0a83731c32", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/1033c8a2b979c6e254019216e4e1bd0a83731c32", "committedDate": "2020-09-17T17:37:30Z", "message": "-F, + v2.8.1. + configured blocked timeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "485adf486db9df53a9ea86b8b444da9d6f1e619b", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/485adf486db9df53a9ea86b8b444da9d6f1e619b", "committedDate": "2020-09-17T17:44:29Z", "message": "property set fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261e7cfff837cf9ee70c4e281c33f1ebe278949f", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/261e7cfff837cf9ee70c4e281c33f1ebe278949f", "committedDate": "2020-09-17T18:08:51Z", "message": "better FDT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6c3b56227a1ab7b62d9dd3bf675d074bbb7184b", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/f6c3b56227a1ab7b62d9dd3bf675d074bbb7184b", "committedDate": "2020-09-17T18:11:16Z", "message": "better FDT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "505fd1d03c6a055be38c761789c01a3695885dde", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/505fd1d03c6a055be38c761789c01a3695885dde", "committedDate": "2020-09-17T19:13:58Z", "message": "test: always sequantial failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "910649a26ac3febd18360aa8d817eb9c15d8ca56", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/910649a26ac3febd18360aa8d817eb9c15d8ca56", "committedDate": "2020-09-17T22:33:15Z", "message": "removed sequential failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd79d8798a9d0de3f593b9f851167ea4b7543dbe", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/fd79d8798a9d0de3f593b9f851167ea4b7543dbe", "committedDate": "2020-09-22T18:10:41Z", "message": "in progres"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8dde8737c295e785dfe1c4c6caff5e1e11e4cf9", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/a8dde8737c295e785dfe1c4c6caff5e1e11e4cf9", "committedDate": "2020-09-23T18:46:25Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c407c22650b92fd04740b3a2a2cc3ec07874f0ce", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/c407c22650b92fd04740b3a2a2cc3ec07874f0ce", "committedDate": "2020-09-24T21:27:26Z", "message": "Merge branch 'ignite-ducktape' into ducktests-iptables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e539fa46631d1e41465b6829aac7ca4893d1183d", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e539fa46631d1e41465b6829aac7ca4893d1183d", "committedDate": "2020-09-25T01:29:29Z", "message": "looks good 5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d76cfa2d2a46bb3e6393bc11fc066bd43e3b75c5", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/d76cfa2d2a46bb3e6393bc11fc066bd43e3b75c5", "committedDate": "2020-09-30T02:29:36Z", "message": "fix for ZooKeeper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e784a85b32514a323008dd81dcc31b425b0990e5", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e784a85b32514a323008dd81dcc31b425b0990e5", "committedDate": "2020-09-30T02:34:10Z", "message": "Merge branch 'ignite-ducktape' into ducktests-iptables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89d9aa44761b4403dbe7e02ef175be66bef2376b", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/89d9aa44761b4403dbe7e02ef175be66bef2376b", "committedDate": "2020-09-30T03:21:09Z", "message": "merged. minorities."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3412504d5c9633fc46d2c37a81a2702126f3e4c8", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/3412504d5c9633fc46d2c37a81a2702126f3e4c8", "committedDate": "2020-09-30T07:57:31Z", "message": "no @parametrize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee7a1575df5cdc672a17d693f2c3865956bf2e4e", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/ee7a1575df5cdc672a17d693f2c3865956bf2e4e", "committedDate": "2020-09-30T09:46:44Z", "message": "fix of results checking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "781079ad2c087a81dbb20abf938cbe001e007cfc", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/781079ad2c087a81dbb20abf938cbe001e007cfc", "committedDate": "2020-09-30T13:21:36Z", "message": "minorities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "859e936aa781df17f59301368c8178f0a8265eb7", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/859e936aa781df17f59301368c8178f0a8265eb7", "committedDate": "2020-09-30T13:54:35Z", "message": "Merge branch 'ignite-ducktape' into ducktests-iptables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c61bd56fecafdca951097050525e8207d9c15c", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/89c61bd56fecafdca951097050525e8207d9c15c", "committedDate": "2020-09-30T19:05:45Z", "message": "logfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e04ba5286070fd91237d16b5cfa2c3f44064b8bd", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e04ba5286070fd91237d16b5cfa2c3f44064b8bd", "committedDate": "2020-10-01T09:22:50Z", "message": "+ FDT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc8ddc6d7d988f3eab8275397ecee1e8336135f6", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/cc8ddc6d7d988f3eab8275397ecee1e8336135f6", "committedDate": "2020-10-01T10:29:52Z", "message": "+ FDT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7096884f033faeb84d53a223ade658452475e974", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/7096884f033faeb84d53a223ade658452475e974", "committedDate": "2020-10-01T14:02:47Z", "message": "removed debug message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/091f1279e38aa08fa0dd667f32ffa94011d7a168", "committedDate": "2020-10-01T18:05:35Z", "message": "better zk settings. fix for pylint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMTcyMTg4", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-501172188", "createdAt": "2020-10-02T14:13:18Z", "commit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxMzoxOVrOHbvP1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxMzoxOVrOHbvP1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0NzcwMg==", "bodyText": "please use super().teardown()", "url": "https://github.com/apache/ignite/pull/8211#discussion_r498847702", "createdAt": "2020-10-02T14:13:19Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/utils/ignite_test.py", "diffHunk": "@@ -26,9 +26,17 @@ class IgniteTest(Test):\n     \"\"\"\n     Basic ignite test.\n     \"\"\"\n+    TEMP_PATH_ROOT = \"/mnt/ducktests\"\n+\n     def __init__(self, test_context):\n         super().__init__(test_context=test_context)\n \n+    def teardown(self):\n+        for node in self.test_context.cluster.nodes:\n+            node.account.ssh_client.exec_command(\"rm -drf \" + self.TEMP_PATH_ROOT)\n+\n+        Test.teardown(self)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMTcyNDE3", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-501172417", "createdAt": "2020-10-02T14:13:36Z", "commit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxMzozNlrOHbvQeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxMzozNlrOHbvQeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0Nzg2NQ==", "bodyText": "please, use super().teardown()", "url": "https://github.com/apache/ignite/pull/8211#discussion_r498847865", "createdAt": "2020-10-02T14:13:36Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +173,134 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))\n+\n+        data = self._simulate_nodes_failure(servers, node_fail_task(ignite_config, test_config), failed_nodes,\n+                                            survived_node)\n \n         data['Ignite cluster start time (s)'] = start_servers_sec\n \n         return data\n \n+    def _simulate_nodes_failure(self, servers, kill_node_task, failed_nodes, survived_node):\n+        \"\"\"\n+        Perform node failure scenario\n+        \"\"\"\n+        ids_to_wait = [node_id(n) for n in failed_nodes]\n+\n+        _, first_terminated = servers.exec_on_nodes_async(failed_nodes, kill_node_task)\n+\n+        for node in failed_nodes:\n+            self.logger.debug(\n+                \"Netfilter activated on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+        # Keeps dates of logged node failures.\n+        logged_timestamps = []\n+        data = {}\n+\n+        for failed_id in ids_to_wait:\n+            servers.await_event_on_node(failed_pattern(failed_id), survived_node, 15, from_the_beginning=True,\n+                                        backoff_sec=0.3)\n+\n+            _, stdout, _ = survived_node.account.ssh_client.exec_command(\n+                \"grep '%s' %s\" % (failed_pattern(failed_id), IgniteAwareService.STDOUT_STDERR_CAPTURE))\n+\n+            logged_timestamps.append(\n+                datetime.strptime(re.match(\"^\\\\[[^\\\\[]+\\\\]\", stdout.read().decode(\"utf-8\")).group(),\n+                                  \"[%Y-%m-%d %H:%M:%S,%f]\"))\n+\n+        self._check_results(failed_nodes, survived_node)\n+\n+        logged_timestamps.sort(reverse=True)\n+\n+        first_kill_time = epoch_mills(first_terminated)\n+        detection_delay = epoch_mills(logged_timestamps[0]) - first_kill_time\n+\n+        data['Detection of node(s) failure (ms)'] = detection_delay\n+        data['All detection delays (ms):'] = str([epoch_mills(ts) - first_kill_time for ts in logged_timestamps])\n+        data['Nodes failed'] = len(failed_nodes)\n+\n+        return data\n+\n+    def _check_results(self, failed_nodes, survived_node):\n+        \"\"\"Ensures test finishes correctly.\"\"\"\n+        cmd = \"grep '%s' %s | wc -l\" % (failed_pattern(), IgniteAwareService.STDOUT_STDERR_CAPTURE)\n+\n+        failed_cnt = int(str(survived_node.account.ssh_client.exec_command(cmd)[1].read(), sys.getdefaultencoding()))\n+\n+        if failed_cnt != len(failed_nodes):\n+            failed = str(survived_node.account.ssh_client.exec_command(\n+                \"grep '%s' %s\" % (failed_pattern(), IgniteAwareService.STDOUT_STDERR_CAPTURE))[1].read(),\n+                         sys.getdefaultencoding())\n+\n+            self.logger.warn(\"Node '%s' (%s) has detected the following failures:%s%s\" % (\n+                survived_node.name, node_id(survived_node), os.linesep, failed))\n+\n+            raise AssertionError(\n+                \"Wrong number of failed nodes: %d. Expected: %d. Check the logs.\" % (failed_cnt, len(failed_nodes)))\n+\n+        for service in [srv for srv in self.test_context.services if isinstance(srv, IgniteAwareService)]:\n+            for node in [srv_node for srv_node in service.nodes if srv_node not in failed_nodes]:\n+                cmd = \"grep -i '%s' %s | wc -l\" % (\"local no1de segmented\", IgniteAwareService.STDOUT_STDERR_CAPTURE)\n+\n+                failed = str(node.account.ssh_client.exec_command(cmd)[1].read(), sys.getdefaultencoding())\n+\n+                if int(failed) > 0:\n+                    raise AssertionError(\n+                        \"Wrong node failed (segmented) on '%s'. Check the logs.\" % node.name)\n+\n+    def setup(self):\n+        IgniteTest.setup(self)\n+\n+        # Store current network filter settings.\n+        for node in self.test_context.cluster.nodes:\n+            path_to_store = self.NETFILTER_SAVED_SETTINGS\n+\n+            node.account.ssh_client.exec_command(f\"rm -drf {path_to_store} && mkdir -p $(dirname {path_to_store})\")\n+\n+            cmd = \"sudo iptables-save | tee \" + self.NETFILTER_SAVED_SETTINGS\n+\n+            exec_error = str(node.account.ssh_client.exec_command(cmd)[2].read(), sys.getdefaultencoding())\n+\n+            if \"Warning: iptables-legacy tables present\" in exec_error:\n+                cmd = \"sudo iptables-legacy-save | tee \" + self.NETFILTER_SAVED_SETTINGS\n+\n+                exec_error = str(node.account.ssh_client.exec_command(cmd)[2].read(), sys.getdefaultencoding())\n+\n+            assert len(exec_error) == 0, \"Failed to store iptables rules on '%s': %s\" % (node.name, exec_error)\n+\n+            self.logger.debug(\"Netfilter before launch on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+    def teardown(self):\n+        # Restore previous network filter settings.\n+        cmd = \"sudo iptables-restore < \" + self.NETFILTER_SAVED_SETTINGS\n+\n+        errors = []\n+\n+        for node in self.test_context.cluster.nodes:\n+            exec_error = str(node.account.ssh_client.exec_command(cmd)[2].read(), sys.getdefaultencoding())\n+\n+            if len(exec_error) > 0:\n+                errors.append(\"Failed to restore iptables rules on '%s': %s\" % (node.name, exec_error))\n+            else:\n+                self.logger.debug(\"Netfilter after launch on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+        if len(errors) > 0:\n+            self.logger.error(\"Failed restoring actions:\" + os.linesep + os.linesep.join(errors))\n+\n+            raise RuntimeError(\"Unable to restore node states. See the log above.\")\n+\n+        IgniteTest.teardown(self)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168"}, "originalPosition": 260}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMTcyNTYw", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-501172560", "createdAt": "2020-10-02T14:13:46Z", "commit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxMzo0N1rOHbvQ7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxMzo0N1rOHbvQ7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0Nzk4Mw==", "bodyText": "please, use super().setup()", "url": "https://github.com/apache/ignite/pull/8211#discussion_r498847983", "createdAt": "2020-10-02T14:13:47Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +173,134 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))\n+\n+        data = self._simulate_nodes_failure(servers, node_fail_task(ignite_config, test_config), failed_nodes,\n+                                            survived_node)\n \n         data['Ignite cluster start time (s)'] = start_servers_sec\n \n         return data\n \n+    def _simulate_nodes_failure(self, servers, kill_node_task, failed_nodes, survived_node):\n+        \"\"\"\n+        Perform node failure scenario\n+        \"\"\"\n+        ids_to_wait = [node_id(n) for n in failed_nodes]\n+\n+        _, first_terminated = servers.exec_on_nodes_async(failed_nodes, kill_node_task)\n+\n+        for node in failed_nodes:\n+            self.logger.debug(\n+                \"Netfilter activated on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+        # Keeps dates of logged node failures.\n+        logged_timestamps = []\n+        data = {}\n+\n+        for failed_id in ids_to_wait:\n+            servers.await_event_on_node(failed_pattern(failed_id), survived_node, 15, from_the_beginning=True,\n+                                        backoff_sec=0.3)\n+\n+            _, stdout, _ = survived_node.account.ssh_client.exec_command(\n+                \"grep '%s' %s\" % (failed_pattern(failed_id), IgniteAwareService.STDOUT_STDERR_CAPTURE))\n+\n+            logged_timestamps.append(\n+                datetime.strptime(re.match(\"^\\\\[[^\\\\[]+\\\\]\", stdout.read().decode(\"utf-8\")).group(),\n+                                  \"[%Y-%m-%d %H:%M:%S,%f]\"))\n+\n+        self._check_results(failed_nodes, survived_node)\n+\n+        logged_timestamps.sort(reverse=True)\n+\n+        first_kill_time = epoch_mills(first_terminated)\n+        detection_delay = epoch_mills(logged_timestamps[0]) - first_kill_time\n+\n+        data['Detection of node(s) failure (ms)'] = detection_delay\n+        data['All detection delays (ms):'] = str([epoch_mills(ts) - first_kill_time for ts in logged_timestamps])\n+        data['Nodes failed'] = len(failed_nodes)\n+\n+        return data\n+\n+    def _check_results(self, failed_nodes, survived_node):\n+        \"\"\"Ensures test finishes correctly.\"\"\"\n+        cmd = \"grep '%s' %s | wc -l\" % (failed_pattern(), IgniteAwareService.STDOUT_STDERR_CAPTURE)\n+\n+        failed_cnt = int(str(survived_node.account.ssh_client.exec_command(cmd)[1].read(), sys.getdefaultencoding()))\n+\n+        if failed_cnt != len(failed_nodes):\n+            failed = str(survived_node.account.ssh_client.exec_command(\n+                \"grep '%s' %s\" % (failed_pattern(), IgniteAwareService.STDOUT_STDERR_CAPTURE))[1].read(),\n+                         sys.getdefaultencoding())\n+\n+            self.logger.warn(\"Node '%s' (%s) has detected the following failures:%s%s\" % (\n+                survived_node.name, node_id(survived_node), os.linesep, failed))\n+\n+            raise AssertionError(\n+                \"Wrong number of failed nodes: %d. Expected: %d. Check the logs.\" % (failed_cnt, len(failed_nodes)))\n+\n+        for service in [srv for srv in self.test_context.services if isinstance(srv, IgniteAwareService)]:\n+            for node in [srv_node for srv_node in service.nodes if srv_node not in failed_nodes]:\n+                cmd = \"grep -i '%s' %s | wc -l\" % (\"local no1de segmented\", IgniteAwareService.STDOUT_STDERR_CAPTURE)\n+\n+                failed = str(node.account.ssh_client.exec_command(cmd)[1].read(), sys.getdefaultencoding())\n+\n+                if int(failed) > 0:\n+                    raise AssertionError(\n+                        \"Wrong node failed (segmented) on '%s'. Check the logs.\" % node.name)\n+\n+    def setup(self):\n+        IgniteTest.setup(self)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168"}, "originalPosition": 220}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMTc2MDEy", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-501176012", "createdAt": "2020-10-02T14:18:01Z", "commit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxODowMVrOHbvasg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxODowMVrOHbvasg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg1MDQ4Mg==", "bodyText": "I suppose that it's better leave tick time and add assertion that min_session_timeout is at least twice as tick_time.\nIt's ok to pass tickTime as 1000 ms, and set minSessionTimeout as 3000 ms\nBy default, let them be 1000 and 2000", "url": "https://github.com/apache/ignite/pull/8211#discussion_r498850482", "createdAt": "2020-10-02T14:18:01Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/services/zk/zookeeper.py", "diffHunk": "@@ -27,8 +27,9 @@ class ZookeeperSettings:\n     \"\"\"\n     Settings for zookeeper quorum nodes.\n     \"\"\"\n-    def __init__(self, tick_time=1000, init_limit=10, sync_limit=5, client_port=2181):\n-        self.tick_time = tick_time\n+    def __init__(self, min_session_timeout=2000, init_limit=10, sync_limit=5, client_port=2181):\n+        self.tick_time = min_session_timeout // 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMTc3NjM1", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-501177635", "createdAt": "2020-10-02T14:20:02Z", "commit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoyMDowMlrOHbvfVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoyMDowMlrOHbvfVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg1MTY2OQ==", "bodyText": "If linter allowed longer method name, may be call it not_sequential_zk?", "url": "https://github.com/apache/ignite/pull/8211#discussion_r498851669", "createdAt": "2020-10-02T14:20:02Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -71,40 +72,63 @@ class DiscoveryTest(IgniteTest):\n     \"\"\"\n     NUM_NODES = 7\n \n-    FAILURE_DETECTION_TIMEOUT = 2000\n+    FAILURE_DETECTION_TIMEOUT = 1000\n \n     DATA_AMOUNT = 5_000_000\n \n     WARMUP_DATA_AMOUNT = 10_000\n \n+    NETFILTER_SAVED_SETTINGS = os.path.join(IgniteTest.TEMP_PATH_ROOT, \"discovery_test\", \"netfilter.bak\")\n+\n     @cluster(num_nodes=NUM_NODES)\n     @ignite_versions(str(DEV_BRANCH), str(LATEST_2_8))\n-    @matrix(kill_coordinator=[False, True],\n-            nodes_to_kill=[1, 2],\n+    @matrix(nodes_to_kill=[1, 2],\n             load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n-    def test_node_fail_tcp(self, ignite_version, kill_coordinator, nodes_to_kill, load_type):\n+    def test_nodes_fail_notseq_tcp(self, ignite_version, nodes_to_kill, load_type):\n         \"\"\"\n-        Test nodes failure scenario with TcpDiscoverySpi.\n-        :param load_type: How to load cluster during the test: 0 - no loading; 1 - do some loading; 2 - transactional.\n+        Test nodes failure scenario with TcpDiscoverySpi not allowing nodes to fail in a row.\n         \"\"\"\n-        test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), kill_coordinator=kill_coordinator,\n-                                          nodes_to_kill=nodes_to_kill, load_type=load_type, with_zk=False)\n+        test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=nodes_to_kill,\n+                                          load_type=load_type, sequential_failure=False)\n+\n+        return self._perform_node_fail_scenario(test_config)\n+\n+    @cluster(num_nodes=NUM_NODES)\n+    @ignite_versions(str(DEV_BRANCH), str(LATEST_2_8))\n+    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_2_nodes_fail_seq_tcp(self, ignite_version, load_type):\n+        \"\"\"\n+        Test 2 nodes sequential failure scenario with TcpDiscoverySpi.\n+        \"\"\"\n+        test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=2, load_type=load_type,\n+                                          sequential_failure=True)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     @cluster(num_nodes=NUM_NODES + 3)\n     @version_if(lambda version: version != V_2_8_0)  # ignite-zookeeper package is broken in 2.8.0\n     @ignite_versions(str(DEV_BRANCH), str(LATEST_2_8))\n-    @matrix(kill_coordinator=[False, True],\n-            nodes_to_kill=[1, 2],\n+    @matrix(nodes_to_kill=[1, 2],\n             load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n-    def test_node_fail_zk(self, ignite_version, kill_coordinator, nodes_to_kill, load_type):\n+    def test_nodes_fail_notseq_zk(self, ignite_version, nodes_to_kill, load_type):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091f1279e38aa08fa0dd667f32ffa94011d7a168"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b33ecfcc46ba2b2cba5beddd69bec7e97b69470", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/5b33ecfcc46ba2b2cba5beddd69bec7e97b69470", "committedDate": "2020-10-02T18:32:05Z", "message": "fixes after review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTMxNjEx", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-501531611", "createdAt": "2020-10-03T08:50:04Z", "commit": {"oid": "5b33ecfcc46ba2b2cba5beddd69bec7e97b69470"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwODo1MDowNFrOHcAdvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwODo1MDowNFrOHcAdvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyOTc4OA==", "bodyText": "This will not work, should be IgniteVersion(ignite_version) < V_2_8_0.", "url": "https://github.com/apache/ignite/pull/8211#discussion_r499129788", "createdAt": "2020-10-03T08:50:04Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/tests/pme_free_switch_test.py", "diffHunk": "@@ -81,7 +81,8 @@ def test(self, ignite_version):\n \n         ignites.stop_node(ignites.nodes[self.NUM_NODES - 1])\n \n-        long_tx_streamer.await_event(\"Node left topology\", 60, from_the_beginning=True)\n+        long_tx_streamer.await_event(\"Node left topology\", 120 if ignite_version < V_2_8_0 else 60,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b33ecfcc46ba2b2cba5beddd69bec7e97b69470"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09b1c25db729d077a63aac5ffba1a31f3ef5fd29", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/09b1c25db729d077a63aac5ffba1a31f3ef5fd29", "committedDate": "2020-10-03T08:55:10Z", "message": "version fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2ac83d1e3572aeea4aa76108c03351469161587", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/a2ac83d1e3572aeea4aa76108c03351469161587", "committedDate": "2020-10-03T12:48:55Z", "message": "better timeouts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNzkxMDgz", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-501791083", "createdAt": "2020-10-05T07:41:36Z", "commit": {"oid": "a2ac83d1e3572aeea4aa76108c03351469161587"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzo0MTozNlrOHcQ2Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzo0MTozNlrOHcQ2Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM5ODE1OQ==", "bodyText": "Python has tools to create temporary folders. You don't need this.", "url": "https://github.com/apache/ignite/pull/8211#discussion_r499398159", "createdAt": "2020-10-05T07:41:36Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/utils/ignite_test.py", "diffHunk": "@@ -26,9 +26,17 @@ class IgniteTest(Test):\n     \"\"\"\n     Basic ignite test.\n     \"\"\"\n+    TEMP_PATH_ROOT = \"/mnt/ducktests\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2ac83d1e3572aeea4aa76108c03351469161587"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxODExNzk0", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-501811794", "createdAt": "2020-10-05T08:07:56Z", "commit": {"oid": "a2ac83d1e3572aeea4aa76108c03351469161587"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODowNzo1NlrOHcR31A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODowNzo1NlrOHcR31A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQxNDk5Ng==", "bodyText": "This will not work in parallel execution (class variable), use tempfile module and instance variable", "url": "https://github.com/apache/ignite/pull/8211#discussion_r499414996", "createdAt": "2020-10-05T08:07:56Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -71,40 +72,65 @@ class DiscoveryTest(IgniteTest):\n     \"\"\"\n     NUM_NODES = 7\n \n-    FAILURE_DETECTION_TIMEOUT = 2000\n+    FAILURE_DETECTION_TIMEOUT_TCP = 1000\n+\n+    FAILURE_DETECTION_TIMEOUT_ZK = 3000\n \n     DATA_AMOUNT = 5_000_000\n \n     WARMUP_DATA_AMOUNT = 10_000\n \n+    NETFILTER_SAVED_SETTINGS = os.path.join(IgniteTest.TEMP_PATH_ROOT, \"discovery_test\", \"netfilter.bak\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2ac83d1e3572aeea4aa76108c03351469161587"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "488dc3def1b0b210bab7f759f3a13ab322fbe600", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/488dc3def1b0b210bab7f759f3a13ab322fbe600", "committedDate": "2020-10-05T10:21:38Z", "message": "better netfilter stroing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTUzNTEy", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-501953512", "createdAt": "2020-10-05T11:17:48Z", "commit": {"oid": "488dc3def1b0b210bab7f759f3a13ab322fbe600"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToxNzo0OFrOHcYdwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToxNzo0OFrOHcYdwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyMzAxMA==", "bodyText": "This will not work -- you created directory", "url": "https://github.com/apache/ignite/pull/8211#discussion_r499523010", "createdAt": "2020-10-05T11:17:48Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +177,136 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))\n+\n+        data = self._simulate_nodes_failure(servers, node_fail_task(ignite_config, test_config), failed_nodes,\n+                                            survived_node)\n \n         data['Ignite cluster start time (s)'] = start_servers_sec\n \n         return data\n \n+    def _simulate_nodes_failure(self, servers, kill_node_task, failed_nodes, survived_node):\n+        \"\"\"\n+        Perform node failure scenario\n+        \"\"\"\n+        ids_to_wait = [node_id(n) for n in failed_nodes]\n+\n+        _, first_terminated = servers.exec_on_nodes_async(failed_nodes, kill_node_task)\n+\n+        for node in failed_nodes:\n+            self.logger.debug(\n+                \"Netfilter activated on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+        # Keeps dates of logged node failures.\n+        logged_timestamps = []\n+        data = {}\n+\n+        for failed_id in ids_to_wait:\n+            servers.await_event_on_node(failed_pattern(failed_id), survived_node, 15, from_the_beginning=True,\n+                                        backoff_sec=0.3)\n+\n+            _, stdout, _ = survived_node.account.ssh_client.exec_command(\n+                \"grep '%s' %s\" % (failed_pattern(failed_id), IgniteAwareService.STDOUT_STDERR_CAPTURE))\n+\n+            logged_timestamps.append(\n+                datetime.strptime(re.match(\"^\\\\[[^\\\\[]+\\\\]\", stdout.read().decode(\"utf-8\")).group(),\n+                                  \"[%Y-%m-%d %H:%M:%S,%f]\"))\n+\n+        self._check_results(failed_nodes, survived_node)\n+\n+        logged_timestamps.sort(reverse=True)\n+\n+        first_kill_time = epoch_mills(first_terminated)\n+        detection_delay = epoch_mills(logged_timestamps[0]) - first_kill_time\n+\n+        data['Detection of node(s) failure (ms)'] = detection_delay\n+        data['All detection delays (ms):'] = str([epoch_mills(ts) - first_kill_time for ts in logged_timestamps])\n+        data['Nodes failed'] = len(failed_nodes)\n+\n+        return data\n+\n+    def _check_results(self, failed_nodes, survived_node):\n+        \"\"\"Ensures test finishes correctly.\"\"\"\n+        cmd = \"grep '%s' %s | wc -l\" % (failed_pattern(), IgniteAwareService.STDOUT_STDERR_CAPTURE)\n+\n+        failed_cnt = int(str(survived_node.account.ssh_client.exec_command(cmd)[1].read(), sys.getdefaultencoding()))\n+\n+        if failed_cnt != len(failed_nodes):\n+            failed = str(survived_node.account.ssh_client.exec_command(\n+                \"grep '%s' %s\" % (failed_pattern(), IgniteAwareService.STDOUT_STDERR_CAPTURE))[1].read(),\n+                         sys.getdefaultencoding())\n+\n+            self.logger.warn(\"Node '%s' (%s) has detected the following failures:%s%s\" % (\n+                survived_node.name, node_id(survived_node), os.linesep, failed))\n+\n+            raise AssertionError(\n+                \"Wrong number of failed nodes: %d. Expected: %d. Check the logs.\" % (failed_cnt, len(failed_nodes)))\n+\n+        for service in [srv for srv in self.test_context.services if isinstance(srv, IgniteAwareService)]:\n+            for node in [srv_node for srv_node in service.nodes if srv_node not in failed_nodes]:\n+                cmd = \"grep -i '%s' %s | wc -l\" % (\"local no1de segmented\", IgniteAwareService.STDOUT_STDERR_CAPTURE)\n+\n+                failed = str(node.account.ssh_client.exec_command(cmd)[1].read(), sys.getdefaultencoding())\n+\n+                if int(failed) > 0:\n+                    raise AssertionError(\n+                        \"Wrong node failed (segmented) on '%s'. Check the logs.\" % node.name)\n+\n+    def setup(self):\n+        super().setup()\n+\n+        self.netfilter_saved_settings = tempfile.mkdtemp()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "488dc3def1b0b210bab7f759f3a13ab322fbe600"}, "originalPosition": 235}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f727e8022b1c2004b87de4d25dc9e2e3ea532f92", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/f727e8022b1c2004b87de4d25dc9e2e3ea532f92", "committedDate": "2020-10-05T11:27:42Z", "message": "mktempfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa9b1c07770935ed85ef030a1de5c4cdd2bd2e17", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/fa9b1c07770935ed85ef030a1de5c4cdd2bd2e17", "committedDate": "2020-10-05T11:36:09Z", "message": "Revert \"mktempfix\"\n\nThis reverts commit f727e802"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a0fbf102fdf3d319793fb6d2a7a8823d8ec4759", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/5a0fbf102fdf3d319793fb6d2a7a8823d8ec4759", "committedDate": "2020-10-05T12:36:35Z", "message": "fix store path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6f0228e6dbfd33f655bf8bf608e675152d58fee", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/b6f0228e6dbfd33f655bf8bf608e675152d58fee", "committedDate": "2020-10-05T13:31:30Z", "message": "Revert \"better netfilter stroing\"\n\nThis reverts commit 488dc3de"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ed67a57f41b2c8752044285debce5d6f4265556", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/2ed67a57f41b2c8752044285debce5d6f4265556", "committedDate": "2020-10-05T14:53:46Z", "message": "class var to inst fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMTUyMjA2", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-502152206", "createdAt": "2020-10-05T15:05:56Z", "commit": {"oid": "2ed67a57f41b2c8752044285debce5d6f4265556"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTowNTo1NlrOHchX6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTowNTo1NlrOHchX6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY2ODk2OQ==", "bodyText": "It seems, that FAILURE_DETECTION_TIMEOUT_TCP not used", "url": "https://github.com/apache/ignite/pull/8211#discussion_r499668969", "createdAt": "2020-10-05T15:05:56Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -71,40 +72,68 @@ class DiscoveryTest(IgniteTest):\n     \"\"\"\n     NUM_NODES = 7\n \n-    FAILURE_DETECTION_TIMEOUT = 2000\n+    FAILURE_DETECTION_TIMEOUT_TCP = 1000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ed67a57f41b2c8752044285debce5d6f4265556"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dbf1eac628fef591770cf4594fc1d0a45ed936c", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/1dbf1eac628fef591770cf4594fc1d0a45ed936c", "committedDate": "2020-10-05T15:11:08Z", "message": "fix of FAILURE_DETECTION_TIMEOUT_TCP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/42bcdb32b471ba21a5e5d1034192b8c148270e54", "committedDate": "2020-10-13T20:02:11Z", "message": "Merge branch 'ignite-ducktape' into ducktests-iptables\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/tests/pme_free_switch_test.py"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMzI1OTg4", "url": "https://github.com/apache/ignite/pull/8211#pullrequestreview-510325988", "createdAt": "2020-10-16T09:58:17Z", "commit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwOTo1ODoxOFrOHiyp5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzowNDozMVrOHi7qUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0MzU1Nw==", "bodyText": "any reason to not to encapsulate node_fail_task (to call it outside the method) when we have only one usage of _simulate_nodes_failure?", "url": "https://github.com/apache/ignite/pull/8211#discussion_r506243557", "createdAt": "2020-10-16T09:58:18Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +179,134 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))\n+\n+        data = self._simulate_nodes_failure(servers, node_fail_task(ignite_config, test_config), failed_nodes,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0ODQ4Nw==", "bodyText": "why not inlined to node_fail_task?", "url": "https://github.com/apache/ignite/pull/8211#discussion_r506248487", "createdAt": "2020-10-16T10:02:29Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +179,134 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))\n+\n+        data = self._simulate_nodes_failure(servers, node_fail_task(ignite_config, test_config), failed_nodes,\n+                                            survived_node)\n \n         data['Ignite cluster start time (s)'] = start_servers_sec\n \n         return data\n \n+    def _simulate_nodes_failure(self, servers, kill_node_task, failed_nodes, survived_node):\n+        \"\"\"\n+        Perform node failure scenario\n+        \"\"\"\n+        ids_to_wait = [node_id(n) for n in failed_nodes]\n+\n+        _, first_terminated = servers.exec_on_nodes_async(failed_nodes, kill_node_task)\n+\n+        for node in failed_nodes:\n+            self.logger.debug(\n+                \"Netfilter activated on '%s': %s\" % (node.name, dump_netfilter_settings(node)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI2MTI0MQ==", "bodyText": "should we check all alive nodes for detection duration?", "url": "https://github.com/apache/ignite/pull/8211#discussion_r506261241", "createdAt": "2020-10-16T10:19:44Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +179,134 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))\n+\n+        data = self._simulate_nodes_failure(servers, node_fail_task(ignite_config, test_config), failed_nodes,\n+                                            survived_node)\n \n         data['Ignite cluster start time (s)'] = start_servers_sec\n \n         return data\n \n+    def _simulate_nodes_failure(self, servers, kill_node_task, failed_nodes, survived_node):\n+        \"\"\"\n+        Perform node failure scenario\n+        \"\"\"\n+        ids_to_wait = [node_id(n) for n in failed_nodes]\n+\n+        _, first_terminated = servers.exec_on_nodes_async(failed_nodes, kill_node_task)\n+\n+        for node in failed_nodes:\n+            self.logger.debug(\n+                \"Netfilter activated on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+        # Keeps dates of logged node failures.\n+        logged_timestamps = []\n+        data = {}\n+\n+        for failed_id in ids_to_wait:\n+            servers.await_event_on_node(failed_pattern(failed_id), survived_node, 15, from_the_beginning=True,\n+                                        backoff_sec=0.3)\n+\n+            _, stdout, _ = survived_node.account.ssh_client.exec_command(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI2NzAzNw==", "bodyText": "self.NUM_NODES - 1 (6 nodes) seems to be too small cluster", "url": "https://github.com/apache/ignite/pull/8211#discussion_r506267037", "createdAt": "2020-10-16T10:26:20Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -131,14 +161,14 @@ def _perform_node_fail_scenario(self, test_config):\n \n         servers, start_servers_sec = start_servers(self.test_context, self.NUM_NODES - 1, ignite_config, modules)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI2ODE2NA==", "bodyText": "why not a part of _simulate_nodes_failure or node_fail_task?", "url": "https://github.com/apache/ignite/pull/8211#discussion_r506268164", "createdAt": "2020-10-16T10:27:28Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +179,134 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI2OTEwNw==", "bodyText": "should be close to start_servers_sec set?", "url": "https://github.com/apache/ignite/pull/8211#discussion_r506269107", "createdAt": "2020-10-16T10:28:34Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +179,134 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))\n+\n+        data = self._simulate_nodes_failure(servers, node_fail_task(ignite_config, test_config), failed_nodes,\n+                                            survived_node)\n \n         data['Ignite cluster start time (s)'] = start_servers_sec", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI3NTgzMw==", "bodyText": "should this be an IgniteApplication feature?", "url": "https://github.com/apache/ignite/pull/8211#discussion_r506275833", "createdAt": "2020-10-16T10:36:23Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +179,134 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))\n+\n+        data = self._simulate_nodes_failure(servers, node_fail_task(ignite_config, test_config), failed_nodes,\n+                                            survived_node)\n \n         data['Ignite cluster start time (s)'] = start_servers_sec\n \n         return data\n \n+    def _simulate_nodes_failure(self, servers, kill_node_task, failed_nodes, survived_node):\n+        \"\"\"\n+        Perform node failure scenario\n+        \"\"\"\n+        ids_to_wait = [node_id(n) for n in failed_nodes]\n+\n+        _, first_terminated = servers.exec_on_nodes_async(failed_nodes, kill_node_task)\n+\n+        for node in failed_nodes:\n+            self.logger.debug(\n+                \"Netfilter activated on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+        # Keeps dates of logged node failures.\n+        logged_timestamps = []\n+        data = {}\n+\n+        for failed_id in ids_to_wait:\n+            servers.await_event_on_node(failed_pattern(failed_id), survived_node, 15, from_the_beginning=True,\n+                                        backoff_sec=0.3)\n+\n+            _, stdout, _ = survived_node.account.ssh_client.exec_command(\n+                \"grep '%s' %s\" % (failed_pattern(failed_id), IgniteAwareService.STDOUT_STDERR_CAPTURE))\n+\n+            logged_timestamps.append(\n+                datetime.strptime(re.match(\"^\\\\[[^\\\\[]+\\\\]\", stdout.read().decode(\"utf-8\")).group(),\n+                                  \"[%Y-%m-%d %H:%M:%S,%f]\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54"}, "originalPosition": 192}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI4NDE2OQ==", "bodyText": "lets split to failed amount check and ?segmentation? check", "url": "https://github.com/apache/ignite/pull/8211#discussion_r506284169", "createdAt": "2020-10-16T10:46:59Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +179,134 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))\n+\n+        data = self._simulate_nodes_failure(servers, node_fail_task(ignite_config, test_config), failed_nodes,\n+                                            survived_node)\n \n         data['Ignite cluster start time (s)'] = start_servers_sec\n \n         return data\n \n+    def _simulate_nodes_failure(self, servers, kill_node_task, failed_nodes, survived_node):\n+        \"\"\"\n+        Perform node failure scenario\n+        \"\"\"\n+        ids_to_wait = [node_id(n) for n in failed_nodes]\n+\n+        _, first_terminated = servers.exec_on_nodes_async(failed_nodes, kill_node_task)\n+\n+        for node in failed_nodes:\n+            self.logger.debug(\n+                \"Netfilter activated on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+        # Keeps dates of logged node failures.\n+        logged_timestamps = []\n+        data = {}\n+\n+        for failed_id in ids_to_wait:\n+            servers.await_event_on_node(failed_pattern(failed_id), survived_node, 15, from_the_beginning=True,\n+                                        backoff_sec=0.3)\n+\n+            _, stdout, _ = survived_node.account.ssh_client.exec_command(\n+                \"grep '%s' %s\" % (failed_pattern(failed_id), IgniteAwareService.STDOUT_STDERR_CAPTURE))\n+\n+            logged_timestamps.append(\n+                datetime.strptime(re.match(\"^\\\\[[^\\\\[]+\\\\]\", stdout.read().decode(\"utf-8\")).group(),\n+                                  \"[%Y-%m-%d %H:%M:%S,%f]\"))\n+\n+        self._check_results(failed_nodes, survived_node)\n+\n+        logged_timestamps.sort(reverse=True)\n+\n+        first_kill_time = epoch_mills(first_terminated)\n+        detection_delay = epoch_mills(logged_timestamps[0]) - first_kill_time\n+\n+        data['Detection of node(s) failure (ms)'] = detection_delay\n+        data['All detection delays (ms):'] = str([epoch_mills(ts) - first_kill_time for ts in logged_timestamps])\n+        data['Nodes failed'] = len(failed_nodes)\n+\n+        return data\n+\n+    def _check_results(self, failed_nodes, survived_node):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54"}, "originalPosition": 207}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM5MTEyMw==", "bodyText": "should this be at some test_superclass?", "url": "https://github.com/apache/ignite/pull/8211#discussion_r506391123", "createdAt": "2020-10-16T13:04:31Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -149,18 +179,134 @@ def _perform_node_fail_scenario(self, test_config):\n \n             start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n \n-        data = simulate_nodes_failure(servers, failed_nodes, survived_node)\n+        for node in failed_nodes:\n+            self.logger.info(\n+                \"Simulating failure of node '%s' (order %d) on '%s'\" % (node_id(node), order(node), node.name))\n+\n+        data = self._simulate_nodes_failure(servers, node_fail_task(ignite_config, test_config), failed_nodes,\n+                                            survived_node)\n \n         data['Ignite cluster start time (s)'] = start_servers_sec\n \n         return data\n \n+    def _simulate_nodes_failure(self, servers, kill_node_task, failed_nodes, survived_node):\n+        \"\"\"\n+        Perform node failure scenario\n+        \"\"\"\n+        ids_to_wait = [node_id(n) for n in failed_nodes]\n+\n+        _, first_terminated = servers.exec_on_nodes_async(failed_nodes, kill_node_task)\n+\n+        for node in failed_nodes:\n+            self.logger.debug(\n+                \"Netfilter activated on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+        # Keeps dates of logged node failures.\n+        logged_timestamps = []\n+        data = {}\n+\n+        for failed_id in ids_to_wait:\n+            servers.await_event_on_node(failed_pattern(failed_id), survived_node, 15, from_the_beginning=True,\n+                                        backoff_sec=0.3)\n+\n+            _, stdout, _ = survived_node.account.ssh_client.exec_command(\n+                \"grep '%s' %s\" % (failed_pattern(failed_id), IgniteAwareService.STDOUT_STDERR_CAPTURE))\n+\n+            logged_timestamps.append(\n+                datetime.strptime(re.match(\"^\\\\[[^\\\\[]+\\\\]\", stdout.read().decode(\"utf-8\")).group(),\n+                                  \"[%Y-%m-%d %H:%M:%S,%f]\"))\n+\n+        self._check_results(failed_nodes, survived_node)\n+\n+        logged_timestamps.sort(reverse=True)\n+\n+        first_kill_time = epoch_mills(first_terminated)\n+        detection_delay = epoch_mills(logged_timestamps[0]) - first_kill_time\n+\n+        data['Detection of node(s) failure (ms)'] = detection_delay\n+        data['All detection delays (ms):'] = str([epoch_mills(ts) - first_kill_time for ts in logged_timestamps])\n+        data['Nodes failed'] = len(failed_nodes)\n+\n+        return data\n+\n+    def _check_results(self, failed_nodes, survived_node):\n+        \"\"\"Ensures test finishes correctly.\"\"\"\n+        cmd = \"grep '%s' %s | wc -l\" % (failed_pattern(), IgniteAwareService.STDOUT_STDERR_CAPTURE)\n+\n+        failed_cnt = int(str(survived_node.account.ssh_client.exec_command(cmd)[1].read(), sys.getdefaultencoding()))\n+\n+        if failed_cnt != len(failed_nodes):\n+            failed = str(survived_node.account.ssh_client.exec_command(\n+                \"grep '%s' %s\" % (failed_pattern(), IgniteAwareService.STDOUT_STDERR_CAPTURE))[1].read(),\n+                         sys.getdefaultencoding())\n+\n+            self.logger.warn(\"Node '%s' (%s) has detected the following failures:%s%s\" % (\n+                survived_node.name, node_id(survived_node), os.linesep, failed))\n+\n+            raise AssertionError(\n+                \"Wrong number of failed nodes: %d. Expected: %d. Check the logs.\" % (failed_cnt, len(failed_nodes)))\n+\n+        for service in [srv for srv in self.test_context.services if isinstance(srv, IgniteAwareService)]:\n+            for node in [srv_node for srv_node in service.nodes if srv_node not in failed_nodes]:\n+                cmd = \"grep -i '%s' %s | wc -l\" % (\"local no1de segmented\", IgniteAwareService.STDOUT_STDERR_CAPTURE)\n+\n+                failed = str(node.account.ssh_client.exec_command(cmd)[1].read(), sys.getdefaultencoding())\n+\n+                if int(failed) > 0:\n+                    raise AssertionError(\n+                        \"Wrong node failed (segmented) on '%s'. Check the logs.\" % node.name)\n+\n+    def setup(self):\n+        super().setup()\n+\n+        self.netfilter_store_path = os.path.join(self.tmp_path_root, \"iptables.bak\")\n+\n+        # Store current network filter settings.\n+        for node in self.test_context.cluster.nodes:\n+            cmd = \"sudo iptables-save | tee \" + self.netfilter_store_path\n+\n+            exec_error = str(node.account.ssh_client.exec_command(cmd)[2].read(), sys.getdefaultencoding())\n+\n+            if \"Warning: iptables-legacy tables present\" in exec_error:\n+                cmd = \"sudo iptables-legacy-save | tee \" + self.netfilter_store_path\n+\n+                exec_error = str(node.account.ssh_client.exec_command(cmd)[2].read(), sys.getdefaultencoding())\n+\n+            assert len(exec_error) == 0, \"Failed to store iptables rules on '%s': %s\" % (node.name, exec_error)\n+\n+            self.logger.debug(\"Netfilter before launch on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+    def teardown(self):\n+        # Restore previous network filter settings.\n+        cmd = \"sudo iptables-restore < \" + self.netfilter_store_path\n+\n+        errors = []\n+\n+        for node in self.test_context.cluster.nodes:\n+            exec_error = str(node.account.ssh_client.exec_command(cmd)[2].read(), sys.getdefaultencoding())\n+\n+            if len(exec_error) > 0:\n+                errors.append(\"Failed to restore iptables rules on '%s': %s\" % (node.name, exec_error))\n+            else:\n+                self.logger.debug(\"Netfilter after launch on '%s': %s\" % (node.name, dump_netfilter_settings(node)))\n+\n+        if len(errors) > 0:\n+            self.logger.error(\"Failed restoring actions:\" + os.linesep + os.linesep.join(errors))\n+\n+            raise RuntimeError(\"Unable to restore node states. See the log above.\")\n+\n+        super().teardown()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bcdb32b471ba21a5e5d1034192b8c148270e54"}, "originalPosition": 273}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3141, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}