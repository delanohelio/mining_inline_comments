{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1Mjk0NjA3", "number": 7787, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjowMjoyNlrOD9dXjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjoxNDo1NlrOD9drIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzcwODk0OnYy", "diffSide": "RIGHT", "path": "modules/core/src/test/java/org/apache/ignite/util/GridCommandHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjowMjoyNlrOGW90Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjowMjoyNlrOGW90Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczNDYxNA==", "bodyText": "Let's check that a snapshot was created with provided name.", "url": "https://github.com/apache/ignite/pull/7787#discussion_r426734614", "createdAt": "2020-05-18T16:02:26Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/test/java/org/apache/ignite/util/GridCommandHandlerTest.java", "diffHunk": "@@ -2089,4 +2089,28 @@ public void testMasterKeyChangeOnInactiveCluster() throws Exception {\n \n         assertContains(log, testOut.toString(), \"Master key change was rejected. The cluster is inactive.\");\n     }\n+\n+    /** @throws Exception If failed. */\n+    @Test\n+    public void testClusterSnapshotCreate() throws Exception {\n+        Ignite ignite = startGrids(2);\n+        ignite.cluster().state(ACTIVE);\n+\n+        createCacheAndPreload(ignite, 10);\n+\n+        CommandHandler h = new CommandHandler();\n+\n+        assertEquals(EXIT_CODE_OK, execute(h, \"--snapshot\", \"create\", \"snapshot_02052020\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d192284441843893206b9f9e3731c9dc95089830"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzc1OTA2OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/snapshot/VisorSnapshotCreateTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjoxNDo1NlrOGW-T0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjoxNDo1NlrOGW-T0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0MjczOA==", "bodyText": "I suggest that success command execution prints an informative message. For example, the snapshot was(will be) created. And how to monitor the status.", "url": "https://github.com/apache/ignite/pull/7787#discussion_r426742738", "createdAt": "2020-05-18T16:14:56Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/snapshot/VisorSnapshotCreateTask.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.snapshot;\n+\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.IgniteSnapshot;\n+import org.apache.ignite.internal.commandline.snapshot.SnapshotCommand;\n+import org.apache.ignite.internal.processors.cache.persistence.snapshot.SnapshotMXBeanImpl;\n+import org.apache.ignite.internal.processors.task.GridInternal;\n+import org.apache.ignite.internal.visor.VisorJob;\n+import org.apache.ignite.internal.visor.VisorOneNodeTask;\n+\n+/**\n+ * @see SnapshotCommand\n+ * @see IgniteSnapshot#createSnapshot(String)\n+ */\n+@GridInternal\n+public class VisorSnapshotCreateTask extends VisorOneNodeTask<String, Void> {\n+    /** Serial version uid. */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** {@inheritDoc} */\n+    @Override protected VisorJob<String, Void> job(String arg) {\n+        return new VisorSnapshotCreateJob(arg, debug);\n+    }\n+\n+    /** */\n+    private static class VisorSnapshotCreateJob extends VisorJob<String, Void> {\n+        /** Serial version uid. */\n+        private static final long serialVersionUID = 0L;\n+\n+        /**\n+         * @param name Snapshot name.\n+         * @param debug Flag indicating whether debug information should be printed into node log.\n+         */\n+        protected VisorSnapshotCreateJob(String name, boolean debug) {\n+            super(name, debug);\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Override protected Void run(String name) throws IgniteException {\n+            new SnapshotMXBeanImpl(ignite.context()).createSnapshot(name);\n+\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d192284441843893206b9f9e3731c9dc95089830"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2491, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}