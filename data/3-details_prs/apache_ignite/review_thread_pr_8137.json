{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1OTExNTAz", "number": 8137, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODo1NjowMVrOEXHkrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODo1NjowMVrOEXHkrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjc2NzgwOnYy", "diffSide": "RIGHT", "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODo1NjowMVrOG-uq5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMTo0NDozOFrOG-0FlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQyOTU0MA==", "bodyText": "match variable redefinition makes code unreadable for me.", "url": "https://github.com/apache/ignite/pull/8137#discussion_r468429540", "createdAt": "2020-08-11T08:56:01Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -105,18 +105,22 @@ def deactivate(self):\n \n     @staticmethod\n     def __parse_cluster_state(output):\n-        state_pattern = re.compile(\"Cluster state: ([^\\\\s]+)\")\n-        topology_pattern = re.compile(\"Current topology version: (\\\\d+)\")\n-        baseline_pattern = re.compile(\"Consistent(Id|ID)=([^\\\\s]+),\\\\sS(tate|TATE)=([^\\\\s]+),?(\\\\sOrder=(\\\\d+))?\")\n+        state_pattern = re.compile(\"Cluster state: (?P<cluster_state>[^\\\\s]+)\")\n+        topology_pattern = re.compile(\"Current topology version: (?P<topology_version>\\\\d+)\")\n+        baseline_pattern = re.compile(\"Consistent(Id|ID)=(?P<consistent_id>[^\\\\s]+),\\\\sS(tate|TATE)=(?P<state>[^\\\\s]+),\"\n+                                      \"?(\\\\sOrder=(?P<order>\\\\d+))?\")\n \n         match = state_pattern.search(output)\n-        state = match.group(1) if match else None\n+        state = match.group(\"cluster_state\") if match else None\n \n         match = topology_pattern.search(output)\n-        topology = int(match.group(1)) if match else None\n+        topology = int(match.group(\"topology_version\")) if match else None\n \n-        baseline = [BaselineNode(consistent_id=m[1], state=m[3], order=int(m[5]) if m[5] else None)\n-                    for m in baseline_pattern.findall(output)]\n+        baseline = []\n+        for match in baseline_pattern.finditer(output):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0146cf7c0da9f22a2cdc0cb708acaa7f69dc53e1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1MDI5NA==", "bodyText": "There are several matches above. This is the same type Match, so what's the problem.", "url": "https://github.com/apache/ignite/pull/8137#discussion_r468450294", "createdAt": "2020-08-11T09:31:42Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -105,18 +105,22 @@ def deactivate(self):\n \n     @staticmethod\n     def __parse_cluster_state(output):\n-        state_pattern = re.compile(\"Cluster state: ([^\\\\s]+)\")\n-        topology_pattern = re.compile(\"Current topology version: (\\\\d+)\")\n-        baseline_pattern = re.compile(\"Consistent(Id|ID)=([^\\\\s]+),\\\\sS(tate|TATE)=([^\\\\s]+),?(\\\\sOrder=(\\\\d+))?\")\n+        state_pattern = re.compile(\"Cluster state: (?P<cluster_state>[^\\\\s]+)\")\n+        topology_pattern = re.compile(\"Current topology version: (?P<topology_version>\\\\d+)\")\n+        baseline_pattern = re.compile(\"Consistent(Id|ID)=(?P<consistent_id>[^\\\\s]+),\\\\sS(tate|TATE)=(?P<state>[^\\\\s]+),\"\n+                                      \"?(\\\\sOrder=(?P<order>\\\\d+))?\")\n \n         match = state_pattern.search(output)\n-        state = match.group(1) if match else None\n+        state = match.group(\"cluster_state\") if match else None\n \n         match = topology_pattern.search(output)\n-        topology = int(match.group(1)) if match else None\n+        topology = int(match.group(\"topology_version\")) if match else None\n \n-        baseline = [BaselineNode(consistent_id=m[1], state=m[3], order=int(m[5]) if m[5] else None)\n-                    for m in baseline_pattern.findall(output)]\n+        baseline = []\n+        for match in baseline_pattern.finditer(output):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQyOTU0MA=="}, "originalCommit": {"oid": "0146cf7c0da9f22a2cdc0cb708acaa7f69dc53e1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ2MjIzOA==", "bodyText": "you changing the type and content.\nbrief reading may (will) confuse the reader.", "url": "https://github.com/apache/ignite/pull/8137#discussion_r468462238", "createdAt": "2020-08-11T09:52:32Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -105,18 +105,22 @@ def deactivate(self):\n \n     @staticmethod\n     def __parse_cluster_state(output):\n-        state_pattern = re.compile(\"Cluster state: ([^\\\\s]+)\")\n-        topology_pattern = re.compile(\"Current topology version: (\\\\d+)\")\n-        baseline_pattern = re.compile(\"Consistent(Id|ID)=([^\\\\s]+),\\\\sS(tate|TATE)=([^\\\\s]+),?(\\\\sOrder=(\\\\d+))?\")\n+        state_pattern = re.compile(\"Cluster state: (?P<cluster_state>[^\\\\s]+)\")\n+        topology_pattern = re.compile(\"Current topology version: (?P<topology_version>\\\\d+)\")\n+        baseline_pattern = re.compile(\"Consistent(Id|ID)=(?P<consistent_id>[^\\\\s]+),\\\\sS(tate|TATE)=(?P<state>[^\\\\s]+),\"\n+                                      \"?(\\\\sOrder=(?P<order>\\\\d+))?\")\n \n         match = state_pattern.search(output)\n-        state = match.group(1) if match else None\n+        state = match.group(\"cluster_state\") if match else None\n \n         match = topology_pattern.search(output)\n-        topology = int(match.group(1)) if match else None\n+        topology = int(match.group(\"topology_version\")) if match else None\n \n-        baseline = [BaselineNode(consistent_id=m[1], state=m[3], order=int(m[5]) if m[5] else None)\n-                    for m in baseline_pattern.findall(output)]\n+        baseline = []\n+        for match in baseline_pattern.finditer(output):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQyOTU0MA=="}, "originalCommit": {"oid": "0146cf7c0da9f22a2cdc0cb708acaa7f69dc53e1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ3NjMzMQ==", "bodyText": "No, you are not right. Type is the same (see docs to finditer, it returns iterator of Match object)", "url": "https://github.com/apache/ignite/pull/8137#discussion_r468476331", "createdAt": "2020-08-11T10:19:39Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -105,18 +105,22 @@ def deactivate(self):\n \n     @staticmethod\n     def __parse_cluster_state(output):\n-        state_pattern = re.compile(\"Cluster state: ([^\\\\s]+)\")\n-        topology_pattern = re.compile(\"Current topology version: (\\\\d+)\")\n-        baseline_pattern = re.compile(\"Consistent(Id|ID)=([^\\\\s]+),\\\\sS(tate|TATE)=([^\\\\s]+),?(\\\\sOrder=(\\\\d+))?\")\n+        state_pattern = re.compile(\"Cluster state: (?P<cluster_state>[^\\\\s]+)\")\n+        topology_pattern = re.compile(\"Current topology version: (?P<topology_version>\\\\d+)\")\n+        baseline_pattern = re.compile(\"Consistent(Id|ID)=(?P<consistent_id>[^\\\\s]+),\\\\sS(tate|TATE)=(?P<state>[^\\\\s]+),\"\n+                                      \"?(\\\\sOrder=(?P<order>\\\\d+))?\")\n \n         match = state_pattern.search(output)\n-        state = match.group(1) if match else None\n+        state = match.group(\"cluster_state\") if match else None\n \n         match = topology_pattern.search(output)\n-        topology = int(match.group(1)) if match else None\n+        topology = int(match.group(\"topology_version\")) if match else None\n \n-        baseline = [BaselineNode(consistent_id=m[1], state=m[3], order=int(m[5]) if m[5] else None)\n-                    for m in baseline_pattern.findall(output)]\n+        baseline = []\n+        for match in baseline_pattern.finditer(output):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQyOTU0MA=="}, "originalCommit": {"oid": "0146cf7c0da9f22a2cdc0cb708acaa7f69dc53e1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ3OTU4Ng==", "bodyText": "variables should be immutable.\nyou already have a 'match' variable, what's the reason to reassign it with other value?\nwhy not use a new name?", "url": "https://github.com/apache/ignite/pull/8137#discussion_r468479586", "createdAt": "2020-08-11T10:25:40Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -105,18 +105,22 @@ def deactivate(self):\n \n     @staticmethod\n     def __parse_cluster_state(output):\n-        state_pattern = re.compile(\"Cluster state: ([^\\\\s]+)\")\n-        topology_pattern = re.compile(\"Current topology version: (\\\\d+)\")\n-        baseline_pattern = re.compile(\"Consistent(Id|ID)=([^\\\\s]+),\\\\sS(tate|TATE)=([^\\\\s]+),?(\\\\sOrder=(\\\\d+))?\")\n+        state_pattern = re.compile(\"Cluster state: (?P<cluster_state>[^\\\\s]+)\")\n+        topology_pattern = re.compile(\"Current topology version: (?P<topology_version>\\\\d+)\")\n+        baseline_pattern = re.compile(\"Consistent(Id|ID)=(?P<consistent_id>[^\\\\s]+),\\\\sS(tate|TATE)=(?P<state>[^\\\\s]+),\"\n+                                      \"?(\\\\sOrder=(?P<order>\\\\d+))?\")\n \n         match = state_pattern.search(output)\n-        state = match.group(1) if match else None\n+        state = match.group(\"cluster_state\") if match else None\n \n         match = topology_pattern.search(output)\n-        topology = int(match.group(1)) if match else None\n+        topology = int(match.group(\"topology_version\")) if match else None\n \n-        baseline = [BaselineNode(consistent_id=m[1], state=m[3], order=int(m[5]) if m[5] else None)\n-                    for m in baseline_pattern.findall(output)]\n+        baseline = []\n+        for match in baseline_pattern.finditer(output):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQyOTU0MA=="}, "originalCommit": {"oid": "0146cf7c0da9f22a2cdc0cb708acaa7f69dc53e1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ4NTg0NA==", "bodyText": "LOLWUT? Reference should be immutable? Are we using Haskell or Scala?\nAs for me, your proposition sounds like let's create mess with dozens variables, that do the same and have similar semantic.\nI disagree, so I'd better close my PR, I'm tired of this.", "url": "https://github.com/apache/ignite/pull/8137#discussion_r468485844", "createdAt": "2020-08-11T10:37:56Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -105,18 +105,22 @@ def deactivate(self):\n \n     @staticmethod\n     def __parse_cluster_state(output):\n-        state_pattern = re.compile(\"Cluster state: ([^\\\\s]+)\")\n-        topology_pattern = re.compile(\"Current topology version: (\\\\d+)\")\n-        baseline_pattern = re.compile(\"Consistent(Id|ID)=([^\\\\s]+),\\\\sS(tate|TATE)=([^\\\\s]+),?(\\\\sOrder=(\\\\d+))?\")\n+        state_pattern = re.compile(\"Cluster state: (?P<cluster_state>[^\\\\s]+)\")\n+        topology_pattern = re.compile(\"Current topology version: (?P<topology_version>\\\\d+)\")\n+        baseline_pattern = re.compile(\"Consistent(Id|ID)=(?P<consistent_id>[^\\\\s]+),\\\\sS(tate|TATE)=(?P<state>[^\\\\s]+),\"\n+                                      \"?(\\\\sOrder=(?P<order>\\\\d+))?\")\n \n         match = state_pattern.search(output)\n-        state = match.group(1) if match else None\n+        state = match.group(\"cluster_state\") if match else None\n \n         match = topology_pattern.search(output)\n-        topology = int(match.group(1)) if match else None\n+        topology = int(match.group(\"topology_version\")) if match else None\n \n-        baseline = [BaselineNode(consistent_id=m[1], state=m[3], order=int(m[5]) if m[5] else None)\n-                    for m in baseline_pattern.findall(output)]\n+        baseline = []\n+        for match in baseline_pattern.finditer(output):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQyOTU0MA=="}, "originalCommit": {"oid": "0146cf7c0da9f22a2cdc0cb708acaa7f69dc53e1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxODI5Mg==", "bodyText": "No chances %)", "url": "https://github.com/apache/ignite/pull/8137#discussion_r468518292", "createdAt": "2020-08-11T11:44:38Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -105,18 +105,22 @@ def deactivate(self):\n \n     @staticmethod\n     def __parse_cluster_state(output):\n-        state_pattern = re.compile(\"Cluster state: ([^\\\\s]+)\")\n-        topology_pattern = re.compile(\"Current topology version: (\\\\d+)\")\n-        baseline_pattern = re.compile(\"Consistent(Id|ID)=([^\\\\s]+),\\\\sS(tate|TATE)=([^\\\\s]+),?(\\\\sOrder=(\\\\d+))?\")\n+        state_pattern = re.compile(\"Cluster state: (?P<cluster_state>[^\\\\s]+)\")\n+        topology_pattern = re.compile(\"Current topology version: (?P<topology_version>\\\\d+)\")\n+        baseline_pattern = re.compile(\"Consistent(Id|ID)=(?P<consistent_id>[^\\\\s]+),\\\\sS(tate|TATE)=(?P<state>[^\\\\s]+),\"\n+                                      \"?(\\\\sOrder=(?P<order>\\\\d+))?\")\n \n         match = state_pattern.search(output)\n-        state = match.group(1) if match else None\n+        state = match.group(\"cluster_state\") if match else None\n \n         match = topology_pattern.search(output)\n-        topology = int(match.group(1)) if match else None\n+        topology = int(match.group(\"topology_version\")) if match else None\n \n-        baseline = [BaselineNode(consistent_id=m[1], state=m[3], order=int(m[5]) if m[5] else None)\n-                    for m in baseline_pattern.findall(output)]\n+        baseline = []\n+        for match in baseline_pattern.finditer(output):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQyOTU0MA=="}, "originalCommit": {"oid": "0146cf7c0da9f22a2cdc0cb708acaa7f69dc53e1"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2806, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}