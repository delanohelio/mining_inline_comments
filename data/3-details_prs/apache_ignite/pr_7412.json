{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MTYwNjIz", "number": 7412, "title": "IGNITE-12067 User SQL query execution metrics", "bodyText": "", "createdAt": "2020-02-12T07:54:31Z", "url": "https://github.com/apache/ignite/pull/7412", "merged": true, "mergeCommit": {"oid": "ce6f480b7e694248e1ed142865b9e3ef7f68c869"}, "closed": true, "closedAt": "2020-02-13T15:08:15Z", "author": {"login": "pavlukhin"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDT9dhgH2gAyMzc0MTYwNjIzOjU5NGI3NjkxOWFhYmU5ZjJmM2Q4ODljYjBjNTcxYmMzY2Q1YTE3MjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcD5655gH2gAyMzc0MTYwNjIzOmVlMjE2NDhjZDg3NGQ1NTczZTFiZTYyZmYxZTY5ODRkYjBmZGVkZmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "594b76919aabe9f2f3d889cb0c571bc3cd5a1723", "author": {"user": {"login": "pavel-kuznetsov", "name": "Pavel Kuznetsov"}}, "url": "https://github.com/apache/ignite/commit/594b76919aabe9f2f3d889cb0c571bc3cd5a1723", "committedDate": "2020-02-11T16:03:11Z", "message": "IGNITE-12067 Metrics of execution of user SQL queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/apache/ignite/commit/0e1cd7317f91033ac0d3f7fed77066e823cbbf2a", "committedDate": "2020-02-12T08:37:51Z", "message": "IGNITE-12067 Update metric description a little bit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Mjc4Mjcx", "url": "https://github.com/apache/ignite/pull/7412#pullrequestreview-357278271", "createdAt": "2020-02-12T08:56:25Z", "commit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODo1NjoyNVrOFomMXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODo1NjoyNVrOFomMXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExMzExNg==", "bodyText": "Load failure reason.", "url": "https://github.com/apache/ignite/pull/7412#discussion_r378113116", "createdAt": "2020-02-12T08:56:25Z", "author": {"login": "AMashenkov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/bulkload/BulkLoadProcessor.java", "diffHunk": "@@ -51,6 +51,9 @@\n     /** Query id. */\n     private final Long qryId;\n \n+    /** Exception, current load process ended with, or {@code null} if in progress or if succeded. */\n+    private Exception failReason;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Mjc5ODg2", "url": "https://github.com/apache/ignite/pull/7412#pullrequestreview-357279886", "createdAt": "2020-02-12T08:58:58Z", "commit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODo1ODo1OVrOFomRXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODo1ODo1OVrOFomRXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNDM5Nw==", "bodyText": "Failure callback.\n@param failReason Exception caused a failure.", "url": "https://github.com/apache/ignite/pull/7412#discussion_r378114397", "createdAt": "2020-02-12T08:58:59Z", "author": {"login": "AMashenkov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/bulkload/BulkLoadProcessor.java", "diffHunk": "@@ -100,27 +103,36 @@ public void processBatch(byte[] batchData, boolean isLastBatch) throws IgniteChe\n         }\n     }\n \n+    /**\n+     * Is called to notify processor, that bulk load execution, this processor is performing, failed with specified", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Mjg0NzMy", "url": "https://github.com/apache/ignite/pull/7412#pullrequestreview-357284732", "createdAt": "2020-02-12T09:06:37Z", "commit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTowNjozN1rOFomgug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTowNjozN1rOFomgug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExODMzMA==", "bodyText": "Failure callback.\n@param failReason Exception caused a failure.", "url": "https://github.com/apache/ignite/pull/7412#discussion_r378118330", "createdAt": "2020-02-12T09:06:37Z", "author": {"login": "AMashenkov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/odbc/jdbc/JdbcBulkLoadProcessor.java", "diffHunk": "@@ -142,6 +142,15 @@ public void processBatch(JdbcBulkLoadBatchRequest req)\n         }\n     }\n \n+    /**\n+     * Gets notified if current bulk load failed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Mjg3Nzkz", "url": "https://github.com/apache/ignite/pull/7412#pullrequestreview-357287793", "createdAt": "2020-02-12T09:11:27Z", "commit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToxMToyN1rOFompuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToxMToyN1rOFompuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyMDYzMg==", "bodyText": "I'm just curious.\nWhy LongAdderMetric is used for succeeded queries and AtomicLongMetric is used for failed\\canceled ones?", "url": "https://github.com/apache/ignite/pull/7412#discussion_r378120632", "createdAt": "2020-02-12T09:11:27Z", "author": {"login": "AMashenkov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/RunningQueryManager.java", "diffHunk": "@@ -72,6 +77,18 @@\n     /** Query history tracker. */\n     private volatile QueryHistoryTracker qryHistTracker;\n \n+    /** Number of successfully executed queries. */\n+    private final LongAdderMetric successQrsCnt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Mjg5MjA1", "url": "https://github.com/apache/ignite/pull/7412#pullrequestreview-357289205", "createdAt": "2020-02-12T09:13:37Z", "commit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToxMzozN1rOFomuVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToxMzozN1rOFomuVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyMTgxNQ==", "bodyText": "Cancelled queries count metric.\nNote: Cancelled query is treated as failed one as well.", "url": "https://github.com/apache/ignite/pull/7412#discussion_r378121815", "createdAt": "2020-02-12T09:13:37Z", "author": {"login": "AMashenkov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/RunningQueryManager.java", "diffHunk": "@@ -72,6 +77,18 @@\n     /** Query history tracker. */\n     private volatile QueryHistoryTracker qryHistTracker;\n \n+    /** Number of successfully executed queries. */\n+    private final LongAdderMetric successQrsCnt;\n+\n+    /** Number of failed queries in total by any reason. */\n+    private final AtomicLongMetric failedQrsCnt;\n+\n+    /**\n+     * Number of canceled queries. Canceled queries a treated as failed and counting twice: here and in {@link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Mjg5ODU4", "url": "https://github.com/apache/ignite/pull/7412#pullrequestreview-357289858", "createdAt": "2020-02-12T09:14:38Z", "commit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToxNDozOFrOFomwbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToxNDozOFrOFomwbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyMjM0OQ==", "bodyText": "Failed and cancelled queries count metric.", "url": "https://github.com/apache/ignite/pull/7412#discussion_r378122349", "createdAt": "2020-02-12T09:14:38Z", "author": {"login": "AMashenkov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/RunningQueryManager.java", "diffHunk": "@@ -72,6 +77,18 @@\n     /** Query history tracker. */\n     private volatile QueryHistoryTracker qryHistTracker;\n \n+    /** Number of successfully executed queries. */\n+    private final LongAdderMetric successQrsCnt;\n+\n+    /** Number of failed queries in total by any reason. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjkxNjI1", "url": "https://github.com/apache/ignite/pull/7412#pullrequestreview-357291625", "createdAt": "2020-02-12T09:17:17Z", "commit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToxNzoxN1rOFom1ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToxNzoxN1rOFom1ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyMzYyMA==", "bodyText": "Next statement makes no sense here \"so some memory is reserved.\"", "url": "https://github.com/apache/ignite/pull/7412#discussion_r378123620", "createdAt": "2020-02-12T09:17:17Z", "author": {"login": "AMashenkov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/internal/metric/SqlStatisticsAbstractTest.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.metric;\n+\n+import java.util.Collections;\n+import java.util.UUID;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.ignite.Ignite;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.IgniteDataStreamer;\n+import org.apache.ignite.cache.QueryEntity;\n+import org.apache.ignite.cache.query.annotations.QuerySqlFunction;\n+import org.apache.ignite.configuration.CacheConfiguration;\n+import org.apache.ignite.internal.IgniteInternalFuture;\n+import org.apache.ignite.testframework.GridTestUtils;\n+import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;\n+\n+/**\n+ * Abstract test for sql metrics tests.\n+ */\n+public class SqlStatisticsAbstractTest extends GridCommonAbstractTest {\n+    /**\n+     * Timeout for each wait on sync operation in seconds.\n+     */\n+    public static final long WAIT_OP_TIMEOUT_SEC = 15;\n+\n+    /**\n+     * Number of rows in the test table.\n+     */\n+    public static final int TABLE_SIZE = 10_000;\n+\n+    /**\n+     * Start the cache with a test table and test data.\n+     */\n+    protected IgniteCache createCacheFrom(Ignite node) {\n+        CacheConfiguration<Integer, String> ccfg = new CacheConfiguration<Integer, String>(DEFAULT_CACHE_NAME)\n+            .setSqlFunctionClasses(SuspendQuerySqlFunctions.class)\n+            .setQueryEntities(Collections.singleton(\n+                new QueryEntity(Integer.class.getName(), String.class.getName())\n+                    .setTableName(\"TAB\")\n+                    .addQueryField(\"id\", Integer.class.getName(), null)\n+                    .addQueryField(\"name\", String.class.getName(), null)\n+                    .setKeyFieldName(\"id\")\n+                    .setValueFieldName(\"name\")\n+            ));\n+\n+        IgniteCache<Integer, String> cache = node.createCache(ccfg);\n+\n+        try (IgniteDataStreamer<Object, Object> ds = node.dataStreamer(DEFAULT_CACHE_NAME)) {\n+            for (int i = 0; i < TABLE_SIZE; i++)\n+                ds.addData(i, UUID.randomUUID().toString());\n+        }\n+\n+        return cache;\n+    }\n+\n+    /**\n+     * Run async action and log if exception occured.\n+     *\n+     * @param act action to perform on other thread.\n+     * @return future object to \"action complited\" event.\n+     */\n+    protected IgniteInternalFuture runAsyncX(Runnable act) {\n+        return GridTestUtils.runAsync(() -> {\n+            try {\n+                act.run();\n+            }\n+            catch (Throwable th) {\n+                log.error(\"Failed to perform async action. Probably test is broken.\", th);\n+            }\n+        });\n+    }\n+\n+    /**\n+     * This class exports function to the sql engine. Function implementation allows us to suspend query execution on test\n+     * logic condition.\n+     */\n+    public static class SuspendQuerySqlFunctions {\n+        /**\n+         * How many rows should be processed (by all nodes in total)\n+         */\n+        private static final int DFLT_PROCESS_ROWS_TO_SUSPEND = TABLE_SIZE / 4;\n+\n+        /**\n+         * Latch to await till full scan query that uses this class function have done some job, so some memory is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1cd7317f91033ac0d3f7fed77066e823cbbf2a"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "758a8a0d1bd3af32e7c5ecac294ad64adbc7cf4a", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/apache/ignite/commit/758a8a0d1bd3af32e7c5ecac294ad64adbc7cf4a", "committedDate": "2020-02-12T16:01:53Z", "message": "IGNITE-12067 Fix code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34c91c9c7f1341176868b9948cf2d6f22a3900bf", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/apache/ignite/commit/34c91c9c7f1341176868b9948cf2d6f22a3900bf", "committedDate": "2020-02-13T12:03:17Z", "message": "IGNITE-12067 Fix .NET CacheLinqTest.TestTimeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee21648cd874d5573e1be62ff1e6984db0fdedfc", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/apache/ignite/commit/ee21648cd874d5573e1be62ff1e6984db0fdedfc", "committedDate": "2020-02-13T12:16:47Z", "message": "IGNITE-12067 Fix KillQueryTest"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2811, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}