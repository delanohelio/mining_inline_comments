{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1OTkzNDA1", "number": 8138, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMDowOToyMVrOEXJM8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMDoxMzozMVrOEXJR2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNzAzNDc0OnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMDowOToyMVrOG-xNvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMDowOToyMVrOG-xNvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ3MTIzMQ==", "bodyText": "Add empty line, please", "url": "https://github.com/apache/ignite/pull/8138#discussion_r468471231", "createdAt": "2020-08-11T10:09:21Z", "author": {"login": "NSAmelchev"}, "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java", "diffHunk": "@@ -166,8 +166,17 @@ public void testDataRegionMetrics() throws Exception {\n \n         Set<String> names = new HashSet<>();\n \n+        DataRegionConfiguration cfg =\n+            ignite0.configuration().getDataStorageConfiguration().getDefaultDataRegionConfiguration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d38f631f34e92d8cc5cb266a47a61fa3d5cc6600"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNzA0NzI4OnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMDoxMzozMVrOG-xVeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMDoxMzozMVrOG-xVeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ3MzIwOA==", "bodyText": "The new var name can be used instead of row.get(0)\nrow.get(1) can be as a var too.", "url": "https://github.com/apache/ignite/pull/8138#discussion_r468473208", "createdAt": "2020-08-11T10:13:31Z", "author": {"login": "NSAmelchev"}, "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java", "diffHunk": "@@ -166,8 +166,17 @@ public void testDataRegionMetrics() throws Exception {\n \n         Set<String> names = new HashSet<>();\n \n+        DataRegionConfiguration cfg =\n+            ignite0.configuration().getDataStorageConfiguration().getDefaultDataRegionConfiguration();\n         for (List<?> row : res) {\n-            names.add((String)row.get(0));\n+            String name = (String)row.get(0);\n+\n+            names.add(name);\n+\n+            if (\"InitialSize\".equals(name))\n+                assertEquals(Long.toString(cfg.getInitialSize()), row.get(1));\n+            else if (\"MaxSize\".equals(name))\n+                assertEquals(Long.toString(cfg.getMaxSize()), row.get(1));\n \n             assertNotNull(\"Metric value must be not null [name=\" + row.get(0) + ']', row.get(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d38f631f34e92d8cc5cb266a47a61fa3d5cc6600"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2809, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}