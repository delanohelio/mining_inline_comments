{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NDgwODQ3", "number": 8249, "title": "IGNITE-13426 Adds command to print system view content.", "bodyText": "Thank you for submitting the pull request to the Apache Ignite.\nIn order to streamline the review of the contribution\nwe ask you to ensure the following steps have been taken:\nThe Contribution Checklist\n\n There is a single JIRA ticket related to the pull request.\n The web-link to the pull request is attached to the JIRA ticket.\n The JIRA ticket has the Patch Available state.\n The pull request body describes changes that have been made.\nThe description explains WHAT and WHY was made instead of HOW.\n The pull request title is treated as the final commit message.\nThe following pattern must be used: IGNITE-XXXX Change summary where XXXX - number of JIRA issue.\n A reviewer has been mentioned through the JIRA comments\n(see the Maintainers list)\n The pull request has been checked by the Teamcity Bot and\nthe green visa attached to the JIRA ticket (see TC.Bot: Check PR)\n\nNotes\n\nHow to Contribute\nCoding abbreviation rules\nCoding Guidelines\nApache Ignite Teamcity Bot\n\nIf you need any help, please email dev@ignite.apache.org or ask an\u0443 advice on http://asf.slack.com #ignite channel.", "createdAt": "2020-09-15T18:37:31Z", "url": "https://github.com/apache/ignite/pull/8249", "merged": true, "mergeCommit": {"oid": "69b23b84d23a2fbbf7a4ec9b0c4cf4669cf0e5d1"}, "closed": true, "closedAt": "2020-09-23T10:23:53Z", "author": {"login": "ololo3000"}, "timelineItems": {"totalCount": 51, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJMbGggBqjM3Njk4MzExOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLoX1HAH2gAyNDg3NDgwODQ3OmM1Y2YzZTk4YzgxZDc3NjIyNWU1OThjOThlMGY1OGY1YjdkMmI3Nzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c02ddf9793594f7be3934447a3d46d38369ddae", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/2c02ddf9793594f7be3934447a3d46d38369ddae", "committedDate": "2020-09-15T18:47:01Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "7b2dd3af4cb628fe4689cc711f291e38e7f3299b", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/7b2dd3af4cb628fe4689cc711f291e38e7f3299b", "committedDate": "2020-09-15T18:50:48Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b2dd3af4cb628fe4689cc711f291e38e7f3299b", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/7b2dd3af4cb628fe4689cc711f291e38e7f3299b", "committedDate": "2020-09-15T18:50:48Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "89904383673a74ea4530389af1e6fb64771f9e7e", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/89904383673a74ea4530389af1e6fb64771f9e7e", "committedDate": "2020-09-15T18:54:10Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd4dde88f28baf21f3ca848a270a1f3a2f3d27e7", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/cd4dde88f28baf21f3ca848a270a1f3a2f3d27e7", "committedDate": "2020-09-16T18:38:33Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "60a107966585837f12d589e3461f5279c41800e1", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/60a107966585837f12d589e3461f5279c41800e1", "committedDate": "2020-09-16T18:41:25Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60a107966585837f12d589e3461f5279c41800e1", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/60a107966585837f12d589e3461f5279c41800e1", "committedDate": "2020-09-16T18:41:25Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "20e0a675324a3631f38740758a74629fd9b9730e", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/20e0a675324a3631f38740758a74629fd9b9730e", "committedDate": "2020-09-16T18:56:12Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20e0a675324a3631f38740758a74629fd9b9730e", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/20e0a675324a3631f38740758a74629fd9b9730e", "committedDate": "2020-09-16T18:56:12Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "618d74087cae39c85201f668643821873ba592a2", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/618d74087cae39c85201f668643821873ba592a2", "committedDate": "2020-09-16T19:14:30Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "618d74087cae39c85201f668643821873ba592a2", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/618d74087cae39c85201f668643821873ba592a2", "committedDate": "2020-09-16T19:14:30Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "5bf65f64019ec764082698b9dc570788815b480c", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/5bf65f64019ec764082698b9dc570788815b480c", "committedDate": "2020-09-16T21:11:27Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5bf65f64019ec764082698b9dc570788815b480c", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/5bf65f64019ec764082698b9dc570788815b480c", "committedDate": "2020-09-16T21:11:27Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "069573cb8ce5e57560fac2033aa4c636945a2c7f", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/069573cb8ce5e57560fac2033aa4c636945a2c7f", "committedDate": "2020-09-16T23:40:46Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9114be0984edbe4223cffeed68a10573fdbc3c3", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/d9114be0984edbe4223cffeed68a10573fdbc3c3", "committedDate": "2020-09-17T10:32:43Z", "message": "IGNITE-13426 Adds SimpleAttributeType."}, "afterCommit": {"oid": "d89de4195b10460bf7c5e607be34b65acb0ba7c1", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/d89de4195b10460bf7c5e607be34b65acb0ba7c1", "committedDate": "2020-09-17T10:38:03Z", "message": "IGNITE-13426 Adds SimpleAttributeType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d89de4195b10460bf7c5e607be34b65acb0ba7c1", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/d89de4195b10460bf7c5e607be34b65acb0ba7c1", "committedDate": "2020-09-17T10:38:03Z", "message": "IGNITE-13426 Adds SimpleAttributeType."}, "afterCommit": {"oid": "36cf6e2131674438e80960d1a104cbf9a0e63392", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/36cf6e2131674438e80960d1a104cbf9a0e63392", "committedDate": "2020-09-17T10:40:12Z", "message": "IGNITE-13426 Adds SimpleAttributeType."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTgzNjky", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-490583692", "createdAt": "2020-09-17T13:19:15Z", "commit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxOToxNVrOHThsEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxOToxNVrOHThsEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNjk0Nw==", "bodyText": "I suggest removing this newline", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490236947", "createdAt": "2020-09-17T13:19:15Z", "author": {"login": "xtern"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTg0MjM2", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-490584236", "createdAt": "2020-09-17T13:19:36Z", "commit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxOTozNlrOHThtHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxOTozNlrOHThtHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNzIxNA==", "bodyText": "? extends List<?> can be replaced with List<?>", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490237214", "createdAt": "2020-09-17T13:19:36Z", "author": {"login": "xtern"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTg1NTU3", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-490585557", "createdAt": "2020-09-17T13:20:28Z", "commit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyMDoyOFrOHThvyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyMDoyOFrOHThvyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNzg5OA==", "bodyText": "I suggest removing this newline", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490237898", "createdAt": "2020-09-17T13:20:28Z", "author": {"login": "xtern"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());\n+\n+        List<List<String>> rows = new ArrayList<>(sysViewRows.size());\n+\n+        sysViewRows.forEach(sysViewRow -> {\n+            ListIterator<Integer> colLenIter = colLenghts.listIterator();\n+\n+            rows.add(sysViewRow.stream().map(attr -> {\n+                String colVal = String.valueOf(attr);\n+\n+                colLenIter.set(Math.max(colLenIter.next(), colVal.length()));\n+\n+                return colVal;\n+            }).collect(Collectors.toList()));\n+        });\n+\n+        printRow(colTitles, nCopies(colTitles.size(), STRING), colLenghts, log);\n+\n+        rows.forEach(row -> printRow(row, taskRes.systemViewAttributeTypes(), colLenghts, log));\n+    }\n+\n+    /**\n+     * Prints row content with respect to column types and lengths.\n+     *\n+     * @param row Row which content should be printed.\n+     * @param types Column types in sequential order for decent row formatting.\n+     * @param lengths Column lengths in sequential order for decent row formatting.\n+     * @param log Logger.\n+     */\n+    private void printRow(\n+        Collection<String> row,\n+        Collection<SimpleAttributeType> types,\n+        Collection<Integer> lengths,\n+        Logger log\n+    ) {\n+        Iterator<SimpleAttributeType> typeIter = types.iterator();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 145}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTg3MzA5", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-490587309", "createdAt": "2020-09-17T13:21:37Z", "commit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyMTozN1rOHThzRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyMTozN1rOHThzRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzODc4OQ==", "bodyText": "we can add an assertion here to ensure code reader that the sizes of collections are equal", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490238789", "createdAt": "2020-09-17T13:21:37Z", "author": {"login": "xtern"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());\n+\n+        List<List<String>> rows = new ArrayList<>(sysViewRows.size());\n+\n+        sysViewRows.forEach(sysViewRow -> {\n+            ListIterator<Integer> colLenIter = colLenghts.listIterator();\n+\n+            rows.add(sysViewRow.stream().map(attr -> {\n+                String colVal = String.valueOf(attr);\n+\n+                colLenIter.set(Math.max(colLenIter.next(), colVal.length()));\n+\n+                return colVal;\n+            }).collect(Collectors.toList()));\n+        });\n+\n+        printRow(colTitles, nCopies(colTitles.size(), STRING), colLenghts, log);\n+\n+        rows.forEach(row -> printRow(row, taskRes.systemViewAttributeTypes(), colLenghts, log));\n+    }\n+\n+    /**\n+     * Prints row content with respect to column types and lengths.\n+     *\n+     * @param row Row which content should be printed.\n+     * @param types Column types in sequential order for decent row formatting.\n+     * @param lengths Column lengths in sequential order for decent row formatting.\n+     * @param log Logger.\n+     */\n+    private void printRow(\n+        Collection<String> row,\n+        Collection<SimpleAttributeType> types,\n+        Collection<Integer> lengths,\n+        Logger log\n+    ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 143}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTkwMDYx", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-490590061", "createdAt": "2020-09-17T13:23:58Z", "commit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyMzo1OFrOHTh7Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyMzo1OFrOHTh7Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MDc3MQ==", "bodyText": "Unused import", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490240771", "createdAt": "2020-09-17T13:23:58Z", "author": {"login": "xtern"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTkyNzQ2", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-490592746", "createdAt": "2020-09-17T13:26:49Z", "commit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyNjo1MFrOHTiFGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyNjo1MFrOHTiFGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzM1NQ==", "bodyText": "Seems that it is better to put this code into a separate method.\nIn this case, code here will look something like\nSystemView<?> targetSysView = findSysView(arg.systemViewName());\n\n            if (targetSysView == null)\n                return null;\n\nfindSysView may look something like\nprivate SystemView<?> findSysView(String name) {\n            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n\n            SystemView<?> targetSysView = sysViewMgr.view(name);\n\n            if (targetSysView != null)\n                return targetSysView;\n\n            // In this case we assume that the requested system view name is in SQL format.\n            for (SystemView<?> sysView : sysViewMgr) {\n                if (toSqlName(sysView.name()).equals(name))\n                    return sysView;\n            }\n\n            return null;\n        }", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490243355", "createdAt": "2020-09-17T13:26:50Z", "author": {"login": "xtern"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.UUID;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.internal.managers.systemview.GridSystemViewManager;\n+import org.apache.ignite.internal.processors.task.GridInternal;\n+import org.apache.ignite.internal.processors.task.GridVisorManagementTask;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.VisorJob;\n+import org.apache.ignite.internal.visor.VisorOneNodeTask;\n+import org.apache.ignite.lang.IgniteUuid;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker.AttributeWithValueVisitor;\n+import org.jetbrains.annotations.Nullable;\n+\n+import static org.apache.ignite.internal.processors.metric.impl.MetricUtils.toSqlName;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Reperesents visor task for obtaining system view content.\n+ */\n+@GridInternal\n+@GridVisorManagementTask\n+public class VisorSystemViewTask extends VisorOneNodeTask<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** {@inheritDoc} */\n+    @Override protected VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> job(VisorSystemViewTaskArg arg) {\n+        return new VisorSystemViewJob(arg, false);\n+    }\n+\n+    /**\n+     *\n+     */\n+    private static class VisorSystemViewJob extends VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+        /** */\n+        private static final long serialVersionUID = 0L;\n+\n+        /**\n+         * Create job with specified argument.\n+         *\n+         * @param arg Job argument.\n+         * @param debug Flag indicating whether debug information should be printed into node log.\n+         */\n+        protected VisorSystemViewJob(@Nullable VisorSystemViewTaskArg arg, boolean debug) {\n+            super(arg, debug);\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Override protected VisorSystemViewTaskResult run(@Nullable VisorSystemViewTaskArg arg) throws IgniteException {\n+            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n+\n+            String targetSysViewName = arg.systemViewName();\n+\n+            SystemView<?> targetSysView = sysViewMgr.view(targetSysViewName);\n+\n+            if (targetSysView == null) { // In this case we assume that the requested system view name is in SQL format.\n+                for (SystemView<?> sysView : sysViewMgr) {\n+                    if (toSqlName(sysView.name()).equals(targetSysViewName)) {\n+                        targetSysView = sysView;\n+\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (targetSysView == null)\n+                return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTk1Mzk3", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-490595397", "createdAt": "2020-09-17T13:29:29Z", "commit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyOTozMFrOHTiOxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyOTozMFrOHTiOxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0NTgyOQ==", "bodyText": "I suggest removing this newline", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490245829", "createdAt": "2020-09-17T13:29:30Z", "author": {"login": "xtern"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.UUID;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.internal.managers.systemview.GridSystemViewManager;\n+import org.apache.ignite.internal.processors.task.GridInternal;\n+import org.apache.ignite.internal.processors.task.GridVisorManagementTask;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.VisorJob;\n+import org.apache.ignite.internal.visor.VisorOneNodeTask;\n+import org.apache.ignite.lang.IgniteUuid;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker.AttributeWithValueVisitor;\n+import org.jetbrains.annotations.Nullable;\n+\n+import static org.apache.ignite.internal.processors.metric.impl.MetricUtils.toSqlName;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Reperesents visor task for obtaining system view content.\n+ */\n+@GridInternal\n+@GridVisorManagementTask\n+public class VisorSystemViewTask extends VisorOneNodeTask<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** {@inheritDoc} */\n+    @Override protected VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> job(VisorSystemViewTaskArg arg) {\n+        return new VisorSystemViewJob(arg, false);\n+    }\n+\n+    /**\n+     *\n+     */\n+    private static class VisorSystemViewJob extends VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+        /** */\n+        private static final long serialVersionUID = 0L;\n+\n+        /**\n+         * Create job with specified argument.\n+         *\n+         * @param arg Job argument.\n+         * @param debug Flag indicating whether debug information should be printed into node log.\n+         */\n+        protected VisorSystemViewJob(@Nullable VisorSystemViewTaskArg arg, boolean debug) {\n+            super(arg, debug);\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Override protected VisorSystemViewTaskResult run(@Nullable VisorSystemViewTaskArg arg) throws IgniteException {\n+            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n+\n+            String targetSysViewName = arg.systemViewName();\n+\n+            SystemView<?> targetSysView = sysViewMgr.view(targetSysViewName);\n+\n+            if (targetSysView == null) { // In this case we assume that the requested system view name is in SQL format.\n+                for (SystemView<?> sysView : sysViewMgr) {\n+                    if (toSqlName(sysView.name()).equals(targetSysViewName)) {\n+                        targetSysView = sysView;\n+\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (targetSysView == null)\n+                return null;\n+\n+            List<String> attrNames = new ArrayList<>();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNjEwMDgw", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-490610080", "createdAt": "2020-09-17T13:44:48Z", "commit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzo0NDo0OVrOHTi9MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzo0NDo0OVrOHTi9MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1NzcxMg==", "bodyText": "List<? extends List<?>> can be replaced with List<List<?>>", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490257712", "createdAt": "2020-09-17T13:44:49Z", "author": {"login": "xtern"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<? extends List<?>> rows;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96cb1cc12634b29fa15f1e25411b14e4ec6777d1", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/96cb1cc12634b29fa15f1e25411b14e4ec6777d1", "committedDate": "2020-09-19T21:34:28Z", "message": "IGNITE-13426 Adds command to print system view content."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e249d065fb1d428609210573ad02c0835019345e", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/e249d065fb1d428609210573ad02c0835019345e", "committedDate": "2020-09-19T21:34:28Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "434af82bc9b4fe81f8b0487526f661dd191f15ef", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/434af82bc9b4fe81f8b0487526f661dd191f15ef", "committedDate": "2020-09-19T21:34:28Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84c7c9b37f57e92ea9d4da253b310716b8addbb4", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/84c7c9b37f57e92ea9d4da253b310716b8addbb4", "committedDate": "2020-09-19T21:34:28Z", "message": "IGNITE-13426 Fixes parsing tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "479b57db8b84c33bc5c96233369ca455e5f99547", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/479b57db8b84c33bc5c96233369ca455e5f99547", "committedDate": "2020-09-19T21:34:28Z", "message": "IGNITE-13426 Refactors system view command tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1560e730749497ed94d3e703a89e2bb6e7a33482", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/1560e730749497ed94d3e703a89e2bb6e7a33482", "committedDate": "2020-09-19T21:34:28Z", "message": "IGNITE-13426 Refactors system view command tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4029bcb89b10b70236ddce66082269be491d93b", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/c4029bcb89b10b70236ddce66082269be491d93b", "committedDate": "2020-09-19T21:34:29Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0805cebde44da95ac092774302912097994ac0b5", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/0805cebde44da95ac092774302912097994ac0b5", "committedDate": "2020-09-19T21:34:29Z", "message": "IGNITE-13426 Adds SimpleAttributeType."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63370bee32b4e886bcd73ac0e5df180794d77e14", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/63370bee32b4e886bcd73ac0e5df180794d77e14", "committedDate": "2020-09-19T21:34:29Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3b28fa243b5174f828fb666392f9f372d956165", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/b3b28fa243b5174f828fb666392f9f372d956165", "committedDate": "2020-09-19T21:34:29Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8a72fe97a2cf643622b85c81b109fe91346cfa5", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/f8a72fe97a2cf643622b85c81b109fe91346cfa5", "committedDate": "2020-09-19T21:37:45Z", "message": "IGNITE-13426 Refactors system view command tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "220022b11ee95e63cb6306ae127d4e1f046417c8", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/220022b11ee95e63cb6306ae127d4e1f046417c8", "committedDate": "2020-09-19T21:37:45Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72866f8f595ff8210c4f00402cfc85b67cf35202", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/72866f8f595ff8210c4f00402cfc85b67cf35202", "committedDate": "2020-09-19T21:29:16Z", "message": "IGNITE-13426 Refactors system view command tests"}, "afterCommit": {"oid": "220022b11ee95e63cb6306ae127d4e1f046417c8", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/220022b11ee95e63cb6306ae127d4e1f046417c8", "committedDate": "2020-09-19T21:37:45Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d71a5cd572a92fb5d793acc698d384414542cf7", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/3d71a5cd572a92fb5d793acc698d384414542cf7", "committedDate": "2020-09-19T21:41:19Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "a97a5ffc03f59b0ea5c95bc5da39daf52e076eb1", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/a97a5ffc03f59b0ea5c95bc5da39daf52e076eb1", "committedDate": "2020-09-19T21:53:48Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a97a5ffc03f59b0ea5c95bc5da39daf52e076eb1", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/a97a5ffc03f59b0ea5c95bc5da39daf52e076eb1", "committedDate": "2020-09-19T21:53:48Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "c3394aed0beea358dda91bfc55b99102bf6f1c13", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/c3394aed0beea358dda91bfc55b99102bf6f1c13", "committedDate": "2020-09-20T08:43:11Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3394aed0beea358dda91bfc55b99102bf6f1c13", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/c3394aed0beea358dda91bfc55b99102bf6f1c13", "committedDate": "2020-09-20T08:43:11Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "48ceade427d2579882f2b988c2f258dc8ea824d5", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/48ceade427d2579882f2b988c2f258dc8ea824d5", "committedDate": "2020-09-20T19:00:41Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48ceade427d2579882f2b988c2f258dc8ea824d5", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/48ceade427d2579882f2b988c2f258dc8ea824d5", "committedDate": "2020-09-20T19:00:41Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "1b021c0d281edefad2c7465ae16a30b3f9c09d90", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/1b021c0d281edefad2c7465ae16a30b3f9c09d90", "committedDate": "2020-09-20T19:05:35Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54893ba5882eb0630d98cae2f41332d9f759db74", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/54893ba5882eb0630d98cae2f41332d9f759db74", "committedDate": "2020-09-20T19:13:32Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b021c0d281edefad2c7465ae16a30b3f9c09d90", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/1b021c0d281edefad2c7465ae16a30b3f9c09d90", "committedDate": "2020-09-20T19:05:35Z", "message": "IGNITE-13426 Fixes minor issues."}, "afterCommit": {"oid": "54893ba5882eb0630d98cae2f41332d9f759db74", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/54893ba5882eb0630d98cae2f41332d9f759db74", "committedDate": "2020-09-20T19:13:32Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/17c848edebcf760083689cf0868e837d55cbd219", "committedDate": "2020-09-21T09:35:16Z", "message": "IGNITE-13426 Fixes minor issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjcwNzgy", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-493270782", "createdAt": "2020-09-22T09:17:42Z", "commit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxNzo0MlrOHVxS-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxNzo0MlrOHVxS-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4OTgxNw==", "bodyText": "nit: @param types missed in javadoc.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492589817", "createdAt": "2020-09-22T09:17:42Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjcxNDM3", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-493271437", "createdAt": "2020-09-22T09:18:33Z", "commit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxODozM1rOHVxU5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxODozM1rOHVxU5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5MDMxMA==", "bodyText": "Let's make this and similar comment one liner.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492590310", "createdAt": "2020-09-22T09:18:33Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.\n+     */\n+    public VisorSystemViewTaskResult(List<String> attrs, List<SimpleAttributeType> types, List<List<?>> rows) {\n+        this.attrs = attrs;\n+        this.types = types;\n+        this.rows = rows;\n+    }\n+\n+    /**\n+     * @return Names of the system view attributes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjcxNTcw", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-493271570", "createdAt": "2020-09-22T09:18:43Z", "commit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxODo0NFrOHVxVSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxODo0NFrOHVxVSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5MDQwOQ==", "bodyText": "Please, make it one line comment.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492590409", "createdAt": "2020-09-22T09:18:44Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.\n+     */\n+    public VisorSystemViewTaskResult(List<String> attrs, List<SimpleAttributeType> types, List<List<?>> rows) {\n+        this.attrs = attrs;\n+        this.types = types;\n+        this.rows = rows;\n+    }\n+\n+    /**\n+     * @return Names of the system view attributes.\n+     */\n+    public List<String> systemViewAttributes() {\n+        return attrs;\n+    }\n+\n+    /**\n+     * @return Attribute values for each row of the system view.\n+     */\n+    public List<List<?>> systemViewContent() {\n+        return rows;\n+    }\n+\n+    /**\n+     * @return Types of the system view attributes.\n+     */\n+    public List<SimpleAttributeType> systemViewAttributeTypes() {\n+        return types;\n+    }\n+\n+    /**\n+     * {@inheritDoc}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjgyNzAy", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-493282702", "createdAt": "2020-09-22T09:33:15Z", "commit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozMzoxNVrOHVx3tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozMzoxNVrOHVx3tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5OTIyMg==", "bodyText": "Let's make method naming consistent with the variables names.\nattrs -> attributes\nrows -> rows\ntypes -> types", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492599222", "createdAt": "2020-09-22T09:33:15Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.\n+     */\n+    public VisorSystemViewTaskResult(List<String> attrs, List<SimpleAttributeType> types, List<List<?>> rows) {\n+        this.attrs = attrs;\n+        this.types = types;\n+        this.rows = rows;\n+    }\n+\n+    /**\n+     * @return Names of the system view attributes.\n+     */\n+    public List<String> systemViewAttributes() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjg0NjM3", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-493284637", "createdAt": "2020-09-22T09:35:53Z", "commit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNTo1M1rOHVx9cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNTo1M1rOHVx9cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDY4OQ==", "bodyText": "Let's rename this to titles", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492600689", "createdAt": "2020-09-22T09:35:53Z", "author": {"login": "nizhikov"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 105}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjg0Nzg4", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-493284788", "createdAt": "2020-09-22T09:36:04Z", "commit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjowNFrOHVx95Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjowNFrOHVx95Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDgwNQ==", "bodyText": "Let's rename this to viewRows", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492600805", "createdAt": "2020-09-22T09:36:04Z", "author": {"login": "nizhikov"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+        List<List<?>> sysViewRows = taskRes.systemViewContent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjg1MjA4", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-493285208", "createdAt": "2020-09-22T09:36:33Z", "commit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjozM1rOHVx_TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjozM1rOHVx_TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMTE2NA==", "bodyText": "Let's rename this to colSzs", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492601164", "createdAt": "2020-09-22T09:36:33Z", "author": {"login": "nizhikov"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+        List<List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjg1MzI2", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-493285326", "createdAt": "2020-09-22T09:36:44Z", "commit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjo0NFrOHVx_ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjo0NFrOHVx_ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMTI3NA==", "bodyText": "Let's rename this to val", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492601274", "createdAt": "2020-09-22T09:36:44Z", "author": {"login": "nizhikov"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+        List<List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());\n+\n+        List<List<String>> rows = new ArrayList<>(sysViewRows.size());\n+\n+        sysViewRows.forEach(sysViewRow -> {\n+            ListIterator<Integer> colLenIter = colLenghts.listIterator();\n+\n+            rows.add(sysViewRow.stream().map(attr -> {\n+                String colVal = String.valueOf(attr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjkyOTQ0", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-493292944", "createdAt": "2020-09-22T09:46:54Z", "commit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "599b069f92dd5757cdd7eedbdcc48a8679bd3c8d", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/599b069f92dd5757cdd7eedbdcc48a8679bd3c8d", "committedDate": "2020-09-22T10:47:48Z", "message": "IGNITE-13426 Fixes code style issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c86c7c375414f1c8354839d8ecdc5e248d9b18be", "author": {"user": {"login": "nizhikov", "name": "Nikolay"}}, "url": "https://github.com/apache/ignite/commit/c86c7c375414f1c8354839d8ecdc5e248d9b18be", "committedDate": "2020-09-23T07:31:38Z", "message": "Update SystemViewCommand.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e1e2d3a8aa42394568f76cdb629bd5a7bc7ee9d", "author": {"user": {"login": "nizhikov", "name": "Nikolay"}}, "url": "https://github.com/apache/ignite/commit/0e1e2d3a8aa42394568f76cdb629bd5a7bc7ee9d", "committedDate": "2020-09-23T07:57:40Z", "message": "Update SystemViewCommand.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NDE0MDk1", "url": "https://github.com/apache/ignite/pull/8249#pullrequestreview-494414095", "createdAt": "2020-09-23T08:19:59Z", "commit": {"oid": "0e1e2d3a8aa42394568f76cdb629bd5a7bc7ee9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5cf3e98c81d776225e598c98e0f58f5b7d2b777", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/c5cf3e98c81d776225e598c98e0f58f5b7d2b777", "committedDate": "2020-09-23T08:32:38Z", "message": "IGNITE-13426 Merges master branch."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3124, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}