{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MTM2ODIz", "number": 7521, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzoxMzo1MVrODomtHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzozOToyOVrODonDdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTAzNzcyOnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/H2ConnectionWrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzoxMzo1MVrOF3QK5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODo1NDowN1rOF3S39g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4MDkzNA==", "bodyText": "here schema is always not null", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393480934", "createdAt": "2020-03-17T07:13:51Z", "author": {"login": "joooger"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/H2ConnectionWrapper.java", "diffHunk": "@@ -73,6 +73,11 @@ public void schema(@Nullable String schema) {\n     public Connection connection(@Nullable String schema) {\n         if (schema != null && !F.eq(this.schema, schema)) {\n             try {\n+\n+                if(schema != null && schema.trim().isEmpty()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTIzOA==", "bodyText": "fixed", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525238", "createdAt": "2020-03-17T08:54:07Z", "author": {"login": "Aleksei-Litsov"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/H2ConnectionWrapper.java", "diffHunk": "@@ -73,6 +73,11 @@ public void schema(@Nullable String schema) {\n     public Connection connection(@Nullable String schema) {\n         if (schema != null && !F.eq(this.schema, schema)) {\n             try {\n+\n+                if(schema != null && schema.trim().isEmpty()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4MDkzNA=="}, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTA5MTMxOnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzozNzo1OFrOF3QsHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODo1NDoxM1rOF3S4Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTQzOA==", "bodyText": "Missed javadoc", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393489438", "createdAt": "2020-03-17T07:37:58Z", "author": {"login": "AMashenkov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -351,6 +353,10 @@ protected Result executeFrom(String qry, Ignite node) {\n         return executeFrom(new SqlFieldsQuery(qry), node);\n     }\n \n+    protected Result executeFrom(String qry, Ignite node, String schema) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTMxMA==", "bodyText": "fixed", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525310", "createdAt": "2020-03-17T08:54:13Z", "author": {"login": "Aleksei-Litsov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -351,6 +353,10 @@ protected Result executeFrom(String qry, Ignite node) {\n         return executeFrom(new SqlFieldsQuery(qry), node);\n     }\n \n+    protected Result executeFrom(String qry, Ignite node, String schema) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTQzOA=="}, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTA5MjAxOnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzozODoxOFrOF3Qsjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODo1NDoxOFrOF3S4ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTU1MA==", "bodyText": "Redundant empty line", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393489550", "createdAt": "2020-03-17T07:38:18Z", "author": {"login": "AMashenkov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTM0OQ==", "bodyText": "fixed", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525349", "createdAt": "2020-03-17T08:54:18Z", "author": {"login": "Aleksei-Litsov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTU1MA=="}, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTA5MzEwOnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzozODozOVrOF3QtJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODo1NDoyN1rOF3S4uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTcwMw==", "bodyText": "Missed javadoc", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393489703", "createdAt": "2020-03-17T07:38:39Z", "author": {"login": "AMashenkov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+\n+    @Rule\n+    public ExpectedException expectedEx = ExpectedException.none();\n+\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTQzNQ==", "bodyText": "fixed", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525435", "createdAt": "2020-03-17T08:54:27Z", "author": {"login": "Aleksei-Litsov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+\n+    @Rule\n+    public ExpectedException expectedEx = ExpectedException.none();\n+\n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTcwMw=="}, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTA5MzU2OnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzozODo1MlrOF3QteQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODo1NDozMVrOF3S45Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTc4NQ==", "bodyText": "Empty line", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393489785", "createdAt": "2020-03-17T07:38:52Z", "author": {"login": "AMashenkov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+\n+    @Rule\n+    public ExpectedException expectedEx = ExpectedException.none();\n+\n+    @Test\n+    public void testCheckEmptySchema() {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTQ3Nw==", "bodyText": "fixed", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525477", "createdAt": "2020-03-17T08:54:31Z", "author": {"login": "Aleksei-Litsov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+\n+    @Rule\n+    public ExpectedException expectedEx = ExpectedException.none();\n+\n+    @Test\n+    public void testCheckEmptySchema() {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4OTc4NQ=="}, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTA5NDk1OnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzozOToyOVrOF3QuXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODo1NDozNlrOF3S5FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ5MDAxMw==", "bodyText": "Empty line.", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393490013", "createdAt": "2020-03-17T07:39:29Z", "author": {"login": "AMashenkov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+\n+    @Rule\n+    public ExpectedException expectedEx = ExpectedException.none();\n+\n+    @Test\n+    public void testCheckEmptySchema() {\n+\n+        expectedEx.expect(IgniteSQLException.class);\n+        expectedEx.expectMessage(\"Failed to set schema for DB connection. \" +\n+                \"Schema name could not be an empty string\"\n+        );\n+\n+        String sqlQuery = \"SELECT * FROM Employee limit 1\";\n+\n+        testAllNodes(node -> {\n+            executeFrom(sqlQuery, node, \"\");\n+            executeFrom(sqlQuery, node, \" \");\n+            assertTrue(\"Check valid schema\",\n+                    executeFrom(sqlQuery, node, \"PUBLIC\").values().stream().count() > 0\n+            );\n+            assertTrue(\"Check null schema\",\n+                    executeFrom(sqlQuery, node, null).values().stream().count() > 0\n+            );\n+        });\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNTUyNA==", "bodyText": "fixed", "url": "https://github.com/apache/ignite/pull/7521#discussion_r393525524", "createdAt": "2020-03-17T08:54:36Z", "author": {"login": "Aleksei-Litsov"}, "path": "modules/indexing/src/test/java/org/apache/ignite/sqltests/BaseSqlTest.java", "diffHunk": "@@ -1249,6 +1255,36 @@ public void testFullOuterDistributedJoinIsNotSupported() {\n         });\n     }\n \n+    /**\n+     * Check schema for validation\n+     */\n+\n+    @Rule\n+    public ExpectedException expectedEx = ExpectedException.none();\n+\n+    @Test\n+    public void testCheckEmptySchema() {\n+\n+        expectedEx.expect(IgniteSQLException.class);\n+        expectedEx.expectMessage(\"Failed to set schema for DB connection. \" +\n+                \"Schema name could not be an empty string\"\n+        );\n+\n+        String sqlQuery = \"SELECT * FROM Employee limit 1\";\n+\n+        testAllNodes(node -> {\n+            executeFrom(sqlQuery, node, \"\");\n+            executeFrom(sqlQuery, node, \" \");\n+            assertTrue(\"Check valid schema\",\n+                    executeFrom(sqlQuery, node, \"PUBLIC\").values().stream().count() > 0\n+            );\n+            assertTrue(\"Check null schema\",\n+                    executeFrom(sqlQuery, node, null).values().stream().count() > 0\n+            );\n+        });\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ5MDAxMw=="}, "originalCommit": {"oid": "cb297c544c8e93e3bf1eb48227a3bcb2a46d629b"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2527, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}