{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNTM0Mzgw", "number": 7404, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzowODowM1rODf4jzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoxMjowNFrODf4nrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU5MTE4OnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzowODowM1rOFp2AZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDo1Nzo1OVrOFp5Tjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMDc3Mw==", "bodyText": "You could just analyze return value of cols.put instead of using containsKey", "url": "https://github.com/apache/ignite/pull/7404#discussion_r379420773", "createdAt": "2020-02-14T13:08:03Z", "author": {"login": "joooger"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java", "diffHunk": "@@ -1181,8 +1181,12 @@ private GridSqlCreateTable parseCreateTable(CreateTable createTbl) {\n \n         LinkedHashMap<String, GridSqlColumn> cols = new LinkedHashMap<>(data.columns.size());\n \n-        for (Column col : data.columns)\n+        for (Column col : data.columns) {\n+            if (cols.containsKey(col.getName()))\n+                throw new IgniteSQLException(\"Duplicate column name: \" + col.getName(), IgniteQueryErrorCode.PARSING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ffbd7142af9c05d6dba61f725cf3566bf7d7532"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NDgzMQ==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/7404#discussion_r379474831", "createdAt": "2020-02-14T14:57:59Z", "author": {"login": "sergeyuttsel"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java", "diffHunk": "@@ -1181,8 +1181,12 @@ private GridSqlCreateTable parseCreateTable(CreateTable createTbl) {\n \n         LinkedHashMap<String, GridSqlColumn> cols = new LinkedHashMap<>(data.columns.size());\n \n-        for (Column col : data.columns)\n+        for (Column col : data.columns) {\n+            if (cols.containsKey(col.getName()))\n+                throw new IgniteSQLException(\"Duplicate column name: \" + col.getName(), IgniteQueryErrorCode.PARSING);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMDc3Mw=="}, "originalCommit": {"oid": "0ffbd7142af9c05d6dba61f725cf3566bf7d7532"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU5NDE1OnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlQueryErrorSelfTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzowOToxMlrOFp2COA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDo1ODowM1rOFp5TrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMTI0MA==", "bodyText": "Let's add another one check with different type of columns with the same name", "url": "https://github.com/apache/ignite/pull/7404#discussion_r379421240", "createdAt": "2020-02-14T13:09:12Z", "author": {"login": "joooger"}, "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlQueryErrorSelfTest.java", "diffHunk": "@@ -160,6 +160,12 @@ public void testDdlWrongColumnName() throws Exception {\n \n         checkSqlErrorMessage(\"alter table test drop column wrong\",\n             \"Failed to parse query. Column \\\"WRONG\\\" not found\");\n+\n+        checkSqlErrorMessage(\"create table test(id integer primary key, AgE integer, AGe integer)\",\n+            \"Duplicate column name: AGE\");\n+\n+        checkSqlErrorMessage(\"create table test(\\\"id\\\" integer primary key, \\\"age\\\" integer, \\\"age\\\" integer)\",\n+            \"Duplicate column name: age\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ffbd7142af9c05d6dba61f725cf3566bf7d7532"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NDg2MQ==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/7404#discussion_r379474861", "createdAt": "2020-02-14T14:58:03Z", "author": {"login": "sergeyuttsel"}, "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheSqlQueryErrorSelfTest.java", "diffHunk": "@@ -160,6 +160,12 @@ public void testDdlWrongColumnName() throws Exception {\n \n         checkSqlErrorMessage(\"alter table test drop column wrong\",\n             \"Failed to parse query. Column \\\"WRONG\\\" not found\");\n+\n+        checkSqlErrorMessage(\"create table test(id integer primary key, AgE integer, AGe integer)\",\n+            \"Duplicate column name: AGE\");\n+\n+        checkSqlErrorMessage(\"create table test(\\\"id\\\" integer primary key, \\\"age\\\" integer, \\\"age\\\" integer)\",\n+            \"Duplicate column name: age\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMTI0MA=="}, "originalCommit": {"oid": "0ffbd7142af9c05d6dba61f725cf3566bf7d7532"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU5NTI4OnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/JdbcErrorsAbstractSelfTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzowOTo0NFrOFp2C8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDo1ODowNlrOFp5T0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMTQyNg==", "bodyText": "The same as for IgniteCacheSqlQueryErrorSelfTest.java", "url": "https://github.com/apache/ignite/pull/7404#discussion_r379421426", "createdAt": "2020-02-14T13:09:44Z", "author": {"login": "joooger"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/JdbcErrorsAbstractSelfTest.java", "diffHunk": "@@ -719,6 +719,12 @@ public void testDdlWrongColumnName() throws SQLException {\n \n         checkSqlErrorMessage(\"alter table test drop column wrong\", \"42000\",\n             \"Failed to parse query. Column \\\"WRONG\\\" not found\");\n+\n+        checkSqlErrorMessage(\"create table test(id integer primary key, AgE integer, AGe integer)\", \"42000\",\n+            \"Duplicate column name: AGE\");\n+\n+        checkSqlErrorMessage(\"create table test(\\\"id\\\" integer primary key, \\\"age\\\" integer, \\\"age\\\" integer)\", \"42000\",\n+            \"Duplicate column name: age\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ffbd7142af9c05d6dba61f725cf3566bf7d7532"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NDg5Ng==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/7404#discussion_r379474896", "createdAt": "2020-02-14T14:58:06Z", "author": {"login": "sergeyuttsel"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/JdbcErrorsAbstractSelfTest.java", "diffHunk": "@@ -719,6 +719,12 @@ public void testDdlWrongColumnName() throws SQLException {\n \n         checkSqlErrorMessage(\"alter table test drop column wrong\", \"42000\",\n             \"Failed to parse query. Column \\\"WRONG\\\" not found\");\n+\n+        checkSqlErrorMessage(\"create table test(id integer primary key, AgE integer, AGe integer)\", \"42000\",\n+            \"Duplicate column name: AGE\");\n+\n+        checkSqlErrorMessage(\"create table test(\\\"id\\\" integer primary key, \\\"age\\\" integer, \\\"age\\\" integer)\", \"42000\",\n+            \"Duplicate column name: age\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMTQyNg=="}, "originalCommit": {"oid": "0ffbd7142af9c05d6dba61f725cf3566bf7d7532"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzYwMTA4OnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoxMjowNFrOFp2Giw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNzoyNTo0NlrOFq3oDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMjM0Nw==", "bodyText": "do we have specific code for such case or may be we could add it?", "url": "https://github.com/apache/ignite/pull/7404#discussion_r379422347", "createdAt": "2020-02-14T13:12:04Z", "author": {"login": "joooger"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java", "diffHunk": "@@ -1181,8 +1181,12 @@ private GridSqlCreateTable parseCreateTable(CreateTable createTbl) {\n \n         LinkedHashMap<String, GridSqlColumn> cols = new LinkedHashMap<>(data.columns.size());\n \n-        for (Column col : data.columns)\n+        for (Column col : data.columns) {\n+            if (cols.containsKey(col.getName()))\n+                throw new IgniteSQLException(\"Duplicate column name: \" + col.getName(), IgniteQueryErrorCode.PARSING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ffbd7142af9c05d6dba61f725cf3566bf7d7532"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NTA1MA==", "bodyText": "There are exists TABLE_DROP_FAILED.\nSo I added TABLE_CREATE_FAILED.", "url": "https://github.com/apache/ignite/pull/7404#discussion_r379475050", "createdAt": "2020-02-14T14:58:21Z", "author": {"login": "sergeyuttsel"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java", "diffHunk": "@@ -1181,8 +1181,12 @@ private GridSqlCreateTable parseCreateTable(CreateTable createTbl) {\n \n         LinkedHashMap<String, GridSqlColumn> cols = new LinkedHashMap<>(data.columns.size());\n \n-        for (Column col : data.columns)\n+        for (Column col : data.columns) {\n+            if (cols.containsKey(col.getName()))\n+                throw new IgniteSQLException(\"Duplicate column name: \" + col.getName(), IgniteQueryErrorCode.PARSING);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMjM0Nw=="}, "originalCommit": {"oid": "0ffbd7142af9c05d6dba61f725cf3566bf7d7532"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE2MjY4Mw==", "bodyText": "Seems your first varian was better. Let's return PARSING error.", "url": "https://github.com/apache/ignite/pull/7404#discussion_r380162683", "createdAt": "2020-02-17T12:48:29Z", "author": {"login": "joooger"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java", "diffHunk": "@@ -1181,8 +1181,12 @@ private GridSqlCreateTable parseCreateTable(CreateTable createTbl) {\n \n         LinkedHashMap<String, GridSqlColumn> cols = new LinkedHashMap<>(data.columns.size());\n \n-        for (Column col : data.columns)\n+        for (Column col : data.columns) {\n+            if (cols.containsKey(col.getName()))\n+                throw new IgniteSQLException(\"Duplicate column name: \" + col.getName(), IgniteQueryErrorCode.PARSING);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMjM0Nw=="}, "originalCommit": {"oid": "0ffbd7142af9c05d6dba61f725cf3566bf7d7532"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ5NTg4NA==", "bodyText": "Done", "url": "https://github.com/apache/ignite/pull/7404#discussion_r380495884", "createdAt": "2020-02-18T07:25:46Z", "author": {"login": "sergeyuttsel"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlQueryParser.java", "diffHunk": "@@ -1181,8 +1181,12 @@ private GridSqlCreateTable parseCreateTable(CreateTable createTbl) {\n \n         LinkedHashMap<String, GridSqlColumn> cols = new LinkedHashMap<>(data.columns.size());\n \n-        for (Column col : data.columns)\n+        for (Column col : data.columns) {\n+            if (cols.containsKey(col.getName()))\n+                throw new IgniteSQLException(\"Duplicate column name: \" + col.getName(), IgniteQueryErrorCode.PARSING);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyMjM0Nw=="}, "originalCommit": {"oid": "0ffbd7142af9c05d6dba61f725cf3566bf7d7532"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2552, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}