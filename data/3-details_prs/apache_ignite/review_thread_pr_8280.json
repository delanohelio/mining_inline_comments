{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyOTQ5OTQ4", "number": 8280, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMTowNjowNFrOEoQieA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMTowODowMVrOEoQk7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNjQ5NDY0OnYy", "diffSide": "RIGHT", "path": "docs/_docs/sql-reference/operational-commands.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMTowNjowNFrOHZPnrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMjowNjowNlrOHaaTfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzMjM2Ng==", "bodyText": "Could you please wrap this command example (and all others down below) up with the ascii [tabs] tag? Where the first tab shows the snipped for Unix systems (control.sh) while the second is dedicated for Windows users (control.bat)?\nHere is an example:\nhttps://github.com/apache/ignite/blame/IGNITE-7595/docs/_docs/includes/starting-node.adoc#L10", "url": "https://github.com/apache/ignite/pull/8280#discussion_r496232366", "createdAt": "2020-09-28T21:06:04Z", "author": {"login": "dmagda"}, "path": "docs/_docs/sql-reference/operational-commands.adoc", "diffHunk": "@@ -113,3 +113,120 @@ After executing the above command and *closing the JDBC connection*, all data wi\n image::images/set-streaming.png[]\n \n \n+== KILL QUERY\n+\n+The `KILL QUERY` command allows you to cancel a running query.\n+\n+[source,sql]\n+----\n+KILL QUERY {ASYNC} '<query_id>'\n+----\n+\n+=== Description\n+`ASYNC` is an optional parameter which returns control immediately without waiting for the cancellation to finish, and `query_id` can be retrieved via the `SQL_QUERIES` view.\n+\n+When a query cancelled via the `KILL` command, all parts of the query running on all other nodes are cancelled.\n+\n+This command available via JMX and CMD, also:\n+\n+- `QueryMXBean#cancelSQL`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ab4655eab68f5caa532527ec482e03632a4c0d4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ1NTk5Ng==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8280#discussion_r497455996", "createdAt": "2020-09-30T12:06:06Z", "author": {"login": "nizhikov"}, "path": "docs/_docs/sql-reference/operational-commands.adoc", "diffHunk": "@@ -113,3 +113,120 @@ After executing the above command and *closing the JDBC connection*, all data wi\n image::images/set-streaming.png[]\n \n \n+== KILL QUERY\n+\n+The `KILL QUERY` command allows you to cancel a running query.\n+\n+[source,sql]\n+----\n+KILL QUERY {ASYNC} '<query_id>'\n+----\n+\n+=== Description\n+`ASYNC` is an optional parameter which returns control immediately without waiting for the cancellation to finish, and `query_id` can be retrieved via the `SQL_QUERIES` view.\n+\n+When a query cancelled via the `KILL` command, all parts of the query running on all other nodes are cancelled.\n+\n+This command available via JMX and CMD, also:\n+\n+- `QueryMXBean#cancelSQL`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzMjM2Ng=="}, "originalCommit": {"oid": "2ab4655eab68f5caa532527ec482e03632a4c0d4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNjQ5NjE5OnYy", "diffSide": "RIGHT", "path": "docs/_docs/sql-reference/operational-commands.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMTowNjozNFrOHZPopw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMTowNjozNFrOHZPopw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzMjYxNQ==", "bodyText": "I would add a paragraph saying how to find the \"query_id\" parameter.", "url": "https://github.com/apache/ignite/pull/8280#discussion_r496232615", "createdAt": "2020-09-28T21:06:34Z", "author": {"login": "dmagda"}, "path": "docs/_docs/sql-reference/operational-commands.adoc", "diffHunk": "@@ -113,3 +113,120 @@ After executing the above command and *closing the JDBC connection*, all data wi\n image::images/set-streaming.png[]\n \n \n+== KILL QUERY\n+\n+The `KILL QUERY` command allows you to cancel a running query.\n+\n+[source,sql]\n+----\n+KILL QUERY {ASYNC} '<query_id>'\n+----\n+\n+=== Description\n+`ASYNC` is an optional parameter which returns control immediately without waiting for the cancellation to finish, and `query_id` can be retrieved via the `SQL_QUERIES` view.\n+\n+When a query cancelled via the `KILL` command, all parts of the query running on all other nodes are cancelled.\n+\n+This command available via JMX and CMD, also:\n+\n+- `QueryMXBean#cancelSQL`\n+- `./control.sh --kill SQL query_id`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ab4655eab68f5caa532527ec482e03632a4c0d4"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNjQ5NzcyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/sql-reference/operational-commands.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMTowNzowMlrOHZPplA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDowNzozNVrOHaWiQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzMjg1Mg==", "bodyText": "I would add an explanation on how to find the \"xid\" that needs to be passed into this command.", "url": "https://github.com/apache/ignite/pull/8280#discussion_r496232852", "createdAt": "2020-09-28T21:07:02Z", "author": {"login": "dmagda"}, "path": "docs/_docs/sql-reference/operational-commands.adoc", "diffHunk": "@@ -113,3 +113,120 @@ After executing the above command and *closing the JDBC connection*, all data wi\n image::images/set-streaming.png[]\n \n \n+== KILL QUERY\n+\n+The `KILL QUERY` command allows you to cancel a running query.\n+\n+[source,sql]\n+----\n+KILL QUERY {ASYNC} '<query_id>'\n+----\n+\n+=== Description\n+`ASYNC` is an optional parameter which returns control immediately without waiting for the cancellation to finish, and `query_id` can be retrieved via the `SQL_QUERIES` view.\n+\n+When a query cancelled via the `KILL` command, all parts of the query running on all other nodes are cancelled.\n+\n+This command available via JMX and CMD, also:\n+\n+- `QueryMXBean#cancelSQL`\n+- `./control.sh --kill SQL query_id`\n+\n+== KILL TRANSACTION\n+\n+The `KILL TRANSACTION` command allows you to cancel a running transaction.\n+\n+[source,sql]\n+----\n+KILL TRANSACTION 'xid'\n+----\n+\n+=== Description\n+`xid` of the transaction can be retrived via the `TRANSACTIONS` view.\n+\n+This command available via JMX and CMD, also:\n+\n+- `TransactionMXBean#cancel`\n+- `./control.sh --kill TRANSACTION xid`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ab4655eab68f5caa532527ec482e03632a4c0d4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5NDI0MA==", "bodyText": "I explained it few lines above:\nxid of the transaction can be retrived via the TRANSACTIONS view.", "url": "https://github.com/apache/ignite/pull/8280#discussion_r497394240", "createdAt": "2020-09-30T10:07:35Z", "author": {"login": "nizhikov"}, "path": "docs/_docs/sql-reference/operational-commands.adoc", "diffHunk": "@@ -113,3 +113,120 @@ After executing the above command and *closing the JDBC connection*, all data wi\n image::images/set-streaming.png[]\n \n \n+== KILL QUERY\n+\n+The `KILL QUERY` command allows you to cancel a running query.\n+\n+[source,sql]\n+----\n+KILL QUERY {ASYNC} '<query_id>'\n+----\n+\n+=== Description\n+`ASYNC` is an optional parameter which returns control immediately without waiting for the cancellation to finish, and `query_id` can be retrieved via the `SQL_QUERIES` view.\n+\n+When a query cancelled via the `KILL` command, all parts of the query running on all other nodes are cancelled.\n+\n+This command available via JMX and CMD, also:\n+\n+- `QueryMXBean#cancelSQL`\n+- `./control.sh --kill SQL query_id`\n+\n+== KILL TRANSACTION\n+\n+The `KILL TRANSACTION` command allows you to cancel a running transaction.\n+\n+[source,sql]\n+----\n+KILL TRANSACTION 'xid'\n+----\n+\n+=== Description\n+`xid` of the transaction can be retrived via the `TRANSACTIONS` view.\n+\n+This command available via JMX and CMD, also:\n+\n+- `TransactionMXBean#cancel`\n+- `./control.sh --kill TRANSACTION xid`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzMjg1Mg=="}, "originalCommit": {"oid": "2ab4655eab68f5caa532527ec482e03632a4c0d4"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNjUwMDk0OnYy", "diffSide": "RIGHT", "path": "docs/_docs/sql-reference/operational-commands.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMTowODowMVrOHZPrhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDoxMDoxOFrOHaWoGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzMzM0OQ==", "bodyText": "Same here. Let's explain how to find the \"session_id\" and the \"routine_id\" for the continuous query-specific command below.", "url": "https://github.com/apache/ignite/pull/8280#discussion_r496233349", "createdAt": "2020-09-28T21:08:01Z", "author": {"login": "dmagda"}, "path": "docs/_docs/sql-reference/operational-commands.adoc", "diffHunk": "@@ -113,3 +113,120 @@ After executing the above command and *closing the JDBC connection*, all data wi\n image::images/set-streaming.png[]\n \n \n+== KILL QUERY\n+\n+The `KILL QUERY` command allows you to cancel a running query.\n+\n+[source,sql]\n+----\n+KILL QUERY {ASYNC} '<query_id>'\n+----\n+\n+=== Description\n+`ASYNC` is an optional parameter which returns control immediately without waiting for the cancellation to finish, and `query_id` can be retrieved via the `SQL_QUERIES` view.\n+\n+When a query cancelled via the `KILL` command, all parts of the query running on all other nodes are cancelled.\n+\n+This command available via JMX and CMD, also:\n+\n+- `QueryMXBean#cancelSQL`\n+- `./control.sh --kill SQL query_id`\n+\n+== KILL TRANSACTION\n+\n+The `KILL TRANSACTION` command allows you to cancel a running transaction.\n+\n+[source,sql]\n+----\n+KILL TRANSACTION 'xid'\n+----\n+\n+=== Description\n+`xid` of the transaction can be retrived via the `TRANSACTIONS` view.\n+\n+This command available via JMX and CMD, also:\n+\n+- `TransactionMXBean#cancel`\n+- `./control.sh --kill TRANSACTION xid`\n+\n+== KILL SCAN\n+\n+The `KILL SCAN` command allows you to cancel a running scan query.\n+\n+[source,sql]\n+----\n+KILL SCAN 'origin_node_id' 'cache_name' query_id\n+----\n+\n+=== Description\n+`origin_node_id`, `cache_name`, `query_id` parameters can be retrived via the `SCAN_QUERIES`.\n+\n+This command available via JMX and CMD, also:\n+\n+- `QueryMXBean#cancelScan`\n+- `./control.sh --kill SCAN origin_node_id cache_name query_id`\n+\n+=== Example\n+\n+[source,sql]\n+----\n+KILL SCAN '6fa749ee-7cf8-4635-be10-36a1c75267a7_54321' 'cache-name' 1\n+----\n+\n+== KILL COMPUTE\n+\n+The `KILL COMPUTE` command allows you to cancel a running compute.\n+\n+[source,sql]\n+----\n+KILL COMPUTE 'session_id'\n+----\n+\n+=== Description\n+`session_id` parameter can be retrived via the `TASKS` or `JOBS` view.\n+\n+This command available via JMX and CMD, also:\n+\n+- `ComputeMXBean#cancel`\n+- `./control.sh --kill COMPUTE session_id`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ab4655eab68f5caa532527ec482e03632a4c0d4"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5NTczOA==", "bodyText": "These parameters are the same as in SQL command.\nAnd I explained how to find it in the system views.", "url": "https://github.com/apache/ignite/pull/8280#discussion_r497395738", "createdAt": "2020-09-30T10:10:18Z", "author": {"login": "nizhikov"}, "path": "docs/_docs/sql-reference/operational-commands.adoc", "diffHunk": "@@ -113,3 +113,120 @@ After executing the above command and *closing the JDBC connection*, all data wi\n image::images/set-streaming.png[]\n \n \n+== KILL QUERY\n+\n+The `KILL QUERY` command allows you to cancel a running query.\n+\n+[source,sql]\n+----\n+KILL QUERY {ASYNC} '<query_id>'\n+----\n+\n+=== Description\n+`ASYNC` is an optional parameter which returns control immediately without waiting for the cancellation to finish, and `query_id` can be retrieved via the `SQL_QUERIES` view.\n+\n+When a query cancelled via the `KILL` command, all parts of the query running on all other nodes are cancelled.\n+\n+This command available via JMX and CMD, also:\n+\n+- `QueryMXBean#cancelSQL`\n+- `./control.sh --kill SQL query_id`\n+\n+== KILL TRANSACTION\n+\n+The `KILL TRANSACTION` command allows you to cancel a running transaction.\n+\n+[source,sql]\n+----\n+KILL TRANSACTION 'xid'\n+----\n+\n+=== Description\n+`xid` of the transaction can be retrived via the `TRANSACTIONS` view.\n+\n+This command available via JMX and CMD, also:\n+\n+- `TransactionMXBean#cancel`\n+- `./control.sh --kill TRANSACTION xid`\n+\n+== KILL SCAN\n+\n+The `KILL SCAN` command allows you to cancel a running scan query.\n+\n+[source,sql]\n+----\n+KILL SCAN 'origin_node_id' 'cache_name' query_id\n+----\n+\n+=== Description\n+`origin_node_id`, `cache_name`, `query_id` parameters can be retrived via the `SCAN_QUERIES`.\n+\n+This command available via JMX and CMD, also:\n+\n+- `QueryMXBean#cancelScan`\n+- `./control.sh --kill SCAN origin_node_id cache_name query_id`\n+\n+=== Example\n+\n+[source,sql]\n+----\n+KILL SCAN '6fa749ee-7cf8-4635-be10-36a1c75267a7_54321' 'cache-name' 1\n+----\n+\n+== KILL COMPUTE\n+\n+The `KILL COMPUTE` command allows you to cancel a running compute.\n+\n+[source,sql]\n+----\n+KILL COMPUTE 'session_id'\n+----\n+\n+=== Description\n+`session_id` parameter can be retrived via the `TASKS` or `JOBS` view.\n+\n+This command available via JMX and CMD, also:\n+\n+- `ComputeMXBean#cancel`\n+- `./control.sh --kill COMPUTE session_id`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzMzM0OQ=="}, "originalCommit": {"oid": "2ab4655eab68f5caa532527ec482e03632a4c0d4"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2690, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}