{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NjcwNDcz", "number": 7747, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOTowNToxNlrOD22YWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDoxMjo1OVrOD3j9Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4ODQwNjY3OnYy", "diffSide": "RIGHT", "path": "modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOTowNToxNlrOGMzLHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOTowNToxNlrOGMzLHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA3NDUyNQ==", "bodyText": "I suggesting fix all similar tests:\nSystemViewSelfTest#testContinuousQuery\nJmxExporterSpiTest#testContinuousQuery\nSqlViewExporterSpiTest#testContinuousQuery", "url": "https://github.com/apache/ignite/pull/7747#discussion_r416074525", "createdAt": "2020-04-27T19:05:16Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/metric/SystemViewSelfTest.java", "diffHunk": "@@ -526,7 +526,7 @@ public void testContinuousQuery() throws Exception {\n             }\n \n             assertEquals(0, origQrys.size());\n-            assertEquals(0, remoteQrys.size());\n+            assertTrue(waitForCondition(() -> remoteQrys.size() == 0, getTestTimeout()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35e2bb50a4fa930730df45d542f3c2ef28b9267a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTg3MzUwOnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDoxMjo1OVrOGN4TEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMDozNjo1NlrOGN5Crg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNzA1OQ==", "bodyText": "Should we use the same waitForCondition as well?", "url": "https://github.com/apache/ignite/pull/7747#discussion_r417207059", "createdAt": "2020-04-29T10:12:59Z", "author": {"login": "Mmuzaf"}, "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java", "diffHunk": "@@ -560,7 +560,8 @@ public void testContinuousQuery() throws Exception {\n         }\n \n         assertTrue(execute(ignite0, \"SELECT * FROM SYS.CONTINUOUS_QUERIES\").isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98e3189717c1945bcc2ca1268c1adf5bee14dbeb"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIxOTI0Ng==", "bodyText": "For local node QueryCursor#close gives guarantees that CQ will be unregistered before method returns. See GridContinuousProcessor#stopRoutine::1094", "url": "https://github.com/apache/ignite/pull/7747#discussion_r417219246", "createdAt": "2020-04-29T10:36:56Z", "author": {"login": "ololo3000"}, "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/metric/SqlViewExporterSpiTest.java", "diffHunk": "@@ -560,7 +560,8 @@ public void testContinuousQuery() throws Exception {\n         }\n \n         assertTrue(execute(ignite0, \"SELECT * FROM SYS.CONTINUOUS_QUERIES\").isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNzA1OQ=="}, "originalCommit": {"oid": "98e3189717c1945bcc2ca1268c1adf5bee14dbeb"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2470, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}