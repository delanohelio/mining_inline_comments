{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MjI2MTI0", "number": 7714, "title": "IGNITE-12930 DistributedProcess fails node if unable to send single message to coordinator", "bodyText": "Fix node failing if a coordinator failed", "createdAt": "2020-04-22T11:24:45Z", "url": "https://github.com/apache/ignite/pull/7714", "merged": true, "mergeCommit": {"oid": "45e525865c6c93b999ab5030d7568add0bde96a2"}, "closed": true, "closedAt": "2020-07-23T15:57:09Z", "author": {"login": "NSAmelchev"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaIB19AH2gAyNDA3MjI2MTI0Ojg0MWEzNDcyMjFiMzYzZjgyZjdmZDMwNjBmNjgyODkwYjkzZWZkMWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2yDSNAH2gAyNDA3MjI2MTI0OmY0ZmM1YTA1NTI1NTViNGZlZGJmYzI3OTVhNDg3MDQzMGY1MzIxZGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "841a347221b363f82f7fd3060f682890b93efd1a", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/841a347221b363f82f7fd3060f682890b93efd1a", "committedDate": "2020-04-22T13:09:22Z", "message": "Fix node failing if coordinator failed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1ccc9c8aa62387cd60bcd9cc8e52f95ee7b3194", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/a1ccc9c8aa62387cd60bcd9cc8e52f95ee7b3194", "committedDate": "2020-04-22T13:04:55Z", "message": "Fix test timeout"}, "afterCommit": {"oid": "841a347221b363f82f7fd3060f682890b93efd1a", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/841a347221b363f82f7fd3060f682890b93efd1a", "committedDate": "2020-04-22T13:09:22Z", "message": "Fix node failing if coordinator failed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4OTY1ODY3", "url": "https://github.com/apache/ignite/pull/7714#pullrequestreview-398965867", "createdAt": "2020-04-23T10:26:57Z", "commit": {"oid": "841a347221b363f82f7fd3060f682890b93efd1a"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDoyNjo1OFrOGKiNLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDozNTozNFrOGKih-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY5OTM3NQ==", "bodyText": "initilized -> initialized", "url": "https://github.com/apache/ignite/pull/7714#discussion_r413699375", "createdAt": "2020-04-23T10:26:58Z", "author": {"login": "Mmuzaf"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/util/distributed/DistributedProcess.java", "diffHunk": "@@ -257,11 +258,20 @@ private void sendSingleMessage(Process p) {\n         SingleNodeMessage<R> singleMsg = new SingleNodeMessage<>(p.id, type, p.resFut.result(),\n             (Exception)p.resFut.error());\n \n-        if (F.eq(ctx.localNodeId(), p.crdId))\n-            onSingleNodeMessageReceived(singleMsg, p.crdId);\n+        UUID crdId = p.crdId;\n+\n+        if (F.eq(ctx.localNodeId(), crdId))\n+            onSingleNodeMessageReceived(singleMsg, crdId);\n         else {\n             try {\n-                ctx.io().sendToGridTopic(p.crdId, GridTopic.TOPIC_DISTRIBUTED_PROCESS, singleMsg, SYSTEM_POOL);\n+                ctx.io().sendToGridTopic(crdId, GridTopic.TOPIC_DISTRIBUTED_PROCESS, singleMsg, SYSTEM_POOL);\n+            }\n+            catch (ClusterTopologyCheckedException e) {\n+                // The coordinator was failed. The single message will be sent when a new coordinator initilized.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841a347221b363f82f7fd3060f682890b93efd1a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcwMDE3OA==", "bodyText": "Can you please check, do we need logging here? It seems FailureHandler will log exactly the same message.", "url": "https://github.com/apache/ignite/pull/7714#discussion_r413700178", "createdAt": "2020-04-23T10:28:18Z", "author": {"login": "Mmuzaf"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/util/distributed/DistributedProcess.java", "diffHunk": "@@ -257,11 +258,20 @@ private void sendSingleMessage(Process p) {\n         SingleNodeMessage<R> singleMsg = new SingleNodeMessage<>(p.id, type, p.resFut.result(),\n             (Exception)p.resFut.error());\n \n-        if (F.eq(ctx.localNodeId(), p.crdId))\n-            onSingleNodeMessageReceived(singleMsg, p.crdId);\n+        UUID crdId = p.crdId;\n+\n+        if (F.eq(ctx.localNodeId(), crdId))\n+            onSingleNodeMessageReceived(singleMsg, crdId);\n         else {\n             try {\n-                ctx.io().sendToGridTopic(p.crdId, GridTopic.TOPIC_DISTRIBUTED_PROCESS, singleMsg, SYSTEM_POOL);\n+                ctx.io().sendToGridTopic(crdId, GridTopic.TOPIC_DISTRIBUTED_PROCESS, singleMsg, SYSTEM_POOL);\n+            }\n+            catch (ClusterTopologyCheckedException e) {\n+                // The coordinator was failed. The single message will be sent when a new coordinator initilized.\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Failed to send a single message to coordinator: [crdId=\" + crdId +\n+                        \", processId=\" + p.id +\", error=\" + e.getMessage() + ']');\n+                }\n             }\n             catch (IgniteCheckedException e) {\n                 log.error(\"Unable to send message to coordinator.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841a347221b363f82f7fd3060f682890b93efd1a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcwMTcxOA==", "bodyText": "Personally, I don't support such cases.\n\nwe can use the DEFAULT type of the distributed process which can be used on all nodes. It's also nice to mention that a newly created distributed process must be registered on all nodes (e.g. via compute?).\nalready existing types can be also reused in tests.", "url": "https://github.com/apache/ignite/pull/7714#discussion_r413701718", "createdAt": "2020-04-23T10:30:51Z", "author": {"login": "Mmuzaf"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/util/distributed/DistributedProcess.java", "diffHunk": "@@ -367,6 +377,9 @@ private Process(UUID id) {\n \n     /** Defines distributed processes. */\n     public enum DistributedProcessType {\n+        /** For test purpose only. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841a347221b363f82f7fd3060f682890b93efd1a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcwMzQ1NQ==", "bodyText": "Should we release latch only after the single-message future completed? It's still possible that a new coordinator will be assigned prior to the single message sent.", "url": "https://github.com/apache/ignite/pull/7714#discussion_r413703455", "createdAt": "2020-04-23T10:33:32Z", "author": {"login": "Mmuzaf"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/util/DistributedProcessCoordinatorLeftTest.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.util;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.UUID;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import org.apache.ignite.Ignite;\n+import org.apache.ignite.configuration.IgniteConfiguration;\n+import org.apache.ignite.failure.FailureContext;\n+import org.apache.ignite.failure.FailureHandler;\n+import org.apache.ignite.internal.IgniteEx;\n+import org.apache.ignite.internal.util.distributed.DistributedProcess;\n+import org.apache.ignite.internal.util.typedef.G;\n+import org.apache.ignite.testframework.GridTestUtils;\n+import org.apache.ignite.testframework.ListeningTestLogger;\n+import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;\n+import org.junit.Test;\n+\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+import static org.apache.ignite.events.EventType.EVT_NODE_FAILED;\n+import static org.apache.ignite.events.EventType.EVT_NODE_LEFT;\n+import static org.apache.ignite.internal.util.distributed.DistributedProcess.DistributedProcessType.TEST_PROCESS;\n+\n+/**\n+ * Tests {@link DistributedProcess} in case of coordinator node left.\n+ */\n+public class DistributedProcessCoordinatorLeftTest extends GridCommonAbstractTest {\n+    /** */\n+    public static final long TIMEOUT = 20_000L;\n+\n+    /** */\n+    public static final int NODES_CNT = 3;\n+\n+    /** Latch to send single message on node left. */\n+    private final CountDownLatch nodeLeftLatch = new CountDownLatch(NODES_CNT - 1);\n+\n+    /** Latch to await sending single messages to a failed coordinator. */\n+    private final CountDownLatch msgSendLatch = new CountDownLatch(NODES_CNT - 1);\n+\n+    /** Failure handler invocation flag. */\n+    private final AtomicBoolean failure = new AtomicBoolean();\n+\n+    /** */\n+    private final ListeningTestLogger listeningLog = new ListeningTestLogger(true, log);\n+\n+    /** {@inheritDoc} */\n+    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {\n+        IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);\n+\n+        cfg.setGridLogger(listeningLog);\n+\n+        cfg.setLocalEventListeners(Collections.singletonMap(event -> {\n+            nodeLeftLatch.countDown();\n+\n+            try {\n+                msgSendLatch.await();\n+            }\n+            catch (InterruptedException e) {\n+                fail(\"Unexpected interrupt.\");\n+            }\n+\n+            return false;\n+        }, new int[] {EVT_NODE_LEFT, EVT_NODE_FAILED}));\n+\n+        cfg.setFailureHandler(new FailureHandler() {\n+            @Override public boolean onFailure(Ignite ignite, FailureContext failureCtx) {\n+                failure.set(true);\n+\n+                return false;\n+            }\n+        });\n+\n+        return cfg;\n+    }\n+\n+    /**\n+     * Tests that coordinator failing during sending single result not cause node failure and the process finishes.\n+     *\n+     * <ol>\n+     *  <li>Start new process of {@link DistributedProcess}.</li>\n+     *  <li>The coordinator fails.</li>\n+     *  <li>Nodes try to send a single message to the not-alive coordinator.</li>\n+     *  <li>{@link DistributedProcess} process a node left event and reinitialize a new coordinator.</li>\n+     *  <li>Process finishes.</li>\n+     * </ol>\n+     *\n+     * @throws Exception If failed.\n+     */\n+    @Test\n+    public void testCoordinatorFailed() throws Exception {\n+        startGrids(NODES_CNT);\n+\n+        CountDownLatch startLatch = new CountDownLatch(NODES_CNT);\n+        CountDownLatch finishLatch = new CountDownLatch(NODES_CNT - 1);\n+\n+        HashMap<String, DistributedProcess<Integer, Integer>> processes = new HashMap<>();\n+\n+        int processRes = 1;\n+\n+        for (Ignite grid : G.allGrids()) {\n+            DistributedProcess<Integer, Integer> dp = new DistributedProcess<>(((IgniteEx)grid).context(), TEST_PROCESS,\n+                req -> GridTestUtils.runAsync(() -> {\n+                    startLatch.countDown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841a347221b363f82f7fd3060f682890b93efd1a"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcwNDA3Mw==", "bodyText": "was failed -> has failed?", "url": "https://github.com/apache/ignite/pull/7714#discussion_r413704073", "createdAt": "2020-04-23T10:34:29Z", "author": {"login": "Mmuzaf"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/util/distributed/DistributedProcess.java", "diffHunk": "@@ -257,11 +258,20 @@ private void sendSingleMessage(Process p) {\n         SingleNodeMessage<R> singleMsg = new SingleNodeMessage<>(p.id, type, p.resFut.result(),\n             (Exception)p.resFut.error());\n \n-        if (F.eq(ctx.localNodeId(), p.crdId))\n-            onSingleNodeMessageReceived(singleMsg, p.crdId);\n+        UUID crdId = p.crdId;\n+\n+        if (F.eq(ctx.localNodeId(), crdId))\n+            onSingleNodeMessageReceived(singleMsg, crdId);\n         else {\n             try {\n-                ctx.io().sendToGridTopic(p.crdId, GridTopic.TOPIC_DISTRIBUTED_PROCESS, singleMsg, SYSTEM_POOL);\n+                ctx.io().sendToGridTopic(crdId, GridTopic.TOPIC_DISTRIBUTED_PROCESS, singleMsg, SYSTEM_POOL);\n+            }\n+            catch (ClusterTopologyCheckedException e) {\n+                // The coordinator was failed. The single message will be sent when a new coordinator initilized.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841a347221b363f82f7fd3060f682890b93efd1a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcwNDY5OA==", "bodyText": "I don't think we need such comments :-)", "url": "https://github.com/apache/ignite/pull/7714#discussion_r413704698", "createdAt": "2020-04-23T10:35:34Z", "author": {"login": "Mmuzaf"}, "path": "modules/core/src/test/java/org/apache/ignite/testsuites/IgniteUtilSelfTestSuite.java", "diffHunk": "@@ -136,7 +137,10 @@\n     // control.sh\n     CommandHandlerParsingTest.class,\n \n-    GridCountDownCallbackTest.class\n+    GridCountDownCallbackTest.class,\n+\n+    // Distributed process.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841a347221b363f82f7fd3060f682890b93efd1a"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5e57209bb02ec592263fa78eed5bb6aedca8115", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/f5e57209bb02ec592263fa78eed5bb6aedca8115", "committedDate": "2020-04-23T11:33:53Z", "message": "Review fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f289ff26eac87d891039eeb0d1f7d3828ca89b0e", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/f289ff26eac87d891039eeb0d1f7d3828ca89b0e", "committedDate": "2020-04-23T11:45:57Z", "message": "Fix event listener removing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0afff8f6ccbeef467365ecf43a187ef38657e369", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/0afff8f6ccbeef467365ecf43a187ef38657e369", "committedDate": "2020-04-23T12:30:16Z", "message": "Enum override"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03ab0f4eb369834c47e25d8fe9a70570edaa0f47", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/03ab0f4eb369834c47e25d8fe9a70570edaa0f47", "committedDate": "2020-04-23T14:05:57Z", "message": "Fix codestyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60f81a66b3526f0510564a5d91962a19abcf6539", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/60f81a66b3526f0510564a5d91962a19abcf6539", "committedDate": "2020-04-23T16:31:09Z", "message": "Use fut listener to release msg sent latch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "965eae8f08517450359a57cb9f625a12a8699792", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/965eae8f08517450359a57cb9f625a12a8699792", "committedDate": "2020-04-23T16:40:41Z", "message": "Add javadocs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cea91c101b3ae5bf1855dba68f2fa832b55b6da6", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/cea91c101b3ae5bf1855dba68f2fa832b55b6da6", "committedDate": "2020-04-23T19:06:23Z", "message": "Fix startLatch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d3021974a8c06c899c782673b69c38c1920f32e", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/2d3021974a8c06c899c782673b69c38c1920f32e", "committedDate": "2020-05-02T10:57:18Z", "message": "Merge branch 'master' into ignite-12930\n\n# Conflicts:\n#\tmodules/core/src/main/java/org/apache/ignite/internal/util/distributed/DistributedProcess.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "352a94bf62c09e99a72726b368f00cdd4cf21887", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/352a94bf62c09e99a72726b368f00cdd4cf21887", "committedDate": "2020-05-02T11:05:29Z", "message": "Without Enum override in tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8798269afcd35b8c736a68fe3b693d3e649148ca", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/8798269afcd35b8c736a68fe3b693d3e649148ca", "committedDate": "2020-05-02T11:13:12Z", "message": "Fix codestyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edfd4f784ddceffe9545a7e927b177b4c06e6e34", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/edfd4f784ddceffe9545a7e927b177b4c06e6e34", "committedDate": "2020-07-10T08:08:03Z", "message": "Merge branch 'master' into ignite-12930\n\n# Conflicts:\n#\tmodules/core/src/test/java/org/apache/ignite/testsuites/IgniteUtilSelfTestSuite.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4fc5a0552555b4fedbfc2795a4870430f5321da", "author": {"user": {"login": "NSAmelchev", "name": "Nikita Amelchev"}}, "url": "https://github.com/apache/ignite/commit/f4fc5a0552555b4fedbfc2795a4870430f5321da", "committedDate": "2020-07-20T13:56:50Z", "message": "Merge branch 'master' into ignite-12930"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2581, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}