{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTE3OTEy", "number": 8128, "reviewThreads": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxMDoyNlrOEg4Axw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMzowOTowN1rOEj0s2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTA3NTkxOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxMDoyN1rOHN5aNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToyMTowMlrOHOYYSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNDEzMw==", "bodyText": "At runtime, you can create multiple snapshots of all configured persistent cache groups.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484334133", "createdAt": "2020-09-07T10:10:27Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MTU0Ng==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484841546", "createdAt": "2020-09-08T11:21:02Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNDEzMw=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTA4MTEwOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxMTo1OFrOHN5dUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxOTo0M1rOHOYV7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNDkzMA==", "bodyText": "'stored' ---> 'is stored'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484334930", "createdAt": "2020-09-07T10:11:58Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MDk0Mw==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484840943", "createdAt": "2020-09-08T11:19:43Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNDkzMA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTA4NTYyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxMzoxNVrOHN5f_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxOToyOVrOHOYVaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNTYxNA==", "bodyText": "'for each node' maybe? The data is stored on disk in files for each node?", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484335614", "createdAt": "2020-09-07T10:13:15Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MDgxMQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484840811", "createdAt": "2020-09-08T11:19:29Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNTYxNA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTA4NzM1OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxMzo0NFrOHN5hDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxMzo0NFrOHN5hDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNTg4Ng==", "bodyText": "'...(cache group partition files, configuration files, binary metadata), the snapshot will...'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484335886", "createdAt": "2020-09-07T10:13:44Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTA5MDU5OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxNDozOVrOHN5jDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxNTo0MFrOHOYOLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNjM5OA==", "bodyText": "'ids' ---> 'IDs'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484336398", "createdAt": "2020-09-07T10:14:39Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzODk1OQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484838959", "createdAt": "2020-09-08T11:15:40Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNjM5OA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTA5Mzc1OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxNTozNVrOHN5k9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxNToxMlrOHOYNNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNjg4Ng==", "bodyText": "'...you created' ---> 'you've created'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484336886", "createdAt": "2020-09-07T10:15:35Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzODcxMQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484838711", "createdAt": "2020-09-08T11:15:12Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNjg4Ng=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTExMTUxOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoyMTowMVrOHN5v3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxNDo0NFrOHOYMPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzOTY3Ng==", "bodyText": "'...will be also fully consistent...' ---> '...will also be fully consistent...'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484339676", "createdAt": "2020-09-07T10:21:01Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzODQ2MA==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484838460", "createdAt": "2020-09-08T11:14:44Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzOTY3Ng=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTExOTExOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoyMzoxOFrOHN50ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxNDoyN1rOHOYLqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MDg0Mg==", "bodyText": "'... achieved...' ---> 'is achieved'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484340842", "createdAt": "2020-09-07T10:23:18Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzODMxNA==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484838314", "createdAt": "2020-09-08T11:14:27Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MDg0Mg=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTEzMDY4OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoyNjo1OFrOHN57kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxNDowOVrOHOYLIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MjY3Mg==", "bodyText": "don't understand, where 'procedure' goes... Is 'triggering the link' the procedure?", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484342672", "createdAt": "2020-09-07T10:26:58Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzODE3OA==", "bodyText": "The sentence will be compiled to this one:\nThe cluster-wide snapshot consistency achieved by triggering the Partition-Map-Exchange procedure.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484838178", "createdAt": "2020-09-08T11:14:09Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MjY3Mg=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTEzMjkyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoyNzozOFrOHN585Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxMjo1MlrOHOYIyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MzAxMw==", "bodyText": "'... finished...' ---> '...are finished...'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484343013", "createdAt": "2020-09-07T10:27:38Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNzU3Ng==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484837576", "createdAt": "2020-09-08T11:12:52Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MzAxMw=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTEzNDg2OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoyODoyMFrOHN5-Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxMjozOFrOHOYIYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MzMyMg==", "bodyText": "started ---> initiated maybe?", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484343322", "createdAt": "2020-09-07T10:28:20Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNzQ3Mg==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484837472", "createdAt": "2020-09-08T11:12:38Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MzMyMg=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTE2ODQ0OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDozODo0NFrOHN6Rww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxMTo1MFrOHOYHFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0ODM1NQ==", "bodyText": "'The consistency of local system files (e.g. cache group partition files, binary metadata files, configuration files) is achieved....'\nor\n'The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency  is achieved....'\nOtherwise, the types of local system files are away from the definition itself, and the reader could get confused.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484348355", "createdAt": "2020-09-07T10:38:44Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNzE0Mw==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484837143", "createdAt": "2020-09-08T11:11:50Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0ODM1NQ=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTE3MjI3OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDozOTo1NlrOHN6UEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxMToxMVrOHOYFwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0ODk0NA==", "bodyText": "'will require'? Why not 'requires' or 'may require', or 'might require'?", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484348944", "createdAt": "2020-09-07T10:39:56Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNjgwMg==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484836802", "createdAt": "2020-09-08T11:11:11Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0ODk0NA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTE5NzA4OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0NjozMlrOHN6ivg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowOTozNlrOHOYCeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1MjcwMg==", "bodyText": "Didn't understand the sentence. what does '... as the Ignite native persistence does with keeping nodes consistentId in snapshot directory.' mean?", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484352702", "createdAt": "2020-09-07T10:46:32Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNTk2Mg==", "bodyText": "This is how the sentence will look like after the page will be compiled:\nThe created snapshot has the same Directory Structure as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484835962", "createdAt": "2020-09-08T11:09:36Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1MjcwMg=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTUyMDU2OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjoyODowMVrOHN9iJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowNzo1MlrOHOX-yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwMTcwMw==", "bodyText": "A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484401703", "createdAt": "2020-09-07T12:28:01Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNTAxOQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484835019", "createdAt": "2020-09-08T11:07:52Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwMTcwMw=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTUzNzkxOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjozMzowM1rOHN9sVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowNTo1NlrOHOX7QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwNDMxMA==", "bodyText": "This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484404310", "createdAt": "2020-09-07T12:33:03Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNDExMg==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484834112", "createdAt": "2020-09-08T11:05:56Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwNDMxMA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTU0MzYyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjozNDoyNVrOHN9vdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjozNDoyNVrOHN9vdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwNTExMA==", "bodyText": "'...with your own production environment:'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484405110", "createdAt": "2020-09-07T12:34:25Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTU1MDIxOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjozNjozMFrOHN9zfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowMzoyMlrOHOX2XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwNjE0MA==", "bodyText": "taking a snapshot of a particular cache or cache group is not supported;", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484406140", "createdAt": "2020-09-07T12:36:30Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMjg2MQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484832861", "createdAt": "2020-09-08T11:03:22Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwNjE0MA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTU1MTM5OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjozNjo1MlrOHN90Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowMjo0OFrOHOX1cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwNjMzMQ==", "bodyText": "in-memory caches will not be included into a snapshot;", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484406331", "createdAt": "2020-09-07T12:36:52Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMjYyNQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484832625", "createdAt": "2020-09-08T11:02:48Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwNjMzMQ=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTU1MjMzOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjozNzowOVrOHN90zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowMjozMlrOHOX09g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwNjQ3Nw==", "bodyText": "encrypted caches are not supported and will be ignored;", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484406477", "createdAt": "2020-09-07T12:37:09Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMjUwMg==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484832502", "createdAt": "2020-09-08T11:02:32Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwNjQ3Nw=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTU3MTg0OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjo0MzowNlrOHN-AgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowMTo1NlrOHOXz8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwOTQ3Mw==", "bodyText": "you can start only one snapshot operation at a time;\nMy question is: is the snapshot operation started automatically, or it can be started manually?\nIf the answer is 'automatically', then you need to say: 'only one snapshot operation can be started at once' or\n'only one snapshot operation at a time can be started'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484409473", "createdAt": "2020-09-07T12:43:06Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMjI0Mw==", "bodyText": "I don't feel the difference, what's the point? Snapshot operations are always starting by the user through the available API. I think the correct sentence is only one snapshot operation at a time can be started as you suggested.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484832243", "createdAt": "2020-09-08T11:01:56Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwOTQ3Mw=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTU4NDgzOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjo0NzowMFrOHN-IUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1OTowM1rOHOXuQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxMTQ3NQ==", "bodyText": "...leaves the cluster", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484411475", "createdAt": "2020-09-07T12:47:00Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMDc4NQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484830785", "createdAt": "2020-09-08T10:59:03Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxMTQ3NQ=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTYwMzExOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjo1MjoxN1rOHN-TTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1ODo0NFrOHOXttg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxNDI4NA==", "bodyText": "Didn't understand the sentence. Looks like it's not finished.\nMaybe like this: 'snapshot recovery is performed at the same baseline topology with the same node consistent Id.'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484414284", "createdAt": "2020-09-07T12:52:17Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMDY0Ng==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484830646", "createdAt": "2020-09-08T10:58:44Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxNDI4NA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTYxMzc4OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjo1NToyM1rOHN-Zig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1NjozOVrOHOXpeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxNTg4Mg==", "bodyText": "The destination snapshot can be configured via IgniteConfiguration.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484415882", "createdAt": "2020-09-07T12:55:23Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyOTU2MQ==", "bodyText": "Fixed like this one\nThe destination snapshot directory can be configured via `IgniteConfiguration`.\n\nsince only the destination directory can be configured through configuration.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484829561", "createdAt": "2020-09-08T10:56:39Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxNTg4Mg=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTYxNzAxOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjo1NjoyMVrOHN-bdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1Mzo1NFrOHOXjqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxNjM3NA==", "bodyText": "'...act like a tool...'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484416374", "createdAt": "2020-09-07T12:56:21Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyODA3Mg==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484828072", "createdAt": "2020-09-08T10:53:54Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxNjM3NA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTYzNTU5OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzowMTo1M1rOHN-mfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MTowOVrOHOXeQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxOTE5OQ==", "bodyText": "'...currently running one via...'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484419199", "createdAt": "2020-09-07T13:01:53Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNjY4OQ==", "bodyText": "Fixed", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484826689", "createdAt": "2020-09-08T10:51:09Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxOTE5OQ=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTc3NDAzOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzo0NToyN1rOHN_6aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MToxNVrOHOXejQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0MDY4Mw==", "bodyText": "NOTE: Removing data from the $IGNITE_HOME/work directory is performed at your own risk.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484440683", "createdAt": "2020-09-07T13:45:27Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNjc2NQ==", "bodyText": "Fixed", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484826765", "createdAt": "2020-09-08T10:51:15Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0MDY4Mw=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTc5NjEyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzo1MTo0NlrOHOAHtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1Mjo1N1rOHOXiCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NDA4Nw==", "bodyText": "in order to recover the data from a particular snapshot, you need to start the same cluster with the same configuration...\n'configuration on these files.' - which files? Data files? Then maybe 'in these files'? Or 'of these files'?", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484444087", "createdAt": "2020-09-07T13:51:46Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNzY1OA==", "bodyText": "I've added a link to the Snapshot Structure header and also added the list of data files included into snapshot.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484827658", "createdAt": "2020-09-08T10:52:57Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NDA4Nw=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTgwMzkyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzo1Mzo0OVrOHOAMGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MDoyMFrOHOXcmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NTIxMA==", "bodyText": "It'd be better to name this section like 'Cluster restoring from a snapshot (manual)'", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484445210", "createdAt": "2020-09-07T13:53:49Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNjI2Nw==", "bodyText": "Restoring from a snapshot (manual) is better I suppose since we always restore a cluster.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484826267", "createdAt": "2020-09-08T10:50:20Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NTIxMA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTgwNjYwOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzo1NDozOVrOHOANrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MToyMVrOHOXeuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NTYxMw==", "bodyText": "... the data recovery procedure...", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484445613", "createdAt": "2020-09-07T13:54:39Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNjgxMQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484826811", "createdAt": "2020-09-08T10:51:21Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NTYxMw=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTgyMTAwOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzo1OTowMFrOHOAWbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MzowOFrOHOXiVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0Nzg1NA==", "bodyText": "To restore a cluster from a snapshot, the following steps should be performed for each baseline node in it:", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484447854", "createdAt": "2020-09-07T13:59:00Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNzczNA==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484827734", "createdAt": "2020-09-08T10:53:08Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0Nzg1NA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 164}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTgyMzEyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzo1OTozOFrOHOAXwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MzoxOVrOHOXing==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0ODE5Mw==", "bodyText": "Locate the snapshot you've created by name;", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484448193", "createdAt": "2020-09-07T13:59:38Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNzgwNg==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484827806", "createdAt": "2020-09-08T10:53:19Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0ODE5Mw=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTgzODM2OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDowMjoxOVrOHOAhZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDowMjoxOVrOHOAhZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1MDY2MA==", "bodyText": "...a consistent id of a node you work with;", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484450660", "createdAt": "2020-09-07T14:02:19Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 167}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTg0Njg3OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDowMzo0OVrOHOAnBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MzoyM1rOHOXiuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1MjEwMA==", "bodyText": "Copy all snapshot files from the snapshot related to {node_id} to the $IGNITE_HOME/work/{node_id} directory;", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484452100", "createdAt": "2020-09-07T14:03:49Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;\n+- Copy all snapshot files to the `$IGNITE_HOME/work/{node_id}` directory from the snapshot related to `{node_id}`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNzgzNQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484827835", "createdAt": "2020-09-08T10:53:23Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;\n+- Copy all snapshot files to the `$IGNITE_HOME/work/{node_id}` directory from the snapshot related to `{node_id}`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1MjEwMA=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 168}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTg1ODQyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDowNjo1OFrOHOAuCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MzoyOFrOHOXi5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1Mzg5OQ==", "bodyText": "Here are some options:", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484453899", "createdAt": "2020-09-07T14:06:58Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;\n+- Copy all snapshot files to the `$IGNITE_HOME/work/{node_id}` directory from the snapshot related to `{node_id}`;\n+\n+Some use cases at production deployments may require creating a snapshot at m-node cluster and applying it to n-node\n+cluster. There are a few options here:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNzg3Nw==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484827877", "createdAt": "2020-09-08T10:53:28Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;\n+- Copy all snapshot files to the `$IGNITE_HOME/work/{node_id}` directory from the snapshot related to `{node_id}`;\n+\n+Some use cases at production deployments may require creating a snapshot at m-node cluster and applying it to n-node\n+cluster. There are a few options here:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1Mzg5OQ=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 171}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTg4MDMzOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDoxNDowMVrOHOA7Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MzozM1rOHOXjEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NzMxMQ==", "bodyText": "Use the same baseline and configuration.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484457311", "createdAt": "2020-09-07T14:14:01Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;\n+- Copy all snapshot files to the `$IGNITE_HOME/work/{node_id}` directory from the snapshot related to `{node_id}`;\n+\n+Some use cases at production deployments may require creating a snapshot at m-node cluster and applying it to n-node\n+cluster. There are a few options here:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Condition | Description\n+|m == n | The *recommended* case. Use the same baseline and the same configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNzkyMg==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484827922", "createdAt": "2020-09-08T10:53:33Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;\n+- Copy all snapshot files to the `$IGNITE_HOME/work/{node_id}` directory from the snapshot related to `{node_id}`;\n+\n+Some use cases at production deployments may require creating a snapshot at m-node cluster and applying it to n-node\n+cluster. There are a few options here:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Condition | Description\n+|m == n | The *recommended* case. Use the same baseline and the same configuration.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NzMxMQ=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 176}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTkwNzA4OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDoyMTowMVrOHOBKlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1MzozN1rOHOXjMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2MTIwNQ==", "bodyText": "The process will require the cluster to be rebalanced and SQL indexes to be rebuilt. These operations may take a long time.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484461205", "createdAt": "2020-09-07T14:21:01Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;\n+- Copy all snapshot files to the `$IGNITE_HOME/work/{node_id}` directory from the snapshot related to `{node_id}`;\n+\n+Some use cases at production deployments may require creating a snapshot at m-node cluster and applying it to n-node\n+cluster. There are a few options here:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Condition | Description\n+|m == n | The *recommended* case. Use the same baseline and the same configuration.\n+|m < n | Start the m-node cluster from the snapshot and add additional nodes to the started baseline. The process will\n+require the cluster to be rebalanced and SQL indexes to be rebuilt which may take a long time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNzk1NA==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484827954", "createdAt": "2020-09-08T10:53:37Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;\n+- Copy all snapshot files to the `$IGNITE_HOME/work/{node_id}` directory from the snapshot related to `{node_id}`;\n+\n+Some use cases at production deployments may require creating a snapshot at m-node cluster and applying it to n-node\n+cluster. There are a few options here:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Condition | Description\n+|m == n | The *recommended* case. Use the same baseline and the same configuration.\n+|m < n | Start the m-node cluster from the snapshot and add additional nodes to the started baseline. The process will\n+require the cluster to be rebalanced and SQL indexes to be rebuilt which may take a long time.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2MTIwNQ=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 178}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTkwODMyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDoyMToxOVrOHOBLSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1Mzo0MVrOHOXjSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2MTM4NQ==", "bodyText": "Currently, it is not supported.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484461385", "createdAt": "2020-09-07T14:21:19Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;\n+- Copy all snapshot files to the `$IGNITE_HOME/work/{node_id}` directory from the snapshot related to `{node_id}`;\n+\n+Some use cases at production deployments may require creating a snapshot at m-node cluster and applying it to n-node\n+cluster. There are a few options here:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Condition | Description\n+|m == n | The *recommended* case. Use the same baseline and the same configuration.\n+|m < n | Start the m-node cluster from the snapshot and add additional nodes to the started baseline. The process will\n+require the cluster to be rebalanced and SQL indexes to be rebuilt which may take a long time.\n+|m > n | Currently, not supported.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyNzk3Ng==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484827976", "createdAt": "2020-09-08T10:53:41Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,181 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n+of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n+on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n+contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+\n+*Snapshot Consistency.*\n+\n+All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+\n+The local system files consistency (e.g. cache group partition files, binary metadata files, configuration files) achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files will require additional space in Ignite system directory.\n+\n+*Snapshot Structure.*\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in snapshot directory. The `wal` directory will\n+be excluded from snapshot since recovery procedures are not necessary for cache group data files.\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+*Requirements.*\n+\n+You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n+This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+\n+*Limitations.*\n+\n+The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+\n+* taking a snapshot of particular cache or cache group not supported;\n+* in-memory caches will not be included into snapshot;\n+* encrypted caches not supported and will be ignored;\n+* only single snapshot operation can be started at once;\n+* snapshot procedure will be interrupted if any baseline node leave the cluster;\n+* snapshot recovery at the same baseline topology with the same consistent node id;\n+\n+== Configuration\n+\n+You may configure the destination snapshot directory via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that acts like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Snapshot restore (manually)\n+\n+NOTE: Pay attention in case of removing any data from the `$IGNITE_HOME/work` directory. You do it at your own risk.\n+\n+Currently, the restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+to recover from the particular snapshot you need to start the same cluster with the same configuration on these files.\n+\n+To restore a cluster from the snapshot you must do the following steps for each baseline node in it:\n+\n+- Locate by name the snapshot you created;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent node id which do you work with;\n+- Copy all snapshot files to the `$IGNITE_HOME/work/{node_id}` directory from the snapshot related to `{node_id}`;\n+\n+Some use cases at production deployments may require creating a snapshot at m-node cluster and applying it to n-node\n+cluster. There are a few options here:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Condition | Description\n+|m == n | The *recommended* case. Use the same baseline and the same configuration.\n+|m < n | Start the m-node cluster from the snapshot and add additional nodes to the started baseline. The process will\n+require the cluster to be rebalanced and SQL indexes to be rebuilt which may take a long time.\n+|m > n | Currently, not supported.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2MTM4NQ=="}, "originalCommit": {"oid": "52cfd6e6b9202febfc7d8a5ee07e28c1a02eee44"}, "originalPosition": 179}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjU2MjExOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTo1MTozMVrOHOZS9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjoxMDo0MlrOHOZ60g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1NjU2Ng==", "bodyText": "...is initiated", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484856566", "createdAt": "2020-09-08T11:51:31Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -3,33 +3,40 @@\n == Overview\n \n Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n-the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n-of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n-structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n-on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n-contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups is stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n \n-*Snapshot Consistency.*\n+=== Snapshot Consistency\n \n-All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n-system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n snapshots.\n \n-The cluster-wide snapshot consistency achieved by triggering the\n+The cluster-wide snapshot consistency is achieved by triggering the\n link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n-procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n-finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be initiated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9e55f10ae98db07c5629177a05fecdf1e23fa08"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2Njc3MA==", "bodyText": "Fixed", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484866770", "createdAt": "2020-09-08T12:10:42Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -3,33 +3,40 @@\n == Overview\n \n Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n-the link:persistence/native-persistence[Ignite Native Persistence]. You can create at runtime any number of snapshots\n-of all configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n-structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups stored\n-on disk in files on each node (cache group partition files, configuration files, binary metadata) the snapshot will\n-contain a copy of the same files with keeping Ignite cluster node data directory structure and the node consistent ids.\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since data of persistent cache groups is stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n \n-*Snapshot Consistency.*\n+=== Snapshot Consistency\n \n-All snapshots you created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n-system files on the local node. Primary and backup cache group partitions will be also fully consistent in created\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n snapshots.\n \n-The cluster-wide snapshot consistency achieved by triggering the\n+The cluster-wide snapshot consistency is achieved by triggering the\n link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n-procedure. Doing this the cluster will eventually get a point in time when all previously started transactions\n-finished on primary and backups, and new ones are hold until a new snapshot operation will be started.\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation will be initiated.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1NjU2Ng=="}, "originalCommit": {"oid": "f9e55f10ae98db07c5629177a05fecdf1e23fa08"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjU3NDIyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTo1NDo1OVrOHOZaJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjoxMDo0NlrOHOZ68Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1ODQwNw==", "bodyText": "after the snapshot operation is completed.\nIt is so, because when you say ' completes', the reader will think 'completes doing what?'.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484858407", "createdAt": "2020-09-08T11:54:59Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -62,25 +69,25 @@ work\n         \u2514\u2500\u2500 marshaller\n ----\n \n-*Requirements.*\n+=== Requirements\n \n-You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n-This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation completes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9e55f10ae98db07c5629177a05fecdf1e23fa08"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2NjgwMQ==", "bodyText": "Fixed", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484866801", "createdAt": "2020-09-08T12:10:46Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -62,25 +69,25 @@ work\n         \u2514\u2500\u2500 marshaller\n ----\n \n-*Requirements.*\n+=== Requirements\n \n-You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n-This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation completes.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1ODQwNw=="}, "originalCommit": {"oid": "f9e55f10ae98db07c5629177a05fecdf1e23fa08"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjU3OTg4OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTo1NjozMlrOHOZdiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjoxMDo1M1rOHOZ7JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1OTI3Mw==", "bodyText": "if 'operation' than 'initiated'. Let's do so throughout the document.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484859273", "createdAt": "2020-09-08T11:56:32Z", "author": {"login": "Silberfuchs1"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -62,25 +69,25 @@ work\n         \u2514\u2500\u2500 marshaller\n ----\n \n-*Requirements.*\n+=== Requirements\n \n-You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n-This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation completes.\n \n-*Limitations.*\n+=== Limitations\n \n-The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n \n-* taking a snapshot of particular cache or cache group not supported;\n-* in-memory caches will not be included into snapshot;\n-* encrypted caches not supported and will be ignored;\n-* only single snapshot operation can be started at once;\n-* snapshot procedure will be interrupted if any baseline node leave the cluster;\n-* snapshot recovery at the same baseline topology with the same consistent node id;\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be started;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9e55f10ae98db07c5629177a05fecdf1e23fa08"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2Njg1Mw==", "bodyText": "Fixed", "url": "https://github.com/apache/ignite/pull/8128#discussion_r484866853", "createdAt": "2020-09-08T12:10:53Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -62,25 +69,25 @@ work\n         \u2514\u2500\u2500 marshaller\n ----\n \n-*Requirements.*\n+=== Requirements\n \n-You need an extra space on disk for the configured Ignite native persistence directory up to the current size this directory.\n-This space will be used for storing intermediate snapshot results and will be freed when the snapshot operation ends.\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation completes.\n \n-*Limitations.*\n+=== Limitations\n \n-The snapshot procedure has some limitations that you should be aware of before using it at your production environment:\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n \n-* taking a snapshot of particular cache or cache group not supported;\n-* in-memory caches will not be included into snapshot;\n-* encrypted caches not supported and will be ignored;\n-* only single snapshot operation can be started at once;\n-* snapshot procedure will be interrupted if any baseline node leave the cluster;\n-* snapshot recovery at the same baseline topology with the same consistent node id;\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be started;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1OTI3Mw=="}, "originalCommit": {"oid": "f9e55f10ae98db07c5629177a05fecdf1e23fa08"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTg4MjA0OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjo0Mzo0OFrOHSYvoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoyMDo0MFrOHSqQsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0MTgyNQ==", "bodyText": "Can we replace \"persistent cache groups\" with \"cache\" or \"cache and tables\", or \"data\"? The term \"persistent cache groups\" are not widespread among the user community and can cause confusion.\nFor instance, in this sentence you can say:\n\"You can create multiple snapshots of all the data stored in your cluster\"", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489041825", "createdAt": "2020-09-15T22:43:48Z", "author": {"login": "dmagda"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyODgxNw==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489328817", "createdAt": "2020-09-16T10:20:40Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0MTgyNQ=="}, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTg4NzI0OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjo0NDo1OVrOHSYzMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoyMDozM1rOHSqQaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0MjczOA==", "bodyText": "You can simply say \"node\" instead of \"baseline node\" as long as all the nodes have to be in a baseline topology when the persistence is used.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489042738", "createdAt": "2020-09-15T22:44:59Z", "author": {"login": "dmagda"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyODc0Nw==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489328747", "createdAt": "2020-09-16T10:20:33Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0MjczOA=="}, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTkwMTAwOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjo0ODowOFrOHSY8pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoyMDoyNlrOHSqQMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0NTE1Ng==", "bodyText": "Just merge this \"Requirements\" section with the \"Configuration\" section below. They talk about the same thing.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489045156", "createdAt": "2020-09-15T22:48:08Z", "author": {"login": "dmagda"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyODY5MA==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489328690", "createdAt": "2020-09-16T10:20:26Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0NTE1Ng=="}, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTkxNDcxOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjo1MToxN1rOHSZF-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoyMDoyMVrOHSqQAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0NzU0Nw==", "bodyText": "Below we are saying that the restore procedure is manual. I would add an item to the limitations list saying that the automatic restore is not available yet.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489047547", "createdAt": "2020-09-15T22:51:17Z", "author": {"login": "dmagda"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyODY0MA==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489328640", "createdAt": "2020-09-16T10:20:21Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0NzU0Nw=="}, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTkyMzA0OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjo1MzoxOVrOHSZLtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoyMDoxNVrOHSqP1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0OTAxMw==", "bodyText": "Check this page for an example of how to create NOTE callouts (search for the NOTE occurrence):\nhttps://raw.githubusercontent.com/apache/ignite/IGNITE-7595/docs/_docs/quick-start/java.adoc", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489049013", "createdAt": "2020-09-15T22:53:19Z", "author": {"login": "dmagda"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;\n+\n+== Configuration\n+\n+The destination snapshot directory can be configured via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that act like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running one via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Restoring from a snapshot (manual)\n+\n+NOTE: Removing data from the $IGNITE_HOME/work directory performed at your own risk.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyODU5OA==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489328598", "createdAt": "2020-09-16T10:20:15Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;\n+\n+== Configuration\n+\n+The destination snapshot directory can be configured via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that act like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running one via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Restoring from a snapshot (manual)\n+\n+NOTE: Removing data from the $IGNITE_HOME/work directory performed at your own risk.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0OTAxMw=="}, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTk2MDcxOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMzowMTo1M1rOHSZlIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoyMDowOFrOHSqPiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA1NTUyMg==", "bodyText": "\"you need to start each node of the same cluster on these files...\"\nI would say\n\"you need restart every cluster node swapping its current data from the \"{IGNITE_WORK_DIR}/db\" directory with the data from the snapshot\"", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489055522", "createdAt": "2020-09-15T23:01:53Z", "author": {"login": "dmagda"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;\n+\n+== Configuration\n+\n+The destination snapshot directory can be configured via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that act like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running one via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Restoring from a snapshot (manual)\n+\n+NOTE: Removing data from the $IGNITE_HOME/work directory performed at your own risk.\n+\n+Currently, the data restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+in order to recover from the particular snapshot, you need to start each node of the same cluster on these files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyODUyMw==", "bodyText": "Agree, fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489328523", "createdAt": "2020-09-16T10:20:08Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;\n+\n+== Configuration\n+\n+The destination snapshot directory can be configured via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that act like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running one via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Restoring from a snapshot (manual)\n+\n+NOTE: Removing data from the $IGNITE_HOME/work directory performed at your own risk.\n+\n+Currently, the data restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+in order to recover from the particular snapshot, you need to start each node of the same cluster on these files", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA1NTUyMg=="}, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 169}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTk3MjUwOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMzowNDo0MFrOHSZtVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoxOTowOFrOHSqNfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA1NzYyMA==", "bodyText": "Do we need to replace the files from the entire work dir or is it enough to do this procedure with {WORK_DIR}/db?\nAlso, you should take into account a use case when the storage path is overridden via DataStorageConfiguration.storagePath parameter.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489057620", "createdAt": "2020-09-15T23:04:40Z", "author": {"login": "dmagda"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;\n+\n+== Configuration\n+\n+The destination snapshot directory can be configured via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that act like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running one via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Restoring from a snapshot (manual)\n+\n+NOTE: Removing data from the $IGNITE_HOME/work directory performed at your own risk.\n+\n+Currently, the data restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+in order to recover from the particular snapshot, you need to start each node of the same cluster on these files\n+(see link:#snapshot-structure[Snapshot Structure] for details).\n+\n+To restore a cluster from a snapshot, the following steps should be performed for each baseline node in it:\n+\n+- Locate the snapshot you've created by name;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent id of a node you work with;\n+- Copy all snapshot files from the snapshot related to `{node_id}` to the $IGNITE_HOME/work/{node_id} directory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyNzk5OA==", "bodyText": "We should remove and copy from the snapshot all the files for each {nodeId}, all files related to crash-recovery must be removed (wal, checkpoint)", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489327998", "createdAt": "2020-09-16T10:19:08Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;\n+\n+== Configuration\n+\n+The destination snapshot directory can be configured via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that act like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running one via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Restoring from a snapshot (manual)\n+\n+NOTE: Removing data from the $IGNITE_HOME/work directory performed at your own risk.\n+\n+Currently, the data restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+in order to recover from the particular snapshot, you need to start each node of the same cluster on these files\n+(see link:#snapshot-structure[Snapshot Structure] for details).\n+\n+To restore a cluster from a snapshot, the following steps should be performed for each baseline node in it:\n+\n+- Locate the snapshot you've created by name;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent id of a node you work with;\n+- Copy all snapshot files from the snapshot related to `{node_id}` to the $IGNITE_HOME/work/{node_id} directory;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA1NzYyMA=="}, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 176}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTk3NDgyOnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMzowNToxNFrOHSZu1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoxNjo0MVrOHSqIQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA1ODAwNQ==", "bodyText": "Should we mention that the entire cluster must be stopped before the restore procedure?", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489058005", "createdAt": "2020-09-15T23:05:14Z", "author": {"login": "dmagda"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;\n+\n+== Configuration\n+\n+The destination snapshot directory can be configured via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that act like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running one via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Restoring from a snapshot (manual)\n+\n+NOTE: Removing data from the $IGNITE_HOME/work directory performed at your own risk.\n+\n+Currently, the data restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+in order to recover from the particular snapshot, you need to start each node of the same cluster on these files\n+(see link:#snapshot-structure[Snapshot Structure] for details).\n+\n+To restore a cluster from a snapshot, the following steps should be performed for each baseline node in it:\n+\n+- Locate the snapshot you've created by name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyNjY1Ng==", "bodyText": "Yes, fixed.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489326656", "createdAt": "2020-09-16T10:16:41Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;\n+\n+== Configuration\n+\n+The destination snapshot directory can be configured via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that act like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running one via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Restoring from a snapshot (manual)\n+\n+NOTE: Removing data from the $IGNITE_HOME/work directory performed at your own risk.\n+\n+Currently, the data restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+in order to recover from the particular snapshot, you need to start each node of the same cluster on these files\n+(see link:#snapshot-structure[Snapshot Structure] for details).\n+\n+To restore a cluster from a snapshot, the following steps should be performed for each baseline node in it:\n+\n+- Locate the snapshot you've created by name;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA1ODAwNQ=="}, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTk5MDY1OnYy", "diffSide": "RIGHT", "path": "docs/_docs/persistence/snapshot.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMzowOTowN1rOHSZ55g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoxNjozMFrOHSqH5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA2MDgzOA==", "bodyText": "Let's say I had 5 nodes in the N-cluster and trying to apply the snapshot to a 3-node cluster (the m-cluster). I will copy the snapshot files from the first 3 nodes of the N-cluster to the M-cluster.  But what should I do with the snapshot files of the other 2 nodes of the N-cluster? Basically, what's the procedure for squeezing 5 folders (N-cluster) with the snapshots into the 3 folders (M-cluster). That's unclear to me.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489060838", "createdAt": "2020-09-15T23:09:07Z", "author": {"login": "dmagda"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;\n+\n+== Configuration\n+\n+The destination snapshot directory can be configured via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that act like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running one via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Restoring from a snapshot (manual)\n+\n+NOTE: Removing data from the $IGNITE_HOME/work directory performed at your own risk.\n+\n+Currently, the data restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+in order to recover from the particular snapshot, you need to start each node of the same cluster on these files\n+(see link:#snapshot-structure[Snapshot Structure] for details).\n+\n+To restore a cluster from a snapshot, the following steps should be performed for each baseline node in it:\n+\n+- Locate the snapshot you've created by name;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent id of a node you work with;\n+- Copy all snapshot files from the snapshot related to `{node_id}` to the $IGNITE_HOME/work/{node_id} directory;\n+\n+Some use cases at production deployments may require creating a snapshot at the m-node cluster and applying it to the\n+n-node cluster. Here are some options:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Condition | Description\n+|m == n | The *recommended* case. Use the same baseline and configuration.\n+|m < n | Start the m-node cluster from the snapshot and add additional nodes to the started baseline. The process", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyNjU2Nw==", "bodyText": "Denis,\n\nthe m-cluster is the source of a snapshot (take from)\nthe n-cluster is the destination (apply to)\n\ncase m > n is not supported yet, since, as you mentioned before, squeezing procedures are not developed yet.\ncase m < n start m-cluster from a snapshot and add additional nodes to it by changing baseline.", "url": "https://github.com/apache/ignite/pull/8128#discussion_r489326567", "createdAt": "2020-09-16T10:16:30Z", "author": {"login": "Mmuzaf"}, "path": "docs/_docs/persistence/snapshot.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+= Snapshots and recovery\n+\n+== Overview\n+\n+Apache Ignite 2.9 comes with an ability to create fully consistent cluster-wide snapshots for deployments with\n+the link:persistence/native-persistence[Ignite Native Persistence]. At runtime, you can create multiple snapshots of all\n+configured persistent cache groups. The snapshot is a consistent copy of all cache group data files (except\n+structures used for crash recovery) for each baseline node in a cluster. Since the data of persistent cache groups are stored\n+on disk in files for each node (cache group partition files, configuration files, binary metadata) in a cluster,\n+the snapshot will contain a copy of the same files with keeping Ignite cluster node data directory structure and node consistent IDs.\n+\n+=== Snapshot Consistency\n+\n+All snapshots you've created are fully consistent in terms of concurrent cluster-wide operations and all ongoing changes of\n+system files on the local node. Primary and backup cache group partitions will also be fully consistent in created\n+snapshots.\n+\n+The cluster-wide snapshot consistency is achieved by triggering the\n+link:https://cwiki.apache.org/confluence/display/IGNITE/%28Partition+Map%29+Exchange+-+under+the+hood[Partition-Map-Exchange]\n+procedure. Doing this the cluster will eventually get a point in time when all previously started transactions are\n+finished on primary and backups, and new ones are hold until a new snapshot operation is initiated.\n+\n+The local system files (e.g. cache group partition files, binary metadata files, configuration files) consistency is achieved\n+by copying them to the destination snapshot directory with tracking all concurrent ongoing changes. Tracking concurrent\n+changes during copying of cache group partition files might require additional space in the Ignite work directory.\n+\n+=== Snapshot Structure\n+\n+The created snapshot has the same\n+link:https://cwiki.apache.org/confluence/display/IGNITE/Ignite+Persistent+Store+-+under+the+hood#IgnitePersistentStoreunderthehood-FoldersStructure[Directory Structure]\n+as the Ignite native persistence does with keeping nodes `consistentId` in the snapshot directory. The `wal` and `checkpoint`\n+directories will be excluded from the snapshot since recovery procedures are not necessary for cache group data files.\n+\n+The created snapshot contains:\n+\n+- cache group partition files;\n+- cache configuration files related to cache groups;\n+- binary metadata files;\n+- marshaller data files;\n+\n+.Example of snapshot directory structure\n+[source,shell]\n+----\n+work\n+\u2514\u2500\u2500 snapshots\n+    \u2514\u2500\u2500 backup23012020\n+        \u251c\u2500\u2500 binary_meta\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u251c\u2500\u2500 db\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest0\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-3.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-4.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-6.bin\n+        \u2502   \u251c\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest1\n+        \u2502   \u2502   \u2514\u2500\u2500 cache-txCache\n+        \u2502   \u2502       \u251c\u2500\u2500 cache_data.dat\n+        \u2502   \u2502       \u251c\u2500\u2500 part-1.bin\n+        \u2502   \u2502       \u251c\u2500\u2500 part-5.bin\n+        \u2502   \u2502       \u2514\u2500\u2500 part-7.bin\n+        \u2502   \u2514\u2500\u2500 snapshot_IgniteClusterSnapshotSelfTest2\n+        \u2502       \u2514\u2500\u2500 cache-txCache\n+        \u2502           \u251c\u2500\u2500 cache_data.dat\n+        \u2502           \u251c\u2500\u2500 part-0.bin\n+        \u2502           \u2514\u2500\u2500 part-2.bin\n+        \u2514\u2500\u2500 marshaller\n+----\n+\n+=== Requirements\n+\n+A configured Ignite native persistence directory requires additional disk space (up to the current size of this directory).\n+This space will be used for storing intermediate snapshot results and cleaned up after the snapshot operation is completed.\n+\n+=== Limitations\n+\n+The snapshot procedure has some limitations that you should be aware of before using it within your production environment:\n+\n+* taking a snapshot of a particular cache or cache group is not supported;\n+* in-memory caches will not be included into a snapshot;\n+* encrypted caches are not supported and will be ignored;\n+* only one snapshot operation at a time can be initiated;\n+* snapshot procedure will be interrupted if any baseline node leaves the cluster;\n+* snapshot may be restored only at the same baseline topology with the same node consistent IDs;\n+\n+== Configuration\n+\n+The destination snapshot directory can be configured via `IgniteConfiguration`.\n+\n+[tabs]\n+--\n+tab:XML[]\n+\n+[source, xml]\n+----\n+include::code-snippets/xml/snapshots.xml[tags=ignite-config;!discovery, indent=0]\n+\n+----\n+\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=config, indent=0]\n+\n+----\n+\n+tab:C#/.NET[]\n+tab:C++[]\n+--\n+\n+== Snapshot creation\n+\n+Ignite provides the ability to start a snapshot operation from the following interfaces:\n+\n+- link:#command-line[Command line]\n+- link:#jmx[JMX]\n+- link:#java-api[Java API]\n+\n+=== Command line\n+\n+Ignite ships `control.(sh|bat)` scripts, located in the `$IGNITE_HOME/bin` directory, that act like a tool to\n+start or cancel snapshot operation from the command line. The following commands can be used with `control.(sh|bat)`:\n+\n+[source,shell]\n+----\n+#Create cluster snapshot:\n+control.(sh|bat) --snapshot create snapshot_name\n+\n+#Cancel running snapshot:\n+control.(sh|bat) --snapshot cancel snapshot_name\n+\n+#Kill running snapshot:\n+control.(sh|bat) --kill SNAPSHOT snapshot_name\n+----\n+\n+=== JMX\n+\n+You can start snapshot operation or cancel currently running one via the `SnapshotMXBean` interface:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Method | Description\n+|createSnapshot(String snpName) | Create cluster-wide snapshot.\n+|cancelSnapshot(String snpName) | Cancel started cluster-wide snapshot on the node initiator.\n+|===\n+\n+=== Java API\n+\n+The snapshot operation can be started using Java API:\n+\n+[tabs]\n+--\n+tab:Java[]\n+\n+[source, java]\n+----\n+include::{javaCodeDir}/Snapshots.java[tags=create, indent=0]\n+----\n+--\n+\n+== Restoring from a snapshot (manual)\n+\n+NOTE: Removing data from the $IGNITE_HOME/work directory performed at your own risk.\n+\n+Currently, the data restore procedure is fully manual. Since the snapshot is a consistent copy of all data files for each node,\n+in order to recover from the particular snapshot, you need to start each node of the same cluster on these files\n+(see link:#snapshot-structure[Snapshot Structure] for details).\n+\n+To restore a cluster from a snapshot, the following steps should be performed for each baseline node in it:\n+\n+- Locate the snapshot you've created by name;\n+- Remove all the data from `$IGNITE_HOME/work/{node_id}` where `{node_id}` is a consistent id of a node you work with;\n+- Copy all snapshot files from the snapshot related to `{node_id}` to the $IGNITE_HOME/work/{node_id} directory;\n+\n+Some use cases at production deployments may require creating a snapshot at the m-node cluster and applying it to the\n+n-node cluster. Here are some options:\n+\n+[cols=\"1,1\",opts=\"header\"]\n+|===\n+|Condition | Description\n+|m == n | The *recommended* case. Use the same baseline and configuration.\n+|m < n | Start the m-node cluster from the snapshot and add additional nodes to the started baseline. The process", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA2MDgzOA=="}, "originalCommit": {"oid": "b02cbbc1a90d00d1956a74987343e1ce28142b3c"}, "originalPosition": 185}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2797, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}