{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MjUyMTAz", "number": 7902, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxNDo0OVrOEC18cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxNjoxMlrOEC1-EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDE2NDM1OnYy", "diffSide": "RIGHT", "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccConfigurationValidationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxNDo0OVrOGfi9gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMDoxODoyN1rOGfo3WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMTg0MQ==", "bodyText": "looks like a 90% duplication of testMvccEnabledForClientMode", "url": "https://github.com/apache/ignite/pull/7902#discussion_r435731841", "createdAt": "2020-06-05T07:14:49Z", "author": {"login": "anton-vinogradov"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccConfigurationValidationTest.java", "diffHunk": "@@ -352,6 +353,37 @@ public void testMvccEnabledForClientMode() throws Exception {\n         assertTrue(node.context().coordinators().mvccEnabled());\n     }\n \n+    /**\n+     * Check that node in client mode (filtered by AttributeNodeFilter) correctly works with MVCC.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    @Test\n+    public void testMvccEnabledForClientModeAfterTriggeringGlobalState() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a082bb641e1f000de1793cb5b31f53bf01a65822"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgyODU2OQ==", "bodyText": "Move to another class to move some code duplication, and add more tests", "url": "https://github.com/apache/ignite/pull/7902#discussion_r435828569", "createdAt": "2020-06-05T10:18:27Z", "author": {"login": "timoninmaxim"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccConfigurationValidationTest.java", "diffHunk": "@@ -352,6 +353,37 @@ public void testMvccEnabledForClientMode() throws Exception {\n         assertTrue(node.context().coordinators().mvccEnabled());\n     }\n \n+    /**\n+     * Check that node in client mode (filtered by AttributeNodeFilter) correctly works with MVCC.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    @Test\n+    public void testMvccEnabledForClientModeAfterTriggeringGlobalState() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMTg0MQ=="}, "originalCommit": {"oid": "a082bb641e1f000de1793cb5b31f53bf01a65822"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDE2ODQ4OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxNjoxMlrOGfi_7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMDoxNzo0NFrOGfo16g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMjQ2Mg==", "bodyText": "Such renaming just increases changes amount without real profit", "url": "https://github.com/apache/ignite/pull/7902#discussion_r435732462", "createdAt": "2020-06-05T07:16:12Z", "author": {"login": "anton-vinogradov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java", "diffHunk": "@@ -346,7 +346,7 @@\n     private final GridDhtPartitionsStateValidator validator;\n \n     /** Register caches future. Initialized on exchange init. Must be waited on exchange end. */\n-    private IgniteInternalFuture<?> registerCachesFuture;\n+    private IgniteInternalFuture<?> registerCachesFut;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a082bb641e1f000de1793cb5b31f53bf01a65822"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0MDk3OQ==", "bodyText": "this is about abbr fix: Future -> Fut to decrease amount of warnings. I rely on this object, so picked the moment to fix this. Is there a process how to provide such fixes right way?", "url": "https://github.com/apache/ignite/pull/7902#discussion_r435740979", "createdAt": "2020-06-05T07:34:24Z", "author": {"login": "timoninmaxim"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java", "diffHunk": "@@ -346,7 +346,7 @@\n     private final GridDhtPartitionsStateValidator validator;\n \n     /** Register caches future. Initialized on exchange init. Must be waited on exchange end. */\n-    private IgniteInternalFuture<?> registerCachesFuture;\n+    private IgniteInternalFuture<?> registerCachesFut;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMjQ2Mg=="}, "originalCommit": {"oid": "a082bb641e1f000de1793cb5b31f53bf01a65822"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc2NjUxNQ==", "bodyText": "Such fixes snatch code ownership (git annotations), so they should be performed only in case you really changing something.", "url": "https://github.com/apache/ignite/pull/7902#discussion_r435766515", "createdAt": "2020-06-05T08:24:44Z", "author": {"login": "anton-vinogradov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java", "diffHunk": "@@ -346,7 +346,7 @@\n     private final GridDhtPartitionsStateValidator validator;\n \n     /** Register caches future. Initialized on exchange init. Must be waited on exchange end. */\n-    private IgniteInternalFuture<?> registerCachesFuture;\n+    private IgniteInternalFuture<?> registerCachesFut;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMjQ2Mg=="}, "originalCommit": {"oid": "a082bb641e1f000de1793cb5b31f53bf01a65822"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgyODIwMg==", "bodyText": "Got it. Fixed with re-push to keep the ownership", "url": "https://github.com/apache/ignite/pull/7902#discussion_r435828202", "createdAt": "2020-06-05T10:17:44Z", "author": {"login": "timoninmaxim"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java", "diffHunk": "@@ -346,7 +346,7 @@\n     private final GridDhtPartitionsStateValidator validator;\n \n     /** Register caches future. Initialized on exchange init. Must be waited on exchange end. */\n-    private IgniteInternalFuture<?> registerCachesFuture;\n+    private IgniteInternalFuture<?> registerCachesFut;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMjQ2Mg=="}, "originalCommit": {"oid": "a082bb641e1f000de1793cb5b31f53bf01a65822"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2404, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}