{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MTA5ODY1", "number": 7811, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMDo1Nzo0MlrOD9vt6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjo0MzoxNVrOD9x9VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDcxNTI5OnYy", "diffSide": "RIGHT", "path": "modules/core/src/test/java/org/apache/ignite/internal/client/thin/TestTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMDo1Nzo0MlrOGXa-ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzowNTo1OVrOGXfdZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxMjQ0Ng==", "bodyText": "Wrong indent", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427212446", "createdAt": "2020-05-19T10:57:42Z", "author": {"login": "alex-plekhanov"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/client/thin/TestTask.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.client.thin;\n+\n+import org.apache.ignite.Ignite;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.compute.ComputeJob;\n+import org.apache.ignite.compute.ComputeJobResult;\n+import org.apache.ignite.compute.ComputeTaskAdapter;\n+import org.apache.ignite.compute.ComputeTaskName;\n+import org.apache.ignite.internal.util.typedef.T2;\n+import org.apache.ignite.resources.IgniteInstanceResource;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Compute task which returns node id for routing node and list of node ids for each node was affected.\n+ */\n+@ComputeTaskName(ComputeTaskTest.TEST_TASK_NAME)\n+public class TestTask extends ComputeTaskAdapter<Long, T2<UUID, Set<UUID>>> {\n+    /** Ignite. */\n+    @IgniteInstanceResource\n+    Ignite ignite;\n+\n+    /** {@inheritDoc} */\n+    @Override public @NotNull Map<? extends ComputeJob, ClusterNode> map(List<ClusterNode> subgrid,\n+                                                                         @Nullable Long arg) throws IgniteException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4NTg2MQ==", "bodyText": "Fixed", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427285861", "createdAt": "2020-05-19T13:05:59Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/client/thin/TestTask.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.client.thin;\n+\n+import org.apache.ignite.Ignite;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.compute.ComputeJob;\n+import org.apache.ignite.compute.ComputeJobResult;\n+import org.apache.ignite.compute.ComputeTaskAdapter;\n+import org.apache.ignite.compute.ComputeTaskName;\n+import org.apache.ignite.internal.util.typedef.T2;\n+import org.apache.ignite.resources.IgniteInstanceResource;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Compute task which returns node id for routing node and list of node ids for each node was affected.\n+ */\n+@ComputeTaskName(ComputeTaskTest.TEST_TASK_NAME)\n+public class TestTask extends ComputeTaskAdapter<Long, T2<UUID, Set<UUID>>> {\n+    /** Ignite. */\n+    @IgniteInstanceResource\n+    Ignite ignite;\n+\n+    /** {@inheritDoc} */\n+    @Override public @NotNull Map<? extends ComputeJob, ClusterNode> map(List<ClusterNode> subgrid,\n+                                                                         @Nullable Long arg) throws IgniteException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxMjQ0Ng=="}, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDcyMTExOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/client/compute/ClientExecuteTaskRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMDo1OTozMlrOGXbCbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzowNzo0NlrOGXfiDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxMzQyMw==", "bodyText": "Redundant { } for one line statement (codestyle)", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427213423", "createdAt": "2020-05-19T10:59:32Z", "author": {"login": "alex-plekhanov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/client/compute/ClientExecuteTaskRequest.java", "diffHunk": "@@ -77,7 +79,15 @@ public ClientExecuteTaskRequest(BinaryRawReader reader) {\n         long taskId = ctx.resources().put(task);\n \n         try {\n-            task.execute(taskId, taskName, arg, nodeIds, flags, timeout);\n+            Object arg0 = arg;\n+\n+            // Deserialize as part of process() call - not in constructor - for proper error handling.\n+            // Failure to deserialize binary object should not be treated as a failure to decode request.\n+            if ((flags & ClientComputeTask.KEEP_BINARY_FLAG_MASK) == 0 && arg instanceof BinaryObject) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4NzA1NA==", "bodyText": "Fixed", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427287054", "createdAt": "2020-05-19T13:07:46Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/client/compute/ClientExecuteTaskRequest.java", "diffHunk": "@@ -77,7 +79,15 @@ public ClientExecuteTaskRequest(BinaryRawReader reader) {\n         long taskId = ctx.resources().put(task);\n \n         try {\n-            task.execute(taskId, taskName, arg, nodeIds, flags, timeout);\n+            Object arg0 = arg;\n+\n+            // Deserialize as part of process() call - not in constructor - for proper error handling.\n+            // Failure to deserialize binary object should not be treated as a failure to decode request.\n+            if ((flags & ClientComputeTask.KEEP_BINARY_FLAG_MASK) == 0 && arg instanceof BinaryObject) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxMzQyMw=="}, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDcyNDIxOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/MarshallerContextImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTowMDoyMVrOGXbENQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzowNzo0OVrOGXfiOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxMzg3Nw==", "bodyText": "else if should be in one line (codestyle)", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427213877", "createdAt": "2020-05-19T11:00:21Z", "author": {"login": "alex-plekhanov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/MarshallerContextImpl.java", "diffHunk": "@@ -391,34 +411,56 @@ public void onMappingAccepted(final MarshallerMappingItem item) {\n             if (clsName != null)\n                 cache.putIfAbsent(typeId, new MappedName(clsName, true));\n             else\n-                if (clientNode) {\n-                    mappedName = cache.get(typeId);\n-\n-                    if (mappedName == null) {\n-                        GridFutureAdapter<MappingExchangeResult> fut = transport.requestMapping(\n-                                new MarshallerMappingItem(platformId, typeId, null),\n-                                cache);\n-\n-                        clsName = fut.get().className();\n-                    }\n-                    else\n-                        clsName = mappedName.className();\n+            if (clientNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4NzA5Ng==", "bodyText": "Fixed", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427287096", "createdAt": "2020-05-19T13:07:49Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/MarshallerContextImpl.java", "diffHunk": "@@ -391,34 +411,56 @@ public void onMappingAccepted(final MarshallerMappingItem item) {\n             if (clsName != null)\n                 cache.putIfAbsent(typeId, new MappedName(clsName, true));\n             else\n-                if (clientNode) {\n-                    mappedName = cache.get(typeId);\n-\n-                    if (mappedName == null) {\n-                        GridFutureAdapter<MappingExchangeResult> fut = transport.requestMapping(\n-                                new MarshallerMappingItem(platformId, typeId, null),\n-                                cache);\n-\n-                        clsName = fut.get().className();\n-                    }\n-                    else\n-                        clsName = mappedName.className();\n+            if (clientNode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxMzg3Nw=="}, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDgwNjQ0OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientClusterImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMToyNToyM1rOGXb35w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzoxMjoyNVrOGXfuyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyNzExMQ==", "bodyText": "Perhaps it's better to change exception message now to something like 'Cluster API is not supported by the server'", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427227111", "createdAt": "2020-05-19T11:25:23Z", "author": {"login": "alex-plekhanov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientClusterImpl.java", "diffHunk": "@@ -132,7 +132,7 @@ private boolean changeWalState(String cacheName, boolean enable) throws ClientEx\n     private void checkClusterApiSupported(ProtocolContext protocolCtx)\n         throws ClientFeatureNotSupportedByServerException {\n         if (!protocolCtx.isFeatureSupported(ProtocolVersionFeature.CLUSTER_API) &&\n-            !protocolCtx.isFeatureSupported(ProtocolBitmaskFeature.CLUSTER_API))\n-            throw new ClientFeatureNotSupportedByServerException(ProtocolBitmaskFeature.CLUSTER_API);\n+            !protocolCtx.isFeatureSupported(ProtocolBitmaskFeature.CLUSTER_ADDITIONAL_STATES))\n+            throw new ClientFeatureNotSupportedByServerException(ProtocolBitmaskFeature.CLUSTER_ADDITIONAL_STATES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MDMxMw==", "bodyText": "This entire method looks incorrect to me: CLUSTER_STATES flag is only required for extra states, users should be able to use the API without this flag.\nHowever, this is out of scope of the current PR. Too much stuff here as it is.", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427290313", "createdAt": "2020-05-19T13:12:25Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientClusterImpl.java", "diffHunk": "@@ -132,7 +132,7 @@ private boolean changeWalState(String cacheName, boolean enable) throws ClientEx\n     private void checkClusterApiSupported(ProtocolContext protocolCtx)\n         throws ClientFeatureNotSupportedByServerException {\n         if (!protocolCtx.isFeatureSupported(ProtocolVersionFeature.CLUSTER_API) &&\n-            !protocolCtx.isFeatureSupported(ProtocolBitmaskFeature.CLUSTER_API))\n-            throw new ClientFeatureNotSupportedByServerException(ProtocolBitmaskFeature.CLUSTER_API);\n+            !protocolCtx.isFeatureSupported(ProtocolBitmaskFeature.CLUSTER_ADDITIONAL_STATES))\n+            throw new ClientFeatureNotSupportedByServerException(ProtocolBitmaskFeature.CLUSTER_ADDITIONAL_STATES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyNzExMQ=="}, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTA0MDM2OnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Client/Compute/IComputeClient.cs", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjozMjowN1rOGXeJ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjo1Nzo0NFrOGXfJMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI2NDQ5Mw==", "bodyText": "This is the only method of the class which is tested. Add at least tests for Async execution, WithKeepBinary...", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427264493", "createdAt": "2020-05-19T12:32:07Z", "author": {"login": "isapego"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Client/Compute/IComputeClient.cs", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Client.Compute\n+{\n+    using System;\n+    using System.Threading;\n+    using System.Threading.Tasks;\n+\n+    /// <summary>\n+    /// Client Compute API. See <see cref=\"IIgniteClient.GetCompute\"/>\n+    /// and <see cref=\"IClientClusterGroup.GetCompute\"/>.\n+    /// </summary>\n+    public interface IComputeClient\n+    {\n+        /// <summary>\n+        /// Executes Java task by class name.\n+        /// </summary>\n+        /// <param name=\"taskName\">Java task name.</param>\n+        /// <param name=\"taskArg\">Optional argument of task execution, can be null.</param>\n+        /// <returns>Task result.</returns>\n+        /// <typeparam name=\"TRes\">Type of task result.</typeparam>\n+        TRes ExecuteJavaTask<TRes>(string taskName, object taskArg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4MDY5MA==", "bodyText": "Please see ComputeClientTests class, it covers all APIs and different use cases, exceptions, flags, timeouts.", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427280690", "createdAt": "2020-05-19T12:57:44Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Client/Compute/IComputeClient.cs", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Client.Compute\n+{\n+    using System;\n+    using System.Threading;\n+    using System.Threading.Tasks;\n+\n+    /// <summary>\n+    /// Client Compute API. See <see cref=\"IIgniteClient.GetCompute\"/>\n+    /// and <see cref=\"IClientClusterGroup.GetCompute\"/>.\n+    /// </summary>\n+    public interface IComputeClient\n+    {\n+        /// <summary>\n+        /// Executes Java task by class name.\n+        /// </summary>\n+        /// <param name=\"taskName\">Java task name.</param>\n+        /// <param name=\"taskArg\">Optional argument of task execution, can be null.</param>\n+        /// <returns>Task result.</returns>\n+        /// <typeparam name=\"TRes\">Type of task result.</typeparam>\n+        TRes ExecuteJavaTask<TRes>(string taskName, object taskArg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI2NDQ5Mw=="}, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTA0NzMwOnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Client/Compute/ComputeClientDisabledTests.cs", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjozNDowMFrOGXeOYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjo1NzowN1rOGXfHmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI2NTYzNA==", "bodyText": "Can you add a more description in Doxy comment what do this test does?", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427265634", "createdAt": "2020-05-19T12:34:00Z", "author": {"login": "isapego"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Client/Compute/ComputeClientDisabledTests.cs", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Tests.Client.Compute\n+{\n+    using System;\n+    using Apache.Ignite.Core.Client;\n+    using Apache.Ignite.Core.Configuration;\n+    using NUnit.Framework;\n+\n+    /// <summary>\n+    /// Tests client compute with disabled server-side settings.\n+    /// </summary>\n+    public class ComputeClientDisabledTests : ClientTestBase\n+    {\n+        /// <summary>\n+        /// Tests that Compute throws correct exception when not enabled on server.\n+        /// </summary>\n+        [Test]\n+        public void TestComputeThrowsCorrectExceptionWhenNotEnabledOnServer()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4MDI4Mw==", "bodyText": "It is already there: Tests that Compute throws correct exception when not enabled on server.. What would you add to this description?", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427280283", "createdAt": "2020-05-19T12:57:07Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Client/Compute/ComputeClientDisabledTests.cs", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Tests.Client.Compute\n+{\n+    using System;\n+    using Apache.Ignite.Core.Client;\n+    using Apache.Ignite.Core.Configuration;\n+    using NUnit.Framework;\n+\n+    /// <summary>\n+    /// Tests client compute with disabled server-side settings.\n+    /// </summary>\n+    public class ComputeClientDisabledTests : ClientTestBase\n+    {\n+        /// <summary>\n+        /// Tests that Compute throws correct exception when not enabled on server.\n+        /// </summary>\n+        [Test]\n+        public void TestComputeThrowsCorrectExceptionWhenNotEnabledOnServer()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI2NTYzNA=="}, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTA4MjQ0OnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Client/ClientSocket.cs", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjo0MzoxNVrOGXeksA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjo1ODozNlrOGXfLQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI3MTM0NA==", "bodyText": "Whitespace :)", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427271344", "createdAt": "2020-05-19T12:43:15Z", "author": {"login": "isapego"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Client/ClientSocket.cs", "diffHunk": "@@ -66,7 +66,7 @@ internal sealed class ClientSocket : IDisposable\n \n         /** Current version. */\n         public static readonly ClientProtocolVersion CurrentProtocolVersion = Ver170;\n-\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4MTIxOQ==", "bodyText": "Fixed, thanks :)", "url": "https://github.com/apache/ignite/pull/7811#discussion_r427281219", "createdAt": "2020-05-19T12:58:36Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Client/ClientSocket.cs", "diffHunk": "@@ -66,7 +66,7 @@ internal sealed class ClientSocket : IDisposable\n \n         /** Current version. */\n         public static readonly ClientProtocolVersion CurrentProtocolVersion = Ver170;\n-\n+        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI3MTM0NA=="}, "originalCommit": {"oid": "eb33243e564b3c97d62912eb1ff53991808bc45b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2437, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}