{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NjM4NDUx", "number": 7319, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0NjozMlrODa-8cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo1Mjo0NFrODbNWVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjIwODQ5OnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0NjozMlrOFiNbDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0NjozMlrOFiNbDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxNTgyMg==", "bodyText": "Changes unrelated. Please, revert.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371415822", "createdAt": "2020-01-27T18:46:32Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -574,9 +602,9 @@ public void testCreateAndBulkLoadTable() throws SQLException {\n             \" (id int primary key, age int, firstName varchar(30), lastName varchar(30))\");\n \n         int updatesCnt = stmt.executeUpdate(\n-            \"copy from '\" + BULKLOAD_TWO_LINES_CSV_FILE + \"' into \" + tblName +\n-                \"(_key, age, firstName, lastName)\" +\n-                \" format csv\");\n+                \"copy from '\" + BULKLOAD_TWO_LINES_CSV_FILE + \"' into \" + tblName +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26ee697ed55edf3ca41c7825ef745e9e66e4c3a"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjIwODgwOnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0NjozOVrOFiNbQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0NjozOVrOFiNbQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxNTg3Mw==", "bodyText": "Changes unrelated. Please, revert.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371415873", "createdAt": "2020-01-27T18:46:39Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -43,15 +29,30 @@\n import org.apache.ignite.lang.IgniteClosure;\n import org.apache.ignite.testframework.GridTestUtils;\n import org.junit.Test;\n+import org.junit.runner.RunWith;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26ee697ed55edf3ca41c7825ef745e9e66e4c3a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjIwOTEyOnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAbstractDmlStatementSelfTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0Njo0NlrOFiNbeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0Njo0NlrOFiNbeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxNTkzMA==", "bodyText": "Changes unrelated. Please, revert.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371415930", "createdAt": "2020-01-27T18:46:46Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAbstractDmlStatementSelfTest.java", "diffHunk": "@@ -30,6 +25,13 @@\n import org.apache.ignite.internal.binary.BinaryMarshaller;\n import org.apache.ignite.internal.util.typedef.F;\n \n+import java.io.Serializable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26ee697ed55edf3ca41c7825ef745e9e66e4c3a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjIwOTU2OnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/suite/IgniteJdbcDriverTestSuite.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0Njo1NVrOFiNbvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODo0Njo1NVrOFiNbvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxNTk5Nw==", "bodyText": "Changes unrelated. Please, revert.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371415997", "createdAt": "2020-01-27T18:46:55Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/suite/IgniteJdbcDriverTestSuite.java", "diffHunk": "@@ -17,225 +17,153 @@\n \n package org.apache.ignite.jdbc.suite;\n \n-import java.security.Security;\n-import org.apache.ignite.internal.jdbc2.JdbcBlobTest;\n-import org.apache.ignite.internal.jdbc2.JdbcBulkLoadSelfTest;\n-import org.apache.ignite.internal.jdbc2.JdbcConnectionReopenTest;\n-import org.apache.ignite.internal.jdbc2.JdbcDistributedJoinsQueryTest;\n-import org.apache.ignite.internal.jdbc2.JdbcSchemaCaseSelfTest;\n+import org.apache.ignite.internal.jdbc2.*;\n import org.apache.ignite.jdbc.JdbcComplexQuerySelfTest;\n import org.apache.ignite.jdbc.JdbcConnectionSelfTest;\n-import org.apache.ignite.jdbc.JdbcDefaultNoOpCacheTest;\n import org.apache.ignite.jdbc.JdbcEmptyCacheSelfTest;\n import org.apache.ignite.jdbc.JdbcLocalCachesSelfTest;\n import org.apache.ignite.jdbc.JdbcMetadataSelfTest;\n-import org.apache.ignite.jdbc.JdbcNoDefaultCacheTest;\n-import org.apache.ignite.jdbc.JdbcPojoLegacyQuerySelfTest;\n-import org.apache.ignite.jdbc.JdbcPojoQuerySelfTest;\n import org.apache.ignite.jdbc.JdbcPreparedStatementSelfTest;\n import org.apache.ignite.jdbc.JdbcResultSetSelfTest;\n import org.apache.ignite.jdbc.JdbcStatementSelfTest;\n-import org.apache.ignite.jdbc.JdbcThinMetadataSqlMatchTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinAuthenticateConnectionSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinAutoCloseServerCursorTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinBatchSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinBulkLoadAtomicPartitionedNearSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinBulkLoadAtomicPartitionedSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinBulkLoadAtomicReplicatedSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinBulkLoadTransactionalPartitionedNearSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinBulkLoadTransactionalPartitionedSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinBulkLoadTransactionalReplicatedSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinComplexDmlDdlCustomSchemaSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinComplexDmlDdlSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinComplexDmlDdlSkipReducerOnUpdateSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinComplexQuerySelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinConnectionMultipleAddressesTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinConnectionMvccEnabledSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinConnectionSSLTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinConnectionSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinConnectionTimeoutSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinDataPageScanPropertySelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinDataSourceSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinDefaultTimeoutTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinDeleteStatementSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinDynamicIndexAtomicPartitionedNearSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinDynamicIndexAtomicPartitionedSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinDynamicIndexAtomicReplicatedSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinDynamicIndexTransactionalPartitionedNearSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinDynamicIndexTransactionalPartitionedSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinDynamicIndexTransactionalReplicatedSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinEmptyCacheSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinErrorsSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinInsertStatementSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinInsertStatementSkipReducerOnUpdateSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinLocalQueriesSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinMergeStatementSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinMergeStatementSkipReducerOnUpdateSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinMetadataPrimaryKeysSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinMetadataSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinMissingLongArrayResultsTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinMultiStatementSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinNoDefaultSchemaTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinPreparedStatementLeakTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinPreparedStatementSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinResultSetSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinSchemaCaseSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinSelectAfterAlterTable;\n-import org.apache.ignite.jdbc.thin.JdbcThinStatementCancelSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinStatementSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinStatementTimeoutSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinStreamingNotOrderedSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinStreamingOrderedSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinStreamingResetStreamTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinTcpIoTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinTransactionsClientAutoCommitComplexSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinTransactionsClientNoAutoCommitComplexSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinTransactionsLeaksMvccTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinTransactionsSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinTransactionsServerAutoCommitComplexSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinTransactionsServerNoAutoCommitComplexSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinUpdateStatementSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinUpdateStatementSkipReducerOnUpdateSelfTest;\n-import org.apache.ignite.jdbc.thin.JdbcThinWalModeChangeSelfTest;\n+import org.apache.ignite.jdbc.*;\n+import org.apache.ignite.jdbc.thin.*;\n import org.junit.BeforeClass;\n import org.junit.runner.RunWith;\n import org.junit.runners.Suite;\n \n+import java.security.Security;\n+\n /**\n  * JDBC driver test suite.\n  */\n @RunWith(Suite.class)\n @Suite.SuiteClasses({\n-    JdbcConnectionSelfTest.class,\n-    JdbcStatementSelfTest.class,\n-    JdbcPreparedStatementSelfTest.class,\n-    JdbcResultSetSelfTest.class,\n-    JdbcComplexQuerySelfTest.class,\n-    JdbcMetadataSelfTest.class,\n-    JdbcEmptyCacheSelfTest.class,\n-    JdbcLocalCachesSelfTest.class,\n-    JdbcNoDefaultCacheTest.class,\n-    JdbcDefaultNoOpCacheTest.class,\n-    JdbcPojoQuerySelfTest.class,\n-    JdbcPojoLegacyQuerySelfTest.class,\n-    JdbcConnectionReopenTest.class,\n-\n-    // Ignite client node based driver tests\n-    org.apache.ignite.internal.jdbc2.JdbcConnectionSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcSpringSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcStatementSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcPreparedStatementSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcResultSetSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcComplexQuerySelfTest.class,\n-    JdbcDistributedJoinsQueryTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcMetadataSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcEmptyCacheSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcLocalCachesSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcConnectionWithoutCacheNameTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcMergeStatementSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcBinaryMarshallerMergeStatementSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcUpdateStatementSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcInsertStatementSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcBinaryMarshallerInsertStatementSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcDeleteStatementSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcStatementBatchingSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcErrorsSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcStreamingToPublicCacheTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcNoCacheStreamingSelfTest.class,\n-    JdbcBulkLoadSelfTest.class,\n-    JdbcSchemaCaseSelfTest.class,\n-\n-    JdbcBlobTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcStreamingSelfTest.class,\n-    JdbcThinStreamingNotOrderedSelfTest.class,\n-    JdbcThinStreamingOrderedSelfTest.class,\n-    JdbcThinDataPageScanPropertySelfTest.class,\n-    JdbcThinStreamingResetStreamTest.class,\n-\n-    // DDL tests.\n-    org.apache.ignite.internal.jdbc2.JdbcDynamicIndexAtomicPartitionedNearSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcDynamicIndexAtomicPartitionedSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcDynamicIndexAtomicReplicatedSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcDynamicIndexTransactionalPartitionedNearSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcDynamicIndexTransactionalPartitionedSelfTest.class,\n-    org.apache.ignite.internal.jdbc2.JdbcDynamicIndexTransactionalReplicatedSelfTest.class,\n-\n-    // New thin JDBC\n-    JdbcThinConnectionSelfTest.class,\n-    JdbcThinConnectionMvccEnabledSelfTest.class,\n-    JdbcThinConnectionMultipleAddressesTest.class,\n-    JdbcThinTcpIoTest.class,\n-    JdbcThinConnectionSSLTest.class,\n-    JdbcThinDataSourceSelfTest.class,\n-    JdbcThinPreparedStatementSelfTest.class,\n-    JdbcThinResultSetSelfTest.class,\n-\n-    JdbcThinStatementSelfTest.class,\n-    JdbcThinComplexQuerySelfTest.class,\n-    JdbcThinNoDefaultSchemaTest.class,\n-    JdbcThinSchemaCaseSelfTest.class,\n-    JdbcThinEmptyCacheSelfTest.class,\n-    JdbcThinMetadataSelfTest.class,\n-    JdbcThinMetadataPrimaryKeysSelfTest.class,\n-    JdbcThinMetadataSqlMatchTest.class,\n-    JdbcThinErrorsSelfTest.class,\n-    JdbcThinStatementCancelSelfTest.class,\n-    JdbcThinStatementTimeoutSelfTest.class,\n-    JdbcThinConnectionTimeoutSelfTest.class,\n-    JdbcThinDefaultTimeoutTest.class,\n-\n-    JdbcThinInsertStatementSelfTest.class,\n-    JdbcThinUpdateStatementSelfTest.class,\n-    JdbcThinMergeStatementSelfTest.class,\n-    JdbcThinDeleteStatementSelfTest.class,\n-    JdbcThinAutoCloseServerCursorTest.class,\n-    JdbcThinBatchSelfTest.class,\n-    JdbcThinMissingLongArrayResultsTest.class,\n-\n-    // New thin JDBC driver, DDL tests\n-    JdbcThinDynamicIndexAtomicPartitionedNearSelfTest.class,\n-    JdbcThinDynamicIndexAtomicPartitionedSelfTest.class,\n-    JdbcThinDynamicIndexAtomicReplicatedSelfTest.class,\n-    JdbcThinDynamicIndexTransactionalPartitionedNearSelfTest.class,\n-    JdbcThinDynamicIndexTransactionalPartitionedSelfTest.class,\n-    JdbcThinDynamicIndexTransactionalReplicatedSelfTest.class,\n-    JdbcThinMultiStatementSelfTest.class,\n-\n-    // New thin JDBC driver, DML tests\n-    JdbcThinBulkLoadAtomicPartitionedNearSelfTest.class,\n-    JdbcThinBulkLoadAtomicPartitionedSelfTest.class,\n-    JdbcThinBulkLoadAtomicReplicatedSelfTest.class,\n-    JdbcThinBulkLoadTransactionalPartitionedNearSelfTest.class,\n-    JdbcThinBulkLoadTransactionalPartitionedSelfTest.class,\n-    JdbcThinBulkLoadTransactionalReplicatedSelfTest.class,\n-\n-    // New thin JDBC driver, full SQL tests\n-    JdbcThinComplexDmlDdlSelfTest.class,\n-\n-    JdbcThinSelectAfterAlterTable.class,\n-\n-    // Update on server\n-    JdbcThinInsertStatementSkipReducerOnUpdateSelfTest.class,\n-    JdbcThinUpdateStatementSkipReducerOnUpdateSelfTest.class,\n-    JdbcThinMergeStatementSkipReducerOnUpdateSelfTest.class,\n-    JdbcThinComplexDmlDdlSkipReducerOnUpdateSelfTest.class,\n-    JdbcThinComplexDmlDdlCustomSchemaSelfTest.class,\n-\n-    // Transactions\n-    JdbcThinTransactionsSelfTest.class,\n-    JdbcThinTransactionsClientAutoCommitComplexSelfTest.class,\n-    JdbcThinTransactionsServerAutoCommitComplexSelfTest.class,\n-    JdbcThinTransactionsClientNoAutoCommitComplexSelfTest.class,\n-    JdbcThinTransactionsServerNoAutoCommitComplexSelfTest.class,\n-\n-    JdbcThinLocalQueriesSelfTest.class,\n-\n-    // Various commands.\n-    JdbcThinWalModeChangeSelfTest.class,\n-    JdbcThinAuthenticateConnectionSelfTest.class,\n-\n-    JdbcThinPreparedStatementLeakTest.class,\n-    JdbcThinTransactionsLeaksMvccTest.class,\n+        JdbcConnectionSelfTest.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26ee697ed55edf3ca41c7825ef745e9e66e4c3a"}, "originalPosition": 228}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODExODE2OnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAbstractDmlStatementSelfTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDoxNToyMVrOFiflug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo0MTowMFrOFijh9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxMzQ2Ng==", "bodyText": "empty line required.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371713466", "createdAt": "2020-01-28T10:15:21Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAbstractDmlStatementSelfTest.java", "diffHunk": "@@ -164,6 +165,19 @@ final CacheConfiguration binaryCacheConfig() {\n         return cache;\n     }\n \n+    /** Clean tables to avoid DDL errors in repeated test runs.  */\n+    protected void dropTables() throws SQLException {\n+        List<List<?>> tablesLeft = execute(conn, \"select CACHE_NAME, TABLE_NAME, SCHEMA_NAME from SYS.TABLES\");\n+        for( List<?> resultRecord : tablesLeft ){\n+            String cacheName = resultRecord.get(0).toString();\n+            if(cacheName.startsWith(\"SQL_\")){\n+                String tableName = resultRecord.get(1).toString();\n+                String schemaName = resultRecord.get(2).toString();\n+                execute(conn, \"drop table \"+schemaName+\".\\\"\"+tableName+\"\\\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f78249372b3aa6257610f041226292bcdda76e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3ODAzNw==", "bodyText": "Removed at all. Simplier approach involved: dropping table on the place: \"drop table...\"", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371778037", "createdAt": "2020-01-28T12:41:00Z", "author": {"login": "Vladsz83"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAbstractDmlStatementSelfTest.java", "diffHunk": "@@ -164,6 +165,19 @@ final CacheConfiguration binaryCacheConfig() {\n         return cache;\n     }\n \n+    /** Clean tables to avoid DDL errors in repeated test runs.  */\n+    protected void dropTables() throws SQLException {\n+        List<List<?>> tablesLeft = execute(conn, \"select CACHE_NAME, TABLE_NAME, SCHEMA_NAME from SYS.TABLES\");\n+        for( List<?> resultRecord : tablesLeft ){\n+            String cacheName = resultRecord.get(0).toString();\n+            if(cacheName.startsWith(\"SQL_\")){\n+                String tableName = resultRecord.get(1).toString();\n+                String schemaName = resultRecord.get(2).toString();\n+                execute(conn, \"drop table \"+schemaName+\".\\\"\"+tableName+\"\\\"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxMzQ2Ng=="}, "originalCommit": {"oid": "99f78249372b3aa6257610f041226292bcdda76e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODExOTI1OnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAbstractDmlStatementSelfTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDoxNTozN1rOFifmbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo0MTowNlrOFijiIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxMzY0Ng==", "bodyText": "empty line required.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371713646", "createdAt": "2020-01-28T10:15:37Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAbstractDmlStatementSelfTest.java", "diffHunk": "@@ -164,6 +165,19 @@ final CacheConfiguration binaryCacheConfig() {\n         return cache;\n     }\n \n+    /** Clean tables to avoid DDL errors in repeated test runs.  */\n+    protected void dropTables() throws SQLException {\n+        List<List<?>> tablesLeft = execute(conn, \"select CACHE_NAME, TABLE_NAME, SCHEMA_NAME from SYS.TABLES\");\n+        for( List<?> resultRecord : tablesLeft ){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f78249372b3aa6257610f041226292bcdda76e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3ODA4MA==", "bodyText": "Removed at all.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371778080", "createdAt": "2020-01-28T12:41:06Z", "author": {"login": "Vladsz83"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAbstractDmlStatementSelfTest.java", "diffHunk": "@@ -164,6 +165,19 @@ final CacheConfiguration binaryCacheConfig() {\n         return cache;\n     }\n \n+    /** Clean tables to avoid DDL errors in repeated test runs.  */\n+    protected void dropTables() throws SQLException {\n+        List<List<?>> tablesLeft = execute(conn, \"select CACHE_NAME, TABLE_NAME, SCHEMA_NAME from SYS.TABLES\");\n+        for( List<?> resultRecord : tablesLeft ){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxMzY0Ng=="}, "originalCommit": {"oid": "99f78249372b3aa6257610f041226292bcdda76e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODEyMjgyOnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDoxNjozNVrOFifojw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo0MToyNVrOFijixA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxNDE5MQ==", "bodyText": "We should use static import in both cases", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371714191", "createdAt": "2020-01-28T10:16:35Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -89,6 +94,31 @@\n     /** JDBC statement. */\n     private Statement stmt;\n \n+    /** Parametrized run param : cacheMode */\n+    @Parameterized.Parameter(0)\n+    public CacheMode cacheMode;\n+\n+    /** Parametrized run param : atomicity */\n+    @Parameterized.Parameter(1)\n+    public CacheAtomicityMode atomicityMode;\n+\n+    /** Parametrized run param : near mode */\n+    @Parameterized.Parameter(2)\n+    public Boolean isNear;\n+\n+    /** Test run configurations: Cache mode, atomicity type, is near */\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> runConfig() {\n+        return Arrays.asList(new Object[][] {\n+            { PARTITIONED, CacheAtomicityMode.ATOMIC, true },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f78249372b3aa6257610f041226292bcdda76e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3ODI0NA==", "bodyText": "Fixed", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371778244", "createdAt": "2020-01-28T12:41:25Z", "author": {"login": "Vladsz83"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -89,6 +94,31 @@\n     /** JDBC statement. */\n     private Statement stmt;\n \n+    /** Parametrized run param : cacheMode */\n+    @Parameterized.Parameter(0)\n+    public CacheMode cacheMode;\n+\n+    /** Parametrized run param : atomicity */\n+    @Parameterized.Parameter(1)\n+    public CacheAtomicityMode atomicityMode;\n+\n+    /** Parametrized run param : near mode */\n+    @Parameterized.Parameter(2)\n+    public Boolean isNear;\n+\n+    /** Test run configurations: Cache mode, atomicity type, is near */\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> runConfig() {\n+        return Arrays.asList(new Object[][] {\n+            { PARTITIONED, CacheAtomicityMode.ATOMIC, true },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxNDE5MQ=="}, "originalCommit": {"oid": "99f78249372b3aa6257610f041226292bcdda76e"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODEyNjI2OnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDoxNzo0NVrOFifq8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo0MTo0MVrOFijjSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxNDgwMg==", "bodyText": "Can we also remove this methods and use variables?", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371714802", "createdAt": "2020-01-28T10:17:45Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -154,21 +184,21 @@ private CacheConfiguration cacheConfigWithQueryEntity() {\n      *\n      * @return true if we are testing near cache.\n      */\n-    protected abstract boolean nearCache();\n+    protected boolean nearCache(){ return isNear; };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f78249372b3aa6257610f041226292bcdda76e"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3ODM3Nw==", "bodyText": "yep", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371778377", "createdAt": "2020-01-28T12:41:41Z", "author": {"login": "Vladsz83"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -154,21 +184,21 @@ private CacheConfiguration cacheConfigWithQueryEntity() {\n      *\n      * @return true if we are testing near cache.\n      */\n-    protected abstract boolean nearCache();\n+    protected boolean nearCache(){ return isNear; };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxNDgwMg=="}, "originalCommit": {"oid": "99f78249372b3aa6257610f041226292bcdda76e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODU2NzcyOnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo1MjoyN1rOFij2PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzowNzoxOFrOFikRBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MzIyOQ==", "bodyText": ". in the end of the comment required.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371783229", "createdAt": "2020-01-28T12:52:27Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -89,6 +96,31 @@\n     /** JDBC statement. */\n     private Statement stmt;\n \n+    /** Parametrized run param : cacheMode */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d280b1db2796447dd2ba3f96f7cfa6d9d3dc9ec"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MDA4Ng==", "bodyText": "fixed.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371790086", "createdAt": "2020-01-28T13:07:18Z", "author": {"login": "Vladsz83"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -89,6 +96,31 @@\n     /** JDBC statement. */\n     private Statement stmt;\n \n+    /** Parametrized run param : cacheMode */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MzIyOQ=="}, "originalCommit": {"oid": "4d280b1db2796447dd2ba3f96f7cfa6d9d3dc9ec"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODU2ODAwOnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo1MjozMlrOFij2Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzowNzoxM1rOFikQ5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MzI2Nw==", "bodyText": ". in the end of the comment required.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371783267", "createdAt": "2020-01-28T12:52:32Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -89,6 +96,31 @@\n     /** JDBC statement. */\n     private Statement stmt;\n \n+    /** Parametrized run param : cacheMode */\n+    @Parameterized.Parameter(0)\n+    public CacheMode cacheMode;\n+\n+    /** Parametrized run param : atomicity */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d280b1db2796447dd2ba3f96f7cfa6d9d3dc9ec"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MDA1Mw==", "bodyText": "fixed.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371790053", "createdAt": "2020-01-28T13:07:13Z", "author": {"login": "Vladsz83"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -89,6 +96,31 @@\n     /** JDBC statement. */\n     private Statement stmt;\n \n+    /** Parametrized run param : cacheMode */\n+    @Parameterized.Parameter(0)\n+    public CacheMode cacheMode;\n+\n+    /** Parametrized run param : atomicity */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MzI2Nw=="}, "originalCommit": {"oid": "4d280b1db2796447dd2ba3f96f7cfa6d9d3dc9ec"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODU2ODI1OnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo1MjozN1rOFij2jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzowNzowOFrOFikQsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MzMwOQ==", "bodyText": ". in the end of the comment required.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371783309", "createdAt": "2020-01-28T12:52:37Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -89,6 +96,31 @@\n     /** JDBC statement. */\n     private Statement stmt;\n \n+    /** Parametrized run param : cacheMode */\n+    @Parameterized.Parameter(0)\n+    public CacheMode cacheMode;\n+\n+    /** Parametrized run param : atomicity */\n+    @Parameterized.Parameter(1)\n+    public CacheAtomicityMode atomicityMode;\n+\n+    /** Parametrized run param : near mode */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d280b1db2796447dd2ba3f96f7cfa6d9d3dc9ec"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MDAwMw==", "bodyText": "fixed.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371790003", "createdAt": "2020-01-28T13:07:08Z", "author": {"login": "Vladsz83"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -89,6 +96,31 @@\n     /** JDBC statement. */\n     private Statement stmt;\n \n+    /** Parametrized run param : cacheMode */\n+    @Parameterized.Parameter(0)\n+    public CacheMode cacheMode;\n+\n+    /** Parametrized run param : atomicity */\n+    @Parameterized.Parameter(1)\n+    public CacheAtomicityMode atomicityMode;\n+\n+    /** Parametrized run param : near mode */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MzMwOQ=="}, "originalCommit": {"oid": "4d280b1db2796447dd2ba3f96f7cfa6d9d3dc9ec"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODU2ODU0OnYy", "diffSide": "RIGHT", "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo1Mjo0NFrOFij2tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzowNzowM1rOFikQig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MzM1MQ==", "bodyText": ". in the end of the comment required.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371783351", "createdAt": "2020-01-28T12:52:44Z", "author": {"login": "nizhikov"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -89,6 +96,31 @@\n     /** JDBC statement. */\n     private Statement stmt;\n \n+    /** Parametrized run param : cacheMode */\n+    @Parameterized.Parameter(0)\n+    public CacheMode cacheMode;\n+\n+    /** Parametrized run param : atomicity */\n+    @Parameterized.Parameter(1)\n+    public CacheAtomicityMode atomicityMode;\n+\n+    /** Parametrized run param : near mode */\n+    @Parameterized.Parameter(2)\n+    public Boolean isNear;\n+\n+    /** Test run configurations: Cache mode, atomicity type, is near */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d280b1db2796447dd2ba3f96f7cfa6d9d3dc9ec"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4OTk2Mg==", "bodyText": "fixed.", "url": "https://github.com/apache/ignite/pull/7319#discussion_r371789962", "createdAt": "2020-01-28T13:07:03Z", "author": {"login": "Vladsz83"}, "path": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinBulkLoadSelfTest.java", "diffHunk": "@@ -89,6 +96,31 @@\n     /** JDBC statement. */\n     private Statement stmt;\n \n+    /** Parametrized run param : cacheMode */\n+    @Parameterized.Parameter(0)\n+    public CacheMode cacheMode;\n+\n+    /** Parametrized run param : atomicity */\n+    @Parameterized.Parameter(1)\n+    public CacheAtomicityMode atomicityMode;\n+\n+    /** Parametrized run param : near mode */\n+    @Parameterized.Parameter(2)\n+    public Boolean isNear;\n+\n+    /** Test run configurations: Cache mode, atomicity type, is near */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MzM1MQ=="}, "originalCommit": {"oid": "4d280b1db2796447dd2ba3f96f7cfa6d9d3dc9ec"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2583, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}