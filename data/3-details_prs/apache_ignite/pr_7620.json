{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDkzOTY2", "number": 7620, "title": "IGNITE-12828 Fixes NPE during CQ registration with failed deployment.", "bodyText": "", "createdAt": "2020-04-03T10:32:48Z", "url": "https://github.com/apache/ignite/pull/7620", "merged": true, "mergeCommit": {"oid": "f57509e8e6d51c79752ab66af768a936e7cb725e"}, "closed": true, "closedAt": "2020-04-08T15:16:24Z", "author": {"login": "ololo3000"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcT_SmrgH2gAyMzk4MDkzOTY2OjM4ZDlmZjdjMmI5OGU3NzIzYjk2MmZhMWU1MDM2ZDMxMWJiOWRjMmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVpaF9AH2gAyMzk4MDkzOTY2OmZmNjQ2YTk4YTFlZmVhYWEyMTNmZTk2ZGU5MzUyY2ExNGYwYmViM2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "38d9ff7c2b98e7723b962fa1e5036d311bb9dc2b", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/38d9ff7c2b98e7723b962fa1e5036d311bb9dc2b", "committedDate": "2020-04-03T11:34:59Z", "message": "IGNITE-12828 Fixes NPE during CQ registration with failed deployment."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "513ce7fff8e0a47923d367b3f04271edf7f052fc", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/513ce7fff8e0a47923d367b3f04271edf7f052fc", "committedDate": "2020-04-03T10:21:44Z", "message": "IGNITE-12828 Fixes NPE during CQ registration with failed deployment."}, "afterCommit": {"oid": "38d9ff7c2b98e7723b962fa1e5036d311bb9dc2b", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/38d9ff7c2b98e7723b962fa1e5036d311bb9dc2b", "committedDate": "2020-04-03T11:34:59Z", "message": "IGNITE-12828 Fixes NPE during CQ registration with failed deployment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDc3MDE5", "url": "https://github.com/apache/ignite/pull/7620#pullrequestreview-387477019", "createdAt": "2020-04-03T18:12:22Z", "commit": {"oid": "38d9ff7c2b98e7723b962fa1e5036d311bb9dc2b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxODoxMjoyMlrOGAiB1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxODoyNDoxNlrOGAipjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxMDcwOA==", "bodyText": "Is err == null not enough?", "url": "https://github.com/apache/ignite/pull/7620#discussion_r403210708", "createdAt": "2020-04-03T18:12:22Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/continuous/GridContinuousProcessor.java", "diffHunk": "@@ -1472,14 +1472,16 @@ private void processStartRequest(ClusterNode node, StartRoutineDiscoveryMessage\n         }\n \n         // Load partition counters.\n-        if (hnd.isQuery()) {\n+        if (err == null && hnd.isQuery()) {\n             GridCacheProcessor proc = ctx.cache();\n \n             if (proc != null) {\n                 GridCacheAdapter cache = ctx.cache().internalCache(hnd.cacheName());\n \n-                if (cache != null && !cache.isLocal() && cache.context().userCache())\n-                    req.addUpdateCounters(ctx.localNodeId(), hnd.updateCounters());\n+                Map<Integer, T2<Long, Long>> cntrs = hnd.updateCounters();\n+\n+                if (cache != null && cntrs != null && !cache.isLocal() && cache.context().userCache())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38d9ff7c2b98e7723b962fa1e5036d311bb9dc2b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxMjg5OQ==", "bodyText": "typo: behavior", "url": "https://github.com/apache/ignite/pull/7620#discussion_r403212899", "createdAt": "2020-04-03T18:14:46Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryFilterDeploymentFailedTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.query.continuous;\n+\n+import javax.cache.CacheException;\n+import javax.cache.configuration.Factory;\n+import javax.cache.event.CacheEntryEventFilter;\n+import org.apache.ignite.cache.query.ContinuousQuery;\n+import org.apache.ignite.cluster.ClusterState;\n+import org.apache.ignite.configuration.CacheConfiguration;\n+import org.apache.ignite.configuration.IgniteConfiguration;\n+import org.apache.ignite.internal.TestRecordingCommunicationSpi;\n+import org.apache.ignite.internal.managers.deployment.GridDeploymentRequest;\n+import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;\n+import org.junit.Test;\n+\n+import static org.apache.ignite.internal.TestRecordingCommunicationSpi.spi;\n+import static org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.CQ_SYS_VIEW;\n+import static org.apache.ignite.testframework.GridTestUtils.assertThrowsAnyCause;\n+\n+/**\n+ * Tests the behaviour of continuous query registration in case the remote node failed to obtain the filter deployment.\n+ */\n+public class ContinuousQueryFilterDeploymentFailedTest extends GridCommonAbstractTest {\n+    /** The name of the CQ filter factory class. Its obtaining on a non-local node requires P2P class loading. */\n+    private static final String EXT_FILTER_CLS = \"org.apache.ignite.tests.p2p.CacheDeploymentEntryEventFilterFactory\";\n+\n+    /** {@inheritDoc} */\n+    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {\n+        IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);\n+\n+        cfg.setCommunicationSpi(new TestRecordingCommunicationSpi());\n+        cfg.setPeerClassLoadingEnabled(true);\n+        cfg.setNetworkTimeout(1000);\n+\n+        return cfg;\n+    }\n+\n+    /**\n+     * Tests continuous query behaviour in case of filter deployment obtaining failure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38d9ff7c2b98e7723b962fa1e5036d311bb9dc2b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxMzMxNA==", "bodyText": "Missed @throws", "url": "https://github.com/apache/ignite/pull/7620#discussion_r403213314", "createdAt": "2020-04-03T18:15:14Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryFilterDeploymentFailedTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.query.continuous;\n+\n+import javax.cache.CacheException;\n+import javax.cache.configuration.Factory;\n+import javax.cache.event.CacheEntryEventFilter;\n+import org.apache.ignite.cache.query.ContinuousQuery;\n+import org.apache.ignite.cluster.ClusterState;\n+import org.apache.ignite.configuration.CacheConfiguration;\n+import org.apache.ignite.configuration.IgniteConfiguration;\n+import org.apache.ignite.internal.TestRecordingCommunicationSpi;\n+import org.apache.ignite.internal.managers.deployment.GridDeploymentRequest;\n+import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;\n+import org.junit.Test;\n+\n+import static org.apache.ignite.internal.TestRecordingCommunicationSpi.spi;\n+import static org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.CQ_SYS_VIEW;\n+import static org.apache.ignite.testframework.GridTestUtils.assertThrowsAnyCause;\n+\n+/**\n+ * Tests the behaviour of continuous query registration in case the remote node failed to obtain the filter deployment.\n+ */\n+public class ContinuousQueryFilterDeploymentFailedTest extends GridCommonAbstractTest {\n+    /** The name of the CQ filter factory class. Its obtaining on a non-local node requires P2P class loading. */\n+    private static final String EXT_FILTER_CLS = \"org.apache.ignite.tests.p2p.CacheDeploymentEntryEventFilterFactory\";\n+\n+    /** {@inheritDoc} */\n+    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {\n+        IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);\n+\n+        cfg.setCommunicationSpi(new TestRecordingCommunicationSpi());\n+        cfg.setPeerClassLoadingEnabled(true);\n+        cfg.setNetworkTimeout(1000);\n+\n+        return cfg;\n+    }\n+\n+    /**\n+     * Tests continuous query behaviour in case of filter deployment obtaining failure.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38d9ff7c2b98e7723b962fa1e5036d311bb9dc2b"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxOTk4Mg==", "bodyText": "? extends  is unnecessary", "url": "https://github.com/apache/ignite/pull/7620#discussion_r403219982", "createdAt": "2020-04-03T18:23:11Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryFilterDeploymentFailedTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.query.continuous;\n+\n+import javax.cache.CacheException;\n+import javax.cache.configuration.Factory;\n+import javax.cache.event.CacheEntryEventFilter;\n+import org.apache.ignite.cache.query.ContinuousQuery;\n+import org.apache.ignite.cluster.ClusterState;\n+import org.apache.ignite.configuration.CacheConfiguration;\n+import org.apache.ignite.configuration.IgniteConfiguration;\n+import org.apache.ignite.internal.TestRecordingCommunicationSpi;\n+import org.apache.ignite.internal.managers.deployment.GridDeploymentRequest;\n+import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;\n+import org.junit.Test;\n+\n+import static org.apache.ignite.internal.TestRecordingCommunicationSpi.spi;\n+import static org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.CQ_SYS_VIEW;\n+import static org.apache.ignite.testframework.GridTestUtils.assertThrowsAnyCause;\n+\n+/**\n+ * Tests the behaviour of continuous query registration in case the remote node failed to obtain the filter deployment.\n+ */\n+public class ContinuousQueryFilterDeploymentFailedTest extends GridCommonAbstractTest {\n+    /** The name of the CQ filter factory class. Its obtaining on a non-local node requires P2P class loading. */\n+    private static final String EXT_FILTER_CLS = \"org.apache.ignite.tests.p2p.CacheDeploymentEntryEventFilterFactory\";\n+\n+    /** {@inheritDoc} */\n+    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {\n+        IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);\n+\n+        cfg.setCommunicationSpi(new TestRecordingCommunicationSpi());\n+        cfg.setPeerClassLoadingEnabled(true);\n+        cfg.setNetworkTimeout(1000);\n+\n+        return cfg;\n+    }\n+\n+    /**\n+     * Tests continuous query behaviour in case of filter deployment obtaining failure.\n+     */\n+    @Test\n+    @SuppressWarnings({\"ThrowableNotThrown\"})\n+    public void testContinuousQueryFilterDeploymentFailed() throws Exception {\n+        startGrids(2).cluster().state(ClusterState.ACTIVE);\n+\n+        grid(0).createCache(new CacheConfiguration<>(DEFAULT_CACHE_NAME));\n+\n+        ContinuousQuery<Integer, Integer> qry = new ContinuousQuery<>();\n+\n+        Class<Factory<? extends CacheEntryEventFilter<Integer, Integer>>> filterFactoryCls =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38d9ff7c2b98e7723b962fa1e5036d311bb9dc2b"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIyMDg3Nw==", "bodyText": "Whitespace after the cast is unnecessary.", "url": "https://github.com/apache/ignite/pull/7620#discussion_r403220877", "createdAt": "2020-04-03T18:24:16Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryFilterDeploymentFailedTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.query.continuous;\n+\n+import javax.cache.CacheException;\n+import javax.cache.configuration.Factory;\n+import javax.cache.event.CacheEntryEventFilter;\n+import org.apache.ignite.cache.query.ContinuousQuery;\n+import org.apache.ignite.cluster.ClusterState;\n+import org.apache.ignite.configuration.CacheConfiguration;\n+import org.apache.ignite.configuration.IgniteConfiguration;\n+import org.apache.ignite.internal.TestRecordingCommunicationSpi;\n+import org.apache.ignite.internal.managers.deployment.GridDeploymentRequest;\n+import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;\n+import org.junit.Test;\n+\n+import static org.apache.ignite.internal.TestRecordingCommunicationSpi.spi;\n+import static org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.CQ_SYS_VIEW;\n+import static org.apache.ignite.testframework.GridTestUtils.assertThrowsAnyCause;\n+\n+/**\n+ * Tests the behaviour of continuous query registration in case the remote node failed to obtain the filter deployment.\n+ */\n+public class ContinuousQueryFilterDeploymentFailedTest extends GridCommonAbstractTest {\n+    /** The name of the CQ filter factory class. Its obtaining on a non-local node requires P2P class loading. */\n+    private static final String EXT_FILTER_CLS = \"org.apache.ignite.tests.p2p.CacheDeploymentEntryEventFilterFactory\";\n+\n+    /** {@inheritDoc} */\n+    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {\n+        IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);\n+\n+        cfg.setCommunicationSpi(new TestRecordingCommunicationSpi());\n+        cfg.setPeerClassLoadingEnabled(true);\n+        cfg.setNetworkTimeout(1000);\n+\n+        return cfg;\n+    }\n+\n+    /**\n+     * Tests continuous query behaviour in case of filter deployment obtaining failure.\n+     */\n+    @Test\n+    @SuppressWarnings({\"ThrowableNotThrown\"})\n+    public void testContinuousQueryFilterDeploymentFailed() throws Exception {\n+        startGrids(2).cluster().state(ClusterState.ACTIVE);\n+\n+        grid(0).createCache(new CacheConfiguration<>(DEFAULT_CACHE_NAME));\n+\n+        ContinuousQuery<Integer, Integer> qry = new ContinuousQuery<>();\n+\n+        Class<Factory<? extends CacheEntryEventFilter<Integer, Integer>>> filterFactoryCls =\n+            (Class<Factory<? extends CacheEntryEventFilter<Integer, Integer>>>) getExternalClassLoader()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38d9ff7c2b98e7723b962fa1e5036d311bb9dc2b"}, "originalPosition": 67}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6c43bf24b632d04ad11ac5e8104eee6a2b2d3eb", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/f6c43bf24b632d04ad11ac5e8104eee6a2b2d3eb", "committedDate": "2020-04-05T13:41:03Z", "message": "IGNITE-12828 Removes CQ handler cache update counters null check."}, "afterCommit": {"oid": "4da37044b9888fdfd279bc8732826bbebbe0e901", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/4da37044b9888fdfd279bc8732826bbebbe0e901", "committedDate": "2020-04-05T13:45:16Z", "message": "IGNITE-12828 Removes CQ handler cache update counters null check."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53e7822176fe45de6045fee18f48c85435747b42", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/53e7822176fe45de6045fee18f48c85435747b42", "committedDate": "2020-04-05T14:07:36Z", "message": "IGNITE-12828 Removes CQ handler cache update counters null check."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4da37044b9888fdfd279bc8732826bbebbe0e901", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/4da37044b9888fdfd279bc8732826bbebbe0e901", "committedDate": "2020-04-05T13:45:16Z", "message": "IGNITE-12828 Removes CQ handler cache update counters null check."}, "afterCommit": {"oid": "53e7822176fe45de6045fee18f48c85435747b42", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/53e7822176fe45de6045fee18f48c85435747b42", "committedDate": "2020-04-05T14:07:36Z", "message": "IGNITE-12828 Removes CQ handler cache update counters null check."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3ODQ5OTcx", "url": "https://github.com/apache/ignite/pull/7620#pullrequestreview-387849971", "createdAt": "2020-04-05T19:02:34Z", "commit": {"oid": "53e7822176fe45de6045fee18f48c85435747b42"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOTowMjozNFrOGBCiYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOTowMjozNFrOGBCiYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc0MzMyOQ==", "bodyText": "Let's use a shortened form rmt", "url": "https://github.com/apache/ignite/pull/7620#discussion_r403743329", "createdAt": "2020-04-05T19:02:34Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryFilterDeploymentFailedTest.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.query.continuous;\n+\n+import javax.cache.CacheException;\n+import javax.cache.configuration.Factory;\n+import javax.cache.event.CacheEntryEventFilter;\n+import org.apache.ignite.cache.query.ContinuousQuery;\n+import org.apache.ignite.cluster.ClusterState;\n+import org.apache.ignite.configuration.CacheConfiguration;\n+import org.apache.ignite.configuration.IgniteConfiguration;\n+import org.apache.ignite.internal.TestRecordingCommunicationSpi;\n+import org.apache.ignite.internal.managers.deployment.GridDeploymentRequest;\n+import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;\n+import org.junit.Test;\n+\n+import static org.apache.ignite.internal.TestRecordingCommunicationSpi.spi;\n+import static org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.CQ_SYS_VIEW;\n+import static org.apache.ignite.testframework.GridTestUtils.assertThrowsAnyCause;\n+\n+/**\n+ * Tests the behavior of continuous query registration in case the remote node failed to obtain the filter deployment.\n+ */\n+public class CacheContinuousQueryFilterDeploymentFailedTest extends GridCommonAbstractTest {\n+    /** The name of the CQ filter factory class. Its obtaining on a non-local node requires P2P class loading. */\n+    private static final String EXT_FILTER_FACTORY_CLS =\n+        \"org.apache.ignite.tests.p2p.CacheDeploymentEntryEventFilterFactory\";\n+\n+    /** {@inheritDoc} */\n+    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {\n+        IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);\n+\n+        cfg.setCommunicationSpi(new TestRecordingCommunicationSpi());\n+        cfg.setNetworkTimeout(1000);\n+\n+        return cfg;\n+    }\n+\n+    /**\n+     * Tests continuous query behavior in case of filter deployment obtaining failure.\n+     *\n+     * @throws Exception If failed.\n+     */\n+    @Test\n+    @SuppressWarnings({\"ThrowableNotThrown\"})\n+    public void testContinuousQueryFilterDeploymentFailed() throws Exception {\n+        startGrids(2).cluster().state(ClusterState.ACTIVE);\n+\n+        grid(0).createCache(new CacheConfiguration<>(DEFAULT_CACHE_NAME));\n+\n+        ContinuousQuery<Integer, Integer> qry = new ContinuousQuery<>();\n+\n+        Class<Factory<CacheEntryEventFilter<Integer, Integer>>> remoteFilterFactoryCls =\n+            (Class<Factory<CacheEntryEventFilter<Integer, Integer>>>)getExternalClassLoader()\n+                .loadClass(EXT_FILTER_FACTORY_CLS);\n+\n+        Factory<CacheEntryEventFilter<Integer, Integer>> remoteFilterFactory = remoteFilterFactoryCls.newInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e7822176fe45de6045fee18f48c85435747b42"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1adb0ea7704c5a7c11e4d83ce62ad0041fa8e04", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/a1adb0ea7704c5a7c11e4d83ce62ad0041fa8e04", "committedDate": "2020-04-05T20:04:43Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDQ2Mjg1", "url": "https://github.com/apache/ignite/pull/7620#pullrequestreview-388446285", "createdAt": "2020-04-06T17:02:42Z", "commit": {"oid": "a1adb0ea7704c5a7c11e4d83ce62ad0041fa8e04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ea4902e764f0623aff5e5c697791cc021ffba43", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/1ea4902e764f0623aff5e5c697791cc021ffba43", "committedDate": "2020-04-07T16:03:12Z", "message": "IGNITE-12828 Adds client node to test case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6861d6fd81da408083fbfc3f527f180dd37fed7", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/e6861d6fd81da408083fbfc3f527f180dd37fed7", "committedDate": "2020-04-08T08:45:27Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5ODIyNzY2", "url": "https://github.com/apache/ignite/pull/7620#pullrequestreview-389822766", "createdAt": "2020-04-08T09:52:47Z", "commit": {"oid": "e6861d6fd81da408083fbfc3f527f180dd37fed7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTo1Mjo0N1rOGCnwYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTo1Mjo0N1rOGCnwYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwMTY5OQ==", "bodyText": "Unnecessary line break", "url": "https://github.com/apache/ignite/pull/7620#discussion_r405401699", "createdAt": "2020-04-08T09:52:47Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/CacheContinuousQueryFilterDeploymentFailedTest.java", "diffHunk": "@@ -0,0 +1,180 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.query.continuous;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import javax.cache.CacheException;\n+import javax.cache.configuration.Factory;\n+import javax.cache.event.CacheEntryEventFilter;\n+import org.apache.ignite.Ignite;\n+import org.apache.ignite.cache.query.ContinuousQuery;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.configuration.CacheConfiguration;\n+import org.apache.ignite.configuration.IgniteConfiguration;\n+import org.apache.ignite.internal.IgniteEx;\n+import org.apache.ignite.internal.TestRecordingCommunicationSpi;\n+import org.apache.ignite.internal.managers.deployment.GridDeploymentRequest;\n+import org.apache.ignite.internal.managers.discovery.DiscoveryCustomMessage;\n+import org.apache.ignite.internal.processors.continuous.StopRoutineDiscoveryMessage;\n+import org.apache.ignite.internal.util.typedef.G;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.lang.IgniteFuture;\n+import org.apache.ignite.spi.discovery.DiscoverySpi;\n+import org.apache.ignite.spi.discovery.DiscoverySpiCustomMessage;\n+import org.apache.ignite.spi.discovery.DiscoverySpiListener;\n+import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi;\n+import org.apache.ignite.spi.systemview.view.ContinuousQueryView;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+import org.apache.ignite.testframework.GridTestUtils;\n+import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;\n+import org.jetbrains.annotations.Nullable;\n+import org.junit.Test;\n+\n+import static org.apache.ignite.cluster.ClusterState.ACTIVE;\n+import static org.apache.ignite.internal.TestRecordingCommunicationSpi.spi;\n+import static org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.CQ_SYS_VIEW;\n+import static org.apache.ignite.testframework.GridTestUtils.assertThrowsAnyCause;\n+\n+/**\n+ * Tests the behavior of continuous query registration in case the remote node failed to obtain the filter deployment.\n+ */\n+public class CacheContinuousQueryFilterDeploymentFailedTest extends GridCommonAbstractTest {\n+    /** The name of the CQ filter factory class. Its obtaining on a non-local node requires P2P class loading. */\n+    private static final String EXT_FILTER_FACTORY_CLS =\n+        \"org.apache.ignite.tests.p2p.CacheDeploymentEntryEventFilterFactory\";\n+\n+    /** Counter of nodes that finished processing of {@link StopRoutineDiscoveryMessage}. */\n+    private final AtomicInteger stopRoutineMsgCntr = new AtomicInteger();\n+\n+    /** {@inheritDoc} */\n+    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {\n+        IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);\n+\n+        DiscoverySpi spi = new TcpDiscoverySpi() {\n+            @Override public void setListener(@Nullable DiscoverySpiListener lsnr) {\n+                super.setListener(lsnr == null ? null : new TestDiscoverySpiListener(lsnr, stopRoutineMsgCntr));\n+            }\n+        };\n+\n+        cfg.setCommunicationSpi(new TestRecordingCommunicationSpi());\n+        cfg.setNetworkTimeout(1000);\n+        cfg.setDiscoverySpi(spi);\n+\n+        return cfg;\n+    }\n+\n+    /**\n+     * Tests continuous query behavior in case of filter deployment obtaining failure.\n+     *\n+     * @throws Exception If failed.\n+     */\n+    @Test\n+    @SuppressWarnings({\"ThrowableNotThrown\"})\n+    public void testContinuousQueryFilterDeploymentFailed() throws Exception {\n+        IgniteEx ignite = startGrids(2);\n+\n+        IgniteEx client = startClientGrid(2);\n+\n+        ignite.cluster().state(ACTIVE);\n+\n+        ignite.createCache(new CacheConfiguration<>(DEFAULT_CACHE_NAME));\n+\n+        ContinuousQuery<Integer, Integer> qry = new ContinuousQuery<>();\n+\n+        Class<Factory<CacheEntryEventFilter<Integer, Integer>>> rmtFilterFactoryCls =\n+            (Class<Factory<CacheEntryEventFilter<Integer, Integer>>>)getExternalClassLoader()\n+                .loadClass(EXT_FILTER_FACTORY_CLS);\n+\n+        Factory<CacheEntryEventFilter<Integer, Integer>> rmtFilterFactory = rmtFilterFactoryCls.newInstance();\n+\n+        qry.setRemoteFilterFactory(rmtFilterFactory);\n+\n+        spi(grid(1)).blockMessages((node, msg) -> msg instanceof GridDeploymentRequest);\n+\n+        assertThrowsAnyCause(\n+            log,\n+            () -> client.cache(DEFAULT_CACHE_NAME).query(qry),\n+            CacheException.class,\n+            \"Failed to start continuous query.\"\n+        );\n+\n+        checkContinuousQueryAborted();\n+    }\n+\n+    /**\n+     * Awaits handling of stop routine message on all cluster nodes and checks that CQ registraition was fully aborted.\n+     */\n+    private void checkContinuousQueryAborted() throws Exception {\n+        List<Ignite> grids = G.allGrids();\n+\n+        GridTestUtils.waitForCondition(() -> stopRoutineMsgCntr.get() == grids.size(), getTestTimeout());\n+\n+        assertTrue(grids.stream().allMatch(ignite -> {\n+            SystemView<ContinuousQueryView> locQrys = ((IgniteEx)ignite).context().systemView().view(CQ_SYS_VIEW);\n+\n+            return locQrys.size() == 0;\n+        }));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6861d6fd81da408083fbfc3f527f180dd37fed7"}, "originalPosition": 135}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "425d90094206932d8ed2055ea39446c671ca9e07", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/425d90094206932d8ed2055ea39446c671ca9e07", "committedDate": "2020-04-08T10:16:31Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3775e63a5d1b77026d35f0230575f4670e4c93c9", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/3775e63a5d1b77026d35f0230575f4670e4c93c9", "committedDate": "2020-04-08T11:47:14Z", "message": "IGNITE-12828 Refactors test configuration."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7cf128704d3dcad328124715a4796e2630cd553", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/f7cf128704d3dcad328124715a4796e2630cd553", "committedDate": "2020-04-08T11:44:55Z", "message": "IGNITE-12828 Refactors test configuration."}, "afterCommit": {"oid": "3775e63a5d1b77026d35f0230575f4670e4c93c9", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/3775e63a5d1b77026d35f0230575f4670e4c93c9", "committedDate": "2020-04-08T11:47:14Z", "message": "IGNITE-12828 Refactors test configuration."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b8a260d33e7125ec2156c103c50035273152057", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/4b8a260d33e7125ec2156c103c50035273152057", "committedDate": "2020-04-08T12:07:47Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3dba5e1741da686c82c6ebe9b20722f70b46b4d", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/e3dba5e1741da686c82c6ebe9b20722f70b46b4d", "committedDate": "2020-04-08T12:06:08Z", "message": "IGNITE-12828 Fixes minor issues."}, "afterCommit": {"oid": "4b8a260d33e7125ec2156c103c50035273152057", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/4b8a260d33e7125ec2156c103c50035273152057", "committedDate": "2020-04-08T12:07:47Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46f37544fd34abb4585ad924b1d7dde9b20b5cad", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/46f37544fd34abb4585ad924b1d7dde9b20b5cad", "committedDate": "2020-04-08T12:18:15Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdc7f66c9ab351a73ad8ac91461bcb479a905ff3", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/fdc7f66c9ab351a73ad8ac91461bcb479a905ff3", "committedDate": "2020-04-08T13:15:16Z", "message": "IGNITE-12828 Changes DiscoveryHook method naming."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb9b54c66087ba4b14cba0a0273c7574aaf8424f", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/eb9b54c66087ba4b14cba0a0273c7574aaf8424f", "committedDate": "2020-04-08T13:10:59Z", "message": "IGNITE-12828 Changes DiscoveryHook methods naming."}, "afterCommit": {"oid": "fdc7f66c9ab351a73ad8ac91461bcb479a905ff3", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/fdc7f66c9ab351a73ad8ac91461bcb479a905ff3", "committedDate": "2020-04-08T13:15:16Z", "message": "IGNITE-12828 Changes DiscoveryHook method naming."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6199bc1a086f905628bfcf07cba9d98ed835943b", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/6199bc1a086f905628bfcf07cba9d98ed835943b", "committedDate": "2020-04-08T13:21:39Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52d722829e4d0cbfb6f1ac3f5de952afe5e4660d", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/52d722829e4d0cbfb6f1ac3f5de952afe5e4660d", "committedDate": "2020-04-08T13:38:36Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4dfaf78720783a347c68e2db08f468c005c6d88", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/f4dfaf78720783a347c68e2db08f468c005c6d88", "committedDate": "2020-04-08T14:31:41Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7e018be0d6d716dda4607c7e91c234ed1b5288c", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/c7e018be0d6d716dda4607c7e91c234ed1b5288c", "committedDate": "2020-04-08T14:39:32Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2072c28b8eb6b4bab6ee558b5599f0b695678380", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/2072c28b8eb6b4bab6ee558b5599f0b695678380", "committedDate": "2020-04-08T14:42:02Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bccff946cac7eb4a8e63ea2931367e31166ab50a", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/bccff946cac7eb4a8e63ea2931367e31166ab50a", "committedDate": "2020-04-08T14:52:59Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8ca80daa7971676116c6dc8de7a8fd1aea05085", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/b8ca80daa7971676116c6dc8de7a8fd1aea05085", "committedDate": "2020-04-08T14:52:07Z", "message": "IGNITE-12828 Fixes minor issues."}, "afterCommit": {"oid": "bccff946cac7eb4a8e63ea2931367e31166ab50a", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/bccff946cac7eb4a8e63ea2931367e31166ab50a", "committedDate": "2020-04-08T14:52:59Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDU4Nzkz", "url": "https://github.com/apache/ignite/pull/7620#pullrequestreview-390058793", "createdAt": "2020-04-08T15:00:10Z", "commit": {"oid": "bccff946cac7eb4a8e63ea2931367e31166ab50a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3893c3329424df59f61b66f2d3990125aeeb9ac6", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/3893c3329424df59f61b66f2d3990125aeeb9ac6", "committedDate": "2020-04-08T15:07:08Z", "message": "IGNITE-12828 Fixes minor issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff646a98a1efeaaa213fe96de9352ca14f0beb3c", "author": {"user": {"login": "ololo3000", "name": "Mikhail Petrov "}}, "url": "https://github.com/apache/ignite/commit/ff646a98a1efeaaa213fe96de9352ca14f0beb3c", "committedDate": "2020-04-08T15:13:06Z", "message": "IGNITE-12828 Fixes minor issues."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2668, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}