{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNjMxMTA4", "number": 8362, "title": "IGNITE-13489 Clients log in and out of the topology", "bodyText": "client start and stop in loop\nThank you for submitting the pull request to the Apache Ignite.\nIn order to streamline the review of the contribution\nwe ask you to ensure the following steps have been taken:\nThe Contribution Checklist\n\n There is a single JIRA ticket related to the pull request.\n The web-link to the pull request is attached to the JIRA ticket.\n The JIRA ticket has the Patch Available state.\n The pull request body describes changes that have been made.\nThe description explains WHAT and WHY was made instead of HOW.\n The pull request title is treated as the final commit message.\nThe following pattern must be used: IGNITE-XXXX Change summary where XXXX - number of JIRA issue.\n A reviewer has been mentioned through the JIRA comments\n(see the Maintainers list)\n The pull request has been checked by the Teamcity Bot and\nthe green visa attached to the JIRA ticket (see TC.Bot: Check PR)\n\nNotes\n\nHow to Contribute\nCoding abbreviation rules\nCoding Guidelines\nApache Ignite Teamcity Bot\n\nIf you need any help, please email dev@ignite.apache.org or ask an\u0443 advice on http://asf.slack.com #ignite channel.", "createdAt": "2020-10-14T20:46:19Z", "url": "https://github.com/apache/ignite/pull/8362", "merged": true, "mergeCommit": {"oid": "bd2624291a5b1c06e48b37671e0e7f45db605f2a"}, "closed": true, "closedAt": "2020-10-23T11:19:35Z", "author": {"login": "SwirMix"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSjPMsgH2gAyNTAzNjMxMTA4OmI2MDA4NWRlZDFlYzY1YmI4ZDdlNjRhMzFkMjg5ZjcxMTM5MGI4NWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVRJqTgFqTUxNTM5NzI1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b60085ded1ec65bb8d7e64a31d289f711390b85f", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/b60085ded1ec65bb8d7e64a31d289f711390b85f", "committedDate": "2020-10-14T20:31:09Z", "message": "simple test\nclient start and stop in loop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc5a753b96aa101f31359f02f4e81b496a4329d6", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/bc5a753b96aa101f31359f02f4e81b496a4329d6", "committedDate": "2020-10-14T20:58:58Z", "message": "fix assert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c29e52ca9e5b3367c71b3935a1aaa211ff9dc367", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/c29e52ca9e5b3367c71b3935a1aaa211ff9dc367", "committedDate": "2020-10-15T09:47:05Z", "message": "fix ignite_app.py"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eb6ff703ce582f6e20ec0aa070ff357e7e37c73", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/9eb6ff703ce582f6e20ec0aa070ff357e7e37c73", "committedDate": "2020-10-15T12:26:19Z", "message": "fix unused varilable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5985a1c213d36f3d78473924cad1169e419f87d7", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/5985a1c213d36f3d78473924cad1169e419f87d7", "committedDate": "2020-10-15T12:39:48Z", "message": "add test in fast suit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c11da912c65d648eb4dc7e09e21d7c11cd4a0c9b", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/c11da912c65d648eb4dc7e09e21d7c11cd4a0c9b", "committedDate": "2020-10-15T13:05:03Z", "message": "fix abstract method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a7580bc507ca73a746a57b5d1219b5182d4b41b", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/4a7580bc507ca73a746a57b5d1219b5182d4b41b", "committedDate": "2020-10-15T13:07:17Z", "message": "fix abstract method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMzEyMzc5", "url": "https://github.com/apache/ignite/pull/8362#pullrequestreview-510312379", "createdAt": "2020-10-16T09:39:19Z", "commit": {"oid": "4a7580bc507ca73a746a57b5d1219b5182d4b41b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwOTozOToxOVrOHixlrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMDowODoyN1rOHizRog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIyNjA5Mg==", "bodyText": "pydoc is missed", "url": "https://github.com/apache/ignite/pull/8362#discussion_r506226092", "createdAt": "2020-10-16T09:39:19Z", "author": {"login": "timoninmaxim"}, "path": "modules/ducktests/tests/ignitetest/services/ignite_app.py", "diffHunk": "@@ -53,30 +53,37 @@ def start(self):\n \n         self.__check_status(\"IGNITE_APPLICATION_INITIALIZED\", timeout=self.timeout_sec)\n \n+    # pylint: disable=W0221\n+    def stop(self, clean_shutdown=True, timeout_sec=60):\n+        self.stop_async(clean_shutdown)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a7580bc507ca73a746a57b5d1219b5182d4b41b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIzMzA5Ng==", "bodyText": "As I see you just move this method higher. Let's revert it.\nWhy do you change timeout_sec?", "url": "https://github.com/apache/ignite/pull/8362#discussion_r506233096", "createdAt": "2020-10-16T09:48:06Z", "author": {"login": "timoninmaxim"}, "path": "modules/ducktests/tests/ignitetest/services/ignite_app.py", "diffHunk": "@@ -53,30 +53,37 @@ def start(self):\n \n         self.__check_status(\"IGNITE_APPLICATION_INITIALIZED\", timeout=self.timeout_sec)\n \n+    # pylint: disable=W0221\n+    def stop(self, clean_shutdown=True, timeout_sec=60):\n+        self.stop_async(clean_shutdown)\n+        self.await_stopped(timeout_sec)\n+\n     def stop_async(self, clean_shutdown=True):\n         \"\"\"\n-        Stops node in async way.\n+        Stop in async way.\n+        \"\"\"\n+        for node in self.nodes:\n+            self.stop_node(node=node, clean_shutdown=clean_shutdown)\n+\n+    def stop_node(self, node, clean_shutdown=True):\n+        \"\"\"\n+        Stop node in async way.\n         \"\"\"\n-        self.logger.info(\"%s Stopping node %s\" % (self.__class__.__name__, str(self.nodes[0].account)))\n-        self.nodes[0].account.kill_java_processes(self.servicejava_class_name, clean_shutdown=clean_shutdown,\n-                                                  allow_fail=True)\n+        self.logger.info(\"%s Stopping node %s\" % (self.__class__.__name__, str(node.account)))\n+        node.account.kill_java_processes(self.servicejava_class_name, clean_shutdown=clean_shutdown,\n+                                         allow_fail=True)\n \n     def await_stopped(self, timeout_sec=10):\n         \"\"\"\n         Awaits node stop finish.\n         \"\"\"\n-        stopped = self.wait_node(self.nodes[0], timeout_sec=timeout_sec)\n-        assert stopped, \"Node %s: did not stop within the specified timeout of %s seconds\" % \\\n-                        (str(self.nodes[0].account), str(timeout_sec))\n+        for node in self.nodes:\n+            stopped = self.wait_node(node, timeout_sec=timeout_sec)\n+            assert stopped, \"Node %s: did not stop within the specified timeout of %s seconds\" % \\\n+                            (str(node.account), str(timeout_sec))\n \n         self.__check_status(\"IGNITE_APPLICATION_FINISHED\", timeout=timeout_sec)\n \n-    # pylint: disable=W0221\n-    def stop_node(self, node, clean_shutdown=True, timeout_sec=10):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a7580bc507ca73a746a57b5d1219b5182d4b41b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0NDI0NQ==", "bodyText": "Imagine you have multiple application nodes, all of them are failed. res than contains multiple lines. In method above extract_result it checks size of the error and raises exception.", "url": "https://github.com/apache/ignite/pull/8362#discussion_r506244245", "createdAt": "2020-10-16T09:58:53Z", "author": {"login": "timoninmaxim"}, "path": "modules/ducktests/tests/ignitetest/services/ignite_app.py", "diffHunk": "@@ -121,10 +128,10 @@ def extract_results(self, name):\n         \"\"\"\n         res = []\n \n-        output = self.nodes[0].account.ssh_capture(\n-            \"grep '%s' %s\" % (name + \"->\", self.STDOUT_STDERR_CAPTURE), allow_fail=False)\n-\n-        for line in output:\n-            res.append(re.search(\"%s(.*)%s\" % (name + \"->\", \"<-\"), line).group(1))\n+        for node in self.nodes:\n+            output = node.account.ssh_capture(\n+                \"grep '%s' %s\" % (name + \"->\", self.STDOUT_STDERR_CAPTURE), allow_fail=False)\n+            for line in output:\n+                res.append(re.search(\"%s(.*)%s\" % (name + \"->\", \"<-\"), line).group(1))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a7580bc507ca73a746a57b5d1219b5182d4b41b"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0NTE4Mg==", "bodyText": "Let's rename simple client to smth more meaningful.", "url": "https://github.com/apache/ignite/pull/8362#discussion_r506245182", "createdAt": "2020-10-16T09:59:39Z", "author": {"login": "timoninmaxim"}, "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/start_stop_client/SimpleClient.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.start_stop_client;\n+\n+import java.util.Optional;\n+import java.util.UUID;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+\n+/**\n+ * Java client. Tx put operation\n+ */\n+public class SimpleClient extends IgniteAwareApplication {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a7580bc507ca73a746a57b5d1219b5182d4b41b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1MzQ3OQ==", "bodyText": "Why 10?", "url": "https://github.com/apache/ignite/pull/8362#discussion_r506253479", "createdAt": "2020-10-16T10:07:59Z", "author": {"login": "timoninmaxim"}, "path": "modules/ducktests/tests/ignitetest/tests/client_in_out_test.py", "diffHunk": "@@ -0,0 +1,133 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+This module contains client tests\n+\"\"\"\n+import time\n+from ducktape.mark.resource import cluster\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import DEV_BRANCH, V_2_8_1, IgniteVersion\n+\n+\n+# pylint: disable=W0223\n+class ClientTest(IgniteTest):\n+    \"\"\"\n+    CACHE_NAME - name of the cache to create for the test.\n+    REPORT_NAME - the name of the tests.\n+    PACING - the frequency of the operation on clients (ms).\n+    JAVA_CLIENT_CLASS_NAME - running classname.\n+    CLIENTS_WORK_TIME_S - clients working time (s).\n+    ITERATION_COUNT - the number of iterations of starting and stopping client nodes (s).\n+    CLUSTER_NODES - cluster size.\n+    STATIC_CLIENTS_NUM - the number of permanently employed clients.\n+    TEMP_CLIENTS_NUM - number of clients who come log in and out.\n+    \"\"\"\n+\n+    CACHE_NAME = \"simple-tx-cache\"\n+    PACING = 10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a7580bc507ca73a746a57b5d1219b5182d4b41b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1MzUzOA==", "bodyText": "Why 30?", "url": "https://github.com/apache/ignite/pull/8362#discussion_r506253538", "createdAt": "2020-10-16T10:08:06Z", "author": {"login": "timoninmaxim"}, "path": "modules/ducktests/tests/ignitetest/tests/client_in_out_test.py", "diffHunk": "@@ -0,0 +1,133 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+This module contains client tests\n+\"\"\"\n+import time\n+from ducktape.mark.resource import cluster\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import DEV_BRANCH, V_2_8_1, IgniteVersion\n+\n+\n+# pylint: disable=W0223\n+class ClientTest(IgniteTest):\n+    \"\"\"\n+    CACHE_NAME - name of the cache to create for the test.\n+    REPORT_NAME - the name of the tests.\n+    PACING - the frequency of the operation on clients (ms).\n+    JAVA_CLIENT_CLASS_NAME - running classname.\n+    CLIENTS_WORK_TIME_S - clients working time (s).\n+    ITERATION_COUNT - the number of iterations of starting and stopping client nodes (s).\n+    CLUSTER_NODES - cluster size.\n+    STATIC_CLIENTS_NUM - the number of permanently employed clients.\n+    TEMP_CLIENTS_NUM - number of clients who come log in and out.\n+    \"\"\"\n+\n+    CACHE_NAME = \"simple-tx-cache\"\n+    PACING = 10\n+    JAVA_CLIENT_CLASS_NAME = \"org.apache.ignite.internal.ducktest.tests.start_stop_client.SimpleClient\"\n+\n+    CLIENTS_WORK_TIME_S = 30", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a7580bc507ca73a746a57b5d1219b5182d4b41b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1MzczMA==", "bodyText": "Why do you sleep on first iteration?", "url": "https://github.com/apache/ignite/pull/8362#discussion_r506253730", "createdAt": "2020-10-16T10:08:27Z", "author": {"login": "timoninmaxim"}, "path": "modules/ducktests/tests/ignitetest/tests/client_in_out_test.py", "diffHunk": "@@ -0,0 +1,133 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+This module contains client tests\n+\"\"\"\n+import time\n+from ducktape.mark.resource import cluster\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import DEV_BRANCH, V_2_8_1, IgniteVersion\n+\n+\n+# pylint: disable=W0223\n+class ClientTest(IgniteTest):\n+    \"\"\"\n+    CACHE_NAME - name of the cache to create for the test.\n+    REPORT_NAME - the name of the tests.\n+    PACING - the frequency of the operation on clients (ms).\n+    JAVA_CLIENT_CLASS_NAME - running classname.\n+    CLIENTS_WORK_TIME_S - clients working time (s).\n+    ITERATION_COUNT - the number of iterations of starting and stopping client nodes (s).\n+    CLUSTER_NODES - cluster size.\n+    STATIC_CLIENTS_NUM - the number of permanently employed clients.\n+    TEMP_CLIENTS_NUM - number of clients who come log in and out.\n+    \"\"\"\n+\n+    CACHE_NAME = \"simple-tx-cache\"\n+    PACING = 10\n+    JAVA_CLIENT_CLASS_NAME = \"org.apache.ignite.internal.ducktest.tests.start_stop_client.SimpleClient\"\n+\n+    CLIENTS_WORK_TIME_S = 30\n+    ITERATION_COUNT = 3\n+    CLUSTER_NODES = 7\n+    STATIC_CLIENTS_NUM = 2\n+    TEMP_CLIENTS_NUM = 3\n+\n+    @cluster(num_nodes=CLUSTER_NODES)\n+    @ignite_versions(str(DEV_BRANCH), str(V_2_8_1))\n+    def test_ignite_start_stop(self, ignite_version):\n+        \"\"\"\n+        Test for starting and stopping fat clients.\n+        \"\"\"\n+\n+        servers_count = self.CLUSTER_NODES - self.STATIC_CLIENTS_NUM - self.TEMP_CLIENTS_NUM\n+\n+        # Topology version after test.\n+        current_top_v = servers_count\n+        fin_top_ver = servers_count + (2 * self.STATIC_CLIENTS_NUM) + (2 * self.ITERATION_COUNT * self.TEMP_CLIENTS_NUM)\n+\n+        server_cfg = IgniteConfiguration(\n+            version=IgniteVersion(ignite_version),\n+            caches=[CacheConfiguration(name=self.CACHE_NAME, backups=1, atomicity_mode='TRANSACTIONAL')]\n+        )\n+        ignite = IgniteService(self.test_context, server_cfg, num_nodes=servers_count)\n+        control_utility = ControlUtility(ignite, self.test_context)\n+\n+        client_cfg = server_cfg._replace(client_mode=True)\n+\n+        static_clients = IgniteApplicationService(\n+            self.test_context,\n+            client_cfg,\n+            java_class_name=self.JAVA_CLIENT_CLASS_NAME,\n+            num_nodes=self.STATIC_CLIENTS_NUM,\n+            params={\"cacheName\": self.CACHE_NAME,\n+                    \"pacing\": self.PACING})\n+\n+        temp_clients = IgniteApplicationService(\n+            self.test_context,\n+            client_cfg,\n+            java_class_name=self.JAVA_CLIENT_CLASS_NAME,\n+            num_nodes=self.TEMP_CLIENTS_NUM,\n+            params={\"cacheName\": self.CACHE_NAME,\n+                    \"pacing\": self.PACING})\n+\n+        ignite.start()\n+\n+        static_clients.start()\n+\n+        current_top_v += self.STATIC_CLIENTS_NUM\n+        check_topology(control_utility, current_top_v)\n+\n+        # Start / stop temp_clients node. Check cluster.\n+        for i in range(self.ITERATION_COUNT):\n+            self.logger.debug(f'Starting iteration: {i}.')\n+\n+            time.sleep(self.CLIENTS_WORK_TIME_S)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a7580bc507ca73a746a57b5d1219b5182d4b41b"}, "originalPosition": 104}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b89c98f257d6a8ca6a4f41be431a014b9182b354", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/b89c98f257d6a8ca6a4f41be431a014b9182b354", "committedDate": "2020-10-16T11:53:04Z", "message": "change classname"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1831fd52dc86ea9fa360f0434883a8ecba2c0738", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/1831fd52dc86ea9fa360f0434883a8ecba2c0738", "committedDate": "2020-10-16T11:59:16Z", "message": "check result assert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f81b0ba136523cadb07f2493159602c7be6970a8", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/f81b0ba136523cadb07f2493159602c7be6970a8", "committedDate": "2020-10-19T17:08:37Z", "message": "add kill node test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bffa05f8c1fbbb869b9c861844bac782e2fdcc57", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/bffa05f8c1fbbb869b9c861844bac782e2fdcc57", "committedDate": "2020-10-19T17:21:15Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "333fa8211040a2212389ab3a2f9824466ddb4da3", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/333fa8211040a2212389ab3a2f9824466ddb4da3", "committedDate": "2020-10-19T17:23:50Z", "message": "rm Project_Default.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12b3a211ee8d056249c4f810d8ebeaff2b5bdccc", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/12b3a211ee8d056249c4f810d8ebeaff2b5bdccc", "committedDate": "2020-10-20T08:34:39Z", "message": "iteration count"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDUzNzY5", "url": "https://github.com/apache/ignite/pull/8362#pullrequestreview-513453769", "createdAt": "2020-10-21T08:56:32Z", "commit": {"oid": "12b3a211ee8d056249c4f810d8ebeaff2b5bdccc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODo1NjozMlrOHlhczg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODo1NjozMlrOHlhczg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEwNzQwNg==", "bodyText": "Why do not replace this if-else block with service.stop(clean_shutdown=kill_nodes)?", "url": "https://github.com/apache/ignite/pull/8362#discussion_r509107406", "createdAt": "2020-10-21T08:56:32Z", "author": {"login": "timoninmaxim"}, "path": "modules/ducktests/tests/ignitetest/tests/client_in_out_test.py", "diffHunk": "@@ -0,0 +1,173 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+This module contains client tests\n+\"\"\"\n+import time\n+from ducktape.mark import parametrize\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import DEV_BRANCH, V_2_8_1, IgniteVersion\n+\n+\n+# pylint: disable=W0223\n+class ClientTest(IgniteTest):\n+    \"\"\"\n+    cluster - cluster size\n+    CACHE_NAME - name of the cache to create for the test.\n+    PACING - the frequency of the operation on clients (ms).\n+    JAVA_CLIENT_CLASS_NAME - running classname.\n+    client_work_time - clients working time (s).\n+    iteration_count - the number of iterations of starting and stopping client nodes (s).\n+    static_clients - the number of permanently employed clients.\n+    temp_client - number of clients who come log in and out.\n+    \"\"\"\n+\n+    CACHE_NAME = \"simple-tx-cache\"\n+    PACING = 10\n+    JAVA_CLIENT_CLASS_NAME = \"org.apache.ignite.internal.ducktest.tests.start_stop_client.IgniteCachePutClient\"\n+\n+    @ignite_versions(str(V_2_8_1), str(DEV_BRANCH))\n+    @parametrize(cluster=7,\n+                 static_clients=2,\n+                 temp_client=3,\n+                 iteration_count=3,\n+                 client_work_time=30)\n+    # pylint: disable=R0913\n+    def test_ignite_start_stop_nodes(self, ignite_version,\n+                                     cluster, static_clients, temp_client, iteration_count, client_work_time):\n+        \"\"\"\n+        Start and stop clients node test without kill java process.\n+        Check topology.\n+        \"\"\"\n+        self.ignite_start_stop(ignite_version, False, cluster, static_clients,\n+                               temp_client, iteration_count, client_work_time)\n+\n+    @ignite_versions(str(V_2_8_1), str(DEV_BRANCH))\n+    @parametrize(cluster=7,\n+                 static_clients=2,\n+                 temp_client=3,\n+                 iteration_count=3,\n+                 client_work_time=30)\n+    # pylint: disable=R0913\n+    def test_ignite_kill_start_nodes(self, ignite_version,\n+                                     cluster, static_clients, temp_client, iteration_count, client_work_time):\n+        \"\"\"\n+        Start and kill client nodes, Check topology\n+        \"\"\"\n+        self.ignite_start_stop(ignite_version, True, cluster, static_clients,\n+                               temp_client, iteration_count, client_work_time)\n+\n+    # pylint: disable=R0914\n+    # pylint: disable=R0913\n+    def ignite_start_stop(self, ignite_version, kill_temp_nodes,\n+                          cluster, static_clients_num, temp_client, iteration_count, client_work_time):\n+        \"\"\"\n+        Test for starting and stopping fat clients.\n+        \"\"\"\n+\n+        servers_count = cluster - static_clients_num - temp_client\n+\n+        current_top_v = servers_count\n+        # Topology version after test.\n+        fin_top_ver = servers_count + (2 * static_clients_num) + (2 * iteration_count * temp_client)\n+\n+        server_cfg = IgniteConfiguration(\n+            version=IgniteVersion(ignite_version),\n+            caches=[CacheConfiguration(name=self.CACHE_NAME, backups=1, atomicity_mode='TRANSACTIONAL')]\n+        )\n+\n+        ignite = IgniteService(self.test_context, server_cfg, num_nodes=servers_count)\n+        control_utility = ControlUtility(ignite, self.test_context)\n+\n+        client_cfg = server_cfg._replace(client_mode=True)\n+\n+        static_clients = IgniteApplicationService(\n+            self.test_context,\n+            client_cfg,\n+            java_class_name=self.JAVA_CLIENT_CLASS_NAME,\n+            num_nodes=static_clients_num,\n+            params={\"cacheName\": self.CACHE_NAME,\n+                    \"pacing\": self.PACING})\n+\n+        temp_clients = IgniteApplicationService(\n+            self.test_context,\n+            client_cfg,\n+            java_class_name=self.JAVA_CLIENT_CLASS_NAME,\n+            num_nodes=temp_client,\n+            params={\"cacheName\": self.CACHE_NAME,\n+                    \"pacing\": self.PACING})\n+\n+        ignite.start()\n+\n+        static_clients.start()\n+\n+        current_top_v += static_clients_num\n+        check_topology(control_utility, current_top_v)\n+\n+        # Start / stop temp_clients node. Check cluster.\n+        for i in range(iteration_count):\n+            self.logger.debug(f'Starting iteration: {i}.')\n+\n+            temp_clients.start()\n+            current_top_v += temp_client\n+\n+            static_clients.await_event(f'ver={current_top_v}, locNode=', timeout_sec=80,\n+                                       from_the_beginning=True, backoff_sec=1)\n+            check_topology(control_utility, current_top_v)\n+\n+            temp_clients.await_event(f'clients={static_clients_num + temp_client}',\n+                                     timeout_sec=80,\n+                                     from_the_beginning=True,\n+                                     backoff_sec=1)\n+\n+            time.sleep(client_work_time)\n+            stop_service_nodes(temp_clients, kill_temp_nodes)\n+\n+            current_top_v += temp_client\n+\n+        static_clients.await_event(f'ver={current_top_v}, locNode=', timeout_sec=80,\n+                                   from_the_beginning=True, backoff_sec=0.1)\n+        static_clients.stop()\n+\n+        check_topology(control_utility, fin_top_ver)\n+\n+\n+def stop_service_nodes(service: IgniteApplicationService, kill_nodes):\n+    \"\"\"\n+    Base service stop command.\n+    If kill_nodes=True kill node.\n+    If kill_nodes=False then the node is shutting down correctly\n+    \"\"\"\n+    if kill_nodes:\n+        for node in service.nodes:\n+            service.stop_node(node=node, clean_shutdown=False)\n+    else:\n+        service.stop(clean_shutdown=True)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b3a211ee8d056249c4f810d8ebeaff2b5bdccc"}, "originalPosition": 164}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDgxOTU1", "url": "https://github.com/apache/ignite/pull/8362#pullrequestreview-513481955", "createdAt": "2020-10-21T09:28:45Z", "commit": {"oid": "12b3a211ee8d056249c4f810d8ebeaff2b5bdccc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOToyODo0NVrOHlizwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOToyODo0NVrOHlizwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEyOTY2NA==", "bodyText": "let's replace <= with !=.", "url": "https://github.com/apache/ignite/pull/8362#discussion_r509129664", "createdAt": "2020-10-21T09:28:45Z", "author": {"login": "timoninmaxim"}, "path": "modules/ducktests/tests/ignitetest/services/ignite_app.py", "diffHunk": "@@ -110,7 +121,8 @@ def extract_result(self, name):\n         \"\"\"\n         results = self.extract_results(name)\n \n-        assert len(results) <= 1, f\"Expected exactly one result occurence, {len(results)} found.\"\n+        assert len(results) <= len(self.nodes), f\"Expected exactly {len(self.nodes)} occurence,\" \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b3a211ee8d056249c4f810d8ebeaff2b5bdccc"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDkyMjQ4", "url": "https://github.com/apache/ignite/pull/8362#pullrequestreview-513492248", "createdAt": "2020-10-21T09:40:33Z", "commit": {"oid": "12b3a211ee8d056249c4f810d8ebeaff2b5bdccc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOTo0MDozM1rOHljSAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOTo0MDozM1rOHljSAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEzNzQxMQ==", "bodyText": "To enable run the test in parallel with others please use @cluster decorator. If user wants to run experiments with different number of nodes, the one must comment the decorator in feature branch.\nActually we need a flag for ducktape to ignore this decorator if needed. I will make a ticket for that.", "url": "https://github.com/apache/ignite/pull/8362#discussion_r509137411", "createdAt": "2020-10-21T09:40:33Z", "author": {"login": "timoninmaxim"}, "path": "modules/ducktests/tests/ignitetest/tests/client_in_out_test.py", "diffHunk": "@@ -0,0 +1,173 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+This module contains client tests\n+\"\"\"\n+import time\n+from ducktape.mark import parametrize\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import DEV_BRANCH, V_2_8_1, IgniteVersion\n+\n+\n+# pylint: disable=W0223\n+class ClientTest(IgniteTest):\n+    \"\"\"\n+    cluster - cluster size\n+    CACHE_NAME - name of the cache to create for the test.\n+    PACING - the frequency of the operation on clients (ms).\n+    JAVA_CLIENT_CLASS_NAME - running classname.\n+    client_work_time - clients working time (s).\n+    iteration_count - the number of iterations of starting and stopping client nodes (s).\n+    static_clients - the number of permanently employed clients.\n+    temp_client - number of clients who come log in and out.\n+    \"\"\"\n+\n+    CACHE_NAME = \"simple-tx-cache\"\n+    PACING = 10\n+    JAVA_CLIENT_CLASS_NAME = \"org.apache.ignite.internal.ducktest.tests.start_stop_client.IgniteCachePutClient\"\n+\n+    @ignite_versions(str(V_2_8_1), str(DEV_BRANCH))\n+    @parametrize(cluster=7,\n+                 static_clients=2,\n+                 temp_client=3,\n+                 iteration_count=3,\n+                 client_work_time=30)\n+    # pylint: disable=R0913\n+    def test_ignite_start_stop_nodes(self, ignite_version,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b3a211ee8d056249c4f810d8ebeaff2b5bdccc"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c2d350a7a35ed511e5698808c7652eb03f3ca48", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/8c2d350a7a35ed511e5698808c7652eb03f3ca48", "committedDate": "2020-10-21T12:17:10Z", "message": "fix check result,\nfix await finish event for clear_shutdown=False"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d61203725bf4896e54bcab6b3707f6ffe25e527e", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/d61203725bf4896e54bcab6b3707f6ffe25e527e", "committedDate": "2020-10-21T12:51:50Z", "message": "fix check result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fa9999fe36c5e873269496cf76acab64af8bb79", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/2fa9999fe36c5e873269496cf76acab64af8bb79", "committedDate": "2020-10-21T19:27:03Z", "message": "revert Project_Default.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8528c0b55cfc1107632b7388def290eacbfd3d71", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/8528c0b55cfc1107632b7388def290eacbfd3d71", "committedDate": "2020-10-21T19:32:40Z", "message": "revert Project_Default.xml from ignite-ducktape branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc9509a1d9a1a78123396505286729339c27062b", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/fc9509a1d9a1a78123396505286729339c27062b", "committedDate": "2020-10-21T19:39:53Z", "message": "flip flags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71fd004bc40c5280892ae0191b98640d2f72e8d4", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/71fd004bc40c5280892ae0191b98640d2f72e8d4", "committedDate": "2020-10-21T19:44:46Z", "message": "rename flag kill_temp_nodes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "777bf5e02e271c0b12bcdf9936305355c2194924", "author": {"user": {"login": "SwirMix", "name": null}}, "url": "https://github.com/apache/ignite/commit/777bf5e02e271c0b12bcdf9936305355c2194924", "committedDate": "2020-10-21T20:20:57Z", "message": "fix await event in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1Mzk3MjU0", "url": "https://github.com/apache/ignite/pull/8362#pullrequestreview-515397254", "createdAt": "2020-10-23T07:08:35Z", "commit": {"oid": "777bf5e02e271c0b12bcdf9936305355c2194924"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3054, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}