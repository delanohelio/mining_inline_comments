{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NDgwODQ3", "number": 8249, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxOToxNVrOEkiDdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjo0NFrOEmAL_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQyMTMzOnYy", "diffSide": "RIGHT", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxOToxNVrOHThsEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowMzozOVrOHTj3IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNjk0Nw==", "bodyText": "I suggest removing this newline", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490236947", "createdAt": "2020-09-17T13:19:15Z", "author": {"login": "xtern"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjU0NQ==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272545", "createdAt": "2020-09-17T14:03:39Z", "author": {"login": "ololo3000"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNjk0Nw=="}, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQyMzI5OnYy", "diffSide": "RIGHT", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxOTozNlrOHThtHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowMzo0M1rOHTj3Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNzIxNA==", "bodyText": "? extends List<?> can be replaced with List<?>", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490237214", "createdAt": "2020-09-17T13:19:36Z", "author": {"login": "xtern"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjU4Nw==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272587", "createdAt": "2020-09-17T14:03:43Z", "author": {"login": "ololo3000"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNzIxNA=="}, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQyNzY5OnYy", "diffSide": "RIGHT", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyMDoyOFrOHThvyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowMzo0OFrOHTj3oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNzg5OA==", "bodyText": "I suggest removing this newline", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490237898", "createdAt": "2020-09-17T13:20:28Z", "author": {"login": "xtern"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());\n+\n+        List<List<String>> rows = new ArrayList<>(sysViewRows.size());\n+\n+        sysViewRows.forEach(sysViewRow -> {\n+            ListIterator<Integer> colLenIter = colLenghts.listIterator();\n+\n+            rows.add(sysViewRow.stream().map(attr -> {\n+                String colVal = String.valueOf(attr);\n+\n+                colLenIter.set(Math.max(colLenIter.next(), colVal.length()));\n+\n+                return colVal;\n+            }).collect(Collectors.toList()));\n+        });\n+\n+        printRow(colTitles, nCopies(colTitles.size(), STRING), colLenghts, log);\n+\n+        rows.forEach(row -> printRow(row, taskRes.systemViewAttributeTypes(), colLenghts, log));\n+    }\n+\n+    /**\n+     * Prints row content with respect to column types and lengths.\n+     *\n+     * @param row Row which content should be printed.\n+     * @param types Column types in sequential order for decent row formatting.\n+     * @param lengths Column lengths in sequential order for decent row formatting.\n+     * @param log Logger.\n+     */\n+    private void printRow(\n+        Collection<String> row,\n+        Collection<SimpleAttributeType> types,\n+        Collection<Integer> lengths,\n+        Logger log\n+    ) {\n+        Iterator<SimpleAttributeType> typeIter = types.iterator();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjY3Mw==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272673", "createdAt": "2020-09-17T14:03:48Z", "author": {"login": "ololo3000"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());\n+\n+        List<List<String>> rows = new ArrayList<>(sysViewRows.size());\n+\n+        sysViewRows.forEach(sysViewRow -> {\n+            ListIterator<Integer> colLenIter = colLenghts.listIterator();\n+\n+            rows.add(sysViewRow.stream().map(attr -> {\n+                String colVal = String.valueOf(attr);\n+\n+                colLenIter.set(Math.max(colLenIter.next(), colVal.length()));\n+\n+                return colVal;\n+            }).collect(Collectors.toList()));\n+        });\n+\n+        printRow(colTitles, nCopies(colTitles.size(), STRING), colLenghts, log);\n+\n+        rows.forEach(row -> printRow(row, taskRes.systemViewAttributeTypes(), colLenghts, log));\n+    }\n+\n+    /**\n+     * Prints row content with respect to column types and lengths.\n+     *\n+     * @param row Row which content should be printed.\n+     * @param types Column types in sequential order for decent row formatting.\n+     * @param lengths Column lengths in sequential order for decent row formatting.\n+     * @param log Logger.\n+     */\n+    private void printRow(\n+        Collection<String> row,\n+        Collection<SimpleAttributeType> types,\n+        Collection<Integer> lengths,\n+        Logger log\n+    ) {\n+        Iterator<SimpleAttributeType> typeIter = types.iterator();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNzg5OA=="}, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 145}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQzMzQ3OnYy", "diffSide": "RIGHT", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyMTozN1rOHThzRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyMTozN1rOHThzRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzODc4OQ==", "bodyText": "we can add an assertion here to ensure code reader that the sizes of collections are equal", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490238789", "createdAt": "2020-09-17T13:21:37Z", "author": {"login": "xtern"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());\n+\n+        List<List<String>> rows = new ArrayList<>(sysViewRows.size());\n+\n+        sysViewRows.forEach(sysViewRow -> {\n+            ListIterator<Integer> colLenIter = colLenghts.listIterator();\n+\n+            rows.add(sysViewRow.stream().map(attr -> {\n+                String colVal = String.valueOf(attr);\n+\n+                colLenIter.set(Math.max(colLenIter.next(), colVal.length()));\n+\n+                return colVal;\n+            }).collect(Collectors.toList()));\n+        });\n+\n+        printRow(colTitles, nCopies(colTitles.size(), STRING), colLenghts, log);\n+\n+        rows.forEach(row -> printRow(row, taskRes.systemViewAttributeTypes(), colLenghts, log));\n+    }\n+\n+    /**\n+     * Prints row content with respect to column types and lengths.\n+     *\n+     * @param row Row which content should be printed.\n+     * @param types Column types in sequential order for decent row formatting.\n+     * @param lengths Column lengths in sequential order for decent row formatting.\n+     * @param log Logger.\n+     */\n+    private void printRow(\n+        Collection<String> row,\n+        Collection<SimpleAttributeType> types,\n+        Collection<Integer> lengths,\n+        Logger log\n+    ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQ0NTc4OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyMzo1OFrOHTh7Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowMzo1M1rOHTj30Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MDc3MQ==", "bodyText": "Unused import", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490240771", "createdAt": "2020-09-17T13:23:58Z", "author": {"login": "xtern"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjcyMQ==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272721", "createdAt": "2020-09-17T14:03:53Z", "author": {"login": "ololo3000"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MDc3MQ=="}, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQ2MjA2OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyNjo1MFrOHTiFGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowMzo1N1rOHTj4BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzM1NQ==", "bodyText": "Seems that it is better to put this code into a separate method.\nIn this case, code here will look something like\nSystemView<?> targetSysView = findSysView(arg.systemViewName());\n\n            if (targetSysView == null)\n                return null;\n\nfindSysView may look something like\nprivate SystemView<?> findSysView(String name) {\n            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n\n            SystemView<?> targetSysView = sysViewMgr.view(name);\n\n            if (targetSysView != null)\n                return targetSysView;\n\n            // In this case we assume that the requested system view name is in SQL format.\n            for (SystemView<?> sysView : sysViewMgr) {\n                if (toSqlName(sysView.name()).equals(name))\n                    return sysView;\n            }\n\n            return null;\n        }", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490243355", "createdAt": "2020-09-17T13:26:50Z", "author": {"login": "xtern"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.UUID;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.internal.managers.systemview.GridSystemViewManager;\n+import org.apache.ignite.internal.processors.task.GridInternal;\n+import org.apache.ignite.internal.processors.task.GridVisorManagementTask;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.VisorJob;\n+import org.apache.ignite.internal.visor.VisorOneNodeTask;\n+import org.apache.ignite.lang.IgniteUuid;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker.AttributeWithValueVisitor;\n+import org.jetbrains.annotations.Nullable;\n+\n+import static org.apache.ignite.internal.processors.metric.impl.MetricUtils.toSqlName;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Reperesents visor task for obtaining system view content.\n+ */\n+@GridInternal\n+@GridVisorManagementTask\n+public class VisorSystemViewTask extends VisorOneNodeTask<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** {@inheritDoc} */\n+    @Override protected VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> job(VisorSystemViewTaskArg arg) {\n+        return new VisorSystemViewJob(arg, false);\n+    }\n+\n+    /**\n+     *\n+     */\n+    private static class VisorSystemViewJob extends VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+        /** */\n+        private static final long serialVersionUID = 0L;\n+\n+        /**\n+         * Create job with specified argument.\n+         *\n+         * @param arg Job argument.\n+         * @param debug Flag indicating whether debug information should be printed into node log.\n+         */\n+        protected VisorSystemViewJob(@Nullable VisorSystemViewTaskArg arg, boolean debug) {\n+            super(arg, debug);\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Override protected VisorSystemViewTaskResult run(@Nullable VisorSystemViewTaskArg arg) throws IgniteException {\n+            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n+\n+            String targetSysViewName = arg.systemViewName();\n+\n+            SystemView<?> targetSysView = sysViewMgr.view(targetSysViewName);\n+\n+            if (targetSysView == null) { // In this case we assume that the requested system view name is in SQL format.\n+                for (SystemView<?> sysView : sysViewMgr) {\n+                    if (toSqlName(sysView.name()).equals(targetSysViewName)) {\n+                        targetSysView = sysView;\n+\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (targetSysView == null)\n+                return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3Mjc3Mw==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272773", "createdAt": "2020-09-17T14:03:57Z", "author": {"login": "ololo3000"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.UUID;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.internal.managers.systemview.GridSystemViewManager;\n+import org.apache.ignite.internal.processors.task.GridInternal;\n+import org.apache.ignite.internal.processors.task.GridVisorManagementTask;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.VisorJob;\n+import org.apache.ignite.internal.visor.VisorOneNodeTask;\n+import org.apache.ignite.lang.IgniteUuid;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker.AttributeWithValueVisitor;\n+import org.jetbrains.annotations.Nullable;\n+\n+import static org.apache.ignite.internal.processors.metric.impl.MetricUtils.toSqlName;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Reperesents visor task for obtaining system view content.\n+ */\n+@GridInternal\n+@GridVisorManagementTask\n+public class VisorSystemViewTask extends VisorOneNodeTask<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** {@inheritDoc} */\n+    @Override protected VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> job(VisorSystemViewTaskArg arg) {\n+        return new VisorSystemViewJob(arg, false);\n+    }\n+\n+    /**\n+     *\n+     */\n+    private static class VisorSystemViewJob extends VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+        /** */\n+        private static final long serialVersionUID = 0L;\n+\n+        /**\n+         * Create job with specified argument.\n+         *\n+         * @param arg Job argument.\n+         * @param debug Flag indicating whether debug information should be printed into node log.\n+         */\n+        protected VisorSystemViewJob(@Nullable VisorSystemViewTaskArg arg, boolean debug) {\n+            super(arg, debug);\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Override protected VisorSystemViewTaskResult run(@Nullable VisorSystemViewTaskArg arg) throws IgniteException {\n+            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n+\n+            String targetSysViewName = arg.systemViewName();\n+\n+            SystemView<?> targetSysView = sysViewMgr.view(targetSysViewName);\n+\n+            if (targetSysView == null) { // In this case we assume that the requested system view name is in SQL format.\n+                for (SystemView<?> sysView : sysViewMgr) {\n+                    if (toSqlName(sysView.name()).equals(targetSysViewName)) {\n+                        targetSysView = sysView;\n+\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (targetSysView == null)\n+                return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzM1NQ=="}, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQ3NzU0OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyOTozMFrOHTiOxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowNDowMVrOHTj4Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0NTgyOQ==", "bodyText": "I suggest removing this newline", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490245829", "createdAt": "2020-09-17T13:29:30Z", "author": {"login": "xtern"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.UUID;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.internal.managers.systemview.GridSystemViewManager;\n+import org.apache.ignite.internal.processors.task.GridInternal;\n+import org.apache.ignite.internal.processors.task.GridVisorManagementTask;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.VisorJob;\n+import org.apache.ignite.internal.visor.VisorOneNodeTask;\n+import org.apache.ignite.lang.IgniteUuid;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker.AttributeWithValueVisitor;\n+import org.jetbrains.annotations.Nullable;\n+\n+import static org.apache.ignite.internal.processors.metric.impl.MetricUtils.toSqlName;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Reperesents visor task for obtaining system view content.\n+ */\n+@GridInternal\n+@GridVisorManagementTask\n+public class VisorSystemViewTask extends VisorOneNodeTask<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** {@inheritDoc} */\n+    @Override protected VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> job(VisorSystemViewTaskArg arg) {\n+        return new VisorSystemViewJob(arg, false);\n+    }\n+\n+    /**\n+     *\n+     */\n+    private static class VisorSystemViewJob extends VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+        /** */\n+        private static final long serialVersionUID = 0L;\n+\n+        /**\n+         * Create job with specified argument.\n+         *\n+         * @param arg Job argument.\n+         * @param debug Flag indicating whether debug information should be printed into node log.\n+         */\n+        protected VisorSystemViewJob(@Nullable VisorSystemViewTaskArg arg, boolean debug) {\n+            super(arg, debug);\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Override protected VisorSystemViewTaskResult run(@Nullable VisorSystemViewTaskArg arg) throws IgniteException {\n+            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n+\n+            String targetSysViewName = arg.systemViewName();\n+\n+            SystemView<?> targetSysView = sysViewMgr.view(targetSysViewName);\n+\n+            if (targetSysView == null) { // In this case we assume that the requested system view name is in SQL format.\n+                for (SystemView<?> sysView : sysViewMgr) {\n+                    if (toSqlName(sysView.name()).equals(targetSysViewName)) {\n+                        targetSysView = sysView;\n+\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (targetSysView == null)\n+                return null;\n+\n+            List<String> attrNames = new ArrayList<>();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjgxMQ==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272811", "createdAt": "2020-09-17T14:04:01Z", "author": {"login": "ololo3000"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.UUID;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.internal.managers.systemview.GridSystemViewManager;\n+import org.apache.ignite.internal.processors.task.GridInternal;\n+import org.apache.ignite.internal.processors.task.GridVisorManagementTask;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.VisorJob;\n+import org.apache.ignite.internal.visor.VisorOneNodeTask;\n+import org.apache.ignite.lang.IgniteUuid;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker.AttributeWithValueVisitor;\n+import org.jetbrains.annotations.Nullable;\n+\n+import static org.apache.ignite.internal.processors.metric.impl.MetricUtils.toSqlName;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Reperesents visor task for obtaining system view content.\n+ */\n+@GridInternal\n+@GridVisorManagementTask\n+public class VisorSystemViewTask extends VisorOneNodeTask<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** {@inheritDoc} */\n+    @Override protected VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> job(VisorSystemViewTaskArg arg) {\n+        return new VisorSystemViewJob(arg, false);\n+    }\n+\n+    /**\n+     *\n+     */\n+    private static class VisorSystemViewJob extends VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+        /** */\n+        private static final long serialVersionUID = 0L;\n+\n+        /**\n+         * Create job with specified argument.\n+         *\n+         * @param arg Job argument.\n+         * @param debug Flag indicating whether debug information should be printed into node log.\n+         */\n+        protected VisorSystemViewJob(@Nullable VisorSystemViewTaskArg arg, boolean debug) {\n+            super(arg, debug);\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Override protected VisorSystemViewTaskResult run(@Nullable VisorSystemViewTaskArg arg) throws IgniteException {\n+            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n+\n+            String targetSysViewName = arg.systemViewName();\n+\n+            SystemView<?> targetSysView = sysViewMgr.view(targetSysViewName);\n+\n+            if (targetSysView == null) { // In this case we assume that the requested system view name is in SQL format.\n+                for (SystemView<?> sysView : sysViewMgr) {\n+                    if (toSqlName(sysView.name()).equals(targetSysViewName)) {\n+                        targetSysView = sysView;\n+\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (targetSysView == null)\n+                return null;\n+\n+            List<String> attrNames = new ArrayList<>();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0NTgyOQ=="}, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzU1MDg5OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzo0NDo0OVrOHTi9MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowNDowNVrOHTj4XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1NzcxMg==", "bodyText": "List<? extends List<?>> can be replaced with List<List<?>>", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490257712", "createdAt": "2020-09-17T13:44:49Z", "author": {"login": "xtern"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<? extends List<?>> rows;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3Mjg2MQ==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272861", "createdAt": "2020-09-17T14:04:05Z", "author": {"login": "ololo3000"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<? extends List<?>> rows;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1NzcxMg=="}, "originalCommit": {"oid": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mjc2OTg4OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxNzo0MlrOHVxS-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxNzo0MlrOHVxS-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4OTgxNw==", "bodyText": "nit: @param types missed in javadoc.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492589817", "createdAt": "2020-09-22T09:17:42Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mjc3MjkzOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxODozM1rOHVxU5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxODozM1rOHVxU5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5MDMxMA==", "bodyText": "Let's make this and similar comment one liner.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492590310", "createdAt": "2020-09-22T09:18:33Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.\n+     */\n+    public VisorSystemViewTaskResult(List<String> attrs, List<SimpleAttributeType> types, List<List<?>> rows) {\n+        this.attrs = attrs;\n+        this.types = types;\n+        this.rows = rows;\n+    }\n+\n+    /**\n+     * @return Names of the system view attributes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mjc3MzUyOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxODo0NFrOHVxVSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxODo0NFrOHVxVSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5MDQwOQ==", "bodyText": "Please, make it one line comment.", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492590409", "createdAt": "2020-09-22T09:18:44Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.\n+     */\n+    public VisorSystemViewTaskResult(List<String> attrs, List<SimpleAttributeType> types, List<List<?>> rows) {\n+        this.attrs = attrs;\n+        this.types = types;\n+        this.rows = rows;\n+    }\n+\n+    /**\n+     * @return Names of the system view attributes.\n+     */\n+    public List<String> systemViewAttributes() {\n+        return attrs;\n+    }\n+\n+    /**\n+     * @return Attribute values for each row of the system view.\n+     */\n+    public List<List<?>> systemViewContent() {\n+        return rows;\n+    }\n+\n+    /**\n+     * @return Types of the system view attributes.\n+     */\n+    public List<SimpleAttributeType> systemViewAttributeTypes() {\n+        return types;\n+    }\n+\n+    /**\n+     * {@inheritDoc}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjgzMTE5OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozMzoxNVrOHVx3tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozMzoxNVrOHVx3tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5OTIyMg==", "bodyText": "Let's make method naming consistent with the variables names.\nattrs -> attributes\nrows -> rows\ntypes -> types", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492599222", "createdAt": "2020-09-22T09:33:15Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.\n+     */\n+    public VisorSystemViewTaskResult(List<String> attrs, List<SimpleAttributeType> types, List<List<?>> rows) {\n+        this.attrs = attrs;\n+        this.types = types;\n+        this.rows = rows;\n+    }\n+\n+    /**\n+     * @return Names of the system view attributes.\n+     */\n+    public List<String> systemViewAttributes() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mjg0MDQxOnYy", "diffSide": "RIGHT", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNTo1M1rOHVx9cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNTo1M1rOHVx9cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDY4OQ==", "bodyText": "Let's rename this to titles", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492600689", "createdAt": "2020-09-22T09:35:53Z", "author": {"login": "nizhikov"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mjg0MTE0OnYy", "diffSide": "RIGHT", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjowNFrOHVx95Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjowNFrOHVx95Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDgwNQ==", "bodyText": "Let's rename this to viewRows", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492600805", "createdAt": "2020-09-22T09:36:04Z", "author": {"login": "nizhikov"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+        List<List<?>> sysViewRows = taskRes.systemViewContent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mjg0MzQzOnYy", "diffSide": "RIGHT", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjozM1rOHVx_TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjozM1rOHVx_TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMTE2NA==", "bodyText": "Let's rename this to colSzs", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492601164", "createdAt": "2020-09-22T09:36:33Z", "author": {"login": "nizhikov"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+        List<List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mjg0NDEzOnYy", "diffSide": "RIGHT", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjo0NFrOHVx_ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjo0NFrOHVx_ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMTI3NA==", "bodyText": "Let's rename this to val", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492601274", "createdAt": "2020-09-22T09:36:44Z", "author": {"login": "nizhikov"}, "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+        List<List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());\n+\n+        List<List<String>> rows = new ArrayList<>(sysViewRows.size());\n+\n+        sysViewRows.forEach(sysViewRow -> {\n+            ListIterator<Integer> colLenIter = colLenghts.listIterator();\n+\n+            rows.add(sysViewRow.stream().map(attr -> {\n+                String colVal = String.valueOf(attr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c848edebcf760083689cf0868e837d55cbd219"}, "originalPosition": 116}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2665, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}