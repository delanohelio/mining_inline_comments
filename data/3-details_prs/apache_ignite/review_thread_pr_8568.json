{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2ODgyNjkw", "number": 8568, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1MDo1MlrOFIGCwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxODo0NTo1MVrOFIrujg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDMxOTM2OnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Binary/BinarySystemHandlers.cs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1MDo1MlrOIJ1ESQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1MDo1MlrOIJ1ESQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3NzU0NQ==", "bodyText": "Avoid object allocation and call ReadTimestamp directly:\nres = TypeCaster<T>.Cast(BinaryUtils.ReadTimestamp(ctx.Stream, ctx.Marshaller.DateTimeConverter));\nreturn true;", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547177545", "createdAt": "2020-12-22T09:50:52Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Binary/BinarySystemHandlers.cs", "diffHunk": "@@ -258,8 +255,16 @@ public static bool TryReadSystemType<T>(byte typeId, BinaryReader ctx, out T res\n \n             if (handler == null)\n             {\n-                res = default(T);\n-                return false;\n+                if (typeId == BinaryTypeId.Timestamp)\n+                {\n+                    // Date.\n+                    handler = new BinarySystemReader<DateTime?>(stream => BinaryUtils.ReadTimestamp(stream, ctx.Marshaller.DateTimeConverter));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a93dc9fc934889630bbfd881c10a7bb8af3bd883"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDMyNTI0OnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/IDateTimeConverter.cs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1Mjo0OFrOIJ1IBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1Mjo0OFrOIJ1IBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3ODUwMA==", "bodyText": "Convert -> Converts, here and below", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547178500", "createdAt": "2020-12-22T09:52:48Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/IDateTimeConverter.cs", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Binary\n+{\n+    using System;\n+\n+    /// <summary>\n+    /// Converter for DateTime objects.\n+    /// </summary>\n+    public interface IDateTimeConverter\n+    {\n+        /// <summary>Convert date to Java ticks.</summary>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a93dc9fc934889630bbfd881c10a7bb8af3bd883"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDMyNzc3OnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/IDateTimeConverter.cs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1MzozNFrOIJ1JnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1MzozNFrOIJ1JnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE3ODkwOQ==", "bodyText": "Converts <see cref=\"DateTime\"/> values to Java Timestamp and back.", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547178909", "createdAt": "2020-12-22T09:53:34Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/IDateTimeConverter.cs", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Binary\n+{\n+    using System;\n+\n+    /// <summary>\n+    /// Converter for DateTime objects.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a93dc9fc934889630bbfd881c10a7bb8af3bd883"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDM0MDExOnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/IDateTimeConverter.cs", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1Njo1OVrOIJ1Qtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDo1MDo1MVrOIJ25oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MDcyNw==", "bodyText": "Since we decided to operate on Java-specific Timestamp format here, I think a better name would be ITimestampConverter. It is also consistent with WriteTimestamp / ReadTimestamp methods.", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547180727", "createdAt": "2020-12-22T09:56:59Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/IDateTimeConverter.cs", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Binary\n+{\n+    using System;\n+\n+    /// <summary>\n+    /// Converter for DateTime objects.\n+    /// </summary>\n+    public interface IDateTimeConverter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a93dc9fc934889630bbfd881c10a7bb8af3bd883"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwNzU4NQ==", "bodyText": "Renamed", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547207585", "createdAt": "2020-12-22T10:50:51Z", "author": {"login": "nizhikov"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/IDateTimeConverter.cs", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Binary\n+{\n+    using System;\n+\n+    /// <summary>\n+    /// Converter for DateTime objects.\n+    /// </summary>\n+    public interface IDateTimeConverter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MDcyNw=="}, "originalCommit": {"oid": "a93dc9fc934889630bbfd881c10a7bb8af3bd883"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDM0NjQ5OnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/BinaryConfiguration.cs", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1ODo1OVrOIJ1Uow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDo1MTowMVrOIJ257g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MTczMQ==", "bodyText": "See above - let's rename to ITimestampConverter TimestampConverter", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547181731", "createdAt": "2020-12-22T09:58:59Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/BinaryConfiguration.cs", "diffHunk": "@@ -136,6 +137,11 @@ public BinaryConfiguration(params Type[] binaryTypes)\n         /// </summary>\n         public IBinarySerializer Serializer { get; set; }\n \n+        /// <summary>\n+        /// Default date time converter.\n+        /// </summary>\n+        public IDateTimeConverter DateTimeConverter { get; set; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a93dc9fc934889630bbfd881c10a7bb8af3bd883"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwNzY2Mg==", "bodyText": "Renamed", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547207662", "createdAt": "2020-12-22T10:51:01Z", "author": {"login": "nizhikov"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/BinaryConfiguration.cs", "diffHunk": "@@ -136,6 +137,11 @@ public BinaryConfiguration(params Type[] binaryTypes)\n         /// </summary>\n         public IBinarySerializer Serializer { get; set; }\n \n+        /// <summary>\n+        /// Default date time converter.\n+        /// </summary>\n+        public IDateTimeConverter DateTimeConverter { get; set; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MTczMQ=="}, "originalCommit": {"oid": "a93dc9fc934889630bbfd881c10a7bb8af3bd883"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDM1NzQ4OnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/BinaryConfiguration.cs", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDowMjozOVrOIJ1bYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDowNDo1N1rOIJ1fyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MzQ1OA==", "bodyText": "/// <summary>\n        /// Gets or sets a converter between <see cref=\"DateTime\"/> and Java Timestamp.\n        /// Called from <see cref=\"IBinaryWriter.WriteTimestamp\"/>, <see cref=\"IBinaryWriter.WriteTimestampArray\"/>,\n        /// <see cref=\"IBinaryReader.ReadTimestamp\"/>, <see cref=\"IBinaryReader.ReadTimestampArray\"/>.\n        /// <para />\n        /// See also <see cref=\"ForceTimestamp\"/>.\n        /// </summary>", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547183458", "createdAt": "2020-12-22T10:02:39Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/BinaryConfiguration.cs", "diffHunk": "@@ -136,6 +137,11 @@ public BinaryConfiguration(params Type[] binaryTypes)\n         /// </summary>\n         public IBinarySerializer Serializer { get; set; }\n \n+        /// <summary>\n+        /// Default date time converter.\n+        /// </summary>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a93dc9fc934889630bbfd881c10a7bb8af3bd883"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4NDU4NQ==", "bodyText": "Also please update the doc for ForceTimestamp below like this:\nOnly UTC values are supported in Timestamp format. Other values will cause an exception on write, unless <see cref=\"TimestampConverter\"/> is provided.", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547184585", "createdAt": "2020-12-22T10:04:57Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Binary/BinaryConfiguration.cs", "diffHunk": "@@ -136,6 +137,11 @@ public BinaryConfiguration(params Type[] binaryTypes)\n         /// </summary>\n         public IBinarySerializer Serializer { get; set; }\n \n+        /// <summary>\n+        /// Default date time converter.\n+        /// </summary>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MzQ1OA=="}, "originalCommit": {"oid": "a93dc9fc934889630bbfd881c10a7bb8af3bd883"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTk0NTg4OnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/BinaryDateTimeTest.cs", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxODowODozMVrOIKEGlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoxNjo1NlrOIKXktQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQyMzg5NQ==", "bodyText": "I think this test will work on .NET Framework too (and we should have a test that works on .NET Framework).", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547423895", "createdAt": "2020-12-22T18:08:31Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/BinaryDateTimeTest.cs", "diffHunk": "@@ -110,6 +111,34 @@ public void TestClassAttributes()\n             AssertTimestampField<DateTimeClassAttribute2>((o, d) => o.Value = d, o => o.Value, \"Value\");\n         }\n \n+#if NETCOREAPP", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e63549543e1e55b59b437770654039a940d0715c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc0MjkwMQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547742901", "createdAt": "2020-12-23T07:16:56Z", "author": {"login": "nizhikov"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/BinaryDateTimeTest.cs", "diffHunk": "@@ -110,6 +111,34 @@ public void TestClassAttributes()\n             AssertTimestampField<DateTimeClassAttribute2>((o, d) => o.Value = d, o => o.Value, \"Value\");\n         }\n \n+#if NETCOREAPP", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQyMzg5NQ=="}, "originalCommit": {"oid": "e63549543e1e55b59b437770654039a940d0715c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTk0OTk2OnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/BinaryDateTimeTest.cs", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxODowOTo1NlrOIKEJEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoxNzowOVrOIKXleg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQyNDUyOQ==", "bodyText": "Unused variable ex.\n\"Converter Error!\" is a message that will be displayed on assertion failure. I think the intent here is to check the exception message instead. To do that, add Assert.AreEqual(\"Converter Error!\", ex.Message).", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547424529", "createdAt": "2020-12-22T18:09:56Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/BinaryDateTimeTest.cs", "diffHunk": "@@ -110,6 +111,34 @@ public void TestClassAttributes()\n             AssertTimestampField<DateTimeClassAttribute2>((o, d) => o.Value = d, o => o.Value, \"Value\");\n         }\n \n+#if NETCOREAPP\n+        /// <summary>\n+        /// Tests custom timestamp converter.\n+        /// </summary>\n+        [Test]\n+        public void TestCustomTimestampConverter()\n+        {\n+            var cfg =  new IgniteConfiguration(TestUtils.GetTestConfiguration(name: \"ignite-1\"))\n+            {\n+                BinaryConfiguration = new BinaryConfiguration()\n+                {\n+                    ForceTimestamp = true, \n+                    TimestampConverter = new TimestampConverter()\n+                }\n+            };\n+            var ignite = Ignition.Start(cfg);\n+            var binary = ignite.GetBinary();\n+ \n+            // Check config.\n+            Assert.NotNull(ignite.GetConfiguration().BinaryConfiguration.TimestampConverter);\n+\n+            AssertTimestampField<DateTimeObj2>((o, d) => o.Value = d, o => o.Value, \"Value\");\n+\n+            var ex = Assert.Throws<BinaryObjectException>(() => binary.ToBinary<IBinaryObject>(new DateTime(1997, 8, 29)), \n+                \"Converter Error!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e63549543e1e55b59b437770654039a940d0715c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc0MzA5OA==", "bodyText": "Thanks! Fixed", "url": "https://github.com/apache/ignite/pull/8568#discussion_r547743098", "createdAt": "2020-12-23T07:17:09Z", "author": {"login": "nizhikov"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/BinaryDateTimeTest.cs", "diffHunk": "@@ -110,6 +111,34 @@ public void TestClassAttributes()\n             AssertTimestampField<DateTimeClassAttribute2>((o, d) => o.Value = d, o => o.Value, \"Value\");\n         }\n \n+#if NETCOREAPP\n+        /// <summary>\n+        /// Tests custom timestamp converter.\n+        /// </summary>\n+        [Test]\n+        public void TestCustomTimestampConverter()\n+        {\n+            var cfg =  new IgniteConfiguration(TestUtils.GetTestConfiguration(name: \"ignite-1\"))\n+            {\n+                BinaryConfiguration = new BinaryConfiguration()\n+                {\n+                    ForceTimestamp = true, \n+                    TimestampConverter = new TimestampConverter()\n+                }\n+            };\n+            var ignite = Ignition.Start(cfg);\n+            var binary = ignite.GetBinary();\n+ \n+            // Check config.\n+            Assert.NotNull(ignite.GetConfiguration().BinaryConfiguration.TimestampConverter);\n+\n+            AssertTimestampField<DateTimeObj2>((o, d) => o.Value = d, o => o.Value, \"Value\");\n+\n+            var ex = Assert.Throws<BinaryObjectException>(() => binary.ToBinary<IBinaryObject>(new DateTime(1997, 8, 29)), \n+                \"Converter Error!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQyNDUyOQ=="}, "originalCommit": {"oid": "e63549543e1e55b59b437770654039a940d0715c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjQ5MzU4OnYy", "diffSide": "RIGHT", "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/BinaryDateTimeTest.cs", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxODo0NTo1MVrOIKvUVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMTowMzoxM1rOIK1n9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODEzMTkyNA==", "bodyText": "Let's extract a constant to avoid repeating \"ToJavaTicks Error!\" value.", "url": "https://github.com/apache/ignite/pull/8568#discussion_r548131924", "createdAt": "2020-12-23T18:45:51Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/BinaryDateTimeTest.cs", "diffHunk": "@@ -134,10 +133,22 @@ public void TestCustomTimestampConverter()\n \n             AssertTimestampField<DateTimeObj2>((o, d) => o.Value = d, o => o.Value, \"Value\");\n \n-            var ex = Assert.Throws<BinaryObjectException>(() => binary.ToBinary<IBinaryObject>(new DateTime(1997, 8, 29)), \n-                \"Converter Error!\");\n+            var dt1 = new DateTime(1997, 8, 29, 0, 0, 0, DateTimeKind.Utc);\n+\n+            var ex = Assert.Throws<BinaryObjectException>(() => binary.ToBinary<DateTime>(dt1));\n+            Assert.AreEqual(\"ToJavaTicks Error!\", ex.Message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c66a2f1968633600ff79627bcb9158dfa5f2d8f6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIzNTI1Mw==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8568#discussion_r548235253", "createdAt": "2020-12-23T21:03:13Z", "author": {"login": "nizhikov"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/BinaryDateTimeTest.cs", "diffHunk": "@@ -134,10 +133,22 @@ public void TestCustomTimestampConverter()\n \n             AssertTimestampField<DateTimeObj2>((o, d) => o.Value = d, o => o.Value, \"Value\");\n \n-            var ex = Assert.Throws<BinaryObjectException>(() => binary.ToBinary<IBinaryObject>(new DateTime(1997, 8, 29)), \n-                \"Converter Error!\");\n+            var dt1 = new DateTime(1997, 8, 29, 0, 0, 0, DateTimeKind.Utc);\n+\n+            var ex = Assert.Throws<BinaryObjectException>(() => binary.ToBinary<DateTime>(dt1));\n+            Assert.AreEqual(\"ToJavaTicks Error!\", ex.Message);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODEzMTkyNA=="}, "originalCommit": {"oid": "c66a2f1968633600ff79627bcb9158dfa5f2d8f6"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2361, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}