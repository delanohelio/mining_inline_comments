{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MzEwNjUw", "number": 8313, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNzo1NjowMlrOEqCDxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODowNzo1OFrOEqCGlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTA5MzgwOnYy", "diffSide": "RIGHT", "path": "modules/zookeeper/src/main/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNzo1NjowMlrOHcC0Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODowMjo1NlrOHcC2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2ODMyNg==", "bodyText": "n -> !n.isClient() && !n.isDaemon()", "url": "https://github.com/apache/ignite/pull/8313#discussion_r499168326", "createdAt": "2020-10-03T17:56:02Z", "author": {"login": "ivandasch"}, "path": "modules/zookeeper/src/main/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryImpl.java", "diffHunk": "@@ -4582,9 +4582,11 @@ else if (connState == ConnectionState.STOPPED) {\n \n     /** */\n     public UUID getCoordinator() {\n-        Map.Entry<Long, ZookeeperClusterNode> e = rtState.top.nodesByOrder.firstEntry();\n-\n-        return e != null ? e.getValue().id() : null;\n+        return rtState.top.nodesByOrder.values().stream()\n+                .filter(n -> !n.isClient())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dd1190de78ee2dd8fabed2932de7a22f0029775"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2ODgyMQ==", "bodyText": "fixed", "url": "https://github.com/apache/ignite/pull/8313#discussion_r499168821", "createdAt": "2020-10-03T18:02:56Z", "author": {"login": "Sega76"}, "path": "modules/zookeeper/src/main/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryImpl.java", "diffHunk": "@@ -4582,9 +4582,11 @@ else if (connState == ConnectionState.STOPPED) {\n \n     /** */\n     public UUID getCoordinator() {\n-        Map.Entry<Long, ZookeeperClusterNode> e = rtState.top.nodesByOrder.firstEntry();\n-\n-        return e != null ? e.getValue().id() : null;\n+        return rtState.top.nodesByOrder.values().stream()\n+                .filter(n -> !n.isClient())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2ODMyNg=="}, "originalCommit": {"oid": "7dd1190de78ee2dd8fabed2932de7a22f0029775"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTEwMDI1OnYy", "diffSide": "RIGHT", "path": "modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryMiscTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODowNjo0NFrOHcC3hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODoxMjo1N1rOHcC5dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2OTE1Ng==", "bodyText": "stopGrid(0)", "url": "https://github.com/apache/ignite/pull/8313#discussion_r499169156", "createdAt": "2020-10-03T18:06:44Z", "author": {"login": "ivandasch"}, "path": "modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryMiscTest.java", "diffHunk": "@@ -241,6 +241,23 @@ public void testMbean() throws Exception {\n         }\n     }\n \n+    /**\n+     * @throws Exception If failed.\n+     */\n+    @Test\n+    public void testMbeanGetCoordinator() throws Exception {\n+        startGrid(0);\n+        startClientGrid(1);\n+        IgniteEx srv2 = startGrid(2);\n+\n+        ZookeeperDiscoverySpiMBean mbean = getMxBean(srv2.context().igniteInstanceName(), \"SPIs\",\n+                ZookeeperDiscoverySpi.class, ZookeeperDiscoverySpiMBean.class);\n+\n+        grid(0).close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dd1190de78ee2dd8fabed2932de7a22f0029775"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2OTY1Mg==", "bodyText": "fixed", "url": "https://github.com/apache/ignite/pull/8313#discussion_r499169652", "createdAt": "2020-10-03T18:12:57Z", "author": {"login": "Sega76"}, "path": "modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryMiscTest.java", "diffHunk": "@@ -241,6 +241,23 @@ public void testMbean() throws Exception {\n         }\n     }\n \n+    /**\n+     * @throws Exception If failed.\n+     */\n+    @Test\n+    public void testMbeanGetCoordinator() throws Exception {\n+        startGrid(0);\n+        startClientGrid(1);\n+        IgniteEx srv2 = startGrid(2);\n+\n+        ZookeeperDiscoverySpiMBean mbean = getMxBean(srv2.context().igniteInstanceName(), \"SPIs\",\n+                ZookeeperDiscoverySpi.class, ZookeeperDiscoverySpiMBean.class);\n+\n+        grid(0).close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2OTE1Ng=="}, "originalCommit": {"oid": "7dd1190de78ee2dd8fabed2932de7a22f0029775"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTEwMTAyOnYy", "diffSide": "RIGHT", "path": "modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryMiscTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODowNzo1OFrOHcC35g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxODoxMjo1MFrOHcC5bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2OTI1NA==", "bodyText": "Could you please check also the other method? Just to ensure that both methods are correct", "url": "https://github.com/apache/ignite/pull/8313#discussion_r499169254", "createdAt": "2020-10-03T18:07:58Z", "author": {"login": "ivandasch"}, "path": "modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryMiscTest.java", "diffHunk": "@@ -241,6 +241,23 @@ public void testMbean() throws Exception {\n         }\n     }\n \n+    /**\n+     * @throws Exception If failed.\n+     */\n+    @Test\n+    public void testMbeanGetCoordinator() throws Exception {\n+        startGrid(0);\n+        startClientGrid(1);\n+        IgniteEx srv2 = startGrid(2);\n+\n+        ZookeeperDiscoverySpiMBean mbean = getMxBean(srv2.context().igniteInstanceName(), \"SPIs\",\n+                ZookeeperDiscoverySpi.class, ZookeeperDiscoverySpiMBean.class);\n+\n+        grid(0).close();\n+\n+        assertEquals(mbean.getCoordinatorNodeFormatted(), String.valueOf(srv2.localNode()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dd1190de78ee2dd8fabed2932de7a22f0029775"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2OTY0NA==", "bodyText": "done", "url": "https://github.com/apache/ignite/pull/8313#discussion_r499169644", "createdAt": "2020-10-03T18:12:50Z", "author": {"login": "Sega76"}, "path": "modules/zookeeper/src/test/java/org/apache/ignite/spi/discovery/zk/internal/ZookeeperDiscoveryMiscTest.java", "diffHunk": "@@ -241,6 +241,23 @@ public void testMbean() throws Exception {\n         }\n     }\n \n+    /**\n+     * @throws Exception If failed.\n+     */\n+    @Test\n+    public void testMbeanGetCoordinator() throws Exception {\n+        startGrid(0);\n+        startClientGrid(1);\n+        IgniteEx srv2 = startGrid(2);\n+\n+        ZookeeperDiscoverySpiMBean mbean = getMxBean(srv2.context().igniteInstanceName(), \"SPIs\",\n+                ZookeeperDiscoverySpi.class, ZookeeperDiscoverySpiMBean.class);\n+\n+        grid(0).close();\n+\n+        assertEquals(mbean.getCoordinatorNodeFormatted(), String.valueOf(srv2.localNode()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE2OTI1NA=="}, "originalCommit": {"oid": "7dd1190de78ee2dd8fabed2932de7a22f0029775"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2700, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}