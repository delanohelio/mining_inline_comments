{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MjU0NTM0", "number": 7277, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMzoyNzoyMVrODZ1G1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNTo1NToxNVrOERtGyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDExMDk1OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMzoyNzoyMVrOFgb-_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDo0Njo1NVrOFpyoQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU1NzI0NA==", "bodyText": "I worry about a case when there is no node OWNING all partitions (i.e. actually some partitions are lost). In a such case we will use all affinity nodes for a query execution. And duplicates seems possible. I suggest at least resort to any (single) affinity node in such case. And it looks like the previous behavior was the same.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r369557244", "createdAt": "2020-01-22T13:27:21Z", "author": {"login": "pavlukhin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU3OTgyOA==", "bodyText": "Why do you think it will cause duplicates?\nI supposed if I return all affinity nodes it will try to use only primary partitions in this case, like if we worked with PARTITIONED cache, correct me if I'm wrong.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r369579828", "createdAt": "2020-01-22T14:10:09Z", "author": {"login": "macrergate"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU1NzI0NA=="}, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5NzcwMA==", "bodyText": "I meant for each partition distributed query manager will choose only primary node for this partition, thus no duplicate results possible. Otherwise if I'll return one affinity node in such case, it certainly will lead to incomplete results. Do you agree?", "url": "https://github.com/apache/ignite/pull/7277#discussion_r369597700", "createdAt": "2020-01-22T14:39:26Z", "author": {"login": "macrergate"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU1NzI0NA=="}, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwMzg3Ng==", "bodyText": "I can see from GridCacheQueryManager#scanIterator backup partitions will be always scanned for REPLICATED caches. And I still think that it should be evident from code that only one node is used for query execution against REPLICATED cache.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r370003876", "createdAt": "2020-01-23T09:17:33Z", "author": {"login": "pavlukhin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU1NzI0NA=="}, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwODgwMg==", "bodyText": "Also I dug a little bit deeper and found some more problems.\nFirst, there is a race between getting nodes and inspecting partitions. Consequently cctx.topology().partitions(node.id()) can return null here. I suppose using single topology version here can help.\nSecond, LOST partitions are not handled properly. It is possible that hasMovingPartitions returns false when there are LOST partitions. Unpleasant, but in my mind can be fixed in a separate ticket about ScanQuery and LOST partitions.\nGood news here are that if there is no LOST partitions it seems there is an invariant for REPLICATED caches that on a specific topology version at least one node owns all partitions.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r370008802", "createdAt": "2020-01-23T09:27:46Z", "author": {"login": "pavlukhin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU1NzI0NA=="}, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2NTQ0Mg==", "bodyText": "Hi, Ivan. I agree LOST partitions case better to solve in another ticket.\nAbout the race - I did not realize how to use topology version here, but it looks like I solved the race with topology.readLock(), how do you like it?", "url": "https://github.com/apache/ignite/pull/7277#discussion_r379365442", "createdAt": "2020-02-14T10:46:55Z", "author": {"login": "macrergate"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU1NzI0NA=="}, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTA3NDMwOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjoxNDowNlrOFs8Xug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjowOTo0OFrOFvXT_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MDc3OA==", "bodyText": "Does the case with explicit partition work correctly after made changes? Previously we had a single node projection for REPLICATED caches, but now not.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r382670778", "createdAt": "2020-02-21T16:14:06Z", "author": {"login": "pavlukhin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +656,30 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6053a8b756d88af71cdab1ba40a1bec08345f4a8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIwOTM0MQ==", "bodyText": "I've added check for query by partition in the test. It works.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r385209341", "createdAt": "2020-02-27T16:09:48Z", "author": {"login": "macrergate"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +656,30 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MDc3OA=="}, "originalCommit": {"oid": "6053a8b756d88af71cdab1ba40a1bec08345f4a8"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTA4MTMxOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjoxNjowMlrOFs8b_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo0MzoxMVrOFvWXGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MTg2OA==", "bodyText": "I suppose we can evaluate this branch without holding a topology read lock, cannot we?", "url": "https://github.com/apache/ignite/pull/7277#discussion_r382671868", "createdAt": "2020-02-21T16:16:02Z", "author": {"login": "pavlukhin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +656,30 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n-                    return Collections.singletonList(cctx.localNode());\n+                GridDhtPartitionTopology topology = cctx.topology();\n \n-                Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n+                topology.readLock();\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                try {\n+                    if (cctx.affinityNode() && !topology.localPartitionMap().hasMovingPartitions())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6053a8b756d88af71cdab1ba40a1bec08345f4a8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5Mzc1NA==", "bodyText": "Agree, done.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r385193754", "createdAt": "2020-02-27T15:43:11Z", "author": {"login": "macrergate"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +656,30 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n-                    return Collections.singletonList(cctx.localNode());\n+                GridDhtPartitionTopology topology = cctx.topology();\n \n-                Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n+                topology.readLock();\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                try {\n+                    if (cctx.affinityNode() && !topology.localPartitionMap().hasMovingPartitions())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MTg2OA=="}, "originalCommit": {"oid": "6053a8b756d88af71cdab1ba40a1bec08345f4a8"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTA4NzA2OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjoxNzo0NVrOFs8frQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo0NDowNlrOFvWXpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MjgxMw==", "bodyText": "Code style: no curly braces for single-line if statements.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r382672813", "createdAt": "2020-02-21T16:17:45Z", "author": {"login": "pavlukhin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +656,30 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n-                    return Collections.singletonList(cctx.localNode());\n+                GridDhtPartitionTopology topology = cctx.topology();\n \n-                Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n+                topology.readLock();\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                try {\n+                    if (cctx.affinityNode() && !topology.localPartitionMap().hasMovingPartitions())\n+                        return Collections.singletonList(cctx.localNode());\n+\n+                    Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n+\n+                    List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                    Collections.shuffle(nodes);\n+\n+                    for (ClusterNode node : nodes) {\n+                        if (!topology.partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6053a8b756d88af71cdab1ba40a1bec08345f4a8"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5Mzg5NQ==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r385193895", "createdAt": "2020-02-27T15:44:06Z", "author": {"login": "macrergate"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +656,30 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n-                    return Collections.singletonList(cctx.localNode());\n+                GridDhtPartitionTopology topology = cctx.topology();\n \n-                Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n+                topology.readLock();\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                try {\n+                    if (cctx.affinityNode() && !topology.localPartitionMap().hasMovingPartitions())\n+                        return Collections.singletonList(cctx.localNode());\n+\n+                    Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n+\n+                    List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                    Collections.shuffle(nodes);\n+\n+                    for (ClusterNode node : nodes) {\n+                        if (!topology.partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MjgxMw=="}, "originalCommit": {"oid": "6053a8b756d88af71cdab1ba40a1bec08345f4a8"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTA4ODMzOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjoxODoxMVrOFs8gjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTo0NjowNlrOFvWYlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MzAzNg==", "bodyText": "Code style: finally should go from a new line.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r382673036", "createdAt": "2020-02-21T16:18:11Z", "author": {"login": "pavlukhin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +656,30 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n-                    return Collections.singletonList(cctx.localNode());\n+                GridDhtPartitionTopology topology = cctx.topology();\n \n-                Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n+                topology.readLock();\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                try {\n+                    if (cctx.affinityNode() && !topology.localPartitionMap().hasMovingPartitions())\n+                        return Collections.singletonList(cctx.localNode());\n+\n+                    Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n+\n+                    List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                    Collections.shuffle(nodes);\n+\n+                    for (ClusterNode node : nodes) {\n+                        if (!topology.partitions(node.id()).hasMovingPartitions()) {\n+                            return Collections.singletonList(node);\n+                        }\n+                    }\n+\n+                    return affNodes;\n+                } finally {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6053a8b756d88af71cdab1ba40a1bec08345f4a8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5NDEzNA==", "bodyText": "Done.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r385194134", "createdAt": "2020-02-27T15:46:06Z", "author": {"login": "macrergate"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +656,30 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n-                    return Collections.singletonList(cctx.localNode());\n+                GridDhtPartitionTopology topology = cctx.topology();\n \n-                Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n+                topology.readLock();\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                try {\n+                    if (cctx.affinityNode() && !topology.localPartitionMap().hasMovingPartitions())\n+                        return Collections.singletonList(cctx.localNode());\n+\n+                    Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n+\n+                    List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                    Collections.shuffle(nodes);\n+\n+                    for (ClusterNode node : nodes) {\n+                        if (!topology.partitions(node.id()).hasMovingPartitions()) {\n+                            return Collections.singletonList(node);\n+                        }\n+                    }\n+\n+                    return affNodes;\n+                } finally {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MzAzNg=="}, "originalCommit": {"oid": "6053a8b756d88af71cdab1ba40a1bec08345f4a8"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDAwMjY2OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNTo1NToxNVrOG2j5Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxNzo0NTo1OFrOG6fV4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2NDQwNw==", "bodyText": "!cctx.topology().partitions(node.id()).hasMovingPartitions() is throwing Nullpointer exception at runtime for non-pationed Cache and the Cluster starts without any Cache and then Cline Node join and populate the Cache. cctx.topology().partitions(node.id()) is returning null", "url": "https://github.com/apache/ignite/pull/7277#discussion_r459864407", "createdAt": "2020-07-24T05:55:15Z", "author": {"login": "sumanentc"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5MjgxOA==", "bodyText": "Hi @sumanentc , do you encounter NullPointerException with running Ignite? Feel free to report an issue in https://issues.apache.org/jira/projects/IGNITE/issues", "url": "https://github.com/apache/ignite/pull/7277#discussion_r459892818", "createdAt": "2020-07-24T07:28:02Z", "author": {"login": "pavlukhin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2NDQwNw=="}, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU4MTg1OQ==", "bodyText": "Yes , I get the issue when the client node tries to fetch the Cache data from the Cluster.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r463581859", "createdAt": "2020-07-31T12:30:18Z", "author": {"login": "sumanentc"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2NDQwNw=="}, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU5MzYwNg==", "bodyText": "Still I suppose that reporting an issue in https://issues.apache.org/jira/projects/IGNITE/issues is a proper option. If you would like to contribute a fix it would be awesome. Unfortunately I will not have a time to fix this problem in near future, sorry for that.", "url": "https://github.com/apache/ignite/pull/7277#discussion_r463593606", "createdAt": "2020-07-31T12:55:14Z", "author": {"login": "pavlukhin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2NDQwNw=="}, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2NjIwNQ==", "bodyText": "raised ticket for the same: https://issues.apache.org/jira/browse/IGNITE-13317", "url": "https://github.com/apache/ignite/pull/7277#discussion_r463966205", "createdAt": "2020-08-01T14:17:08Z", "author": {"login": "sumanentc"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2NDQwNw=="}, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk4NDA5Ng==", "bodyText": "Thank you!", "url": "https://github.com/apache/ignite/pull/7277#discussion_r463984096", "createdAt": "2020-08-01T17:45:58Z", "author": {"login": "pavlukhin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/query/GridCacheQueryAdapter.java", "diffHunk": "@@ -654,12 +655,22 @@ private boolean isSafeLossPolicy() {\n                 if (prj != null || part != null)\n                     return nodes(cctx, prj, part);\n \n-                if (cctx.affinityNode())\n+                if (cctx.affinityNode() && !cctx.topology().localPartitionMap().hasMovingPartitions())\n                     return Collections.singletonList(cctx.localNode());\n \n                 Collection<ClusterNode> affNodes = nodes(cctx, null, null);\n \n-                return affNodes.isEmpty() ? affNodes : Collections.singletonList(F.rand(affNodes));\n+                List<ClusterNode> nodes = new ArrayList<>(affNodes);\n+\n+                Collections.shuffle(nodes);\n+\n+                for (ClusterNode node : nodes) {\n+                    if (!cctx.topology().partitions(node.id()).hasMovingPartitions()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2NDQwNw=="}, "originalCommit": {"oid": "f3e513013f4b8e3afd49e58e6adb88e6ab3c0e7c"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2575, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}