{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5ODc5NDQx", "number": 8331, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo1NDoxMFrOEr9jCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo1NDoxMFrOEr9jCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTMyNjE2OnYy", "diffSide": "RIGHT", "path": "modules/core/src/test/java/org/apache/ignite/platform/PlatformProcessUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo1NDoxMFrOHfBDwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOToxNzo0NVrOHfB4IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI4NTI0OA==", "bodyText": "Is this a limitation, or do we just not need several processes right now and this was the simpliest implementation?", "url": "https://github.com/apache/ignite/pull/8331#discussion_r502285248", "createdAt": "2020-10-09T08:54:10Z", "author": {"login": "isapego"}, "path": "modules/core/src/test/java/org/apache/ignite/platform/PlatformProcessUtils.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.platform;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.util.concurrent.ForkJoinPool;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.ignite.IgniteException;\n+\n+/**\n+ * Platform process utils for tests.\n+ */\n+@SuppressWarnings(\"unused\") // Called from Platform.\n+public class PlatformProcessUtils {\n+    /** */\n+    private static volatile Process process;\n+\n+    /**\n+     * Starts a new process.\n+     *\n+     * @param file Executable name.\n+     * @param arg1 Argument.\n+     * @param arg2 Argument.\n+     * @param workDir Work directory.\n+     * @param waitForOutput A string to look for in the output.\n+     */\n+    public static void startProcess(String file, String arg1, String arg2, String workDir, String waitForOutput)\n+            throws Exception {\n+        if (process != null)\n+            throw new Exception(\"PlatformProcessUtils can't start more than one process at a time.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3b55d1a80bd7c0658b4affca5006c01992fa83a"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI5ODY1Nw==", "bodyText": "It would be great to return PID and then use it to kill the process. Unfortunately, Process.pid() was only added in Java 9, and we have to be able to run on Java 8.\nSo yes, this is a simplification - good enough for tests.", "url": "https://github.com/apache/ignite/pull/8331#discussion_r502298657", "createdAt": "2020-10-09T09:17:45Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/test/java/org/apache/ignite/platform/PlatformProcessUtils.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.platform;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.util.concurrent.ForkJoinPool;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.ignite.IgniteException;\n+\n+/**\n+ * Platform process utils for tests.\n+ */\n+@SuppressWarnings(\"unused\") // Called from Platform.\n+public class PlatformProcessUtils {\n+    /** */\n+    private static volatile Process process;\n+\n+    /**\n+     * Starts a new process.\n+     *\n+     * @param file Executable name.\n+     * @param arg1 Argument.\n+     * @param arg2 Argument.\n+     * @param workDir Work directory.\n+     * @param waitForOutput A string to look for in the output.\n+     */\n+    public static void startProcess(String file, String arg1, String arg2, String workDir, String waitForOutput)\n+            throws Exception {\n+        if (process != null)\n+            throw new Exception(\"PlatformProcessUtils can't start more than one process at a time.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI4NTI0OA=="}, "originalCommit": {"oid": "d3b55d1a80bd7c0658b4affca5006c01992fa83a"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2705, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}