{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNjIxOTYw", "number": 8522, "title": "GNITE-13835 : Improve discovery ducktape test to research small timeouts and behavior on large cluster.", "bodyText": "Node id is now read from the log, not by remote JMX call. Faster, simpler, more reliable. JMX fails sometimes on small timeouts because node id is not published yet. Started node always prints its node id on info level.\nfailure_detection_timeout is now global variable with default value. To run cluster experiments with different settings and on various node count.\nSimplified await timeout on 'Node failure event'. Discovered sensitive delays on ssh, log reads and other non-manageable timeouts", "createdAt": "2020-12-01T22:47:08Z", "url": "https://github.com/apache/ignite/pull/8522", "merged": true, "mergeCommit": {"oid": "71cc2cfdb001bd6c1d52176a72181ec9ca9d72af"}, "closed": true, "closedAt": "2021-02-08T11:16:51Z", "author": {"login": "Vladsz83"}, "timelineItems": {"totalCount": 61, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhosL0AH2gAyNTMwNjIxOTYwOmM4MWY1NGE2OTdmNGQ4NDQ1YTg4ZjUxZDU0YmY0ZTUyNzczOWRhMTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd4EL27AH2gAyNTMwNjIxOTYwOjc1Yzc1YzhjZDNlNmVmZGQ4MjY4Yzg1ZTc5ZDcwMTYzMjNmN2JlNDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c81f54a697f4d8445a88f51d54bf4e527739da11", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/c81f54a697f4d8445a88f51d54bf4e527739da11", "committedDate": "2020-11-30T17:21:12Z", "message": "Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "685301027850534941dd87dc2bb55cdf6ecda0c5", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/685301027850534941dd87dc2bb55cdf6ecda0c5", "committedDate": "2020-11-30T18:51:13Z", "message": "research"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2f09d260cdadf26995293f11fa0af6efe3a2553", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/f2f09d260cdadf26995293f11fa0af6efe3a2553", "committedDate": "2020-12-01T22:45:00Z", "message": "Fix 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0353bc587c4099f5ff95fa5e0848bb004ca2c6c", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/c0353bc587c4099f5ff95fa5e0848bb004ca2c6c", "committedDate": "2020-12-02T10:48:31Z", "message": "Merge branch 'ignite-ducktape' into research-small-timeouts\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/tests/discovery_test.py"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e16981ac8b3f21658b72815cafadef01af3a21ca", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e16981ac8b3f21658b72815cafadef01af3a21ca", "committedDate": "2020-12-02T10:49:10Z", "message": "Testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e19d38aba42a0a0d7bd129df397f3ce5eff3570d", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e19d38aba42a0a0d7bd129df397f3ce5eff3570d", "committedDate": "2020-12-02T20:30:38Z", "message": "Testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7ddb234ef0abd4f8731e055daed1b40a60d1947", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/f7ddb234ef0abd4f8731e055daed1b40a60d1947", "committedDate": "2020-12-03T14:32:47Z", "message": "The ring tends to work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d46b88359a64b2995ccea66e97e38276b61fb99", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/2d46b88359a64b2995ccea66e97e38276b61fb99", "committedDate": "2020-12-03T19:09:01Z", "message": "good refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c7cf116f69d3bf80cfc98399baf74748cd1ffd4", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/3c7cf116f69d3bf80cfc98399baf74748cd1ffd4", "committedDate": "2020-12-03T20:35:41Z", "message": "for test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78fa5080cb5459fd344d473c7e20b2fe28a5a7ba", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/78fa5080cb5459fd344d473c7e20b2fe28a5a7ba", "committedDate": "2020-12-03T20:39:55Z", "message": "Merge remote-tracking branch 'origin/research-small-timeouts' into research-small-timeouts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd6a587ab2beacd79e0961ad36074dee8af2e180", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/bd6a587ab2beacd79e0961ad36074dee8af2e180", "committedDate": "2020-12-07T09:53:01Z", "message": "test with G1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33da5e34d582b7e3f322d3390353d8ce61d5551f", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/33da5e34d582b7e3f322d3390353d8ce61d5551f", "committedDate": "2020-12-07T12:02:10Z", "message": "FDT == 500. + NoSync in ZK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a7b53e178a2fb17780e2d6d5016cb4a820d7613", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/4a7b53e178a2fb17780e2d6d5016cb4a820d7613", "committedDate": "2020-12-08T10:48:49Z", "message": "Good fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e1043ee6bbf3b4f0cb4d0cf3d10781084cd8da7", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/4e1043ee6bbf3b4f0cb4d0cf3d10781084cd8da7", "committedDate": "2020-12-08T19:20:41Z", "message": "+ FDT as global"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd800130d7a47636099a505ca8f81d357ad3b31a", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/cd800130d7a47636099a505ca8f81d357ad3b31a", "committedDate": "2020-12-08T19:27:23Z", "message": "Merge branch 'ignite-ducktape' into research-small-timeouts\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/services/zk/zookeeper.py\n#\tmodules/ducktests/tests/ignitetest/tests/discovery_test.py"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10990bd5b3f78575d530c939cfe1edb2d8493b14", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/10990bd5b3f78575d530c939cfe1edb2d8493b14", "committedDate": "2020-12-08T20:07:46Z", "message": "merge ducktape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c470a7ffdbfcd6de5fabfb39874558f7ee28c5e4", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/c470a7ffdbfcd6de5fabfb39874558f7ee28c5e4", "committedDate": "2020-12-08T20:10:03Z", "message": "merge ducktape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01971fc3e5938b586cf0767697d452538c8e002f", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/01971fc3e5938b586cf0767697d452538c8e002f", "committedDate": "2020-12-09T08:50:23Z", "message": "Fix of linger param and codestyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbcdef8dbd1ebe96f58dedcab24cc765ecf66cf6", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/fbcdef8dbd1ebe96f58dedcab24cc765ecf66cf6", "committedDate": "2020-12-09T10:16:01Z", "message": "Small fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d5f992f4567a643d706fa1492af7fb0fd2b3d42", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/2d5f992f4567a643d706fa1492af7fb0fd2b3d42", "committedDate": "2020-12-09T14:56:51Z", "message": "await timers fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9525d422f1262f40a8680bdd02e8790d2d3f1ea6", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/9525d422f1262f40a8680bdd02e8790d2d3f1ea6", "committedDate": "2020-12-09T20:36:01Z", "message": "No 2.9.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b7dac3e1fb62391f4b0b0bed64c34e107534be7", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/5b7dac3e1fb62391f4b0b0bed64c34e107534be7", "committedDate": "2020-12-10T10:26:42Z", "message": "simplified"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a81f1a5fd0e74cb7ddac6a501a507d2d318455a", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/5a81f1a5fd0e74cb7ddac6a501a507d2d318455a", "committedDate": "2020-12-10T11:14:03Z", "message": "Merge remote-tracking branch 'origin/research-small-timeouts' into research-small-timeouts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3e9eae3e4b624bef9f8ab2bd50b0ec83d1ef9d8", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/f3e9eae3e4b624bef9f8ab2bd50b0ec83d1ef9d8", "committedDate": "2020-12-10T15:59:57Z", "message": "Code style fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29faa938a199c77438e318533a953a396fee4bf7", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/29faa938a199c77438e318533a953a396fee4bf7", "committedDate": "2020-12-11T09:43:59Z", "message": "Merge remote-tracking branch 'origin/research-small-timeouts' into research-small-timeouts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a05ca0a539b60291f3a145a32aef353aceb0c58", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/8a05ca0a539b60291f3a145a32aef353aceb0c58", "committedDate": "2020-12-11T09:45:19Z", "message": "ZK: forceSync: default == 'no'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e219df0c24fd7a7d7fece5b3fd60baa7a326eb3", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/9e219df0c24fd7a7d7fece5b3fd60baa7a326eb3", "committedDate": "2020-12-11T10:49:33Z", "message": "default 'forceSync' == 'no'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMjEzODMz", "url": "https://github.com/apache/ignite/pull/8522#pullrequestreview-551213833", "createdAt": "2020-12-14T10:03:46Z", "commit": {"oid": "9e219df0c24fd7a7d7fece5b3fd60baa7a326eb3"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDowMzo0NlrOIFIz3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDoxNjoyN1rOIFJVOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1ODE0MQ==", "bodyText": "could this be IgniteAppService method or property?", "url": "https://github.com/apache/ignite/pull/8522#discussion_r542258141", "createdAt": "2020-12-14T10:03:46Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -244,17 +250,18 @@ def _simulate_and_detect_failure(self, servers, failed_nodes, timeout):\n \n     def _check_failed_number(self, failed_nodes, survived_node):\n         \"\"\"Ensures number of failed nodes is correct.\"\"\"\n-        cmd = \"grep '%s' %s | wc -l\" % (node_failed_event_pattern(), IgniteAwareService.STDOUT_STDERR_CAPTURE)\n+        failed_cnt = int(exec_command(survived_node, \"grep '%s' %s | wc -l\" %\n+                                      (node_failed_event_pattern(), IgniteAwareService.STDOUT_STDERR_CAPTURE)))\n \n-        failed_cnt = int(str(survived_node.account.ssh_client.exec_command(cmd)[1].read(), sys.getdefaultencoding()))\n+        # Cache survivor id, do not read each time.\n+        surv_id = read_node_id(survived_node)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e219df0c24fd7a7d7fece5b3fd60baa7a326eb3"}, "originalPosition": 234}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI2MDE0MQ==", "bodyText": "could this be the default behavior for any IgniteAwareService?", "url": "https://github.com/apache/ignite/pull/8522#discussion_r542260141", "createdAt": "2020-12-14T10:06:34Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -88,99 +93,100 @@ def __init__(self, test_context):\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(nodes_to_kill=[1, 2], failure_detection_timeout=[FAILURE_TIMEOUT],\n-            load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n-    def test_nodes_fail_not_sequential_tcp(self, ignite_version, nodes_to_kill, load_type, failure_detection_timeout):\n+    @matrix(nodes_to_kill=[1, 2], load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_nodes_fail_not_sequential_tcp(self, ignite_version, nodes_to_kill, load_type):\n         \"\"\"\n         Test nodes failure scenario with TcpDiscoverySpi not allowing nodes to fail in a row.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=nodes_to_kill,\n-                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=False,\n-                                          failure_detection_timeout=failure_detection_timeout)\n+                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=False)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL],\n-            failure_detection_timeout=[FAILURE_TIMEOUT])\n-    def test_2_nodes_fail_sequential_tcp(self, ignite_version, load_type, failure_detection_timeout):\n+    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_2_nodes_fail_sequential_tcp(self, ignite_version, load_type):\n         \"\"\"\n         Test 2 nodes sequential failure scenario with TcpDiscoverySpi.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=2,\n-                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=True,\n-                                          failure_detection_timeout=failure_detection_timeout)\n+                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=True)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @version_if(lambda version: version != V_2_8_0)  # ignite-zookeeper package is broken in 2.8.0\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(nodes_to_kill=[1, 2], failure_detection_timeout=[FAILURE_TIMEOUT],\n-            load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n-    def test_nodes_fail_not_sequential_zk(self, ignite_version, nodes_to_kill, load_type, failure_detection_timeout):\n+    @matrix(nodes_to_kill=[1, 2], load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_nodes_fail_not_sequential_zk(self, ignite_version, nodes_to_kill, load_type):\n         \"\"\"\n         Test node failure scenario with ZooKeeperSpi not allowing nodes to fail in a row.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=nodes_to_kill,\n                                           load_type=ClusterLoad.construct_from(load_type), sequential_failure=False,\n-                                          with_zk=True, failure_detection_timeout=failure_detection_timeout)\n+                                          with_zk=True)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @version_if(lambda version: version != V_2_8_0)  # ignite-zookeeper package is broken in 2.8.0\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL],\n-            failure_detection_timeout=[FAILURE_TIMEOUT])\n-    def test_2_nodes_fail_sequential_zk(self, ignite_version, load_type, failure_detection_timeout):\n+    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_2_nodes_fail_sequential_zk(self, ignite_version, load_type):\n         \"\"\"\n         Test node failure scenario with ZooKeeperSpi not allowing to fail nodes in a row.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=2,\n                                           load_type=ClusterLoad.construct_from(load_type), sequential_failure=True,\n-                                          with_zk=True, failure_detection_timeout=failure_detection_timeout)\n+                                          with_zk=True)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     def _perform_node_fail_scenario(self, test_config):\n-        max_containers = len(self.test_context.cluster)\n+        failure_detection_timeout = self._global_int(self.GLOBAL_DETECTION_TIMEOUT, self.DEFAULT_DETECTION_TIMEOUT)\n \n         # One node is required to detect the failure.\n-        assert max_containers >= 1 + test_config.nodes_to_kill + (\n-            DiscoveryTest.ZOOKEEPER_NODES if test_config.with_zk else 0) + (\n-                   0 if test_config.load_type == ClusterLoad.NONE else 1), \"Few required containers: \" + \\\n-                                                                           str(max_containers) + \". Check the params.\"\n+        assert len(self.test_context.cluster) >= 1 + test_config.nodes_to_kill + (\n+            self.ZOOKEEPER_NODES if test_config.with_zk else 0), \\\n+            f\"Few required containers: {len(self.test_context.cluster)}. Check the params.\"\n \n-        self.logger.info(\"Starting on \" + str(max_containers) + \" maximal containers.\")\n+        self.logger.info(\"Starting on \" + str(len(self.test_context.cluster)) + \" maximal containers.\")\n+        self.logger.info(f\"{self.GLOBAL_DETECTION_TIMEOUT}: {failure_detection_timeout}\")\n \n         results = {}\n \n         modules = ['zookeeper'] if test_config.with_zk else None\n \n         if test_config.with_zk:\n-            zk_quorum = start_zookeeper(self.test_context, DiscoveryTest.ZOOKEEPER_NODES, test_config)\n+            zk_quorum = start_zookeeper(self.test_context, self.ZOOKEEPER_NODES, failure_detection_timeout)\n \n             discovery_spi = from_zookeeper_cluster(zk_quorum)\n         else:\n             discovery_spi = TcpDiscoverySpi()\n \n+            if LATEST_2_7 < test_config.version < V_2_9_1:\n+                discovery_spi.so_linger = 0\n+\n         ignite_config = IgniteConfiguration(\n             version=test_config.version,\n             discovery_spi=discovery_spi,\n-            failure_detection_timeout=test_config.failure_detection_timeout,\n+            failure_detection_timeout=failure_detection_timeout,\n             caches=[CacheConfiguration(\n                 name='test-cache',\n                 backups=1,\n                 atomicity_mode='TRANSACTIONAL' if test_config.load_type == ClusterLoad.TRANSACTIONAL else 'ATOMIC'\n             )]\n         )\n \n+        jvm_opts_str = jvm_settings(gc_dump_path=os.path.join(IgniteService.PERSISTENT_ROOT, \"ignite_gc.log\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e219df0c24fd7a7d7fece5b3fd60baa7a326eb3"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI2NTg2Nw==", "bodyText": "any reason to call len(self.test_context.cluster) so much time?", "url": "https://github.com/apache/ignite/pull/8522#discussion_r542265867", "createdAt": "2020-12-14T10:15:19Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -88,99 +93,100 @@ def __init__(self, test_context):\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(nodes_to_kill=[1, 2], failure_detection_timeout=[FAILURE_TIMEOUT],\n-            load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n-    def test_nodes_fail_not_sequential_tcp(self, ignite_version, nodes_to_kill, load_type, failure_detection_timeout):\n+    @matrix(nodes_to_kill=[1, 2], load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_nodes_fail_not_sequential_tcp(self, ignite_version, nodes_to_kill, load_type):\n         \"\"\"\n         Test nodes failure scenario with TcpDiscoverySpi not allowing nodes to fail in a row.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=nodes_to_kill,\n-                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=False,\n-                                          failure_detection_timeout=failure_detection_timeout)\n+                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=False)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL],\n-            failure_detection_timeout=[FAILURE_TIMEOUT])\n-    def test_2_nodes_fail_sequential_tcp(self, ignite_version, load_type, failure_detection_timeout):\n+    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_2_nodes_fail_sequential_tcp(self, ignite_version, load_type):\n         \"\"\"\n         Test 2 nodes sequential failure scenario with TcpDiscoverySpi.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=2,\n-                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=True,\n-                                          failure_detection_timeout=failure_detection_timeout)\n+                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=True)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @version_if(lambda version: version != V_2_8_0)  # ignite-zookeeper package is broken in 2.8.0\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(nodes_to_kill=[1, 2], failure_detection_timeout=[FAILURE_TIMEOUT],\n-            load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n-    def test_nodes_fail_not_sequential_zk(self, ignite_version, nodes_to_kill, load_type, failure_detection_timeout):\n+    @matrix(nodes_to_kill=[1, 2], load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_nodes_fail_not_sequential_zk(self, ignite_version, nodes_to_kill, load_type):\n         \"\"\"\n         Test node failure scenario with ZooKeeperSpi not allowing nodes to fail in a row.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=nodes_to_kill,\n                                           load_type=ClusterLoad.construct_from(load_type), sequential_failure=False,\n-                                          with_zk=True, failure_detection_timeout=failure_detection_timeout)\n+                                          with_zk=True)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @version_if(lambda version: version != V_2_8_0)  # ignite-zookeeper package is broken in 2.8.0\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL],\n-            failure_detection_timeout=[FAILURE_TIMEOUT])\n-    def test_2_nodes_fail_sequential_zk(self, ignite_version, load_type, failure_detection_timeout):\n+    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_2_nodes_fail_sequential_zk(self, ignite_version, load_type):\n         \"\"\"\n         Test node failure scenario with ZooKeeperSpi not allowing to fail nodes in a row.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=2,\n                                           load_type=ClusterLoad.construct_from(load_type), sequential_failure=True,\n-                                          with_zk=True, failure_detection_timeout=failure_detection_timeout)\n+                                          with_zk=True)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     def _perform_node_fail_scenario(self, test_config):\n-        max_containers = len(self.test_context.cluster)\n+        failure_detection_timeout = self._global_int(self.GLOBAL_DETECTION_TIMEOUT, self.DEFAULT_DETECTION_TIMEOUT)\n \n         # One node is required to detect the failure.\n-        assert max_containers >= 1 + test_config.nodes_to_kill + (\n-            DiscoveryTest.ZOOKEEPER_NODES if test_config.with_zk else 0) + (\n-                   0 if test_config.load_type == ClusterLoad.NONE else 1), \"Few required containers: \" + \\\n-                                                                           str(max_containers) + \". Check the params.\"\n+        assert len(self.test_context.cluster) >= 1 + test_config.nodes_to_kill + (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e219df0c24fd7a7d7fece5b3fd60baa7a326eb3"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI2NjY4Mw==", "bodyText": "let's assert it 0 at 2.9.1", "url": "https://github.com/apache/ignite/pull/8522#discussion_r542266683", "createdAt": "2020-12-14T10:16:27Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -88,99 +93,100 @@ def __init__(self, test_context):\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(nodes_to_kill=[1, 2], failure_detection_timeout=[FAILURE_TIMEOUT],\n-            load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n-    def test_nodes_fail_not_sequential_tcp(self, ignite_version, nodes_to_kill, load_type, failure_detection_timeout):\n+    @matrix(nodes_to_kill=[1, 2], load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_nodes_fail_not_sequential_tcp(self, ignite_version, nodes_to_kill, load_type):\n         \"\"\"\n         Test nodes failure scenario with TcpDiscoverySpi not allowing nodes to fail in a row.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=nodes_to_kill,\n-                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=False,\n-                                          failure_detection_timeout=failure_detection_timeout)\n+                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=False)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL],\n-            failure_detection_timeout=[FAILURE_TIMEOUT])\n-    def test_2_nodes_fail_sequential_tcp(self, ignite_version, load_type, failure_detection_timeout):\n+    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_2_nodes_fail_sequential_tcp(self, ignite_version, load_type):\n         \"\"\"\n         Test 2 nodes sequential failure scenario with TcpDiscoverySpi.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=2,\n-                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=True,\n-                                          failure_detection_timeout=failure_detection_timeout)\n+                                          load_type=ClusterLoad.construct_from(load_type), sequential_failure=True)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @version_if(lambda version: version != V_2_8_0)  # ignite-zookeeper package is broken in 2.8.0\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(nodes_to_kill=[1, 2], failure_detection_timeout=[FAILURE_TIMEOUT],\n-            load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n-    def test_nodes_fail_not_sequential_zk(self, ignite_version, nodes_to_kill, load_type, failure_detection_timeout):\n+    @matrix(nodes_to_kill=[1, 2], load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_nodes_fail_not_sequential_zk(self, ignite_version, nodes_to_kill, load_type):\n         \"\"\"\n         Test node failure scenario with ZooKeeperSpi not allowing nodes to fail in a row.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=nodes_to_kill,\n                                           load_type=ClusterLoad.construct_from(load_type), sequential_failure=False,\n-                                          with_zk=True, failure_detection_timeout=failure_detection_timeout)\n+                                          with_zk=True)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     @cluster(num_nodes=MAX_CONTAINERS)\n     @version_if(lambda version: version != V_2_8_0)  # ignite-zookeeper package is broken in 2.8.0\n     @ignite_versions(str(DEV_BRANCH), str(LATEST))\n-    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL],\n-            failure_detection_timeout=[FAILURE_TIMEOUT])\n-    def test_2_nodes_fail_sequential_zk(self, ignite_version, load_type, failure_detection_timeout):\n+    @matrix(load_type=[ClusterLoad.NONE, ClusterLoad.ATOMIC, ClusterLoad.TRANSACTIONAL])\n+    def test_2_nodes_fail_sequential_zk(self, ignite_version, load_type):\n         \"\"\"\n         Test node failure scenario with ZooKeeperSpi not allowing to fail nodes in a row.\n         \"\"\"\n         test_config = DiscoveryTestConfig(version=IgniteVersion(ignite_version), nodes_to_kill=2,\n                                           load_type=ClusterLoad.construct_from(load_type), sequential_failure=True,\n-                                          with_zk=True, failure_detection_timeout=failure_detection_timeout)\n+                                          with_zk=True)\n \n         return self._perform_node_fail_scenario(test_config)\n \n     def _perform_node_fail_scenario(self, test_config):\n-        max_containers = len(self.test_context.cluster)\n+        failure_detection_timeout = self._global_int(self.GLOBAL_DETECTION_TIMEOUT, self.DEFAULT_DETECTION_TIMEOUT)\n \n         # One node is required to detect the failure.\n-        assert max_containers >= 1 + test_config.nodes_to_kill + (\n-            DiscoveryTest.ZOOKEEPER_NODES if test_config.with_zk else 0) + (\n-                   0 if test_config.load_type == ClusterLoad.NONE else 1), \"Few required containers: \" + \\\n-                                                                           str(max_containers) + \". Check the params.\"\n+        assert len(self.test_context.cluster) >= 1 + test_config.nodes_to_kill + (\n+            self.ZOOKEEPER_NODES if test_config.with_zk else 0), \\\n+            f\"Few required containers: {len(self.test_context.cluster)}. Check the params.\"\n \n-        self.logger.info(\"Starting on \" + str(max_containers) + \" maximal containers.\")\n+        self.logger.info(\"Starting on \" + str(len(self.test_context.cluster)) + \" maximal containers.\")\n+        self.logger.info(f\"{self.GLOBAL_DETECTION_TIMEOUT}: {failure_detection_timeout}\")\n \n         results = {}\n \n         modules = ['zookeeper'] if test_config.with_zk else None\n \n         if test_config.with_zk:\n-            zk_quorum = start_zookeeper(self.test_context, DiscoveryTest.ZOOKEEPER_NODES, test_config)\n+            zk_quorum = start_zookeeper(self.test_context, self.ZOOKEEPER_NODES, failure_detection_timeout)\n \n             discovery_spi = from_zookeeper_cluster(zk_quorum)\n         else:\n             discovery_spi = TcpDiscoverySpi()\n \n+            if LATEST_2_7 < test_config.version < V_2_9_1:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e219df0c24fd7a7d7fece5b3fd60baa7a326eb3"}, "originalPosition": 143}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09b2d7ca3b5605310ceea81e22a25cfdfa4b4b66", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/09b2d7ca3b5605310ceea81e22a25cfdfa4b4b66", "committedDate": "2020-12-14T11:22:21Z", "message": "Merge remote-tracking branch 'origin/research-small-timeouts' into research-small-timeouts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b5dc7917b8ffebf70bb220baa3366814024cafd", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/8b5dc7917b8ffebf70bb220baa3366814024cafd", "committedDate": "2020-12-25T10:03:09Z", "message": "reseaarch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01b91186890eb13e94d3583eade87741da6b9c88", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/01b91186890eb13e94d3583eade87741da6b9c88", "committedDate": "2020-12-25T11:20:15Z", "message": "Merge branch 'ignite-ducktape' into research-small-timeouts\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/services/zk/templates/zookeeper.properties.j2\n#\tmodules/ducktests/tests/ignitetest/services/zk/zookeeper.py\n#\tmodules/ducktests/tests/ignitetest/tests/discovery_test.py"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13823917a5310ae1ce08a9d98ee88c082e60f414", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/13823917a5310ae1ce08a9d98ee88c082e60f414", "committedDate": "2020-12-25T19:31:37Z", "message": "in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f23627ef0153373166d2295db24782f1fe5a5506", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/f23627ef0153373166d2295db24782f1fe5a5506", "committedDate": "2020-12-25T19:36:45Z", "message": "Merge remote-tracking branch 'origin/research-small-timeouts' into research-small-timeouts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0399e333524ad7d946a9f56de934367f61f9cd74", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/0399e333524ad7d946a9f56de934367f61f9cd74", "committedDate": "2020-12-25T19:54:22Z", "message": "Merge remote-tracking branch 'origin/research-small-timeouts' into research-small-timeouts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "176a10b9f16224cbe3adeff6e067959da962405f", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/176a10b9f16224cbe3adeff6e067959da962405f", "committedDate": "2020-12-28T16:35:19Z", "message": "+jvm_opts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e297b363ae935e2f95250c9d307d16b54af83dae", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e297b363ae935e2f95250c9d307d16b54af83dae", "committedDate": "2020-12-28T18:07:03Z", "message": "+jvm_opts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e199b21df416688f0f98882f933bfd93ff74cd17", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e199b21df416688f0f98882f933bfd93ff74cd17", "committedDate": "2020-12-28T18:49:53Z", "message": "codestyle fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08ce5e4934b987feda253fc0dc222dfae01e2cfc", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/08ce5e4934b987feda253fc0dc222dfae01e2cfc", "committedDate": "2020-12-28T19:16:44Z", "message": "fix \"too many local variables\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "378d8a8ccf2aaefcc5494cefca07595bf9bbd15e", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/378d8a8ccf2aaefcc5494cefca07595bf9bbd15e", "committedDate": "2020-12-29T10:01:24Z", "message": "Merge branch 'ignite-ducktape' into research-small-timeouts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a39cc6d46b1e715c1d58cb79b3f616f7e18d92a", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/6a39cc6d46b1e715c1d58cb79b3f616f7e18d92a", "committedDate": "2020-12-29T12:04:05Z", "message": "log count fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "905758345481a9d393be3b5b97020f29d05e2d4b", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/905758345481a9d393be3b5b97020f29d05e2d4b", "committedDate": "2020-12-29T14:05:42Z", "message": "codestyle fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12ae2f5012545c91c4b8eb3fa315a2f28c05533a", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/12ae2f5012545c91c4b8eb3fa315a2f28c05533a", "committedDate": "2021-01-13T13:43:00Z", "message": "split on other tickets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e96cc1140ae916f42953b7c64fb5f34f251ed019", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/e96cc1140ae916f42953b7c64fb5f34f251ed019", "committedDate": "2021-01-15T13:06:55Z", "message": "+soLinger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8921426fecad8baeaee528a398a2beec2730b243", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/8921426fecad8baeaee528a398a2beec2730b243", "committedDate": "2021-01-19T14:45:59Z", "message": "try fail later on connRecoveryTimeout == 0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8064d91b8245c8be6321d9b7c55ed0f081d10e9c", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/8064d91b8245c8be6321d9b7c55ed0f081d10e9c", "committedDate": "2021-01-19T14:47:13Z", "message": "Revert \"try fail later on connRecoveryTimeout == 0\"\n\nThis reverts commit 8921426f"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e5f42ac1bf676483e4a7a05c252cc5db0f81ce9", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/3e5f42ac1bf676483e4a7a05c252cc5db0f81ce9", "committedDate": "2021-01-22T13:56:07Z", "message": "Merge branch 'ignite-ducktape' into research-small-timeouts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "132b89640241042423e1107852d9b6656ef23b78", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/132b89640241042423e1107852d9b6656ef23b78", "committedDate": "2021-01-25T11:52:20Z", "message": "Merge remote-tracking branch 'upstream/ignite-ducktape' into ignite-ducktape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12a27cca392647a987b841c70ce5170de53d1446", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/12a27cca392647a987b841c70ce5170de53d1446", "committedDate": "2021-01-27T08:49:17Z", "message": "Merge remote-tracking branch 'upstream/ignite-ducktape' into ignite-ducktape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c9c97ecb029f0615f39a794ffb06469de218ba8", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/6c9c97ecb029f0615f39a794ffb06469de218ba8", "committedDate": "2021-02-02T10:19:54Z", "message": "Merge remote-tracking branch 'upstream/ignite-ducktape' into ignite-ducktape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28b460642889956f13bd10db5e839becb2a6c82d", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/28b460642889956f13bd10db5e839becb2a6c82d", "committedDate": "2021-02-02T13:27:11Z", "message": "Merge branch 'ignite-ducktape' into GNITE-13835\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/tests/discovery_test.py"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8890f481915857e618235fdb020615887e0458e", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/c8890f481915857e618235fdb020615887e0458e", "committedDate": "2021-02-02T13:41:28Z", "message": "merged ducktape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db0d455830111c5196c847aeb32e3fde315e9568", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/db0d455830111c5196c847aeb32e3fde315e9568", "committedDate": "2021-02-02T14:07:02Z", "message": "tox fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg0MDk1NTUx", "url": "https://github.com/apache/ignite/pull/8522#pullrequestreview-584095551", "createdAt": "2021-02-05T07:57:50Z", "commit": {"oid": "db0d455830111c5196c847aeb32e3fde315e9568"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNVQwNzo1Nzo1MFrOIgVvBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNVQwODozOTo0OFrOIgXFIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDc4MTQ0NQ==", "bodyText": "Why located not at IgniteAwareService?", "url": "https://github.com/apache/ignite/pull/8522#discussion_r570781445", "createdAt": "2021-02-05T07:57:50Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/services/ignite.py", "diffHunk": "@@ -90,3 +91,19 @@ def get_event_time(service, log_node, log_pattern, from_the_beginning=True, time\n \n     return datetime.strptime(re.match(\"^\\\\[[^\\\\[]+\\\\]\", stdout.read().decode(\"utf-8\")).group(),\n                              \"[%Y-%m-%d %H:%M:%S,%f]\")\n+\n+\n+def exec_command(node, cmd):\n+    \"\"\"Executes the command passed on the given node and returns result as string.\"\"\"\n+    return str(node.account.ssh_client.exec_command(cmd)[1].read(), sys.getdefaultencoding())\n+\n+\n+def node_id(node):\n+    \"\"\"\n+    Returns node id from its log if started.\n+    This is a remote call. Reuse its results if possible.\n+    \"\"\"\n+    regexp = \"^>>> Local node \\\\[ID=([^,]+),.+$\"\n+    cmd = \"grep -E '%s' %s | sed -r 's/%s/\\\\1/'\" % (regexp, node.log_file, regexp)\n+\n+    return exec_command(node, cmd).strip().lower()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0d455830111c5196c847aeb32e3fde315e9568"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDgwMjIyMA==", "bodyText": "let's define what is 0.004 properly.", "url": "https://github.com/apache/ignite/pull/8522#discussion_r570802220", "createdAt": "2021-02-05T08:37:35Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/tests/discovery_test.py", "diffHunk": "@@ -213,36 +215,37 @@ def _perform_node_fail_scenario(self, test_config):\n                       \"targetNodes\": tran_nodes,\n                       \"transactional\": bool(tran_nodes)}\n \n-            start_load_app(self.test_context, ignite_config=load_config, params=params, modules=modules)\n+            start_load_app(self.test_context, load_config, params, modules)\n \n+        # Minimal detection timeout is failure_detection_timeout * 2. Let's more to capture also 'bad' results.\n         results.update(self._simulate_and_detect_failure(servers, failed_nodes,\n-                                                         test_config.failure_detection_timeout * 4,\n+                                                         0.004 * ignite_config.failure_detection_timeout,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0d455830111c5196c847aeb32e3fde315e9568"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDgwMzQ5MA==", "bodyText": "any reason to start a name with \"_\"?\n\"default=None\" or \"int = None\", please format the code.", "url": "https://github.com/apache/ignite/pull/8522#discussion_r570803490", "createdAt": "2021-02-05T08:39:48Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/tests/ignitetest/utils/ignite_test.py", "diffHunk": "@@ -55,3 +55,11 @@ def tearDown(self):\n         self.logger.debug(\"All services killed.\")\n \n         super().tearDown()\n+\n+    def _global_param(self, param_name, default=None):\n+        \"\"\"Reads global parameter passed to the test suite.\"\"\"\n+        return self.test_context.globals.get(param_name, default)\n+\n+    def _global_int(self, param_name, default: int = None):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0d455830111c5196c847aeb32e3fde315e9568"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bec4e407103940543d964d3f41c088db22327ec", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/5bec4e407103940543d964d3f41c088db22327ec", "committedDate": "2021-02-05T09:11:48Z", "message": "naming fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0296bf275cec5c6e793b4ce6ba524be0d9c833b", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/f0296bf275cec5c6e793b4ce6ba524be0d9c833b", "committedDate": "2021-02-05T11:16:13Z", "message": "moved methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c866663fd7980f8b69ebcfc44f5b6ad062ff263", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/7c866663fd7980f8b69ebcfc44f5b6ad062ff263", "committedDate": "2021-02-05T11:19:21Z", "message": "Params fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52bc5506c82b1daf0fdf7d4f1d67238661b8c22b", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/52bc5506c82b1daf0fdf7d4f1d67238661b8c22b", "committedDate": "2021-02-05T11:21:37Z", "message": "Merge remote-tracking branch 'upstream/ignite-ducktape' into ignite-ducktape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31ad8413cae1c0d3e738365049aba79b8d7bbb42", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/31ad8413cae1c0d3e738365049aba79b8d7bbb42", "committedDate": "2021-02-05T15:19:33Z", "message": "Merge remote-tracking branch 'upstream/ignite-ducktape' into ignite-ducktape"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MjUxMjg4", "url": "https://github.com/apache/ignite/pull/8522#pullrequestreview-585251288", "createdAt": "2021-02-08T08:26:37Z", "commit": {"oid": "7c866663fd7980f8b69ebcfc44f5b6ad062ff263"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b0b10dd7d949490987a061fd2f41c04dab487af", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/8b0b10dd7d949490987a061fd2f41c04dab487af", "committedDate": "2021-02-08T09:44:52Z", "message": "Merge branch 'ignite-ducktape' into GNITE-13835\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/tests/discovery_test.py"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75c75c8cd3e6efdd8268c85e79d7016323f7be47", "author": {"user": {"login": "Vladsz83", "name": "Vladimir Steshin"}}, "url": "https://github.com/apache/ignite/commit/75c75c8cd3e6efdd8268c85e79d7016323f7be47", "committedDate": "2021-02-08T09:49:34Z", "message": "Merge 'master'"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3024, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}