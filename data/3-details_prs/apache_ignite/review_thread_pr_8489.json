{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MzE4NjY2", "number": 8489, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOToxMDo0OFrOE_BgcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yOFQxMDowMjoyMVrOGPkdyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTIwNDMyOnYy", "diffSide": "RIGHT", "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostRegressionModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOToxMDo0OFrOH8fbvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODo1MDo1M1rOH_GxyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5MTYxNA==", "bodyText": "Remove blank line", "url": "https://github.com/apache/ignite/pull/8489#discussion_r533191614", "createdAt": "2020-12-01T09:10:48Z", "author": {"login": "zaleslaw"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostRegressionModel.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.Model;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * CatboostRegressionModel imported and wrapped to be compatible with Apache Ignite infrastructure.\n+ */\n+public class CatboostRegressionModel implements Model<NamedVector, Double> {\n+  /** Logger. */\n+  private static final Logger logger = LoggerFactory.getLogger(CatboostRegressionModel.class);\n+\n+  /** Catboost model. */\n+  private final CatBoostModel model;\n+\n+  /**\n+   * Constructs a new instance of Catboost model wrapper.\n+   *\n+   * @param model Catboost Model\n+   */\n+  public CatboostRegressionModel(CatBoostModel model) {\n+    this.model = model;\n+  }\n+\n+  /** {@inheritDoc} */\n+  @Override public Double predict(NamedVector input) {\n+    float[] floatInput = new float[input.size()];\n+    int index = 0;\n+    for (String key: model.getFeatureNames()) {\n+      floatInput[index] = (float) input.get(key);\n+      index++;\n+    }\n+\n+    try {\n+      return model.predict(floatInput, model.getFeatureNames()).get(0, 0);\n+    } catch (CatBoostError e) {\n+      throw new RuntimeException(e.getMessage());\n+    }\n+  }\n+\n+  /** {@inheritDoc} */\n+  @Override public void close() {\n+    try {\n+      model.close();\n+    } catch (CatBoostError e) {\n+      logger.error(e.getMessage());\n+    }\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064eff4fbb64cb5acde0cf1a85777dc93983490d"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkzMzM4NQ==", "bodyText": "Fixed", "url": "https://github.com/apache/ignite/pull/8489#discussion_r535933385", "createdAt": "2020-12-04T08:50:53Z", "author": {"login": "mrk-andreev"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostRegressionModel.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.Model;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * CatboostRegressionModel imported and wrapped to be compatible with Apache Ignite infrastructure.\n+ */\n+public class CatboostRegressionModel implements Model<NamedVector, Double> {\n+  /** Logger. */\n+  private static final Logger logger = LoggerFactory.getLogger(CatboostRegressionModel.class);\n+\n+  /** Catboost model. */\n+  private final CatBoostModel model;\n+\n+  /**\n+   * Constructs a new instance of Catboost model wrapper.\n+   *\n+   * @param model Catboost Model\n+   */\n+  public CatboostRegressionModel(CatBoostModel model) {\n+    this.model = model;\n+  }\n+\n+  /** {@inheritDoc} */\n+  @Override public Double predict(NamedVector input) {\n+    float[] floatInput = new float[input.size()];\n+    int index = 0;\n+    for (String key: model.getFeatureNames()) {\n+      floatInput[index] = (float) input.get(key);\n+      index++;\n+    }\n+\n+    try {\n+      return model.predict(floatInput, model.getFeatureNames()).get(0, 0);\n+    } catch (CatBoostError e) {\n+      throw new RuntimeException(e.getMessage());\n+    }\n+  }\n+\n+  /** {@inheritDoc} */\n+  @Override public void close() {\n+    try {\n+      model.close();\n+    } catch (CatBoostError e) {\n+      logger.error(e.getMessage());\n+    }\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5MTYxNA=="}, "originalCommit": {"oid": "064eff4fbb64cb5acde0cf1a85777dc93983490d"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTIwODMxOnYy", "diffSide": "RIGHT", "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOToxMToxOFrOH8feLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODoyOTowN1rOH_F_Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5MjIzOQ==", "bodyText": "Add more comments about CatBoost model, maybe copy some javadaoc from CatBoost", "url": "https://github.com/apache/ignite/pull/8489#discussion_r533192239", "createdAt": "2020-12-01T09:11:18Z", "author": {"login": "zaleslaw"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModel.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.Model;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * CatboostClassificationModel imported and wrapped to be compatible with Apache Ignite infrastructure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064eff4fbb64cb5acde0cf1a85777dc93983490d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkyMDQzNQ==", "bodyText": "Original javadoc is not so useful:\n\nCatBoost model, supports basic model application.", "url": "https://github.com/apache/ignite/pull/8489#discussion_r535920435", "createdAt": "2020-12-04T08:29:07Z", "author": {"login": "mrk-andreev"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModel.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.Model;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * CatboostClassificationModel imported and wrapped to be compatible with Apache Ignite infrastructure.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5MjIzOQ=="}, "originalCommit": {"oid": "064eff4fbb64cb5acde0cf1a85777dc93983490d"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTIxOTgyOnYy", "diffSide": "RIGHT", "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOToxMjo1NVrOH8flvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODo1MToxN1rOH_GyrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5NDE3NQ==", "bodyText": "Looks like the use different code formatting\nCould you please check https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines especially\nWhitespaces and empty lines chapter\nSource code line should not be longer then 120 characters (to be visible on most conventional monitors). 4 space characters should be used for tabulation and indentation", "url": "https://github.com/apache/ignite/pull/8489#discussion_r533194175", "createdAt": "2020-12-01T09:12:55Z", "author": {"login": "zaleslaw"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModel.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.Model;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * CatboostClassificationModel imported and wrapped to be compatible with Apache Ignite infrastructure.\n+ */\n+public class CatboostClassificationModel implements Model<NamedVector, Double> {\n+  /** Logger. */\n+  private static final Logger logger = LoggerFactory.getLogger(CatboostClassificationModel.class);\n+\n+  /** Catboost model. */\n+  private final CatBoostModel model;\n+\n+  /**\n+   * Constructs a new instance of Catboost model wrapper.\n+   *\n+   * @param model Catboost Model\n+   */\n+  public CatboostClassificationModel(CatBoostModel model) {\n+    this.model = model;\n+  }\n+\n+  /** {@inheritDoc} */\n+  @Override public Double predict(NamedVector input) {\n+    float[] floatInput = new float[input.size()];\n+    int index = 0;\n+    for (String key: model.getFeatureNames()) {\n+      floatInput[index] = (float) input.get(key);\n+      index++;\n+    }\n+\n+    try {\n+      double predict = model.predict(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064eff4fbb64cb5acde0cf1a85777dc93983490d"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkzMzYxMg==", "bodyText": "Fixed in all committed files", "url": "https://github.com/apache/ignite/pull/8489#discussion_r535933612", "createdAt": "2020-12-04T08:51:17Z", "author": {"login": "mrk-andreev"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModel.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.Model;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * CatboostClassificationModel imported and wrapped to be compatible with Apache Ignite infrastructure.\n+ */\n+public class CatboostClassificationModel implements Model<NamedVector, Double> {\n+  /** Logger. */\n+  private static final Logger logger = LoggerFactory.getLogger(CatboostClassificationModel.class);\n+\n+  /** Catboost model. */\n+  private final CatBoostModel model;\n+\n+  /**\n+   * Constructs a new instance of Catboost model wrapper.\n+   *\n+   * @param model Catboost Model\n+   */\n+  public CatboostClassificationModel(CatBoostModel model) {\n+    this.model = model;\n+  }\n+\n+  /** {@inheritDoc} */\n+  @Override public Double predict(NamedVector input) {\n+    float[] floatInput = new float[input.size()];\n+    int index = 0;\n+    for (String key: model.getFeatureNames()) {\n+      floatInput[index] = (float) input.get(key);\n+      index++;\n+    }\n+\n+    try {\n+      double predict = model.predict(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5NDE3NQ=="}, "originalCommit": {"oid": "064eff4fbb64cb5acde0cf1a85777dc93983490d"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTIyMzYwOnYy", "diffSide": "RIGHT", "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModelParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOToxMzoyOVrOH8foWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODo1NDowMlrOH_G50g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5NDg0Mg==", "bodyText": "Could you please explain, why did you use NamedVector with CatBoost models", "url": "https://github.com/apache/ignite/pull/8489#discussion_r533194842", "createdAt": "2020-12-01T09:13:29Z", "author": {"login": "zaleslaw"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModelParser.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.parser.ModelParser;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+\n+/**\n+ * Catboost Classification model parser.\n+ */\n+public class CatboostClassificationModelParser implements\n+    ModelParser<NamedVector, Double, CatboostClassificationModel> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064eff4fbb64cb5acde0cf1a85777dc93983490d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkzNTQ0Mg==", "bodyText": "Catboost require right order of features. So I can fetch order model.getFeatureNames() and fill input vector floatInput using expected order.\nfloat[] floatInput = new float[input.size()];\nint index = 0;\nfor (String key: model.getFeatureNames()) {\n    floatInput[index] = (float) input.get(key);\n    index++;\n}\n\nreturn model.predict(floatInput, model.getFeatureNames()).get(0, 0);", "url": "https://github.com/apache/ignite/pull/8489#discussion_r535935442", "createdAt": "2020-12-04T08:54:02Z", "author": {"login": "mrk-andreev"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModelParser.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.parser.ModelParser;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+\n+/**\n+ * Catboost Classification model parser.\n+ */\n+public class CatboostClassificationModelParser implements\n+    ModelParser<NamedVector, Double, CatboostClassificationModel> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5NDg0Mg=="}, "originalCommit": {"oid": "064eff4fbb64cb5acde0cf1a85777dc93983490d"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTIyODkxOnYy", "diffSide": "RIGHT", "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModelParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOToxNDoxMFrOH8frwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODo1MTo0NVrOH_G0Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5NTcxNA==", "bodyText": "Rewrite the RuntimeException message to more clear (maybe with tips, what's going on)", "url": "https://github.com/apache/ignite/pull/8489#discussion_r533195714", "createdAt": "2020-12-01T09:14:10Z", "author": {"login": "zaleslaw"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModelParser.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.parser.ModelParser;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+\n+/**\n+ * Catboost Classification model parser.\n+ */\n+public class CatboostClassificationModelParser implements\n+    ModelParser<NamedVector, Double, CatboostClassificationModel> {\n+  /** */\n+  private static final long serialVersionUID = -8425510352746936163L;\n+\n+  /** {@inheritDoc} */\n+  @Override public CatboostClassificationModel parse(byte[] mdl) {\n+    try (InputStream inputStream = new ByteArrayInputStream(mdl)) {\n+      return new CatboostClassificationModel(CatBoostModel.loadModel(inputStream));\n+    } catch (IOException | CatBoostError e) {\n+      throw new RuntimeException(\"Failed to parse model\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064eff4fbb64cb5acde0cf1a85777dc93983490d"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkzMzk1NQ==", "bodyText": "Add original exception message to RuntimeException message", "url": "https://github.com/apache/ignite/pull/8489#discussion_r535933955", "createdAt": "2020-12-04T08:51:45Z", "author": {"login": "mrk-andreev"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModelParser.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.parser.ModelParser;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+\n+/**\n+ * Catboost Classification model parser.\n+ */\n+public class CatboostClassificationModelParser implements\n+    ModelParser<NamedVector, Double, CatboostClassificationModel> {\n+  /** */\n+  private static final long serialVersionUID = -8425510352746936163L;\n+\n+  /** {@inheritDoc} */\n+  @Override public CatboostClassificationModel parse(byte[] mdl) {\n+    try (InputStream inputStream = new ByteArrayInputStream(mdl)) {\n+      return new CatboostClassificationModel(CatBoostModel.loadModel(inputStream));\n+    } catch (IOException | CatBoostError e) {\n+      throw new RuntimeException(\"Failed to parse model\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5NTcxNA=="}, "originalCommit": {"oid": "064eff4fbb64cb5acde0cf1a85777dc93983490d"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDE4OTc5Mjc1OnYy", "diffSide": "RIGHT", "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModel.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yOFQxMDowMjoyMVrOJ1F5EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yOVQxMDoxMjozN1rOJ14PBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTY1MDgzMw==", "bodyText": "Hi @mrk-andreev , second parameter in predict for catboost model should be an array of  categorical features? Could you please help with, how can we run for a model containing categorical features?", "url": "https://github.com/apache/ignite/pull/8489#discussion_r659650833", "createdAt": "2021-06-28T10:02:21Z", "author": {"login": "saurzcode"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModel.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.Model;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * CatboostClassificationModel imported and wrapped to be compatible with Apache Ignite infrastructure.\n+ */\n+public class CatboostClassificationModel implements Model<NamedVector, Double> {\n+    /** Logger. */\n+    private static final Logger logger = LoggerFactory.getLogger(CatboostClassificationModel.class);\n+\n+    /** Catboost model. */\n+    private final CatBoostModel model;\n+\n+    /**\n+     * Constructs a new instance of Catboost model wrapper.\n+     *\n+     * @param model Catboost Model\n+     */\n+    public CatboostClassificationModel(CatBoostModel model) {\n+        this.model = model;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public Double predict(NamedVector input) {\n+        float[] floatInput = new float[input.size()];\n+        int index = 0;\n+        for (String key: model.getFeatureNames()) {\n+            floatInput[index] = (float) input.get(key);\n+            index++;\n+        }\n+\n+        try {\n+            double predict = model.predict(floatInput, model.getFeatureNames())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5dad685606bcb4b4c5713184a4c291daeebcc0e"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDQ3MjgxNg==", "bodyText": "Hi, @saurzcode . I need more time for investigation.", "url": "https://github.com/apache/ignite/pull/8489#discussion_r660472816", "createdAt": "2021-06-29T10:08:39Z", "author": {"login": "mrk-andreev"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModel.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.Model;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * CatboostClassificationModel imported and wrapped to be compatible with Apache Ignite infrastructure.\n+ */\n+public class CatboostClassificationModel implements Model<NamedVector, Double> {\n+    /** Logger. */\n+    private static final Logger logger = LoggerFactory.getLogger(CatboostClassificationModel.class);\n+\n+    /** Catboost model. */\n+    private final CatBoostModel model;\n+\n+    /**\n+     * Constructs a new instance of Catboost model wrapper.\n+     *\n+     * @param model Catboost Model\n+     */\n+    public CatboostClassificationModel(CatBoostModel model) {\n+        this.model = model;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public Double predict(NamedVector input) {\n+        float[] floatInput = new float[input.size()];\n+        int index = 0;\n+        for (String key: model.getFeatureNames()) {\n+            floatInput[index] = (float) input.get(key);\n+            index++;\n+        }\n+\n+        try {\n+            double predict = model.predict(floatInput, model.getFeatureNames())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTY1MDgzMw=="}, "originalCommit": {"oid": "b5dad685606bcb4b4c5713184a4c291daeebcc0e"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDQ3NTY1NA==", "bodyText": "Sure ! I can make a pull request to handle those, I have some idea on it, let me know if you find otherwise any other way to handle in existing i can use that.", "url": "https://github.com/apache/ignite/pull/8489#discussion_r660475654", "createdAt": "2021-06-29T10:12:37Z", "author": {"login": "saurzcode"}, "path": "modules/ml/catboost-model-parser/src/main/java/org/apache/ignite/ml/catboost/CatboostClassificationModel.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.ml.catboost;\n+\n+import ai.catboost.CatBoostError;\n+import ai.catboost.CatBoostModel;\n+import org.apache.ignite.ml.inference.Model;\n+import org.apache.ignite.ml.math.primitives.vector.NamedVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * CatboostClassificationModel imported and wrapped to be compatible with Apache Ignite infrastructure.\n+ */\n+public class CatboostClassificationModel implements Model<NamedVector, Double> {\n+    /** Logger. */\n+    private static final Logger logger = LoggerFactory.getLogger(CatboostClassificationModel.class);\n+\n+    /** Catboost model. */\n+    private final CatBoostModel model;\n+\n+    /**\n+     * Constructs a new instance of Catboost model wrapper.\n+     *\n+     * @param model Catboost Model\n+     */\n+    public CatboostClassificationModel(CatBoostModel model) {\n+        this.model = model;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public Double predict(NamedVector input) {\n+        float[] floatInput = new float[input.size()];\n+        int index = 0;\n+        for (String key: model.getFeatureNames()) {\n+            floatInput[index] = (float) input.get(key);\n+            index++;\n+        }\n+\n+        try {\n+            double predict = model.predict(floatInput, model.getFeatureNames())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTY1MDgzMw=="}, "originalCommit": {"oid": "b5dad685606bcb4b4c5713184a4c291daeebcc0e"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2622, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}