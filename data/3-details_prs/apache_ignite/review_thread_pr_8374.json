{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2Njc2NTA4", "number": 8374, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzoxOToyN1rOEvxa5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzoyODozMlrOEvxvfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTI4MjI4OnYy", "diffSide": "RIGHT", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzoxOToyN1rOHk7_ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMTowMjozNFrOHlmQ-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5MzczMQ==", "bodyText": "Calendar? ORLY? Have you considered LocalDateTime?", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508493731", "createdAt": "2020-10-20T13:19:27Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -88,22 +97,37 @@\n             }\n \n             if (record) {\n-                for (int i = 0; i < max.length; i++) {\n-                    if (max[i] <= time) {\n-                        System.arraycopy(max, i, max, i + 1, max.length - i - 1);\n+                for (int i = 0; i < latencies.length; i++) {\n+                    if (latencies[i] <= latency) {\n+                        System.arraycopy(latencies, i, latencies, i + 1, latencies.length - i - 1);\n+                        System.arraycopy(opStartTimes, i, opStartTimes, i + 1, opStartTimes.length - i - 1);\n \n-                        max[i] = time;\n+                        latencies[i] = latency;\n+                        opStartTimes[i] = start;\n \n                         break;\n                     }\n                 }\n             }\n \n             if (cnt % 1000 == 0)\n-                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(max) + \"]\");\n+                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(latencies) + \"]\");\n+        }\n+\n+        List<String> result = new ArrayList<>();\n+        Calendar calendar = Calendar.getInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2674ca9b1f827c91b9d2e5af5efde621a412f131"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NjI5OQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8374#discussion_r509186299", "createdAt": "2020-10-21T11:02:34Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -88,22 +97,37 @@\n             }\n \n             if (record) {\n-                for (int i = 0; i < max.length; i++) {\n-                    if (max[i] <= time) {\n-                        System.arraycopy(max, i, max, i + 1, max.length - i - 1);\n+                for (int i = 0; i < latencies.length; i++) {\n+                    if (latencies[i] <= latency) {\n+                        System.arraycopy(latencies, i, latencies, i + 1, latencies.length - i - 1);\n+                        System.arraycopy(opStartTimes, i, opStartTimes, i + 1, opStartTimes.length - i - 1);\n \n-                        max[i] = time;\n+                        latencies[i] = latency;\n+                        opStartTimes[i] = start;\n \n                         break;\n                     }\n                 }\n             }\n \n             if (cnt % 1000 == 0)\n-                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(max) + \"]\");\n+                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(latencies) + \"]\");\n+        }\n+\n+        List<String> result = new ArrayList<>();\n+        Calendar calendar = Calendar.getInstance();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5MzczMQ=="}, "originalCommit": {"oid": "2674ca9b1f827c91b9d2e5af5efde621a412f131"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTI5NjYwOnYy", "diffSide": "RIGHT", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzoyMjowMlrOHk8Igg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMTowMTo0OFrOHlmPTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NjAwMg==", "bodyText": "Eeww, what about LocalDateTimeFormatter?", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508496002", "createdAt": "2020-10-20T13:22:02Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -88,22 +97,37 @@\n             }\n \n             if (record) {\n-                for (int i = 0; i < max.length; i++) {\n-                    if (max[i] <= time) {\n-                        System.arraycopy(max, i, max, i + 1, max.length - i - 1);\n+                for (int i = 0; i < latencies.length; i++) {\n+                    if (latencies[i] <= latency) {\n+                        System.arraycopy(latencies, i, latencies, i + 1, latencies.length - i - 1);\n+                        System.arraycopy(opStartTimes, i, opStartTimes, i + 1, opStartTimes.length - i - 1);\n \n-                        max[i] = time;\n+                        latencies[i] = latency;\n+                        opStartTimes[i] = start;\n \n                         break;\n                     }\n                 }\n             }\n \n             if (cnt % 1000 == 0)\n-                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(max) + \"]\");\n+                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(latencies) + \"]\");\n+        }\n+\n+        List<String> result = new ArrayList<>();\n+        Calendar calendar = Calendar.getInstance();\n+\n+        for (int i = 0; i < precision; i++) {\n+            calendar.setTimeInMillis(opStartTimes[i]);\n+\n+            result.add(latencies[i] + \"ms started \"\n+                + calendar.get(Calendar.HOUR_OF_DAY) + \":\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2674ca9b1f827c91b9d2e5af5efde621a412f131"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NTg2OA==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8374#discussion_r509185868", "createdAt": "2020-10-21T11:01:48Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -88,22 +97,37 @@\n             }\n \n             if (record) {\n-                for (int i = 0; i < max.length; i++) {\n-                    if (max[i] <= time) {\n-                        System.arraycopy(max, i, max, i + 1, max.length - i - 1);\n+                for (int i = 0; i < latencies.length; i++) {\n+                    if (latencies[i] <= latency) {\n+                        System.arraycopy(latencies, i, latencies, i + 1, latencies.length - i - 1);\n+                        System.arraycopy(opStartTimes, i, opStartTimes, i + 1, opStartTimes.length - i - 1);\n \n-                        max[i] = time;\n+                        latencies[i] = latency;\n+                        opStartTimes[i] = start;\n \n                         break;\n                     }\n                 }\n             }\n \n             if (cnt % 1000 == 0)\n-                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(max) + \"]\");\n+                log.info(\"APPLICATION_STREAMED \" + cnt + \" transactions [worst_latency=\" + Arrays.toString(latencies) + \"]\");\n+        }\n+\n+        List<String> result = new ArrayList<>();\n+        Calendar calendar = Calendar.getInstance();\n+\n+        for (int i = 0; i < precision; i++) {\n+            calendar.setTimeInMillis(opStartTimes[i]);\n+\n+            result.add(latencies[i] + \"ms started \"\n+                + calendar.get(Calendar.HOUR_OF_DAY) + \":\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NjAwMg=="}, "originalCommit": {"oid": "2674ca9b1f827c91b9d2e5af5efde621a412f131"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTMwNDY4OnYy", "diffSide": "RIGHT", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/pme_free_switch_test/SingleKeyTxStreamerApplication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzoyMzowNlrOHk8NQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMTowMTo0MFrOHlmPBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NzIxNw==", "bodyText": "I don't hesitate to insist, that System.nanoTime() is the only option.", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508497217", "createdAt": "2020-10-20T13:23:06Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/pme_free_switch_test/SingleKeyTxStreamerApplication.java", "diffHunk": "@@ -46,11 +43,9 @@\n \n             long start = System.currentTimeMillis();\n \n-            cache.put(key++, key);\n-\n-            long finish = System.currentTimeMillis();\n+            cache.put(key++ % 100, key); // Cycled update.\n \n-            long time = finish - start;\n+            long latency = System.currentTimeMillis() - start;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2674ca9b1f827c91b9d2e5af5efde621a412f131"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NTc5OQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/8374#discussion_r509185799", "createdAt": "2020-10-21T11:01:40Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/pme_free_switch_test/SingleKeyTxStreamerApplication.java", "diffHunk": "@@ -46,11 +43,9 @@\n \n             long start = System.currentTimeMillis();\n \n-            cache.put(key++, key);\n-\n-            long finish = System.currentTimeMillis();\n+            cache.put(key++ % 100, key); // Cycled update.\n \n-            long time = finish - start;\n+            long latency = System.currentTimeMillis() - start;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ5NzIxNw=="}, "originalCommit": {"oid": "2674ca9b1f827c91b9d2e5af5efde621a412f131"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTMzNTAxOnYy", "diffSide": "RIGHT", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzoyODozMlrOHk8f0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzo0MzoyM1rOHk9SEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwMTk3MQ==", "bodyText": "Are you sure that creating the same map on each iteration is a good idea?", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508501971", "createdAt": "2020-10-20T13:28:32Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -58,26 +63,30 @@\n \n         Affinity<Integer> aff = ignite.affinity(cacheName);\n \n-        while (!terminated()) {\n-            key++;\n+        List<Integer> cellKeys = new ArrayList<>();\n+\n+        int candidate = 0;\n \n-            Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(key);\n+        while (cellKeys.size() < 100) {\n+            Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(++candidate);\n \n             Map<Object, Long> stat = nodes.stream().collect(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2674ca9b1f827c91b9d2e5af5efde621a412f131"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxNDUyMQ==", "bodyText": "each key has it's own map", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508514521", "createdAt": "2020-10-20T13:42:59Z", "author": {"login": "anton-vinogradov"}, "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -58,26 +63,30 @@\n \n         Affinity<Integer> aff = ignite.affinity(cacheName);\n \n-        while (!terminated()) {\n-            key++;\n+        List<Integer> cellKeys = new ArrayList<>();\n+\n+        int candidate = 0;\n \n-            Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(key);\n+        while (cellKeys.size() < 100) {\n+            Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(++candidate);\n \n             Map<Object, Long> stat = nodes.stream().collect(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwMTk3MQ=="}, "originalCommit": {"oid": "2674ca9b1f827c91b9d2e5af5efde621a412f131"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxNDgzNQ==", "bodyText": "Sorry, collections difers from each other on each iteration", "url": "https://github.com/apache/ignite/pull/8374#discussion_r508514835", "createdAt": "2020-10-20T13:43:23Z", "author": {"login": "ivandasch"}, "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/cellular_affinity_test/CellularTxStreamer.java", "diffHunk": "@@ -58,26 +63,30 @@\n \n         Affinity<Integer> aff = ignite.affinity(cacheName);\n \n-        while (!terminated()) {\n-            key++;\n+        List<Integer> cellKeys = new ArrayList<>();\n+\n+        int candidate = 0;\n \n-            Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(key);\n+        while (cellKeys.size() < 100) {\n+            Collection<ClusterNode> nodes = aff.mapKeyToPrimaryAndBackups(++candidate);\n \n             Map<Object, Long> stat = nodes.stream().collect(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwMTk3MQ=="}, "originalCommit": {"oid": "2674ca9b1f827c91b9d2e5af5efde621a412f131"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2645, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}