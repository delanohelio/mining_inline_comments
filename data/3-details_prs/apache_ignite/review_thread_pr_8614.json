{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTYwNTM5", "number": 8614, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QwOTowNDoxMVrOFJVZHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMTozNDozOFrOFJgV-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MzMxOTk2OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QwOTowNDoxMVrOILpkJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwODozNDo0N1rOIMJ8tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA4NjI0NQ==", "bodyText": "Great! It was strange, that here was untyped array. Great catch!", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549086245", "createdAt": "2020-12-27T09:04:11Z", "author": {"login": "ivandasch"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "diffHunk": "@@ -989,7 +990,9 @@ private static boolean knownMap(Object o) {\n      * @return Result.\n      */\n     public static Object[] unwrapBinariesInArray(Object[] arr) {\n-        Object[] res = new Object[arr.length];\n+        Class<?> compType = arr.getClass().getComponentType();\n+\n+        Object[] res = (Object[])Array.newInstance(compType, arr.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f096e42f7e565db4dac4f0c7b7e84d50ffefefc5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYxNjgyMQ==", "bodyText": "Now that we have a check for component type above, this can be changed back to Object[] res = new Object[arr.length];", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549616821", "createdAt": "2020-12-29T08:34:47Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "diffHunk": "@@ -989,7 +990,9 @@ private static boolean knownMap(Object o) {\n      * @return Result.\n      */\n     public static Object[] unwrapBinariesInArray(Object[] arr) {\n-        Object[] res = new Object[arr.length];\n+        Class<?> compType = arr.getClass().getComponentType();\n+\n+        Object[] res = (Object[])Array.newInstance(compType, arr.length);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA4NjI0NQ=="}, "originalCommit": {"oid": "f096e42f7e565db4dac4f0c7b7e84d50ffefefc5"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTA5OTcwOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/services/PlatformServices.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMToyNzoxM1rOIL3dJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMToyNzoxM1rOIL3dJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxMzgyOQ==", "bodyText": "Seems to be unnecessary, please revert", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549313829", "createdAt": "2020-12-28T11:27:13Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/services/PlatformServices.java", "diffHunk": "@@ -559,7 +561,7 @@ public static void convertArrayArgs(Object[] args, Method mtd) {\n     @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n     private static class ServiceProxyHolder extends PlatformAbstractTarget {\n         /** */\n-        private final Object proxy;\n+        public final Object proxy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8bc6c00706d3fa37762f65489c491bc3a0fec8"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTExNDE2OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMTozNDozOFrOIL3lBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwODoxMDowMFrOIMJhBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNTg0Nw==", "bodyText": "What is the use case when compType is not Object, is it covered with some test? I thought we are unwrapping binary objects here, so arr is either Object[], or maybe BinaryObject[].\nIn my understanding, res[i] = unwrapBinary(arr[i]) line below can return an instance of any class, so res must be an Object[].", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549315847", "createdAt": "2020-12-28T11:34:38Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "diffHunk": "@@ -989,7 +990,9 @@ private static boolean knownMap(Object o) {\n      * @return Result.\n      */\n     public static Object[] unwrapBinariesInArray(Object[] arr) {\n-        Object[] res = new Object[arr.length];\n+        Class<?> compType = arr.getClass().getComponentType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8bc6c00706d3fa37762f65489c491bc3a0fec8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMyMjU2Mw==", "bodyText": "unwrapBinary keeps the original object if it's not a BinaryObject.\nContract broke in the unwrapBinariesInArray it because converts any typed array into Object[].\nThese changes fix it.", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549322563", "createdAt": "2020-12-28T11:59:08Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "diffHunk": "@@ -989,7 +990,9 @@ private static boolean knownMap(Object o) {\n      * @return Result.\n      */\n     public static Object[] unwrapBinariesInArray(Object[] arr) {\n-        Object[] res = new Object[arr.length];\n+        Class<?> compType = arr.getClass().getComponentType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNTg0Nw=="}, "originalCommit": {"oid": "cf8bc6c00706d3fa37762f65489c491bc3a0fec8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMyNTQ2Mg==", "bodyText": "Understood, thanks. Which test covers this scenario?", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549325462", "createdAt": "2020-12-28T12:10:20Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "diffHunk": "@@ -989,7 +990,9 @@ private static boolean knownMap(Object o) {\n      * @return Result.\n      */\n     public static Object[] unwrapBinariesInArray(Object[] arr) {\n-        Object[] res = new Object[arr.length];\n+        Class<?> compType = arr.getClass().getComponentType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNTg0Nw=="}, "originalCommit": {"oid": "cf8bc6c00706d3fa37762f65489c491bc3a0fec8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMyODI5NA==", "bodyText": ".Net test ServicesTypeAutoResolveTest#TestCallJavaService will not pass if changes reverted.\nCall of the testOverload method goes over change.", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549328294", "createdAt": "2020-12-28T12:20:46Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "diffHunk": "@@ -989,7 +990,9 @@ private static boolean knownMap(Object o) {\n      * @return Result.\n      */\n     public static Object[] unwrapBinariesInArray(Object[] arr) {\n-        Object[] res = new Object[arr.length];\n+        Class<?> compType = arr.getClass().getComponentType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNTg0Nw=="}, "originalCommit": {"oid": "cf8bc6c00706d3fa37762f65489c491bc3a0fec8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMzMzUxNg==", "bodyText": "I think we can change the logic to the following:\nif (arr.getClass().getComponentType() != Object.class)\n    return arr;\n\nArrays like this do not require further unwrapping.", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549333516", "createdAt": "2020-12-28T12:39:14Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "diffHunk": "@@ -989,7 +990,9 @@ private static boolean knownMap(Object o) {\n      * @return Result.\n      */\n     public static Object[] unwrapBinariesInArray(Object[] arr) {\n-        Object[] res = new Object[arr.length];\n+        Class<?> compType = arr.getClass().getComponentType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNTg0Nw=="}, "originalCommit": {"oid": "cf8bc6c00706d3fa37762f65489c491bc3a0fec8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMzNjM1Mw==", "bodyText": "What about an array of maps java.util.collection.Map[] or something similar(Collection[])?", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549336353", "createdAt": "2020-12-28T12:49:09Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "diffHunk": "@@ -989,7 +990,9 @@ private static boolean knownMap(Object o) {\n      * @return Result.\n      */\n     public static Object[] unwrapBinariesInArray(Object[] arr) {\n-        Object[] res = new Object[arr.length];\n+        Class<?> compType = arr.getClass().getComponentType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNTg0Nw=="}, "originalCommit": {"oid": "cf8bc6c00706d3fa37762f65489c491bc3a0fec8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NjI3Mw==", "bodyText": "Can you add a test to demonstrate?", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549346273", "createdAt": "2020-12-28T13:22:34Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "diffHunk": "@@ -989,7 +990,9 @@ private static boolean knownMap(Object o) {\n      * @return Result.\n      */\n     public static Object[] unwrapBinariesInArray(Object[] arr) {\n-        Object[] res = new Object[arr.length];\n+        Class<?> compType = arr.getClass().getComponentType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNTg0Nw=="}, "originalCommit": {"oid": "cf8bc6c00706d3fa37762f65489c491bc3a0fec8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYwOTczNA==", "bodyText": "Looks like you are right.\nI've added some tests and the proposed clause.\nThanks!", "url": "https://github.com/apache/ignite/pull/8614#discussion_r549609734", "createdAt": "2020-12-29T08:10:00Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/utils/PlatformUtils.java", "diffHunk": "@@ -989,7 +990,9 @@ private static boolean knownMap(Object o) {\n      * @return Result.\n      */\n     public static Object[] unwrapBinariesInArray(Object[] arr) {\n-        Object[] res = new Object[arr.length];\n+        Class<?> compType = arr.getClass().getComponentType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNTg0Nw=="}, "originalCommit": {"oid": "cf8bc6c00706d3fa37762f65489c491bc3a0fec8"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2387, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}