{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMDA4Mzgx", "number": 7814, "title": "IGNITE-13032 Use non-static stream pool for optimized marshaller.", "bodyText": "Thank you for submitting the pull request to the Apache Ignite.\nIn order to streamline the review of the contribution\nwe ask you to ensure the following steps have been taken:\nThe Contribution Checklist\n\n There is a single JIRA ticket related to the pull request.\n The web-link to the pull request is attached to the JIRA ticket.\n The JIRA ticket has the Patch Available state.\n The pull request body describes changes that have been made.\nThe description explains WHAT and WHY was made instead of HOW.\n The pull request title is treated as the final commit message.\nThe following pattern must be used: IGNITE-12407: Add Cluster API support to Java thin client\n A reviewer has been mentioned through the JIRA comments\n(see the Maintainers list)\n The pull request has been checked by the Teamcity Bot and\nthe green visa attached to the JIRA ticket (see TC.Bot: Check PR)\n\nNotes\n\nHow to Contribute\nCoding abbreviation rules\nCoding Guidelines\nApache Ignite Teamcity Bot\n\nIf you need any help, please email dev@ignite.apache.org or ask an\u0443 advice on http://asf.slack.com #ignite channel.", "createdAt": "2020-05-19T09:55:31Z", "url": "https://github.com/apache/ignite/pull/7814", "merged": true, "mergeCommit": {"oid": "8c80f549a00bfd2993fbd6d28ca4504dbfa68ce9"}, "closed": true, "closedAt": "2020-05-27T08:47:37Z", "author": {"login": "AMashenkov"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcixVEUAH2gAyNDIwMDA4MzgxOjZjMmVlM2E3ZjZmMWUxNzhkMGRiNzIwNWIzZTIyNWE5ZTFlNmJmYmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclVPQYgH2gAyNDIwMDA4MzgxOmQ3ZmZmNjNiYzBhOTAxNmNhZTkxYTY1MTQzOTE1ZWQ2NzI2MjhmMTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6c2ee3a7f6f1e178d0db7205b3e225a9e1e6bfba", "author": {"user": {"login": "agoncharuk", "name": "Alexey Goncharuk"}}, "url": "https://github.com/apache/ignite/commit/6c2ee3a7f6f1e178d0db7205b3e225a9e1e6bfba", "committedDate": "2020-05-19T09:47:52Z", "message": "IGNITE-13032 Use non-static stream pool for optimized marshaller."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fab96b60f55dd50bccc6d2eb1c787b99cb909b04", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/apache/ignite/commit/fab96b60f55dd50bccc6d2eb1c787b99cb909b04", "committedDate": "2020-05-22T07:53:21Z", "message": "Styles."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4OTI5OTkz", "url": "https://github.com/apache/ignite/pull/7814#pullrequestreview-418929993", "createdAt": "2020-05-27T07:36:45Z", "commit": {"oid": "fab96b60f55dd50bccc6d2eb1c787b99cb909b04"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzozNjo0NlrOGa8_Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzozNjo0NlrOGa8_Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxNTMzNQ==", "bodyText": "extra line", "url": "https://github.com/apache/ignite/pull/7814#discussion_r430915335", "createdAt": "2020-05-27T07:36:46Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/marshaller/optimized/OptimizedObjectSharedStreamRegistry.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.marshaller.optimized;\n+\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+\n+/**\n+ *\n+ */\n+public class OptimizedObjectSharedStreamRegistry extends OptimizedObjectStreamRegistry {\n+    /** */\n+    private static final ThreadLocal<StreamHolder> holders = new ThreadLocal<>();\n+\n+    /** {@inheritDoc} */\n+    @Override OptimizedObjectOutputStream out() {\n+        return holder().acquireOut();\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override OptimizedObjectInputStream in() {\n+        return holder().acquireIn();\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override void closeOut(OptimizedObjectOutputStream out) {\n+        U.close(out, null);\n+\n+        StreamHolder holder = holders.get();\n+\n+        if (holder != null)\n+            holder.releaseOut();\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override void closeIn(OptimizedObjectInputStream in) {\n+        U.close(in, null);\n+\n+        StreamHolder holder = holders.get();\n+\n+        if (holder != null)\n+            holder.releaseIn();\n+    }\n+\n+    /**\n+     * Gets holder from pool or thread local.\n+     *\n+     * @return Stream holder.\n+     */\n+    private static StreamHolder holder() {\n+        StreamHolder holder = holders.get();\n+\n+        if (holder == null)\n+            holders.set(holder = new StreamHolder());\n+\n+        return holder;\n+    }\n+\n+    /**\n+     * Streams holder.\n+     */\n+    private static class StreamHolder {\n+        /** Output stream. */\n+        private final OptimizedObjectOutputStream out = createOut();\n+\n+        /** Input stream. */\n+        private final OptimizedObjectInputStream in = createIn();\n+\n+        /** Output streams counter. */\n+        private int outAcquireCnt;\n+\n+        /** Input streams counter. */\n+        private int inAcquireCnt;\n+\n+        /**\n+         * Gets output stream.\n+         *\n+         * @return Object output stream.\n+         */\n+        OptimizedObjectOutputStream acquireOut() {\n+            return outAcquireCnt++ > 0 ? createOut() : out;\n+        }\n+\n+        /**\n+         * Gets input stream.\n+         *\n+         * @return Object input stream.\n+         */\n+        OptimizedObjectInputStream acquireIn() {\n+            return inAcquireCnt++ > 0 ? createIn() : in;\n+        }\n+\n+        /**\n+         * Releases output stream.\n+         */\n+        void releaseOut() {\n+            outAcquireCnt--;\n+        }\n+\n+        /**\n+         * Releases input stream.\n+         */\n+        void releaseIn() {\n+            inAcquireCnt--;\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fab96b60f55dd50bccc6d2eb1c787b99cb909b04"}, "originalPosition": 121}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7fff63bc0a9016cae91a65143915ed672628f18", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/apache/ignite/commit/d7fff63bc0a9016cae91a65143915ed672628f18", "committedDate": "2020-05-27T08:45:57Z", "message": "Styles."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2514, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}