{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwODkxMjAy", "number": 8110, "title": "IGNITE-13293 .NET: Fix enum serialization performance", "bodyText": "Don't send enum metadata more than once (main part of this fix - see BinaryWriter changes)\nCache name-value map per enum type\nAdd benchmark\n\nAs a result, enum field serialization is on par with int field:\n|                Method |     Mean |    Error |   StdDev | Ratio | RatioSD |\n|---------------------- |---------:|---------:|---------:|------:|--------:|\n|          PutPrimitive | 45.47 us | 0.907 us | 1.330 us |  1.00 |    0.00 |\n|     PutPrimitiveAsync | 66.28 us | 1.317 us | 1.617 us |  1.45 |    0.05 |\n|  PutClassWithIntField | 68.34 us | 1.275 us | 1.130 us |  1.49 |    0.05 |\n| PutClassWithEnumField | 71.13 us | 1.419 us | 2.734 us |  1.57 |    0.08 |", "createdAt": "2020-08-01T07:58:49Z", "url": "https://github.com/apache/ignite/pull/8110", "merged": true, "mergeCommit": {"oid": "e18016b79f928e1e7adb7ed185982a099f2093a2"}, "closed": true, "closedAt": "2020-08-03T06:45:26Z", "author": {"login": "ptupitsyn"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6WsjgAH2gAyNDYwODkxMjAyOmU5ZmUxYjRlNWJiMzNlYzVjMGNkNzQ4MWMyN2RlOGMyMWU2OGRhOTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7rRVeAFqTQ2MTA4MDM0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e9fe1b4e5bb33ec5c0cd7481c27de8c21e68da98", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/e9fe1b4e5bb33ec5c0cd7481c27de8c21e68da98", "committedDate": "2020-07-31T16:20:16Z", "message": "Adding benchmarks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b40ebf544417e959feaf25a0609111814d731ff", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/1b40ebf544417e959feaf25a0609111814d731ff", "committedDate": "2020-07-31T16:59:23Z", "message": "Add becnhmark results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9931f43160efccc6bb5c948c1489cc9652696c9a", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/9931f43160efccc6bb5c948c1489cc9652696c9a", "committedDate": "2020-07-31T17:12:51Z", "message": "Implement enum caching"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "378a8124f6ace7760b4b4478e06554c44ffda923", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/378a8124f6ace7760b4b4478e06554c44ffda923", "committedDate": "2020-07-31T17:28:22Z", "message": "TODOs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db07ae3bb037b4fea5499fe411a58784b651f88b", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/db07ae3bb037b4fea5499fe411a58784b651f88b", "committedDate": "2020-07-31T18:36:21Z", "message": "TODOs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb424384b90169cd1324cb8a4b807fe6adf8f9de", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/bb424384b90169cd1324cb8a4b807fe6adf8f9de", "committedDate": "2020-07-31T18:45:16Z", "message": "Update tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93ba6d8dcfa22840e8f955b40cc0c834af714bac", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/93ba6d8dcfa22840e8f955b40cc0c834af714bac", "committedDate": "2020-08-01T07:48:10Z", "message": "Add a condition to save enum fields only once"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80414e126b4cf73f8bb6946209e917b90fac3b87", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/80414e126b4cf73f8bb6946209e917b90fac3b87", "committedDate": "2020-08-01T07:52:55Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1efff98f6aa40be742545f6890b14a299e5281f3", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/1efff98f6aa40be742545f6890b14a299e5281f3", "committedDate": "2020-08-01T07:55:34Z", "message": "Update benchmark results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18717a613677cb6d7c13eb195c17d6aa40c76b9a", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/18717a613677cb6d7c13eb195c17d6aa40c76b9a", "committedDate": "2020-08-01T08:01:30Z", "message": "Fix license headers and comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c687a5b19dce97a9ee8d5732e92ae305d823a9d", "author": {"user": {"login": "ptupitsyn", "name": "Pavel Tupitsyn"}}, "url": "https://github.com/apache/ignite/commit/7c687a5b19dce97a9ee8d5732e92ae305d823a9d", "committedDate": "2020-08-01T08:02:17Z", "message": "cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjY5OTg3", "url": "https://github.com/apache/ignite/pull/8110#pullrequestreview-459669987", "createdAt": "2020-08-02T18:42:59Z", "commit": {"oid": "7c687a5b19dce97a9ee8d5732e92ae305d823a9d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODo0MzowMFrOG6nBuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODo0MzowMFrOG6nBuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDExMDAwOQ==", "bodyText": "Optional: it looks like we need to check this:\nAssert.AreSame(binRes.GetBinaryType().GetEnumValues(), binRes.GetBinaryType().GetEnumValues())", "url": "https://github.com/apache/ignite/pull/8110#discussion_r464110009", "createdAt": "2020-08-02T18:43:00Z", "author": {"login": "ashapkin"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/EnumsTest.cs", "diffHunk": "@@ -85,6 +86,11 @@ private static void CheckValue<T>(T val, bool isBinaryEnum = true)\n                 {\n                     Assert.AreEqual(string.Format(\"{0} [typeId={1}, enumValue={2}, enumValueName={3}]\",\n                         typeof(T).FullName, binRes.GetBinaryType().TypeId, binRes.EnumValue, val), binRes.ToString());\n+\n+                    var expectedEnumNames = Enum.GetValues(typeof(T)).OfType<T>().Select(x => x.ToString()).ToList();\n+                    var actualEnumNames = binRes.GetBinaryType().GetEnumValues().Select(v => v.EnumName).ToList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c687a5b19dce97a9ee8d5732e92ae305d823a9d"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDgwMzQx", "url": "https://github.com/apache/ignite/pull/8110#pullrequestreview-461080341", "createdAt": "2020-08-04T18:52:28Z", "commit": {"oid": "7c687a5b19dce97a9ee8d5732e92ae305d823a9d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODo1MjoyOFrOG7tMvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODo1MjoyOFrOG7tMvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1OTcxMA==", "bodyText": "Should we support long?", "url": "https://github.com/apache/ignite/pull/8110#discussion_r465259710", "createdAt": "2020-08-04T18:52:28Z", "author": {"login": "gurustron"}, "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Binary/BinaryUtils.cs", "diffHunk": "@@ -1749,6 +1753,76 @@ public static TimeSpan LongToTimeSpan(long ms)\n \n             return TimeSpan.FromMilliseconds(ms);\n         }\n+        \n+        /// <summary>\n+        /// Gets the enum values.\n+        /// </summary>\n+        public static IDictionary<string, int> GetEnumValues(Type enumType)\n+        {\n+            Debug.Assert(enumType != null);\n+            Debug.Assert(enumType.IsEnum);\n+            \n+            Dictionary<string,int> res;\n+            if (EnumValues.TryGetValue(enumType, out res))\n+            {\n+                return res;\n+            }\n+\n+            var values = Enum.GetValues(enumType);\n+            res = new Dictionary<string, int>(values.Length);\n+\n+            var underlyingType = Enum.GetUnderlyingType(enumType);\n+\n+            foreach (var value in values)\n+            {\n+                var name = Enum.GetName(enumType, value);\n+                Debug.Assert(name != null);\n+\n+                res[name] = GetEnumValueAsInt(underlyingType, value);\n+            }\n+\n+            EnumValues.Set(enumType, res);\n+            \n+            return res;\n+        }\n+        \n+        /// <summary>\n+        /// Gets the enum value as int.\n+        /// </summary>\n+        private static int GetEnumValueAsInt(Type underlyingType, object value)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c687a5b19dce97a9ee8d5732e92ae305d823a9d"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3206, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}