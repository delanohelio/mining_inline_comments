{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NTk3NTAw", "number": 7332, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzozODozNFrODdESHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo0NzowNFrODdEbzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODA1NDcxOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzozODozNFrOFldMHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzozMjozNFrOFl3xtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxOTg3MQ==", "bodyText": "Here clearDbObjects is incorrect because destroy == false. IMHO valid value for flag is false.", "url": "https://github.com/apache/ignite/pull/7332#discussion_r374819871", "createdAt": "2020-02-04T17:38:34Z", "author": {"login": "agura"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java", "diffHunk": "@@ -2060,7 +2063,7 @@ private void stopCacheSafely(GridCacheContext<?, ?> cctx, boolean clearDbObjects\n             prepareCacheStop(cctx.name(), false, clearDbObjects);\n \n             if (!cctx.group().hasCaches())\n-                stopCacheGroup(cctx.group().groupId());\n+                stopCacheGroup(cctx.group().groupId(), clearDbObjects);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4fe93f66da283e8c8ae2d1925af3f13aa7d92fa"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1NTQ3OA==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/7332#discussion_r375255478", "createdAt": "2020-02-05T13:32:34Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java", "diffHunk": "@@ -2060,7 +2063,7 @@ private void stopCacheSafely(GridCacheContext<?, ?> cctx, boolean clearDbObjects\n             prepareCacheStop(cctx.name(), false, clearDbObjects);\n \n             if (!cctx.group().hasCaches())\n-                stopCacheGroup(cctx.group().groupId());\n+                stopCacheGroup(cctx.group().groupId(), clearDbObjects);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxOTg3MQ=="}, "originalCommit": {"oid": "c4fe93f66da283e8c8ae2d1925af3f13aa7d92fa"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODA2MjY1OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo0MToxOVrOFldRSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyODoyNFrOFl3ptQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMTE5NA==", "bodyText": "It seems this place (and below at line 1041) are only places where we should remove metric configuration. IF this code will be invoked from this place then we don't need any additional flags for GridCacheAdapter.stop() method.", "url": "https://github.com/apache/ignite/pull/7332#discussion_r374821194", "createdAt": "2020-02-04T17:41:19Z", "author": {"login": "agura"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java", "diffHunk": "@@ -1021,7 +1024,7 @@ private void stopCache(GridCacheAdapter<?, ?> cache, boolean cancel, boolean des\n \n             sharedCtx.removeCacheContext(ctx);\n \n-            cache.stop();\n+            cache.stop(destroy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4fe93f66da283e8c8ae2d1925af3f13aa7d92fa"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MzQyOQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/7332#discussion_r375253429", "createdAt": "2020-02-05T13:28:24Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java", "diffHunk": "@@ -1021,7 +1024,7 @@ private void stopCache(GridCacheAdapter<?, ?> cache, boolean cancel, boolean des\n \n             sharedCtx.removeCacheContext(ctx);\n \n-            cache.stop();\n+            cache.stop(destroy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMTE5NA=="}, "originalCommit": {"oid": "c4fe93f66da283e8c8ae2d1925af3f13aa7d92fa"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODA3MDA3OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo0Mzo0OVrOFldWGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo0Mzo0OVrOFldWGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMjQyNA==", "bodyText": "We can avoid this change. See my comment to GridCacheProcessor.stopCache() method.", "url": "https://github.com/apache/ignite/pull/7332#discussion_r374822424", "createdAt": "2020-02-04T17:43:49Z", "author": {"login": "agura"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheAdapter.java", "diffHunk": "@@ -659,13 +659,15 @@ protected final String startInfo() {\n     /**\n      * Stops this cache. Child classes should override this method\n      * to provide custom stop behavior.\n+     *\n+     * @param destroy Destroy data flag. Setting to <code>true</code> will remove all cache data.\n      */\n-    public void stop() {\n+    public void stop(boolean destroy) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4fe93f66da283e8c8ae2d1925af3f13aa7d92fa"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODA3MjM5OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo0NDo0MVrOFldXnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo0NDo0MVrOFldXnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMjgxMw==", "bodyText": "Could be just removed (condition and statement under it). See my comment to GridCacheProcessor.stopCache() method.", "url": "https://github.com/apache/ignite/pull/7332#discussion_r374822813", "createdAt": "2020-02-04T17:44:41Z", "author": {"login": "agura"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheAdapter.java", "diffHunk": "@@ -659,13 +659,15 @@ protected final String startInfo() {\n     /**\n      * Stops this cache. Child classes should override this method\n      * to provide custom stop behavior.\n+     *\n+     * @param destroy Destroy data flag. Setting to <code>true</code> will remove all cache data.\n      */\n-    public void stop() {\n+    public void stop(boolean destroy) {\n         // Nulling thread local reference to ensure values will be eventually GCed\n         // no matter what references these futures are holding.\n         lastFut = null;\n \n-        if (!ctx.kernalContext().isStopping())\n+        if (!ctx.kernalContext().isStopping() && destroy)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4fe93f66da283e8c8ae2d1925af3f13aa7d92fa"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODA3NDUzOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo0NToyOFrOFldZDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyODozNFrOFl3qDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMzE4Mg==", "bodyText": "See comment above (line 1027).", "url": "https://github.com/apache/ignite/pull/7332#discussion_r374823182", "createdAt": "2020-02-04T17:45:28Z", "author": {"login": "agura"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java", "diffHunk": "@@ -1035,7 +1038,7 @@ private void stopCache(GridCacheAdapter<?, ?> cache, boolean cancel, boolean des\n \n                 // Check whether dht cache has been started.\n                 if (dht != null) {\n-                    dht.stop();\n+                    dht.stop(destroy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4fe93f66da283e8c8ae2d1925af3f13aa7d92fa"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MzUxOQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/7332#discussion_r375253519", "createdAt": "2020-02-05T13:28:34Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java", "diffHunk": "@@ -1035,7 +1038,7 @@ private void stopCache(GridCacheAdapter<?, ?> cache, boolean cancel, boolean des\n \n                 // Check whether dht cache has been started.\n                 if (dht != null) {\n-                    dht.stop();\n+                    dht.stop(destroy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMzE4Mg=="}, "originalCommit": {"oid": "c4fe93f66da283e8c8ae2d1925af3f13aa7d92fa"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODA3OTUwOnYy", "diffSide": "RIGHT", "path": "modules/core/src/test/java/org/apache/ignite/internal/metric/CacheMetricsAddRemoveTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo0NzowNFrOFldcKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzozMzozMVrOFl3zgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMzk3Ng==", "bodyText": "After cache destroying should be asserted that metric configuration is removed.", "url": "https://github.com/apache/ignite/pull/7332#discussion_r374823976", "createdAt": "2020-02-04T17:47:04Z", "author": {"login": "agura"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/metric/CacheMetricsAddRemoveTest.java", "diffHunk": "@@ -82,17 +98,58 @@ public void testCacheMetricsAddRemove() throws Exception {\n         checkMetricsEmpty(cachePrefix);\n     }\n \n+    /** */\n+    @Test\n+    public void testCacheMetricsNotRemovedOnStop() throws Exception {\n+        String cachePrefix = cacheMetricsRegistryName(\"other-cache\", false);\n+\n+        checkMetricsEmpty(cachePrefix);\n+\n+        createCache(\"persisted\", \"other-cache\");\n+\n+        grid(\"client\").cache(\"other-cache\").put(1L, 1L);\n+\n+        checkMetricsNotEmpty(cachePrefix);\n+\n+        //Cache will be stopped during deactivation.\n+        grid(\"client\").cluster().state(ClusterState.INACTIVE);\n+\n+        checkMetricsNotEmpty(cachePrefix);\n+\n+        grid(\"client\").cluster().state(ClusterState.ACTIVE);\n+\n+        assertEquals(1L, grid(\"client\").cache(\"other-cache\").get(1L));\n+\n+        checkMetricsNotEmpty(cachePrefix);\n+\n+        destroyCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4fe93f66da283e8c8ae2d1925af3f13aa7d92fa"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1NTkzOQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/ignite/pull/7332#discussion_r375255939", "createdAt": "2020-02-05T13:33:31Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/metric/CacheMetricsAddRemoveTest.java", "diffHunk": "@@ -82,17 +98,58 @@ public void testCacheMetricsAddRemove() throws Exception {\n         checkMetricsEmpty(cachePrefix);\n     }\n \n+    /** */\n+    @Test\n+    public void testCacheMetricsNotRemovedOnStop() throws Exception {\n+        String cachePrefix = cacheMetricsRegistryName(\"other-cache\", false);\n+\n+        checkMetricsEmpty(cachePrefix);\n+\n+        createCache(\"persisted\", \"other-cache\");\n+\n+        grid(\"client\").cache(\"other-cache\").put(1L, 1L);\n+\n+        checkMetricsNotEmpty(cachePrefix);\n+\n+        //Cache will be stopped during deactivation.\n+        grid(\"client\").cluster().state(ClusterState.INACTIVE);\n+\n+        checkMetricsNotEmpty(cachePrefix);\n+\n+        grid(\"client\").cluster().state(ClusterState.ACTIVE);\n+\n+        assertEquals(1L, grid(\"client\").cache(\"other-cache\").get(1L));\n+\n+        checkMetricsNotEmpty(cachePrefix);\n+\n+        destroyCache();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMzk3Ng=="}, "originalCommit": {"oid": "c4fe93f66da283e8c8ae2d1925af3f13aa7d92fa"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2589, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}