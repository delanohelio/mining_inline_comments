{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5OTU3ODg2", "number": 7542, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODo0NzoyMFrODpBDbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODo0NzoyMFrODpBDbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzM1NDcwOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/spi/metric/jmx/MetricRegistryMBean.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODo0NzoyMFrOF37I_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTowMjoxM1rOF37ooQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4NDk1Ng==", "bodyText": "Unnecessary brackets", "url": "https://github.com/apache/ignite/pull/7542#discussion_r394184956", "createdAt": "2020-03-18T08:47:20Z", "author": {"login": "NSAmelchev"}, "path": "modules/core/src/main/java/org/apache/ignite/spi/metric/jmx/MetricRegistryMBean.java", "diffHunk": "@@ -155,12 +155,26 @@ else if (metric instanceof ObjectMetric)\n      * @see MetricUtils#histogramBucketNames(HistogramMetric, Map)\n      */\n     public static Long searchHistogram(String name, ReadOnlyMetricRegistry mreg) {\n-        Scanner sc = new Scanner(name).useDelimiter(\"_\");\n+        int highBoundIdx;\n \n-        if (!sc.hasNext())\n+        boolean isInf = name.endsWith(INF);\n+\n+        if (isInf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8731b30f6ddea4ea664048b19430b028f1e04212"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5MzA1Nw==", "bodyText": "fixed.", "url": "https://github.com/apache/ignite/pull/7542#discussion_r394193057", "createdAt": "2020-03-18T09:02:13Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/spi/metric/jmx/MetricRegistryMBean.java", "diffHunk": "@@ -155,12 +155,26 @@ else if (metric instanceof ObjectMetric)\n      * @see MetricUtils#histogramBucketNames(HistogramMetric, Map)\n      */\n     public static Long searchHistogram(String name, ReadOnlyMetricRegistry mreg) {\n-        Scanner sc = new Scanner(name).useDelimiter(\"_\");\n+        int highBoundIdx;\n \n-        if (!sc.hasNext())\n+        boolean isInf = name.endsWith(INF);\n+\n+        if (isInf) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4NDk1Ng=="}, "originalCommit": {"oid": "8731b30f6ddea4ea664048b19430b028f1e04212"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2533, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}