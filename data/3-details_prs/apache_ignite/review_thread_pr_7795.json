{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NzgyNDY5", "number": 7795, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTo1MzozMVrOD8B7-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo0MDoyOVrOD8C95A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjcyODkwOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTo1MzozMVrOGUt9FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTo1MzozMVrOGUt9FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3NzYyMA==", "bodyText": "Typo: future -> fut", "url": "https://github.com/apache/ignite/pull/7795#discussion_r424377620", "createdAt": "2020-05-13T11:53:31Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -3016,6 +3031,13 @@ else if (tx.setRollbackOnly())\n                     }\n                 }\n \n+                timeBag.finishGlobalStage(\"Initialized\");\n+\n+                doneFut.markInitialized();\n+\n+                if (txCnt.get() > 0)\n+                    doneFut.listen(future -> finishAndRecordTimings());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjczODE1OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMTo1NjoyMlrOGUuC8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo0NDo1MFrOGUvwRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3OTEyMw==", "bodyText": "This would be executed on each transaction?\nOr only on recovery after some node failed?", "url": "https://github.com/apache/ignite/pull/7795#discussion_r424379123", "createdAt": "2020-05-13T11:56:22Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -3051,6 +3073,37 @@ else if (tx.setRollbackOnly())\n                 cctx.kernalContext().gateway().readUnlock();\n             }\n         }\n+\n+        /**\n+         * @param tx Tx.\n+         * @param failedNode Failed node.\n+         */\n+        private void processPrepared(IgniteInternalTx tx, UUID failedNode) {\n+            IgniteInternalFuture<Boolean> fut = commitIfPrepared(tx, Collections.singleton(failedNode));\n+\n+            if (fut != null)\n+                doneFut.add(fut);\n+\n+            txCnt.incrementAndGet();\n+        }\n+\n+        /**\n+         *\n+         */\n+        private void finishAndRecordTimings() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNzEwOA==", "bodyText": "only on recovery after some node failed", "url": "https://github.com/apache/ignite/pull/7795#discussion_r424407108", "createdAt": "2020-05-13T12:44:50Z", "author": {"login": "anton-vinogradov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -3051,6 +3073,37 @@ else if (tx.setRollbackOnly())\n                 cctx.kernalContext().gateway().readUnlock();\n             }\n         }\n+\n+        /**\n+         * @param tx Tx.\n+         * @param failedNode Failed node.\n+         */\n+        private void processPrepared(IgniteInternalTx tx, UUID failedNode) {\n+            IgniteInternalFuture<Boolean> fut = commitIfPrepared(tx, Collections.singleton(failedNode));\n+\n+            if (fut != null)\n+                doneFut.add(fut);\n+\n+            txCnt.incrementAndGet();\n+        }\n+\n+        /**\n+         *\n+         */\n+        private void finishAndRecordTimings() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3OTEyMw=="}, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjgyNTA5OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjoyMTozOVrOGUu40A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0MzozMVrOGWDP5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM5MjkxMg==", "bodyText": "Let's wrap in:\nif (log.isInfoEnabled()) {\n            StringBuilder timingsToLog = new StringBuilder();\n\n            timingsToLog.append(\"TxRecovery Status and Timings [txs=\").append(txCnt.get());\n\n            for (String stageTiming : timeBag.stagesTimings())\n                timingsToLog.append(\", \").append(stageTiming);\n\n            timingsToLog.append(\"]\");\n\n            log.info(timingsToLog.toString());\n}", "url": "https://github.com/apache/ignite/pull/7795#discussion_r424392912", "createdAt": "2020-05-13T12:21:39Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -3051,6 +3073,37 @@ else if (tx.setRollbackOnly())\n                 cctx.kernalContext().gateway().readUnlock();\n             }\n         }\n+\n+        /**\n+         * @param tx Tx.\n+         * @param failedNode Failed node.\n+         */\n+        private void processPrepared(IgniteInternalTx tx, UUID failedNode) {\n+            IgniteInternalFuture<Boolean> fut = commitIfPrepared(tx, Collections.singleton(failedNode));\n+\n+            if (fut != null)\n+                doneFut.add(fut);\n+\n+            txCnt.incrementAndGet();\n+        }\n+\n+        /**\n+         *\n+         */\n+        private void finishAndRecordTimings() {\n+            timeBag.finishGlobalStage(\"Finished\");\n+\n+            StringBuilder timingsToLog = new StringBuilder();\n+\n+            timingsToLog.append(\"TxRecovery Status and Timings [txs=\").append(txCnt.get());\n+\n+            for (String stageTiming : timeBag.stagesTimings())\n+                timingsToLog.append(\", \").append(stageTiming);\n+\n+            timingsToLog.append(\"]\");\n+\n+            log.info(timingsToLog.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNzUzNQ==", "bodyText": "do we really need to check isInfoEnabled?", "url": "https://github.com/apache/ignite/pull/7795#discussion_r424407535", "createdAt": "2020-05-13T12:45:34Z", "author": {"login": "anton-vinogradov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -3051,6 +3073,37 @@ else if (tx.setRollbackOnly())\n                 cctx.kernalContext().gateway().readUnlock();\n             }\n         }\n+\n+        /**\n+         * @param tx Tx.\n+         * @param failedNode Failed node.\n+         */\n+        private void processPrepared(IgniteInternalTx tx, UUID failedNode) {\n+            IgniteInternalFuture<Boolean> fut = commitIfPrepared(tx, Collections.singleton(failedNode));\n+\n+            if (fut != null)\n+                doneFut.add(fut);\n+\n+            txCnt.incrementAndGet();\n+        }\n+\n+        /**\n+         *\n+         */\n+        private void finishAndRecordTimings() {\n+            timeBag.finishGlobalStage(\"Finished\");\n+\n+            StringBuilder timingsToLog = new StringBuilder();\n+\n+            timingsToLog.append(\"TxRecovery Status and Timings [txs=\").append(txCnt.get());\n+\n+            for (String stageTiming : timeBag.stagesTimings())\n+                timingsToLog.append(\", \").append(stageTiming);\n+\n+            timingsToLog.append(\"]\");\n+\n+            log.info(timingsToLog.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM5MjkxMg=="}, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NTA3OQ==", "bodyText": "done", "url": "https://github.com/apache/ignite/pull/7795#discussion_r425775079", "createdAt": "2020-05-15T12:43:31Z", "author": {"login": "anton-vinogradov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -3051,6 +3073,37 @@ else if (tx.setRollbackOnly())\n                 cctx.kernalContext().gateway().readUnlock();\n             }\n         }\n+\n+        /**\n+         * @param tx Tx.\n+         * @param failedNode Failed node.\n+         */\n+        private void processPrepared(IgniteInternalTx tx, UUID failedNode) {\n+            IgniteInternalFuture<Boolean> fut = commitIfPrepared(tx, Collections.singleton(failedNode));\n+\n+            if (fut != null)\n+                doneFut.add(fut);\n+\n+            txCnt.incrementAndGet();\n+        }\n+\n+        /**\n+         *\n+         */\n+        private void finishAndRecordTimings() {\n+            timeBag.finishGlobalStage(\"Finished\");\n+\n+            StringBuilder timingsToLog = new StringBuilder();\n+\n+            timingsToLog.append(\"TxRecovery Status and Timings [txs=\").append(txCnt.get());\n+\n+            for (String stageTiming : timeBag.stagesTimings())\n+                timingsToLog.append(\", \").append(stageTiming);\n+\n+            timingsToLog.append(\"]\");\n+\n+            log.info(timingsToLog.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM5MjkxMg=="}, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Mjg4ODY5OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjozODoxMlrOGUvgDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjozODoxMlrOGUvgDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwMjk1OA==", "bodyText": "Let's rename it to preparedTxCnt", "url": "https://github.com/apache/ignite/pull/7795#discussion_r424402958", "createdAt": "2020-05-13T12:38:12Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -2948,6 +2952,15 @@ private void broadcastToNodesSupportingFeature(IgniteRunnable job, IgniteFeature\n         /** */\n         private final MvccCoordinator mvccCrd;\n \n+        /** Time bag to measure and store tx recovery stages times. */\n+        private final TimeBag timeBag = new TimeBag();\n+\n+        /** Prepared tx to be recovered count. */\n+        private final AtomicLong txCnt = new AtomicLong();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Mjg5NjY2OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo0MDoxNlrOGUvk9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0Mzo0MVrOGWDQSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNDIxNQ==", "bodyText": "Let's check here - is info level enabled.\nOtherwise, we perform a lot of unnecessary work - finishGlobalStage includes acquiring write lock, creating some objects, etc.", "url": "https://github.com/apache/ignite/pull/7795#discussion_r424404215", "createdAt": "2020-05-13T12:40:16Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -2959,6 +2972,8 @@ private TxRecoveryInitRunnable(ClusterNode node, MvccCoordinator mvccCrd) {\n \n         /** {@inheritDoc} */\n         @Override public void run() {\n+            timeBag.finishGlobalStage(\"Started\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwODY3Mw==", "bodyText": "info is always enabled on adequate deployments?\nuseless code I think", "url": "https://github.com/apache/ignite/pull/7795#discussion_r424408673", "createdAt": "2020-05-13T12:47:25Z", "author": {"login": "anton-vinogradov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -2959,6 +2972,8 @@ private TxRecoveryInitRunnable(ClusterNode node, MvccCoordinator mvccCrd) {\n \n         /** {@inheritDoc} */\n         @Override public void run() {\n+            timeBag.finishGlobalStage(\"Started\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNDIxNQ=="}, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NTE3Ng==", "bodyText": "done", "url": "https://github.com/apache/ignite/pull/7795#discussion_r425775176", "createdAt": "2020-05-15T12:43:41Z", "author": {"login": "anton-vinogradov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -2959,6 +2972,8 @@ private TxRecoveryInitRunnable(ClusterNode node, MvccCoordinator mvccCrd) {\n \n         /** {@inheritDoc} */\n         @Override public void run() {\n+            timeBag.finishGlobalStage(\"Started\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNDIxNQ=="}, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Mjg5NzY0OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo0MDoyOVrOGUvlhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0Mzo0OVrOGWDQnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNDM1OA==", "bodyText": "Let's check here - is info level enabled.\nOtherwise, we perform a lot of unnecessary work - finishGlobalStage includes acquiring write lock, creating some objects, etc.", "url": "https://github.com/apache/ignite/pull/7795#discussion_r424404358", "createdAt": "2020-05-13T12:40:29Z", "author": {"login": "nizhikov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -3016,6 +3031,13 @@ else if (tx.setRollbackOnly())\n                     }\n                 }\n \n+                timeBag.finishGlobalStage(\"Initialized\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NTI2Mw==", "bodyText": "done", "url": "https://github.com/apache/ignite/pull/7795#discussion_r425775263", "createdAt": "2020-05-15T12:43:49Z", "author": {"login": "anton-vinogradov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxManager.java", "diffHunk": "@@ -3016,6 +3031,13 @@ else if (tx.setRollbackOnly())\n                     }\n                 }\n \n+                timeBag.finishGlobalStage(\"Initialized\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNDM1OA=="}, "originalCommit": {"oid": "e98c28ea856c4282edf4705fa9c5a427f80ba301"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2494, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}