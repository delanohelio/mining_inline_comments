{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjIyMDQ3", "number": 1746, "title": "Fixes #1161: add function to compress/decompress binary data", "bodyText": "Fixes #1161\nI created apoc.util.compress and apoc.util.decompress procedures using the same approach as the procedure apoc.text.bytes, then compressing the String in List<Long> and vice versa.", "createdAt": "2020-12-04T15:56:35Z", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1746", "merged": true, "mergeCommit": {"oid": "3522b8a2299b3d4e4bb9908a841819b1aba41dcf"}, "closed": true, "closedAt": "2020-12-04T16:37:50Z", "author": {"login": "vga91"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgrDSLgH2gAyNTMyNjIyMDQ3OjczYTI1ZWU0NjQwZjhlMzhmMzE1ZDE4NjQ5M2FmMDAwMzMwZDhlZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnC0GeAFqTU1NDU2MzY2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "73a25ee4640f8e38f315d186493af000330d8ee3", "author": {"user": {"login": "vga91", "name": "Giuseppe Villani"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/73a25ee4640f8e38f315d186493af000330d8ee3", "committedDate": "2020-11-27T17:32:19Z", "message": "fixes #1161: add function to compress/decompress binary data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15cd4d3f2c43d1b1f5b541df26d3b5f86bd1b5d5", "author": {"user": {"login": "vga91", "name": "Giuseppe Villani"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/15cd4d3f2c43d1b1f5b541df26d3b5f86bd1b5d5", "committedDate": "2020-11-27T19:11:39Z", "message": "code clean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cbd917bec2d48e82788ca40aa80b82cc85e9c64", "author": {"user": {"login": "vga91", "name": "Giuseppe Villani"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/7cbd917bec2d48e82788ca40aa80b82cc85e9c64", "committedDate": "2020-11-27T19:17:46Z", "message": "adjusted adoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43c9fcee09943250b5ee90a49c7fe8a3253aab28", "author": {"user": {"login": "vga91", "name": "Giuseppe Villani"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/43c9fcee09943250b5ee90a49c7fe8a3253aab28", "committedDate": "2020-11-27T19:22:29Z", "message": "removed overloaded method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc84d4d716ac354c3d00189c3bb3c87b62ae4557", "author": {"user": {"login": "vga91", "name": "Giuseppe Villani"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/dc84d4d716ac354c3d00189c3bb3c87b62ae4557", "committedDate": "2020-12-03T11:34:49Z", "message": "refactor compressionAlgo with Factory pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "892a788c9a1e0d93a022dabbc3f43ecd08290120", "author": {"user": {"login": "vga91", "name": "Giuseppe Villani"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/892a788c9a1e0d93a022dabbc3f43ecd08290120", "committedDate": "2020-12-03T13:16:02Z", "message": "changed compressionAlgo in config from enum to string"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5ae0f19ecb74dac6ae99d9fc6f179ddf5aa8351", "author": {"user": {"login": "vga91", "name": "Giuseppe Villani"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/d5ae0f19ecb74dac6ae99d9fc6f179ddf5aa8351", "committedDate": "2020-12-03T13:17:12Z", "message": "removed unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NTYzMzY3", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1746#pullrequestreview-554563367", "createdAt": "2020-12-17T12:36:32Z", "commit": {"oid": "d5ae0f19ecb74dac6ae99d9fc6f179ddf5aa8351"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjozNjozMlrOIHzpUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjozNjozMlrOIHzpUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1NzEwNQ==", "bodyText": "this should be a byte[]", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1746#discussion_r545057105", "createdAt": "2020-12-17T12:36:32Z", "author": {"login": "jexp"}, "path": "core/src/main/java/apoc/util/CompressionAlgo.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package apoc.util;\n+\n+import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\n+import org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream;\n+import org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream;\n+import org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream;\n+import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;\n+import org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream;\n+import org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream;\n+import org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream;\n+import org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream;\n+import org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorOutputStream;\n+import org.apache.commons.io.IOUtils;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.lang.reflect.Constructor;\n+import java.nio.charset.Charset;\n+import java.util.List;\n+\n+import static apoc.util.Util.convertFromBytesToList;\n+import static apoc.util.Util.convertFromListToBytes;\n+\n+public enum CompressionAlgo {\n+\n+    GZIP(GzipCompressorOutputStream.class, GzipCompressorInputStream.class),\n+    BZIP2(BZip2CompressorOutputStream.class, BZip2CompressorInputStream.class),\n+    DEFLATE(DeflateCompressorOutputStream.class, DeflateCompressorInputStream.class),\n+    BLOCK_LZ4(BlockLZ4CompressorOutputStream.class, BlockLZ4CompressorInputStream.class),\n+    FRAMED_SNAPPY(FramedSnappyCompressorOutputStream.class, FramedSnappyCompressorInputStream.class);\n+\n+    private final Class<?> compressor;\n+    private final Class<?> decompressor;\n+\n+    CompressionAlgo(Class<?> compressor, Class<?> decompressor) {\n+        this.compressor = compressor;\n+        this.decompressor = decompressor;\n+    }\n+\n+    public List<Long> compress(String string, Charset charset) throws Exception {\n+        Constructor<?> constructor = compressor.getConstructor(OutputStream.class);\n+        try (ByteArrayOutputStream stream = new ByteArrayOutputStream()) {\n+            try (OutputStream outputStream = (OutputStream) constructor.newInstance((OutputStream) stream)) {\n+                outputStream.write(string.getBytes(charset));\n+            }\n+            return convertFromBytesToList(stream.toByteArray());\n+        }\n+    }\n+\n+    public String decompress(List<Long> byteArray, Charset charset) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5ae0f19ecb74dac6ae99d9fc6f179ddf5aa8351"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NTYzNjY0", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1746#pullrequestreview-554563664", "createdAt": "2020-12-17T12:36:59Z", "commit": {"oid": "d5ae0f19ecb74dac6ae99d9fc6f179ddf5aa8351"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjozNzowMFrOIHzqVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjozNzowMFrOIHzqVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1NzM2NA==", "bodyText": "this is a big waste of memory we should not do that", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1746#discussion_r545057364", "createdAt": "2020-12-17T12:37:00Z", "author": {"login": "jexp"}, "path": "core/src/main/java/apoc/util/Util.java", "diffHunk": "@@ -913,4 +914,19 @@ public static Thread newDaemonThread(Runnable target) {\n         thread.setDaemon(true);\n         return thread;\n     }\n+\n+    public static List<Long> convertFromBytesToList(byte[] bytes) {\n+        List<Long> result = new ArrayList<>(bytes.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5ae0f19ecb74dac6ae99d9fc6f179ddf5aa8351"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 890, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}