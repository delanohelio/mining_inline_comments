{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NzIxOTMy", "number": 1508, "title": "Apoc periodic iterate", "bodyText": "This PR introduces batchMode, which deprecates iterateList. It also introduces an extra mode, which can be used to access a batch of values returned by the data-driven statement in the operations statement.\nExample of what you might use that for:\n\nTweaking of the periodic iterate documentation to explain batchMode\n\nExplanation of the new BATCH_SINGLE mode", "createdAt": "2020-05-12T13:21:58Z", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508", "merged": true, "mergeCommit": {"oid": "8d426e1883f05a3526efe3df7b1214563265ce8d"}, "closed": true, "closedAt": "2020-05-13T14:42:14Z", "author": {"login": "mneedham"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcglauMAFqTQxMDExOTkwNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg4seJgBqjMzMzIwMTI5Mzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMTE5OTA3", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508#pullrequestreview-410119907", "createdAt": "2020-05-12T14:47:19Z", "commit": {"oid": "ddb983d04902c07ba863fc8a6c4733738098a7ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDo0NzoxOVrOGUKWRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDo0NzoxOVrOGUKWRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5NDI0NQ==", "bodyText": "Our rather than Out? :)", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508#discussion_r423794245", "createdAt": "2020-05-12T14:47:19Z", "author": {"login": "JMHReif"}, "path": "docs/asciidoc/graph-updates/periodic-iterate.adoc", "diffHunk": "@@ -69,6 +112,74 @@ CALL apoc.periodic.iterate(\n   {batchSize:100, parallel:true})\n ----\n \n-In the above code, we select all the `Order` nodes that have an order date greater than `October 13, 2016` (first Cypher statement).\n-Our configuration will batch those nodes into groups of 100 (`batchSize:100`) and run the batches in parallel for the second statement to process.\n-The second Cypher statement takes those groups and finds the nodes that have a `HAS_ITEM` relationship to other nodes, then sums up the value of those items and sets that sum as a property (`o.value`) for the total order value.\n\\ No newline at end of file\n+Let's break down the parameters passed to the procedure:\n+\n+* Our first Cypher statement selects all the `Order` nodes that have an order date greater than `October 13, 2016` (first Cypher statement).\n+* Out second Cypher statement takes those groups and finds the nodes that have a `HAS_ITEM` relationship to other nodes, then sums up the value of those items and sets that sum as a property (`o.value`) for the total order value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddb983d04902c07ba863fc8a6c4733738098a7ee"}, "originalPosition": 137}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMTIwNzk5", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508#pullrequestreview-410120799", "createdAt": "2020-05-12T14:48:13Z", "commit": {"oid": "ddb983d04902c07ba863fc8a6c4733738098a7ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDo0ODoxM1rOGUKZHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDo0ODoxM1rOGUKZHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5NDk3Mw==", "bodyText": "We can use rather than We an use? :)", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508#discussion_r423794973", "createdAt": "2020-05-12T14:48:13Z", "author": {"login": "JMHReif"}, "path": "docs/asciidoc/graph-updates/periodic-iterate.adoc", "diffHunk": "@@ -69,6 +112,74 @@ CALL apoc.periodic.iterate(\n   {batchSize:100, parallel:true})\n ----\n \n-In the above code, we select all the `Order` nodes that have an order date greater than `October 13, 2016` (first Cypher statement).\n-Our configuration will batch those nodes into groups of 100 (`batchSize:100`) and run the batches in parallel for the second statement to process.\n-The second Cypher statement takes those groups and finds the nodes that have a `HAS_ITEM` relationship to other nodes, then sums up the value of those items and sets that sum as a property (`o.value`) for the total order value.\n\\ No newline at end of file\n+Let's break down the parameters passed to the procedure:\n+\n+* Our first Cypher statement selects all the `Order` nodes that have an order date greater than `October 13, 2016` (first Cypher statement).\n+* Out second Cypher statement takes those groups and finds the nodes that have a `HAS_ITEM` relationship to other nodes, then sums up the value of those items and sets that sum as a property (`o.value`) for the total order value.\n+* Our configuration will batch those nodes into groups of 100 (`batchSize:100`) and run the batches in parallel for the second statement to process.\n+\n+If our operations statement calls a procedure that takes in a batch of values, we can use `batchMode: \"BATCH_SINGLE\"` to get access to a batch of values to pass to that procedure.\n+When we use `BATCH_SINGLE`, the operations statement will have access to the `$_batch` parameter, which will contain a list of the fields returned in the data-driven statement.\n+\n+For example, if the data driven statement is:\n+\n+[source,cypher]\n+----\n+RETURN 'mark' AS a, 'michael' AS b\n+UNION\n+RETURN 'jennifer' AS a, 'andrea' AS b\n+----\n+\n+The contents of the `$_batch` variable passed to the operations statement would be:\n+\n+[source,text]\n+----\n+[\n+  {a: \"mark\", b: \"michael\"},\n+  {a: \"jennifer\", b: \"andrea\"}\n+]\n+----\n+\n+Let's see an example of this in action.\n+We'll start by creating some nodes:\n+\n+.The following query creates 100,000 nodes with the label `Person` and property `id`\n+[source,cypher]\n+----\n+UNWIND range(1,100000) as id create (:Person {id: id})\n+----\n+\n+We can delete these nodes using the `apoc.nodes.delete` procedure.\n+See <<deleting-data>>.\n+\n+This procedure takes in a list of nodes, which we can extract from the `$_batch` parameter.\n+\n+.The following query streams all the `Person` nodes and then passes them in batches of size 100 to `apoc.nodes.delete`\n+[source,cypher]\n+----\n+CALL apoc.periodic.iterate(\n+  \"MATCH (p:Person) RETURN p\",\n+  // Extract `p` variable using list comprehension\n+  \"CALL apoc.nodes.delete([item in $_batch | item.p], size($_batch))\",\n+  {batchMode: \"BATCH_SINGLE\", batchSize: 100}\n+)\n+YIELD batch, operations;\n+----\n+\n+The contents of the `$_batch` parameter that is used in the operations statement would be as follows:\n+\n+[source,text]\n+----\n+[{p: Node<1>}, {p: Node<2>},...]\n+----\n+\n+We an use a https://neo4j.com/docs/cypher-manual/current/syntax/lists/#cypher-list-comprehension[list comprehension^] to extract the `p` variable from each item in the list.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddb983d04902c07ba863fc8a6c4733738098a7ee"}, "originalPosition": 195}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMTI0MjE5", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508#pullrequestreview-410124219", "createdAt": "2020-05-12T14:51:35Z", "commit": {"oid": "ddb983d04902c07ba863fc8a6c4733738098a7ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDo1MTozNVrOGUKjTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDo1MTozNVrOGUKjTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5NzU4Mg==", "bodyText": "Should it be how the data-driven statement is processed by the INNER statement? Because the data-driven statement = outer statement?", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508#discussion_r423797582", "createdAt": "2020-05-12T14:51:35Z", "author": {"login": "JMHReif"}, "path": "docs/asciidoc/graph-updates/periodic-iterate.adoc", "diffHunk": "@@ -8,32 +8,68 @@ ifdef::backend-html5[]\n endif::[]\n \n The `apoc.periodic.iterate` procedure is helpful when you need to handle large amounts of data for import, refactoring, and other cases that require large transactions.\n-It provides a way to batch the data by dividing the workload into two parts - a data-driven statement and an operations statement.\n+It provides a way to batch the data by dividing the workload into two parts:\n \n-The data-driven statement is how you select what data needs handled.\n+a data-driven statement:: This defines how you select what data needs handled.\n You can provide a Cypher statement to select from existing graph data, read external data from a file or API, or retrieve data from another datastore.\n-The operations statement is what you want done to the selected data.\n+\n+an operation statement:: This defines what you want done to the selected data.\n You can do things like execute Cypher for updating or creating/deleting the data or run other procedures to manipulate and transform values before loading.\n \n-To run `apoc.periodic.iterate`, the data-driven statement is provided as the *first*, outer statement that results in a stream of values to be processed.\n-The operations statement is provided as the *second*, inner statement to process *one* element at a time or (with `iterateList:true`) a batch at a time.\n+The data-driven statement is provided as the *first*, outer statement that results in a stream of values to be processed.\n+The operations statement is provided as the *second*, inner statement to process *one* element at a time or (with `batchMode: \"BATCH\"`) a batch at a time.\n The results of the outer statement are passed to the inner statement as parameters, so they are automatically made available with their names.\n \n-.configuration options\n+.Config\n+[options=header]\n+|===\n+| name | type | default | description\n+| batchSize | Long | 10000 | run the specified number of operations statements in a single tx - params: {_count, _batch}\n+| parallel | boolean | false | run operations statements in parallel (note that statements might deadlock if conflicting)\n+| retries | Long | 0 | if the operations statement fails with an error, sleep 100ms and retry until retries-count is reached - param {_retry}\n+| batchMode | String | \"BATCH\" a| how data-driven statements should be processed by outer statement. Valid values are:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddb983d04902c07ba863fc8a6c4733738098a7ee"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMTgwMjgx", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508#pullrequestreview-410180281", "createdAt": "2020-05-12T15:48:11Z", "commit": {"oid": "e68a5488e696d5e341e46ba1328c06d3ee323c3e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTo0ODoxMVrOGUNPCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTo1MDoxM1rOGUNUsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0MTU0NA==", "bodyText": "I don't think we need this you can use BatchMode#valueOf method instead", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508#discussion_r423841544", "createdAt": "2020-05-12T15:48:11Z", "author": {"login": "conker84"}, "path": "src/main/java/apoc/periodic/BatchMode.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package apoc.periodic;\n+\n+import apoc.util.Util;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+enum BatchMode {\n+    BATCH,\n+    BATCH_SINGLE,\n+    SINGLE;\n+\n+\n+    private static final Map<String, BatchMode> nameIndex =  new HashMap<>();\n+    static {\n+        for (BatchMode batchMode : BatchMode.values()) {\n+            nameIndex.put(batchMode.name(), batchMode);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e68a5488e696d5e341e46ba1328c06d3ee323c3e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0MjMxNQ==", "bodyText": "if we get rid of nameIndex you can change it into:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        BatchMode lookedUpBatchMode = nameIndex.get(batchMode.toString().toUpperCase());\n          \n          \n            \n                        BatchMode lookedUpBatchMode = BatchMode.valueOf(batchMode.toString().toUpperCase());", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508#discussion_r423842315", "createdAt": "2020-05-12T15:49:19Z", "author": {"login": "conker84"}, "path": "src/main/java/apoc/periodic/BatchMode.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package apoc.periodic;\n+\n+import apoc.util.Util;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+enum BatchMode {\n+    BATCH,\n+    BATCH_SINGLE,\n+    SINGLE;\n+\n+\n+    private static final Map<String, BatchMode> nameIndex =  new HashMap<>();\n+    static {\n+        for (BatchMode batchMode : BatchMode.values()) {\n+            nameIndex.put(batchMode.name(), batchMode);\n+        }\n+    }\n+\n+   static BatchMode fromIterateList(boolean iterateList) {\n+        return iterateList ? BATCH : SINGLE;\n+    }\n+\n+    static BatchMode fromConfig(Map<String,Object> config) {\n+        Object batchMode = config.get(\"batchMode\");\n+\n+        if(batchMode != null) {\n+            BatchMode lookedUpBatchMode = nameIndex.get(batchMode.toString().toUpperCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e68a5488e696d5e341e46ba1328c06d3ee323c3e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0Mjk5NA==", "bodyText": "Maybe a better name could be PeriodicUtils?\nAnd add a private constructor so we can prevent the initialization", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1508#discussion_r423842994", "createdAt": "2020-05-12T15:50:13Z", "author": {"login": "conker84"}, "path": "src/main/java/apoc/periodic/PeriodicIterate.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package apoc.periodic;\n+\n+import apoc.util.Util;\n+import org.neo4j.internal.helpers.collection.Pair;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+public class PeriodicIterate {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e68a5488e696d5e341e46ba1328c06d3ee323c3e"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4e2997b946ddfea25afbf68212c85a9385a6c5b", "author": {"user": {"login": "mneedham", "name": "Mark Needham"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/f4e2997b946ddfea25afbf68212c85a9385a6c5b", "committedDate": "2020-05-13T13:13:46Z", "message": "introduce batchMode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0fd6c0390e4fb71ad2f2049e3d6886208afbe92", "author": {"user": {"login": "mneedham", "name": "Mark Needham"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/d0fd6c0390e4fb71ad2f2049e3d6886208afbe92", "committedDate": "2020-05-13T13:13:46Z", "message": "Wire up batch mode -> iterateList -> BATCH defaults"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e97c48221ab2a9800f6d96d7b972468bdf3b4687", "author": {"user": {"login": "mneedham", "name": "Mark Needham"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/e97c48221ab2a9800f6d96d7b972468bdf3b4687", "committedDate": "2020-05-13T13:13:46Z", "message": "tidying up the periodic execution docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c7f1b006594a30709185612d6123356c87b4cc4", "author": {"user": {"login": "mneedham", "name": "Mark Needham"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/9c7f1b006594a30709185612d6123356c87b4cc4", "committedDate": "2020-05-13T13:13:46Z", "message": "add docs explaining how to use BATCH_SINGLE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86f8e2302f34193ec34fa3e96a7e17a9da42d64b", "author": {"user": {"login": "mneedham", "name": "Mark Needham"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/86f8e2302f34193ec34fa3e96a7e17a9da42d64b", "committedDate": "2020-05-13T13:13:46Z", "message": "operation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63f07c2b8b754cd0389ad3776845c046b4e8f8fa", "author": {"user": {"login": "mneedham", "name": "Mark Needham"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/63f07c2b8b754cd0389ad3776845c046b4e8f8fa", "committedDate": "2020-05-13T13:13:46Z", "message": "remove outer and inner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f21894091d410059f6d3cbb6a35b3c71d2fafb5d", "author": {"user": {"login": "mneedham", "name": "Mark Needham"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/f21894091d410059f6d3cbb6a35b3c71d2fafb5d", "committedDate": "2020-05-13T13:13:46Z", "message": "inline iterateList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf502154d92e7ebd90b920cd90ed478691a83d3b", "author": {"user": {"login": "mneedham", "name": "Mark Needham"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/bf502154d92e7ebd90b920cd90ed478691a83d3b", "committedDate": "2020-05-13T13:14:44Z", "message": "andrea feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e68a5488e696d5e341e46ba1328c06d3ee323c3e", "author": {"user": {"login": "mneedham", "name": "Mark Needham"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/e68a5488e696d5e341e46ba1328c06d3ee323c3e", "committedDate": "2020-05-12T15:42:08Z", "message": "inline iterateList"}, "afterCommit": {"oid": "bf502154d92e7ebd90b920cd90ed478691a83d3b", "author": {"user": {"login": "mneedham", "name": "Mark Needham"}}, "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/commit/bf502154d92e7ebd90b920cd90ed478691a83d3b", "committedDate": "2020-05-13T13:14:44Z", "message": "andrea feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 923, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}