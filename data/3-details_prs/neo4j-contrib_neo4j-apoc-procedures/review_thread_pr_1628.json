{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNjkyNzM5", "number": 1628, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzozOTozM1rOEbDTzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzozOTozM1rOEbDTzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODAxMjI4OnYy", "diffSide": "RIGHT", "path": "full/src/main/java/apoc/systemdb/SystemDb.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzozOTozM1rOHE1vkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzo1MjoyOVrOHJZ2Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgzNjg4MQ==", "bodyText": "should there be some explicit call to roll back on errors?", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1628#discussion_r474836881", "createdAt": "2020-08-21T17:39:33Z", "author": {"login": "eastlondoner"}, "path": "full/src/main/java/apoc/systemdb/SystemDb.java", "diffHunk": "@@ -63,9 +64,23 @@ public NodesAndRelationshipsResult(List<Node> nodes, List<Relationship> relation\n     }\n \n     @Procedure\n-    public Stream<RowResult> execute(@Name(\"DDL command\") String command, @Name(value=\"params\", defaultValue = \"{}\") Map<String ,Object> params) {\n+    public Stream<RowResult> execute(@Name(\"DDL commands, either a string or a list of strings\") Object ddlStringOrList, @Name(value=\"params\", defaultValue = \"{}\") Map<String ,Object> params) {\n         Util.checkAdmin(securityContext,\"apoc.systemdb.execute\");\n-        return withSystemDbTransaction(tx -> tx.execute(command, params).stream().map(map -> new RowResult(map)));\n+\n+        List<String> commands;\n+        if (ddlStringOrList instanceof String) {\n+            commands = Collections.singletonList((String)ddlStringOrList);\n+        } else if (ddlStringOrList instanceof List) {\n+            commands = (List<String>) ddlStringOrList;\n+        } else {\n+            throw new IllegalArgumentException(\"don't know how to handle \" + ddlStringOrList + \". Supply either a string or a list of strings\");\n+        }\n+\n+        Transaction tx = apocConfig.getSystemDb().beginTx();  // we can't use try-with-resources otherwise tx gets closed too early\n+        return commands.stream().flatMap(command -> tx.execute(command, params).stream().map(RowResult::new)).onClose(() -> {\n+            tx.commit();\n+            tx.close();\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1c6c8b2497f1ebc7cbc689c811d528001afbff4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYyMjcyNw==", "bodyText": "rollback happens automatically if tx.execute fails. I've added a check to only do tx.commit if the tx is still open, see below.", "url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/pull/1628#discussion_r479622727", "createdAt": "2020-08-29T07:52:29Z", "author": {"login": "sarmbruster"}, "path": "full/src/main/java/apoc/systemdb/SystemDb.java", "diffHunk": "@@ -63,9 +64,23 @@ public NodesAndRelationshipsResult(List<Node> nodes, List<Relationship> relation\n     }\n \n     @Procedure\n-    public Stream<RowResult> execute(@Name(\"DDL command\") String command, @Name(value=\"params\", defaultValue = \"{}\") Map<String ,Object> params) {\n+    public Stream<RowResult> execute(@Name(\"DDL commands, either a string or a list of strings\") Object ddlStringOrList, @Name(value=\"params\", defaultValue = \"{}\") Map<String ,Object> params) {\n         Util.checkAdmin(securityContext,\"apoc.systemdb.execute\");\n-        return withSystemDbTransaction(tx -> tx.execute(command, params).stream().map(map -> new RowResult(map)));\n+\n+        List<String> commands;\n+        if (ddlStringOrList instanceof String) {\n+            commands = Collections.singletonList((String)ddlStringOrList);\n+        } else if (ddlStringOrList instanceof List) {\n+            commands = (List<String>) ddlStringOrList;\n+        } else {\n+            throw new IllegalArgumentException(\"don't know how to handle \" + ddlStringOrList + \". Supply either a string or a list of strings\");\n+        }\n+\n+        Transaction tx = apocConfig.getSystemDb().beginTx();  // we can't use try-with-resources otherwise tx gets closed too early\n+        return commands.stream().flatMap(command -> tx.execute(command, params).stream().map(RowResult::new)).onClose(() -> {\n+            tx.commit();\n+            tx.close();\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgzNjg4MQ=="}, "originalCommit": {"oid": "e1c6c8b2497f1ebc7cbc689c811d528001afbff4"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4273, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}