{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5ODc5NDc5", "number": 159, "title": "Store package parameters in kernel config for use in future deployments", "bodyText": "Issue #, if available:\nhttps://issues.amazon.com/issues/P34431383\nDescription of changes:\nStore package parameters in kernel config so that when a next deployment comes in for a different group with no values set, previously set values are retained\nMove the service locate method to Kernel from EvergreenService.java and make it non static so it's easy to stub from tests\nWhy is this change necessary:\nPlease see the description above\nHow was this change tested:\nmvn verify succeeded\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-04-06T20:11:56Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159", "merged": true, "mergeCommit": {"oid": "f40aafeed126d49383f0e7ad4f31849fbbb1dfee"}, "closed": true, "closedAt": "2020-04-08T22:40:23Z", "author": {"login": "shaguptashaikh"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVEqAwAFqTM4ODU4NDYxMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVvgkMAFqTM5MDM3MTEzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTg0NjEw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-388584610", "createdAt": "2020-04-06T20:17:20Z", "commit": {"oid": "8c411f0f2188fedf3a2cb30eb4cd1e58408428e0"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDoxNzoyMFrOGBoQ3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDoyMzo0M1rOGBoeqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2MTQzNw==", "bodyText": "Not sure this method is needed, but in any case you should remove the this as that will cause a PMD violation.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r404361437", "createdAt": "2020-04-06T20:17:20Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -866,6 +790,10 @@ public String getName() {\n         return config == null ? getClass().getSimpleName() : config.getName();\n     }\n \n+    public Node getServiceChildConfig(String configKey) {\n+        return this.config.getChild(configKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c411f0f2188fedf3a2cb30eb4cd1e58408428e0"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2MjAxMA==", "bodyText": "I know this was there before, but I don't think we have any empty catches anymore, so let's get rid of this.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r404362010", "createdAt": "2020-04-06T20:18:21Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -664,4 +667,82 @@ private void removeServices(List<String> serviceToRemove) throws InterruptedExce\n                 .collect(Collectors.toList());\n \n     }\n+\n+\n+    /**\n+     * Locate an EvergreenService by name in the kernel context.\n+     *\n+     * @param name    name of the service to find\n+     * @return found service or null\n+     * @throws ServiceLoadException if service cannot load\n+     */\n+    @SuppressWarnings({\"checkstyle:emptycatchblock\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c411f0f2188fedf3a2cb30eb4cd1e58408428e0"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2MzkzMA==", "bodyText": "I do wonder if this should be a separate top-level key like \"services\" we can have \"parameters\", instead of being under each package. Because I think we will want a global param store for things like secrets and directory paths which are not unique to a package, but can be substituted in many locations.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r404363930", "createdAt": "2020-04-06T20:21:53Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -185,4 +194,21 @@ private Object interpolate(Object configValue, Set<PackageParameter> packagePara\n         }\n         return Collections.emptySet();\n     }\n+\n+    /*\n+     * Get parameter values for a package stored in config that were set by customer in previous deployment.\n+     */\n+    private Set<PackageParameter> getParametersStoredInConfig(String packageName) {\n+        try {\n+            EvergreenService service = kernel.locate(packageName);\n+            Node parametersConfig = service.getServiceChildConfig(PARAMETERS_CONFIG_KEY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c411f0f2188fedf3a2cb30eb4cd1e58408428e0"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2NDI1MA==", "bodyText": "Use your public static const for \"parameters\"?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r404364250", "createdAt": "2020-04-06T20:22:30Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolverTest.java", "diffHunk": "@@ -131,9 +143,12 @@ public void GIVEN_deployment_for_existing_package_WHEN_config_resolution_request\n \n         when(packageStore.getRecipe(rootPackageIdentifier)).thenReturn(rootPackage);\n         when(kernel.getMain()).thenReturn(mainService);\n+        when(kernel.locate(TEST_INPUT_PACKAGE_A)).thenReturn(alreadyRunningService);\n         when(mainService.getName()).thenReturn(\"main\");\n         when(mainService.getDependencies()).thenReturn(Collections.singletonMap(alreadyRunningService, State.RUNNING));\n         when(alreadyRunningService.getName()).thenReturn(TEST_INPUT_PACKAGE_A);\n+        when(alreadyRunningService.getServiceChildConfig(\"parameters\")).thenReturn(alreadyRunningServiceParametersConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c411f0f2188fedf3a2cb30eb4cd1e58408428e0"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2NDk3MA==", "bodyText": "Use IsEqual http://hamcrest.org/JavaHamcrest/javadoc/1.3/org/hamcrest/core/IsEqual.html.\nInstead of .equals() which won't give you a very good error.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r404364970", "createdAt": "2020-04-06T20:23:43Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolverTest.java", "diffHunk": "@@ -190,7 +206,59 @@ public void GIVEN_deployment_with_parameters_set_WHEN_config_resolution_requeste\n                 (Map<String, String>) getServiceInstallCommand(TEST_INPUT_PACKAGE_A, servicesConfig);\n \n         assertThat(\"If parameter value was set in deployment, it should be used\",\n-                   serviceInstallCommand.get(LIFECYCLE_SCRIPT_KEY)\n+                serviceInstallCommand.get(LIFECYCLE_SCRIPT_KEY)\n+                        .equals(\"echo installing service in Package PackageA with param PackageA_Param_1_value\"));\n+\n+        assertThat(\"If not parameter value was set in deployment, the default value should be used\",\n+                getServiceRunCommand(TEST_INPUT_PACKAGE_A, servicesConfig)\n+                        .equals(\"echo running service in Package PackageA with param PackageA_Param_2_default_value\"));\n+\n+    }\n+\n+    @Test\n+    public void GIVEN_deployment_with_params_not_set_WHEN_previous_deployment_had_params_THEN_use_params_from_previous_deployment()\n+            throws Exception {\n+        // GIVEN\n+        PackageIdentifier rootPackageIdentifier =\n+                new PackageIdentifier(TEST_INPUT_PACKAGE_A, new Semver(\"1.2\", Semver.SemverType.NPM));\n+        List<PackageIdentifier> packagesToDeploy = Arrays.asList(rootPackageIdentifier);\n+\n+        Package rootPackage = getPackage(TEST_INPUT_PACKAGE_A, \"1.2\", Collections.emptyMap(),\n+                getSimpleParameterMap(TEST_INPUT_PACKAGE_A));\n+\n+        DeploymentPackageConfiguration rootPackageDeploymentConfig =\n+                new DeploymentPackageConfiguration(TEST_INPUT_PACKAGE_A, \"1.2\", \">1.0\", Collections.emptySet(),\n+                        Collections.emptyList());\n+        DeploymentDocument document = DeploymentDocument.builder().rootPackages(Arrays.asList(TEST_INPUT_PACKAGE_A))\n+                .deploymentPackageConfigurationList(Arrays.asList(rootPackageDeploymentConfig)).build();\n+\n+        when(packageStore.getRecipe(rootPackageIdentifier)).thenReturn(rootPackage);\n+        when(kernel.getMain()).thenReturn(mainService);\n+        when(kernel.locate(TEST_INPUT_PACKAGE_A)).thenReturn(alreadyRunningService);\n+        when(mainService.getName()).thenReturn(\"main\");\n+        when(mainService.getDependencies()).thenReturn(Collections.singletonMap(alreadyRunningService, State.RUNNING));\n+        when(alreadyRunningService.getName()).thenReturn(TEST_INPUT_PACKAGE_A);\n+        when(alreadyRunningService.getServiceChildConfig(\"parameters\")).thenReturn(alreadyRunningServiceParametersConfig);\n+        when(alreadyRunningServiceParametersConfig.getOnce()).thenReturn(new HashSet<>(\n+                Arrays.asList(new PackageParameter(\"PackageA_Param_1\", \"PackageA_Param_1_value\", \"STRING\"))));\n+\n+        // WHEN\n+        KernelConfigResolver kernelConfigResolver = new KernelConfigResolver(packageStore, kernel);\n+        Map<Object, Object> resolvedConfig =\n+                kernelConfigResolver.resolve(packagesToDeploy, document, Arrays.asList(TEST_INPUT_PACKAGE_A));\n+\n+        // THEN\n+        // service config\n+        Map<Object, Object> servicesConfig = (Map<Object, Object>) resolvedConfig.get(\"services\");\n+        assertThat(\"Must contain main service\", servicesConfig.containsKey(\"main\"));\n+        assertThat(\"Must contain top level package service\", servicesConfig.containsKey(TEST_INPUT_PACKAGE_A));\n+\n+        // parameter interpolation\n+        Map<String, String> serviceInstallCommand =\n+                (Map<String, String>) getServiceInstallCommand(TEST_INPUT_PACKAGE_A, servicesConfig);\n+\n+        assertThat(\"If parameter value was set in deployment, it should be used\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c411f0f2188fedf3a2cb30eb4cd1e58408428e0"}, "originalPosition": 146}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c411f0f2188fedf3a2cb30eb4cd1e58408428e0", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8c411f0f2188fedf3a2cb30eb4cd1e58408428e0", "committedDate": "2020-04-06T20:08:52Z", "message": "Store package parameters in kernel config for use in future deployments"}, "afterCommit": {"oid": "fc7aa8027648d552985375532cf829bea3e46b71", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fc7aa8027648d552985375532cf829bea3e46b71", "committedDate": "2020-04-07T00:00:17Z", "message": "Store package parameters in kernel config for use in future deployments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mjg0NjU1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-389284655", "createdAt": "2020-04-07T16:24:22Z", "commit": {"oid": "fc7aa8027648d552985375532cf829bea3e46b71"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjoyNDoyM1rOGCLwxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjoyNDoyM1rOGCLwxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk0MzA0NQ==", "bodyText": "expose config via a getter and use functions in topics to search for sub keys? I have added find/findtopics/lookup and loouptopics to Topics class in my PR", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r404943045", "createdAt": "2020-04-07T16:24:23Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -866,6 +790,10 @@ public String getName() {\n         return config == null ? getClass().getSimpleName() : config.getName();\n     }\n \n+    public Node getServiceChildConfig(String configKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc7aa8027648d552985375532cf829bea3e46b71"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzM2NzY2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-389336766", "createdAt": "2020-04-07T17:28:39Z", "commit": {"oid": "fc7aa8027648d552985375532cf829bea3e46b71"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoyODozOVrOGCOZow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoyODozOVrOGCOZow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NjI3NQ==", "bodyText": "So how does a package parameter get removed then? is it safe to assume that a missing parameter is not because it got deleted?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r404986275", "createdAt": "2020-04-07T17:28:39Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -169,7 +175,10 @@ private Object interpolate(Object configValue, Set<PackageParameter> packagePara\n         // If values for parameters were set in deployment they should be used\n         Set<PackageParameter> resolvedParams = new HashSet<>(getParametersFromDeployment(document, pkg));\n \n-        // Use defaults for parameters for which no values were set in deployment\n+        // If not set in deployment, use values from previous deployments that were stored in config\n+        resolvedParams.addAll(getParametersStoredInConfig(pkg.getPackageName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc7aa8027648d552985375532cf829bea3e46b71"}, "originalPosition": 75}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc7aa8027648d552985375532cf829bea3e46b71", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fc7aa8027648d552985375532cf829bea3e46b71", "committedDate": "2020-04-07T00:00:17Z", "message": "Store package parameters in kernel config for use in future deployments"}, "afterCommit": {"oid": "54546ec980a11420cdbae92c6c38d5a9b0c8093b", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/54546ec980a11420cdbae92c6c38d5a9b0c8093b", "committedDate": "2020-04-07T17:30:54Z", "message": "Store package parameters in kernel config for use in future deployments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54546ec980a11420cdbae92c6c38d5a9b0c8093b", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/54546ec980a11420cdbae92c6c38d5a9b0c8093b", "committedDate": "2020-04-07T17:30:54Z", "message": "Store package parameters in kernel config for use in future deployments"}, "afterCommit": {"oid": "cf7cb0c17f7cba0fa633776ce568d2698d01970a", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cf7cb0c17f7cba0fa633776ce568d2698d01970a", "committedDate": "2020-04-07T17:42:10Z", "message": "Store package parameters in kernel config for use in future deployments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf7cb0c17f7cba0fa633776ce568d2698d01970a", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cf7cb0c17f7cba0fa633776ce568d2698d01970a", "committedDate": "2020-04-07T17:42:10Z", "message": "Store package parameters in kernel config for use in future deployments"}, "afterCommit": {"oid": "e0d3b76e2778cd3a84fb0a7622408166011acd26", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e0d3b76e2778cd3a84fb0a7622408166011acd26", "committedDate": "2020-04-07T17:52:15Z", "message": "Store package parameters in kernel config for use in future deployments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzkzMTcx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-389393171", "createdAt": "2020-04-07T18:44:11Z", "commit": {"oid": "e0d3b76e2778cd3a84fb0a7622408166011acd26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0NDoxMlrOGCRQNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0NDoxMlrOGCRQNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzMzAxNA==", "bodyText": "Should we perhaps be storing them as key-value pairs so that they are translated into Topics which we can subscribe to? That way we can lookup specific parameters using find and lookup, as well as subscribe to their change.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405033014", "createdAt": "2020-04-07T18:44:12Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -185,4 +198,18 @@ private Object interpolate(Object configValue, Set<PackageParameter> packagePara\n         }\n         return Collections.emptySet();\n     }\n+\n+    /*\n+     * Get parameter values for a package stored in config that were set by customer in previous deployment.\n+     */\n+    private Set<PackageParameter> getParametersStoredInConfig(String packageName) {\n+        try {\n+            EvergreenService service = kernel.locate(packageName);\n+            Topic parametersConfig = service.getServiceConfig().lookup(PARAMETERS_CONFIG_KEY);\n+            return (Set<PackageParameter>) parametersConfig.getOnce();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d3b76e2778cd3a84fb0a7622408166011acd26"}, "originalPosition": 104}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mzk0ODUx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-389394851", "createdAt": "2020-04-07T18:46:32Z", "commit": {"oid": "e0d3b76e2778cd3a84fb0a7622408166011acd26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0NjozMlrOGCRVMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0NjozMlrOGCRVMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzNDI5MA==", "bodyText": "Use hamcrest: http://hamcrest.org/JavaHamcrest/javadoc/1.3/org/hamcrest/collection/IsMapContaining.html#hasKey(K)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405034290", "createdAt": "2020-04-07T18:46:32Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolverTest.java", "diffHunk": "@@ -190,12 +208,66 @@ public void GIVEN_deployment_with_parameters_set_WHEN_config_resolution_requeste\n                 (Map<String, String>) getServiceInstallCommand(TEST_INPUT_PACKAGE_A, servicesConfig);\n \n         assertThat(\"If parameter value was set in deployment, it should be used\",\n-                   serviceInstallCommand.get(LIFECYCLE_SCRIPT_KEY)\n-                        .equals(\"echo installing service in Package PackageA with param PackageA_Param_1_value\"));\n+                serviceInstallCommand.get(LIFECYCLE_SCRIPT_KEY),\n+                equalTo(\"echo installing service in Package PackageA \" + \"with param PackageA_Param_1_value\"));\n+\n+        assertThat(\"If not parameter value was set in deployment, the default value should be used\",\n+                getServiceRunCommand(TEST_INPUT_PACKAGE_A, servicesConfig),\n+                equalTo(\"echo running service in Package \" + \"PackageA with param PackageA_Param_2_default_value\"));\n+\n+    }\n+\n+    @Test\n+    public void GIVEN_deployment_with_params_not_set_WHEN_previous_deployment_had_params_THEN_use_params_from_previous_deployment()\n+            throws Exception {\n+        // GIVEN\n+        PackageIdentifier rootPackageIdentifier =\n+                new PackageIdentifier(TEST_INPUT_PACKAGE_A, new Semver(\"1.2\", Semver.SemverType.NPM));\n+        List<PackageIdentifier> packagesToDeploy = Arrays.asList(rootPackageIdentifier);\n+\n+        Package rootPackage = getPackage(TEST_INPUT_PACKAGE_A, \"1.2\", Collections.emptyMap(),\n+                getSimpleParameterMap(TEST_INPUT_PACKAGE_A));\n+\n+        DeploymentPackageConfiguration rootPackageDeploymentConfig =\n+                new DeploymentPackageConfiguration(TEST_INPUT_PACKAGE_A, \"1.2\", \">1.0\", Collections.emptySet(),\n+                        Collections.emptyList());\n+        DeploymentDocument document = DeploymentDocument.builder().rootPackages(Arrays.asList(TEST_INPUT_PACKAGE_A))\n+                .deploymentPackageConfigurationList(Arrays.asList(rootPackageDeploymentConfig)).build();\n+\n+        when(packageStore.getRecipe(rootPackageIdentifier)).thenReturn(rootPackage);\n+        when(kernel.getMain()).thenReturn(mainService);\n+        when(kernel.locate(TEST_INPUT_PACKAGE_A)).thenReturn(alreadyRunningService);\n+        when(mainService.getName()).thenReturn(\"main\");\n+        when(mainService.getDependencies()).thenReturn(Collections.singletonMap(alreadyRunningService, State.RUNNING));\n+        when(alreadyRunningService.getName()).thenReturn(TEST_INPUT_PACKAGE_A);\n+        when(alreadyRunningService.getServiceConfig()).thenReturn(alreadyRunningServiceConfig);\n+        when(alreadyRunningServiceConfig.lookup(KernelConfigResolver.PARAMETERS_CONFIG_KEY))\n+                .thenReturn(alreadyRunningServiceParametersConfig);\n+        when(alreadyRunningServiceParametersConfig.getOnce()).thenReturn(new HashSet<>(\n+                Arrays.asList(new PackageParameter(\"PackageA_Param_1\", \"PackageA_Param_1_value\", \"STRING\"))));\n+\n+        // WHEN\n+        KernelConfigResolver kernelConfigResolver = new KernelConfigResolver(packageStore, kernel);\n+        Map<Object, Object> resolvedConfig =\n+                kernelConfigResolver.resolve(packagesToDeploy, document, Arrays.asList(TEST_INPUT_PACKAGE_A));\n+\n+        // THEN\n+        // service config\n+        Map<Object, Object> servicesConfig = (Map<Object, Object>) resolvedConfig.get(\"services\");\n+        assertThat(\"Must contain main service\", servicesConfig.containsKey(\"main\"));\n+        assertThat(\"Must contain top level package service\", servicesConfig.containsKey(TEST_INPUT_PACKAGE_A));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d3b76e2778cd3a84fb0a7622408166011acd26"}, "originalPosition": 145}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMTg3MDk3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390187097", "createdAt": "2020-04-08T17:34:05Z", "commit": {"oid": "c5d7eb1e5031ef4acb90b9d131c0087577d9c49d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzozNDowNVrOGC5uTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzozNzo1MlrOGC52xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY5NjA3Nw==", "bodyText": "Can this be null?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405696077", "createdAt": "2020-04-08T17:34:05Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/DependencyResolver.java", "diffHunk": "@@ -331,11 +330,8 @@ private void mergeActiveRootPackages(Set<String> rootPackagesToResolve,\n \n \n     protected Optional<String> getServiceVersion(final EvergreenService service) {\n-        Node versionNode = service.config.getChild(KernelConfigResolver.VERSION_CONFIG_KEY);\n-        if (versionNode instanceof Topic) {\n-            return Optional.of(((Topic) versionNode).getOnce().toString());\n-        }\n-        return Optional.empty();\n+        Topic version = service.getServiceConfig().lookup(KernelConfigResolver.VERSION_CONFIG_KEY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d7eb1e5031ef4acb90b9d131c0087577d9c49d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY5NzUwNA==", "bodyText": "Does this only apply to new package params which are introduced the this pkg version?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405697504", "createdAt": "2020-04-08T17:36:41Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -163,13 +168,21 @@ private Object interpolate(Object configValue, Set<PackageParameter> packagePara\n \n     /*\n      * Resolve values to be used for all package parameters combining those coming from\n-     * deployment document and defaults for the rest.\n+     * deployment document, if not, those stored in the kernel config for previous\n+     * deployments and defaults for the rest.\n      */\n     private Set<PackageParameter> resolveParameterValuesToUse(DeploymentDocument document, Package pkg) {\n         // If values for parameters were set in deployment they should be used\n         Set<PackageParameter> resolvedParams = new HashSet<>(getParametersFromDeployment(document, pkg));\n \n-        // Use defaults for parameters for which no values were set in deployment\n+        // If not set in deployment, use values from previous deployments that were stored in config\n+        // Retain only those parameters which are still valid for the current version of the package\n+        Set<PackageParameter> parametersFromPreviousDeployments =\n+                getParametersStoredInConfig(pkg.getPackageName()).stream()\n+                        .filter(param -> pkg.getPackageParameters().contains(param)).collect(Collectors.toSet());\n+        resolvedParams.addAll(parametersFromPreviousDeployments);\n+\n+        // Use defaults for parameters for which no values were set in current or previous deployment\n         resolvedParams.addAll(pkg.getPackageParameters());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d7eb1e5031ef4acb90b9d131c0087577d9c49d"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY5ODI0NA==", "bodyText": "Do we need to handle the case when parametersConfig is null?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405698244", "createdAt": "2020-04-08T17:37:52Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -185,4 +198,18 @@ private Object interpolate(Object configValue, Set<PackageParameter> packagePara\n         }\n         return Collections.emptySet();\n     }\n+\n+    /*\n+     * Get parameter values for a package stored in config that were set by customer in previous deployment.\n+     */\n+    private Set<PackageParameter> getParametersStoredInConfig(String packageName) {\n+        try {\n+            EvergreenService service = kernel.locate(packageName);\n+            Topic parametersConfig = service.getServiceConfig().lookup(PARAMETERS_CONFIG_KEY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d7eb1e5031ef4acb90b9d131c0087577d9c49d"}, "originalPosition": 103}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5d7eb1e5031ef4acb90b9d131c0087577d9c49d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c5d7eb1e5031ef4acb90b9d131c0087577d9c49d", "committedDate": "2020-04-07T22:21:49Z", "message": "Address comments (will squash commit before checking in)"}, "afterCommit": {"oid": "fc36730b1b6faadc63f28f790107f6e448a3b48d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fc36730b1b6faadc63f28f790107f6e448a3b48d", "committedDate": "2020-04-08T17:38:18Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc36730b1b6faadc63f28f790107f6e448a3b48d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fc36730b1b6faadc63f28f790107f6e448a3b48d", "committedDate": "2020-04-08T17:38:18Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "206656ba1e5cbc97232f3dd87891d4d3834c1c03", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/206656ba1e5cbc97232f3dd87891d4d3834c1c03", "committedDate": "2020-04-08T17:43:26Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMTk2NjIx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390196621", "createdAt": "2020-04-08T17:47:19Z", "commit": {"oid": "206656ba1e5cbc97232f3dd87891d4d3834c1c03"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzo0NzoxOVrOGC6MAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzo0NzoxOVrOGC6MAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcwMzY4Mg==", "bodyText": "We already have this in the aftereach.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405703682", "createdAt": "2020-04-08T17:47:19Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -116,7 +115,8 @@ void GIVEN_blank_kernel_WHEN_deploy_new_services_e2e_THEN_new_services_deployed_\n         Utils.waitForJobToComplete(jobId, Duration.ofMinutes(2));\n         // Ensure that main is finished, which is its terminal state, so this means that all updates ought to be done\n         assertEquals(State.FINISHED, kernel.getMain().getState());\n-        assertEquals(State.FINISHED, EvergreenService.locate(kernel.context, \"CustomerApp\").getState());\n+        assertEquals(State.FINISHED, kernel.locate(\"CustomerApp\").getState());\n+        kernel.shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "206656ba1e5cbc97232f3dd87891d4d3834c1c03"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "206656ba1e5cbc97232f3dd87891d4d3834c1c03", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/206656ba1e5cbc97232f3dd87891d4d3834c1c03", "committedDate": "2020-04-08T17:43:26Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "eea42044d007df0a76812511a4cdc28422ec8c7d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eea42044d007df0a76812511a4cdc28422ec8c7d", "committedDate": "2020-04-08T17:53:29Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjAwMjAw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390200200", "createdAt": "2020-04-08T17:52:21Z", "commit": {"oid": "206656ba1e5cbc97232f3dd87891d4d3834c1c03"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzo1MjoyMVrOGC6XgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzo1MzoxNlrOGC6Zmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcwNjYyNA==", "bodyText": "typo: too many s. parameters", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405706624", "createdAt": "2020-04-08T17:52:21Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -185,4 +193,37 @@ private Object interpolate(Object configValue, Set<PackageParameter> packagePara\n         }\n         return Collections.emptySet();\n     }\n+\n+    /*\n+     * Get parameter values for a package stored in config that were set by customer in previous deployment.\n+     */\n+    private Set<PackageParameter> getParametersStoredInConfig(Package pkg) {\n+        try {\n+            EvergreenService service = kernel.locate(pkg.getPackageName());\n+            Set<PackageParameter> parameterssStoredInConfig = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "206656ba1e5cbc97232f3dd87891d4d3834c1c03"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcwNzE2Mg==", "bodyText": "nit:\njust use @getter?\nAlso, the name is a bit confusing since it seemed to me that this was getting the parameter value. But this is actually the parameter's type.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405707162", "createdAt": "2020-04-08T17:53:16Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/PackageParameter.java", "diffHunk": "@@ -46,5 +46,9 @@ public PackageParameter(@JsonProperty(\"name\") String name, @JsonProperty(\"value\"\n         ParameterType(final String val) {\n             this.parameterType = val;\n         }\n+\n+        public String getValue() {\n+            return parameterType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "206656ba1e5cbc97232f3dd87891d4d3834c1c03"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eea42044d007df0a76812511a4cdc28422ec8c7d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eea42044d007df0a76812511a4cdc28422ec8c7d", "committedDate": "2020-04-08T17:53:29Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "fca8eae1ee81fa210d06993f8967d81b45879cd5", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fca8eae1ee81fa210d06993f8967d81b45879cd5", "committedDate": "2020-04-08T17:58:37Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fca8eae1ee81fa210d06993f8967d81b45879cd5", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fca8eae1ee81fa210d06993f8967d81b45879cd5", "committedDate": "2020-04-08T17:58:37Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "8dd2ece855efb1fb58b83c47b96d7e829e74554a", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8dd2ece855efb1fb58b83c47b96d7e829e74554a", "committedDate": "2020-04-08T18:14:35Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8dd2ece855efb1fb58b83c47b96d7e829e74554a", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8dd2ece855efb1fb58b83c47b96d7e829e74554a", "committedDate": "2020-04-08T18:14:35Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "601312ea3ed3c0c01c730b1d1a269cfffcee25b7", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/601312ea3ed3c0c01c730b1d1a269cfffcee25b7", "committedDate": "2020-04-08T18:20:10Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "601312ea3ed3c0c01c730b1d1a269cfffcee25b7", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/601312ea3ed3c0c01c730b1d1a269cfffcee25b7", "committedDate": "2020-04-08T18:20:10Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "92564bbc52974f7b06a9e9f17f39498be3da0305", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/92564bbc52974f7b06a9e9f17f39498be3da0305", "committedDate": "2020-04-08T18:21:44Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92564bbc52974f7b06a9e9f17f39498be3da0305", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/92564bbc52974f7b06a9e9f17f39498be3da0305", "committedDate": "2020-04-08T18:21:44Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "66822f871bcc27fcdd9fb4a3756414ec3b033d2d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/66822f871bcc27fcdd9fb4a3756414ec3b033d2d", "committedDate": "2020-04-08T18:27:46Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66822f871bcc27fcdd9fb4a3756414ec3b033d2d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/66822f871bcc27fcdd9fb4a3756414ec3b033d2d", "committedDate": "2020-04-08T18:27:46Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "4ae51d0c8bfb918127bd038d02dc5761e69e7781", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4ae51d0c8bfb918127bd038d02dc5761e69e7781", "committedDate": "2020-04-08T18:38:18Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ae51d0c8bfb918127bd038d02dc5761e69e7781", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4ae51d0c8bfb918127bd038d02dc5761e69e7781", "committedDate": "2020-04-08T18:38:18Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "fbe6ea3241b87caba227c1bd140834ab0c372506", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fbe6ea3241b87caba227c1bd140834ab0c372506", "committedDate": "2020-04-08T18:40:09Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjU3ODky", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390257892", "createdAt": "2020-04-08T19:13:42Z", "commit": {"oid": "fbe6ea3241b87caba227c1bd140834ab0c372506"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxMzo0MlrOGC9Qww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxMzo0MlrOGC9Qww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1NDA1MQ==", "bodyText": "Why not create a new constructor for PackageParameter. I'm assuming that the existing constructor is just going to convert from string to ParameterType, which is pointless since we already have the type.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405754051", "createdAt": "2020-04-08T19:13:42Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -185,4 +190,37 @@ private Object interpolate(Object configValue, Set<PackageParameter> packagePara\n         }\n         return Collections.emptySet();\n     }\n+\n+    /*\n+     * Get parameter values for a package stored in config that were set by customer in previous deployment.\n+     */\n+    private Set<PackageParameter> getParametersStoredInConfig(Package pkg) {\n+        try {\n+            EvergreenService service = kernel.locate(pkg.getPackageName());\n+            Set<PackageParameter> parametersStoredInConfig = new HashSet<>();\n+\n+            // Get only those parameters which are still valid for the current version of the package\n+            pkg.getPackageParameters().forEach(parameterFromRecipe -> {\n+                Optional<String> parameterValueStoredInConfig =\n+                        getParameterValueFromServiceConfig(service, parameterFromRecipe.getName());\n+                if (parameterValueStoredInConfig.isPresent()) {\n+                    parametersStoredInConfig\n+                            .add(new PackageParameter(parameterFromRecipe.getName(), parameterValueStoredInConfig.get(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbe6ea3241b87caba227c1bd140834ab0c372506"}, "originalPosition": 104}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbe6ea3241b87caba227c1bd140834ab0c372506", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fbe6ea3241b87caba227c1bd140834ab0c372506", "committedDate": "2020-04-08T18:40:09Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "9db99bb815fb96a40e3827b9580b34063414d1be", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9db99bb815fb96a40e3827b9580b34063414d1be", "committedDate": "2020-04-08T20:02:58Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9db99bb815fb96a40e3827b9580b34063414d1be", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9db99bb815fb96a40e3827b9580b34063414d1be", "committedDate": "2020-04-08T20:02:58Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "3f2a6b304b8fc5b0b250950d727a4493e9313229", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3f2a6b304b8fc5b0b250950d727a4493e9313229", "committedDate": "2020-04-08T20:06:53Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzM1NjY1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390335665", "createdAt": "2020-04-08T21:12:18Z", "commit": {"oid": "3f2a6b304b8fc5b0b250950d727a4493e9313229"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMToxMjoxOFrOGDBKIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMToxMjoxOFrOGDBKIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgxNzg5MQ==", "bodyText": "do we need to add the resolved params under a different root to avoid name clashes", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405817891", "createdAt": "2020-04-08T21:12:18Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -92,12 +92,13 @@\n         // then change the following code accordingly\n \n         // Generate dependencies\n-        // TODO : Only platform specific dependencies should be added once deployment document and\n-        // package recipe format supports platform wise dependency specification\n-\n         List<String> dependencyServiceNames = new ArrayList<>(pkg.getDependencies().keySet());\n         resolvedServiceConfig.put(SERVICE_DEPENDENCIES_CONFIG_KEY, dependencyServiceNames);\n+\n+        // State information for deployments\n         resolvedServiceConfig.put(VERSION_CONFIG_KEY, pkg.getVersion());\n+        resolvedParams.forEach(param -> resolvedServiceConfig.putIfAbsent(param.getName(), param.getValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f2a6b304b8fc5b0b250950d727a4493e9313229"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzQwMTQ2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390340146", "createdAt": "2020-04-08T21:19:35Z", "commit": {"oid": "3f2a6b304b8fc5b0b250950d727a4493e9313229"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMToxOTozNVrOGDBYvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMToxOTozNVrOGDBYvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgyMTYyOQ==", "bodyText": "shouldn't his be kernel.locate(\"services\", \"packagename\") assuming package name = service name", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405821629", "createdAt": "2020-04-08T21:19:35Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -185,4 +190,37 @@ private Object interpolate(Object configValue, Set<PackageParameter> packagePara\n         }\n         return Collections.emptySet();\n     }\n+\n+    /*\n+     * Get parameter values for a package stored in config that were set by customer in previous deployment.\n+     */\n+    private Set<PackageParameter> getParametersStoredInConfig(Package pkg) {\n+        try {\n+            EvergreenService service = kernel.locate(pkg.getPackageName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f2a6b304b8fc5b0b250950d727a4493e9313229"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzQ1Mzg3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390345387", "createdAt": "2020-04-08T21:28:33Z", "commit": {"oid": "3f2a6b304b8fc5b0b250950d727a4493e9313229"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f2a6b304b8fc5b0b250950d727a4493e9313229", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3f2a6b304b8fc5b0b250950d727a4493e9313229", "committedDate": "2020-04-08T20:06:53Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "b5fd3d3f041400a4f6320a9a85a60bd3dedc5552", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b5fd3d3f041400a4f6320a9a85a60bd3dedc5552", "committedDate": "2020-04-08T21:32:06Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzUxMTQ2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390351146", "createdAt": "2020-04-08T21:38:47Z", "commit": {"oid": "b5fd3d3f041400a4f6320a9a85a60bd3dedc5552"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzUyNTQ2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390352546", "createdAt": "2020-04-08T21:41:23Z", "commit": {"oid": "b5fd3d3f041400a4f6320a9a85a60bd3dedc5552"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5fd3d3f041400a4f6320a9a85a60bd3dedc5552", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b5fd3d3f041400a4f6320a9a85a60bd3dedc5552", "committedDate": "2020-04-08T21:32:06Z", "message": "To be squashed, store parameters as direct config key value children of service config so that updates to them can be subscribed to"}, "afterCommit": {"oid": "5d701914b2384cdec41682448404731ef72f0ec9", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5d701914b2384cdec41682448404731ef72f0ec9", "committedDate": "2020-04-08T22:04:44Z", "message": "Store package parameters in kernel config for use in future deployments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d701914b2384cdec41682448404731ef72f0ec9", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5d701914b2384cdec41682448404731ef72f0ec9", "committedDate": "2020-04-08T22:04:44Z", "message": "Store package parameters in kernel config for use in future deployments"}, "afterCommit": {"oid": "43f82c786a6ec82587b2567d90483710cd1f73ff", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/43f82c786a6ec82587b2567d90483710cd1f73ff", "committedDate": "2020-04-08T22:06:37Z", "message": "Store package parameters in kernel config for use in future deployments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzY3Mzk2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390367396", "createdAt": "2020-04-08T22:11:08Z", "commit": {"oid": "43f82c786a6ec82587b2567d90483710cd1f73ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjoxMTowOVrOGDCydg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjoxMTowOVrOGDCydg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg0NDU5OA==", "bodyText": "Please don't add this ignore. It needs to be thought through better.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405844598", "createdAt": "2020-04-08T22:11:09Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -750,7 +669,7 @@ protected void shutdown() throws InterruptedException {\n      *\n      * @return future completes when the lifecycle thread shuts down.\n      */\n-    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n+    @SuppressWarnings({\"PMD.AvoidCatchingGenericException\", \"PMD.AvoidGettingFutureWithoutTimeout\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43f82c786a6ec82587b2567d90483710cd1f73ff"}, "originalPosition": 130}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzY3NTI5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390367529", "createdAt": "2020-04-08T22:11:24Z", "commit": {"oid": "43f82c786a6ec82587b2567d90483710cd1f73ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjoxMToyNVrOGDCy5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjoxMToyNVrOGDCy5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg0NDcxMA==", "bodyText": "Same here.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#discussion_r405844710", "createdAt": "2020-04-08T22:11:25Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -658,11 +661,12 @@ protected void waitForServicesToStart(Set<EvergreenService> servicesToTrack,\n         }\n     }\n \n+    @SuppressWarnings(\"PMD.AvoidGettingFutureWithoutTimeout\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43f82c786a6ec82587b2567d90483710cd1f73ff"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzY4MDk2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390368096", "createdAt": "2020-04-08T22:12:45Z", "commit": {"oid": "43f82c786a6ec82587b2567d90483710cd1f73ff"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "033736bdee3216128b4d43947666c8c69e6d4dba", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/033736bdee3216128b4d43947666c8c69e6d4dba", "committedDate": "2020-04-08T22:15:12Z", "message": "Store package parameters in kernel config for use in future deployments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43f82c786a6ec82587b2567d90483710cd1f73ff", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/43f82c786a6ec82587b2567d90483710cd1f73ff", "committedDate": "2020-04-08T22:06:37Z", "message": "Store package parameters in kernel config for use in future deployments"}, "afterCommit": {"oid": "033736bdee3216128b4d43947666c8c69e6d4dba", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/033736bdee3216128b4d43947666c8c69e6d4dba", "committedDate": "2020-04-08T22:15:12Z", "message": "Store package parameters in kernel config for use in future deployments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzcwMDU3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390370057", "createdAt": "2020-04-08T22:17:06Z", "commit": {"oid": "033736bdee3216128b4d43947666c8c69e6d4dba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzcxMTM0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/159#pullrequestreview-390371134", "createdAt": "2020-04-08T22:19:36Z", "commit": {"oid": "033736bdee3216128b4d43947666c8c69e6d4dba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2416, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}