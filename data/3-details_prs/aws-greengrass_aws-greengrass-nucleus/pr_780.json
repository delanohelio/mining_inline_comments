{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MjYwOTY5", "number": 780, "title": "Read in config.yaml only when requested", "bodyText": "Issue #, if available:\nDescription of changes:\nThis change modifies the config file reading behavior when the nucleus starts up. Presently, it will load in the tlog, then the config yaml file (if they exist) and then it will rewrite the config yaml file.\nThis change modifies the logic, adding a new command line argument --init-config/-init.\nThe new logic is:\n\nIf tlog exists, read it\nMaybe read in yaml file. Read it if it exists and the tlog does not exist, or the path was provided using --init-config\nWrite merged config into effectiveConfig.yaml instead of config.yaml\n\nWhy is this change necessary:\nWithout this change, the tlog and yaml files get out of sync since the yaml is only written when the nucleus starts up. This causes nodes which have been removed from the tlog (but are still present in yaml) to be added back into the running config, which is not correct.\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-12-10T21:13:55Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780", "merged": true, "mergeCommit": {"oid": "6c3de1860d43e88967df4d6d81f39a66c0627583"}, "closed": true, "closedAt": "2020-12-11T02:58:16Z", "author": {"login": "MikeDombo"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdk6r-TAFqTU0OTYzODY4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdk-HQegH2gAyNTM2MjYwOTY5OmE4Y2Q3ZTRmMWM5ZDUxODk3MzFkOTY2NWZhMGNmODEyMDMxOTI4ODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjM4Njgy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#pullrequestreview-549638682", "createdAt": "2020-12-10T22:01:02Z", "commit": {"oid": "7898983e34d26ea0a460b0e5b7e0c183b8cbb76b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjowMTowMlrOIDfPTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjowMTowMlrOIDfPTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUyODQ2MQ==", "bodyText": "Kernel update uses this to override the config file to read. It has to be either getProvidedConfigPathName or transactionLogPath, and in order", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#discussion_r540528461", "createdAt": "2020-12-10T22:01:02Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelLifecycle.java", "diffHunk": "@@ -143,21 +142,14 @@ void initConfigAndTlog() {\n         try {\n             Path transactionLogPath = nucleusPaths.configPath().resolve(Kernel.DEFAULT_CONFIG_TLOG_FILE);\n             Path configurationFile = nucleusPaths.configPath().resolve(Kernel.DEFAULT_CONFIG_YAML_FILE);\n-            if (Objects.nonNull(kernelCommandLine.getProvidedConfigPathName())) {\n-                // If a config file is provided, kernel will use the provided file as a new base\n-                // and ignore existing config and tlog files.\n-                // This ideally should only used for testing and not in production\n-                kernel.getConfig().read(kernelCommandLine.getProvidedConfigPathName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7898983e34d26ea0a460b0e5b7e0c183b8cbb76b"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7898983e34d26ea0a460b0e5b7e0c183b8cbb76b", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7898983e34d26ea0a460b0e5b7e0c183b8cbb76b", "committedDate": "2020-12-10T21:10:07Z", "message": "Read in config.yaml only when requested"}, "afterCommit": {"oid": "8d6b1bbc5d61c52a659c37ff9de0e8c62a574db8", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8d6b1bbc5d61c52a659c37ff9de0e8c62a574db8", "committedDate": "2020-12-10T22:26:55Z", "message": "Read in config.yaml only when requested"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjU4MTky", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#pullrequestreview-549658192", "createdAt": "2020-12-10T22:32:15Z", "commit": {"oid": "8d6b1bbc5d61c52a659c37ff9de0e8c62a574db8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozMjoxNVrOIDgSqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozMjoxNVrOIDgSqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTcwNw==", "bodyText": "remove? Or do you intend to keep it for internal use?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#discussion_r540545707", "createdAt": "2020-12-10T22:32:15Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -116,6 +116,8 @@\n \n     private static final String KERNEL_CONFIG_ARG = \"--config\";\n     private static final String KERNEL_CONFIG_ARG_SHORT = \"-i\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d6b1bbc5d61c52a659c37ff9de0e8c62a574db8"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d6b1bbc5d61c52a659c37ff9de0e8c62a574db8", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8d6b1bbc5d61c52a659c37ff9de0e8c62a574db8", "committedDate": "2020-12-10T22:26:55Z", "message": "Read in config.yaml only when requested"}, "afterCommit": {"oid": "fb1d97251b09249416eae82ced8c158d70eb3a71", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fb1d97251b09249416eae82ced8c158d70eb3a71", "committedDate": "2020-12-10T22:46:50Z", "message": "Read in config.yaml only when requested"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjY4OTkz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#pullrequestreview-549668993", "createdAt": "2020-12-10T22:47:44Z", "commit": {"oid": "fb1d97251b09249416eae82ced8c158d70eb3a71"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb1d97251b09249416eae82ced8c158d70eb3a71", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fb1d97251b09249416eae82ced8c158d70eb3a71", "committedDate": "2020-12-10T22:46:50Z", "message": "Read in config.yaml only when requested"}, "afterCommit": {"oid": "a31221917fbda53c2a12ec5a6a916c7ffbb98451", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a31221917fbda53c2a12ec5a6a916c7ffbb98451", "committedDate": "2020-12-10T22:48:50Z", "message": "Read in config.yaml only when requested"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a31221917fbda53c2a12ec5a6a916c7ffbb98451", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a31221917fbda53c2a12ec5a6a916c7ffbb98451", "committedDate": "2020-12-10T22:48:50Z", "message": "Read in config.yaml only when requested"}, "afterCommit": {"oid": "d773760a3aab972f222e914a5ec74513b455100b", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d773760a3aab972f222e914a5ec74513b455100b", "committedDate": "2020-12-10T22:52:16Z", "message": "Read in config.yaml only when requested"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d773760a3aab972f222e914a5ec74513b455100b", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d773760a3aab972f222e914a5ec74513b455100b", "committedDate": "2020-12-10T22:52:16Z", "message": "Read in config.yaml only when requested"}, "afterCommit": {"oid": "1c2a55e5071cdc8dd473eafbfb1711c86eed3511", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1c2a55e5071cdc8dd473eafbfb1711c86eed3511", "committedDate": "2020-12-10T22:57:14Z", "message": "Read in config.yaml only when requested"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c2a55e5071cdc8dd473eafbfb1711c86eed3511", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1c2a55e5071cdc8dd473eafbfb1711c86eed3511", "committedDate": "2020-12-10T22:57:14Z", "message": "Read in config.yaml only when requested"}, "afterCommit": {"oid": "b79572c643d8c03b016b124909a7204599800e53", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b79572c643d8c03b016b124909a7204599800e53", "committedDate": "2020-12-10T23:01:52Z", "message": "Read in config.yaml only when requested"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b79572c643d8c03b016b124909a7204599800e53", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b79572c643d8c03b016b124909a7204599800e53", "committedDate": "2020-12-10T23:01:52Z", "message": "Read in config.yaml only when requested"}, "afterCommit": {"oid": "f6fc620eda82861910d6b2e1a33e44fc28cbeb3e", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f6fc620eda82861910d6b2e1a33e44fc28cbeb3e", "committedDate": "2020-12-10T23:09:45Z", "message": "Read in config.yaml only when requested"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6b5c6bbd86c79b8c1dd50e1983dc5b33f502ee0", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f6b5c6bbd86c79b8c1dd50e1983dc5b33f502ee0", "committedDate": "2020-12-10T23:29:50Z", "message": "Dump effective config when shutting down, not only when we start up"}, "afterCommit": {"oid": "c0031061658accdb1631452a8a565ca4ffcacc58", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c0031061658accdb1631452a8a565ca4ffcacc58", "committedDate": "2020-12-10T23:43:41Z", "message": "Dump effective config when shutting down, not only when we start up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NzEzMzg2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#pullrequestreview-549713386", "createdAt": "2020-12-11T00:17:26Z", "commit": {"oid": "c0031061658accdb1631452a8a565ca4ffcacc58"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMDoxNzoyNlrOIDjaCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMDo1MjoxNVrOIDkLJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5Njc0Ng==", "bodyText": "Same question. Where are they kept?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#discussion_r540596746", "createdAt": "2020-12-11T00:17:26Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -116,6 +116,8 @@\n \n     private static final String KERNEL_CONFIG_ARG = \"--config\";\n     private static final String KERNEL_CONFIG_ARG_SHORT = \"-i\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTcwNw=="}, "originalCommit": {"oid": "8d6b1bbc5d61c52a659c37ff9de0e8c62a574db8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5ODg0Nw==", "bodyText": "is the original --config kept for our UAT?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#discussion_r540598847", "createdAt": "2020-12-11T00:23:13Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "diffHunk": "@@ -93,6 +95,12 @@ public void parseArgs(String... args) {\n                     Objects.requireNonNull(configArg, \"-i or --config requires an argument\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0031061658accdb1631452a8a565ca4ffcacc58"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYwNDA4Mw==", "bodyText": "Remove this comment? It doesn't sound accurate. This branch seems being used in kernel update.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#discussion_r540604083", "createdAt": "2020-12-11T00:37:44Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelLifecycle.java", "diffHunk": "@@ -142,27 +143,36 @@ void initConfigAndTlog(String configFilePath) {\n     void initConfigAndTlog() {\n         try {\n             Path transactionLogPath = nucleusPaths.configPath().resolve(Kernel.DEFAULT_CONFIG_TLOG_FILE);\n-            Path configurationFile = nucleusPaths.configPath().resolve(Kernel.DEFAULT_CONFIG_YAML_FILE);\n+\n             if (Objects.nonNull(kernelCommandLine.getProvidedConfigPathName())) {\n                 // If a config file is provided, kernel will use the provided file as a new base\n                 // and ignore existing config and tlog files.\n                 // This ideally should only used for testing and not in production", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0031061658accdb1631452a8a565ca4ffcacc58"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYwNTU4Ng==", "bodyText": "What's in the default config.yaml? Do we want to rename it to defaultConfig.yaml?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#discussion_r540605586", "createdAt": "2020-12-11T00:42:04Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/Kernel.java", "diffHunk": "@@ -87,7 +87,8 @@\n     public static final String SERVICE_TYPE_TOPIC_KEY = \"componentType\";\n     public static final String SERVICE_TYPE_TO_CLASS_MAP_KEY = \"componentTypeToClassMap\";\n     private static final String PLUGIN_SERVICE_TYPE_NAME = \"plugin\";\n-    static final String DEFAULT_CONFIG_YAML_FILE = \"config.yaml\";\n+    static final String DEFAULT_CONFIG_YAML_FILE_READ = \"config.yaml\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0031061658accdb1631452a8a565ca4ffcacc58"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYwNzQzMA==", "bodyText": "Isn't this duplicate of line174?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#discussion_r540607430", "createdAt": "2020-12-11T00:46:47Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelLifecycle.java", "diffHunk": "@@ -142,27 +143,36 @@ void initConfigAndTlog(String configFilePath) {\n     void initConfigAndTlog() {\n         try {\n             Path transactionLogPath = nucleusPaths.configPath().resolve(Kernel.DEFAULT_CONFIG_TLOG_FILE);\n-            Path configurationFile = nucleusPaths.configPath().resolve(Kernel.DEFAULT_CONFIG_YAML_FILE);\n+\n             if (Objects.nonNull(kernelCommandLine.getProvidedConfigPathName())) {\n                 // If a config file is provided, kernel will use the provided file as a new base\n                 // and ignore existing config and tlog files.\n                 // This ideally should only used for testing and not in production\n                 kernel.getConfig().read(kernelCommandLine.getProvidedConfigPathName());\n             } else {\n-                // if tlog presents, read the tlog first, because the yaml config file may not be up to date\n-                if (Files.exists(transactionLogPath)) {\n+                Path externalConfig = nucleusPaths.configPath().resolve(Kernel.DEFAULT_CONFIG_YAML_FILE_READ);\n+                boolean externalConfigFromCmd = Utils.isNotEmpty(kernelCommandLine.getProvidedInitialConfigPath());\n+                if (externalConfigFromCmd) {\n+                    externalConfig = Paths.get(kernelCommandLine.getProvidedInitialConfigPath());\n+                }\n+\n+                boolean tlogExists = Files.exists(transactionLogPath);\n+                boolean externalConfigExists = Files.exists(externalConfig);\n+\n+                // if tlog is present, read the tlog first because the yaml config file may not be up to date\n+                if (tlogExists) {\n                     kernel.getConfig().read(transactionLogPath);\n                 }\n \n-                // if configuration file is available, merge it. It will be merged with file's last modified timestamp\n-                if (Files.exists(configurationFile)) {\n-                    kernel.getConfig().read(configurationFile);\n+                // If there is no tlog, or the path was provided via commandline, read in that file\n+                if ((externalConfigFromCmd || !tlogExists) && externalConfigExists) {\n+                    kernel.getConfig().read(externalConfig);\n                 }\n             }\n \n             // write new tlog and config files\n             kernel.writeEffectiveConfigAsTransactionLog(transactionLogPath);\n-            kernel.writeEffectiveConfig(configurationFile);\n+            kernel.writeEffectiveConfig();\n \n             // hook tlog to config\n             tlog = ConfigurationWriter.logTransactionsTo(kernel.getConfig(), transactionLogPath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0031061658accdb1631452a8a565ca4ffcacc58"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYwODQzNw==", "bodyText": "What if none of these three exists? Do we handle that?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#discussion_r540608437", "createdAt": "2020-12-11T00:49:44Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelLifecycle.java", "diffHunk": "@@ -142,27 +143,36 @@ void initConfigAndTlog(String configFilePath) {\n     void initConfigAndTlog() {\n         try {\n             Path transactionLogPath = nucleusPaths.configPath().resolve(Kernel.DEFAULT_CONFIG_TLOG_FILE);\n-            Path configurationFile = nucleusPaths.configPath().resolve(Kernel.DEFAULT_CONFIG_YAML_FILE);\n+\n             if (Objects.nonNull(kernelCommandLine.getProvidedConfigPathName())) {\n                 // If a config file is provided, kernel will use the provided file as a new base\n                 // and ignore existing config and tlog files.\n                 // This ideally should only used for testing and not in production\n                 kernel.getConfig().read(kernelCommandLine.getProvidedConfigPathName());\n             } else {\n-                // if tlog presents, read the tlog first, because the yaml config file may not be up to date\n-                if (Files.exists(transactionLogPath)) {\n+                Path externalConfig = nucleusPaths.configPath().resolve(Kernel.DEFAULT_CONFIG_YAML_FILE_READ);\n+                boolean externalConfigFromCmd = Utils.isNotEmpty(kernelCommandLine.getProvidedInitialConfigPath());\n+                if (externalConfigFromCmd) {\n+                    externalConfig = Paths.get(kernelCommandLine.getProvidedInitialConfigPath());\n+                }\n+\n+                boolean tlogExists = Files.exists(transactionLogPath);\n+                boolean externalConfigExists = Files.exists(externalConfig);\n+\n+                // if tlog is present, read the tlog first because the yaml config file may not be up to date\n+                if (tlogExists) {\n                     kernel.getConfig().read(transactionLogPath);\n                 }\n \n-                // if configuration file is available, merge it. It will be merged with file's last modified timestamp\n-                if (Files.exists(configurationFile)) {\n-                    kernel.getConfig().read(configurationFile);\n+                // If there is no tlog, or the path was provided via commandline, read in that file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0031061658accdb1631452a8a565ca4ffcacc58"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYwOTMxNw==", "bodyText": "What do customers expect to provide? Is there a document describing that?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#discussion_r540609317", "createdAt": "2020-12-11T00:52:15Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/easysetup/README.md", "diffHunk": "@@ -22,8 +22,8 @@ OPTIONS\n                                 create the AWS resources that it requires.\n --root, -r                      (Optional) The path to the folder to use as the root for the AWS IoT Greengrass Core software. \n                                 Defaults to ~/.greengrass.\n---config, -i                    (Optional) The path to the configuration file with which to run the AWS IoT Greengrass Core\n-                                software. Defaults to config/config.yaml in the root folder.\n+--init-config, -init            (Optional) The path to the configuration file with which to run the AWS IoT Greengrass Core", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0031061658accdb1631452a8a565ca4ffcacc58"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e74a3a804a4c253d8022a2a21124b0a6e7829049", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e74a3a804a4c253d8022a2a21124b0a6e7829049", "committedDate": "2020-12-11T00:58:16Z", "message": "Read in config.yaml only when requested"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5f4650396d18e67315e3feeb4b496b0cab4f050", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b5f4650396d18e67315e3feeb4b496b0cab4f050", "committedDate": "2020-12-11T00:58:16Z", "message": "Dump effective config when shutting down, not only when we start up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "440a85621a66e53d74e41cf033305af7c0e71e1e", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/440a85621a66e53d74e41cf033305af7c0e71e1e", "committedDate": "2020-12-11T01:15:27Z", "message": "PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c501783b811c3052fd5255fea043a4de80975db2", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c501783b811c3052fd5255fea043a4de80975db2", "committedDate": "2020-12-11T00:47:26Z", "message": "Merge branch 'master' into config-explicit"}, "afterCommit": {"oid": "440a85621a66e53d74e41cf033305af7c0e71e1e", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/440a85621a66e53d74e41cf033305af7c0e71e1e", "committedDate": "2020-12-11T01:15:27Z", "message": "PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NzM4NjE4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/780#pullrequestreview-549738618", "createdAt": "2020-12-11T01:28:59Z", "commit": {"oid": "440a85621a66e53d74e41cf033305af7c0e71e1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58d8337d585cb75e802f14457a9bdd92ab3264d7", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/58d8337d585cb75e802f14457a9bdd92ab3264d7", "committedDate": "2020-12-11T01:59:14Z", "message": "Merge branch 'master' into config-explicit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8cd7e4f1c9d5189731d9665fa0cf81203192883", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a8cd7e4f1c9d5189731d9665fa0cf81203192883", "committedDate": "2020-12-11T02:00:33Z", "message": "Merge branch 'master' into config-explicit"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2566, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}