{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MTAxOTY5", "number": 262, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxMTowMlrOEBccNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxMTozM1rOEBcc0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTUwMDA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxMTowMlrOGdS1ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzozNjo1OVrOGdTrng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3MDUyNg==", "bodyText": "I don't think that this is exactly correct because it should try to read the config.yaml file from the root dir if nothing is specified. This logic should be even after that. Perhaps in the kernel launch.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/262#discussion_r433370526", "createdAt": "2020-06-01T17:11:02Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -95,6 +97,12 @@ public void parseArgs(String... args) {\n                     throw rte;\n             }\n         }\n+        // If no config path was given then initialize with default blank config\n+        if (!haveRead) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6adb692742410ecf12f28cfad076ef95141a4b4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4NDM1MA==", "bodyText": "I think it shouldn't matter, because if you want to launch the kernel then main service has to exist. In case if you have to look up config in the root.config folder it means that the config is not coming from outside but was written either before crash or was streamed/copied from some other device, and so it must have main service. After removing the child tree for lifecycle it does and means the same as doing this after reading from those files in the KernelLifecycle class. I have moved this there while trying to fix the build but either way it doesn't matter", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/262#discussion_r433384350", "createdAt": "2020-06-01T17:36:59Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -95,6 +97,12 @@ public void parseArgs(String... args) {\n                     throw rte;\n             }\n         }\n+        // If no config path was given then initialize with default blank config\n+        if (!haveRead) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3MDUyNg=="}, "originalCommit": {"oid": "a6adb692742410ecf12f28cfad076ef95141a4b4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTUwMTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxMTozM1rOGdS2mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzozMjo0OVrOGdTjGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3MDc3Ng==", "bodyText": "You don't need to provide and should not provide a run by default.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/262#discussion_r433370776", "createdAt": "2020-06-01T17:11:33Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -95,6 +97,12 @@ public void parseArgs(String... args) {\n                     throw rte;\n             }\n         }\n+        // If no config path was given then initialize with default blank config\n+        if (!haveRead) {\n+            kernel.getConfig()\n+                    .lookup(SERVICES_NAMESPACE_TOPIC, mainServiceName, SERVICE_LIFECYCLE_NAMESPACE_TOPIC, \"run\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6adb692742410ecf12f28cfad076ef95141a4b4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4MjE2OA==", "bodyText": "Yes I realized that later", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/262#discussion_r433382168", "createdAt": "2020-06-01T17:32:49Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -95,6 +97,12 @@ public void parseArgs(String... args) {\n                     throw rte;\n             }\n         }\n+        // If no config path was given then initialize with default blank config\n+        if (!haveRead) {\n+            kernel.getConfig()\n+                    .lookup(SERVICES_NAMESPACE_TOPIC, mainServiceName, SERVICE_LIFECYCLE_NAMESPACE_TOPIC, \"run\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3MDc3Ng=="}, "originalCommit": {"oid": "a6adb692742410ecf12f28cfad076ef95141a4b4"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4753, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}