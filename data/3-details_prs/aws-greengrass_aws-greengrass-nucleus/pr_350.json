{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMDY3NTA0", "number": 350, "title": "Add loader script, kernel recipe for kernel launch and update", "bodyText": "Init commit for loader script and kernel recipe.\nAdd maven package step to package EvergreenKernel zip\nIssue #, if available:\nDescription of changes:\nCreate loader script\nCreate EvergreenKernel recipe\nAdd zip EvergreenKernel package in maven package step\nWhy is this change necessary:\nHow was this change tested:\nmanual tested by setting up directory structure and run local deployment.\nVerify that simlink is updated and script capture the exit code correctly.\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-08-04T23:52:42Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350", "merged": true, "mergeCommit": {"oid": "bb581d36d9119915c7e3295f638bfe82296ce0ee"}, "closed": true, "closedAt": "2020-08-11T19:50:29Z", "author": {"login": "ShirleyZheng92"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7_U56AFqTQ2MTg5MDE1Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc97e8yAFqTQ2NTM0MTczMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxODkwMTU2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#pullrequestreview-461890156", "createdAt": "2020-08-05T17:47:48Z", "commit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "state": "COMMENTED", "comments": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzo0Nzo0OFrOG8UOAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODoxMjowMFrOG8VCUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg5OTAxMQ==", "bodyText": "I remember we don't want to handle the case where kernel root changes.\nIs it going to be removed after {{kernel.root}} is supported?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465899011", "createdAt": "2020-08-05T17:47:48Z", "author": {"login": "hui-yang"}, "path": "EvergreenKernel-1.0.0.yaml", "diffHunk": "@@ -0,0 +1,31 @@\n+---\n+RecipeTemplateVersion: '2020-01-25'\n+ComponentName: EvergreenKernel\n+Description: Evergreen kernel\n+Publisher: Me\n+Version: '1.0.0'\n+Parameters:\n+- name: jvmOptions\n+  value: -Xms512m -Xmx512m\n+  type: STRING\n+- name: kernelRoot\n+  value: \"/\"\n+  type: STRING", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg5OTM5Mg==", "bodyText": "The supported jvm options may be a subset but I'm fine with this now", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465899392", "createdAt": "2020-08-05T17:48:29Z", "author": {"login": "hui-yang"}, "path": "EvergreenKernel-1.0.0.yaml", "diffHunk": "@@ -0,0 +1,31 @@\n+---\n+RecipeTemplateVersion: '2020-01-25'\n+ComponentName: EvergreenKernel\n+Description: Evergreen kernel\n+Publisher: Me\n+Version: '1.0.0'\n+Parameters:\n+- name: jvmOptions\n+  value: -Xms512m -Xmx512m", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwMTA2OA==", "bodyText": "These 2 steps are done in kernel before bootstrap stage.\nHere we just need to override current.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465901068", "createdAt": "2020-08-05T17:51:29Z", "author": {"login": "hui-yang"}, "path": "EvergreenKernel-1.0.0.yaml", "diffHunk": "@@ -0,0 +1,31 @@\n+---\n+RecipeTemplateVersion: '2020-01-25'\n+ComponentName: EvergreenKernel\n+Description: Evergreen kernel\n+Publisher: Me\n+Version: '1.0.0'\n+Parameters:\n+- name: jvmOptions\n+  value: -Xms512m -Xmx512m\n+  type: STRING\n+- name: kernelRoot\n+  value: \"/\"\n+  type: STRING\n+Artifacts:\n+  # TODO: add artifacts\n+Lifecycle:\n+  bootstrap:\n+    posix:\n+      script: |-\n+        set -euo pipefail\n+        # TODO: Until {{kernel.root}} is available\n+        # KERNEL_ROOT=\"{{artifacts:path}}/../../../..\"\n+        KERNEL_ROOT={{params:kernelRoot.value}}\n+        unzip \"{{artifacts:path}}/EvergreenKernel-1.0.0.zip\" -d \"$KERNEL_ROOT/lib/\"\n+        mv -f $KERNEL_ROOT/alts/current $KERNEL_ROOT/alts/old\n+        mkdir $KERNEL_ROOT/alts/current", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwMjMxNw==", "bodyText": "nit: I prefer to call it loader, which can also be a binary in other platforms.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465902317", "createdAt": "2020-08-05T17:53:26Z", "author": {"login": "hui-yang"}, "path": "assembly.xml", "diffHunk": "@@ -0,0 +1,25 @@\n+<assembly xmlns=\"http://maven.apache.org/ASSEMBLY/2.1.0\"\n+          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+          xsi:schemaLocation=\"http://maven.apache.org/ASSEMBLY/2.1.0 http://maven.apache.org/xsd/assembly-2.1.0.xsd\">\n+    <id>appserverA</id>\n+    <formats>\n+        <format>zip</format>\n+    </formats>\n+    <fileSets>\n+        <fileSet>\n+            <!--<directory>${basedir}/target</directory>-->\n+            <directory>${basedir}/target</directory>\n+            <outputDirectory>/lib</outputDirectory>\n+            <includes>\n+                <include>Evergreen.jar</include>\n+            </includes>\n+        </fileSet>\n+        <fileSet>\n+            <directory>${basedir}/scripts</directory>\n+            <outputDirectory>/bin</outputDirectory>\n+            <includes>\n+                <include>loader.sh</include>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwMzQyNg==", "bodyText": "Thanks. I'll update in my PR", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465903426", "createdAt": "2020-08-05T17:55:23Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelAlternatives.java", "diffHunk": "@@ -97,6 +97,7 @@ public void activationSucceeds() throws IOException {\n      */\n     public void prepareRollback() throws IOException {\n         if (newDir.toFile().exists()) {\n+            // TODO: newDir is not needed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwMzY2OA==", "bodyText": "Does this mean in the first-time provision, customers will launch kernel from the JAR instead of loader?\nJust want to clarify the provision experience", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465903668", "createdAt": "2020-08-05T17:55:51Z", "author": {"login": "hui-yang"}, "path": "scripts/loader.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+set -euo pipefail\n+\n+PWD=$(dirname \"$0\")\n+\n+# Assuming loader.sh is launched from \"$GG_ROOT/alts/current/distro/bin/loader.sh\"\n+GG_ROOT=$(cd $PWD/../../../..; pwd)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwNTY0OA==", "bodyText": "nit: you can add this\n  if [ ! -z ${CONFIG_FILE+x} ]; then\n    # If CONFIG_FILE is not specified, Kernel will load from default location $GG_ROOT/config/\n    OPTIONS=\"$OPTIONS --config $CONFIG_FILE\"\n  fi", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465905648", "createdAt": "2020-08-05T17:59:11Z", "author": {"login": "hui-yang"}, "path": "scripts/loader.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+set -euo pipefail\n+\n+PWD=$(dirname \"$0\")\n+\n+# Assuming loader.sh is launched from \"$GG_ROOT/alts/current/distro/bin/loader.sh\"\n+GG_ROOT=$(cd $PWD/../../../..; pwd)\n+\n+echo \"Greengrass root: \"${GG_ROOT}\n+\n+LAUNCH_DIR=\"$GG_ROOT/alts/current\"\n+\n+launch_kernel() {\n+  if [[ ! -d ${LAUNCH_DIR} ]] ; then\n+    echo FATAL: No Kernel found!\n+    exit 1\n+  fi\n+\n+  JVM_OPTIONS=$(cat \"$LAUNCH_DIR/launch.params\")\n+  # TODO: add $CONFIG_FILE\n+  OPTIONS=\"--root $GG_ROOT\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwNjg5OA==", "bodyText": "\ud83d\udc4d  Is this to fix the corner case where device crashed after current flipped to broken and before old flipped to current?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465906898", "createdAt": "2020-08-05T18:01:23Z", "author": {"login": "hui-yang"}, "path": "scripts/loader.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+set -euo pipefail\n+\n+PWD=$(dirname \"$0\")\n+\n+# Assuming loader.sh is launched from \"$GG_ROOT/alts/current/distro/bin/loader.sh\"\n+GG_ROOT=$(cd $PWD/../../../..; pwd)\n+\n+echo \"Greengrass root: \"${GG_ROOT}\n+\n+LAUNCH_DIR=\"$GG_ROOT/alts/current\"\n+\n+launch_kernel() {\n+  if [[ ! -d ${LAUNCH_DIR} ]] ; then\n+    echo FATAL: No Kernel found!\n+    exit 1\n+  fi\n+\n+  JVM_OPTIONS=$(cat \"$LAUNCH_DIR/launch.params\")\n+  # TODO: add $CONFIG_FILE\n+  OPTIONS=\"--root $GG_ROOT\"\n+  echo \"jvm options: \"${JVM_OPTIONS}\n+  java ${JVM_OPTIONS} -cp \"$LAUNCH_DIR/distro/lib/*\" com.aws.iot.evergreen.kernel.KernelCommandLine ${OPTIONS}\n+  kernel_exit_code=$?\n+  echo \"kernel exit at code: \"${kernel_exit_code}\n+}\n+\n+atomic_move() {\n+  mv -f $1 $2\n+}\n+\n+### Launch Kernel\n+if [[ -d ${GG_ROOT}/alts/old ]]; then\n+  # During deployment. Try to proceed with new kernel.\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/target.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ACTIVATION state,\n+  # and may transition into DEFAULT if success or restart into DEPLOYMENT_ROLLBACK\n+\n+elif [[ -d ${GG_ROOT}/alts/broken ]]; then\n+  # During deployment rollback.\n+  if [[ ! -d ${LAUNCH_DIR} ]] && [[ -d ${GG_ROOT}/alts/old ]]; then\n+    atomic_move ${GG_ROOT}/alts/old ${LAUNCH_DIR}\n+  fi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwNzU2MA==", "bodyText": "I think we don't need to set config file in this case. Kernel should pick up from root/config", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465907560", "createdAt": "2020-08-05T18:02:38Z", "author": {"login": "hui-yang"}, "path": "scripts/loader.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+set -euo pipefail\n+\n+PWD=$(dirname \"$0\")\n+\n+# Assuming loader.sh is launched from \"$GG_ROOT/alts/current/distro/bin/loader.sh\"\n+GG_ROOT=$(cd $PWD/../../../..; pwd)\n+\n+echo \"Greengrass root: \"${GG_ROOT}\n+\n+LAUNCH_DIR=\"$GG_ROOT/alts/current\"\n+\n+launch_kernel() {\n+  if [[ ! -d ${LAUNCH_DIR} ]] ; then\n+    echo FATAL: No Kernel found!\n+    exit 1\n+  fi\n+\n+  JVM_OPTIONS=$(cat \"$LAUNCH_DIR/launch.params\")\n+  # TODO: add $CONFIG_FILE\n+  OPTIONS=\"--root $GG_ROOT\"\n+  echo \"jvm options: \"${JVM_OPTIONS}\n+  java ${JVM_OPTIONS} -cp \"$LAUNCH_DIR/distro/lib/*\" com.aws.iot.evergreen.kernel.KernelCommandLine ${OPTIONS}\n+  kernel_exit_code=$?\n+  echo \"kernel exit at code: \"${kernel_exit_code}\n+}\n+\n+atomic_move() {\n+  mv -f $1 $2\n+}\n+\n+### Launch Kernel\n+if [[ -d ${GG_ROOT}/alts/old ]]; then\n+  # During deployment. Try to proceed with new kernel.\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/target.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ACTIVATION state,\n+  # and may transition into DEFAULT if success or restart into DEPLOYMENT_ROLLBACK\n+\n+elif [[ -d ${GG_ROOT}/alts/broken ]]; then\n+  # During deployment rollback.\n+  if [[ ! -d ${LAUNCH_DIR} ]] && [[ -d ${GG_ROOT}/alts/old ]]; then\n+    atomic_move ${GG_ROOT}/alts/old ${LAUNCH_DIR}\n+  fi\n+\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/rollback.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ROLLBACK state,\n+  # and WILL transition into DEFAULT\n+\n+else\n+  echo \"TODO: set correct config file\"\n+  # TODO: set correct config file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwODMxNA==", "bodyText": "In systemd, service can be set to \"always restart\" or \"restart on error\". We may leverage that", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465908314", "createdAt": "2020-08-05T18:04:08Z", "author": {"login": "hui-yang"}, "path": "scripts/loader.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+set -euo pipefail\n+\n+PWD=$(dirname \"$0\")\n+\n+# Assuming loader.sh is launched from \"$GG_ROOT/alts/current/distro/bin/loader.sh\"\n+GG_ROOT=$(cd $PWD/../../../..; pwd)\n+\n+echo \"Greengrass root: \"${GG_ROOT}\n+\n+LAUNCH_DIR=\"$GG_ROOT/alts/current\"\n+\n+launch_kernel() {\n+  if [[ ! -d ${LAUNCH_DIR} ]] ; then\n+    echo FATAL: No Kernel found!\n+    exit 1\n+  fi\n+\n+  JVM_OPTIONS=$(cat \"$LAUNCH_DIR/launch.params\")\n+  # TODO: add $CONFIG_FILE\n+  OPTIONS=\"--root $GG_ROOT\"\n+  echo \"jvm options: \"${JVM_OPTIONS}\n+  java ${JVM_OPTIONS} -cp \"$LAUNCH_DIR/distro/lib/*\" com.aws.iot.evergreen.kernel.KernelCommandLine ${OPTIONS}\n+  kernel_exit_code=$?\n+  echo \"kernel exit at code: \"${kernel_exit_code}\n+}\n+\n+atomic_move() {\n+  mv -f $1 $2\n+}\n+\n+### Launch Kernel\n+if [[ -d ${GG_ROOT}/alts/old ]]; then\n+  # During deployment. Try to proceed with new kernel.\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/target.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ACTIVATION state,\n+  # and may transition into DEFAULT if success or restart into DEPLOYMENT_ROLLBACK\n+\n+elif [[ -d ${GG_ROOT}/alts/broken ]]; then\n+  # During deployment rollback.\n+  if [[ ! -d ${LAUNCH_DIR} ]] && [[ -d ${GG_ROOT}/alts/old ]]; then\n+    atomic_move ${GG_ROOT}/alts/old ${LAUNCH_DIR}\n+  fi\n+\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/rollback.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ROLLBACK state,\n+  # and WILL transition into DEFAULT\n+\n+else\n+  echo \"TODO: set correct config file\"\n+  # TODO: set correct config file\n+fi\n+\n+\n+j=1\n+while [[ $j -le 3 ]]; do\n+  launch_kernel\n+  case ${kernel_exit_code} in\n+  100)\n+    # Restart Kernel by restarting loader. Assume symlinks have been flipped.\n+    echo \"Restarting kernel\"\n+    exit 0 # or exec\n+    ;;\n+  101)\n+    # Reboot device. Assume symlinks have been flipped.\n+    echo \"Rebooting host\"\n+    sudo reboot\n+    ;;\n+  0)\n+    # TODO: disable loader when kernel exit normally?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwOTI1Nw==", "bodyText": "Seems difficult to recover from these 2 scenarios. We can discuss separately", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465909257", "createdAt": "2020-08-05T18:06:01Z", "author": {"login": "hui-yang"}, "path": "scripts/loader.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+set -euo pipefail\n+\n+PWD=$(dirname \"$0\")\n+\n+# Assuming loader.sh is launched from \"$GG_ROOT/alts/current/distro/bin/loader.sh\"\n+GG_ROOT=$(cd $PWD/../../../..; pwd)\n+\n+echo \"Greengrass root: \"${GG_ROOT}\n+\n+LAUNCH_DIR=\"$GG_ROOT/alts/current\"\n+\n+launch_kernel() {\n+  if [[ ! -d ${LAUNCH_DIR} ]] ; then\n+    echo FATAL: No Kernel found!\n+    exit 1\n+  fi\n+\n+  JVM_OPTIONS=$(cat \"$LAUNCH_DIR/launch.params\")\n+  # TODO: add $CONFIG_FILE\n+  OPTIONS=\"--root $GG_ROOT\"\n+  echo \"jvm options: \"${JVM_OPTIONS}\n+  java ${JVM_OPTIONS} -cp \"$LAUNCH_DIR/distro/lib/*\" com.aws.iot.evergreen.kernel.KernelCommandLine ${OPTIONS}\n+  kernel_exit_code=$?\n+  echo \"kernel exit at code: \"${kernel_exit_code}\n+}\n+\n+atomic_move() {\n+  mv -f $1 $2\n+}\n+\n+### Launch Kernel\n+if [[ -d ${GG_ROOT}/alts/old ]]; then\n+  # During deployment. Try to proceed with new kernel.\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/target.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ACTIVATION state,\n+  # and may transition into DEFAULT if success or restart into DEPLOYMENT_ROLLBACK\n+\n+elif [[ -d ${GG_ROOT}/alts/broken ]]; then\n+  # During deployment rollback.\n+  if [[ ! -d ${LAUNCH_DIR} ]] && [[ -d ${GG_ROOT}/alts/old ]]; then\n+    atomic_move ${GG_ROOT}/alts/old ${LAUNCH_DIR}\n+  fi\n+\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/rollback.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ROLLBACK state,\n+  # and WILL transition into DEFAULT\n+\n+else\n+  echo \"TODO: set correct config file\"\n+  # TODO: set correct config file\n+fi\n+\n+\n+j=1\n+while [[ $j -le 3 ]]; do\n+  launch_kernel\n+  case ${kernel_exit_code} in\n+  100)\n+    # Restart Kernel by restarting loader. Assume symlinks have been flipped.\n+    echo \"Restarting kernel\"\n+    exit 0 # or exec\n+    ;;\n+  101)\n+    # Reboot device. Assume symlinks have been flipped.\n+    echo \"Rebooting host\"\n+    sudo reboot\n+    ;;\n+  0)\n+    # TODO: disable loader when kernel exit normally?\n+    exit 0\n+    ;;\n+  *)\n+    echo \"Kernel exit ${kernel_exit_code}. Retrying $j times\"\n+    ;;\n+  esac\n+  j=$(( j + 1 ))\n+done\n+\n+# when reaching here, kernel has restarted 3 times and fails. Keep the current status and flip symlink.\n+# 1. If old+current: Kernel update failed. flip current to broken, old to current\n+if [[ -d ${GG_ROOT}/alts/old ]] || [[ -d ${GG_ROOT}/alts/current ]]; then\n+  atomic_move ${GG_ROOT}/alts/current ${GG_ROOT}/alts/broken\n+  atomic_move ${GG_ROOT}/alts/old ${GG_ROOT}/alts/current\n+fi\n+\n+# 2. If current+broken: rollback failed and kernel crashed. What to do? start with empty config?\n+\n+# 3. If current: no rollback option. What to do??? Restart Kernel?? Keep track of broken Kernel??", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxMDM5OQ==", "bodyText": "Just a note here. I'm going to move System.exit to shutdown in a later PR", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465910399", "createdAt": "2020-08-05T18:08:18Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/activator/KernelUpdateActivator.java", "diffHunk": "@@ -66,15 +69,14 @@ public void activate(Map<Object, Object> newConfig, DeploymentDocument deploymen\n         try {\n             int exitCode = bootstrapManager.executeAllBootstrapTasksSequentially();\n             if (!bootstrapManager.hasNext()) {\n-                // TODO: flip symlinks, new to current\n                 logger.atInfo().log(\"Completed all bootstrap tasks. Continue to activate deployment changes\");\n             }\n             // If exitCode is 0, which happens when all bootstrap tasks are completed, restart in new launch\n             // directories and verify handover is complete. As a result, exit code 0 is treated as 100 here.\n             logger.atInfo().log((exitCode == 101 ? \"device reboot\" : \"kernel restart\")\n                     + \" requested to complete bootstrap task\");\n-            // TODO: Kernel shutdown supports exit code\n-            // System.exit(exitCode == 101 ? 101 : 100);\n+            // TODO: Kernel shutdown properly with exit code. Will be implemented in separate PR\n+            System.exit(exitCode == 101 ? 101 : 100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxMDk0Mw==", "bodyText": "Do you want to clean up some of the comments?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465910943", "createdAt": "2020-08-05T18:09:21Z", "author": {"login": "hui-yang"}, "path": "scripts/loader.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+set -euo pipefail\n+\n+PWD=$(dirname \"$0\")\n+\n+# Assuming loader.sh is launched from \"$GG_ROOT/alts/current/distro/bin/loader.sh\"\n+GG_ROOT=$(cd $PWD/../../../..; pwd)\n+\n+echo \"Greengrass root: \"${GG_ROOT}\n+\n+LAUNCH_DIR=\"$GG_ROOT/alts/current\"\n+\n+launch_kernel() {\n+  if [[ ! -d ${LAUNCH_DIR} ]] ; then\n+    echo FATAL: No Kernel found!\n+    exit 1\n+  fi\n+\n+  JVM_OPTIONS=$(cat \"$LAUNCH_DIR/launch.params\")\n+  # TODO: add $CONFIG_FILE\n+  OPTIONS=\"--root $GG_ROOT\"\n+  echo \"jvm options: \"${JVM_OPTIONS}\n+  java ${JVM_OPTIONS} -cp \"$LAUNCH_DIR/distro/lib/*\" com.aws.iot.evergreen.kernel.KernelCommandLine ${OPTIONS}\n+  kernel_exit_code=$?\n+  echo \"kernel exit at code: \"${kernel_exit_code}\n+}\n+\n+atomic_move() {\n+  mv -f $1 $2\n+}\n+\n+### Launch Kernel\n+if [[ -d ${GG_ROOT}/alts/old ]]; then\n+  # During deployment. Try to proceed with new kernel.\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/target.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ACTIVATION state,\n+  # and may transition into DEFAULT if success or restart into DEPLOYMENT_ROLLBACK\n+\n+elif [[ -d ${GG_ROOT}/alts/broken ]]; then\n+  # During deployment rollback.\n+  if [[ ! -d ${LAUNCH_DIR} ]] && [[ -d ${GG_ROOT}/alts/old ]]; then\n+    atomic_move ${GG_ROOT}/alts/old ${LAUNCH_DIR}\n+  fi\n+\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/rollback.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ROLLBACK state,\n+  # and WILL transition into DEFAULT\n+\n+else\n+  echo \"TODO: set correct config file\"\n+  # TODO: set correct config file\n+fi\n+\n+\n+j=1\n+while [[ $j -le 3 ]]; do\n+  launch_kernel\n+  case ${kernel_exit_code} in\n+  100)\n+    # Restart Kernel by restarting loader. Assume symlinks have been flipped.\n+    echo \"Restarting kernel\"\n+    exit 0 # or exec", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxMTkwOQ==", "bodyText": "Just a note here. atomic_move will not apply after I change current/old/broken to symlinks to directories", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465911909", "createdAt": "2020-08-05T18:11:13Z", "author": {"login": "hui-yang"}, "path": "scripts/loader.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+set -euo pipefail\n+\n+PWD=$(dirname \"$0\")\n+\n+# Assuming loader.sh is launched from \"$GG_ROOT/alts/current/distro/bin/loader.sh\"\n+GG_ROOT=$(cd $PWD/../../../..; pwd)\n+\n+echo \"Greengrass root: \"${GG_ROOT}\n+\n+LAUNCH_DIR=\"$GG_ROOT/alts/current\"\n+\n+launch_kernel() {\n+  if [[ ! -d ${LAUNCH_DIR} ]] ; then\n+    echo FATAL: No Kernel found!\n+    exit 1\n+  fi\n+\n+  JVM_OPTIONS=$(cat \"$LAUNCH_DIR/launch.params\")\n+  # TODO: add $CONFIG_FILE\n+  OPTIONS=\"--root $GG_ROOT\"\n+  echo \"jvm options: \"${JVM_OPTIONS}\n+  java ${JVM_OPTIONS} -cp \"$LAUNCH_DIR/distro/lib/*\" com.aws.iot.evergreen.kernel.KernelCommandLine ${OPTIONS}\n+  kernel_exit_code=$?\n+  echo \"kernel exit at code: \"${kernel_exit_code}\n+}\n+\n+atomic_move() {\n+  mv -f $1 $2\n+}\n+\n+### Launch Kernel\n+if [[ -d ${GG_ROOT}/alts/old ]]; then\n+  # During deployment. Try to proceed with new kernel.\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/target.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ACTIVATION state,\n+  # and may transition into DEFAULT if success or restart into DEPLOYMENT_ROLLBACK\n+\n+elif [[ -d ${GG_ROOT}/alts/broken ]]; then\n+  # During deployment rollback.\n+  if [[ ! -d ${LAUNCH_DIR} ]] && [[ -d ${GG_ROOT}/alts/old ]]; then\n+    atomic_move ${GG_ROOT}/alts/old ${LAUNCH_DIR}\n+  fi\n+\n+  # TODO: set correct config file\n+  CONFIG_FILE=\"$GG_ROOT/bin/ongoingDeployment/rollback.tlog\"\n+  # In this runtime, Kernel starts with DEPLOYMENT_ROLLBACK state,\n+  # and WILL transition into DEFAULT\n+\n+else\n+  echo \"TODO: set correct config file\"\n+  # TODO: set correct config file\n+fi\n+\n+\n+j=1\n+while [[ $j -le 3 ]]; do\n+  launch_kernel\n+  case ${kernel_exit_code} in\n+  100)\n+    # Restart Kernel by restarting loader. Assume symlinks have been flipped.\n+    echo \"Restarting kernel\"\n+    exit 0 # or exec\n+    ;;\n+  101)\n+    # Reboot device. Assume symlinks have been flipped.\n+    echo \"Rebooting host\"\n+    sudo reboot\n+    ;;\n+  0)\n+    # TODO: disable loader when kernel exit normally?\n+    exit 0\n+    ;;\n+  *)\n+    echo \"Kernel exit ${kernel_exit_code}. Retrying $j times\"\n+    ;;\n+  esac\n+  j=$(( j + 1 ))\n+done\n+\n+# when reaching here, kernel has restarted 3 times and fails. Keep the current status and flip symlink.\n+# 1. If old+current: Kernel update failed. flip current to broken, old to current\n+if [[ -d ${GG_ROOT}/alts/old ]] || [[ -d ${GG_ROOT}/alts/current ]]; then\n+  atomic_move ${GG_ROOT}/alts/current ${GG_ROOT}/alts/broken\n+  atomic_move ${GG_ROOT}/alts/old ${GG_ROOT}/alts/current", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxMjMwMw==", "bodyText": "Not sure if we should call it GreengrassCore :)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465912303", "createdAt": "2020-08-05T18:11:47Z", "author": {"login": "hui-yang"}, "path": "EvergreenKernel-1.0.0.yaml", "diffHunk": "@@ -0,0 +1,31 @@\n+---\n+RecipeTemplateVersion: '2020-01-25'\n+ComponentName: EvergreenKernel\n+Description: Evergreen kernel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxMjQwMw==", "bodyText": "maybe 2.0.0?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r465912403", "createdAt": "2020-08-05T18:12:00Z", "author": {"login": "hui-yang"}, "path": "EvergreenKernel-1.0.0.yaml", "diffHunk": "@@ -0,0 +1,31 @@\n+---\n+RecipeTemplateVersion: '2020-01-25'\n+ComponentName: EvergreenKernel\n+Description: Evergreen kernel\n+Publisher: Me\n+Version: '1.0.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e1bf29d425a05163419a97c25d09d3ceec64a2d", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8e1bf29d425a05163419a97c25d09d3ceec64a2d", "committedDate": "2020-08-07T17:44:05Z", "message": "Add loader script, kernel recipe for kernel launch and update\n\nInit commit for loader script and kernel recipe.\nAdd maven package step to package EvergreenKernel zip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83809cf754ed8503858020b1f92353a7c9ce6754", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/83809cf754ed8503858020b1f92353a7c9ce6754", "committedDate": "2020-08-07T22:11:28Z", "message": "Address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e784a2ae9021175fdd38eb072c6c1fae05a236f6", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e784a2ae9021175fdd38eb072c6c1fae05a236f6", "committedDate": "2020-08-04T23:21:52Z", "message": "Add loader script, kernel recipe for kernel launch and update\n\nInit commit for loader script and kernel recipe.\nAdd maven package step to package EvergreenKernel zip"}, "afterCommit": {"oid": "83809cf754ed8503858020b1f92353a7c9ce6754", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/83809cf754ed8503858020b1f92353a7c9ce6754", "committedDate": "2020-08-07T22:11:28Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ac9a606fb969f8a215e458f4f90f5226c48f101", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6ac9a606fb969f8a215e458f4f90f5226c48f101", "committedDate": "2020-08-10T17:21:11Z", "message": "Merge branch 'master' into loaderScript"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDQyNTQz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#pullrequestreview-464442543", "createdAt": "2020-08-10T17:45:39Z", "commit": {"oid": "6ac9a606fb969f8a215e458f4f90f5226c48f101"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NjA4NzEw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#pullrequestreview-464608710", "createdAt": "2020-08-10T21:43:16Z", "commit": {"oid": "6ac9a606fb969f8a215e458f4f90f5226c48f101"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMTo0MzoxN1rOG-g1Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMTo0MzoxN1rOG-g1Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIwMjc3OA==", "bodyText": "unzip isn't always installed. Checkout my PR: #359", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#discussion_r468202778", "createdAt": "2020-08-10T21:43:17Z", "author": {"login": "MikeDombo"}, "path": "GreengrassCore-2.0.0.yaml", "diffHunk": "@@ -0,0 +1,31 @@\n+---\n+RecipeTemplateVersion: '2020-01-25'\n+ComponentName: GreengrassCore\n+Description: GreengrassCore\n+Publisher: Me\n+Version: '2.0.0'\n+Parameters:\n+- name: jvmOptions\n+  # TODO: consider change to nested structure\n+  value: -Xms512m -Xmx512m\n+  type: STRING\n+Artifacts:\n+  # TODO: add artifacts\n+Lifecycle:\n+  bootstrap:\n+    posix:\n+      script: |-\n+        set -euo pipefail\n+        KERNEL_ROOT={{kernel:rootPath}}\n+        UNPACK_DIR={{artifacts:decompressedPath}}\n+\n+        unzip \"{{artifacts:path}}/GreengrassCore-2.0.0.zip\" -d \"$UNPACK_DIR\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac9a606fb969f8a215e458f4f90f5226c48f101"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16a60ab902a6a0ecb360d7c770fd9f55a509935f", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/16a60ab902a6a0ecb360d7c770fd9f55a509935f", "committedDate": "2020-08-10T22:24:44Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NjMxNzc5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#pullrequestreview-464631779", "createdAt": "2020-08-10T22:31:05Z", "commit": {"oid": "16a60ab902a6a0ecb360d7c770fd9f55a509935f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NjMyMjk2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#pullrequestreview-464632296", "createdAt": "2020-08-10T22:32:17Z", "commit": {"oid": "16a60ab902a6a0ecb360d7c770fd9f55a509935f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "120b5f28147a4a23c7392147ac0876e81b8f3a52", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/120b5f28147a4a23c7392147ac0876e81b8f3a52", "committedDate": "2020-08-11T02:18:17Z", "message": "Merge branch 'master' into loaderScript"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b835d2faf0727dc472741b8e75b1bb6b12b726e8", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b835d2faf0727dc472741b8e75b1bb6b12b726e8", "committedDate": "2020-08-11T16:43:38Z", "message": "Merge branch 'master' into loaderScript"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MjQ1OTAx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#pullrequestreview-465245901", "createdAt": "2020-08-11T16:44:06Z", "commit": {"oid": "b835d2faf0727dc472741b8e75b1bb6b12b726e8"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "098c371629838c035c489e8be186f8a1dbd65eef", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/098c371629838c035c489e8be186f8a1dbd65eef", "committedDate": "2020-08-11T17:17:25Z", "message": "change test coverage limit to make windows build pass"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MjkzNjgx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#pullrequestreview-465293681", "createdAt": "2020-08-11T17:48:12Z", "commit": {"oid": "098c371629838c035c489e8be186f8a1dbd65eef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "498c936e3b87950573eeb497e12195e2be6a99a3", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/498c936e3b87950573eeb497e12195e2be6a99a3", "committedDate": "2020-08-11T18:36:44Z", "message": "Merge branch 'master' into loaderScript"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MzQxNzMw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/350#pullrequestreview-465341730", "createdAt": "2020-08-11T18:53:40Z", "commit": {"oid": "498c936e3b87950573eeb497e12195e2be6a99a3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2064, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}