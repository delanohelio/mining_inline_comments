{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzNDE1ODk1", "number": 426, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1Nzo1OVrOEiNY3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1Nzo1OVrOEiNY3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzA2Mzk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelLifecycle.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1Nzo1OVrOHP9UYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDoyODo0NlrOHQN3fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NTMzMQ==", "bodyText": "I guess we do want to wait when shipping the kernel though. Is this only for test improvement temporarily?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/426#discussion_r486495331", "createdAt": "2020-09-10T16:57:59Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelLifecycle.java", "diffHunk": "@@ -262,12 +262,12 @@ public void shutdown(int timeoutSeconds) {\n             logger.atInfo().setEventType(\"system-shutdown\").addKeyValue(\"main\", getMain()).log();\n             stopAllServices(timeoutSeconds);\n \n-            // Wait for tasks in the executor to end.\n+            // Do not wait for tasks in the executor to end.\n             ScheduledExecutorService scheduledExecutorService = kernel.getContext().get(ScheduledExecutorService.class);\n             ExecutorService executorService = kernel.getContext().get(ExecutorService.class);\n             kernel.getContext().runOnPublishQueueAndWait(() -> {\n-                executorService.shutdown();\n-                scheduledExecutorService.shutdown();\n+                executorService.shutdownNow();\n+                scheduledExecutorService.shutdownNow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5650e62922ee9a8fc362819310909da5d1c0a6b4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NjI0Ng==", "bodyText": "No, I'm not sure about that actually. We give the services 30 seconds to shutdown and if they haven't died after that point, we need to just start killing stuff.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/426#discussion_r486496246", "createdAt": "2020-09-10T16:59:25Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelLifecycle.java", "diffHunk": "@@ -262,12 +262,12 @@ public void shutdown(int timeoutSeconds) {\n             logger.atInfo().setEventType(\"system-shutdown\").addKeyValue(\"main\", getMain()).log();\n             stopAllServices(timeoutSeconds);\n \n-            // Wait for tasks in the executor to end.\n+            // Do not wait for tasks in the executor to end.\n             ScheduledExecutorService scheduledExecutorService = kernel.getContext().get(ScheduledExecutorService.class);\n             ExecutorService executorService = kernel.getContext().get(ExecutorService.class);\n             kernel.getContext().runOnPublishQueueAndWait(() -> {\n-                executorService.shutdown();\n-                scheduledExecutorService.shutdown();\n+                executorService.shutdownNow();\n+                scheduledExecutorService.shutdownNow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NTMzMQ=="}, "originalCommit": {"oid": "5650e62922ee9a8fc362819310909da5d1c0a6b4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NjQ3OQ==", "bodyText": "Up for debate though", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/426#discussion_r486496479", "createdAt": "2020-09-10T16:59:45Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelLifecycle.java", "diffHunk": "@@ -262,12 +262,12 @@ public void shutdown(int timeoutSeconds) {\n             logger.atInfo().setEventType(\"system-shutdown\").addKeyValue(\"main\", getMain()).log();\n             stopAllServices(timeoutSeconds);\n \n-            // Wait for tasks in the executor to end.\n+            // Do not wait for tasks in the executor to end.\n             ScheduledExecutorService scheduledExecutorService = kernel.getContext().get(ScheduledExecutorService.class);\n             ExecutorService executorService = kernel.getContext().get(ExecutorService.class);\n             kernel.getContext().runOnPublishQueueAndWait(() -> {\n-                executorService.shutdown();\n-                scheduledExecutorService.shutdown();\n+                executorService.shutdownNow();\n+                scheduledExecutorService.shutdownNow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NTMzMQ=="}, "originalCommit": {"oid": "5650e62922ee9a8fc362819310909da5d1c0a6b4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMjExMA==", "bodyText": "@fengwa-aws any opinion?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/426#discussion_r486502110", "createdAt": "2020-09-10T17:09:30Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelLifecycle.java", "diffHunk": "@@ -262,12 +262,12 @@ public void shutdown(int timeoutSeconds) {\n             logger.atInfo().setEventType(\"system-shutdown\").addKeyValue(\"main\", getMain()).log();\n             stopAllServices(timeoutSeconds);\n \n-            // Wait for tasks in the executor to end.\n+            // Do not wait for tasks in the executor to end.\n             ScheduledExecutorService scheduledExecutorService = kernel.getContext().get(ScheduledExecutorService.class);\n             ExecutorService executorService = kernel.getContext().get(ExecutorService.class);\n             kernel.getContext().runOnPublishQueueAndWait(() -> {\n-                executorService.shutdown();\n-                scheduledExecutorService.shutdown();\n+                executorService.shutdownNow();\n+                scheduledExecutorService.shutdownNow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NTMzMQ=="}, "originalCommit": {"oid": "5650e62922ee9a8fc362819310909da5d1c0a6b4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc2NjQ2MQ==", "bodyText": "if we are forcing the executors to shut down, can you add a todo to update the stopAllServices() function to honor the shutdown timeout of each individual component. Otherwise looks good", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/426#discussion_r486766461", "createdAt": "2020-09-11T04:28:46Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelLifecycle.java", "diffHunk": "@@ -262,12 +262,12 @@ public void shutdown(int timeoutSeconds) {\n             logger.atInfo().setEventType(\"system-shutdown\").addKeyValue(\"main\", getMain()).log();\n             stopAllServices(timeoutSeconds);\n \n-            // Wait for tasks in the executor to end.\n+            // Do not wait for tasks in the executor to end.\n             ScheduledExecutorService scheduledExecutorService = kernel.getContext().get(ScheduledExecutorService.class);\n             ExecutorService executorService = kernel.getContext().get(ExecutorService.class);\n             kernel.getContext().runOnPublishQueueAndWait(() -> {\n-                executorService.shutdown();\n-                scheduledExecutorService.shutdown();\n+                executorService.shutdownNow();\n+                scheduledExecutorService.shutdownNow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NTMzMQ=="}, "originalCommit": {"oid": "5650e62922ee9a8fc362819310909da5d1c0a6b4"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 779, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}