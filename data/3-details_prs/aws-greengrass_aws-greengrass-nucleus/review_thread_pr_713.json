{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0OTc4MzYy", "number": 713, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjoxNDo0OVrOE7utKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjoxNDo0OVrOE7utKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDY2NjY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/builtin/services/pubsub/PubSubIPCEventStreamAgent.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjoxNDo0OVrOH3iiPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjoxNjoyNFrOH3ikpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk5OTU1MA==", "bodyText": "why is unsub at debug while subscribe is info? I'd prefer if both were info", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/713#discussion_r527999550", "createdAt": "2020-11-20T22:14:49Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/builtin/services/pubsub/PubSubIPCEventStreamAgent.java", "diffHunk": "@@ -84,8 +85,14 @@ public void subscribe(String topic, Consumer<PublishEvent> cb, String serviceNam\n      * @param serviceName name of the service unsubscribing.\n      */\n     public void unsubscribe(String topic, Consumer<PublishEvent> cb, String serviceName) {\n-        log.atDebug().kv(COMPONENT_NAME, serviceName).log(\"Unsubscribing from topic {}\", topic);\n-        listeners.computeIfPresent(topic, (s, objects) -> objects.remove(cb) && objects.isEmpty() ? null : objects);\n+        AtomicBoolean removed = new AtomicBoolean(false);\n+        listeners.computeIfPresent(topic, (s, objects) -> {\n+            removed.set(objects.remove(cb));\n+            return objects.isEmpty() ? null : objects;\n+        });\n+        if (removed.get()) {\n+            log.atDebug().kv(COMPONENT_NAME, serviceName).log(\"Unsubscribed from topic {}\", topic);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70294da835bc68992e91cf48bd5314369c7e64b2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAwMDE2NQ==", "bodyText": "Just left it as it was. But updated now for you.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/713#discussion_r528000165", "createdAt": "2020-11-20T22:16:24Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/builtin/services/pubsub/PubSubIPCEventStreamAgent.java", "diffHunk": "@@ -84,8 +85,14 @@ public void subscribe(String topic, Consumer<PublishEvent> cb, String serviceNam\n      * @param serviceName name of the service unsubscribing.\n      */\n     public void unsubscribe(String topic, Consumer<PublishEvent> cb, String serviceName) {\n-        log.atDebug().kv(COMPONENT_NAME, serviceName).log(\"Unsubscribing from topic {}\", topic);\n-        listeners.computeIfPresent(topic, (s, objects) -> objects.remove(cb) && objects.isEmpty() ? null : objects);\n+        AtomicBoolean removed = new AtomicBoolean(false);\n+        listeners.computeIfPresent(topic, (s, objects) -> {\n+            removed.set(objects.remove(cb));\n+            return objects.isEmpty() ? null : objects;\n+        });\n+        if (removed.get()) {\n+            log.atDebug().kv(COMPONENT_NAME, serviceName).log(\"Unsubscribed from topic {}\", topic);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk5OTU1MA=="}, "originalCommit": {"oid": "70294da835bc68992e91cf48bd5314369c7e64b2"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 285, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}