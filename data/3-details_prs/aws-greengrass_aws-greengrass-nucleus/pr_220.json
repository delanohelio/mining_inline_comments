{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTIxMTUz", "number": 220, "title": "Run E2E tests in parallel", "bodyText": "Issue #, if available:\nDescription of changes:\nMajor change: Parallelize E2E test execution\n\nUse Maven settings to run test classes in parallel with new JVM forks. Tests within a class still run in serial.\n\nOther changes\n\nRemove global resources in tests\nPass root path to kernel in command line instead of setting System Properties.\nIncrease deployment timeouts of IoT jobs.\nAdd retry on service state assertions with new test dependency https://github.com/grantwest/eventually-matchers\n\nPotential improvements not included in this PR:\n\nSeparate logs from different test cases.\nBetter exception log protection logic.\nParallelize tests in the same class.\n\nWhy is this change necessary:\nReduce execution time of E2E tests.\nHow was this change tested:\ntime mvn -ntp surefire:test@integration-tests -Dgroups=\"E2E\" -DexcludedGroups=\"\" -Dsurefire.argLine=\"\"  -DforkCount=1C -DreuseForks=false\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-04-29T19:56:45Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220", "merged": true, "mergeCommit": {"oid": "3be32e36f871a44828f641fb70dc66576ba57b0a"}, "closed": true, "closedAt": "2020-05-05T19:03:07Z", "author": {"login": "hui-yang"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccfj8qgBqjMyODY2MDk1OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceY4J2AFqTQwNjA3MzI5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "35c0e4aadf8894c225f21ed9e031d2acce62d194", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/35c0e4aadf8894c225f21ed9e031d2acce62d194", "committedDate": "2020-04-29T19:47:02Z", "message": "Run E2E tests in parallel"}, "afterCommit": {"oid": "047bbc4619681b88ef327523c31ed6b57dc70d29", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/047bbc4619681b88ef327523c31ed6b57dc70d29", "committedDate": "2020-04-29T21:42:00Z", "message": "Run E2E tests in parallel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "047bbc4619681b88ef327523c31ed6b57dc70d29", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/047bbc4619681b88ef327523c31ed6b57dc70d29", "committedDate": "2020-04-29T21:42:00Z", "message": "Run E2E tests in parallel"}, "afterCommit": {"oid": "fe9a27a52ed552d896b340478aa5a1bd60f6b289", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fe9a27a52ed552d896b340478aa5a1bd60f6b289", "committedDate": "2020-04-29T22:52:49Z", "message": "Run E2E tests in parallel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe9a27a52ed552d896b340478aa5a1bd60f6b289", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fe9a27a52ed552d896b340478aa5a1bd60f6b289", "committedDate": "2020-04-29T22:52:49Z", "message": "Run E2E tests in parallel"}, "afterCommit": {"oid": "f16ca7528df038152c948cfe4b292ba50d7e0fde", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f16ca7528df038152c948cfe4b292ba50d7e0fde", "committedDate": "2020-04-30T00:20:36Z", "message": "Run E2E tests in parallel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f16ca7528df038152c948cfe4b292ba50d7e0fde", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f16ca7528df038152c948cfe4b292ba50d7e0fde", "committedDate": "2020-04-30T00:20:36Z", "message": "Run E2E tests in parallel"}, "afterCommit": {"oid": "407c51d23025cfdb9510ad0cc93db42392a62998", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/407c51d23025cfdb9510ad0cc93db42392a62998", "committedDate": "2020-04-30T20:52:35Z", "message": "Run E2E tests in parallel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "407c51d23025cfdb9510ad0cc93db42392a62998", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/407c51d23025cfdb9510ad0cc93db42392a62998", "committedDate": "2020-04-30T20:52:35Z", "message": "Run E2E tests in parallel"}, "afterCommit": {"oid": "420087a209caf22a98d41fee956c33a487732ec3", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/420087a209caf22a98d41fee956c33a487732ec3", "committedDate": "2020-04-30T21:07:14Z", "message": "Run E2E tests in parallel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "420087a209caf22a98d41fee956c33a487732ec3", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/420087a209caf22a98d41fee956c33a487732ec3", "committedDate": "2020-04-30T21:07:14Z", "message": "Run E2E tests in parallel"}, "afterCommit": {"oid": "d197ef38a344aa23675af89d500e4e3dbb64ea30", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d197ef38a344aa23675af89d500e4e3dbb64ea30", "committedDate": "2020-04-30T21:19:15Z", "message": "Run E2E tests in parallel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDEzOTAy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-404413902", "createdAt": "2020-05-01T21:38:01Z", "commit": {"oid": "d197ef38a344aa23675af89d500e4e3dbb64ea30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTozODowMlrOGPWaBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTozODowMlrOGPWaBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0ODkzNQ==", "bodyText": "How about: https://github.com/grantwest/eventually-matchers", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#discussion_r418748935", "createdAt": "2020-05-01T21:38:02Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "diffHunk": "@@ -98,53 +103,55 @@ void cleanUp() {\n         if (kernel != null) {\n             kernel.shutdown();\n         }\n-        Utils.cleanAllCreatedThings(iotClient);\n-        Utils.cleanAllCreatedThingGroups(iotClient);\n+        Utils.cleanThing(iotClient, thingInfo);\n+        Utils.cleanThingGroup(iotClient, thingGroupResp.thingGroupName());\n         createdIotJobIdList.forEach(jobId -> Utils.cleanJob(iotClient, jobId));\n+        createdIotJobIdList.clear();\n     }\n \n     @Test\n-    void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_deployed_and_job_is_successful()\n-            throws Exception {\n-        System.setProperty(\"root\", tempRootDir.toString());\n-        kernel = new Kernel().parseArgs(\"-i\", getClass().getResource(\"blank_config.yaml\").toString());\n+    void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_deployed_and_job_is_successful() throws Exception {\n+        kernel = new Kernel()\n+                .parseArgs(\"-i\", getClass().getResource(\"blank_config.yaml\").toString(), \"-r\", tempRootDir.toString());\n \n         Path localStoreContentPath = Paths.get(getClass().getResource(\"local_store_content\").getPath());\n         // pre-load contents to package store\n         FileUtils.copyFolderRecursively(localStoreContentPath, kernel.getPackageStorePath());\n \n-        Utils.ThingInfo thingInfo = Utils.createThing(iotClient);\n+        thingInfo = Utils.createThing(iotClient);\n         Utils.updateKernelConfigWithIotConfiguration(kernel, thingInfo);\n \n         kernel.launch();\n \n         // Create thing group and deployment\n-        String thingGroupArn = Utils.createThingGroupAndAddThing(iotClient, thingInfo);\n+        thingGroupResp = Utils.createThingGroupAndAddThing(iotClient, thingInfo);\n         DeploymentDocument document = DeploymentDocument.builder().timestamp(System.currentTimeMillis())\n                 .deploymentId(UUID.randomUUID().toString()).rootPackages(Arrays.asList(\"CustomerApp\", \"SomeService\"))\n-                .deploymentPackageConfigurationList(\n-                        Arrays.asList(new DeploymentPackageConfiguration(\"CustomerApp\", \"1.0.0\", null, null, null),\n-                                new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null))).build();\n+                .deploymentPackageConfigurationList(Arrays\n+                        .asList(new DeploymentPackageConfiguration(\"CustomerApp\", \"1.0.0\", null, null, null), new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null)))\n+                .build();\n \n-        String jobId1 = sendCreateDeploymentRequest(thingGroupArn, document);\n+        String jobId1 = sendCreateDeploymentRequest(thingGroupResp.thingGroupArn(), document);\n \n         // wait until deployment complete\n-        Utils.waitForJobExecutionStatusToSatisfy(iotClient, jobId1, thingInfo.thingName, Duration.ofMinutes(3),\n-                s -> s.equals(JobExecutionStatus.SUCCEEDED));\n-\n-        assertEquals(State.FINISHED, kernel.getMain().getState());\n-        assertEquals(State.FINISHED, kernel.locate(\"CustomerApp\").getState());\n-        assertEquals(State.FINISHED, kernel.locate(\"SomeService\").getState());\n+        Utils.waitForJobExecutionStatusToSatisfy(iotClient, jobId1, thingInfo.thingName, Duration.ofMinutes(3), s -> s\n+                .equals(JobExecutionStatus.SUCCEEDED));\n+\n+        CustomAssertionUtil.assertEventuallyTrue(3, Duration.ofMillis(500),\n+                () -> State.FINISHED.equals(kernel.getMain().getState()));\n+        CustomAssertionUtil.assertEventuallyTrue(3, Duration.ofMillis(500),\n+                () -> State.FINISHED.equals(kernel.locate(\"CustomerApp\").getState()));\n+        CustomAssertionUtil.assertEventuallyTrue(3, Duration.ofMillis(500),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d197ef38a344aa23675af89d500e4e3dbb64ea30"}, "originalPosition": 128}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDE2OTIw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-404416920", "createdAt": "2020-05-01T21:45:57Z", "commit": {"oid": "d197ef38a344aa23675af89d500e4e3dbb64ea30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTo0NTo1OFrOGPWksg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTo0NTo1OFrOGPWksg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1MTY2Ng==", "bodyText": "Since most of our time is just waiting for the cloud, we should be able to do more than 1 per core. I'd go maybe 4c.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#discussion_r418751666", "createdAt": "2020-05-01T21:45:58Z", "author": {"login": "MikeDombo"}, "path": ".github/workflows/maven.yml", "diffHunk": "@@ -83,14 +83,22 @@ jobs:\n           aws-region: us-west-2\n       - name: Build Tests\n         run: mvn -ntp generate-test-sources generate-test-resources test-compile -DskipTests\n-      - name: E2E Test\n-        run: mvn -ntp surefire:test@integration-tests -Dgroups=\"E2E\" -DexcludedGroups=\"\" -Dsurefire.argLine=\"\"\n+      - name: Run E2E Tests in parallel\n+        run: mvn -ntp surefire:test@integration-tests -Dgroups=\"E2E\" -DexcludedGroups=\"\" -Dsurefire.argLine=\"\" -DforkCount=1C -DreuseForks=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d197ef38a344aa23675af89d500e4e3dbb64ea30"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d197ef38a344aa23675af89d500e4e3dbb64ea30", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d197ef38a344aa23675af89d500e4e3dbb64ea30", "committedDate": "2020-04-30T21:19:15Z", "message": "Run E2E tests in parallel"}, "afterCommit": {"oid": "2d522dc937ead64f05576589173b77edae4afa45", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2d522dc937ead64f05576589173b77edae4afa45", "committedDate": "2020-05-04T18:31:57Z", "message": "Run E2E tests in parallel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9692d4651d6fb1023d96f1d5e20df87de73dce34", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9692d4651d6fb1023d96f1d5e20df87de73dce34", "committedDate": "2020-05-04T22:04:32Z", "message": "Run E2E tests in parallel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d522dc937ead64f05576589173b77edae4afa45", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2d522dc937ead64f05576589173b77edae4afa45", "committedDate": "2020-05-04T18:31:57Z", "message": "Run E2E tests in parallel"}, "afterCommit": {"oid": "9692d4651d6fb1023d96f1d5e20df87de73dce34", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9692d4651d6fb1023d96f1d5e20df87de73dce34", "committedDate": "2020-05-04T22:04:32Z", "message": "Run E2E tests in parallel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4776a8a34beb74e035d8fc119524eb556d9379ee", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4776a8a34beb74e035d8fc119524eb556d9379ee", "committedDate": "2020-05-04T22:57:32Z", "message": "Merge branch 'master' into parallel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NDA2NzMy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-405406732", "createdAt": "2020-05-04T23:05:28Z", "commit": {"oid": "4776a8a34beb74e035d8fc119524eb556d9379ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzowNToyOFrOGQVT4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzowNToyOFrOGQVT4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3OTU1Mw==", "bodyText": "how long will this go for? We need reasonable timeouts.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#discussion_r419779553", "createdAt": "2020-05-04T23:05:28Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "diffHunk": "@@ -100,53 +106,52 @@ void cleanUp() {\n         if (kernel != null) {\n             kernel.shutdown();\n         }\n-        Utils.cleanAllCreatedThings(iotClient);\n-        Utils.cleanAllCreatedThingGroups(iotClient);\n+        Utils.cleanThing(iotClient, thingInfo);\n+        Utils.cleanThingGroup(iotClient, thingGroupResp.thingGroupName());\n         createdIotJobIdList.forEach(jobId -> Utils.cleanJob(iotClient, jobId));\n+        createdIotJobIdList.clear();\n     }\n \n     @Test\n-    void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_deployed_and_job_is_successful()\n-            throws Exception {\n-        System.setProperty(\"root\", tempRootDir.toString());\n-        kernel = new Kernel().parseArgs(\"-i\", getClass().getResource(\"blank_config.yaml\").toString());\n+    void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_deployed_and_job_is_successful() throws Exception {\n+        kernel = new Kernel()\n+                .parseArgs(\"-i\", getClass().getResource(\"blank_config.yaml\").toString(), \"-r\", tempRootDir.toString());\n \n         Path localStoreContentPath = Paths.get(getClass().getResource(\"local_store_content\").getPath());\n         // pre-load contents to package store\n         FileUtils.copyFolderRecursively(localStoreContentPath, kernel.getPackageStorePath());\n \n-        Utils.ThingInfo thingInfo = Utils.createThing(iotClient);\n+        thingInfo = Utils.createThing(iotClient);\n         Utils.updateKernelConfigWithIotConfiguration(kernel, thingInfo);\n \n         kernel.launch();\n \n         // Create thing group and deployment\n-        String thingGroupArn = Utils.createThingGroupAndAddThing(iotClient, thingInfo);\n+        thingGroupResp = Utils.createThingGroupAndAddThing(iotClient, thingInfo);\n         DeploymentDocument document = DeploymentDocument.builder().timestamp(System.currentTimeMillis())\n                 .deploymentId(UUID.randomUUID().toString()).rootPackages(Arrays.asList(\"CustomerApp\", \"SomeService\"))\n-                .deploymentPackageConfigurationList(\n-                        Arrays.asList(new DeploymentPackageConfiguration(\"CustomerApp\", \"1.0.0\", null, null, null),\n-                                new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null))).build();\n+                .deploymentPackageConfigurationList(Arrays\n+                        .asList(new DeploymentPackageConfiguration(\"CustomerApp\", \"1.0.0\", null, null, null), new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null)))\n+                .build();\n \n-        String jobId1 = sendCreateDeploymentRequest(thingGroupArn, document);\n+        String jobId1 = sendCreateDeploymentRequest(thingGroupResp.thingGroupArn(), document);\n \n         // wait until deployment complete\n-        Utils.waitForJobExecutionStatusToSatisfy(iotClient, jobId1, thingInfo.thingName, Duration.ofMinutes(3),\n-                s -> s.equals(JobExecutionStatus.SUCCEEDED));\n+        Utils.waitForJobExecutionStatusToSatisfy(iotClient, jobId1, thingInfo.thingName, Duration.ofMinutes(3), s -> s\n+                .equals(JobExecutionStatus.SUCCEEDED));\n \n-        assertThat(kernel.getMain().getState(), anyOf(is(State.RUNNING), is(State.FINISHED)));\n-        assertThat(kernel.locate(\"CustomerApp\").getState(), anyOf(is(State.RUNNING), is(State.FINISHED)));\n-        assertThat(kernel.locate(\"SomeService\").getState(), anyOf(is(State.RUNNING), is(State.FINISHED)));\n+        assertThat(kernel.getMain()::getState, eventuallyEval(is(State.FINISHED)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4776a8a34beb74e035d8fc119524eb556d9379ee"}, "originalPosition": 119}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NDA3OTk0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-405407994", "createdAt": "2020-05-04T23:08:52Z", "commit": {"oid": "4776a8a34beb74e035d8fc119524eb556d9379ee"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NDIxNjI0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-405421624", "createdAt": "2020-05-04T23:49:11Z", "commit": {"oid": "4776a8a34beb74e035d8fc119524eb556d9379ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzo0OToxMVrOGQWI6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzo0OToxMVrOGQWI6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc5MzEyOQ==", "bodyText": "nit - Let's make is consistent. E2E-INTRUSIVE and will be executed at Run intrusive e2e test sequentially stage.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#discussion_r419793129", "createdAt": "2020-05-04T23:49:11Z", "author": {"login": "leaf94"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/MqttReconnectTest.java", "diffHunk": "@@ -54,18 +57,19 @@\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n @ExtendWith(EGExtension.class)\n-@Tag(\"E2E\")\n+@Tag(\"E2E-EXCLUSIVE\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4776a8a34beb74e035d8fc119524eb556d9379ee"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NDIzOTQ5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-405423949", "createdAt": "2020-05-04T23:56:40Z", "commit": {"oid": "4776a8a34beb74e035d8fc119524eb556d9379ee"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "62c84cb9789617139930df4d512f74bf12e7a996", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/62c84cb9789617139930df4d512f74bf12e7a996", "committedDate": "2020-05-04T23:58:22Z", "message": "Add more logs in deployment notification handling"}, "afterCommit": {"oid": "e850da35b89118fdc10c9cc3cfc68d1c0edfa35b", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e850da35b89118fdc10c9cc3cfc68d1c0edfa35b", "committedDate": "2020-05-05T00:00:47Z", "message": "Add more logs in deployment notification handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NDI5NDU2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-405429456", "createdAt": "2020-05-05T00:13:45Z", "commit": {"oid": "62c84cb9789617139930df4d512f74bf12e7a996"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMDoxNDoyNlrOGQWmJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMDoxNDoyNlrOGQWmJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgwMDYxMw==", "bodyText": "Nice!\nSince you are adding this... As a good practice for external calls, I'd suggest log before and after making any external call, with the enough identifier for debugging purpose(if not logged by SDK). Sometimes even entire request should be logged if necessary.\nFor example,\nlogger.atInfo().kv(\"Thing Name\", thingName).log(\"Subscribing to job execution change events.\"); and logger.atInfo().kv(\"Thing Name\", thingName).log(\"Subscribed to job execution change events.\");\nLet's add the identifier for now and we could re-visit logging later.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#discussion_r419800613", "createdAt": "2020-05-05T00:14:26Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/IotJobsHelper.java", "diffHunk": "@@ -395,5 +401,6 @@ protected void subscribeToEventNotifications(Consumer<JobExecutionsChangedEvent>\n         CompletableFuture<Integer> subscribed = iotJobsClient\n                 .SubscribeToJobExecutionsChangedEvents(request, QualityOfService.AT_LEAST_ONCE, eventHandler);\n         subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n+        logger.atInfo().log(\"Subscribed to deployment notifications.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e850da35b89118fdc10c9cc3cfc68d1c0edfa35b"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e850da35b89118fdc10c9cc3cfc68d1c0edfa35b", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e850da35b89118fdc10c9cc3cfc68d1c0edfa35b", "committedDate": "2020-05-05T00:00:47Z", "message": "Add more logs in deployment notification handling"}, "afterCommit": {"oid": "ed1544fcfd1de28c607aff86c3f55103b622f2ae", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ed1544fcfd1de28c607aff86c3f55103b622f2ae", "committedDate": "2020-05-05T01:07:22Z", "message": "Add more logs in deployment notification handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NDQ3Mzgx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-405447381", "createdAt": "2020-05-05T01:21:07Z", "commit": {"oid": "ed1544fcfd1de28c607aff86c3f55103b622f2ae"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NDQ4MjQx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-405448241", "createdAt": "2020-05-05T01:25:16Z", "commit": {"oid": "ed1544fcfd1de28c607aff86c3f55103b622f2ae"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed1544fcfd1de28c607aff86c3f55103b622f2ae", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ed1544fcfd1de28c607aff86c3f55103b622f2ae", "committedDate": "2020-05-05T01:07:22Z", "message": "Add more logs in deployment notification handling"}, "afterCommit": {"oid": "761d2d2374b0f9f38a67b224bbd53fad10a9bd8f", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/761d2d2374b0f9f38a67b224bbd53fad10a9bd8f", "committedDate": "2020-05-05T01:23:40Z", "message": "Add more logs in deployment notification handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7c808d4e1d5aa04e0ebeb609061fb52d33fc618", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d7c808d4e1d5aa04e0ebeb609061fb52d33fc618", "committedDate": "2020-05-05T16:30:16Z", "message": "Add more logs in deployment notification handling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "761d2d2374b0f9f38a67b224bbd53fad10a9bd8f", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/761d2d2374b0f9f38a67b224bbd53fad10a9bd8f", "committedDate": "2020-05-05T01:23:40Z", "message": "Add more logs in deployment notification handling"}, "afterCommit": {"oid": "d7c808d4e1d5aa04e0ebeb609061fb52d33fc618", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d7c808d4e1d5aa04e0ebeb609061fb52d33fc618", "committedDate": "2020-05-05T16:30:16Z", "message": "Add more logs in deployment notification handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c446e41853776820d1f1e89a11a7f27b1d596778", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c446e41853776820d1f1e89a11a7f27b1d596778", "committedDate": "2020-05-05T17:34:42Z", "message": "Attempt to fix the issue where DS times out picking up the deployment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1580ab7e76a4b3f75fee616c14b963761e71fe28", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1580ab7e76a4b3f75fee616c14b963761e71fe28", "committedDate": "2020-05-05T17:38:09Z", "message": "Merge branch 'master' into parallel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDE4NjY5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-406018669", "createdAt": "2020-05-05T17:47:50Z", "commit": {"oid": "1580ab7e76a4b3f75fee616c14b963761e71fe28"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3a5420db7e4e5215b5881542b01ec2a329820aa", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d3a5420db7e4e5215b5881542b01ec2a329820aa", "committedDate": "2020-05-05T18:27:22Z", "message": "revert some changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDY4NTE0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-406068514", "createdAt": "2020-05-05T18:56:05Z", "commit": {"oid": "d3a5420db7e4e5215b5881542b01ec2a329820aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDczMjk5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/220#pullrequestreview-406073299", "createdAt": "2020-05-05T19:02:52Z", "commit": {"oid": "d3a5420db7e4e5215b5881542b01ec2a329820aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2168, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}