{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MTc2OTIw", "number": 258, "title": "list components", "bodyText": "Description of changes:\nAdded API to get following information from kernel\n\nroot component names\nAll components name and version\nruntime configuration of components.\n\nWhy is this change necessary:\nThis API will be used by local CLI to get the list of running applications.\nHow was this change tested:\nIntegration tests.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-05-28T00:12:07Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258", "merged": true, "mergeCommit": {"oid": "f67119c6a6e6ece556f4379a6ce19a8d81c81f2b"}, "closed": true, "closedAt": "2020-05-28T21:46:21Z", "author": {"login": "fahadmohammed01"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclicCygH2gAyNDI0MTc2OTIwOjcwYmJjZTJmNmU4YmVkMzFiMDkxNmQ3YmRiNTE4Nzc3YjZjODAwYTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcl05aNgFqTQyMDUxMTg1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "70bbce2f6e8bed31b0916d7bdb518777b6c800a7", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/70bbce2f6e8bed31b0916d7bdb518777b6c800a7", "committedDate": "2020-05-28T00:08:41Z", "message": "list components"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5Njk2MzY4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#pullrequestreview-419696368", "createdAt": "2020-05-28T00:19:12Z", "commit": {"oid": "70bbce2f6e8bed31b0916d7bdb518777b6c800a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMDoxOToxMlrOGbhjag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMDoxOToxMlrOGbhjag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxNDQ3NA==", "bodyText": "I wouldn't do this. Just list all the services.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r431514474", "createdAt": "2020-05-28T00:19:12Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +64,75 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()\n+                    .filter(evergreenService -> evergreenService instanceof GenericExternalService)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70bbce2f6e8bed31b0916d7bdb518777b6c800a7"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5Njk2NTg3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#pullrequestreview-419696587", "createdAt": "2020-05-28T00:19:58Z", "commit": {"oid": "70bbce2f6e8bed31b0916d7bdb518777b6c800a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMDoxOTo1OFrOGbhkNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMDoxOTo1OFrOGbhkNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxNDY3OA==", "bodyText": "you can use Coerce.toString(e.getValue())", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r431514678", "createdAt": "2020-05-28T00:19:58Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +64,75 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()\n+                    .filter(evergreenService -> evergreenService instanceof GenericExternalService)\n+                    .map(EvergreenService::getName).collect(Collectors.toList());\n+\n+            List<ComponentInfo> componentInfo = kernel.orderedDependencies().stream()\n+                    .filter(service -> service instanceof GenericExternalService)\n+                    .filter(service -> !service.getName().equals(kernel.getMain().getName()))\n+                    .map(service -> {\n+                        Topic version = service.getConfig().find(VERSION_CONFIG_KEY);\n+                        Topics parameters = service.getConfig().findTopics(PARAMETERS_CONFIG_KEY);\n+                        ComponentInfo.ComponentInfoBuilder componentInfoBuilder = ComponentInfo.builder()\n+                                .packageName(service.getName());\n+                        if (version != null) {\n+                            componentInfoBuilder.version(((Semver) version.getOnce()).getValue());\n+                        }\n+                        if (parameters != null) {\n+                            componentInfoBuilder.runtimeParameters(parameters.children.entrySet().stream().collect(\n+                                    Collectors.toMap(e -> e.getKey(), e -> (String) ((Topic) e.getValue()).getOnce())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70bbce2f6e8bed31b0916d7bdb518777b6c800a7"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5830ed4a5f46002ba1f6f3519d71bb078d18f646", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5830ed4a5f46002ba1f6f3519d71bb078d18f646", "committedDate": "2020-05-28T05:13:32Z", "message": "use pretty print to format the json"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMzM5OTU0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#pullrequestreview-420339954", "createdAt": "2020-05-28T17:32:54Z", "commit": {"oid": "5830ed4a5f46002ba1f6f3519d71bb078d18f646"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzozMjo1NFrOGb_mnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzozNDo1OVrOGb_rCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNjgxMg==", "bodyText": "I think the intention here is just to filter out the built-in services because we don't want users to be confused. We can discuss but I'm fine with initial revision as this.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432006812", "createdAt": "2020-05-28T17:32:54Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +64,75 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()\n+                    .filter(evergreenService -> evergreenService instanceof GenericExternalService)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxNDQ3NA=="}, "originalCommit": {"oid": "70bbce2f6e8bed31b0916d7bdb518777b6c800a7"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNzQ3NA==", "bodyText": "Remove this TODO. Doesn't apply here :)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432007474", "createdAt": "2020-05-28T17:34:08Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +65,76 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()\n+                    .filter(evergreenService -> evergreenService instanceof GenericExternalService)\n+                    .map(EvergreenService::getName).collect(Collectors.toList());\n+\n+            List<ComponentInfo> componentInfo = kernel.orderedDependencies().stream()\n+                    .filter(service -> service instanceof GenericExternalService)\n+                    .filter(service -> !service.getName().equals(kernel.getMain().getName()))\n+                    .map(service -> {\n+                        Topic version = service.getConfig().find(VERSION_CONFIG_KEY);\n+                        Topics parameters = service.getConfig().findTopics(PARAMETERS_CONFIG_KEY);\n+                        ComponentInfo.ComponentInfoBuilder componentInfoBuilder = ComponentInfo.builder()\n+                                .packageName(service.getName());\n+                        if (version != null) {\n+                            componentInfoBuilder.version(((Semver) version.getOnce()).getValue());\n+                        }\n+                        if (parameters != null) {\n+                            componentInfoBuilder.runtimeParameters(parameters.children.entrySet().stream().collect(\n+                                    Collectors.toMap(e -> e.getKey(), e -> Coerce.toString(e.getValue()))));\n+\n+                        }\n+                        return componentInfoBuilder.build();\n+                    }).collect(Collectors.toList());\n+\n+            return OBJECT_MAPPER.writerWithDefaultPrettyPrinter()\n+                    .writeValueAsString(new ListComponentsResult(rootComponenetNames, componentInfo));\n+        } catch (JsonProcessingException e) {\n+            //TODO: during IPC integration, change this to report internal error\n+            throw new DeviceConfigurationException(\"Unable to list components\", e);\n+        }\n+    }\n+\n+    //TODO: move this data object to appropriate place during IPC integration.\n+    /**\n+     * Data object used to transfer currently running.\n+     */\n+    @AllArgsConstructor\n+    @NoArgsConstructor\n+    @Getter\n+    public static class ListComponentsResult {\n+        @JsonProperty(\"RootPackages\")\n+        private List<String> rootPackages;\n+\n+        @JsonProperty(\"Components\")\n+        private List<ComponentInfo> componentsInfo;\n+\n+    }\n+\n+    //TODO: move this data object to appropriate place during IPC integration.\n+    @Builder\n+    @AllArgsConstructor\n+    @NoArgsConstructor\n+    @Getter\n+    public static class ComponentInfo {\n+        @JsonProperty(\"Name\")\n+        private String packageName;\n+\n+        // TODO: change to versionRequirements which can be a pinned version or a version range", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5830ed4a5f46002ba1f6f3519d71bb078d18f646"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNzk0NQ==", "bodyText": "We need to consolidate the ObjectMapper... Maybe after both you and my PR gets merged in!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432007945", "createdAt": "2020-05-28T17:34:59Z", "author": {"login": "leaf94"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/LocalDeploymentListenerTest.java", "diffHunk": "@@ -15,10 +17,14 @@\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class LocalDeploymentListenerTest {\n \n+    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper()\n+            .configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, false)\n+            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5830ed4a5f46002ba1f6f3519d71bb078d18f646"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d3b49027b5094fce2b64ead805fe5c49b2371e7", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5d3b49027b5094fce2b64ead805fe5c49b2371e7", "committedDate": "2020-05-28T20:09:32Z", "message": "removed outdated  comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "789cd3df5eabcd8a38fe502fbf6bd9eb03506077", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/789cd3df5eabcd8a38fe502fbf6bd9eb03506077", "committedDate": "2020-05-28T21:00:26Z", "message": "addressed pr comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNDkxODg0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#pullrequestreview-420491884", "createdAt": "2020-05-28T21:06:01Z", "commit": {"oid": "789cd3df5eabcd8a38fe502fbf6bd9eb03506077"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0ada353c26431e1fabbb81ee2036c81e8d7c98f", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c0ada353c26431e1fabbb81ee2036c81e8d7c98f", "committedDate": "2020-05-28T21:07:28Z", "message": "Merge branch 'master' into list_components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "394cad0d43edd49b3542d95560fe1867d0c33df2", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/394cad0d43edd49b3542d95560fe1867d0c33df2", "committedDate": "2020-05-28T21:23:19Z", "message": "Merge branch 'master' into list_components"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTA2NDkw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#pullrequestreview-420506490", "createdAt": "2020-05-28T21:29:43Z", "commit": {"oid": "394cad0d43edd49b3542d95560fe1867d0c33df2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTEwMjQ4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#pullrequestreview-420510248", "createdAt": "2020-05-28T21:36:08Z", "commit": {"oid": "394cad0d43edd49b3542d95560fe1867d0c33df2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMTozNjowOFrOGcHm4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMTozNjowOFrOGcHm4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzNzk1NQ==", "bodyText": "Why DeviceConfigurationException? doesn't seem relevant here", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432137955", "createdAt": "2020-05-28T21:36:08Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +65,74 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()\n+                    .filter(evergreenService -> evergreenService instanceof GenericExternalService)\n+                    .map(EvergreenService::getName).collect(Collectors.toList());\n+\n+            List<ComponentInfo> componentInfo = kernel.orderedDependencies().stream()\n+                    .filter(service -> !service.getName().equals(kernel.getMain().getName()))\n+                    .map(service -> {\n+                        Topic version = service.getConfig().find(VERSION_CONFIG_KEY);\n+                        Topics parameters = service.getConfig().findTopics(PARAMETERS_CONFIG_KEY);\n+                        ComponentInfo.ComponentInfoBuilder componentInfoBuilder = ComponentInfo.builder()\n+                                .packageName(service.getName());\n+                        if (version != null) {\n+                            componentInfoBuilder.version(((Semver) version.getOnce()).getValue());\n+                        }\n+                        if (parameters != null) {\n+                            componentInfoBuilder.runtimeParameters(parameters.children.entrySet().stream().collect(\n+                                    Collectors.toMap(e -> e.getKey(), e -> Coerce.toString(e.getValue()))));\n+\n+                        }\n+                        return componentInfoBuilder.build();\n+                    }).collect(Collectors.toList());\n+\n+            return OBJECT_MAPPER.writerWithDefaultPrettyPrinter()\n+                    .writeValueAsString(new ListComponentsResult(rootComponenetNames, componentInfo));\n+        } catch (JsonProcessingException e) {\n+            //TODO: during IPC integration, change this to report internal error\n+            throw new DeviceConfigurationException(\"Unable to list components\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394cad0d43edd49b3542d95560fe1867d0c33df2"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTEwNTQ2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#pullrequestreview-420510546", "createdAt": "2020-05-28T21:36:36Z", "commit": {"oid": "394cad0d43edd49b3542d95560fe1867d0c33df2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTExODU2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#pullrequestreview-420511856", "createdAt": "2020-05-28T21:38:55Z", "commit": {"oid": "394cad0d43edd49b3542d95560fe1867d0c33df2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMTozODo1NVrOGcHrzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMTozODo1NVrOGcHrzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzOTIxMg==", "bodyText": "typo : component", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/258#discussion_r432139212", "createdAt": "2020-05-28T21:38:55Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/LocalDeploymentListener.java", "diffHunk": "@@ -39,4 +65,74 @@ public boolean submitLocalDeployment(String deploymentDocument) {\n         return false;\n     }\n \n+    /**\n+     * Retrieves root level components names, component information and runtime parameters.\n+     * @return serialized ListComponentsResult\n+     * @throws DeviceConfigurationException failure to serialize ListComponentsResult\n+     */\n+    public String listComponents() throws DeviceConfigurationException {\n+        try {\n+            List<String> rootComponenetNames = kernel.getMain().getDependencies().keySet().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394cad0d43edd49b3542d95560fe1867d0c33df2"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2233, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}