{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MzM3NDI5", "number": 408, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODoyMzo0MlrOEgGz8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNDo0NDowMVrOEhgOfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTAxNDkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODoyMzo0MlrOHMyeAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMjoxNToxNVrOHM9MtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3MTg0Mg==", "bodyText": ".name() in favor of toString()", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483171842", "createdAt": "2020-09-03T18:23:42Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -75,13 +76,19 @@\n \n         PlatformSpecificManifest platformSpecificManifest = optionalPlatformSpecificManifest.get();\n \n+        // null check on componentType. Shouldn't happen if cloud recipe is parsed correctly.\n+        String componentType = null;\n+        if (componentRecipe.getComponentType() != null) {\n+            componentType = componentRecipe.getComponentType().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d6e23866377ea9f74f1afab03fe99fa67abf3ef"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0NzYzNw==", "bodyText": "Sure", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483347637", "createdAt": "2020-09-04T02:15:15Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -75,13 +76,19 @@\n \n         PlatformSpecificManifest platformSpecificManifest = optionalPlatformSpecificManifest.get();\n \n+        // null check on componentType. Shouldn't happen if cloud recipe is parsed correctly.\n+        String componentType = null;\n+        if (componentRecipe.getComponentType() != null) {\n+            componentType = componentRecipe.getComponentType().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3MTg0Mg=="}, "originalCommit": {"oid": "9d6e23866377ea9f74f1afab03fe99fa67abf3ef"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTAyNDExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODoyNjoxOFrOHMyjmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMzoyNDo1MlrOHOxOsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3MzI3NQ==", "bodyText": "Let's make our ComponentType also strongly typed?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483173275", "createdAt": "2020-09-03T18:26:18Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -75,13 +76,19 @@\n \n         PlatformSpecificManifest platformSpecificManifest = optionalPlatformSpecificManifest.get();\n \n+        // null check on componentType. Shouldn't happen if cloud recipe is parsed correctly.\n+        String componentType = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d6e23866377ea9f74f1afab03fe99fa67abf3ef"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0ODY4OA==", "bodyText": "+1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r485248688", "createdAt": "2020-09-08T23:24:52Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -75,13 +76,19 @@\n \n         PlatformSpecificManifest platformSpecificManifest = optionalPlatformSpecificManifest.get();\n \n+        // null check on componentType. Shouldn't happen if cloud recipe is parsed correctly.\n+        String componentType = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3MzI3NQ=="}, "originalCommit": {"oid": "9d6e23866377ea9f74f1afab03fe99fa67abf3ef"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTAyNjQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODoyNjo1OFrOHMyk-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMjoxNjo1OVrOHM9OMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3MzYyNA==", "bodyText": "also .name() to prevent unexpected behavior when toString() is overriden", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483173624", "createdAt": "2020-09-03T18:26:58Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -126,12 +133,18 @@ private static PackageParameter convertParameterFromFile(@Nonnull ComponentParam\n     }\n \n     private static ComponentArtifact convertArtifactFromFile(\n-            @Nonnull com.aws.iot.evergreen.packagemanager.common.ComponentArtifact componentArtifact) {\n+            @Nonnull com.amazon.aws.iot.greengrass.component.common.ComponentArtifact componentArtifact) {\n+        String unArchive;\n+        if (componentArtifact.getUnarchive() == null) {\n+            unArchive = Unarchive.NONE.toString();\n+        } else {\n+            unArchive = componentArtifact.getUnarchive().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d6e23866377ea9f74f1afab03fe99fa67abf3ef"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3NDE4OQ==", "bodyText": "Also let's make it strongly typed", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483174189", "createdAt": "2020-09-03T18:27:42Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -126,12 +133,18 @@ private static PackageParameter convertParameterFromFile(@Nonnull ComponentParam\n     }\n \n     private static ComponentArtifact convertArtifactFromFile(\n-            @Nonnull com.aws.iot.evergreen.packagemanager.common.ComponentArtifact componentArtifact) {\n+            @Nonnull com.amazon.aws.iot.greengrass.component.common.ComponentArtifact componentArtifact) {\n+        String unArchive;\n+        if (componentArtifact.getUnarchive() == null) {\n+            unArchive = Unarchive.NONE.toString();\n+        } else {\n+            unArchive = componentArtifact.getUnarchive().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3MzYyNA=="}, "originalCommit": {"oid": "9d6e23866377ea9f74f1afab03fe99fa67abf3ef"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0NzQ3MA==", "bodyText": "I'd like to separate the strongly typed UNARCHIVE and ComponentType in a different PR. Seems that String->Enum type change can bring a lot of scattered diff", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483347470", "createdAt": "2020-09-04T02:14:40Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -126,12 +133,18 @@ private static PackageParameter convertParameterFromFile(@Nonnull ComponentParam\n     }\n \n     private static ComponentArtifact convertArtifactFromFile(\n-            @Nonnull com.aws.iot.evergreen.packagemanager.common.ComponentArtifact componentArtifact) {\n+            @Nonnull com.amazon.aws.iot.greengrass.component.common.ComponentArtifact componentArtifact) {\n+        String unArchive;\n+        if (componentArtifact.getUnarchive() == null) {\n+            unArchive = Unarchive.NONE.toString();\n+        } else {\n+            unArchive = componentArtifact.getUnarchive().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3MzYyNA=="}, "originalCommit": {"oid": "9d6e23866377ea9f74f1afab03fe99fa67abf3ef"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0ODAxOQ==", "bodyText": "It already is typed. It was typed in kernel as well as the common model", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483348019", "createdAt": "2020-09-04T02:16:59Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -126,12 +133,18 @@ private static PackageParameter convertParameterFromFile(@Nonnull ComponentParam\n     }\n \n     private static ComponentArtifact convertArtifactFromFile(\n-            @Nonnull com.aws.iot.evergreen.packagemanager.common.ComponentArtifact componentArtifact) {\n+            @Nonnull com.amazon.aws.iot.greengrass.component.common.ComponentArtifact componentArtifact) {\n+        String unArchive;\n+        if (componentArtifact.getUnarchive() == null) {\n+            unArchive = Unarchive.NONE.toString();\n+        } else {\n+            unArchive = componentArtifact.getUnarchive().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3MzYyNA=="}, "originalCommit": {"oid": "9d6e23866377ea9f74f1afab03fe99fa67abf3ef"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTgyMzMwOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzowNDozM1rOHM6LDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMjoxMzoxMFrOHM9KmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5ODA2Mg==", "bodyText": "the purpose of raw is that it does not exist (in cloud). That's how I'm able to tell that it is working.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483298062", "createdAt": "2020-09-03T23:04:33Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "diffHunk": "@@ -168,7 +168,7 @@ static void tearDown() {\n     @Order(1)\n     void GIVEN_sample_deployment_doc_WHEN_submitted_to_deployment_task_THEN_services_start_in_kernel(ExtensionContext context)\n             throws Exception {\n-        ((Map) kernel.getContext().getvIfExists(Kernel.SERVICE_TYPE_TO_CLASS_MAP_KEY).get()).put(\"raw\",\n+        ((Map) kernel.getContext().getvIfExists(Kernel.SERVICE_TYPE_TO_CLASS_MAP_KEY).get()).put(\"plugin\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c87e9ca14d7f4641bd96ce37c1e0fea642caf04"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5OTc4OA==", "bodyText": "This might be ok though", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483299788", "createdAt": "2020-09-03T23:10:11Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "diffHunk": "@@ -168,7 +168,7 @@ static void tearDown() {\n     @Order(1)\n     void GIVEN_sample_deployment_doc_WHEN_submitted_to_deployment_task_THEN_services_start_in_kernel(ExtensionContext context)\n             throws Exception {\n-        ((Map) kernel.getContext().getvIfExists(Kernel.SERVICE_TYPE_TO_CLASS_MAP_KEY).get()).put(\"raw\",\n+        ((Map) kernel.getContext().getvIfExists(Kernel.SERVICE_TYPE_TO_CLASS_MAP_KEY).get()).put(\"plugin\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5ODA2Mg=="}, "originalCommit": {"oid": "0c87e9ca14d7f4641bd96ce37c1e0fea642caf04"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0NzA5Ng==", "bodyText": "Since componentType in common model is enum. When parsing from recipe, the \"raw\" will be ignored.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483347096", "createdAt": "2020-09-04T02:13:10Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "diffHunk": "@@ -168,7 +168,7 @@ static void tearDown() {\n     @Order(1)\n     void GIVEN_sample_deployment_doc_WHEN_submitted_to_deployment_task_THEN_services_start_in_kernel(ExtensionContext context)\n             throws Exception {\n-        ((Map) kernel.getContext().getvIfExists(Kernel.SERVICE_TYPE_TO_CLASS_MAP_KEY).get()).put(\"raw\",\n+        ((Map) kernel.getContext().getvIfExists(Kernel.SERVICE_TYPE_TO_CLASS_MAP_KEY).get()).put(\"plugin\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5ODA2Mg=="}, "originalCommit": {"oid": "0c87e9ca14d7f4641bd96ce37c1e0fea642caf04"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTgyNjU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzowNjowMVrOHM6M8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMjoxNTozMVrOHM9M9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5ODU0Nw==", "bodyText": "null might be fine. Customers shouldn't be specifying it", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483298547", "createdAt": "2020-09-03T23:06:01Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -75,13 +76,19 @@\n \n         PlatformSpecificManifest platformSpecificManifest = optionalPlatformSpecificManifest.get();\n \n+        // null check on componentType. Shouldn't happen if cloud recipe is parsed correctly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c87e9ca14d7f4641bd96ce37c1e0fea642caf04"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0NzE0OQ==", "bodyText": "Is it only specified by lambda launcher?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483347149", "createdAt": "2020-09-04T02:13:25Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -75,13 +76,19 @@\n \n         PlatformSpecificManifest platformSpecificManifest = optionalPlatformSpecificManifest.get();\n \n+        // null check on componentType. Shouldn't happen if cloud recipe is parsed correctly.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5ODU0Nw=="}, "originalCommit": {"oid": "0c87e9ca14d7f4641bd96ce37c1e0fea642caf04"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0NzcwMQ==", "bodyText": "Component type is used by us for plugin and lambda, that's all", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483347701", "createdAt": "2020-09-04T02:15:31Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -75,13 +76,19 @@\n \n         PlatformSpecificManifest platformSpecificManifest = optionalPlatformSpecificManifest.get();\n \n+        // null check on componentType. Shouldn't happen if cloud recipe is parsed correctly.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5ODU0Nw=="}, "originalCommit": {"oid": "0c87e9ca14d7f4641bd96ce37c1e0fea642caf04"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTgyOTYyOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/LocalDeploymentListenerIntegTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzowNzozMFrOHM6Org==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzoxMDo0MFrOHM6SZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5ODk5MA==", "bodyText": "plugin shouldn't have a class", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483298990", "createdAt": "2020-09-03T23:07:30Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/LocalDeploymentListenerIntegTest.java", "diffHunk": "@@ -68,6 +70,9 @@ static void tearDown() {\n     void GIVEN_sample_deployment_doc_WHEN_submitted_to_deployment_task_THEN_services_start_in_kernel(\n             ExtensionContext context) throws Exception {\n         ignoreExceptionOfType(context, PackageDownloadException.class);\n+        // set class for PLUGIN\n+        ((Map) kernel.getContext().getvIfExists(Kernel.SERVICE_TYPE_TO_CLASS_MAP_KEY).get()).put(\"plugin\",\n+                GenericExternalService.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c87e9ca14d7f4641bd96ce37c1e0fea642caf04"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5OTk0MA==", "bodyText": "Use EvergreenService", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r483299940", "createdAt": "2020-09-03T23:10:40Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/LocalDeploymentListenerIntegTest.java", "diffHunk": "@@ -68,6 +70,9 @@ static void tearDown() {\n     void GIVEN_sample_deployment_doc_WHEN_submitted_to_deployment_task_THEN_services_start_in_kernel(\n             ExtensionContext context) throws Exception {\n         ignoreExceptionOfType(context, PackageDownloadException.class);\n+        // set class for PLUGIN\n+        ((Map) kernel.getContext().getvIfExists(Kernel.SERVICE_TYPE_TO_CLASS_MAP_KEY).get()).put(\"plugin\",\n+                GenericExternalService.class.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5ODk5MA=="}, "originalCommit": {"oid": "0c87e9ca14d7f4641bd96ce37c1e0fea642caf04"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNTA4NDE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMzoyNToxOFrOHOxPJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwMDowMzozMVrOHOx8AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0ODgwNg==", "bodyText": "what happened to the strong typing?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r485248806", "createdAt": "2020-09-08T23:25:18Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -126,12 +132,17 @@ private static PackageParameter convertParameterFromFile(@Nonnull ComponentParam\n     }\n \n     private static ComponentArtifact convertArtifactFromFile(\n-            @Nonnull com.aws.iot.evergreen.packagemanager.common.ComponentArtifact componentArtifact) {\n+            @Nonnull com.amazon.aws.iot.greengrass.component.common.ComponentArtifact componentArtifact) {\n+        // null check on Unnarchive. Shouldn't happen if cloud recipe is parsed correctly.\n+        Unarchive unArchive = Unarchive.NONE;\n+        if (componentArtifact.getUnarchive() != null) {\n+            unArchive = Unarchive.valueOf(componentArtifact.getUnarchive().name());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6696ac116f220736f8cbd2da22753c12fe37678b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1NzU2NA==", "bodyText": "Or I guess, why are there 2 \"Unarchive\"s? Let's just use one", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r485257564", "createdAt": "2020-09-08T23:54:28Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -126,12 +132,17 @@ private static PackageParameter convertParameterFromFile(@Nonnull ComponentParam\n     }\n \n     private static ComponentArtifact convertArtifactFromFile(\n-            @Nonnull com.aws.iot.evergreen.packagemanager.common.ComponentArtifact componentArtifact) {\n+            @Nonnull com.amazon.aws.iot.greengrass.component.common.ComponentArtifact componentArtifact) {\n+        // null check on Unnarchive. Shouldn't happen if cloud recipe is parsed correctly.\n+        Unarchive unArchive = Unarchive.NONE;\n+        if (componentArtifact.getUnarchive() != null) {\n+            unArchive = Unarchive.valueOf(componentArtifact.getUnarchive().name());\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0ODgwNg=="}, "originalCommit": {"oid": "6696ac116f220736f8cbd2da22753c12fe37678b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI2MDA1MQ==", "bodyText": "Yeah. We have kernel/model/PackageRecipe vs common/model/ComponentRecipe because they now differ completely. But I'm fine with they both use same type from common model, like for \"componentType\" to use common/model/ComponentType.\nThe alternative is to have two set of models completely. For example,  kernel/model/ComponentType vs common/model/ComponentType. But it's a lot of additional work and we don't really gain any benefit until these two models differ. (ex. need to add device specific helper logic).", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r485260051", "createdAt": "2020-09-09T00:02:35Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -126,12 +132,17 @@ private static PackageParameter convertParameterFromFile(@Nonnull ComponentParam\n     }\n \n     private static ComponentArtifact convertArtifactFromFile(\n-            @Nonnull com.aws.iot.evergreen.packagemanager.common.ComponentArtifact componentArtifact) {\n+            @Nonnull com.amazon.aws.iot.greengrass.component.common.ComponentArtifact componentArtifact) {\n+        // null check on Unnarchive. Shouldn't happen if cloud recipe is parsed correctly.\n+        Unarchive unArchive = Unarchive.NONE;\n+        if (componentArtifact.getUnarchive() != null) {\n+            unArchive = Unarchive.valueOf(componentArtifact.getUnarchive().name());\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0ODgwNg=="}, "originalCommit": {"oid": "6696ac116f220736f8cbd2da22753c12fe37678b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI2MDI4OA==", "bodyText": "Having said that though, no additional change is required for this PR - I'm picking this up on top of it to finalize models for B1.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r485260288", "createdAt": "2020-09-09T00:03:31Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/converter/RecipeLoader.java", "diffHunk": "@@ -126,12 +132,17 @@ private static PackageParameter convertParameterFromFile(@Nonnull ComponentParam\n     }\n \n     private static ComponentArtifact convertArtifactFromFile(\n-            @Nonnull com.aws.iot.evergreen.packagemanager.common.ComponentArtifact componentArtifact) {\n+            @Nonnull com.amazon.aws.iot.greengrass.component.common.ComponentArtifact componentArtifact) {\n+        // null check on Unnarchive. Shouldn't happen if cloud recipe is parsed correctly.\n+        Unarchive unArchive = Unarchive.NONE;\n+        if (componentArtifact.getUnarchive() != null) {\n+            unArchive = Unarchive.valueOf(componentArtifact.getUnarchive().name());\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0ODgwNg=="}, "originalCommit": {"oid": "6696ac116f220736f8cbd2da22753c12fe37678b"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNTY2NDYwOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/local_store_content/recipes/CustomerApp-1.0.0.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNDo0NDowMVrOHO2c2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNDo0NDoxNVrOHO2dMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzNDIzNA==", "bodyText": "don't sleep", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r485334234", "createdAt": "2020-09-09T04:44:01Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/local_store_content/recipes/CustomerApp-1.0.0.yaml", "diffHunk": "@@ -5,6 +5,22 @@ Description: A customer app\n Publisher: Me\n Version: '1.0.0'\n Manifests:\n+  - Platform:\n+      os: windows\n+    Parameters:\n+      - name: sampleText\n+        value: This is a test\n+        type: STRING\n+    Lifecycle:\n+      run:\n+        powershell -command \"& { echo \\\"Hello evergreen. {{params:sampleText.value}}\\\"; sleep 5 }\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b98e18e5aeb21b69a53a7a5677945d0312c7b1b0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzNDMyMw==", "bodyText": "unless you need that for some reason", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/408#discussion_r485334323", "createdAt": "2020-09-09T04:44:15Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/local_store_content/recipes/CustomerApp-1.0.0.yaml", "diffHunk": "@@ -5,6 +5,22 @@ Description: A customer app\n Publisher: Me\n Version: '1.0.0'\n Manifests:\n+  - Platform:\n+      os: windows\n+    Parameters:\n+      - name: sampleText\n+        value: This is a test\n+        type: STRING\n+    Lifecycle:\n+      run:\n+        powershell -command \"& { echo \\\"Hello evergreen. {{params:sampleText.value}}\\\"; sleep 5 }\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzNDIzNA=="}, "originalCommit": {"oid": "b98e18e5aeb21b69a53a7a5677945d0312c7b1b0"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 749, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}