{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjkxOTMz", "number": 272, "title": "Add readme for config schema", "bodyText": "Issue #, if available:\nDescription of changes:\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-06-05T19:33:58Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272", "merged": true, "mergeCommit": {"oid": "52609f4407468d07def0ba74726e2759b94cdfaa"}, "closed": true, "closedAt": "2020-06-09T18:02:19Z", "author": {"login": "ShirleyZheng92"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoYBpBAFqTQyNTU3NTI5MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcponS3AFqTQyNzM5MjE1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTc1Mjkx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#pullrequestreview-425575291", "createdAt": "2020-06-05T19:42:34Z", "commit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NjU4NTA2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#pullrequestreview-425658506", "createdAt": "2020-06-05T22:16:07Z", "commit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMjoxNjowN1rOGf-1-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMjo0ODowM1rOGf_WcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4ODY2NA==", "bodyText": "What's the difference of load and apply diff?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436188664", "createdAt": "2020-06-05T22:16:07Z", "author": {"login": "hui-yang"}, "path": "README_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4ODc3Mw==", "bodyText": "typo: starts", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436188773", "createdAt": "2020-06-05T22:16:26Z", "author": {"login": "hui-yang"}, "path": "README_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation\n+\n+Once the config is resolved and loaded in memory, it doesn\u2019t have any platform branches.\n+\n+## Config Schema - Overview\n+\n+Config file defines how kernel start each service.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4OTMyNQ==", "bodyText": "What's separate doc? I think it's ok if we don't explain all design choices here.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436189325", "createdAt": "2020-06-05T22:18:23Z", "author": {"login": "hui-yang"}, "path": "README_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation\n+\n+Once the config is resolved and loaded in memory, it doesn\u2019t have any platform branches.\n+\n+## Config Schema - Overview\n+\n+Config file defines how kernel start each service.\n+A config file in kernel memory after resolving platform looks like below:\n+\n+```\n+version:\n+  <version> # Discussed in separate doc of schema versioning", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4OTk4MA==", "bodyText": "typo: Root.\nnit: can we avoid using component here? \ud83d\ude04", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436189980", "createdAt": "2020-06-05T22:20:55Z", "author": {"login": "hui-yang"}, "path": "README_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation\n+\n+Once the config is resolved and loaded in memory, it doesn\u2019t have any platform branches.\n+\n+## Config Schema - Overview\n+\n+Config file defines how kernel start each service.\n+A config file in kernel memory after resolving platform looks like below:\n+\n+```\n+version:\n+  <version> # Discussed in separate doc of schema versioning\n+services:\n+  <service1>: #Service name uniquely identifies a service\n+    dependencies: # declare dependency, \n+      - <serviceName>:[SOFT/HARD]\n+        \n+    lifecycle: # lifecycle commands.\n+    \n+    logging: # logging config.\n+      \n+    custom: # custom config. \n+    \n+  <service2>:\n+    lifecycle:\n+    logging:\n+    \n+system:\n+  <kernel system config> \n+```\n+\n+### Config Validation\n+\n+root keys have to be recognized keys. Each component has its own validation logic.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5MDI3Mg==", "bodyText": "typo: include\nDo we support pluggable EG components now?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436190272", "createdAt": "2020-06-05T22:22:01Z", "author": {"login": "hui-yang"}, "path": "README_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation\n+\n+Once the config is resolved and loaded in memory, it doesn\u2019t have any platform branches.\n+\n+## Config Schema - Overview\n+\n+Config file defines how kernel start each service.\n+A config file in kernel memory after resolving platform looks like below:\n+\n+```\n+version:\n+  <version> # Discussed in separate doc of schema versioning\n+services:\n+  <service1>: #Service name uniquely identifies a service\n+    dependencies: # declare dependency, \n+      - <serviceName>:[SOFT/HARD]\n+        \n+    lifecycle: # lifecycle commands.\n+    \n+    logging: # logging config.\n+      \n+    custom: # custom config. \n+    \n+  <service2>:\n+    lifecycle:\n+    logging:\n+    \n+system:\n+  <kernel system config> \n+```\n+\n+### Config Validation\n+\n+root keys have to be recognized keys. Each component has its own validation logic.\n+\n+## Service Config Components\n+\n+### Lifecycle\n+\n+\u2018Services\u2019 field contains all services config. Services including custom services and pluggable evergreen components.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5MTI2MA==", "bodyText": "nit: I think these four settings can be consolidated to one model description, or explicitly discuss each lifecycle key with or without an example, but I'll trust your decision.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436191260", "createdAt": "2020-06-05T22:25:46Z", "author": {"login": "hui-yang"}, "path": "README_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation\n+\n+Once the config is resolved and loaded in memory, it doesn\u2019t have any platform branches.\n+\n+## Config Schema - Overview\n+\n+Config file defines how kernel start each service.\n+A config file in kernel memory after resolving platform looks like below:\n+\n+```\n+version:\n+  <version> # Discussed in separate doc of schema versioning\n+services:\n+  <service1>: #Service name uniquely identifies a service\n+    dependencies: # declare dependency, \n+      - <serviceName>:[SOFT/HARD]\n+        \n+    lifecycle: # lifecycle commands.\n+    \n+    logging: # logging config.\n+      \n+    custom: # custom config. \n+    \n+  <service2>:\n+    lifecycle:\n+    logging:\n+    \n+system:\n+  <kernel system config> \n+```\n+\n+### Config Validation\n+\n+root keys have to be recognized keys. Each component has its own validation logic.\n+\n+## Service Config Components\n+\n+### Lifecycle\n+\n+\u2018Services\u2019 field contains all services config. Services including custom services and pluggable evergreen components.  \n+\n+```\n+services: \n+<serviceName>:\n+  lifecycle:\n+    install:\n+      skipif: onpath <executable>|exists <file>\n+      script:\n+      timeout: # default to be infinity. Number of seconds to timeout.\n+      environment (currently setenv): # optional\n+      \n+    startup: # mutually exclusive from 'run'\n+      script: # eg: brew services start influxdb\n+      timeout: # Optional\n+      environment:  # optional\n+        <key>: overrideValue\n+        \n+    run: # mutually exclusive from 'startup'\n+      script:\n+      environment:\n+      timeout: # Optional\n+      periodicity: #Perodically run the command\n+      \n+    shutdown: # can co-exist with both startup/run\n+      script:\n+      environment: #optional\n+      timeout: # Optional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5MTc1OA==", "bodyText": "For my info, does install/startup/run/shutdown support retryPolicy?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436191758", "createdAt": "2020-06-05T22:27:36Z", "author": {"login": "hui-yang"}, "path": "README_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation\n+\n+Once the config is resolved and loaded in memory, it doesn\u2019t have any platform branches.\n+\n+## Config Schema - Overview\n+\n+Config file defines how kernel start each service.\n+A config file in kernel memory after resolving platform looks like below:\n+\n+```\n+version:\n+  <version> # Discussed in separate doc of schema versioning\n+services:\n+  <service1>: #Service name uniquely identifies a service\n+    dependencies: # declare dependency, \n+      - <serviceName>:[SOFT/HARD]\n+        \n+    lifecycle: # lifecycle commands.\n+    \n+    logging: # logging config.\n+      \n+    custom: # custom config. \n+    \n+  <service2>:\n+    lifecycle:\n+    logging:\n+    \n+system:\n+  <kernel system config> \n+```\n+\n+### Config Validation\n+\n+root keys have to be recognized keys. Each component has its own validation logic.\n+\n+## Service Config Components\n+\n+### Lifecycle\n+\n+\u2018Services\u2019 field contains all services config. Services including custom services and pluggable evergreen components.  \n+\n+```\n+services: \n+<serviceName>:\n+  lifecycle:\n+    install:\n+      skipif: onpath <executable>|exists <file>\n+      script:\n+      timeout: # default to be infinity. Number of seconds to timeout.\n+      environment (currently setenv): # optional\n+      \n+    startup: # mutually exclusive from 'run'\n+      script: # eg: brew services start influxdb\n+      timeout: # Optional\n+      environment:  # optional\n+        <key>: overrideValue\n+        \n+    run: # mutually exclusive from 'startup'\n+      script:\n+      environment:\n+      timeout: # Optional\n+      periodicity: #Perodically run the command\n+      \n+    shutdown: # can co-exist with both startup/run\n+      script:\n+      environment: #optional\n+      timeout: # Optional\n+    \n+    environment: # apply to all commands\n+      <key>: defaultValue\n+    \n+    healthcheck: # do health check when service is in Running\n+      script: # non-zero exit trigger error\n+      checkPeriod: # optional, default to be 0\n+      environment: #override\n+      \n+    recover:\n+      script: # will be run every time service enters error.\n+      environment: #override\n+      # referring to https://docs.docker.com/v17.12/compose/compose-file/#restart_policy\n+      retryPolicy:\n+        delay: # default to be 0. Time to wait between retry.\n+        maxAttempts: # default to be infinite. After N times of error, service enter Broken state.\n+        window: # How long to wait before deciding if a restart has succeeded", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5MjE3NQ==", "bodyText": "Add an extra new line before this, if that's your intended format. Same for 2 other places.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436192175", "createdAt": "2020-06-05T22:29:14Z", "author": {"login": "hui-yang"}, "path": "README_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5Njk3Ng==", "bodyText": "I would rephrase the section a little with the same information. One option:\nServices can define custom configurations in the \u2018custom\u2019 field. Custom configurations are passed to services through IPC. Service can listen on config changes via IPC and apply the new configuration without being forced to restart by Kernel. Details of how configuration change push/listening can be supported is documented in Configuration IPC Application and Dynamically reload config without restarting Evergreen service\n\nNote: Currently custom configuration only support one level key-value. Detailed discussion is at Custom config supporting complex data structure", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436196976", "createdAt": "2020-06-05T22:48:03Z", "author": {"login": "hui-yang"}, "path": "README_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation\n+\n+Once the config is resolved and loaded in memory, it doesn\u2019t have any platform branches.\n+\n+## Config Schema - Overview\n+\n+Config file defines how kernel start each service.\n+A config file in kernel memory after resolving platform looks like below:\n+\n+```\n+version:\n+  <version> # Discussed in separate doc of schema versioning\n+services:\n+  <service1>: #Service name uniquely identifies a service\n+    dependencies: # declare dependency, \n+      - <serviceName>:[SOFT/HARD]\n+        \n+    lifecycle: # lifecycle commands.\n+    \n+    logging: # logging config.\n+      \n+    custom: # custom config. \n+    \n+  <service2>:\n+    lifecycle:\n+    logging:\n+    \n+system:\n+  <kernel system config> \n+```\n+\n+### Config Validation\n+\n+root keys have to be recognized keys. Each component has its own validation logic.\n+\n+## Service Config Components\n+\n+### Lifecycle\n+\n+\u2018Services\u2019 field contains all services config. Services including custom services and pluggable evergreen components.  \n+\n+```\n+services: \n+<serviceName>:\n+  lifecycle:\n+    install:\n+      skipif: onpath <executable>|exists <file>\n+      script:\n+      timeout: # default to be infinity. Number of seconds to timeout.\n+      environment (currently setenv): # optional\n+      \n+    startup: # mutually exclusive from 'run'\n+      script: # eg: brew services start influxdb\n+      timeout: # Optional\n+      environment:  # optional\n+        <key>: overrideValue\n+        \n+    run: # mutually exclusive from 'startup'\n+      script:\n+      environment:\n+      timeout: # Optional\n+      periodicity: #Perodically run the command\n+      \n+    shutdown: # can co-exist with both startup/run\n+      script:\n+      environment: #optional\n+      timeout: # Optional\n+    \n+    environment: # apply to all commands\n+      <key>: defaultValue\n+    \n+    healthcheck: # do health check when service is in Running\n+      script: # non-zero exit trigger error\n+      checkPeriod: # optional, default to be 0\n+      environment: #override\n+      \n+    recover:\n+      script: # will be run every time service enters error.\n+      environment: #override\n+      # referring to https://docs.docker.com/v17.12/compose/compose-file/#restart_policy\n+      retryPolicy:\n+        delay: # default to be 0. Time to wait between retry.\n+        maxAttempts: # default to be infinite. After N times of error, service enter Broken state.\n+        window: # How long to wait before deciding if a restart has succeeded\n+        \n+    checkIfSafeToUpdate:\n+       recheckPeriod: 5\n+       script:\n+\n+    updatesCompleted:\n+       script:\n+```\n+\n+### Dependency\n+\n+Detailed documentation is at [Evergreen Service Hot-pluggable Dependencies](https://quip-amazon.com/y29dAC02fUBu)\n+\n+```\n+myCustomService:\n+  dependencies:\n+    - <serviceName>:dependencyType\n+```\n+\n+**DependencyType**\n+DependencyType is either **SOFT or HARD**\n+\n+### Logging\n+\n+Detailed design doc at: [[Design] Evergreen Logging Service](https://quip-amazon.com/QbwaANkaR95C)\n+\n+### Custom configuration\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018ae0696045988aaa127e514279ce97c217831a"}, "originalPosition": 121}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "018ae0696045988aaa127e514279ce97c217831a", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/018ae0696045988aaa127e514279ce97c217831a", "committedDate": "2020-06-05T19:32:47Z", "message": "Add readme for config schema"}, "afterCommit": {"oid": "3acc2eb707c1bf0fe7dbd539eda9e29620f118a8", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3acc2eb707c1bf0fe7dbd539eda9e29620f118a8", "committedDate": "2020-06-08T18:58:16Z", "message": "Add readme for config schema"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NjA2MDM3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#pullrequestreview-426606037", "createdAt": "2020-06-08T20:43:44Z", "commit": {"oid": "3acc2eb707c1bf0fe7dbd539eda9e29620f118a8"}, "state": "DISMISSED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo0Mzo0NFrOGgvtUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo0NDoyNlrOGgvuvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4OTI2NQ==", "bodyText": "services also have version.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436989265", "createdAt": "2020-06-08T20:43:44Z", "author": {"login": "MikeDombo"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation\n+\n+Once the config is resolved and loaded in memory, it doesn\u2019t have any platform branches.\n+\n+## Config Schema - Overview\n+\n+Config file defines how kernel start each service.\n+A config file in kernel memory after resolving platform looks like below:\n+\n+```\n+version:\n+  <version> # Discussed in separate doc of schema versioning\n+services:\n+  <service1>: #Service name uniquely identifies a service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3acc2eb707c1bf0fe7dbd539eda9e29620f118a8"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4OTM5NA==", "bodyText": "capitalize root", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436989394", "createdAt": "2020-06-08T20:43:58Z", "author": {"login": "MikeDombo"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation\n+\n+Once the config is resolved and loaded in memory, it doesn\u2019t have any platform branches.\n+\n+## Config Schema - Overview\n+\n+Config file defines how kernel start each service.\n+A config file in kernel memory after resolving platform looks like below:\n+\n+```\n+version:\n+  <version> # Discussed in separate doc of schema versioning\n+services:\n+  <service1>: #Service name uniquely identifies a service\n+    dependencies: # declare dependency, \n+      - <serviceName>:[SOFT/HARD]\n+        \n+    lifecycle: # lifecycle commands.\n+    \n+    logging: # logging config.\n+      \n+    custom: # custom config. \n+    \n+  <service2>:\n+    lifecycle:\n+    logging:\n+    \n+system:\n+  <kernel system config> \n+```\n+\n+### Config Validation\n+\n+root keys have to be recognized keys. Each component has its own validation logic.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3acc2eb707c1bf0fe7dbd539eda9e29620f118a8"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4OTYyOQ==", "bodyText": "environment isn't a key, unless you want us to change it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#discussion_r436989629", "createdAt": "2020-06-08T20:44:26Z", "author": {"login": "MikeDombo"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -0,0 +1,152 @@\n+# Evergreen Kernel Configuration Schema\n+Detailed doc in https://quip-amazon.com/35xMAtuSgvha\n+\n+## Resolve config workflow\n+\n+**Config load**\n+Raw yaml file \u2192 Resolve platform & Platform Validation (eg: return error on unrecognized platform) \u2192 Resolve Config & Validation \u2192 take effect\n+\n+**Config Applying diff**\n+Load raw yaml file of the new config \u2192 Resolve platform & Platform Validation \u2192 Resolve Config & validation\n+\n+Once the config is resolved and loaded in memory, it doesn\u2019t have any platform branches.\n+\n+## Config Schema - Overview\n+\n+Config file defines how kernel start each service.\n+A config file in kernel memory after resolving platform looks like below:\n+\n+```\n+version:\n+  <version> # Discussed in separate doc of schema versioning\n+services:\n+  <service1>: #Service name uniquely identifies a service\n+    dependencies: # declare dependency, \n+      - <serviceName>:[SOFT/HARD]\n+        \n+    lifecycle: # lifecycle commands.\n+    \n+    logging: # logging config.\n+      \n+    custom: # custom config. \n+    \n+  <service2>:\n+    lifecycle:\n+    logging:\n+    \n+system:\n+  <kernel system config> \n+```\n+\n+### Config Validation\n+\n+root keys have to be recognized keys. Each component has its own validation logic.\n+\n+## Service Config Components\n+\n+### Lifecycle\n+\n+\u2018Services\u2019 field contains all services config. Services including custom services and pluggable evergreen components.  \n+\n+```\n+services: \n+<serviceName>:\n+  lifecycle:\n+    install:\n+      skipif: onpath <executable>|exists <file>\n+      script:\n+      timeout: # default to be infinity. Number of seconds to timeout.\n+      environment (currently setenv): # optional\n+      \n+    startup: # mutually exclusive from 'run'\n+      script: # eg: brew services start influxdb\n+      timeout: # Optional\n+      environment:  # optional\n+        <key>: overrideValue\n+        \n+    run: # mutually exclusive from 'startup'\n+      script:\n+      environment:\n+      timeout: # Optional\n+      periodicity: #Perodically run the command\n+      \n+    shutdown: # can co-exist with both startup/run\n+      script:\n+      environment: #optional\n+      timeout: # Optional\n+    \n+    environment: # apply to all commands", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3acc2eb707c1bf0fe7dbd539eda9e29620f118a8"}, "originalPosition": 78}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3acc2eb707c1bf0fe7dbd539eda9e29620f118a8", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3acc2eb707c1bf0fe7dbd539eda9e29620f118a8", "committedDate": "2020-06-08T18:58:16Z", "message": "Add readme for config schema"}, "afterCommit": {"oid": "ea8f8ddffe42b1588ca7c3c40a16c17c13c930cc", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ea8f8ddffe42b1588ca7c3c40a16c17c13c930cc", "committedDate": "2020-06-09T17:10:40Z", "message": "Add readme for config schema"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "780416f3916bf663fdbc744eb772557f1ae51896", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/780416f3916bf663fdbc744eb772557f1ae51896", "committedDate": "2020-06-09T17:28:04Z", "message": "Add readme for config schema"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea8f8ddffe42b1588ca7c3c40a16c17c13c930cc", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ea8f8ddffe42b1588ca7c3c40a16c17c13c930cc", "committedDate": "2020-06-09T17:10:40Z", "message": "Add readme for config schema"}, "afterCommit": {"oid": "780416f3916bf663fdbc744eb772557f1ae51896", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/780416f3916bf663fdbc744eb772557f1ae51896", "committedDate": "2020-06-09T17:28:04Z", "message": "Add readme for config schema"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3Mzg4NTEz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#pullrequestreview-427388513", "createdAt": "2020-06-09T17:31:11Z", "commit": {"oid": "780416f3916bf663fdbc744eb772557f1ae51896"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzkyMTU1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/272#pullrequestreview-427392155", "createdAt": "2020-06-09T17:36:06Z", "commit": {"oid": "780416f3916bf663fdbc744eb772557f1ae51896"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2249, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}