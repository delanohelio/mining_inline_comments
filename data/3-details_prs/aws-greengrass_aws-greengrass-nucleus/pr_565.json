{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4ODEwNjQ3", "number": 565, "title": "Using symlink with IPC server so that socket filepath is short", "bodyText": "Issue #, if available:\nSocket paths accept only 108 characters. So creating a symlink to pass to the IPCServer.\nDescription of changes:\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-10-23T08:38:21Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565", "merged": true, "mergeCommit": {"oid": "04511fca5d9c83fecaad39b9d1caaf52b615c7bb"}, "closed": true, "closedAt": "2020-10-28T00:12:37Z", "author": {"login": "abanthiy"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVX6xDgFqTUxNTc1MTIwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWyLwmAFqTUxODIzODg1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NzUxMjAz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#pullrequestreview-515751203", "createdAt": "2020-10-23T15:01:38Z", "commit": {"oid": "f20365ef64835e2d59f1dbae7218ae7b97f59e21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNTowMTozOVrOHnRsXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNTowMTozOVrOHnRsXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0NjM5OQ==", "bodyText": "how is this going to work given that stuff is running in their own work dirs?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#discussion_r510946399", "createdAt": "2020-10-23T15:01:39Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java", "diffHunk": "@@ -38,6 +39,7 @@\n                 new ObjectMapper().configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, false)\n                         .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n     public static final String IPC_SERVER_DOMAIN_SOCKET_FILENAME = \"ipcEventStreamServer\";\n+    public static final String IPC_SERVER_DOMAIN_SOCKET_FILENAME_SYMLINK = \"./ipcEventStreamServer\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20365ef64835e2d59f1dbae7218ae7b97f59e21"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f20365ef64835e2d59f1dbae7218ae7b97f59e21", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f20365ef64835e2d59f1dbae7218ae7b97f59e21", "committedDate": "2020-10-23T08:36:38Z", "message": "Using symlink with IPC server so that socket filepath is short"}, "afterCommit": {"oid": "d291259ab7e8f651e5f2fb7425a41d12b4436994", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d291259ab7e8f651e5f2fb7425a41d12b4436994", "committedDate": "2020-10-23T18:40:55Z", "message": "Using symlink with IPC server so that socket filepath is short"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d291259ab7e8f651e5f2fb7425a41d12b4436994", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d291259ab7e8f651e5f2fb7425a41d12b4436994", "committedDate": "2020-10-23T18:40:55Z", "message": "Using symlink with IPC server so that socket filepath is short"}, "afterCommit": {"oid": "f33d0dc2db8599c30bcdd4ccdad10b3d4da6897f", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f33d0dc2db8599c30bcdd4ccdad10b3d4da6897f", "committedDate": "2020-10-23T18:50:15Z", "message": "Using symlink with IPC server so that socket filepath is short"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f33d0dc2db8599c30bcdd4ccdad10b3d4da6897f", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f33d0dc2db8599c30bcdd4ccdad10b3d4da6897f", "committedDate": "2020-10-23T18:50:15Z", "message": "Using symlink with IPC server so that socket filepath is short"}, "afterCommit": {"oid": "b629d22118c9a704b150574bb1fc213cf2b6bb30", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b629d22118c9a704b150574bb1fc213cf2b6bb30", "committedDate": "2020-10-23T18:51:46Z", "message": "Using symlink with IPC server so that socket filepath is short"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e2e98b27d136099ba4d2e25d928e47a4528b908", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1e2e98b27d136099ba4d2e25d928e47a4528b908", "committedDate": "2020-10-25T22:08:56Z", "message": "Making symlink to nucleus root rather than to the socket file"}, "afterCommit": {"oid": "e1999a74b092aee08acde6b3789111b334b72a76", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e1999a74b092aee08acde6b3789111b334b72a76", "committedDate": "2020-10-25T22:13:18Z", "message": "Making symlink to nucleus root rather than to the socket file"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2359ca93bdf4ec8fc559bb39f63f59f9e876c208", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2359ca93bdf4ec8fc559bb39f63f59f9e876c208", "committedDate": "2020-10-25T22:25:07Z", "message": "Fixing deletion of nucleus root path symlink"}, "afterCommit": {"oid": "12db8f163de7c9fa624067c7f595117c2e3f858c", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/12db8f163de7c9fa624067c7f595117c2e3f858c", "committedDate": "2020-10-25T22:26:58Z", "message": "Fixing deletion of nucleus root path symlink"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDE4NzIx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#pullrequestreview-516418721", "createdAt": "2020-10-26T00:57:10Z", "commit": {"oid": "12db8f163de7c9fa624067c7f595117c2e3f858c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMDo1NzoxMVrOHn-K0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMDo1NzoxMVrOHn-K0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3NTA4OQ==", "bodyText": "you're assuming that the CWD of the nucleus is the root which isn't necessarily true. You should use an absolute path when creating and deleting the symlinks to make sure they're all pointing to the proper location.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#discussion_r511675089", "createdAt": "2020-10-26T00:57:11Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java", "diffHunk": "@@ -85,27 +96,51 @@ public void startup() {\n         socketOptions.domain = SocketOptions.SocketDomain.LOCAL;\n         socketOptions.type = SocketOptions.SocketType.STREAM;\n         eventLoopGroup = new EventLoopGroup(1);\n-        ipcServerSocketPath = kernel.getNucleusPaths().rootPath()\n+        ipcServerSocketAbsolutePath = kernel.getNucleusPaths().rootPath()\n                 .resolve(IPC_SERVER_DOMAIN_SOCKET_FILENAME).toString();\n-        if (Files.exists(Paths.get(ipcServerSocketPath))) {\n+\n+        if (Files.exists(Paths.get(ipcServerSocketAbsolutePath))) {\n             try {\n                 logger.atDebug().log(\"Deleting the ipc server socket descriptor file\");\n-                Files.delete(Paths.get(ipcServerSocketPath));\n+                Files.delete(Paths.get(ipcServerSocketAbsolutePath));\n             } catch (IOException e) {\n                 logger.atError().setCause(e).log(\"Failed to delete the ipc server socket descriptor file\");\n             }\n         }\n+        if (Files.exists(Paths.get(NUCLEUS_ROOT_PATH_SYMLINK), LinkOption.NOFOLLOW_LINKS)) {\n+            try {\n+                logger.atDebug().log(\"Deleting the nucleus root path symlink\");\n+                Files.delete(Paths.get(NUCLEUS_ROOT_PATH_SYMLINK));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12db8f163de7c9fa624067c7f595117c2e3f858c"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDE4ODU3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#pullrequestreview-516418857", "createdAt": "2020-10-26T00:57:59Z", "commit": {"oid": "12db8f163de7c9fa624067c7f595117c2e3f858c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMDo1ODowMFrOHn-LRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMDo1ODowMFrOHn-LRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3NTIwNg==", "bodyText": "remove?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#discussion_r511675206", "createdAt": "2020-10-26T00:58:00Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/ipc/IPCEventStreamServiceTest.java", "diffHunk": "@@ -76,7 +84,18 @@\n     private AuthorizationHandler mockAuthorizationHandler;\n \n     @BeforeEach\n-    public void setup() {\n+    public void setup() throws IOException {\n+        Set<PosixFilePermission> filePermissions = Files.getPosixFilePermissions(mockRootPath);\n+        filePermissions.stream().forEach(perm -> logger.atInfo().log(perm));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12db8f163de7c9fa624067c7f595117c2e3f858c"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDE4OTM1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#pullrequestreview-516418935", "createdAt": "2020-10-26T00:58:27Z", "commit": {"oid": "12db8f163de7c9fa624067c7f595117c2e3f858c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMDo1ODoyOFrOHn-LfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMDo1ODoyOFrOHn-LfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3NTI2MQ==", "bodyText": "this won't be closed if the test fails. Use try with resources or try-finally", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#discussion_r511675261", "createdAt": "2020-10-26T00:58:28Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/ipc/IPCEventStreamServiceTest.java", "diffHunk": "@@ -97,41 +118,44 @@ public void tearDown() {\n     }\n \n     @Test\n-    public void testClientConnection() throws InterruptedException, IOException, ExecutionException {\n-        final ClientConnection[] clientConnectionArray = {null};\n+    @SuppressWarnings(\"PMD.CloseResource\")\n+    public void testClientConnection() throws Exception {\n         CountDownLatch connectionLatch = new CountDownLatch(1);\n \n         try (EventLoopGroup elg = new EventLoopGroup(1);\n              ClientBootstrap clientBootstrap = new ClientBootstrap(elg, new HostResolver(elg));\n              SocketOptions socketOptions = TestUtils.getSocketOptionsForIPC()) {\n \n             String ipcServerSocketPath = mockRootPath.resolve(IPC_SERVER_DOMAIN_SOCKET_FILENAME).toString();\n-            ClientConnection\n-                    .connect(ipcServerSocketPath, (short) DEFAULT_PORT_NUMBER, socketOptions, null, clientBootstrap, new ClientConnectionHandler() {\n-                        @Override\n-                        protected void onConnectionSetup(ClientConnection connection, int errorCode) {\n-                            connectionLatch.countDown();\n-                            clientConnectionArray[0] = connection;\n-                        }\n-\n-                        @Override\n-                        protected void onProtocolMessage(List<Header> headers, byte[] payload, MessageType messageType, int messageFlags) {\n-\n-                        }\n-\n-                        @Override\n-                        protected void onConnectionClosed(int closeReason) {\n-\n-                        }\n-                    }).get();\n+            final EventStreamRPCConnectionConfig config = new EventStreamRPCConnectionConfig(clientBootstrap, elg,\n+                    socketOptions, null, ipcServerSocketPath, DEFAULT_PORT_NUMBER,\n+                    GreengrassConnectMessageSupplier.connectMessageSupplier(\"authToken\"));\n+            final EventStreamRPCConnection connection = new EventStreamRPCConnection(config);\n+            final boolean disconnected[] = {false};\n+            final int disconnectedCode[] = {-1};\n+            //this is a bit cumbersome but does not prevent a convenience wrapper from exposing a sync\n+            //connect() or a connect() that returns a CompletableFuture that errors\n+            //this could be wrapped by utility methods to provide a more\n+            connection.connect(new EventStreamRPCConnection.LifecycleHandler() {\n+                @Override\n+                public void onConnect() {\n+                    connectionLatch.countDown();\n+                }\n+\n+                @Override\n+                public void onDisconnect(int errorCode) {\n+                    disconnected[0] = true;\n+                    disconnectedCode[0] = errorCode;\n+                }\n+\n+                //This on error is for any errors that is connection level, including problems during connect()\n+                @Override\n+                public boolean onError(Throwable t) {\n+                    return true;    //hints at handler to disconnect due to this error\n+                }\n+            });\n             assertTrue(connectionLatch.await(2, TimeUnit.SECONDS));\n-            GreengrassEventStreamConnectMessage connectMessagePayloadStructure =\n-                    new GreengrassEventStreamConnectMessage();\n-            connectMessagePayloadStructure.setAuthToken(\"authToken\");\n-            String payload = OBJECT_MAPPER.writeValueAsString(connectMessagePayloadStructure);\n-            clientConnectionArray[0].sendProtocolMessage(null, payload.getBytes(StandardCharsets.UTF_8),\n-                    MessageType.Connect, 0).get();\n-            clientConnectionArray[0].closeConnection(0);\n+            connection.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12db8f163de7c9fa624067c7f595117c2e3f858c"}, "originalPosition": 164}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f511a831008f6ef28383110832e9900dcfc767a", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3f511a831008f6ef28383110832e9900dcfc767a", "committedDate": "2020-10-26T22:23:17Z", "message": "Adding check to create symlink only when absolute path is greater than 108 chars"}, "afterCommit": {"oid": "c8c82a53c3d9a3b81a90871010be679d8934630b", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c8c82a53c3d9a3b81a90871010be679d8934630b", "committedDate": "2020-10-27T00:32:28Z", "message": "Adding check to create symlink only when absolute path is greater than 108 chars"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "718f31633c2546ed11bc2495a4d3260353c85847", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/718f31633c2546ed11bc2495a4d3260353c85847", "committedDate": "2020-10-27T17:26:30Z", "message": "Merge branch 'master' into ipcSocketPathShorten"}, "afterCommit": {"oid": "1bf2f9decdb27bffa8572cf9dc237f2e0442c914", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1bf2f9decdb27bffa8572cf9dc237f2e0442c914", "committedDate": "2020-10-27T17:38:35Z", "message": "Shortening the filename for ipc server socket"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MTc3NTMw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#pullrequestreview-518177530", "createdAt": "2020-10-27T21:49:30Z", "commit": {"oid": "1bf2f9decdb27bffa8572cf9dc237f2e0442c914"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjA2MDA2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#pullrequestreview-518206006", "createdAt": "2020-10-27T22:44:46Z", "commit": {"oid": "160669ed37d40c87cbd2204bab514e8b7febba0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMjo0NDo0NlrOHpTt5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMjo0NDo0NlrOHpTt5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3NjcwOQ==", "bodyText": "should we abort the startup?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#discussion_r513076709", "createdAt": "2020-10-27T22:44:46Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java", "diffHunk": "@@ -90,27 +104,51 @@ public void startup() {\n         socketOptions.domain = SocketOptions.SocketDomain.LOCAL;\n         socketOptions.type = SocketOptions.SocketType.STREAM;\n         eventLoopGroup = new EventLoopGroup(1);\n-        ipcServerSocketPath = kernel.getNucleusPaths().rootPath()\n+        ipcServerSocketAbsolutePath = kernel.getNucleusPaths().rootPath()\n                 .resolve(IPC_SERVER_DOMAIN_SOCKET_FILENAME).toString();\n-        if (Files.exists(Paths.get(ipcServerSocketPath))) {\n+\n+        if (Files.exists(Paths.get(ipcServerSocketAbsolutePath))) {\n             try {\n                 logger.atDebug().log(\"Deleting the ipc server socket descriptor file\");\n-                Files.delete(Paths.get(ipcServerSocketPath));\n+                Files.delete(Paths.get(ipcServerSocketAbsolutePath));\n             } catch (IOException e) {\n                 logger.atError().setCause(e).log(\"Failed to delete the ipc server socket descriptor file\");\n             }\n         }\n+\n         Topic kernelUri = config.getRoot().lookup(SETENV_CONFIG_NAMESPACE, NUCLEUS_DOMAIN_SOCKET_FILEPATH);\n-        kernelUri.withValue(ipcServerSocketPath);\n+        kernelUri.withValue(ipcServerSocketAbsolutePath);\n+        Topic kernelRelativeUri = config.getRoot().lookup(SETENV_CONFIG_NAMESPACE,\n+                NUCLEUS_DOMAIN_SOCKET_FILEPATH_FOR_COMPONENT);\n+        kernelRelativeUri.withValue(ipcServerSocketAbsolutePath);\n+\n+        boolean symLinkCreated = false;\n+\n+        try {\n+            // Usually we do not want to write outside of kernel root. Because of socket path length limitations we\n+            // will create a symlink only if needed\n+            if (ipcServerSocketAbsolutePath.length() > UDS_SOCKET_PATH_MAX_LEN) {\n+                Files.createSymbolicLink(Paths.get(NUCLEUS_ROOT_PATH_SYMLINK), kernel.getNucleusPaths().rootPath());\n+                kernelRelativeUri = config.getRoot().lookup(SETENV_CONFIG_NAMESPACE,\n+                        NUCLEUS_DOMAIN_SOCKET_FILEPATH_FOR_COMPONENT);\n+                kernelRelativeUri.withValue(IPC_SERVER_DOMAIN_SOCKET_RELATIVE_FILENAME);\n+                symLinkCreated = true;\n+            }\n+\n+        } catch (IOException e) {\n+            logger.atError().setCause(e).log(\"Cannot setup symlinks for the ipc server socket path\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "160669ed37d40c87cbd2204bab514e8b7febba0e"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjA2MzM0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#pullrequestreview-518206334", "createdAt": "2020-10-27T22:45:33Z", "commit": {"oid": "160669ed37d40c87cbd2204bab514e8b7febba0e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b230f6e200e6cd38c132eecd5d35393efbcefa75", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b230f6e200e6cd38c132eecd5d35393efbcefa75", "committedDate": "2020-10-27T23:17:02Z", "message": "Using symlink with IPC server so that socket filepath is short"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4cf64ec472c9b60f1bfd503a0220f8cf57ecbdb", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e4cf64ec472c9b60f1bfd503a0220f8cf57ecbdb", "committedDate": "2020-10-27T23:18:47Z", "message": "Removing symlink in the IPCServer close"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5113c8652a795a48a47286f0bae978a86c11c254", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5113c8652a795a48a47286f0bae978a86c11c254", "committedDate": "2020-10-27T23:19:22Z", "message": "Reverting symlink closure in close and using library code to create IPC connection in the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b387c43ce8530ef35b91b3f874d5ba322278c821", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b387c43ce8530ef35b91b3f874d5ba322278c821", "committedDate": "2020-10-27T23:19:22Z", "message": "Trying socket extention with the filename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e38171d9bde6de1332a6a434d2d657c04e4899db", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e38171d9bde6de1332a6a434d2d657c04e4899db", "committedDate": "2020-10-27T23:19:22Z", "message": "Making symlink to nucleus root rather than to the socket file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18bedbc31cad19b3859b10b54924f2170567ec8f", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/18bedbc31cad19b3859b10b54924f2170567ec8f", "committedDate": "2020-10-27T23:19:22Z", "message": "Fixing deletion of nucleus root path symlink"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e03dca2911eead14999f48c2c46768e993e7f5ef", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e03dca2911eead14999f48c2c46768e993e7f5ef", "committedDate": "2020-10-27T23:19:22Z", "message": "Adding check to create symlink only when absolute path is greater than 108 chars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2687acde969f3f76de0f5e1c25d3e2e57f18ba13", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2687acde969f3f76de0f5e1c25d3e2e57f18ba13", "committedDate": "2020-10-27T23:19:22Z", "message": "Shortening the filename for ipc server socket"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "160669ed37d40c87cbd2204bab514e8b7febba0e", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/160669ed37d40c87cbd2204bab514e8b7febba0e", "committedDate": "2020-10-27T22:43:05Z", "message": "Merge branch 'master' into ipcSocketPathShorten"}, "afterCommit": {"oid": "2687acde969f3f76de0f5e1c25d3e2e57f18ba13", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2687acde969f3f76de0f5e1c25d3e2e57f18ba13", "committedDate": "2020-10-27T23:19:22Z", "message": "Shortening the filename for ipc server socket"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjM4NjI3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#pullrequestreview-518238627", "createdAt": "2020-10-28T00:10:53Z", "commit": {"oid": "2687acde969f3f76de0f5e1c25d3e2e57f18ba13"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjM4ODUz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/565#pullrequestreview-518238853", "createdAt": "2020-10-28T00:11:40Z", "commit": {"oid": "2687acde969f3f76de0f5e1c25d3e2e57f18ba13"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2824, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}