{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNzExODIx", "number": 587, "title": "Override mqtt topics in IotJobsClient", "bodyText": "Issue #, if available:\nDescription of changes:\nData plane (in IotJobsHelper class)\n\nAdd class IotJobsClientWrapper to override hardcoded MQTT topics in IotJobsClient\n\nTODO: Job namespace is prefixed with cust- for now. Waiting for IoT Core fix to changing it back to aws-gg- prefix.\n\n\nTo support both beta customers and dev (only dev test accounts will be allowlisted for namespace jobs), we will keep both IotJobsClientWrapper and original IotJobsClient and pub/sub to both old and new topics. After cloud is fully migrated, IotJobsClient will be removed (TODO before Reinvent)\nAfter IoT device SDK is updated with namespace support in MQTT topics (TODO post-reinvent), we can switch back to IotJobsClient in device SDK.\n\nControl plane (in tests only)\n\nUpdate AWS SDK 2.15.17 to include namespace changes aws/aws-sdk-java-v2@effb59f\nAfter AWS SDK update, customer won't be able to create job in gg namespace, so deleting E2E test GIVEN_online_device_WHEN_create_multiple_deployments_THEN_deployments_execute_successfully_in_order\nReplaced delete job with CancelDeployment in cleanups. After AWS SDK update, customer won't be able to delete job in gg namespace.\n\nTODO: Also DeleteDeployment once it is available in cloud [GG-33763]\n\n\n\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-10-30T02:12:12Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587", "merged": true, "mergeCommit": {"oid": "75d83d1f91f6836ecc6c75f196e75f519a3cbda4"}, "closed": true, "closedAt": "2020-11-06T19:13:08Z", "author": {"login": "hui-yang"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXdHJmgBqjM5MzkxNjY2ODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZ74PLAFqTUyNTQyMjYyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6def890eed226b779a3df34c90177c1ca599472", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f6def890eed226b779a3df34c90177c1ca599472", "committedDate": "2020-10-30T01:59:23Z", "message": "Override mqtt topics in IotJobsClient"}, "afterCommit": {"oid": "296578cdab79cf67825c34be6a5da6503390d0ce", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/296578cdab79cf67825c34be6a5da6503390d0ce", "committedDate": "2020-10-30T02:12:20Z", "message": "Override mqtt topics in IotJobsClient"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "296578cdab79cf67825c34be6a5da6503390d0ce", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/296578cdab79cf67825c34be6a5da6503390d0ce", "committedDate": "2020-10-30T02:12:20Z", "message": "Override mqtt topics in IotJobsClient"}, "afterCommit": {"oid": "525199cd34ec8fbde07e502a686793f6da636f8f", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/525199cd34ec8fbde07e502a686793f6da636f8f", "committedDate": "2020-10-30T18:49:24Z", "message": "Override mqtt topics in IotJobsClient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTU2MTQy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#pullrequestreview-520956142", "createdAt": "2020-10-30T19:04:16Z", "commit": {"oid": "525199cd34ec8fbde07e502a686793f6da636f8f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTowNDoxNlrOHrcecQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTowNDoxNlrOHrcecQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNzM2MQ==", "bodyText": "Do we need all of these wrapper methods for our production code or a mix of production / tests code? If so, it'd be ideal to split them so it doesn't keep adding to the nucleus jar, not blocking on it though", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#discussion_r515317361", "createdAt": "2020-10-30T19:04:16Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/greengrass/deployment/IotJobsClientWrapper.java", "diffHunk": "@@ -0,0 +1,236 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.deployment;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import software.amazon.awssdk.crt.mqtt.MqttClientConnection;\n+import software.amazon.awssdk.crt.mqtt.MqttException;\n+import software.amazon.awssdk.crt.mqtt.MqttMessage;\n+import software.amazon.awssdk.crt.mqtt.QualityOfService;\n+import software.amazon.awssdk.iot.EnumSerializer;\n+import software.amazon.awssdk.iot.Timestamp;\n+import software.amazon.awssdk.iot.iotjobs.IotJobsClient;\n+import software.amazon.awssdk.iot.iotjobs.model.DescribeJobExecutionRequest;\n+import software.amazon.awssdk.iot.iotjobs.model.DescribeJobExecutionResponse;\n+import software.amazon.awssdk.iot.iotjobs.model.DescribeJobExecutionSubscriptionRequest;\n+import software.amazon.awssdk.iot.iotjobs.model.JobExecutionsChangedEvent;\n+import software.amazon.awssdk.iot.iotjobs.model.JobExecutionsChangedSubscriptionRequest;\n+import software.amazon.awssdk.iot.iotjobs.model.JobStatus;\n+import software.amazon.awssdk.iot.iotjobs.model.RejectedError;\n+import software.amazon.awssdk.iot.iotjobs.model.RejectedErrorCode;\n+import software.amazon.awssdk.iot.iotjobs.model.UpdateJobExecutionRequest;\n+import software.amazon.awssdk.iot.iotjobs.model.UpdateJobExecutionResponse;\n+import software.amazon.awssdk.iot.iotjobs.model.UpdateJobExecutionSubscriptionRequest;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Consumer;\n+\n+/**\n+ * IotJobsClient with updated MQTT Jobs topics.\n+ */\n+@SuppressWarnings(\"PMD.AvoidCatchingGenericException\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525199cd34ec8fbde07e502a686793f6da636f8f"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTU2NDIx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#pullrequestreview-520956421", "createdAt": "2020-10-30T19:04:44Z", "commit": {"oid": "525199cd34ec8fbde07e502a686793f6da636f8f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTYxNjc4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#pullrequestreview-520961678", "createdAt": "2020-10-30T19:13:26Z", "commit": {"oid": "525199cd34ec8fbde07e502a686793f6da636f8f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "525199cd34ec8fbde07e502a686793f6da636f8f", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/525199cd34ec8fbde07e502a686793f6da636f8f", "committedDate": "2020-10-30T18:49:24Z", "message": "Override mqtt topics in IotJobsClient"}, "afterCommit": {"oid": "25ebc2de903488b236f9f75cfa280e78d11a82fd", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/25ebc2de903488b236f9f75cfa280e78d11a82fd", "committedDate": "2020-11-06T00:02:36Z", "message": "Use namepace prefix cust- instead of aws-gg- temporarily"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25ebc2de903488b236f9f75cfa280e78d11a82fd", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/25ebc2de903488b236f9f75cfa280e78d11a82fd", "committedDate": "2020-11-06T00:02:36Z", "message": "Use namepace prefix cust- instead of aws-gg- temporarily"}, "afterCommit": {"oid": "3934f6f7c833c658a15d393f9eff2b1313544287", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3934f6f7c833c658a15d393f9eff2b1313544287", "committedDate": "2020-11-06T00:33:45Z", "message": "Use namepace prefix cust- instead of aws-gg- temporarily"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODg5MTMx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#pullrequestreview-524889131", "createdAt": "2020-11-06T06:40:47Z", "commit": {"oid": "3934f6f7c833c658a15d393f9eff2b1313544287"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNjo0MDo0N1rOHuh05A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNjo0MDo0N1rOHuh05A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU1MDc1Ng==", "bodyText": "var6?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#discussion_r518550756", "createdAt": "2020-11-06T06:40:47Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/greengrass/deployment/IotJobsClientWrapper.java", "diffHunk": "@@ -0,0 +1,236 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.deployment;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import software.amazon.awssdk.crt.mqtt.MqttClientConnection;\n+import software.amazon.awssdk.crt.mqtt.MqttException;\n+import software.amazon.awssdk.crt.mqtt.MqttMessage;\n+import software.amazon.awssdk.crt.mqtt.QualityOfService;\n+import software.amazon.awssdk.iot.EnumSerializer;\n+import software.amazon.awssdk.iot.Timestamp;\n+import software.amazon.awssdk.iot.iotjobs.IotJobsClient;\n+import software.amazon.awssdk.iot.iotjobs.model.DescribeJobExecutionRequest;\n+import software.amazon.awssdk.iot.iotjobs.model.DescribeJobExecutionResponse;\n+import software.amazon.awssdk.iot.iotjobs.model.DescribeJobExecutionSubscriptionRequest;\n+import software.amazon.awssdk.iot.iotjobs.model.JobExecutionsChangedEvent;\n+import software.amazon.awssdk.iot.iotjobs.model.JobExecutionsChangedSubscriptionRequest;\n+import software.amazon.awssdk.iot.iotjobs.model.JobStatus;\n+import software.amazon.awssdk.iot.iotjobs.model.RejectedError;\n+import software.amazon.awssdk.iot.iotjobs.model.RejectedErrorCode;\n+import software.amazon.awssdk.iot.iotjobs.model.UpdateJobExecutionRequest;\n+import software.amazon.awssdk.iot.iotjobs.model.UpdateJobExecutionResponse;\n+import software.amazon.awssdk.iot.iotjobs.model.UpdateJobExecutionSubscriptionRequest;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Consumer;\n+\n+/**\n+ * IotJobsClient with updated MQTT Jobs topics.\n+ */\n+@SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n+@SuppressFBWarnings(\"NM_METHOD_NAMING_CONVENTION\")\n+public class IotJobsClientWrapper extends IotJobsClient {\n+    private static final String UPDATE_JOB_TOPIC =\n+            \"$aws/things/%s/jobs/%s/namespace-cust-deployment/update\";\n+    static final String JOB_UPDATE_ACCEPTED_TOPIC =\n+            \"$aws/things/%s/jobs/%s/namespace-cust-deployment/update/accepted\";\n+    static final String JOB_UPDATE_REJECTED_TOPIC =\n+            \"$aws/things/%s/jobs/%s/namespace-cust-deployment/update/rejected\";\n+    private static final String DESCRIBE_JOB_TOPIC =\n+            \"$aws/things/%s/jobs/%s/namespace-cust-deployment/get\";\n+    private static final String JOB_DESCRIBE_ACCEPTED_TOPIC =\n+            \"$aws/things/%s/jobs/%s/namespace-cust-deployment/get/accepted\";\n+    private static final String JOB_DESCRIBE_REJECTED_TOPIC =\n+            \"$aws/things/%s/jobs/%s/namespace-cust-deployment/get/rejected\";\n+    private static final String JOB_EXECUTIONS_CHANGED_TOPIC =\n+            \"$aws/things/%s/jobs/notify-namespace-cust-deployment\";\n+\n+    private final MqttClientConnection connection;\n+    private final Gson gson = this.getGson();\n+\n+    public IotJobsClientWrapper(MqttClientConnection connection) {\n+        super(connection);\n+        this.connection = connection;\n+    }\n+\n+    private Gson getGson() {\n+        GsonBuilder gson = new GsonBuilder();\n+        gson.disableHtmlEscaping();\n+        gson.registerTypeAdapter(Timestamp.class, new Timestamp.Serializer());\n+        gson.registerTypeAdapter(Timestamp.class, new Timestamp.Deserializer());\n+        this.addTypeAdapters(gson);\n+        return gson.create();\n+    }\n+\n+    private void addTypeAdapters(GsonBuilder gson) {\n+        gson.registerTypeAdapter(JobStatus.class, new EnumSerializer());\n+        gson.registerTypeAdapter(RejectedErrorCode.class, new EnumSerializer());\n+    }\n+\n+    @Override\n+    public CompletableFuture<Integer> PublishUpdateJobExecution(UpdateJobExecutionRequest request,\n+                                                                QualityOfService qos) {\n+        if (request.thingName == null || request.jobId == null) {\n+            CompletableFuture result = new CompletableFuture();\n+            result.completeExceptionally(new MqttException(\n+                    \"UpdateJobExecutionRequest must have a non-null thingName and a non-null jobId\"));\n+            return result;\n+        }\n+        String topic = String.format(UPDATE_JOB_TOPIC, request.thingName, request.jobId);\n+        String payloadJson = this.gson.toJson(request);\n+        MqttMessage message = new MqttMessage(topic, payloadJson.getBytes(StandardCharsets.UTF_8));\n+        return this.connection.publish(message, qos, false);\n+    }\n+\n+    @Override\n+    public CompletableFuture<Integer> SubscribeToUpdateJobExecutionAccepted(\n+            UpdateJobExecutionSubscriptionRequest request, QualityOfService qos,\n+            Consumer<UpdateJobExecutionResponse> handler, Consumer<Exception> exceptionHandler) {\n+        if (request.jobId == null || request.thingName == null) {\n+            CompletableFuture result = new CompletableFuture();\n+            result.completeExceptionally(new MqttException(\n+                    \"UpdateJobExecutionSubscriptionRequest must have a non-null jobId and a non-null thingName\"));\n+            return result;\n+        }\n+        String topic = String.format(JOB_UPDATE_ACCEPTED_TOPIC, request.thingName, request.jobId);\n+        Consumer<MqttMessage> messageHandler = (message) -> {\n+            try {\n+                String payload = new String(message.getPayload(), StandardCharsets.UTF_8);\n+                UpdateJobExecutionResponse response = this.gson.fromJson(payload, UpdateJobExecutionResponse.class);\n+                handler.accept(response);\n+            } catch (Exception var6) {\n+                if (exceptionHandler != null) {\n+                    exceptionHandler.accept(var6);\n+                }\n+            }\n+        };\n+        return this.connection.subscribe(topic, qos, messageHandler);\n+    }\n+\n+    @Override\n+    public CompletableFuture<Integer> SubscribeToUpdateJobExecutionRejected(\n+            UpdateJobExecutionSubscriptionRequest request, QualityOfService qos, Consumer<RejectedError> handler,\n+            Consumer<Exception> exceptionHandler) {\n+        if (request.jobId == null || request.thingName == null) {\n+            CompletableFuture result = new CompletableFuture();\n+            result.completeExceptionally(new MqttException(\n+                    \"UpdateJobExecutionSubscriptionRequest must have a non-null jobId and a non-null thingName\"));\n+            return result;\n+        }\n+        String topic = String.format(JOB_UPDATE_REJECTED_TOPIC, request.thingName, request.jobId);\n+        Consumer<MqttMessage> messageHandler = (message) -> {\n+            try {\n+                String payload = new String(message.getPayload(), StandardCharsets.UTF_8);\n+                RejectedError response = this.gson.fromJson(payload, RejectedError.class);\n+                handler.accept(response);\n+            } catch (Exception var6) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3934f6f7c833c658a15d393f9eff2b1313544287"}, "originalPosition": 133}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODk1NDE2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#pullrequestreview-524895416", "createdAt": "2020-11-06T06:57:18Z", "commit": {"oid": "3934f6f7c833c658a15d393f9eff2b1313544287"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTEzNzg2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#pullrequestreview-524913786", "createdAt": "2020-11-06T07:37:52Z", "commit": {"oid": "3934f6f7c833c658a15d393f9eff2b1313544287"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzozNzo1MlrOHujBHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzozNzo1MlrOHujBHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3MDI2OQ==", "bodyText": "whats the dedupe strategy? would the cloud  push the same deployment via both the topics?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#discussion_r518570269", "createdAt": "2020-11-06T07:37:52Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/greengrass/deployment/IotJobsHelper.java", "diffHunk": "@@ -446,6 +481,16 @@ protected void subscribeToGetNextJobDescription(Consumer<DescribeJobExecutionRes\n                         .SubscribeToDescribeJobExecutionRejected(describeJobExecutionSubscriptionRequest,\n                                 QualityOfService.AT_LEAST_ONCE, consumerReject);\n                 subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n+\n+                subscribed = iotJobsClientWrapper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3934f6f7c833c658a15d393f9eff2b1313544287"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aff0a26e4b3a6e394c9c6bfc5616806c283040ed", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/aff0a26e4b3a6e394c9c6bfc5616806c283040ed", "committedDate": "2020-11-06T17:30:29Z", "message": "Override mqtt topics in IotJobsClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3064d08205eff94c3c6cd1d5e5c7e3c400b63090", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3064d08205eff94c3c6cd1d5e5c7e3c400b63090", "committedDate": "2020-11-06T17:30:29Z", "message": "Use namepace prefix cust- instead of aws-gg- temporarily"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0575c9ae051d13cef12448f98901fa924caedf2d", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0575c9ae051d13cef12448f98901fa924caedf2d", "committedDate": "2020-11-06T17:32:22Z", "message": "Address comments: sensible variable name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3934f6f7c833c658a15d393f9eff2b1313544287", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3934f6f7c833c658a15d393f9eff2b1313544287", "committedDate": "2020-11-06T00:33:45Z", "message": "Use namepace prefix cust- instead of aws-gg- temporarily"}, "afterCommit": {"oid": "0575c9ae051d13cef12448f98901fa924caedf2d", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0575c9ae051d13cef12448f98901fa924caedf2d", "committedDate": "2020-11-06T17:32:22Z", "message": "Address comments: sensible variable name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d21a8b98baa882c0bdd408590b8c325ef8f23d9e", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d21a8b98baa882c0bdd408590b8c325ef8f23d9e", "committedDate": "2020-11-06T18:27:53Z", "message": "Merge branch 'master' into jobs-ns"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NDA0NDIx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#pullrequestreview-525404421", "createdAt": "2020-11-06T18:42:51Z", "commit": {"oid": "d21a8b98baa882c0bdd408590b8c325ef8f23d9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NDIyNjI5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/587#pullrequestreview-525422629", "createdAt": "2020-11-06T19:11:10Z", "commit": {"oid": "d21a8b98baa882c0bdd408590b8c325ef8f23d9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2864, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}