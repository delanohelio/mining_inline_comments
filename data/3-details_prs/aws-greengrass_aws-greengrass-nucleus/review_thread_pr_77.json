{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNDQzMTgy", "number": 77, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOTowOTowMVrODjM9CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMDo0OTo1MlrODjS9vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjM4OTg1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOTowOTowMVrOFu4ZYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxNjoxOVrOFu8hNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwMjgxOA==", "bodyText": "Even though this only has 1 test, if we added more they would probably break because this is AfterAll. Can you switch these to be BeforeEach and AfterEach so that when we add more tests they still work?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384702818", "createdAt": "2020-02-26T19:09:01Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeAll\n+    public static void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);\n+        kernel = new Kernel();\n+        String tdir = System.getProperty(\"user.dir\");\n+        kernel.parseArgs(\"-r\", tdir, \"-log\", \"stdout\", \"-i\", IPCServicesTest.class.getResource(\"ipc_aware_main.yaml\").toString());\n+        kernel.launch();\n+    }\n+\n+    @AfterAll", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090bb6af3361c828670d8dae7798d4690a54b972"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MDM1Nw==", "bodyText": "changed, based AfterAll and BeforeAll based on the existing tests", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384770357", "createdAt": "2020-02-26T21:16:19Z", "author": {"login": "fahadmohammed01"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeAll\n+    public static void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);\n+        kernel = new Kernel();\n+        String tdir = System.getProperty(\"user.dir\");\n+        kernel.parseArgs(\"-r\", tdir, \"-log\", \"stdout\", \"-i\", IPCServicesTest.class.getResource(\"ipc_aware_main.yaml\").toString());\n+        kernel.launch();\n+    }\n+\n+    @AfterAll", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwMjgxOA=="}, "originalCommit": {"oid": "090bb6af3361c828670d8dae7798d4690a54b972"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjM5NjA4OnYy", "diffSide": "RIGHT", "path": "src/test/resources/com/aws/iot/evergreen/ipc/ipc_aware_main.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToxMDo1NVrOFu4dUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxODoyMlrOFu8mNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwMzgyNw==", "bodyText": "Don't swallow the output from the execution since that may be helpful when there are issues. If you just want to quiet down mvn, then use mvn -q.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384703827", "createdAt": "2020-02-26T19:10:55Z", "author": {"login": "MikeDombo"}, "path": "src/test/resources/com/aws/iot/evergreen/ipc/ipc_aware_main.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+---\n+\n+#launchers:\n+plain:\n+  startup:\n+    all: \"{platform.invoke} {args}\"\n+\n+\n+main:\n+  requires: IPCService\n+  startup:\n+    mvn exec:java -f $EVERGREEN_HOME/pom.xml -Dexec.mainClass=\"com.aws.iot.evergreen.ipc.ipcawareservices.ServiceMovesToRunning\" -Dexec.classpathScope=\"test\" > /dev/null 2>&1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090bb6af3361c828670d8dae7798d4690a54b972"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MTYzOQ==", "bodyText": "updated", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384771639", "createdAt": "2020-02-26T21:18:22Z", "author": {"login": "fahadmohammed01"}, "path": "src/test/resources/com/aws/iot/evergreen/ipc/ipc_aware_main.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+---\n+\n+#launchers:\n+plain:\n+  startup:\n+    all: \"{platform.invoke} {args}\"\n+\n+\n+main:\n+  requires: IPCService\n+  startup:\n+    mvn exec:java -f $EVERGREEN_HOME/pom.xml -Dexec.mainClass=\"com.aws.iot.evergreen.ipc.ipcawareservices.ServiceMovesToRunning\" -Dexec.classpathScope=\"test\" > /dev/null 2>&1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwMzgyNw=="}, "originalCommit": {"oid": "090bb6af3361c828670d8dae7798d4690a54b972"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjQyMjkxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToxOToyN1rOFu4udg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxODoyNlrOFu8mYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwODIxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean await = serviceRunning.await(10, TimeUnit.SECONDS);\n          \n          \n            \n                    boolean isRunning = serviceRunning.await(10, TimeUnit.SECONDS);", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384708214", "createdAt": "2020-02-26T19:19:27Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeAll\n+    public static void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);\n+        kernel = new Kernel();\n+        String tdir = System.getProperty(\"user.dir\");\n+        kernel.parseArgs(\"-r\", tdir, \"-log\", \"stdout\", \"-i\", IPCServicesTest.class.getResource(\"ipc_aware_main.yaml\").toString());\n+        kernel.launch();\n+    }\n+\n+    @AfterAll\n+    public static void teardown() {\n+        kernel.shutdown();\n+    }\n+\n+    @Test\n+    public void GIVEN_ipc_aware_service_WHEN_report_state_as_running_THEN_kernel_updates_state_as_running()\n+            throws Exception {\n+        CountDownLatch serviceRunning = new CountDownLatch(1);\n+        EvergreenService.GlobalStateChangeListener listener = (service, state) -> {\n+            if (\"main\".equals(service.getName()) && State.RUNNING.equals(service.getState())) {\n+                serviceRunning.countDown();\n+            }\n+        };\n+        kernel.context.addGlobalStateChangeListener(listener);\n+        //waiting for main to transition to running\n+        boolean await = serviceRunning.await(10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090bb6af3361c828670d8dae7798d4690a54b972"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MTY4MA==", "bodyText": "changed", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384771680", "createdAt": "2020-02-26T21:18:26Z", "author": {"login": "fahadmohammed01"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeAll\n+    public static void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);\n+        kernel = new Kernel();\n+        String tdir = System.getProperty(\"user.dir\");\n+        kernel.parseArgs(\"-r\", tdir, \"-log\", \"stdout\", \"-i\", IPCServicesTest.class.getResource(\"ipc_aware_main.yaml\").toString());\n+        kernel.launch();\n+    }\n+\n+    @AfterAll\n+    public static void teardown() {\n+        kernel.shutdown();\n+    }\n+\n+    @Test\n+    public void GIVEN_ipc_aware_service_WHEN_report_state_as_running_THEN_kernel_updates_state_as_running()\n+            throws Exception {\n+        CountDownLatch serviceRunning = new CountDownLatch(1);\n+        EvergreenService.GlobalStateChangeListener listener = (service, state) -> {\n+            if (\"main\".equals(service.getName()) && State.RUNNING.equals(service.getState())) {\n+                serviceRunning.countDown();\n+            }\n+        };\n+        kernel.context.addGlobalStateChangeListener(listener);\n+        //waiting for main to transition to running\n+        boolean await = serviceRunning.await(10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwODIxNA=="}, "originalCommit": {"oid": "090bb6af3361c828670d8dae7798d4690a54b972"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjQyODE5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/ipc/ipcawareservices/ServiceMovesToRunning.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToyMTowMlrOFu4xpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTozMjo1M1rOFu9Dug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwOTAyOQ==", "bodyText": "Maybe\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ServiceMovesToRunning {\n          \n          \n            \n            public class SampleIpcAwareService {", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384709029", "createdAt": "2020-02-26T19:21:02Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/ipcawareservices/ServiceMovesToRunning.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.aws.iot.evergreen.ipc.ipcawareservices;\n+\n+import com.aws.iot.evergreen.ipc.IPCClient;\n+import com.aws.iot.evergreen.ipc.IPCClientImpl;\n+import com.aws.iot.evergreen.ipc.config.KernelIPCClientConfig;\n+import com.aws.iot.evergreen.ipc.services.lifecycle.LifecycleImpl;\n+\n+public class ServiceMovesToRunning {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090bb6af3361c828670d8dae7798d4690a54b972"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3OTE5NA==", "bodyText": "maybe, renamed to SampleIpcAwareServiceMovesToRunning", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384779194", "createdAt": "2020-02-26T21:32:53Z", "author": {"login": "fahadmohammed01"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/ipcawareservices/ServiceMovesToRunning.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.aws.iot.evergreen.ipc.ipcawareservices;\n+\n+import com.aws.iot.evergreen.ipc.IPCClient;\n+import com.aws.iot.evergreen.ipc.IPCClientImpl;\n+import com.aws.iot.evergreen.ipc.config.KernelIPCClientConfig;\n+import com.aws.iot.evergreen.ipc.services.lifecycle.LifecycleImpl;\n+\n+public class ServiceMovesToRunning {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwOTAyOQ=="}, "originalCommit": {"oid": "090bb6af3361c828670d8dae7798d4690a54b972"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjQyOTQwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/ipc/ipcawareservices/ServiceMovesToRunning.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToyMToyNVrOFu4yYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToyMToyNVrOFu4yYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwOTIxOA==", "bodyText": "neat!!!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384709218", "createdAt": "2020-02-26T19:21:25Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/ipcawareservices/ServiceMovesToRunning.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.aws.iot.evergreen.ipc.ipcawareservices;\n+\n+import com.aws.iot.evergreen.ipc.IPCClient;\n+import com.aws.iot.evergreen.ipc.IPCClientImpl;\n+import com.aws.iot.evergreen.ipc.config.KernelIPCClientConfig;\n+import com.aws.iot.evergreen.ipc.services.lifecycle.LifecycleImpl;\n+\n+public class ServiceMovesToRunning {\n+    public static void main(String[] args) throws Exception {\n+        IPCClient client = new IPCClientImpl(KernelIPCClientConfig.builder().build());\n+        LifecycleImpl c = new LifecycleImpl(client);\n+        c.reportState(\"RUNNING\");\n+        client.disconnect();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090bb6af3361c828670d8dae7798d4690a54b972"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mjg4ODUxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTozNDowNVrOFu9GHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMTozNDowNVrOFu9GHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3OTgwNA==", "bodyText": "no * imports.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384779804", "createdAt": "2020-02-26T21:34:05Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4534a4f173e9ba44b5d4af3324c3cbe96d0776a6"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzI0ODg2OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzo0ODowMVrOFvAhew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzo0ODowMVrOFvAhew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzNTk2Mw==", "bodyText": "why is this public?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384835963", "createdAt": "2020-02-26T23:48:01Z", "author": {"login": "shaguptashaikh"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.*;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4534a4f173e9ba44b5d4af3324c3cbe96d0776a6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzM3NDcwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMDo0OTo1MlrOFvBr2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMDo0OTo1MlrOFvBr2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1NTAwMw==", "bodyText": "remove?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384855003", "createdAt": "2020-02-27T00:49:52Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeEach\n+    public void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fffc320d5c081a44a2d003e20bd181106f60e65b"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4809, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}