{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NzA4Njk2", "number": 214, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMTozNDoyN1rOD19xoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMTozNDoyN1rOD19xoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTEzMjQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMTozNDoyN1rOGLqCww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMTo0ODozNFrOGLqb3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg3NjM1NQ==", "bodyText": "I think you can have an AtomicReference to keep track of last reported state", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/214#discussion_r414876355", "createdAt": "2020-04-24T21:34:27Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -672,4 +672,9 @@ final void requestStop() {\n             desiredStateList.add(State.FINISHED);\n         }\n     }\n+\n+    Optional<State> lastReportedState() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80498ae9f58e4fe4949f7015c621a3cfd95494ce"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4Mjc4MQ==", "bodyText": "Although that would be faster, I'm not sure how to make it be correct. Because I really only want this to return the last reported state if there is any, otherwise my method which uses this would return the wrong answer. If I switched it to an atomic ref, I don't know when to reset it to null.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/214#discussion_r414882781", "createdAt": "2020-04-24T21:48:34Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -672,4 +672,9 @@ final void requestStop() {\n             desiredStateList.add(State.FINISHED);\n         }\n     }\n+\n+    Optional<State> lastReportedState() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg3NjM1NQ=="}, "originalCommit": {"oid": "80498ae9f58e4fe4949f7015c621a3cfd95494ce"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4648, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}