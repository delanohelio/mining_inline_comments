{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNzIxMjk3", "number": 295, "title": "[WIP] Fix flaky tests", "bodyText": "Description of changes:\nRace condition during merge config operation.\nScenario:\nCurrent state : component A is in RUNNING state\nDeployment arrives that adds component B and adds component B as a dependency of component A.\nThe deployment has to perform 2 merge actions:\n\nmerge in component B as a dependency of component A\nmerge in config for component B\n\nWhen the 1st merge action happens, its kicks of the topic listener of component A to update the dependencies. If the update dependencies execute before 2nd merge action is complete. The update dependency fail and test cases fails.\nFix: Ensure that topic listeners are not triggered until all merge actions complete.\nRace condition in rollback test\nA component using run script transitions to RUNNING state automatically and even if the component errors, it will be in running state for a brief period of time. This confuses the deployment logic to think that the service is healthy even though it errors out in a few seconds. Due to this race condition the deployment service can mark the deployment as success prematurely and fail the rollback scenario tests.\nFix: Component is run using startup script which doesn't have this behavior.\nWhats remaining:\n\nFix for \"Race condition during merge config operation\" is triggering few other race conditions in the testing.\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-07-02T20:12:46Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295", "merged": true, "mergeCommit": {"oid": "3e0b77b6f2f6c5dba79ea2e1cefebc326d093a28"}, "closed": true, "closedAt": "2020-07-08T18:30:02Z", "author": {"login": "fahadmohammed01"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxEMQrgH2gAyNDQzNzIxMjk3Ojg5MGRiYWYxYjZhNTJjOTlhZWFkZTY2YTYxNWUwOGRlMmZmYjI2ZWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy-gtMAFqTQ0NTAxNDQxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/890dbaf1b6a52c99aeade66a615e08de2ffb26eb", "committedDate": "2020-07-02T19:41:23Z", "message": "fix flaky tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDMwMjcx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#pullrequestreview-442030271", "createdAt": "2020-07-02T21:30:32Z", "commit": {"oid": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTozMDozM1rOGsdkAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTozMDozM1rOGsdkAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDg4Mg==", "bodyText": "This doesn't need to be a CountDownLatch now since no one is waiting on it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r449274882", "createdAt": "2020-07-02T21:30:33Z", "author": {"login": "fufranci"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -513,21 +510,24 @@ void GIVEN_service_running_with_rollback_safe_param_WHEN_rollback_THEN_rollback_\n             put(SERVICES_NAMESPACE_TOPIC, new HashMap<Object, Object>() {{\n                 put(\"sleeperB\", new HashMap<Object, Object>() {{\n                     put(SERVICE_LIFECYCLE_NAMESPACE_TOPIC, new HashMap<Object, Object>() {{\n-                        put(LIFECYCLE_RUN_NAMESPACE_TOPIC, \"exit -1\");\n+                        put(LIFECYCLE_STARTUP_NAMESPACE_TOPIC, \"exit -1\");\n                     }});\n                 }});\n             }});\n         }};\n \n-        CountDownLatch sleeperBErrored = new CountDownLatch(1);\n+        CountDownLatch sleeperBBroken = new CountDownLatch(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDMwMzgx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#pullrequestreview-442030381", "createdAt": "2020-07-02T21:30:47Z", "commit": {"oid": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTozMDo0N1rOGsdkag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTozMDo0N1rOGsdkag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDk4Ng==", "bodyText": "This will break on Windows.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r449274986", "createdAt": "2020-07-02T21:30:47Z", "author": {"login": "fufranci"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/short_running_services_using_startup_script.yaml", "diffHunk": "@@ -0,0 +1,23 @@\n+---\n+services:\n+  sleeperB:\n+    lifecycle:\n+      startup: |-\n+        date; echo sleeperB_running; sleep 5", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "579e403dd0daee5671813e1a7bdd7a8b79b15488", "author": {"user": {"login": "fufranci", "name": "Francis Fu"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/579e403dd0daee5671813e1a7bdd7a8b79b15488", "committedDate": "2020-07-02T22:49:23Z", "message": "add windows support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e27b32f6cb920ab3e39e0ad4283687669a628a6d", "author": {"user": {"login": "fufranci", "name": "Francis Fu"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e27b32f6cb920ab3e39e0ad4283687669a628a6d", "committedDate": "2020-07-03T05:08:57Z", "message": "Wait for SoftDependency to be RUNNING first"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/72e66470dc6d0cbec46376a552602d6001cd611a", "committedDate": "2020-07-06T21:27:12Z", "message": "Merge branch 'master' into deflake_tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTM1ODE3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#pullrequestreview-444135817", "createdAt": "2020-07-07T18:12:49Z", "commit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODoxMjo0OVrOGuKH3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODoxNDowOFrOGuKKmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MzUzMw==", "bodyText": "Is it ok to remove these? Can we use eventuallyEval to make it pass?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451053533", "createdAt": "2020-07-07T18:12:49Z", "author": {"login": "hui-yang"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -418,15 +419,10 @@ void GIVEN_kernel_running_services_WHEN_merge_removes_service_THEN_removed_servi\n             }\n         });\n \n-        EvergreenService main = kernel.locate(\"main\");\n-        EvergreenService sleeperB = kernel.locate(\"sleeperB\");\n         // wait for merge to complete\n         future.get(60, TimeUnit.SECONDS);\n         //sleeperA should be closed\n         assertTrue(isSleeperAClosed.get());\n-        // main and sleeperB should be running\n-        assertEquals(State.RUNNING, main.getState());\n-        assertEquals(State.RUNNING, sleeperB.getState());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1NDIzNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451054234", "createdAt": "2020-07-07T18:14:08Z", "author": {"login": "hui-yang"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceDependencyLifecycleTest.java", "diffHunk": "@@ -380,6 +380,11 @@ void WHEN_dependency_type_changes_with_no_other_updates_THEN_customer_app_should\n                         .toString()).launch();\n         assertThat(kernel.locate(\"main\")::getState, eventuallyEval(is(State.FINISHED)));\n \n+        // The test below assumes SoftDependency is already running and checks against RUNNING->STOPPING and\n+        // STARTING->RUNNING. But I have seen cases where it hasn't get to the initial RUNNING state yet. So we need to\n+        // wait for SoftDependency to be RUNNING first.\n+        assertThat(kernel.locate(\"SoftDependency\")::getState, eventuallyEval(is(State.RUNNING)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTUxNzM0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#pullrequestreview-444151734", "createdAt": "2020-07-07T18:36:01Z", "commit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODozNjowMlrOGuK4Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODozNjowMlrOGuK4Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2NTkzNA==", "bodyText": "Do we need this long sleep time?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451065934", "createdAt": "2020-07-07T18:36:02Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -541,8 +541,7 @@ void GIVEN_service_running_with_rollback_safe_param_WHEN_rollback_THEN_rollback_\n \n         // THEN\n         // deployment should have errored and rolled back\n-        assertTrue(sleeperBErrored.await(1, TimeUnit.SECONDS));\n-        assertTrue(sleeperBRolledBack.await(1, TimeUnit.SECONDS));\n+        assertTrue(sleeperBRolledBack.await(30, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38e5e6a74052bdd0b6751d5a0cc8e97dd756f0b4", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/38e5e6a74052bdd0b6751d5a0cc8e97dd756f0b4", "committedDate": "2020-07-08T07:13:48Z", "message": "updated tests based on feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4e7764022b3d42887e519aaa498329b634e2666", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a4e7764022b3d42887e519aaa498329b634e2666", "committedDate": "2020-07-08T07:25:57Z", "message": "added TODO's to fix an existing race condition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MDA0MzE1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#pullrequestreview-445004315", "createdAt": "2020-07-08T17:58:06Z", "commit": {"oid": "a4e7764022b3d42887e519aaa498329b634e2666"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MDE0NDE4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#pullrequestreview-445014418", "createdAt": "2020-07-08T18:12:08Z", "commit": {"oid": "a4e7764022b3d42887e519aaa498329b634e2666"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2847, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}