{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMTEzMjMw", "number": 524, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNToyNjowM1rOEtUfBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNTozMzo1OVrOEtUk9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTU2OTk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNToyNjowM1rOHhCtGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNToyOToxMlrOHhCwfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwOTM2OQ==", "bodyText": "nit: getContentLengthLong() returns it as a long\ndo we handle the -1 case when the content length is unknown?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/524#discussion_r504409369", "createdAt": "2020-10-14T05:26:03Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -145,15 +143,7 @@ public long getDownloadSize(ComponentIdentifier componentIdentifier, ComponentAr\n             URL url = new URL(preSignedUrl);\n             HttpURLConnection conn = connect(url);\n             conn.setRequestMethod(\"HEAD\");\n-            Map<String, List<String>> headers = conn.getHeaderFields();\n-            // TODO verify this works by trying on a real package\n-            if (!headers.containsKey(HTTP_HEADER_CONTENT_LENGTH)\n-                    || headers.get(HTTP_HEADER_CONTENT_LENGTH).size() != 1) {\n-                throw new PackageDownloadException(HTTP_HEADER_CONTENT_LENGTH + \" not found in response header\");\n-            }\n-            return Long.parseLong(headers.get(HTTP_HEADER_CONTENT_LENGTH).get(0));\n-        } catch (NumberFormatException e) {\n-            throw new PackageDownloadException(\"Got mal-formed Content-Length\", e);\n+            return conn.getContentLength();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82cbad57c27018176baf47153a7fdce9f97bfe7b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwOTc0NQ==", "bodyText": "We return a long anyway, so updated to call getContentLengthLong", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/524#discussion_r504409745", "createdAt": "2020-10-14T05:27:23Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -145,15 +143,7 @@ public long getDownloadSize(ComponentIdentifier componentIdentifier, ComponentAr\n             URL url = new URL(preSignedUrl);\n             HttpURLConnection conn = connect(url);\n             conn.setRequestMethod(\"HEAD\");\n-            Map<String, List<String>> headers = conn.getHeaderFields();\n-            // TODO verify this works by trying on a real package\n-            if (!headers.containsKey(HTTP_HEADER_CONTENT_LENGTH)\n-                    || headers.get(HTTP_HEADER_CONTENT_LENGTH).size() != 1) {\n-                throw new PackageDownloadException(HTTP_HEADER_CONTENT_LENGTH + \" not found in response header\");\n-            }\n-            return Long.parseLong(headers.get(HTTP_HEADER_CONTENT_LENGTH).get(0));\n-        } catch (NumberFormatException e) {\n-            throw new PackageDownloadException(\"Got mal-formed Content-Length\", e);\n+            return conn.getContentLength();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwOTM2OQ=="}, "originalCommit": {"oid": "82cbad57c27018176baf47153a7fdce9f97bfe7b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxMDIzOA==", "bodyText": "right - but it would return -1 if the binary was > max int", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/524#discussion_r504410238", "createdAt": "2020-10-14T05:29:12Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -145,15 +143,7 @@ public long getDownloadSize(ComponentIdentifier componentIdentifier, ComponentAr\n             URL url = new URL(preSignedUrl);\n             HttpURLConnection conn = connect(url);\n             conn.setRequestMethod(\"HEAD\");\n-            Map<String, List<String>> headers = conn.getHeaderFields();\n-            // TODO verify this works by trying on a real package\n-            if (!headers.containsKey(HTTP_HEADER_CONTENT_LENGTH)\n-                    || headers.get(HTTP_HEADER_CONTENT_LENGTH).size() != 1) {\n-                throw new PackageDownloadException(HTTP_HEADER_CONTENT_LENGTH + \" not found in response header\");\n-            }\n-            return Long.parseLong(headers.get(HTTP_HEADER_CONTENT_LENGTH).get(0));\n-        } catch (NumberFormatException e) {\n-            throw new PackageDownloadException(\"Got mal-formed Content-Length\", e);\n+            return conn.getContentLength();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwOTM2OQ=="}, "originalCommit": {"oid": "82cbad57c27018176baf47153a7fdce9f97bfe7b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTU3NzE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNToyOTo1MlrOHhCxPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNTozNzoyN1rOHhC6lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxMDQyOA==", "bodyText": "handle NumberFormatException?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/524#discussion_r504410428", "createdAt": "2020-10-14T05:29:52Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -145,15 +143,7 @@ public long getDownloadSize(ComponentIdentifier componentIdentifier, ComponentAr\n             URL url = new URL(preSignedUrl);\n             HttpURLConnection conn = connect(url);\n             conn.setRequestMethod(\"HEAD\");\n-            Map<String, List<String>> headers = conn.getHeaderFields();\n-            // TODO verify this works by trying on a real package\n-            if (!headers.containsKey(HTTP_HEADER_CONTENT_LENGTH)\n-                    || headers.get(HTTP_HEADER_CONTENT_LENGTH).size() != 1) {\n-                throw new PackageDownloadException(HTTP_HEADER_CONTENT_LENGTH + \" not found in response header\");\n-            }\n-            return Long.parseLong(headers.get(HTTP_HEADER_CONTENT_LENGTH).get(0));\n-        } catch (NumberFormatException e) {\n-            throw new PackageDownloadException(\"Got mal-formed Content-Length\", e);\n+            return conn.getContentLengthLong();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d116d96c1b17f63e84ab6199c28cf712873b96ec"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxMTgzMQ==", "bodyText": "Can't happen anymore", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/524#discussion_r504411831", "createdAt": "2020-10-14T05:34:38Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -145,15 +143,7 @@ public long getDownloadSize(ComponentIdentifier componentIdentifier, ComponentAr\n             URL url = new URL(preSignedUrl);\n             HttpURLConnection conn = connect(url);\n             conn.setRequestMethod(\"HEAD\");\n-            Map<String, List<String>> headers = conn.getHeaderFields();\n-            // TODO verify this works by trying on a real package\n-            if (!headers.containsKey(HTTP_HEADER_CONTENT_LENGTH)\n-                    || headers.get(HTTP_HEADER_CONTENT_LENGTH).size() != 1) {\n-                throw new PackageDownloadException(HTTP_HEADER_CONTENT_LENGTH + \" not found in response header\");\n-            }\n-            return Long.parseLong(headers.get(HTTP_HEADER_CONTENT_LENGTH).get(0));\n-        } catch (NumberFormatException e) {\n-            throw new PackageDownloadException(\"Got mal-formed Content-Length\", e);\n+            return conn.getContentLengthLong();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxMDQyOA=="}, "originalCommit": {"oid": "d116d96c1b17f63e84ab6199c28cf712873b96ec"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxMjgyMg==", "bodyText": "@fengwa-aws any exception is caught inside getContentLengthLong() and -1 would be returned", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/524#discussion_r504412822", "createdAt": "2020-10-14T05:37:27Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -145,15 +143,7 @@ public long getDownloadSize(ComponentIdentifier componentIdentifier, ComponentAr\n             URL url = new URL(preSignedUrl);\n             HttpURLConnection conn = connect(url);\n             conn.setRequestMethod(\"HEAD\");\n-            Map<String, List<String>> headers = conn.getHeaderFields();\n-            // TODO verify this works by trying on a real package\n-            if (!headers.containsKey(HTTP_HEADER_CONTENT_LENGTH)\n-                    || headers.get(HTTP_HEADER_CONTENT_LENGTH).size() != 1) {\n-                throw new PackageDownloadException(HTTP_HEADER_CONTENT_LENGTH + \" not found in response header\");\n-            }\n-            return Long.parseLong(headers.get(HTTP_HEADER_CONTENT_LENGTH).get(0));\n-        } catch (NumberFormatException e) {\n-            throw new PackageDownloadException(\"Got mal-formed Content-Length\", e);\n+            return conn.getContentLengthLong();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxMDQyOA=="}, "originalCommit": {"oid": "d116d96c1b17f63e84ab6199c28cf712873b96ec"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTU4NTE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNTozMzo1OVrOHhC17A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNTozMzo1OVrOHhC17A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxMTYyOA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/524#discussion_r504411628", "createdAt": "2020-10-14T05:33:59Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -145,15 +143,11 @@ public long getDownloadSize(ComponentIdentifier componentIdentifier, ComponentAr\n             URL url = new URL(preSignedUrl);\n             HttpURLConnection conn = connect(url);\n             conn.setRequestMethod(\"HEAD\");\n-            Map<String, List<String>> headers = conn.getHeaderFields();\n-            // TODO verify this works by trying on a real package\n-            if (!headers.containsKey(HTTP_HEADER_CONTENT_LENGTH)\n-                    || headers.get(HTTP_HEADER_CONTENT_LENGTH).size() != 1) {\n-                throw new PackageDownloadException(HTTP_HEADER_CONTENT_LENGTH + \" not found in response header\");\n+            long length = conn.getContentLengthLong();\n+            if (length == -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c388b1d58c595defbc8751fdee872c9fa9677a07"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 670, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}