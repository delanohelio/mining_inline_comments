{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MzcwOTE3", "number": 151, "title": "Kernel throws exception when a service moved to Broken state after deployment. ", "bodyText": "Issue #, if available:\nDescription of changes:\n\nKernel throw exception to DA when a service moves to broken state after deployment\nAdded timeout for lifecycle stage startup, the service will be transitioned to Error-ed if startup timeout is breached.\n\nHow was this change tested:\nUnit test + integration test\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-04-02T05:52:41Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151", "merged": true, "mergeCommit": {"oid": "fd35f89218f171ae13e59f8480da485e816afd07"}, "closed": true, "closedAt": "2020-04-07T22:41:38Z", "author": {"login": "fahadmohammed01"}, "timelineItems": {"totalCount": 45, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTlqVJAH2gAyMzk3MzcwOTE3OjYzMzM1ZmVkNDkxYzIyN2E2NDEzZTMwZThjODg3YTMwZTJhYmJkYWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVbCBMAFqTM4OTUzNDM3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "63335fed491c227a6413e30e8c887a30e2abbdab", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/63335fed491c227a6413e30e8c887a30e2abbdab", "committedDate": "2020-04-02T05:43:22Z", "message": "added timeout for service startup, throw exception to DA when serive broken"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dcbe3e44bbe72b9d02faabc39a728deb283b21d9", "committedDate": "2020-04-02T05:43:49Z", "message": "added timeout for service startup, throw exception to DA when serive broken"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTMxMjA2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-386131206", "createdAt": "2020-04-02T06:13:35Z", "commit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNjoxMzozNVrOF_cmoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNjoyNTozOVrOF_c3gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3MzI0OA==", "bodyText": "typo: when_does_not_startup", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402073248", "createdAt": "2020-04-02T06:13:35Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/GenericExternalServiceTest.java", "diffHunk": "@@ -36,4 +36,22 @@ void GIVEN_service_config_with_broken_skipif_config_WHEN_launch_service_THEN_ser\n         // THEN\n         assertTrue(testErrored.await(60, TimeUnit.SECONDS));\n     }\n+\n+    @Test\n+    void GIVEN_service_with_startup_timeout_WHEN_do_not_startup_within_timeout_THEN_move_service_to_errored()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3MzgwNw==", "bodyText": "If it doesn't need to be serializable then you can remove the serialization uid.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402073807", "createdAt": "2020-04-02T06:15:12Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/exceptions/ServiceInBrokenStateAfterDeploymentException.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.aws.iot.evergreen.deployment.exceptions;\n+\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import lombok.Getter;\n+\n+@SuppressFBWarnings(justification = \"This does not need to be serializable\", value = \"SE_BAD_FIELD\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3Mzk3OQ==", "bodyText": "Do we have a \"DeploymentException\" class? If not, let's make that and then have this extend that.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402073979", "createdAt": "2020-04-02T06:15:44Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/exceptions/ServiceInBrokenStateAfterDeploymentException.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.aws.iot.evergreen.deployment.exceptions;\n+\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import lombok.Getter;\n+\n+@SuppressFBWarnings(justification = \"This does not need to be serializable\", value = \"SE_BAD_FIELD\")\n+public class ServiceInBrokenStateAfterDeploymentException extends Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3NDgyMg==", "bodyText": "I don't think this should be in the backing task. I believe we'd want this to be in the lifecycle thread.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402074822", "createdAt": "2020-04-02T06:18:22Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -477,8 +483,26 @@ private void startStateTransition() throws InterruptedException {\n                                             .log(\"Got interrupted while waiting for dependency ready\");\n                                     return;\n                                 }\n-\n                                 try {\n+                                    Topics startUpTopic = lifecycle != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3NDk2NA==", "bodyText": "Pull out the default to a const which we can change more easily.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402074964", "createdAt": "2020-04-02T06:18:43Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -477,8 +483,26 @@ private void startStateTransition() throws InterruptedException {\n                                             .log(\"Got interrupted while waiting for dependency ready\");\n                                     return;\n                                 }\n-\n                                 try {\n+                                    Topics startUpTopic = lifecycle != null\n+                                            ? lifecycle.findInteriorChild(LIFECYCLE_STARTUP_NAMESPACE_TOPIC)\n+                                            : null;\n+                                    // only schedule task to report error for services which use startup\n+                                    // Default startup time is 120 seconds\n+                                    if (startUpTopic != null) {\n+                                        Integer timeout = (Integer) startUpTopic.findLeafChild(TIMEOUT_NAMESPACE_TOPIC)\n+                                                .dflt(120).getOnce();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3NTU0Mg==", "bodyText": "This requires another thread which seems wasteful. I believe if you moved this logic into the main lifecycle thread then you can wait on some future with the provided timeout. Remember back when we discussed the 3-way wait when we were discussing the state machine refactor. We want to unblock the lifecycle thread if startup completes, timesout, or errors.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402075542", "createdAt": "2020-04-02T06:20:21Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -477,8 +483,26 @@ private void startStateTransition() throws InterruptedException {\n                                             .log(\"Got interrupted while waiting for dependency ready\");\n                                     return;\n                                 }\n-\n                                 try {\n+                                    Topics startUpTopic = lifecycle != null\n+                                            ? lifecycle.findInteriorChild(LIFECYCLE_STARTUP_NAMESPACE_TOPIC)\n+                                            : null;\n+                                    // only schedule task to report error for services which use startup\n+                                    // Default startup time is 120 seconds\n+                                    if (startUpTopic != null) {\n+                                        Integer timeout = (Integer) startUpTopic.findLeafChild(TIMEOUT_NAMESPACE_TOPIC)\n+                                                .dflt(120).getOnce();\n+                                        Future<?> schedule =\n+                                                context.get(ScheduledExecutorService.class).schedule(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3NjgwMg==", "bodyText": "typo: completes_without_exception.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402076802", "createdAt": "2020-04-02T06:23:47Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/mergeTest.java", "diffHunk": "@@ -21,5 +42,46 @@ public void testSomeMethod() throws Exception {\n         assertEquals(c.getRoot(), b.getRoot());\n     }\n \n+    @Test\n+    public void GIVEN_deployment_WHEN_all_service_are_running_THEN_waitForServicesToStart_complete_without_exception()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3NzI1MQ==", "bodyText": "This won't actually do anything to block the test.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402077251", "createdAt": "2020-04-02T06:24:45Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/mergeTest.java", "diffHunk": "@@ -21,5 +42,46 @@ public void testSomeMethod() throws Exception {\n         assertEquals(c.getRoot(), b.getRoot());\n     }\n \n+    @Test\n+    public void GIVEN_deployment_WHEN_all_service_are_running_THEN_waitForServicesToStart_complete_without_exception()\n+            throws InterruptedException {\n+        Kernel kernel = new Kernel();\n+        when(mockMainService.getState()).thenReturn(State.RUNNING);\n+        when(mockServiceA.getState()).thenReturn(State.RUNNING);\n+        when(mockServiceB.getState()).thenReturn(State.RUNNING);\n+\n+        when(mockMainService.reachedDesiredState()).thenReturn(true);\n+        when(mockServiceA.reachedDesiredState()).thenReturn(true);\n+        when(mockServiceB.reachedDesiredState()).thenReturn(true);\n+        CompletableFuture future = new CompletableFuture();\n+        Set<EvergreenService> evergreenServices =\n+                new HashSet(Arrays.asList(mockMainService, mockServiceA, mockServiceB));\n+        kernel.waitForServicesToStart(evergreenServices, future);\n+\n+        assertFalse(future.isCompletedExceptionally());\n+    }\n+\n+    @Test\n+    public void GIVEN_deployment_WHEN_one_service_is_broken_THEN_waitForServicesToStart_completes_Exceptionally()\n+            throws InterruptedException {\n+        Kernel kernel = new Kernel();\n+        when(mockMainService.getState()).thenReturn(State.BROKEN);\n+        when(mockServiceA.getState()).thenReturn(State.RUNNING);\n+        when(mockServiceB.getState()).thenReturn(State.RUNNING);\n+\n+        when(mockMainService.reachedDesiredState()).thenReturn(true);\n+        when(mockServiceA.reachedDesiredState()).thenReturn(true);\n+        when(mockServiceB.reachedDesiredState()).thenReturn(true);\n+        CompletableFuture future = new CompletableFuture();\n+        Set<EvergreenService> evergreenServices =\n+                new HashSet(Arrays.asList(mockMainService, mockServiceA, mockServiceB));\n+        kernel.waitForServicesToStart(evergreenServices, future);\n+\n+        future.whenComplete((v, t) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3NzU3MA==", "bodyText": "You'll need to use ServiceInborkenStateAfterDeploymentException ex = assertThrows(ServiceInborkenStateAfterDeploymentException.class, () -> future.get(1, TimeUnit.Seconds)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402077570", "createdAt": "2020-04-02T06:25:39Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/mergeTest.java", "diffHunk": "@@ -21,5 +42,46 @@ public void testSomeMethod() throws Exception {\n         assertEquals(c.getRoot(), b.getRoot());\n     }\n \n+    @Test\n+    public void GIVEN_deployment_WHEN_all_service_are_running_THEN_waitForServicesToStart_complete_without_exception()\n+            throws InterruptedException {\n+        Kernel kernel = new Kernel();\n+        when(mockMainService.getState()).thenReturn(State.RUNNING);\n+        when(mockServiceA.getState()).thenReturn(State.RUNNING);\n+        when(mockServiceB.getState()).thenReturn(State.RUNNING);\n+\n+        when(mockMainService.reachedDesiredState()).thenReturn(true);\n+        when(mockServiceA.reachedDesiredState()).thenReturn(true);\n+        when(mockServiceB.reachedDesiredState()).thenReturn(true);\n+        CompletableFuture future = new CompletableFuture();\n+        Set<EvergreenService> evergreenServices =\n+                new HashSet(Arrays.asList(mockMainService, mockServiceA, mockServiceB));\n+        kernel.waitForServicesToStart(evergreenServices, future);\n+\n+        assertFalse(future.isCompletedExceptionally());\n+    }\n+\n+    @Test\n+    public void GIVEN_deployment_WHEN_one_service_is_broken_THEN_waitForServicesToStart_completes_Exceptionally()\n+            throws InterruptedException {\n+        Kernel kernel = new Kernel();\n+        when(mockMainService.getState()).thenReturn(State.BROKEN);\n+        when(mockServiceA.getState()).thenReturn(State.RUNNING);\n+        when(mockServiceB.getState()).thenReturn(State.RUNNING);\n+\n+        when(mockMainService.reachedDesiredState()).thenReturn(true);\n+        when(mockServiceA.reachedDesiredState()).thenReturn(true);\n+        when(mockServiceB.reachedDesiredState()).thenReturn(true);\n+        CompletableFuture future = new CompletableFuture();\n+        Set<EvergreenService> evergreenServices =\n+                new HashSet(Arrays.asList(mockMainService, mockServiceA, mockServiceB));\n+        kernel.waitForServicesToStart(evergreenServices, future);\n+\n+        future.whenComplete((v, t) -> {\n+            assertTrue(t instanceof ServiceInBrokenStateAfterDeploymentException);\n+            EvergreenService brokenService = ((ServiceInBrokenStateAfterDeploymentException) t).getBrokenService();\n+            assertEquals(mockMainService, brokenService);\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b1571f723b0bff5ee3606105b2937c7c2d78439", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0b1571f723b0bff5ee3606105b2937c7c2d78439", "committedDate": "2020-04-02T17:35:44Z", "message": "addressed minor pr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91fbbdfa2e09fb9efd9878e95abac3329028de98", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/91fbbdfa2e09fb9efd9878e95abac3329028de98", "committedDate": "2020-04-02T20:57:16Z", "message": "fixed pmd failures and addressed minor pr comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Nzc4NTE1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-386778515", "createdAt": "2020-04-02T21:10:24Z", "commit": {"oid": "0b1571f723b0bff5ee3606105b2937c7c2d78439"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToxMDoyNFrOF_8pGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToxMzoyNFrOF_8uEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5ODE2OQ==", "bodyText": "An updated DesiredState will also cancel this", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402598169", "createdAt": "2020-04-02T21:10:24Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -608,6 +633,11 @@ private void startStateTransition() throws InterruptedException {\n                 logger.atInfo().setEventType(\"service-report-state\").kv(\"state\", toState).log();\n                 updateStateAndBroadcast(toState);\n             }\n+            // service transitioning to another state, cancelling task monitoring the timeout for startup\n+            Future triggerTimeOutFuture = triggerTimeOutFutureReference.get();\n+            if (triggerTimeOutFuture != null) {\n+                triggerTimeOutFuture.cancel(true);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b1571f723b0bff5ee3606105b2937c7c2d78439"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5OTQ0Mg==", "bodyText": "Agree. Also I don't think service in Broken state needs a separate Exception. We can have a ServiceUpdateException , and have \"Service in Broken state\" in the message.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402599442", "createdAt": "2020-04-02T21:13:24Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/exceptions/ServiceInBrokenStateAfterDeploymentException.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.aws.iot.evergreen.deployment.exceptions;\n+\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import lombok.Getter;\n+\n+@SuppressFBWarnings(justification = \"This does not need to be serializable\", value = \"SE_BAD_FIELD\")\n+public class ServiceInBrokenStateAfterDeploymentException extends Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3Mzk3OQ=="}, "originalCommit": {"oid": "dcbe3e44bbe72b9d02faabc39a728deb283b21d9"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62149c8e001ca92100d358f53d6db77013dd1ff3", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/62149c8e001ca92100d358f53d6db77013dd1ff3", "committedDate": "2020-04-02T22:37:46Z", "message": "renamed exception name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODQ5MTIx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-386849121", "createdAt": "2020-04-02T23:36:59Z", "commit": {"oid": "62149c8e001ca92100d358f53d6db77013dd1ff3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMzozNjo1OVrOGAALyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMzo0MToxOFrOGAAQqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY1NjIwMw==", "bodyText": "Let's make sure to use these topic names elsewhere, ie. in GenericExternalService.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402656203", "createdAt": "2020-04-02T23:36:59Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -53,6 +55,10 @@\n     public static final String SERVICES_NAMESPACE_TOPIC = \"services\";\n     public static final String SERVICE_LIFECYCLE_NAMESPACE_TOPIC = \"lifecycle\";\n     public static final String SERVICE_NAME_KEY = \"serviceName\";\n+    public static final String LIFECYCLE_STARTUP_NAMESPACE_TOPIC = \"startup\";\n+    public static final String TIMEOUT_NAMESPACE_TOPIC = \"timeout\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62149c8e001ca92100d358f53d6db77013dd1ff3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY1NjcyMw==", "bodyText": "Looks like this change will fix a PMD issue, please make sure to decrease the max allowed PMD violations if it got decreased.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402656723", "createdAt": "2020-04-02T23:38:45Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -127,8 +133,8 @@ private void updateStateAndBroadcast(State newState) {\n         }\n \n         // TODO: Add validation\n-        logger.atInfo().setEventType(\"service-set-state\").kv(\"currentState\", currentState).kv(\"newState\", newState)\n-                .log();\n+        logger.atInfo().setEventType(\"service-set-state\")\n+                .kv(CURRENT_STATE_METRIC_NAME, currentState).kv(\"newState\", newState).log();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62149c8e001ca92100d358f53d6db77013dd1ff3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY1Njk0MQ==", "bodyText": "Keep the description for the backing task. This will make logging much much better, because we have no other way to tell what is running in the backing task.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402656941", "createdAt": "2020-04-02T23:39:24Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -444,7 +450,7 @@ private void startStateTransition() throws InterruptedException {\n                         } finally {\n                             installLatch.countDown();\n                         }\n-                    }, \"install\");\n+                    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62149c8e001ca92100d358f53d6db77013dd1ff3"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY1NzEwNA==", "bodyText": "Again, keep the description here.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402657104", "createdAt": "2020-04-02T23:40:03Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -488,7 +512,7 @@ private void startStateTransition() throws InterruptedException {\n                                     reportState(State.ERRORED);\n                                     logger.atError().setEventType(\"service-runtime-error\").setCause(t).log();\n                                 }\n-                            }, \"start\");\n+                            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62149c8e001ca92100d358f53d6db77013dd1ff3"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY1NzQ0OQ==", "bodyText": "Instead of removing the description since it is unused, change the log on L627 to use the description, since the bt is a future which won't print anything helpful.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402657449", "createdAt": "2020-04-02T23:41:18Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -619,7 +648,7 @@ private void startStateTransition() throws InterruptedException {\n     public void handleError() throws InterruptedException {\n     }\n \n-    private synchronized void setBackingTask(Runnable r, String db) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62149c8e001ca92100d358f53d6db77013dd1ff3"}, "originalPosition": 148}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e277e3d000ec24a6200d0b8ff36bbf9aa235b90f", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e277e3d000ec24a6200d0b8ff36bbf9aa235b90f", "committedDate": "2020-04-03T01:05:44Z", "message": "addressed pr comments + fixed few  PMD violations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/53f1974927f39c36a198527ac01856026e2b4470", "committedDate": "2020-04-03T01:13:53Z", "message": "updated pmd violations number"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODc5Njky", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-386879692", "createdAt": "2020-04-03T01:16:59Z", "commit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToxNjo1OVrOGAB4xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMToyMzo0OFrOGAB_4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDEwMw==", "bodyText": "Do we want to get rid of assert? Maybe use Object.notNull instead?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402684103", "createdAt": "2020-04-03T01:16:59Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -56,10 +56,10 @@ public int size() {\n \n     @Override\n     public void copyFrom(Node from) {\n-        assert (from != null);\n+        assert from != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDI3Ng==", "bodyText": "I think this might be wrong since this is inside of a lambda, the this is not the same this as outside of the lambda.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402684276", "createdAt": "2020-04-03T01:17:35Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -84,7 +84,7 @@ public Node getChild(String name) {\n      * @return the node\n      */\n     public Topic createLeafChild(String name) {\n-        Node n = children.computeIfAbsent(name, (nm) -> new Topic(context, nm, Topics.this));\n+        Node n = children.computeIfAbsent(name, (nm) -> new Topic(context, nm, this));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDUwNg==", "bodyText": "Why are you removing this from the constructor?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402684506", "createdAt": "2020-04-03T01:18:27Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -102,7 +108,6 @@\n     public EvergreenService(Topics topics) {\n         this.config = topics;\n         this.context = topics.getContext();\n-        this.lifecycle = topics.findInteriorChild(SERVICE_LIFECYCLE_NAMESPACE_TOPIC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDczMA==", "bodyText": "All this should be in the constructor, and then subscribed to in order to get updates if the timeout changes.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402684730", "createdAt": "2020-04-03T01:19:16Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -477,8 +482,33 @@ private void startStateTransition() throws InterruptedException {\n                                             .log(\"Got interrupted while waiting for dependency ready\");\n                                     return;\n                                 }\n-\n                                 try {\n+                                    Topics startUpTopic = getStartUpTopic();\n+                                    Integer timeout = null;\n+                                    if (startUpTopic != null) {\n+                                        timeout = (Integer) startUpTopic.findLeafChild(TIMEOUT_NAMESPACE_TOPIC)\n+                                                .dflt(DEFAULT_STARTUP_STAGE_TIMEOUT_IN_SEC).getOnce();\n+                                        Topics runTopic = getRunTopic();\n+                                        if (runTopic != null) {\n+                                            timeout = (Integer) startUpTopic.findLeafChild(TIMEOUT_NAMESPACE_TOPIC)\n+                                                    .dflt(null).getOnce();\n+                                        }\n+                                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDc2OA==", "bodyText": "is this an extra space?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402684768", "createdAt": "2020-04-03T01:19:29Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -488,7 +518,7 @@ private void startStateTransition() throws InterruptedException {\n                                     reportState(State.ERRORED);\n                                     logger.atError().setEventType(\"service-runtime-error\").setCause(t).log();\n                                 }\n-                            }, \"start\");\n+                            },  \"start\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NTIzNw==", "bodyText": "use != null? I think PMD will be ok with it, and if not, let's ignore that because this is more complicated with the ternary.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402685237", "createdAt": "2020-04-03T01:21:21Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -653,7 +691,7 @@ public void serviceErrored() {\n     }\n \n     public boolean isErrored() {\n-        return !getState().isHappy() || error != null;\n+        return getState().isHappy() && error == null ? false : true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "originalPosition": 211}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NTkyMg==", "bodyText": "Run should be handled by GenericExternalService. Since EvergreenService has no run() API it should not be doing anything with it. IMO run() is a detail of GenericExternalService which should be encapsulated within it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r402685922", "createdAt": "2020-04-03T01:23:48Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -477,8 +482,33 @@ private void startStateTransition() throws InterruptedException {\n                                             .log(\"Got interrupted while waiting for dependency ready\");\n                                     return;\n                                 }\n-\n                                 try {\n+                                    Topics startUpTopic = getStartUpTopic();\n+                                    Integer timeout = null;\n+                                    if (startUpTopic != null) {\n+                                        timeout = (Integer) startUpTopic.findLeafChild(TIMEOUT_NAMESPACE_TOPIC)\n+                                                .dflt(DEFAULT_STARTUP_STAGE_TIMEOUT_IN_SEC).getOnce();\n+                                        Topics runTopic = getRunTopic();\n+                                        if (runTopic != null) {\n+                                            timeout = (Integer) startUpTopic.findLeafChild(TIMEOUT_NAMESPACE_TOPIC)\n+                                                    .dflt(null).getOnce();\n+                                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDI0MzQ3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-387424347", "createdAt": "2020-04-03T16:54:08Z", "commit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo1NDowOFrOGAd6Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo1NzozNVrOGAeEVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MzIxMQ==", "bodyText": "Agree. Can we move this timeout logic to GenericExternalService?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r403143211", "createdAt": "2020-04-03T16:54:08Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -477,8 +482,33 @@ private void startStateTransition() throws InterruptedException {\n                                             .log(\"Got interrupted while waiting for dependency ready\");\n                                     return;\n                                 }\n-\n                                 try {\n+                                    Topics startUpTopic = getStartUpTopic();\n+                                    Integer timeout = null;\n+                                    if (startUpTopic != null) {\n+                                        timeout = (Integer) startUpTopic.findLeafChild(TIMEOUT_NAMESPACE_TOPIC)\n+                                                .dflt(DEFAULT_STARTUP_STAGE_TIMEOUT_IN_SEC).getOnce();\n+                                        Topics runTopic = getRunTopic();\n+                                        if (runTopic != null) {\n+                                            timeout = (Integer) startUpTopic.findLeafChild(TIMEOUT_NAMESPACE_TOPIC)\n+                                                    .dflt(null).getOnce();\n+                                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NTkyMg=="}, "originalCommit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0NTgxMg==", "bodyText": "Why do you put a reference of the service in the exception? Isn't the name of the service sufficient?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r403145812", "createdAt": "2020-04-03T16:57:35Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/exceptions/ServiceUpdateException.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.aws.iot.evergreen.deployment.exceptions;\n+\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import lombok.Getter;\n+\n+@SuppressFBWarnings(justification = \"This does not need to be serializable\", value = \"SE_BAD_FIELD\")\n+public class ServiceUpdateException extends DeploymentException {\n+\n+    @Getter\n+    private EvergreenService brokenService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47f5547aa1a44590f0a0c32dccb12319cd40e730", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/47f5547aa1a44590f0a0c32dccb12319cd40e730", "committedDate": "2020-04-03T22:50:05Z", "message": "moved run timeout to generic external service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37f9d91ed014f232a16f9ae7078bea466e83bfd6", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/37f9d91ed014f232a16f9ae7078bea466e83bfd6", "committedDate": "2020-04-04T03:51:07Z", "message": "Merge branch 'master' into throw-deployment-failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NjY0NTIw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-387664520", "createdAt": "2020-04-04T03:54:17Z", "commit": {"oid": "37f9d91ed014f232a16f9ae7078bea466e83bfd6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMzo1NDoxN1rOGAu0vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMzo1NDoxN1rOGAu0vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQyMDM0OQ==", "bodyText": "Thanks for adding these. Can you copy lookup also from Configuration and then have the lookup and find methods in Config delegate to these methods on the root topics?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r403420349", "createdAt": "2020-04-04T03:54:17Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -133,6 +133,41 @@ public Topic lookup(String... path) {\n         return n.createLeafChild(path[limit]);\n     }\n \n+    /**\n+     * Find, but do not create if missing, a topic (a name/value pair) in the\n+     * config file. Returns null if missing.\n+     *\n+     * @param path String[] of node names to traverse to find or create the Topic\n+     */\n+    public Topic find(String... path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f9d91ed014f232a16f9ae7078bea466e83bfd6"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b36fb2fd719f3f0aaa879e1f39d722d009679d62", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b36fb2fd719f3f0aaa879e1f39d722d009679d62", "committedDate": "2020-04-06T03:38:43Z", "message": "addressed pr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b04145b56ac40794602b86ad3a1763b1902f2fdf", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b04145b56ac40794602b86ad3a1763b1902f2fdf", "committedDate": "2020-04-06T03:48:45Z", "message": "fixed pmd violations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3OTE5MDMw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-387919030", "createdAt": "2020-04-06T03:50:45Z", "commit": {"oid": "b04145b56ac40794602b86ad3a1763b1902f2fdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzo1MDo0NVrOGBG_Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzo1MDo0NVrOGBG_Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNjIxMQ==", "bodyText": "Looks like you can get rid of this now.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r403816211", "createdAt": "2020-04-06T03:50:45Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/exceptions/ServiceUpdateException.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.aws.iot.evergreen.deployment.exceptions;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+@SuppressFBWarnings(justification = \"This does not need to be serializable\", value = \"SE_BAD_FIELD\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04145b56ac40794602b86ad3a1763b1902f2fdf"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3OTE5MzQ3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-387919347", "createdAt": "2020-04-06T03:52:12Z", "commit": {"oid": "b04145b56ac40794602b86ad3a1763b1902f2fdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzo1MjoxMlrOGBHAJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzo1MjoxMlrOGBHAJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNjQ4Nw==", "bodyText": "This happens a lot. I think this should drop to debug.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r403816487", "createdAt": "2020-04-06T03:52:12Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -635,16 +662,19 @@ private void serviceTerminatedMoveToDesiredState(@Nonnull State desiredState) {\n     public void handleError() throws InterruptedException {\n     }\n \n-    private synchronized void setBackingTask(Runnable r, String db) {\n+    private synchronized void setBackingTask(Runnable r, String action) {\n         Future bt = backingTask;\n-        if (bt != null) {\n-            backingTask = null;\n-            if (!bt.isDone()) {\n-                logger.info(\"Stopping backingTask {}\", bt);\n-                bt.cancel(true);\n-            }\n+        String btName = backingTaskName;\n+\n+        if (!bt.isDone()) {\n+            backingTask = CompletableFuture.completedFuture(null);\n+            logger.info(\"Stopping backingTask {}\", btName);\n+            bt.cancel(true);\n         }\n+\n         if (r != null) {\n+            backingTaskName = action;\n+            logger.info(\"Scheduling backingTask {}\", backingTaskName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04145b56ac40794602b86ad3a1763b1902f2fdf"}, "originalPosition": 214}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3OTE5ODUz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-387919853", "createdAt": "2020-04-06T03:54:22Z", "commit": {"oid": "b04145b56ac40794602b86ad3a1763b1902f2fdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzo1NDoyM1rOGBHCAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzo1NDoyM1rOGBHCAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNjk2MA==", "bodyText": "This is overcomplicated. Exec has a timeout field which you can set instead. Try modifying the run function to lookup both the script and the timeout.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r403816960", "createdAt": "2020-04-06T03:54:23Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -106,12 +108,29 @@ public void startup() throws InterruptedException {\n                     }\n                 }\n             });\n+            Topic timeoutTopic = config.find(SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n+                    LIFECYCLE_RUN_NAMESPACE_TOPIC, TIMEOUT_NAMESPACE_TOPIC);\n+            Integer timeout = timeoutTopic == null ? null : (Integer) timeoutTopic.getOnce();\n+            if (timeout != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04145b56ac40794602b86ad3a1763b1902f2fdf"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cfaa0ec0b3ec1daf214defec8abbed669027801", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9cfaa0ec0b3ec1daf214defec8abbed669027801", "committedDate": "2020-04-06T03:58:43Z", "message": "addressed minor pr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb", "committedDate": "2020-04-06T16:02:19Z", "message": "increased timeout for newly added test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDcxODU4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-388471858", "createdAt": "2020-04-06T17:35:47Z", "commit": {"oid": "d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzozNTo0N1rOGBiokg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzozNTo0N1rOGBiokg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI2OTIwMg==", "bodyText": "Why not use find here with the whole path to TIMEOUT_NAMESPACE_TOPIC?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404269202", "createdAt": "2020-04-06T17:35:47Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -478,8 +479,29 @@ private void startStateTransition() throws InterruptedException {\n                                             .log(\"Got interrupted while waiting for dependency ready\");\n                                     return;\n                                 }\n-\n                                 try {\n+                                    Topics startupTopics = config.findTopics(SERVICE_LIFECYCLE_NAMESPACE_TOPIC,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb"}, "originalPosition": 125}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "754d69f41939c40b930f0cd60d9ad39c8135aaa7", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/754d69f41939c40b930f0cd60d9ad39c8135aaa7", "committedDate": "2020-04-06T17:44:47Z", "message": "explicitly added report state when run() time out triggers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1", "committedDate": "2020-04-06T17:52:48Z", "message": "Merge branch 'master' into throw-deployment-failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDg3Mzg1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-388487385", "createdAt": "2020-04-06T17:56:34Z", "commit": {"oid": "7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo1NjozNVrOGBjaLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODowMjowNlrOGBjnfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MTkwMw==", "bodyText": "Can we make this timeout any faster?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404281903", "createdAt": "2020-04-06T17:56:35Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/GenericExternalServiceTest.java", "diffHunk": "@@ -36,4 +36,27 @@ void GIVEN_service_config_with_broken_skipif_config_WHEN_launch_service_THEN_ser\n         // THEN\n         assertTrue(testErrored.await(60, TimeUnit.SECONDS));\n     }\n+\n+    @Test\n+    void GIVEN_service_with_timeout_WHEN_timeout_expires_THEN_move_service_to_errored()\n+            throws InterruptedException {\n+        Kernel kernel = new Kernel();\n+        kernel.parseArgs(\"-i\", getClass().getResource(\"service_timesout.yaml\").toString());\n+        kernel.launch();\n+        CountDownLatch ServicesAErroredLatch = new CountDownLatch(1);\n+        CountDownLatch ServicesBErroredLatch = new CountDownLatch(1);\n+        // service sleeps for 120 seconds during startup and timeout is 5 seconds, service should transition to errored\n+        kernel.context.addGlobalStateChangeListener((service, oldState, newState) -> {\n+            if(\"ServiceA\".equals(service.getName()) && State.ERRORED.equals(newState)){\n+                ServicesAErroredLatch.countDown();\n+            }\n+            if(\"ServiceB\".equals(service.getName()) && State.ERRORED.equals(newState)){\n+                ServicesBErroredLatch.countDown();\n+            }\n+        });\n+\n+        assertTrue(ServicesAErroredLatch.await(60, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MjI1Mg==", "bodyText": "I'd suggest getting rid of this since it doesn't do anything.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404282252", "createdAt": "2020-04-06T17:57:06Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/kernel/service_timesout.yaml", "diffHunk": "@@ -0,0 +1,28 @@\n+---\n+services:\n+  plain:\n+    lifecycle:\n+      startup:\n+        all: \"{platform.invoke} {args}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MzEwNQ==", "bodyText": "Still present it would seem.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404283105", "createdAt": "2020-04-06T17:58:29Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -488,7 +518,7 @@ private void startStateTransition() throws InterruptedException {\n                                     reportState(State.ERRORED);\n                                     logger.atError().setEventType(\"service-runtime-error\").setCause(t).log();\n                                 }\n-                            }, \"start\");\n+                            },  \"start\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NDc2OA=="}, "originalCommit": {"oid": "53f1974927f39c36a198527ac01856026e2b4470"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4NDg3OA==", "bodyText": "Won't this be wrong if it did not timeout? If it ran to completion, then we should not be reporting error or calling close here.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404284878", "createdAt": "2020-04-06T18:01:18Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -106,12 +108,28 @@ public void startup() throws InterruptedException {\n                     }\n                 }\n             });\n+            Topic timeoutTopic = config.find(SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n+                    LIFECYCLE_RUN_NAMESPACE_TOPIC, TIMEOUT_NAMESPACE_TOPIC);\n+            Integer timeout = timeoutTopic == null ? null : (Integer) timeoutTopic.getOnce();\n+            if (timeout != null) {\n+                Exec processToClose = currentScript;\n+                context.get(ScheduledExecutorService.class).schedule(() -> {\n+                        try {\n+                            logger.atWarn(\"service-run-timed-out\")\n+                                    .log(\"Service failed to run within timeout, calling close in process\");\n+                            processToClose.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4NTMwOQ==", "bodyText": "should we check if the future is done?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404285309", "createdAt": "2020-04-06T18:02:06Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/mergeTest.java", "diffHunk": "@@ -21,5 +44,47 @@ public void testSomeMethod() throws Exception {\n         assertEquals(c.getRoot(), b.getRoot());\n     }\n \n+    @Test\n+    public void GIVEN_deployment_WHEN_all_service_are_running_THEN_waitForServicesToStart_completes_without_exception()\n+            throws InterruptedException {\n+        Kernel kernel = new Kernel();\n+        when(mockMainService.getState()).thenReturn(State.RUNNING);\n+        when(mockServiceA.getState()).thenReturn(State.RUNNING);\n+        when(mockServiceB.getState()).thenReturn(State.RUNNING);\n+\n+        when(mockMainService.reachedDesiredState()).thenReturn(true);\n+        when(mockServiceA.reachedDesiredState()).thenReturn(true);\n+        when(mockServiceB.reachedDesiredState()).thenReturn(true);\n+        CompletableFuture future = new CompletableFuture();\n+        Set<EvergreenService> evergreenServices =\n+                new HashSet(Arrays.asList(mockMainService, mockServiceA, mockServiceB));\n+        kernel.waitForServicesToStart(evergreenServices, future);\n+\n+        assertFalse(future.isCompletedExceptionally());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTA0MjAy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-388504202", "createdAt": "2020-04-06T18:19:48Z", "commit": {"oid": "7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxOTo0OFrOGBkPWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxOTo0OFrOGBkPWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5NTUxMw==", "bodyText": "Proper handling?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404295513", "createdAt": "2020-04-06T18:19:48Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -106,12 +108,28 @@ public void startup() throws InterruptedException {\n                     }\n                 }\n             });\n+            Topic timeoutTopic = config.find(SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n+                    LIFECYCLE_RUN_NAMESPACE_TOPIC, TIMEOUT_NAMESPACE_TOPIC);\n+            Integer timeout = timeoutTopic == null ? null : (Integer) timeoutTopic.getOnce();\n+            if (timeout != null) {\n+                Exec processToClose = currentScript;\n+                context.get(ScheduledExecutorService.class).schedule(() -> {\n+                        try {\n+                            logger.atWarn(\"service-run-timed-out\")\n+                                    .log(\"Service failed to run within timeout, calling close in process\");\n+                            processToClose.close();\n+                            reportState(State.ERRORED);\n+                        } catch (IOException e) {\n+                            logger.atError(\"\").log(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTA2MjAz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-388506203", "createdAt": "2020-04-06T18:22:34Z", "commit": {"oid": "7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoyMjozNFrOGBkV7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoyMjozNFrOGBkV7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5NzE5OQ==", "bodyText": "Does this need to be a field of the class since the lifecycle thread may break/continue which would cause this future to be lost?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404297199", "createdAt": "2020-04-06T18:22:34Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -416,14 +417,14 @@ private void startStateTransition() throws InterruptedException {\n         while (!(isClosed.get() && getState().isClosable())) {\n             Optional<State> desiredState;\n             State current = getState();\n-            logger.atInfo().setEventType(\"service-state-transition-start\").kv(\"currentState\", current).log();\n+            logger.atInfo().setEventType(\"service-state-transition-start\").kv(CURRENT_STATE_METRIC_NAME, current).log();\n \n             // if already in desired state, remove the head of desired state list.\n             desiredState = peekOrRemoveFirstDesiredState(current);\n             while (desiredState.isPresent() && desiredState.get().equals(current)) {\n                 desiredState = peekOrRemoveFirstDesiredState(current);\n             }\n-\n+            AtomicReference<Future> triggerTimeOutReference = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6eb3135bf0dcfeb6265fe9e1c9f5d38f1169b1"}, "originalPosition": 115}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61c899091cfdc4cc11ca7dfe71f374b8a61e626e", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/61c899091cfdc4cc11ca7dfe71f374b8a61e626e", "committedDate": "2020-04-06T18:55:08Z", "message": "addressed minor comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3471c05965ddcda0c25e25d61f376fff6c3f953", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e3471c05965ddcda0c25e25d61f376fff6c3f953", "committedDate": "2020-04-06T19:32:05Z", "message": "minor refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDM0ODIy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-388434822", "createdAt": "2020-04-06T16:48:28Z", "commit": {"oid": "d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNjo0ODoyOFrOGBgzSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTo1NDoyOVrOGBnhFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzOTE3OA==", "bodyText": "Good!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404239178", "createdAt": "2020-04-06T16:48:28Z", "author": {"login": "ShirleyZheng92"}, "path": "pom.xml", "diffHunk": "@@ -170,7 +170,7 @@\n                 <version>3.13.0</version>\n                 <configuration>\n                     <!-- Current violations should not be exceeded. Try to decrease these over time -->\n-                    <maxAllowedViolations>89</maxAllowedViolations>\n+                    <maxAllowedViolations>81</maxAllowedViolations>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzOTg5MA==", "bodyText": "Curious what this is?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404239890", "createdAt": "2020-04-06T16:49:30Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/kernel/service_timesout.yaml", "diffHunk": "@@ -0,0 +1,28 @@\n+---\n+services:\n+  plain:\n+    lifecycle:\n+      startup:\n+        all: \"{platform.invoke} {args}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzOTk1Ng==", "bodyText": "Curious what this is?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404239956", "createdAt": "2020-04-06T16:49:35Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/kernel/service_timesout.yaml", "diffHunk": "@@ -0,0 +1,28 @@\n+---\n+services:\n+  plain:\n+    lifecycle:\n+      startup:\n+        all: \"{platform.invoke} {args}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0MTU0OA==", "bodyText": "Can this be in GenericExternalService.java", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404241548", "createdAt": "2020-04-06T16:52:07Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -54,6 +56,11 @@\n     public static final String SERVICES_NAMESPACE_TOPIC = \"services\";\n     public static final String SERVICE_LIFECYCLE_NAMESPACE_TOPIC = \"lifecycle\";\n     public static final String SERVICE_NAME_KEY = \"serviceName\";\n+    public static final String LIFECYCLE_STARTUP_NAMESPACE_TOPIC = \"startup\";\n+    public static final String LIFECYCLE_RUN_NAMESPACE_TOPIC = \"run\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0MzExOQ==", "bodyText": "Hmm can you add more message?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404243119", "createdAt": "2020-04-06T16:54:33Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -106,12 +108,29 @@ public void startup() throws InterruptedException {\n                     }\n                 }\n             });\n+            Topic timeoutTopic = config.find(SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n+                    LIFECYCLE_RUN_NAMESPACE_TOPIC, TIMEOUT_NAMESPACE_TOPIC);\n+            Integer timeout = timeoutTopic == null ? null : (Integer) timeoutTopic.getOnce();\n+            if (timeout != null) {\n+                Exec processToClose = currentScript;\n+                context.get(ScheduledExecutorService.class).schedule(() -> {\n+                        try {\n+                            logger.atWarn(\"service-run-timed-out\")\n+                                    .log(\"Service failed to run within timeout, calling close in process\");\n+                            // sigint, sigterm will cause the process to exit with a non-zero exit code\n+                            // which would move the service into errored state\n+                            processToClose.close();\n+                        } catch (IOException e) {\n+                            logger.atError(\"\").log(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0OTIwNw==", "bodyText": "I feel the case of \"startup life-cycle stage itself is missing\" doesn't make a difference here", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404349207", "createdAt": "2020-04-06T19:54:29Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -478,8 +479,29 @@ private void startStateTransition() throws InterruptedException {\n                                             .log(\"Got interrupted while waiting for dependency ready\");\n                                     return;\n                                 }\n-\n                                 try {\n+                                    Topics startupTopics = config.findTopics(SERVICE_LIFECYCLE_NAMESPACE_TOPIC,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI2OTIwMg=="}, "originalCommit": {"oid": "d283fce79b3ffd0ea7e2e68e54699e6ee3b66fcb"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTkyNjg2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-388592686", "createdAt": "2020-04-06T20:29:19Z", "commit": {"oid": "e3471c05965ddcda0c25e25d61f376fff6c3f953"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDoyOToxOVrOGBorUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDoyOToxOVrOGBorUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2ODIwOA==", "bodyText": "There should be a space here. But only 1.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404368208", "createdAt": "2020-04-06T20:29:19Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -489,7 +511,7 @@ private void startStateTransition() throws InterruptedException {\n                                     reportState(State.ERRORED);\n                                     logger.atError().setEventType(\"service-runtime-error\").setCause(t).log();\n                                 }\n-                            }, \"start\");\n+                            },\"start\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3471c05965ddcda0c25e25d61f376fff6c3f953"}, "originalPosition": 155}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTk0MDI1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-388594025", "createdAt": "2020-04-06T20:31:18Z", "commit": {"oid": "e3471c05965ddcda0c25e25d61f376fff6c3f953"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDozMToxOFrOGBovjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDozMToxOFrOGBovjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2OTI5Mw==", "bodyText": "Whether it errors here or not, you still need to do the reportState, right? Should you maybe just put the report into finally?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#discussion_r404369293", "createdAt": "2020-04-06T20:31:18Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -106,12 +108,32 @@ public void startup() throws InterruptedException {\n                     }\n                 }\n             });\n+            Topic timeoutTopic = config.find(SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n+                    LIFECYCLE_RUN_NAMESPACE_TOPIC, TIMEOUT_NAMESPACE_TOPIC);\n+            Integer timeout = timeoutTopic == null ? null : (Integer) timeoutTopic.getOnce();\n+            if (timeout != null) {\n+                Exec processToClose = currentScript;\n+                context.get(ScheduledExecutorService.class).schedule(() -> {\n+                    if (processToClose.isRunning()) {\n+                        try {\n+                            logger.atWarn(\"service-run-timed-out\")\n+                                    .log(\"Service failed to run within timeout, calling close in process\");\n+                            processToClose.close();\n+                            reportState(State.ERRORED);\n+\n+                        } catch (IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3471c05965ddcda0c25e25d61f376fff6c3f953"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17d0edd34306670d02f54343e4792e274efdc371", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/17d0edd34306670d02f54343e4792e274efdc371", "committedDate": "2020-04-07T14:37:31Z", "message": "addressed minor comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4d7503acaf8c52ca38120435e58a7f17481570f", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a4d7503acaf8c52ca38120435e58a7f17481570f", "committedDate": "2020-04-07T14:41:59Z", "message": "Merge branch 'master' into throw-deployment-failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f57f7fb4b10c5384edd4ef45fa6f67e27ef9c56f", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f57f7fb4b10c5384edd4ef45fa6f67e27ef9c56f", "committedDate": "2020-04-07T16:17:51Z", "message": "added support for configurable install timeout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mjg3MDc0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-389287074", "createdAt": "2020-04-07T16:26:45Z", "commit": {"oid": "f57f7fb4b10c5384edd4ef45fa6f67e27ef9c56f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db8fe02b5b8a51b09e609eadf6bc7d5a487a2d29", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/db8fe02b5b8a51b09e609eadf6bc7d5a487a2d29", "committedDate": "2020-04-07T17:17:55Z", "message": "use lookup to find timeout to avoid  pollute the config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef0812e55c40c05c6696a62043e4612504a73ebf", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ef0812e55c40c05c6696a62043e4612504a73ebf", "committedDate": "2020-04-07T18:12:35Z", "message": "Merge branch 'master' into throw-deployment-failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b35af9fde7f33bd6a8067a1b7efcbfbe09319b96", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b35af9fde7f33bd6a8067a1b7efcbfbe09319b96", "committedDate": "2020-04-07T19:23:34Z", "message": "updating the time out for e2e as tests are timing out"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTIxMjg2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-389521286", "createdAt": "2020-04-07T22:00:19Z", "commit": {"oid": "b35af9fde7f33bd6a8067a1b7efcbfbe09319b96"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a3bfd59473bf0d2a3c7e4f87e4db96fc646670b", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7a3bfd59473bf0d2a3c7e4f87e4db96fc646670b", "committedDate": "2020-04-07T22:21:50Z", "message": "added timeout field to unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTMyMzIx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-389532321", "createdAt": "2020-04-07T22:23:32Z", "commit": {"oid": "7a3bfd59473bf0d2a3c7e4f87e4db96fc646670b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de5ec757ed993e1eb38efb5cc5439ecc6a64af92", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/de5ec757ed993e1eb38efb5cc5439ecc6a64af92", "committedDate": "2020-04-07T22:24:04Z", "message": "Merge branch 'master' into throw-deployment-failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTM0Mzc0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/151#pullrequestreview-389534374", "createdAt": "2020-04-07T22:28:08Z", "commit": {"oid": "de5ec757ed993e1eb38efb5cc5439ecc6a64af92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2404, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}