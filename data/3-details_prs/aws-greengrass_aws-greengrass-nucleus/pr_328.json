{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MDM2MjE2", "number": 328, "title": "Implement \"bootstrap\" for GenericExternalService and EGService", "bodyText": "Issue #, if available:\nAcceptance Criteria\nGIVEN a recipe file and its lifecycle section,\nWHEN component author defines command under bootstrap,\nWHEN a deployment results this component newly added to kernel, or the version changes , or the bootstrap script changes,\nTHEN DeploymentTask executes the bootstrap command and gets the return code.\nDescription of changes:\nImplement bootstrap() in GenericExternalService.\nWhy is this change necessary:\nHow was this change tested:\nAdded a integration test method (as loading the same config file) for\n1. happy path\n1. time out after 120 sec (default)\n1. configured time out\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-07-24T02:03:01Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328", "merged": true, "mergeCommit": {"oid": "d8fd7164296b3ae83daeb4c9c2dcddb59b4c5dc7"}, "closed": true, "closedAt": "2020-07-28T22:03:48Z", "author": {"login": "leaf94"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc35GOHAH2gAyNDU2MDM2MjE2OmVlMDA0ZjdkMjMwNjk0Zjg5OWVmNjEyMzYwNTQ3MWNhMDkyNzc5MmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5dzs2gFqTQ1NzA2MDk4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ee004f7d230694f899ef6123605471ca0927792b", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ee004f7d230694f899ef6123605471ca0927792b", "committedDate": "2020-07-24T00:43:18Z", "message": "implemented without timeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afb6f9a6b55af7590fa43a9506f7941308e19717", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/afb6f9a6b55af7590fa43a9506f7941308e19717", "committedDate": "2020-07-24T01:41:47Z", "message": "Implemented with timeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e65b3e92084db326444f13ec268e34d0c63439f", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6e65b3e92084db326444f13ec268e34d0c63439f", "committedDate": "2020-07-24T01:51:02Z", "message": "more changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "295fe18c9663d4bb4f7f3171066f69a38cc776ad", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/295fe18c9663d4bb4f7f3171066f69a38cc776ad", "committedDate": "2020-07-24T02:03:17Z", "message": "Merge branch 'master' into ku03"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjAxMzIy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#pullrequestreview-454601322", "createdAt": "2020-07-24T02:08:40Z", "commit": {"oid": "295fe18c9663d4bb4f7f3171066f69a38cc776ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMjowODo0MFrOG2hO_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMjowODo0MFrOG2hO_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMDc5Nw==", "bodyText": "Use findOrDefault. Are our timeouts all specified in seconds?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r459820797", "createdAt": "2020-07-24T02:08:40Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -90,11 +96,71 @@ public static String exit2String(int exitCode) {\n                 : \"exit(\" + ((exitCode << 24) >> 24) + \")\";\n     }\n \n+    /**\n+     * Runs the command under 'bootstrap' and returns the exit code. The timeout can be configured with 'timeout' field\n+     * in seconds. If not configured, by default, it times out after 2 minutes.\n+     *\n+     * @return exit code of process; null if no bootstrap command found.\n+     * @throws InterruptedException when the command execution is interrupted.\n+     */\n+    public synchronized Integer bootstrap() throws InterruptedException, TimeoutException {\n+        // this is redundant because all lifecycle processes should have been before calling this method.\n+        // stopping here again to be safer\n+        stopAllLifecycleProcesses();\n+\n+        CountDownLatch timeoutLatch = new CountDownLatch(1);\n+\n+        AtomicInteger atomicExitCode = new AtomicInteger();\n+\n+        // run the command at background thread so that the main thread can handle it when it times out\n+        // note that this could be a foreground process but it requires run() methods, ShellerRunner, and Exec's method\n+        // signature changes to deal with timeout, so we decided to go with background thread.\n+        Exec exec = run(LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC, exitCode -> {\n+            atomicExitCode.set(exitCode);\n+            timeoutLatch.countDown();\n+        }, lifecycleProcesses).getRight();\n+\n+        if (exec == null) {\n+            // no bootstrap command found\n+            return null;\n+        }\n+\n+        // timeout handling\n+        Topic timeoutTopic = config.find(SERVICE_LIFECYCLE_NAMESPACE_TOPIC, LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "295fe18c9663d4bb4f7f3171066f69a38cc776ad"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3751d4b13f648b8bbd6399d65c456a7ff0054267", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3751d4b13f648b8bbd6399d65c456a7ff0054267", "committedDate": "2020-07-24T17:40:59Z", "message": "Add to EG service; Update README"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDkxODE5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#pullrequestreview-455091819", "createdAt": "2020-07-24T18:14:48Z", "commit": {"oid": "295fe18c9663d4bb4f7f3171066f69a38cc776ad"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODoxNDo0OVrOG25L_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODoxNjoyOFrOG25PPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIxMzI0Nw==", "bodyText": "Should we close exec if timeout?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r460213247", "createdAt": "2020-07-24T18:14:49Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -90,11 +96,71 @@ public static String exit2String(int exitCode) {\n                 : \"exit(\" + ((exitCode << 24) >> 24) + \")\";\n     }\n \n+    /**\n+     * Runs the command under 'bootstrap' and returns the exit code. The timeout can be configured with 'timeout' field\n+     * in seconds. If not configured, by default, it times out after 2 minutes.\n+     *\n+     * @return exit code of process; null if no bootstrap command found.\n+     * @throws InterruptedException when the command execution is interrupted.\n+     */\n+    public synchronized Integer bootstrap() throws InterruptedException, TimeoutException {\n+        // this is redundant because all lifecycle processes should have been before calling this method.\n+        // stopping here again to be safer\n+        stopAllLifecycleProcesses();\n+\n+        CountDownLatch timeoutLatch = new CountDownLatch(1);\n+\n+        AtomicInteger atomicExitCode = new AtomicInteger();\n+\n+        // run the command at background thread so that the main thread can handle it when it times out\n+        // note that this could be a foreground process but it requires run() methods, ShellerRunner, and Exec's method\n+        // signature changes to deal with timeout, so we decided to go with background thread.\n+        Exec exec = run(LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC, exitCode -> {\n+            atomicExitCode.set(exitCode);\n+            timeoutLatch.countDown();\n+        }, lifecycleProcesses).getRight();\n+\n+        if (exec == null) {\n+            // no bootstrap command found\n+            return null;\n+        }\n+\n+        // timeout handling\n+        Topic timeoutTopic = config.find(SERVICE_LIFECYCLE_NAMESPACE_TOPIC, LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC,\n+                TIMEOUT_NAMESPACE_TOPIC);\n+\n+        int timeoutInSec = timeoutTopic == null ? DEFAULT_BOOTSTRAP_TIMEOUT_SEC : Coerce.toInt(timeoutTopic);\n+\n+        try {\n+            boolean completedInTime = timeoutLatch.await(timeoutInSec, TimeUnit.SECONDS);\n+\n+            if (!completedInTime) {\n+                throw new TimeoutException(\"Bootstrap timed out\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "295fe18c9663d4bb4f7f3171066f69a38cc776ad"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIxMzg1OA==", "bodyText": "Are all default timeouts 2 min?\nMaybe vaguely mention \"default timeout\"?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r460213858", "createdAt": "2020-07-24T18:16:03Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -305,8 +371,9 @@ public void handleError() throws InterruptedException {\n     /**\n      * Run one of the commands defined in the config on the command line.\n      *\n-     * @param name         name of the command to run (\"run\", \"install\", \"start\").\n-     * @param background   IntConsumer to receive the exit code. If null, the command will timeout after 2 minutes.\n+     * @param name         name of the command to run (\"run\", \"install\", \"startup\", \"bootstrap\").\n+     * @param background   IntConsumer to receive the exit code. If null, the command will run as a foreground process\n+     *                     and timeout after 2 minutes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "295fe18c9663d4bb4f7f3171066f69a38cc776ad"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIxNDA3OQ==", "bodyText": "Is this used anywhere?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r460214079", "createdAt": "2020-07-24T18:16:28Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "diffHunk": "@@ -21,6 +21,7 @@\n import java.util.Arrays;\n import java.util.concurrent.ConcurrentLinkedDeque;\n import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "295fe18c9663d4bb4f7f3171066f69a38cc776ad"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c579c00085b062c98feb3ae8f905a8ab15937bec", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c579c00085b062c98feb3ae8f905a8ab15937bec", "committedDate": "2020-07-24T19:09:48Z", "message": "Address some PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75cea3dff430308c9c7b42e719f1ec2f734744f3", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/75cea3dff430308c9c7b42e719f1ec2f734744f3", "committedDate": "2020-07-24T19:17:29Z", "message": "typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9fa6672dbf02e526b60fb65a6b5d2303cc9059c", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b9fa6672dbf02e526b60fb65a6b5d2303cc9059c", "committedDate": "2020-07-24T19:19:03Z", "message": "Merge branch 'master' into ku03"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eec5e1ed1454a1203b4d4213cb4aad77340620f8", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eec5e1ed1454a1203b4d4213cb4aad77340620f8", "committedDate": "2020-07-24T23:20:57Z", "message": "Merge branch 'master' into ku03"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjMxOTA2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#pullrequestreview-455231906", "createdAt": "2020-07-24T23:25:16Z", "commit": {"oid": "eec5e1ed1454a1203b4d4213cb4aad77340620f8"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoyNToxNlrOG3ANAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoyNToxNlrOG3ANAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyODE5Mw==", "bodyText": "101 for rebooting device. Also you can use the defined constants for 0, 100, and 101 in deployments/bootstrap.\nIs this func intended to be protected?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r460328193", "createdAt": "2020-07-24T23:25:16Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -230,6 +231,20 @@ public boolean isErrored() {\n         return !(getState().isHappy() && error == null);\n     }\n \n+    /**\n+     * Bootstrap and notify if a kernel/device restart is needed. Called when a component newly added to kernel, or the\n+     * version changes. Returns 0 for no-op, 100 for restarting kernel, 200 for restarting device, other code for\n+     * errors, and null if not configured.\n+     *\n+     * @return exit code; 0 for no-op, 100 for restarting kernel, 200 for restarting device, other code for errors.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eec5e1ed1454a1203b4d4213cb4aad77340620f8"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTMwMzc1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#pullrequestreview-456130375", "createdAt": "2020-07-27T20:58:56Z", "commit": {"oid": "eec5e1ed1454a1203b4d4213cb4aad77340620f8"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDo1ODo1NlrOG3zWBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMTowNjoyMFrOG3zlXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2NjA4NQ==", "bodyText": "NIT extra line", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r461166085", "createdAt": "2020-07-27T20:58:56Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -90,11 +96,60 @@ public static String exit2String(int exitCode) {\n                 : \"exit(\" + ((exitCode << 24) >> 24) + \")\";\n     }\n \n+    /**\n+     * Run the command under 'bootstrap' and returns the exit code. The timeout can be configured with 'timeout' field\n+     * in seconds. If not configured, by default, it times out after 2 minutes.\n+     *\n+     * @return exit code of process; null if no bootstrap command found.\n+     * @throws InterruptedException when the command execution is interrupted.\n+     * @throws TimeoutException     when the command execution times out.\n+     */\n+    @Override\n+    public synchronized Integer bootstrap() throws InterruptedException, TimeoutException {\n+        // this is redundant because all lifecycle processes should have been before calling this method.\n+        // stopping here again to be safer\n+        stopAllLifecycleProcesses();\n+\n+        CountDownLatch timeoutLatch = new CountDownLatch(1);\n+\n+        AtomicInteger atomicExitCode = new AtomicInteger();\n+\n+        // run the command at background thread so that the main thread can handle it when it times out\n+        // note that this could be a foreground process but it requires run() methods, ShellerRunner, and Exec's method\n+        // signature changes to deal with timeout, so we decided to go with background thread.\n+\n+        try (Exec exec = run(LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC, exitCode -> {\n+            atomicExitCode.set(exitCode);\n+            timeoutLatch.countDown();\n+        }, lifecycleProcesses).getRight()) {\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eec5e1ed1454a1203b4d4213cb4aad77340620f8"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2NzMyNQ==", "bodyText": "NIT: Add timeout value in exception message", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r461167325", "createdAt": "2020-07-27T21:01:14Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -90,11 +96,60 @@ public static String exit2String(int exitCode) {\n                 : \"exit(\" + ((exitCode << 24) >> 24) + \")\";\n     }\n \n+    /**\n+     * Run the command under 'bootstrap' and returns the exit code. The timeout can be configured with 'timeout' field\n+     * in seconds. If not configured, by default, it times out after 2 minutes.\n+     *\n+     * @return exit code of process; null if no bootstrap command found.\n+     * @throws InterruptedException when the command execution is interrupted.\n+     * @throws TimeoutException     when the command execution times out.\n+     */\n+    @Override\n+    public synchronized Integer bootstrap() throws InterruptedException, TimeoutException {\n+        // this is redundant because all lifecycle processes should have been before calling this method.\n+        // stopping here again to be safer\n+        stopAllLifecycleProcesses();\n+\n+        CountDownLatch timeoutLatch = new CountDownLatch(1);\n+\n+        AtomicInteger atomicExitCode = new AtomicInteger();\n+\n+        // run the command at background thread so that the main thread can handle it when it times out\n+        // note that this could be a foreground process but it requires run() methods, ShellerRunner, and Exec's method\n+        // signature changes to deal with timeout, so we decided to go with background thread.\n+\n+        try (Exec exec = run(LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC, exitCode -> {\n+            atomicExitCode.set(exitCode);\n+            timeoutLatch.countDown();\n+        }, lifecycleProcesses).getRight()) {\n+\n+\n+            if (exec == null) {\n+                // no bootstrap command found\n+                return null;\n+            }\n+\n+            // timeout handling\n+            int timeoutInSec = (int) config\n+                    .findOrDefault(DEFAULT_BOOTSTRAP_TIMEOUT_SEC, SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n+                            LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC, TIMEOUT_NAMESPACE_TOPIC);\n+            boolean completedInTime = timeoutLatch.await(timeoutInSec, TimeUnit.SECONDS);\n+            if (!completedInTime) {\n+                throw new TimeoutException(\"Bootstrap step timed out\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eec5e1ed1454a1203b4d4213cb4aad77340620f8"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2NzU1Nw==", "bodyText": "What's the exit value in this case?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r461167557", "createdAt": "2020-07-27T21:01:41Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -90,11 +96,60 @@ public static String exit2String(int exitCode) {\n                 : \"exit(\" + ((exitCode << 24) >> 24) + \")\";\n     }\n \n+    /**\n+     * Run the command under 'bootstrap' and returns the exit code. The timeout can be configured with 'timeout' field\n+     * in seconds. If not configured, by default, it times out after 2 minutes.\n+     *\n+     * @return exit code of process; null if no bootstrap command found.\n+     * @throws InterruptedException when the command execution is interrupted.\n+     * @throws TimeoutException     when the command execution times out.\n+     */\n+    @Override\n+    public synchronized Integer bootstrap() throws InterruptedException, TimeoutException {\n+        // this is redundant because all lifecycle processes should have been before calling this method.\n+        // stopping here again to be safer\n+        stopAllLifecycleProcesses();\n+\n+        CountDownLatch timeoutLatch = new CountDownLatch(1);\n+\n+        AtomicInteger atomicExitCode = new AtomicInteger();\n+\n+        // run the command at background thread so that the main thread can handle it when it times out\n+        // note that this could be a foreground process but it requires run() methods, ShellerRunner, and Exec's method\n+        // signature changes to deal with timeout, so we decided to go with background thread.\n+\n+        try (Exec exec = run(LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC, exitCode -> {\n+            atomicExitCode.set(exitCode);\n+            timeoutLatch.countDown();\n+        }, lifecycleProcesses).getRight()) {\n+\n+\n+            if (exec == null) {\n+                // no bootstrap command found\n+                return null;\n+            }\n+\n+            // timeout handling\n+            int timeoutInSec = (int) config\n+                    .findOrDefault(DEFAULT_BOOTSTRAP_TIMEOUT_SEC, SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n+                            LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC, TIMEOUT_NAMESPACE_TOPIC);\n+            boolean completedInTime = timeoutLatch.await(timeoutInSec, TimeUnit.SECONDS);\n+            if (!completedInTime) {\n+                throw new TimeoutException(\"Bootstrap step timed out\");\n+            }\n+\n+        } catch (IOException e) {\n+            logger.atError(\"bootstrap-process-close-error\").setCause(e).log(\"Error closing process at bootstrap step.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eec5e1ed1454a1203b4d4213cb4aad77340620f8"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2OTM1MA==", "bodyText": "Nice!! I believe this also applies skipif", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r461169350", "createdAt": "2020-07-27T21:05:06Z", "author": {"login": "ShirleyZheng92"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -65,6 +65,11 @@ Root keys have to be recognized keys.\n services: \n <serviceName>:\n   lifecycle:\n+    bootstrap:\n+      script:\n+      timeout: # optional. timeout in number of seconds. Default to 120 sec.\n+      setenv: # key-value environment variables. optional, can override the parent 'setenv'\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eec5e1ed1454a1203b4d4213cb4aad77340620f8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3MDAxNQ==", "bodyText": "NIT extra new lines", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r461170015", "createdAt": "2020-07-27T21:06:20Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/GenericExternalServiceTest.java", "diffHunk": "@@ -248,4 +248,32 @@ void GIVEN_running_service_WHEN_setenv_config_changes_THEN_service_restarts() th\n \n         assertTrue(serviceRestarted.await(5, TimeUnit.SECONDS));\n     }\n+\n+    @Test\n+    void GIVEN_bootstrap_command_WHEN_bootstrap_THEN_command_runs_and_returns_exit_code() throws Exception {\n+        kernel = new Kernel();\n+        kernel.parseArgs(\"-i\", getClass().getResource(\"service_with_just_bootstrap.yaml\").toString());\n+\n+        GenericExternalService serviceWithJustBootstrap =\n+                (GenericExternalService) kernel.locate(\"service_with_just_bootstrap\");\n+\n+        assertEquals(147, serviceWithJustBootstrap.bootstrap());\n+\n+        GenericExternalService serviceWithJustBootstrapAndConfiguredTimeout =\n+                (GenericExternalService) kernel.locate(\"service_with_just_bootstrap_and_configured_timeout\");\n+        assertEquals(147, serviceWithJustBootstrapAndConfiguredTimeout.bootstrap());\n+    }\n+\n+    @Test\n+    void GIVEN_bootstrap_command_WHEN_runs_longer_than_120_sec_THEN_timeout_exception_is_thrown() throws Exception {\n+        kernel = new Kernel();\n+        kernel.parseArgs(\"-i\", getClass().getResource(\"service_with_just_bootstrap.yaml\").toString());\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eec5e1ed1454a1203b4d4213cb4aad77340620f8"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c47954f14ae0a9f900990d05167cbce4bba9adec", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c47954f14ae0a9f900990d05167cbce4bba9adec", "committedDate": "2020-07-27T22:56:24Z", "message": "Merge branch 'master' into ku03"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16bae349c5060906db8aa3774f21bc1e16bd722b", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/16bae349c5060906db8aa3774f21bc1e16bd722b", "committedDate": "2020-07-28T00:26:21Z", "message": "PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjIzNDk3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#pullrequestreview-456223497", "createdAt": "2020-07-28T00:29:38Z", "commit": {"oid": "16bae349c5060906db8aa3774f21bc1e16bd722b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDoyOTozOVrOG34SBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDoyOTozOVrOG34SBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI0Njk4Mw==", "bodyText": "Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.\nThis code uses '%s' to format int: timeoutInSec (declared at line 133). This is a potential locale-sensitive handling issue. It might cause errors in the handling and processing of the statement at line: 138. Consider formatting this data with '%d' instead.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#discussion_r461246983", "createdAt": "2020-07-28T00:29:39Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -94,11 +100,58 @@ public static String exit2String(int exitCode) {\n                 : \"exit(\" + ((exitCode << 24) >> 24) + \")\";\n     }\n \n+    /**\n+     * Run the command under 'bootstrap' and returns the exit code. The timeout can be configured with 'timeout' field\n+     * in seconds. If not configured, by default, it times out after 2 minutes.\n+     *\n+     * @return exit code of process; null if no bootstrap command found.\n+     * @throws InterruptedException when the command execution is interrupted.\n+     * @throws TimeoutException     when the command execution times out.\n+     */\n+    @Override\n+    public synchronized Integer bootstrap() throws InterruptedException, TimeoutException {\n+        // this is redundant because all lifecycle processes should have been before calling this method.\n+        // stopping here again to be safer\n+        stopAllLifecycleProcesses();\n+\n+        CountDownLatch timeoutLatch = new CountDownLatch(1);\n+        AtomicInteger atomicExitCode = new AtomicInteger();\n+\n+        // run the command at background thread so that the main thread can handle it when it times out\n+        // note that this could be a foreground process but it requires run() methods, ShellerRunner, and Exec's method\n+        // signature changes to deal with timeout, so we decided to go with background thread.\n+        try (Exec exec = run(LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC, exitCode -> {\n+            atomicExitCode.set(exitCode);\n+            timeoutLatch.countDown();\n+        }, lifecycleProcesses).getRight()) {\n+            if (exec == null) {\n+                // no bootstrap command found\n+                return null;\n+            }\n+\n+            // timeout handling\n+            int timeoutInSec = (int) config\n+                    .findOrDefault(DEFAULT_BOOTSTRAP_TIMEOUT_SEC, SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n+                            LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC, TIMEOUT_NAMESPACE_TOPIC);\n+            boolean completedInTime = timeoutLatch.await(timeoutInSec, TimeUnit.SECONDS);\n+            if (!completedInTime) {\n+                String msg = String.format(\"Bootstrap step timed out after '%s' seconds.\", timeoutInSec);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16bae349c5060906db8aa3774f21bc1e16bd722b"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjI0NjI5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#pullrequestreview-456224629", "createdAt": "2020-07-28T00:33:30Z", "commit": {"oid": "16bae349c5060906db8aa3774f21bc1e16bd722b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df8e5b9e8e4b22adbee17b937fc8e70f4ce50ce8", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/df8e5b9e8e4b22adbee17b937fc8e70f4ce50ce8", "committedDate": "2020-07-28T00:59:17Z", "message": "PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9a0d6f3881e8ac3701129085cdcaa211a735686", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b9a0d6f3881e8ac3701129085cdcaa211a735686", "committedDate": "2020-07-28T17:31:48Z", "message": "PR comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MDEyOTY3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#pullrequestreview-457012967", "createdAt": "2020-07-28T21:06:26Z", "commit": {"oid": "b9a0d6f3881e8ac3701129085cdcaa211a735686"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30dfeaaf4e279f499ffabb384c4bab1a6832d00f", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/30dfeaaf4e279f499ffabb384c4bab1a6832d00f", "committedDate": "2020-07-28T21:25:24Z", "message": "Merge branch 'master' into ku03"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MDYwOTg0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/328#pullrequestreview-457060984", "createdAt": "2020-07-28T22:03:29Z", "commit": {"oid": "30dfeaaf4e279f499ffabb384c4bab1a6832d00f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2929, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}