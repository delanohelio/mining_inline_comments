{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NDgxODc4", "number": 270, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjo0NTo0MFrOEDpu-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDoxOTowNFrOEEChVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjY0OTUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/util/platforms/UnixPlatform.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjo0NTo0MFrOGgy7iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjo0NzozOFrOGgy-EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA0MjA1Nw==", "bodyText": "will this 2 seconds be configurable?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270#discussion_r437042057", "createdAt": "2020-06-08T22:45:40Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/iot/evergreen/util/platforms/UnixPlatform.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.platforms;\n+\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import com.aws.iot.evergreen.util.Pair;\n+import com.aws.iot.evergreen.util.Utils;\n+import org.zeroturnaround.process.PidProcess;\n+import org.zeroturnaround.process.Processes;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.concurrent.TimeUnit;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import static com.aws.iot.evergreen.util.Utils.inputStreamToString;\n+\n+public class UnixPlatform extends Platform {\n+    protected static final int SIGINT = 2;\n+    protected static final int SIGKILL = 9;\n+    public static final Pattern PS_PID_PATTERN = Pattern.compile(\"(\\\\d+)\\\\s+(\\\\d+)\");\n+    protected static final Logger logger = LogManager.getLogger(UnixPlatform.class);\n+\n+    @Override\n+    public void killProcessAndChildren(Process process, boolean force) throws IOException, InterruptedException {\n+        PidProcess pp = Processes.newPidProcess(process);\n+\n+        logger.atDebug().log(\"Running pkill to kill child processes of pid {}\", pp.getPid());\n+        // Use pkill to kill all subprocesses under the main shell\n+        String[] cmd = {\"pkill\", \"-\" + (force ? SIGKILL : SIGINT), \"-P\", Integer.toString(pp.getPid())};\n+        Process proc = Runtime.getRuntime().exec(cmd);\n+        proc.waitFor();\n+        if (proc.exitValue() != 0) {\n+            logger.atWarn()\n+                    .kv(\"pid\", pp.getPid())\n+                    .kv(\"exit-code\", proc.exitValue())\n+                    .kv(\"stdout\", inputStreamToString(proc.getInputStream()))\n+                    .kv(\"stderr\", inputStreamToString(proc.getErrorStream()))\n+                    .log(\"pkill exited non-zero\");\n+        }\n+\n+        // If forcible, then also kill the parent (the shell)\n+        if (force) {\n+            process.destroy();\n+            process.waitFor(2, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67c4ee8519d2c6f98c483551dd6bacb5e24cac81"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA0MjcwNQ==", "bodyText": "It could be, though there may not be a need. Because by this point of killing, we're done being graceful and we're just killing a misbehaving shell (not the customer's code, the customer's code is already killed by this point).", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270#discussion_r437042705", "createdAt": "2020-06-08T22:47:38Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/util/platforms/UnixPlatform.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.platforms;\n+\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import com.aws.iot.evergreen.util.Pair;\n+import com.aws.iot.evergreen.util.Utils;\n+import org.zeroturnaround.process.PidProcess;\n+import org.zeroturnaround.process.Processes;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.concurrent.TimeUnit;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import static com.aws.iot.evergreen.util.Utils.inputStreamToString;\n+\n+public class UnixPlatform extends Platform {\n+    protected static final int SIGINT = 2;\n+    protected static final int SIGKILL = 9;\n+    public static final Pattern PS_PID_PATTERN = Pattern.compile(\"(\\\\d+)\\\\s+(\\\\d+)\");\n+    protected static final Logger logger = LogManager.getLogger(UnixPlatform.class);\n+\n+    @Override\n+    public void killProcessAndChildren(Process process, boolean force) throws IOException, InterruptedException {\n+        PidProcess pp = Processes.newPidProcess(process);\n+\n+        logger.atDebug().log(\"Running pkill to kill child processes of pid {}\", pp.getPid());\n+        // Use pkill to kill all subprocesses under the main shell\n+        String[] cmd = {\"pkill\", \"-\" + (force ? SIGKILL : SIGINT), \"-P\", Integer.toString(pp.getPid())};\n+        Process proc = Runtime.getRuntime().exec(cmd);\n+        proc.waitFor();\n+        if (proc.exitValue() != 0) {\n+            logger.atWarn()\n+                    .kv(\"pid\", pp.getPid())\n+                    .kv(\"exit-code\", proc.exitValue())\n+                    .kv(\"stdout\", inputStreamToString(proc.getInputStream()))\n+                    .kv(\"stderr\", inputStreamToString(proc.getErrorStream()))\n+                    .log(\"pkill exited non-zero\");\n+        }\n+\n+        // If forcible, then also kill the parent (the shell)\n+        if (force) {\n+            process.destroy();\n+            process.waitFor(2, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA0MjA1Nw=="}, "originalCommit": {"oid": "67c4ee8519d2c6f98c483551dd6bacb5e24cac81"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjY3NzcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/util/platforms/Platform.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDowODozOFrOGhaXNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDowODozOFrOGhaXNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4ODExOQ==", "bodyText": "Thanks for starting this.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270#discussion_r437688119", "createdAt": "2020-06-09T20:08:38Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/util/platforms/Platform.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.platforms;\n+\n+import com.aws.iot.evergreen.config.PlatformResolver;\n+import com.aws.iot.evergreen.util.Exec;\n+\n+import java.io.IOException;\n+\n+public abstract class Platform {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1acc061f44c43a2a2fda1a5f3e7b2e94bc20cf0a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjcxMDYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/util/platforms/WindowsPlatform.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDoxOTowNFrOGhasPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDoyMDoxMFrOGhausg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY5MzUwMg==", "bodyText": "Just want to confirm: the original \"combined\" implementation calls pp.destroyGracefully() and pp.destroyForcefully(). Here you only call destroy. Is this intentional?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270#discussion_r437693502", "createdAt": "2020-06-09T20:19:04Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/util/platforms/WindowsPlatform.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.platforms;\n+\n+import org.zeroturnaround.process.PidProcess;\n+import org.zeroturnaround.process.Processes;\n+import org.zeroturnaround.process.WindowsProcess;\n+\n+import java.io.IOException;\n+\n+public class WindowsPlatform extends Platform {\n+    @Override\n+    public void killProcessAndChildren(Process process, boolean force) throws IOException, InterruptedException {\n+        PidProcess pp = Processes.newPidProcess(process);\n+        ((WindowsProcess) pp).setIncludeChildren(true);\n+        ((WindowsProcess) pp).setGracefulDestroyEnabled(true);\n+\n+        pp.destroy(force);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1acc061f44c43a2a2fda1a5f3e7b2e94bc20cf0a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY5NDEzMA==", "bodyText": "It is the same thing. destroyGracefully calls destroy(false) and destroyForcefully calls destroy(true). Just simplifying.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270#discussion_r437694130", "createdAt": "2020-06-09T20:20:10Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/util/platforms/WindowsPlatform.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.platforms;\n+\n+import org.zeroturnaround.process.PidProcess;\n+import org.zeroturnaround.process.Processes;\n+import org.zeroturnaround.process.WindowsProcess;\n+\n+import java.io.IOException;\n+\n+public class WindowsPlatform extends Platform {\n+    @Override\n+    public void killProcessAndChildren(Process process, boolean force) throws IOException, InterruptedException {\n+        PidProcess pp = Processes.newPidProcess(process);\n+        ((WindowsProcess) pp).setIncludeChildren(true);\n+        ((WindowsProcess) pp).setGracefulDestroyEnabled(true);\n+\n+        pp.destroy(force);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY5MzUwMg=="}, "originalCommit": {"oid": "1acc061f44c43a2a2fda1a5f3e7b2e94bc20cf0a"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4769, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}