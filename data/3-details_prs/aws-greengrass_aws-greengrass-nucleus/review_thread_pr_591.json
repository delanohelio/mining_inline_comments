{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMjI2MzE4", "number": 591, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjozMTozOFrOE0dClg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDowOToyOVrOE0iGmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDM3MjA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjozMTozOFrOHsMCww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToxMzowMVrOHsSMSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5NjcwNw==", "bodyText": "configuration, not parameter", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516096707", "createdAt": "2020-11-02T16:31:38Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -58,6 +69,7 @@\n @NotThreadSafe\n public class BootstrapManager implements Iterator<BootstrapTaskStatus>  {\n     private static final String COMPONENT_NAME_LOG_KEY_NAME = \"componentName\";\n+    private static final String RESTART_REQUIRED_MESSAGE = \"Restart required due to parameter change\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "582daa84e513f6d0379526f8fe689b29cf73e4f2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE5NzQ1MQ==", "bodyText": "Updated", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516197451", "createdAt": "2020-11-02T19:13:01Z", "author": {"login": "tomnagy-aws"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -58,6 +69,7 @@\n @NotThreadSafe\n public class BootstrapManager implements Iterator<BootstrapTaskStatus>  {\n     private static final String COMPONENT_NAME_LOG_KEY_NAME = \"componentName\";\n+    private static final String RESTART_REQUIRED_MESSAGE = \"Restart required due to parameter change\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5NjcwNw=="}, "originalCommit": {"oid": "582daa84e513f6d0379526f8fe689b29cf73e4f2"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDM4MDQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjozMzoyMlrOHsMH-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToxMzowN1rOHsSMcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5ODA0MA==", "bodyText": "don't concat, just use the no proxy key.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516098040", "createdAt": "2020-11-02T16:33:22Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -127,10 +139,101 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig)\n         return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n     }\n \n+    private Map<String, Object> getNucleusParametersFromDeploymentConfig(Map<String, Object> newConfig) {\n+        Map<String, Object> services = (Map<String, Object>) newConfig.get(SERVICES_NAMESPACE_TOPIC);\n+        if (services == null) {\n+            return null;\n+        }\n+        Map<String, Object> nucleus = (Map<String, Object>) services.get(DEFAULT_NUCLEUS_COMPONENT_NAME);\n+        if (nucleus == null) {\n+            return null;\n+        }\n+        return (Map<String, Object>) nucleus.get(PARAMETERS_CONFIG_KEY);\n+    }\n+\n+    private boolean iotRoleAliasHasChanged(Map<String, Object> newNucleusParameters,\n+                                           DeviceConfiguration currentDeviceConfiguration) {\n+        String newIotRoleAlias = Coerce.toString(newNucleusParameters.get(IOT_ROLE_ALIAS_TOPIC));\n+        String currentIotRoleAlias = Coerce.toString(currentDeviceConfiguration.getIotRoleAlias());\n+\n+        if (Utils.stringHasChanged(newIotRoleAlias, currentIotRoleAlias)) {\n+            logger.atInfo().kv(IOT_ROLE_ALIAS_TOPIC, newIotRoleAlias).log(RESTART_REQUIRED_MESSAGE);\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    private boolean networkProxyIsCurrentlyUsed(DeviceConfiguration currentDeviceConfiguration) {\n+        return Utils.isNotEmpty(currentDeviceConfiguration.getProxyUrl());\n+    }\n+\n+    private boolean networkProxyHasChanged(Map<String, Object> newNucleusParameters,\n+                                           DeviceConfiguration currentDeviceConfiguration) {\n+        Map<String, Object> newNetworkProxy =\n+                (Map<String, Object>) newNucleusParameters.get(DEVICE_NETWORK_PROXY_NAMESPACE);\n+        if (newNetworkProxy == null) {\n+            return false;\n+        }\n+\n+        String newNoProxyAddresses = Coerce.toString(newNetworkProxy.get(DEVICE_PARAM_NO_PROXY_ADDRESSES));\n+        String currentNoProxyAddresses = Coerce.toString(currentDeviceConfiguration.getNoProxyAddresses());\n+        if (Utils.stringHasChanged(newNoProxyAddresses, currentNoProxyAddresses)) {\n+            logger.atInfo().kv(DEVICE_NETWORK_PROXY_NAMESPACE.concat(\".\").concat(DEVICE_PARAM_NO_PROXY_ADDRESSES),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "582daa84e513f6d0379526f8fe689b29cf73e4f2"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE5NzQ5MQ==", "bodyText": "Done", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516197491", "createdAt": "2020-11-02T19:13:07Z", "author": {"login": "tomnagy-aws"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -127,10 +139,101 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig)\n         return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n     }\n \n+    private Map<String, Object> getNucleusParametersFromDeploymentConfig(Map<String, Object> newConfig) {\n+        Map<String, Object> services = (Map<String, Object>) newConfig.get(SERVICES_NAMESPACE_TOPIC);\n+        if (services == null) {\n+            return null;\n+        }\n+        Map<String, Object> nucleus = (Map<String, Object>) services.get(DEFAULT_NUCLEUS_COMPONENT_NAME);\n+        if (nucleus == null) {\n+            return null;\n+        }\n+        return (Map<String, Object>) nucleus.get(PARAMETERS_CONFIG_KEY);\n+    }\n+\n+    private boolean iotRoleAliasHasChanged(Map<String, Object> newNucleusParameters,\n+                                           DeviceConfiguration currentDeviceConfiguration) {\n+        String newIotRoleAlias = Coerce.toString(newNucleusParameters.get(IOT_ROLE_ALIAS_TOPIC));\n+        String currentIotRoleAlias = Coerce.toString(currentDeviceConfiguration.getIotRoleAlias());\n+\n+        if (Utils.stringHasChanged(newIotRoleAlias, currentIotRoleAlias)) {\n+            logger.atInfo().kv(IOT_ROLE_ALIAS_TOPIC, newIotRoleAlias).log(RESTART_REQUIRED_MESSAGE);\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    private boolean networkProxyIsCurrentlyUsed(DeviceConfiguration currentDeviceConfiguration) {\n+        return Utils.isNotEmpty(currentDeviceConfiguration.getProxyUrl());\n+    }\n+\n+    private boolean networkProxyHasChanged(Map<String, Object> newNucleusParameters,\n+                                           DeviceConfiguration currentDeviceConfiguration) {\n+        Map<String, Object> newNetworkProxy =\n+                (Map<String, Object>) newNucleusParameters.get(DEVICE_NETWORK_PROXY_NAMESPACE);\n+        if (newNetworkProxy == null) {\n+            return false;\n+        }\n+\n+        String newNoProxyAddresses = Coerce.toString(newNetworkProxy.get(DEVICE_PARAM_NO_PROXY_ADDRESSES));\n+        String currentNoProxyAddresses = Coerce.toString(currentDeviceConfiguration.getNoProxyAddresses());\n+        if (Utils.stringHasChanged(newNoProxyAddresses, currentNoProxyAddresses)) {\n+            logger.atInfo().kv(DEVICE_NETWORK_PROXY_NAMESPACE.concat(\".\").concat(DEVICE_PARAM_NO_PROXY_ADDRESSES),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5ODA0MA=="}, "originalCommit": {"oid": "582daa84e513f6d0379526f8fe689b29cf73e4f2"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDM4OTgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjozNToxOFrOHsMNmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToxNDowNlrOHsSOSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5OTQ4Mw==", "bodyText": "This isn't correct because it could have a different name, you'd need to search for the component by type.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516099483", "createdAt": "2020-11-02T16:35:18Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -127,10 +139,101 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig)\n         return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n     }\n \n+    private Map<String, Object> getNucleusParametersFromDeploymentConfig(Map<String, Object> newConfig) {\n+        Map<String, Object> services = (Map<String, Object>) newConfig.get(SERVICES_NAMESPACE_TOPIC);\n+        if (services == null) {\n+            return null;\n+        }\n+        Map<String, Object> nucleus = (Map<String, Object>) services.get(DEFAULT_NUCLEUS_COMPONENT_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "582daa84e513f6d0379526f8fe689b29cf73e4f2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE5Nzk2Mg==", "bodyText": "Using getProposedNucleusConfig which searches for ComponentType.NUCLEUS", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516197962", "createdAt": "2020-11-02T19:14:06Z", "author": {"login": "tomnagy-aws"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -127,10 +139,101 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig)\n         return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n     }\n \n+    private Map<String, Object> getNucleusParametersFromDeploymentConfig(Map<String, Object> newConfig) {\n+        Map<String, Object> services = (Map<String, Object>) newConfig.get(SERVICES_NAMESPACE_TOPIC);\n+        if (services == null) {\n+            return null;\n+        }\n+        Map<String, Object> nucleus = (Map<String, Object>) services.get(DEFAULT_NUCLEUS_COMPONENT_NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5OTQ4Mw=="}, "originalCommit": {"oid": "582daa84e513f6d0379526f8fe689b29cf73e4f2"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTA0NTM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToyMjowNlrOHsSdeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToyOTo0OFrOHsStfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMTg0OQ==", "bodyText": "remove all the concats everywhere", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516201849", "createdAt": "2020-11-02T19:22:06Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -127,10 +136,62 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig)\n         return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n     }\n \n+    private boolean networkProxyHasChanged(Map<String, Object> newNucleusParameters,\n+                                           DeviceConfiguration currentDeviceConfiguration) {\n+        Map<String, Object> newNetworkProxy =\n+                (Map<String, Object>) newNucleusParameters.get(DEVICE_NETWORK_PROXY_NAMESPACE);\n+        if (newNetworkProxy == null) {\n+            return false;\n+        }\n+\n+        String newNoProxyAddresses = Coerce.toString(newNetworkProxy.get(DEVICE_PARAM_NO_PROXY_ADDRESSES));\n+        String currentNoProxyAddresses = Coerce.toString(currentDeviceConfiguration.getNoProxyAddresses());\n+        if (Utils.stringHasChanged(newNoProxyAddresses, currentNoProxyAddresses)) {\n+            logger.atInfo().kv(DEVICE_PARAM_NO_PROXY_ADDRESSES, newNoProxyAddresses).log(RESTART_REQUIRED_MESSAGE);\n+            return true;\n+        }\n+\n+        Map<String, Object> newProxy = (Map<String, Object>) newNetworkProxy.get(DEVICE_PROXY_NAMESPACE);\n+        String newProxyUrl = Coerce.toString(newProxy.get(DEVICE_PARAM_PROXY_URL));\n+        String currentProxyUrl = Coerce.toString(currentDeviceConfiguration.getProxyUrl());\n+        if (Utils.stringHasChanged(newProxyUrl, currentProxyUrl)) {\n+            logger.atInfo().kv(DEVICE_NETWORK_PROXY_NAMESPACE.concat(\".\").concat(DEVICE_PROXY_NAMESPACE).concat(\".\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527fbdaeb3bfae8a143191230a2c12bc2b4fd6e5"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwNTk0OQ==", "bodyText": "done", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516205949", "createdAt": "2020-11-02T19:29:48Z", "author": {"login": "tomnagy-aws"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -127,10 +136,62 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig)\n         return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n     }\n \n+    private boolean networkProxyHasChanged(Map<String, Object> newNucleusParameters,\n+                                           DeviceConfiguration currentDeviceConfiguration) {\n+        Map<String, Object> newNetworkProxy =\n+                (Map<String, Object>) newNucleusParameters.get(DEVICE_NETWORK_PROXY_NAMESPACE);\n+        if (newNetworkProxy == null) {\n+            return false;\n+        }\n+\n+        String newNoProxyAddresses = Coerce.toString(newNetworkProxy.get(DEVICE_PARAM_NO_PROXY_ADDRESSES));\n+        String currentNoProxyAddresses = Coerce.toString(currentDeviceConfiguration.getNoProxyAddresses());\n+        if (Utils.stringHasChanged(newNoProxyAddresses, currentNoProxyAddresses)) {\n+            logger.atInfo().kv(DEVICE_PARAM_NO_PROXY_ADDRESSES, newNoProxyAddresses).log(RESTART_REQUIRED_MESSAGE);\n+            return true;\n+        }\n+\n+        Map<String, Object> newProxy = (Map<String, Object>) newNetworkProxy.get(DEVICE_PROXY_NAMESPACE);\n+        String newProxyUrl = Coerce.toString(newProxy.get(DEVICE_PARAM_PROXY_URL));\n+        String currentProxyUrl = Coerce.toString(currentDeviceConfiguration.getProxyUrl());\n+        if (Utils.stringHasChanged(newProxyUrl, currentProxyUrl)) {\n+            logger.atInfo().kv(DEVICE_NETWORK_PROXY_NAMESPACE.concat(\".\").concat(DEVICE_PROXY_NAMESPACE).concat(\".\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMTg0OQ=="}, "originalCommit": {"oid": "527fbdaeb3bfae8a143191230a2c12bc2b4fd6e5"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTE3ODEwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDowMjowNVrOHsTueg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDo0OTo1NVrOHsVJsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyMjU4Ng==", "bodyText": "Shouldn't this return true if the currentDeviceConfiguration has proxy settings? (in the null \"new\" case)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516222586", "createdAt": "2020-11-02T20:02:05Z", "author": {"login": "philcali"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -127,10 +136,59 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig)\n         return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n     }\n \n+    private boolean networkProxyHasChanged(Map<String, Object> newNucleusParameters,\n+                                           DeviceConfiguration currentDeviceConfiguration) {\n+        Map<String, Object> newNetworkProxy =\n+                (Map<String, Object>) newNucleusParameters.get(DEVICE_NETWORK_PROXY_NAMESPACE);\n+        if (newNetworkProxy == null) {\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6aab2bcbf73fcf0cff91b7fe17c48779105aa180"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0NTkzOQ==", "bodyText": "It should. Updated.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516245939", "createdAt": "2020-11-02T20:49:55Z", "author": {"login": "tomnagy-aws"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -127,10 +136,59 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig)\n         return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n     }\n \n+    private boolean networkProxyHasChanged(Map<String, Object> newNucleusParameters,\n+                                           DeviceConfiguration currentDeviceConfiguration) {\n+        Map<String, Object> newNetworkProxy =\n+                (Map<String, Object>) newNucleusParameters.get(DEVICE_NETWORK_PROXY_NAMESPACE);\n+        if (newNetworkProxy == null) {\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyMjU4Ng=="}, "originalCommit": {"oid": "6aab2bcbf73fcf0cff91b7fe17c48779105aa180"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTE5MTg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/util/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDowNjoyNVrOHsT23A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDo1MDoxMVrOHsVKOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNDczMg==", "bodyText": "Doesn't case matter? philcali != Philcali for things like auth, right?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516224732", "createdAt": "2020-11-02T20:06:25Z", "author": {"login": "philcali"}, "path": "src/main/java/com/aws/greengrass/util/Utils.java", "diffHunk": "@@ -89,6 +89,23 @@ public static Throwable flush(Object flushable) {\n         }\n     }\n \n+    /**\n+     * Returns true if the two strings are different, including null.\n+     *\n+     * @param oldValue first string\n+     * @param newValue second string\n+     * @return true if the two strings are not equal\n+     */\n+    public static boolean stringHasChanged(String oldValue, String newValue) {\n+        if (oldValue == null && newValue == null) {\n+            return false;\n+        }\n+        if ((oldValue == null) != (newValue == null)) {\n+            return true;\n+        }\n+        return !oldValue.equalsIgnoreCase(newValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6aab2bcbf73fcf0cff91b7fe17c48779105aa180"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0NjA3Mg==", "bodyText": "Yup. Changed to just .equals()", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516246072", "createdAt": "2020-11-02T20:50:11Z", "author": {"login": "tomnagy-aws"}, "path": "src/main/java/com/aws/greengrass/util/Utils.java", "diffHunk": "@@ -89,6 +89,23 @@ public static Throwable flush(Object flushable) {\n         }\n     }\n \n+    /**\n+     * Returns true if the two strings are different, including null.\n+     *\n+     * @param oldValue first string\n+     * @param newValue second string\n+     * @return true if the two strings are not equal\n+     */\n+    public static boolean stringHasChanged(String oldValue, String newValue) {\n+        if (oldValue == null && newValue == null) {\n+            return false;\n+        }\n+        if ((oldValue == null) != (newValue == null)) {\n+            return true;\n+        }\n+        return !oldValue.equalsIgnoreCase(newValue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNDczMg=="}, "originalCommit": {"oid": "6aab2bcbf73fcf0cff91b7fe17c48779105aa180"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTIwMTU1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/greengrass/util/UtilsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDowOToyOVrOHsT81Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDo1MDoyM1rOHsVKlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNjI2MQ==", "bodyText": "assertTrue(Utils.stringHasChanged(\"tEsT1\", \"test1\"))", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516226261", "createdAt": "2020-11-02T20:09:29Z", "author": {"login": "philcali"}, "path": "src/test/java/com/aws/greengrass/util/UtilsTest.java", "diffHunk": "@@ -133,4 +135,17 @@ void testInverseMap() {\n         assertThat(result.get(1), containsInAnyOrder(\"a\", \"c\"));\n         assertThat(result.get(2), containsInAnyOrder(\"b\"));\n     }\n+\n+    @Test\n+    void testStringHasChanged() {\n+        assertTrue(Utils.stringHasChanged(\"test1\", \"test2\"));\n+        assertTrue(Utils.stringHasChanged(\"test1\", null));\n+        assertTrue(Utils.stringHasChanged(null, \"test2\"));\n+        assertTrue(Utils.stringHasChanged(\"test1\", \"\"));\n+        assertTrue(Utils.stringHasChanged(\"\", \"test2\"));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6aab2bcbf73fcf0cff91b7fe17c48779105aa180"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0NjE2Ng==", "bodyText": "Added.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/591#discussion_r516246166", "createdAt": "2020-11-02T20:50:23Z", "author": {"login": "tomnagy-aws"}, "path": "src/test/java/com/aws/greengrass/util/UtilsTest.java", "diffHunk": "@@ -133,4 +135,17 @@ void testInverseMap() {\n         assertThat(result.get(1), containsInAnyOrder(\"a\", \"c\"));\n         assertThat(result.get(2), containsInAnyOrder(\"b\"));\n     }\n+\n+    @Test\n+    void testStringHasChanged() {\n+        assertTrue(Utils.stringHasChanged(\"test1\", \"test2\"));\n+        assertTrue(Utils.stringHasChanged(\"test1\", null));\n+        assertTrue(Utils.stringHasChanged(null, \"test2\"));\n+        assertTrue(Utils.stringHasChanged(\"test1\", \"\"));\n+        assertTrue(Utils.stringHasChanged(\"\", \"test2\"));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNjI2MQ=="}, "originalCommit": {"oid": "6aab2bcbf73fcf0cff91b7fe17c48779105aa180"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 431, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}