{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTc0Njgx", "number": 283, "title": "Group deployments", "bodyText": "Issue #, if available:\nSupport multiple group deployments\nDescription of changes:\nDeployment service now persists information of the group and the root packages for that group. Any deployment outside of a ThingGroup goes to DEFAULT group.\nE2E test cases are added\nChanges in LocalDeploymentListener to support group name will be made in separate PR\nMore unit tests in individual classes for multi group path needs to be added. It will be done in separate PR.\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-06-17T03:10:49Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283", "merged": true, "mergeCommit": {"oid": "60d913043eafc095dfe87669c221c98fab6f40f6"}, "closed": true, "closedAt": "2020-07-02T00:31:21Z", "author": {"login": "abanthiy"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsBkdsgFqTQzMjAzODU4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwzm91AFqTQ0MTI3MzE2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDM4NTgy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-432038582", "createdAt": "2020-06-17T03:48:28Z", "commit": {"oid": "7a23fe2a07562f36fa3d8d064bb94dc7fb98164a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMzo0ODoyOFrOGk0o1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMzo0ODoyOFrOGk0o1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2NDM0MA==", "bodyText": "do we actually need the kernel, or just the config? Looks like maybe just the config.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r441264340", "createdAt": "2020-06-17T03:48:28Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -45,7 +50,17 @@ public DeploymentResult call()\n \n             // TODO: DA compute list of all root level packages by looking across root level packages\n             // of all groups, when multi group support is added.\n+\n             List<String> rootPackages = new ArrayList<>(deploymentDocument.getRootPackages());\n+            Topics groupsToRootPackages = kernel.getConfig().lookupTopics(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a23fe2a07562f36fa3d8d064bb94dc7fb98164a"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDQzNDg4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-432043488", "createdAt": "2020-06-17T04:05:27Z", "commit": {"oid": "7a23fe2a07562f36fa3d8d064bb94dc7fb98164a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNToyOFrOGk04Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNToyOFrOGk04Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODIyNw==", "bodyText": "use StandardCharsets", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r441268227", "createdAt": "2020-06-17T04:05:28Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/deployment/DeploymentServiceTest.java", "diffHunk": "@@ -17,6 +20,7 @@\n import com.aws.iot.evergreen.packagemanager.PackageManager;\n import com.aws.iot.evergreen.testcommons.testutilities.EGExtension;\n import com.aws.iot.evergreen.testcommons.testutilities.EGServiceTestUtil;\n+import org.apache.commons.codec.Charsets;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a23fe2a07562f36fa3d8d064bb94dc7fb98164a"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a23fe2a07562f36fa3d8d064bb94dc7fb98164a", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7a23fe2a07562f36fa3d8d064bb94dc7fb98164a", "committedDate": "2020-06-17T01:42:05Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "706cf535b173652917a0b3d4971ea21470d8f172", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/706cf535b173652917a0b3d4971ea21470d8f172", "committedDate": "2020-06-17T04:56:40Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "706cf535b173652917a0b3d4971ea21470d8f172", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/706cf535b173652917a0b3d4971ea21470d8f172", "committedDate": "2020-06-17T04:56:40Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "b3d9784b814585cd31811fa935d69d30b20a9ca5", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b3d9784b814585cd31811fa935d69d30b20a9ca5", "committedDate": "2020-06-17T05:16:47Z", "message": "Adding multiple group support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNTY2MTg2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-433566186", "createdAt": "2020-06-18T19:02:34Z", "commit": {"oid": "b3d9784b814585cd31811fa935d69d30b20a9ca5"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOTowMjozNFrOGl8ZgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOToxMDozNFrOGl8pCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0MDA2NQ==", "bodyText": "All comments need to be updated.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r442440065", "createdAt": "2020-06-18T19:02:34Z", "author": {"login": "hui-yang"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/MultipleGroupsDeploymentE2ETest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import com.amazonaws.services.greengrassfleetconfiguration.model.FailureHandlingPolicy;\n+import com.amazonaws.services.greengrassfleetconfiguration.model.PackageMetaData;\n+import com.amazonaws.services.greengrassfleetconfiguration.model.PublishConfigurationResult;\n+import com.amazonaws.services.greengrassfleetconfiguration.model.SetConfigurationRequest;\n+import com.aws.iot.evergreen.config.Topics;\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.DeploymentService;\n+import com.aws.iot.evergreen.integrationtests.e2e.BaseE2ETestCase;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.IotJobsUtils;\n+import com.aws.iot.evergreen.testcommons.testutilities.EGExtension;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.Timeout;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import software.amazon.awssdk.services.iot.model.CreateThingGroupResponse;\n+import software.amazon.awssdk.services.iot.model.JobExecutionStatus;\n+\n+import java.time.Duration;\n+import java.util.concurrent.TimeUnit;\n+\n+import static com.github.grantwest.eventually.EventuallyLambdaMatcher.eventuallyEval;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+@ExtendWith(EGExtension.class)\n+@Tag(\"E2E\")\n+class MultipleGroupsDeploymentE2ETest extends BaseE2ETestCase {\n+\n+    private final CreateThingGroupResponse secondThingGroupResponse;\n+\n+    public MultipleGroupsDeploymentE2ETest() {\n+        super();\n+        secondThingGroupResponse = IotJobsUtils.createThingGroupAndAddThing(iotClient, thingInfo);\n+    }\n+\n+    @AfterEach\n+    void afterEach() {\n+        if (kernel != null) {\n+            kernel.shutdown();\n+        }\n+        // Cleanup all IoT thing resources we created\n+        cleanup();\n+        IotJobsUtils.cleanThingGroup(iotClient, secondThingGroupResponse.thingGroupName());\n+    }\n+\n+    @BeforeEach\n+    void launchKernel() throws Exception {\n+        initKernel();\n+        kernel.launch();\n+\n+        // TODO: Without this sleep, DeploymentService sometimes is not able to pick up new IoT job created here,\n+        // causing these tests to fail. There may be a race condition between DeploymentService startup logic and\n+        // creating new IoT job here.\n+        Thread.sleep(10_000);\n+    }\n+\n+    @Timeout(value = 10, unit = TimeUnit.MINUTES)\n+    @Test\n+    void GIVEN_kernel_running_with_deployed_services_WHEN_deployment_removes_packages_THEN_services_should_be_stopped_and_job_is_successful() throws Exception {\n+\n+        // First Deployment to have some services running in Kernel which can be removed later", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3d9784b814585cd31811fa935d69d30b20a9ca5"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0MjE5NA==", "bodyText": "Rename packages to components.\nIs this only persisting component name? What about version requirements (instead of the device resolved version)?\nIn fleet config, customers can specify version ranges for non-root components as well. Do we want to persist those components with version requirements as well?\nI remember we also want to keep a reference count for non-root components, so we know when to clean up unused dependencies", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r442442194", "createdAt": "2020-06-18T19:06:44Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -43,10 +46,14 @@\n import javax.inject.Inject;\n import javax.inject.Named;\n \n+import static com.aws.iot.evergreen.deployment.converter.DeploymentDocumentConverter.DEFAULT_GROUP_NAME;\n+import static com.aws.iot.evergreen.packagemanager.KernelConfigResolver.VERSION_CONFIG_KEY;\n+\n @ImplementsService(name = \"DeploymentService\", autostart = true)\n public class DeploymentService extends EvergreenService {\n \n     public static final String DEPLOYMENT_SERVICE_TOPICS = \"DeploymentService\";\n+    public static final String GROUP_TO_ROOT_PACKAGES_TOPICS = \"GroupToRootPackages\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3d9784b814585cd31811fa935d69d30b20a9ca5"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0NDA0MA==", "bodyText": "I believe either this method or public DeploymentDocument(FleetConfiguration config) should be sufficient. Consolidate to one?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r442444040", "createdAt": "2020-06-18T19:10:34Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/converter/DeploymentDocumentConverter.java", "diffHunk": "@@ -58,7 +64,46 @@ public static DeploymentDocument convertFromLocalOverrideRequestAndRoot(LocalOve\n \n         return DeploymentDocument.builder().timestamp(localOverrideRequest.getRequestTimestamp())\n                 .deploymentId(localOverrideRequest.getRequestId()).rootPackages(rootPackages)\n-                .deploymentPackageConfigurationList(packageConfigurations).build();\n+                .deploymentPackageConfigurationList(packageConfigurations)\n+                .groupName(StringUtils.isEmpty(localOverrideRequest.getGroupName()) ? DEFAULT_GROUP_NAME\n+                        : localOverrideRequest.getGroupName()).build();\n+    }\n+\n+    /**\n+     * Convert {@link FleetConfiguration} to a {@link DeploymentDocument}.\n+     * @param config config received from Iot cloud\n+     * @return equivalent {@link DeploymentDocument}\n+     */\n+    public static DeploymentDocument convertFromFleetConfiguration(FleetConfiguration config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3d9784b814585cd31811fa935d69d30b20a9ca5"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3d9784b814585cd31811fa935d69d30b20a9ca5", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b3d9784b814585cd31811fa935d69d30b20a9ca5", "committedDate": "2020-06-17T05:16:47Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "e1ebdecc7b2d2217f58ab303f1f13d6a18d7e996", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e1ebdecc7b2d2217f58ab303f1f13d6a18d7e996", "committedDate": "2020-06-19T21:47:43Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1ebdecc7b2d2217f58ab303f1f13d6a18d7e996", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e1ebdecc7b2d2217f58ab303f1f13d6a18d7e996", "committedDate": "2020-06-19T21:47:43Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "b14635e6b0fd7f7003ae309bbb747ec520bae7f9", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b14635e6b0fd7f7003ae309bbb747ec520bae7f9", "committedDate": "2020-06-19T21:54:25Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b14635e6b0fd7f7003ae309bbb747ec520bae7f9", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b14635e6b0fd7f7003ae309bbb747ec520bae7f9", "committedDate": "2020-06-19T21:54:25Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "802640c3a19c3c8ef2e5942e39a69b44cb303ae5", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/802640c3a19c3c8ef2e5942e39a69b44cb303ae5", "committedDate": "2020-06-20T02:03:43Z", "message": "Adding multiple group support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MjIxNTcw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-435221570", "createdAt": "2020-06-22T19:44:15Z", "commit": {"oid": "802640c3a19c3c8ef2e5942e39a69b44cb303ae5"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTo0NDoxNVrOGnOhFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTo1NjozN1rOGnO3iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4NTQ5NA==", "bodyText": "Should we compare timestamp here?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r443785494", "createdAt": "2020-06-22T19:44:15Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -260,6 +268,24 @@ private void createNewDeployment(Deployment deployment) {\n             logger.atInfo().kv(\"document\", deployment.getDeploymentDocument())\n                     .log(\"Received deployment document in queue\");\n             deploymentDocument = parseAndValidateJobDocument(deployment);\n+            Topics groupToRootPackages = config.lookupTopics(GROUP_TO_ROOT_COMPONENTS_TOPICS);\n+            logger.atInfo().log(\"Group to root components: \" + groupToRootPackages.toPOJO().toString());\n+            //clean up any package info for the group in deployment document\n+            Topics deploymentGroupTopics = groupToRootPackages.findTopics(deploymentDocument.getGroupName());\n+            if (deploymentGroupTopics != null) {\n+                logger.atInfo().log(\"Removing the node from group to root packages mapping\");\n+                groupToRootPackages.remove(deploymentGroupTopics);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "802640c3a19c3c8ef2e5942e39a69b44cb303ae5"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4NjcwNw==", "bodyText": "For non-root components, if customers specify version requirements in deployments, should we also persist that information somewhere?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r443786707", "createdAt": "2020-06-22T19:46:52Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -260,6 +268,24 @@ private void createNewDeployment(Deployment deployment) {\n             logger.atInfo().kv(\"document\", deployment.getDeploymentDocument())\n                     .log(\"Received deployment document in queue\");\n             deploymentDocument = parseAndValidateJobDocument(deployment);\n+            Topics groupToRootPackages = config.lookupTopics(GROUP_TO_ROOT_COMPONENTS_TOPICS);\n+            logger.atInfo().log(\"Group to root components: \" + groupToRootPackages.toPOJO().toString());\n+            //clean up any package info for the group in deployment document\n+            Topics deploymentGroupTopics = groupToRootPackages.findTopics(deploymentDocument.getGroupName());\n+            if (deploymentGroupTopics != null) {\n+                logger.atInfo().log(\"Removing the node from group to root packages mapping\");\n+                groupToRootPackages.remove(deploymentGroupTopics);\n+            }\n+\n+            Topics thisGroupsRootPackages = groupToRootPackages.lookupTopics(deploymentDocument.getGroupName());\n+            deploymentDocument.getDeploymentPackageConfigurationList().stream().forEach(pkgConfig -> {\n+                if (pkgConfig.isRootComponent()) {\n+                    Topic topic = thisGroupsRootPackages.createLeafChild(pkgConfig.getPackageName());\n+                    Map<String, Object> pkgDetails = new HashMap<>();\n+                    pkgDetails.put(\"version\", pkgConfig.getResolvedVersion());\n+                    topic.withValue(pkgDetails);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "802640c3a19c3c8ef2e5942e39a69b44cb303ae5"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4OTg3OQ==", "bodyText": "Can we change the interface a bit so that we don't have to resolve rootPackages twice?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r443789879", "createdAt": "2020-06-22T19:53:55Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -45,16 +49,26 @@ public DeploymentResult call()\n \n             // TODO: DA compute list of all root level packages by looking across root level packages\n             // of all groups, when multi group support is added.\n-            List<String> rootPackages = new ArrayList<>(deploymentDocument.getRootPackages());\n+\n+            Set<String> rootPackages = new HashSet<>();\n+\n+            Topics groupsToRootPackages =\n+                    deploymentServiceConfig.lookupTopics(DeploymentService.GROUP_TO_ROOT_COMPONENTS_TOPICS);\n+            groupsToRootPackages.iterator().forEachRemaining(node -> {\n+                Topics groupTopics = (Topics) node;\n+                groupTopics.deepForEachTopic(pkgTopic -> {\n+                    rootPackages.add(pkgTopic.getName());\n+                });\n+            });\n \n             List<PackageIdentifier> desiredPackages =\n-                    dependencyResolver.resolveDependencies(deploymentDocument, rootPackages);\n+                    dependencyResolver.resolveDependencies(deploymentDocument, groupsToRootPackages);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "802640c3a19c3c8ef2e5942e39a69b44cb303ae5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MTI0MQ==", "bodyText": "What is this used for?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r443791241", "createdAt": "2020-06-22T19:56:37Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentPackageConfiguration.java", "diffHunk": "@@ -29,6 +30,9 @@\n     @JsonProperty(\"Name\")\n     private String packageName;\n \n+    @JsonIgnore\n+    private boolean rootComponent;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "802640c3a19c3c8ef2e5942e39a69b44cb303ae5"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "802640c3a19c3c8ef2e5942e39a69b44cb303ae5", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/802640c3a19c3c8ef2e5942e39a69b44cb303ae5", "committedDate": "2020-06-20T02:03:43Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "27830bd9003b332d320e654a28d7c9bcdc34ce88", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/27830bd9003b332d320e654a28d7c9bcdc34ce88", "committedDate": "2020-06-23T06:34:37Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27830bd9003b332d320e654a28d7c9bcdc34ce88", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/27830bd9003b332d320e654a28d7c9bcdc34ce88", "committedDate": "2020-06-23T06:34:37Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "0f6db1dbc2027c70ea3091f0c83d21d321ba8062", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0f6db1dbc2027c70ea3091f0c83d21d321ba8062", "committedDate": "2020-06-23T07:00:05Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f6db1dbc2027c70ea3091f0c83d21d321ba8062", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0f6db1dbc2027c70ea3091f0c83d21d321ba8062", "committedDate": "2020-06-23T07:00:05Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "457e4f6530fef4ed49eb52e1c745a6bca64a3b4a", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/457e4f6530fef4ed49eb52e1c745a6bca64a3b4a", "committedDate": "2020-06-24T08:16:14Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "457e4f6530fef4ed49eb52e1c745a6bca64a3b4a", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/457e4f6530fef4ed49eb52e1c745a6bca64a3b4a", "committedDate": "2020-06-24T08:16:14Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "32a2157ce9878686f79e0c4a8c44a85e026e96a2", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/32a2157ce9878686f79e0c4a8c44a85e026e96a2", "committedDate": "2020-06-24T08:20:17Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32a2157ce9878686f79e0c4a8c44a85e026e96a2", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/32a2157ce9878686f79e0c4a8c44a85e026e96a2", "committedDate": "2020-06-24T08:20:17Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "f7b5d9011e9b402b70fe95c2d1e3f34b7c920aef", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f7b5d9011e9b402b70fe95c2d1e3f34b7c920aef", "committedDate": "2020-06-24T08:39:28Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7b5d9011e9b402b70fe95c2d1e3f34b7c920aef", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f7b5d9011e9b402b70fe95c2d1e3f34b7c920aef", "committedDate": "2020-06-24T08:39:28Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e7eb5c4d237fbf1e98e9c004f5736bccbe555a37", "committedDate": "2020-06-24T17:28:25Z", "message": "Adding multiple group support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODgzOTM1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-436883935", "createdAt": "2020-06-24T18:02:54Z", "commit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODowMjo1NFrOGodPgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo0Mjo0MFrOGoekew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3NTMzMQ==", "bodyText": "Is this context used?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r445075331", "createdAt": "2020-06-24T18:02:54Z", "author": {"login": "hui-yang"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "diffHunk": "@@ -108,11 +114,14 @@ static void setupLogger() {\n     }\n \n     @BeforeAll\n-    static void setupKernel() throws IOException {\n+    static void setupKernel(ExtensionContext context) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA4MzY2MQ==", "bodyText": "Duplicate to Ln 254-260. Can we reuse the lambda?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r445083661", "createdAt": "2020-06-24T18:17:53Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -257,6 +261,23 @@ public void remove(Node n) {\n         });\n     }\n \n+    /**\n+     * Remove a node from this node's children and wait for removal to finish.\n+     *\n+     * @param n node to remove\n+     */\n+    public void removeAndWait(Node n) {\n+        context.runOnPublishQueueAndWait(() -> {\n+            if (!children.remove(n.getName(), n)) {\n+                logger.atError(\"config-node-child-remove-error\").kv(\"thisNode\", toString())\n+                        .kv(\"childNode\", n.getName()).log();\n+                return;\n+            }\n+            n.fire(WhatHappened.removed);\n+            this.childChanged(WhatHappened.childRemoved, n);\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA4NjUxMg==", "bodyText": "It seems to me what's needed here is to replace the entire container node of a group. Is this a workaround because that feature is not available in KernelConfig?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r445086512", "createdAt": "2020-06-24T18:23:03Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -201,6 +211,25 @@ private void finishCurrentDeployment() throws InterruptedException {\n                 Map<String, String> statusDetails = new HashMap<>();\n                 statusDetails.put(\"detailed-deployment-status\", deploymentStatus.name());\n                 if (deploymentStatus.equals(DeploymentResult.DeploymentStatus.SUCCESSFUL)) {\n+                    //Add the root packages of successful deployment to the configuration\n+                    DeploymentDocument deploymentDocument = currentDeploymentTaskMetadata.getDeploymentDocument();\n+                    Topics groupToRootPackages = config.lookupTopics(GROUP_TO_ROOT_COMPONENTS_TOPICS);\n+                    //clean up any package info for the group in deployment document\n+                    Topics deploymentGroupTopics = groupToRootPackages.lookupTopics(deploymentDocument.getGroupName());\n+                    deploymentGroupTopics.deepForEachTopic(t -> t.remove());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA4NzIwNg==", "bodyText": "Is this trying to be extensible when we need more information than version?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r445087206", "createdAt": "2020-06-24T18:24:15Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -201,6 +211,25 @@ private void finishCurrentDeployment() throws InterruptedException {\n                 Map<String, String> statusDetails = new HashMap<>();\n                 statusDetails.put(\"detailed-deployment-status\", deploymentStatus.name());\n                 if (deploymentStatus.equals(DeploymentResult.DeploymentStatus.SUCCESSFUL)) {\n+                    //Add the root packages of successful deployment to the configuration\n+                    DeploymentDocument deploymentDocument = currentDeploymentTaskMetadata.getDeploymentDocument();\n+                    Topics groupToRootPackages = config.lookupTopics(GROUP_TO_ROOT_COMPONENTS_TOPICS);\n+                    //clean up any package info for the group in deployment document\n+                    Topics deploymentGroupTopics = groupToRootPackages.lookupTopics(deploymentDocument.getGroupName());\n+                    deploymentGroupTopics.deepForEachTopic(t -> t.remove());\n+\n+                    deploymentDocument.getDeploymentPackageConfigurationList().stream().forEach(pkgConfig -> {\n+                        if (pkgConfig.isRootComponent()) {\n+                            Topic topic = deploymentGroupTopics.createLeafChild(pkgConfig.getPackageName());\n+                            Map<String, Object> pkgDetails = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA4OTU2NA==", "bodyText": "Do we really need to persist the information for failed deployments? What is the use case? If group1 failed in a bad state, do we want to support customers to deploy group2 on top of the bad configs?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r445089564", "createdAt": "2020-06-24T18:28:34Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -209,6 +238,9 @@ private void finishCurrentDeployment() throws InterruptedException {\n                     if (result.getFailureCause() != null) {\n                         statusDetails.put(\"deployment-failure-cause\", result.getFailureCause().toString());\n                     }\n+                    //TODO: Update the groupToRootPackages mapping in config for the case where there is no rollback\n+                    // and now the packages deployed for the current group are not the same as before starting\n+                    // deployment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5MzI0Mw==", "bodyText": "Ln 62-69, groupsToRootPackages is iterated once to get rootPackages, which is used by kernelConfigResolver.\nInside dependencyResolver, groupsToRootPackages is iterated again to get rootPackages and version.\nI meant we can maybe save one iteration if we change the args and/or return of dependencyResolver and/or kernelConfigResolver.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r445093243", "createdAt": "2020-06-24T18:35:32Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -45,16 +49,26 @@ public DeploymentResult call()\n \n             // TODO: DA compute list of all root level packages by looking across root level packages\n             // of all groups, when multi group support is added.\n-            List<String> rootPackages = new ArrayList<>(deploymentDocument.getRootPackages());\n+\n+            Set<String> rootPackages = new HashSet<>();\n+\n+            Topics groupsToRootPackages =\n+                    deploymentServiceConfig.lookupTopics(DeploymentService.GROUP_TO_ROOT_COMPONENTS_TOPICS);\n+            groupsToRootPackages.iterator().forEachRemaining(node -> {\n+                Topics groupTopics = (Topics) node;\n+                groupTopics.deepForEachTopic(pkgTopic -> {\n+                    rootPackages.add(pkgTopic.getName());\n+                });\n+            });\n \n             List<PackageIdentifier> desiredPackages =\n-                    dependencyResolver.resolveDependencies(deploymentDocument, rootPackages);\n+                    dependencyResolver.resolveDependencies(deploymentDocument, groupsToRootPackages);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4OTg3OQ=="}, "originalCommit": {"oid": "802640c3a19c3c8ef2e5942e39a69b44cb303ae5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5MzgxMw==", "bodyText": "I get your point but I don't see where this is used in code.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r445093813", "createdAt": "2020-06-24T18:36:35Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentPackageConfiguration.java", "diffHunk": "@@ -29,6 +29,9 @@\n     @JsonProperty(\"Name\")\n     private String packageName;\n \n+    @JsonProperty(\"RootComponent\")\n+    private boolean rootComponent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTQ5MQ==", "bodyText": "Why don't we combine the two logs?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r445095491", "createdAt": "2020-06-24T18:39:48Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/DependencyResolver.java", "diffHunk": "@@ -66,24 +68,42 @@\n         // the version constraints will also change accordingly. 3. The information also shows the complete dependency\n         // tree.\n         Map<String, Map<String, String>> packageNameToVersionConstraints = new HashMap<>();\n+        Set<String> rootPackagesToResolve = new LinkedHashSet<>();\n \n-        // List of root packages to be resolved\n-        Set<String> rootPackagesToResolve = new LinkedHashSet<>(newRootPackages);\n-\n-        // Get a list of package configurations with pinned versions\n+        // Get a list of all package configurations with version constraints in the deployment document\n         for (DeploymentPackageConfiguration dpc : document.getDeploymentPackageConfigurationList()) {\n             logger.atDebug().addKeyValue(PACKAGE_NAME_KEY, dpc.getPackageName())\n                     .addKeyValue(VERSION_KEY, dpc.getResolvedVersion()).log(\"Found package configuration\");\n             packageNameToVersionConstraints.putIfAbsent(dpc.getPackageName(), new HashMap<>());\n+\n+            // Only the group to package mapping before this deployment is guaranteed to be available, since config\n+            // updates happen in a separate thread.\n+            if (document.getRootPackages().contains(dpc.getPackageName())) {\n+                rootPackagesToResolve.add(dpc.getPackageName());\n+            }\n             packageNameToVersionConstraints.get(dpc.getPackageName())\n-                    .put(ROOT_REQUIREMENT_KEY, dpc.getResolvedVersion());\n+                    .put(document.getGroupName(), dpc.getResolvedVersion());\n         }\n \n-        // Merge the active root packages on the device\n-        mergeActiveRootPackages(rootPackagesToResolve, packageNameToVersionConstraints);\n-        logger.atInfo().setEventType(\"resolve-dependencies-start\").addKeyValue(\"rootPackages\", rootPackagesToResolve)\n-                .addKeyValue(\"versionConstraints\", packageNameToVersionConstraints).log();\n+        //Get package version constraints for root packages corresponding to other groups\n+        groupToRootPackagesDetails.iterator().forEachRemaining(node -> {\n+            Topics groupTopics = (Topics) node;\n+            String groupName = groupTopics.getName();\n+            if (!groupName.equals(document.getGroupName())) {\n+                groupTopics.deepForEachTopic(pkgTopic -> {\n+                    rootPackagesToResolve.add(pkgTopic.getName());\n+                    packageNameToVersionConstraints.putIfAbsent(pkgTopic.getName(), new HashMap<>());\n+                    Map<String, Object> pkgDetails = (Map) pkgTopic.getOnce();\n+                    packageNameToVersionConstraints.get(pkgTopic.getName())\n+                            .putIfAbsent(groupName, pkgDetails.get(GROUP_TO_ROOT_COMPONENTS_VERSION_KEY).toString());\n+                });\n+            }\n+        });\n \n+        logger.atInfo().setEventType(\"resolve-dependencies-start\")\n+                .addKeyValue(\"versionConstraints\", packageNameToVersionConstraints).log();\n+        logger.atInfo().kv(\"RootPackagesToResolve\", rootPackagesToResolve)\n+                .kv(\"DeploymentGroup\", document.getGroupName()).log(\"The root packages for deployment\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NzA4Mw==", "bodyText": "mergeActiveRootPackages should be replaced with this code", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r445097083", "createdAt": "2020-06-24T18:42:40Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/DependencyResolver.java", "diffHunk": "@@ -66,24 +68,42 @@\n         // the version constraints will also change accordingly. 3. The information also shows the complete dependency\n         // tree.\n         Map<String, Map<String, String>> packageNameToVersionConstraints = new HashMap<>();\n+        Set<String> rootPackagesToResolve = new LinkedHashSet<>();\n \n-        // List of root packages to be resolved\n-        Set<String> rootPackagesToResolve = new LinkedHashSet<>(newRootPackages);\n-\n-        // Get a list of package configurations with pinned versions\n+        // Get a list of all package configurations with version constraints in the deployment document\n         for (DeploymentPackageConfiguration dpc : document.getDeploymentPackageConfigurationList()) {\n             logger.atDebug().addKeyValue(PACKAGE_NAME_KEY, dpc.getPackageName())\n                     .addKeyValue(VERSION_KEY, dpc.getResolvedVersion()).log(\"Found package configuration\");\n             packageNameToVersionConstraints.putIfAbsent(dpc.getPackageName(), new HashMap<>());\n+\n+            // Only the group to package mapping before this deployment is guaranteed to be available, since config\n+            // updates happen in a separate thread.\n+            if (document.getRootPackages().contains(dpc.getPackageName())) {\n+                rootPackagesToResolve.add(dpc.getPackageName());\n+            }\n             packageNameToVersionConstraints.get(dpc.getPackageName())\n-                    .put(ROOT_REQUIREMENT_KEY, dpc.getResolvedVersion());\n+                    .put(document.getGroupName(), dpc.getResolvedVersion());\n         }\n \n-        // Merge the active root packages on the device\n-        mergeActiveRootPackages(rootPackagesToResolve, packageNameToVersionConstraints);\n-        logger.atInfo().setEventType(\"resolve-dependencies-start\").addKeyValue(\"rootPackages\", rootPackagesToResolve)\n-                .addKeyValue(\"versionConstraints\", packageNameToVersionConstraints).log();\n+        //Get package version constraints for root packages corresponding to other groups\n+        groupToRootPackagesDetails.iterator().forEachRemaining(node -> {\n+            Topics groupTopics = (Topics) node;\n+            String groupName = groupTopics.getName();\n+            if (!groupName.equals(document.getGroupName())) {\n+                groupTopics.deepForEachTopic(pkgTopic -> {\n+                    rootPackagesToResolve.add(pkgTopic.getName());\n+                    packageNameToVersionConstraints.putIfAbsent(pkgTopic.getName(), new HashMap<>());\n+                    Map<String, Object> pkgDetails = (Map) pkgTopic.getOnce();\n+                    packageNameToVersionConstraints.get(pkgTopic.getName())\n+                            .putIfAbsent(groupName, pkgDetails.get(GROUP_TO_ROOT_COMPONENTS_VERSION_KEY).toString());\n+                });\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37"}, "originalPosition": 87}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7eb5c4d237fbf1e98e9c004f5736bccbe555a37", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e7eb5c4d237fbf1e98e9c004f5736bccbe555a37", "committedDate": "2020-06-24T17:28:25Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "7be87d5ff9b6621ae8493834f0f0039622d120d5", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7be87d5ff9b6621ae8493834f0f0039622d120d5", "committedDate": "2020-06-25T17:52:17Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7be87d5ff9b6621ae8493834f0f0039622d120d5", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7be87d5ff9b6621ae8493834f0f0039622d120d5", "committedDate": "2020-06-25T17:52:17Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "ac8357a5d89925b5318466af3b2730b3836e1a7f", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ac8357a5d89925b5318466af3b2730b3836e1a7f", "committedDate": "2020-06-26T03:04:38Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac8357a5d89925b5318466af3b2730b3836e1a7f", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ac8357a5d89925b5318466af3b2730b3836e1a7f", "committedDate": "2020-06-26T03:04:38Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "30cff60601d42c3bfe0f747f56e2fa02ad2b52cb", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/30cff60601d42c3bfe0f747f56e2fa02ad2b52cb", "committedDate": "2020-06-26T20:36:22Z", "message": "Adding multiple group support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NTg3Njg1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-438587685", "createdAt": "2020-06-26T20:51:17Z", "commit": {"oid": "30cff60601d42c3bfe0f747f56e2fa02ad2b52cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMDo1MToxOFrOGpuWGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMDo1MToxOFrOGpuWGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwNDEyMw==", "bodyText": "use try-with-resources to always close the context otherwise it leaves a thread around", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r446404123", "createdAt": "2020-06-26T20:51:18Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/packagemanager/PackageManagerE2ETest.java", "diffHunk": "@@ -91,15 +98,23 @@ void GIVEN_package_identifier_WHEN_resolve_dependencies_and_prepare_THEN_package\n         List<String> rootPackageList = new ArrayList<>();\n         rootPackageList.add(\"KernelIntegTest\");\n         List<DeploymentPackageConfiguration> configList = new ArrayList<>();\n-        configList.add(new DeploymentPackageConfiguration(\"KernelIntegTest\", \"1.0.0\",\n+        configList.add(new DeploymentPackageConfiguration(\"KernelIntegTest\", true, \"1.0.0\",\n                                                           Collections.emptyMap()));\n         DeploymentDocument testDeploymentDocument\n                 = DeploymentDocument.builder().deploymentId(\"test\").timestamp(12345678L).rootPackages(rootPackageList)\n                                     .deploymentPackageConfigurationList(configList)\n                                     .failureHandlingPolicy(FailureHandlingPolicy.DO_NOTHING)\n                                     .groupName(\"test\").build();\n+        context = new Context();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30cff60601d42c3bfe0f747f56e2fa02ad2b52cb"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NTkwNTUw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-438590550", "createdAt": "2020-06-26T20:56:59Z", "commit": {"oid": "30cff60601d42c3bfe0f747f56e2fa02ad2b52cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMDo1Njo1OVrOGpufIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMDo1Njo1OVrOGpufIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwNjQzNQ==", "bodyText": "Instead of remove and then add, why not add a replace function to the config store?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r446406435", "createdAt": "2020-06-26T20:56:59Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -201,6 +211,28 @@ private void finishCurrentDeployment() throws InterruptedException {\n                 Map<String, String> statusDetails = new HashMap<>();\n                 statusDetails.put(\"detailed-deployment-status\", deploymentStatus.name());\n                 if (deploymentStatus.equals(DeploymentResult.DeploymentStatus.SUCCESSFUL)) {\n+                    //Add the root packages of successful deployment to the configuration\n+                    DeploymentDocument deploymentDocument = currentDeploymentTaskMetadata.getDeploymentDocument();\n+                    Topics groupToRootPackages = config.lookupTopics(GROUP_TO_ROOT_COMPONENTS_TOPICS);\n+                    //clean up any previous package info for the group in deployment document\n+                    Topics previousDeploymentGroupTopics =\n+                            groupToRootPackages.findTopics(deploymentDocument.getGroupName());\n+                    if (previousDeploymentGroupTopics != null) {\n+                        groupToRootPackages.removeAndWait(previousDeploymentGroupTopics);\n+                    }\n+                    Topics deploymentGroupTopics = groupToRootPackages.lookupTopics(deploymentDocument.getGroupName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30cff60601d42c3bfe0f747f56e2fa02ad2b52cb"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NTk0MjE4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-438594218", "createdAt": "2020-06-26T21:04:11Z", "commit": {"oid": "30cff60601d42c3bfe0f747f56e2fa02ad2b52cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMTowNDoxMVrOGpuqGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMTowNDoxMVrOGpuqGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwOTI0Mw==", "bodyText": "do not use concatenation. Always use string interpolation like .log(\"A {}\", val)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r446409243", "createdAt": "2020-06-26T21:04:11Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -50,25 +54,36 @@ public DeploymentResult call()\n                     .addKeyValue(DEPLOYMENT_ID_LOGGING_KEY, deploymentDocument.getDeploymentId())\n                     .log(\"Starting deployment task\");\n \n-            // TODO: DA compute list of all root level packages by looking across root level packages\n-            // of all groups, when multi group support is added.\n-            List<String> rootPackages = new ArrayList<>(deploymentDocument.getRootPackages());\n+            logger.atInfo().log(\"The deployment config is \" + deploymentServiceConfig.toPOJO().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30cff60601d42c3bfe0f747f56e2fa02ad2b52cb"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30cff60601d42c3bfe0f747f56e2fa02ad2b52cb", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/30cff60601d42c3bfe0f747f56e2fa02ad2b52cb", "committedDate": "2020-06-26T20:36:22Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "6ca2b834e9d44d5a2034e3eb16addf8ade9fabd1", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6ca2b834e9d44d5a2034e3eb16addf8ade9fabd1", "committedDate": "2020-06-27T00:38:54Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ca2b834e9d44d5a2034e3eb16addf8ade9fabd1", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6ca2b834e9d44d5a2034e3eb16addf8ade9fabd1", "committedDate": "2020-06-27T00:38:54Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "b932b7f1a1d04b4b6f8b57302279c6551a1fa957", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b932b7f1a1d04b4b6f8b57302279c6551a1fa957", "committedDate": "2020-06-29T19:54:08Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b932b7f1a1d04b4b6f8b57302279c6551a1fa957", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b932b7f1a1d04b4b6f8b57302279c6551a1fa957", "committedDate": "2020-06-29T19:54:08Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "6e18d994e43244c21fbd9130969d93bc8f375015", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6e18d994e43244c21fbd9130969d93bc8f375015", "committedDate": "2020-06-29T22:03:11Z", "message": "Adding multiple group support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTM1MDI0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-439535024", "createdAt": "2020-06-29T22:09:27Z", "commit": {"oid": "6e18d994e43244c21fbd9130969d93bc8f375015"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjowOToyN1rOGqj-Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjowOToyN1rOGqj-Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI4Mjc2Mg==", "bodyText": "The constructor was private for a reason. Do we need this to be public?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r447282762", "createdAt": "2020-06-29T22:09:27Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -25,6 +25,10 @@\n         super(c, n, p);\n     }\n \n+    public static Topics of(Context c, String n, Topics p) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e18d994e43244c21fbd9130969d93bc8f375015"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTY4NzYz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-439568763", "createdAt": "2020-06-29T23:28:31Z", "commit": {"oid": "d88f3d85fc55a52c7fd1804fdd46dd8b711fc0bc"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoyODozMVrOGqmAIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzo0NjowNVrOGqmWwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxNjAwMA==", "bodyText": "nit: unnecessary concat", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r447316000", "createdAt": "2020-06-29T23:28:31Z", "author": {"login": "hui-yang"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "diffHunk": "@@ -184,6 +201,8 @@ void GIVEN_services_running_WHEN_updated_params_THEN_services_start_with_updated\n             }\n         };\n         Slf4jLogAdapter.addGlobalListener(listener);\n+        groupToRootComponentsTopics.lookup(\"CustomerApp\").withValue(\n+                ImmutableMap.of(GROUP_TO_ROOT_COMPONENTS_VERSION_KEY, \"1\" + \".0.0\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88f3d85fc55a52c7fd1804fdd46dd8b711fc0bc"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMTc5Mg==", "bodyText": "nit: typo", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#discussion_r447321792", "createdAt": "2020-06-29T23:46:05Z", "author": {"login": "hui-yang"}, "path": "src/test/java/com/aws/iot/evergreen/deployment/DeploymentServiceTest.java", "diffHunk": "@@ -107,24 +130,53 @@ void afterEach() {\n         @BeforeEach\n         public void setup() throws Exception {\n             deploymentService.setPollingFrequency(Duration.ofSeconds(1).toMillis());\n-            deploymentsQueue.put(new Deployment(\"{\\\"configurationArn\\\":\\\"testArn\\\"}\",\n+            String deploymentDocument\n+                    = new BufferedReader(new InputStreamReader(\n+                            getClass().getResourceAsStream(\"TestDeploymentDocument.json\"), StandardCharsets.UTF_8))\n+                    .lines()\n+                    .collect(Collectors.joining(\"\\n\"));\n+            deploymentsQueue.put(new Deployment(deploymentDocument,\n                     Deployment.DeploymentType.IOT_JOBS, TEST_JOB_ID_1));\n         }\n \n         @Test\n         public void GIVEN_deployment_job_WHEN_deployment_process_succeeds_THEN_report_succeeded_job_status()\n                 throws Exception {\n+            mockGroupToRootPackageMappingStubs();\n             CompletableFuture<DeploymentResult> mockFuture = new CompletableFuture<>();\n             mockFuture.complete(new DeploymentResult(DeploymentStatus.SUCCESSFUL, null));\n             when(mockExecutorService.submit(any(DeploymentTask.class))).thenReturn(mockFuture);\n-            startDeploymentServiceInAnotherThread();\n+            CountDownLatch jobSuceededLatch = new CountDownLatch(1);\n+            doAnswer(new Answer() {\n+                @Override\n+                public Object answer(InvocationOnMock invocationOnMock) throws Throwable {\n+                    jobSuceededLatch.countDown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d88f3d85fc55a52c7fd1804fdd46dd8b711fc0bc"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTgzMDkw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-439583090", "createdAt": "2020-06-30T00:10:24Z", "commit": {"oid": "d88f3d85fc55a52c7fd1804fdd46dd8b711fc0bc"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d88f3d85fc55a52c7fd1804fdd46dd8b711fc0bc", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d88f3d85fc55a52c7fd1804fdd46dd8b711fc0bc", "committedDate": "2020-06-29T23:26:54Z", "message": "Merge branch 'master' into groupDeployments"}, "afterCommit": {"oid": "37534353cd4b35f57bdf0220879381c408eb79a2", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/37534353cd4b35f57bdf0220879381c408eb79a2", "committedDate": "2020-06-30T01:01:55Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37534353cd4b35f57bdf0220879381c408eb79a2", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/37534353cd4b35f57bdf0220879381c408eb79a2", "committedDate": "2020-06-30T01:01:55Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "e87a6e90d7f9549d3e529fb3e9d9cf61bf1cd61d", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e87a6e90d7f9549d3e529fb3e9d9cf61bf1cd61d", "committedDate": "2020-06-30T16:55:31Z", "message": "Adding multiple group support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "534f5c63fd8d66064f30b89859733929016e9b16", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/534f5c63fd8d66064f30b89859733929016e9b16", "committedDate": "2020-07-01T17:19:55Z", "message": "Refactoring how current deployment task metadata is handled"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e87a6e90d7f9549d3e529fb3e9d9cf61bf1cd61d", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e87a6e90d7f9549d3e529fb3e9d9cf61bf1cd61d", "committedDate": "2020-06-30T16:55:31Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "1c7b9f59063cec666a7d6eb96fe39ef5711a17e9", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1c7b9f59063cec666a7d6eb96fe39ef5711a17e9", "committedDate": "2020-07-01T17:19:55Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c7b9f59063cec666a7d6eb96fe39ef5711a17e9", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1c7b9f59063cec666a7d6eb96fe39ef5711a17e9", "committedDate": "2020-07-01T17:19:55Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "ea8e56c52269ef5513e632e7f77a994dd2560d17", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ea8e56c52269ef5513e632e7f77a994dd2560d17", "committedDate": "2020-07-01T22:45:07Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea8e56c52269ef5513e632e7f77a994dd2560d17", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ea8e56c52269ef5513e632e7f77a994dd2560d17", "committedDate": "2020-07-01T22:45:07Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "9dc1182ff16bddfa628fd12909969259ce3de161", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9dc1182ff16bddfa628fd12909969259ce3de161", "committedDate": "2020-07-01T22:48:40Z", "message": "Adding multiple group support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "409c11e0e8d740ba97501172480ccdc0bcc1c6ef", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/409c11e0e8d740ba97501172480ccdc0bcc1c6ef", "committedDate": "2020-07-01T22:51:14Z", "message": "Adding multiple group support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dc1182ff16bddfa628fd12909969259ce3de161", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9dc1182ff16bddfa628fd12909969259ce3de161", "committedDate": "2020-07-01T22:48:40Z", "message": "Adding multiple group support"}, "afterCommit": {"oid": "409c11e0e8d740ba97501172480ccdc0bcc1c6ef", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/409c11e0e8d740ba97501172480ccdc0bcc1c6ef", "committedDate": "2020-07-01T22:51:14Z", "message": "Adding multiple group support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjY2NDI0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-441266424", "createdAt": "2020-07-01T23:59:28Z", "commit": {"oid": "409c11e0e8d740ba97501172480ccdc0bcc1c6ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjczMTY0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/283#pullrequestreview-441273164", "createdAt": "2020-07-02T00:22:10Z", "commit": {"oid": "409c11e0e8d740ba97501172480ccdc0bcc1c6ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2825, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}