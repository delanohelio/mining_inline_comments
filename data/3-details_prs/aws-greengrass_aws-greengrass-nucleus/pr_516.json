{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNjc5MTg1", "number": 516, "title": "Exec commands with user/group", "bodyText": "Issue #, if available:\nDescription of changes:\nSupport passing user/group into Exec and wrapping commands with sudo or runas\nWhy is this change necessary:\nFor supporting user/group with components\nHow was this change tested:\nUnit tests\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-10-12T16:20:20Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516", "merged": true, "mergeCommit": {"oid": "3979016f0fe45cb43196ad85e4b00589cb8aa7b6"}, "closed": true, "closedAt": "2020-10-15T19:31:14Z", "author": {"login": "rbattle"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdR2Q-pAH2gAyNTAxNjc5MTg1OmNiOTE3YjJkZTE5M2ZjMTgxZTdlYWNkODZhYWQ5ODA2ZDUzYjE0NTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdS2sprgH2gAyNTAxNjc5MTg1OjQyZjg3YmQ1MGMxMmYzZTBlZTg1MjMxNmQ2NTc2NzlmOWFkMmZlNWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb917b2de193fc181e7eacd86aad9806d53b1450", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cb917b2de193fc181e7eacd86aad9806d53b1450", "committedDate": "2020-10-12T16:07:22Z", "message": "Add Exec support for user and group\n\nRefactor Exec to support command decorators which can wrap a command with another command to execute a shell or change user/group"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56b35da521480ff96519e0228ea79479bb32d0d8", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/56b35da521480ff96519e0228ea79479bb32d0d8", "committedDate": "2020-10-12T16:16:55Z", "message": "clean up newlines"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NzU5MzEy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#pullrequestreview-506759312", "createdAt": "2020-10-12T16:22:56Z", "commit": {"oid": "56b35da521480ff96519e0228ea79479bb32d0d8"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjoyMjo1N1rOHgFU7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjoyNToxMFrOHgFZcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwMzc1Nw==", "bodyText": "does it need a new decorator each time?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#discussion_r503403757", "createdAt": "2020-10-12T16:22:57Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/platforms/UnixPlatform.java", "diffHunk": "@@ -58,15 +59,109 @@ public void killProcessAndChildren(Process process, boolean force) throws IOExce\n     }\n \n     @Override\n-    public String[] getShellForCommand(String command) {\n-        return new String[]{\"sh\", \"-c\", command};\n+    public CommandDecorator getShellDecorator() {\n+        return new ShellDecorator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56b35da521480ff96519e0228ea79479bb32d0d8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwNDkxMg==", "bodyText": "why do we need this? this will do sudo -E -u <user> -- <command>? Why is -- needed?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#discussion_r503404912", "createdAt": "2020-10-12T16:25:10Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/platforms/UnixPlatform.java", "diffHunk": "@@ -58,15 +59,109 @@ public void killProcessAndChildren(Process process, boolean force) throws IOExce\n     }\n \n     @Override\n-    public String[] getShellForCommand(String command) {\n-        return new String[]{\"sh\", \"-c\", command};\n+    public CommandDecorator getShellDecorator() {\n+        return new ShellDecorator();\n     }\n \n     @Override\n     public int exitCodeWhenCommandDoesNotExist() {\n         return 127;\n     }\n \n+    @Override\n+    public UserDecorator getUserDecorator() {\n+        return new SudoDecorator();\n+    }\n+\n+    /**\n+     * Decorate a command to run in a shell.\n+     */\n+    public static class ShellDecorator implements CommandDecorator {\n+\n+        private static final String DEFAULT_SHELL = \"sh\";\n+        private static final String DEFAULT_ARG = \"-c\";\n+        private String shell;\n+        private String arg;\n+\n+        /**\n+         * Create a new instance using the default shell (sh).\n+         */\n+        public ShellDecorator() {\n+            this(DEFAULT_SHELL, DEFAULT_ARG);\n+        }\n+\n+        /**\n+         * Create a new instance for a given shell command and shell argument for taking in string input.\n+         * @param shell the shell.\n+         * @param arg optional argument for passing string data into the shell.\n+         */\n+        public ShellDecorator(String shell, String arg) {\n+            this.shell = shell;\n+            this.arg = arg;\n+        }\n+\n+        @Override\n+        public String[] decorate(String... command) {\n+            boolean hasArg = !Utils.isEmpty(arg);\n+            int size = hasArg ? 3 : 2;\n+            String[] ret = new String[size];\n+            ret[0] = shell;\n+            if (hasArg) {\n+                ret[1] = arg;\n+            }\n+            ret[size - 1] = String.join(\" \", command);\n+            return ret;\n+        }\n+    }\n+\n+    /**\n+     * Decorator for running a command as a different user/group with `sudo`.\n+     */\n+    @NoArgsConstructor\n+    public static class SudoDecorator implements UserDecorator {\n+        private String user;\n+        private String group;\n+\n+        @Override\n+        public String[] decorate(String... command) {\n+            // do nothing if no user set\n+            if (user == null) {\n+                return command;\n+            }\n+            int size = (group == null) ? 5 : 7;\n+            String[] ret = new String[command.length + size];\n+            ret[0] = \"sudo\";\n+            ret[1] = \"-E\";  // pass env vars through\n+            ret[2] = \"-u\";\n+            if (user.chars().allMatch(Character::isDigit)) {\n+                user = \"\\\\#\" + user;\n+            }\n+            ret[3] = user;\n+            if (group != null) {\n+                ret[4] = \"-g\";\n+                if (group.chars().allMatch(Character::isDigit)) {\n+                    group = \"\\\\#\" + group;\n+                }\n+                ret[5] = group;\n+            }\n+            ret[size - 1] = \"--\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56b35da521480ff96519e0228ea79479bb32d0d8"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NzY2MTI5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#pullrequestreview-506766129", "createdAt": "2020-10-12T16:33:27Z", "commit": {"oid": "56b35da521480ff96519e0228ea79479bb32d0d8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjozMzoyOFrOHgFqIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjozMzoyOFrOHgFqIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwOTE4NA==", "bodyText": "Does this including UID?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#discussion_r503409184", "createdAt": "2020-10-12T16:33:28Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/greengrass/util/platforms/UnixPlatform.java", "diffHunk": "@@ -58,15 +59,109 @@ public void killProcessAndChildren(Process process, boolean force) throws IOExce\n     }\n \n     @Override\n-    public String[] getShellForCommand(String command) {\n-        return new String[]{\"sh\", \"-c\", command};\n+    public CommandDecorator getShellDecorator() {\n+        return new ShellDecorator();\n     }\n \n     @Override\n     public int exitCodeWhenCommandDoesNotExist() {\n         return 127;\n     }\n \n+    @Override\n+    public UserDecorator getUserDecorator() {\n+        return new SudoDecorator();\n+    }\n+\n+    /**\n+     * Decorate a command to run in a shell.\n+     */\n+    public static class ShellDecorator implements CommandDecorator {\n+\n+        private static final String DEFAULT_SHELL = \"sh\";\n+        private static final String DEFAULT_ARG = \"-c\";\n+        private String shell;\n+        private String arg;\n+\n+        /**\n+         * Create a new instance using the default shell (sh).\n+         */\n+        public ShellDecorator() {\n+            this(DEFAULT_SHELL, DEFAULT_ARG);\n+        }\n+\n+        /**\n+         * Create a new instance for a given shell command and shell argument for taking in string input.\n+         * @param shell the shell.\n+         * @param arg optional argument for passing string data into the shell.\n+         */\n+        public ShellDecorator(String shell, String arg) {\n+            this.shell = shell;\n+            this.arg = arg;\n+        }\n+\n+        @Override\n+        public String[] decorate(String... command) {\n+            boolean hasArg = !Utils.isEmpty(arg);\n+            int size = hasArg ? 3 : 2;\n+            String[] ret = new String[size];\n+            ret[0] = shell;\n+            if (hasArg) {\n+                ret[1] = arg;\n+            }\n+            ret[size - 1] = String.join(\" \", command);\n+            return ret;\n+        }\n+    }\n+\n+    /**\n+     * Decorator for running a command as a different user/group with `sudo`.\n+     */\n+    @NoArgsConstructor\n+    public static class SudoDecorator implements UserDecorator {\n+        private String user;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56b35da521480ff96519e0228ea79479bb32d0d8"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2Nzc2Njc3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#pullrequestreview-506776677", "createdAt": "2020-10-12T16:50:24Z", "commit": {"oid": "56b35da521480ff96519e0228ea79479bb32d0d8"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d1414645cf6ee7c87b4da63efd02a559c0c0aa8", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3d1414645cf6ee7c87b4da63efd02a559c0c0aa8", "committedDate": "2020-10-12T17:13:46Z", "message": "Merge branch 'master' into runwith"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65d12ba2853cd4c3675ded0ff990486b6d068b1c", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/65d12ba2853cd4c3675ded0ff990486b6d068b1c", "committedDate": "2020-10-12T20:41:40Z", "message": "Merge branch 'master' into runwith"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74849463972d77bbbed689eb4e24698e1a3534f6", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/74849463972d77bbbed689eb4e24698e1a3534f6", "committedDate": "2020-10-13T16:38:47Z", "message": "Merge branch 'master' into runwith"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58bf5ac04f12b12e16f5f1382f14b7d81ff78ae2", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/58bf5ac04f12b12e16f5f1382f14b7d81ff78ae2", "committedDate": "2020-10-13T16:53:53Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjU0MjY0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#pullrequestreview-507654264", "createdAt": "2020-10-13T17:03:09Z", "commit": {"oid": "58bf5ac04f12b12e16f5f1382f14b7d81ff78ae2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowMzoxMFrOHgw7tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNDo0OFrOHgw_kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODE5OQ==", "bodyText": "add GGExtension", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#discussion_r504118199", "createdAt": "2020-10-13T17:03:10Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/util/platforms/UnixPlatformTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util.platforms;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.arrayContaining;\n+import static org.hamcrest.Matchers.is;\n+\n+public class UnixPlatformTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58bf5ac04f12b12e16f5f1382f14b7d81ff78ae2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODczMg==", "bodyText": "why \"arrayContaining\"? Won't that mistakenly accept wrong answers if the decorator added some extra garbage?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#discussion_r504118732", "createdAt": "2020-10-13T17:04:04Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/util/platforms/UnixPlatformTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util.platforms;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.arrayContaining;\n+import static org.hamcrest.Matchers.is;\n+\n+public class UnixPlatformTest {\n+\n+    private static String[] command = {\"echo\", \"hello\", \"world\"};\n+\n+    @Test\n+    public void GIVEN_no_user_and_no_group_WHEN_decorate_THEN_do_not_generate_sudo_with_user_and_group() {\n+        assertThat(new UnixPlatform.SudoDecorator().decorate(command),\n+                is(arrayContaining(command)));\n+    }\n+\n+    @Test\n+    public void GIVEN_user_and_group_WHEN_decorate_THEN_generate_sudo_with_user_and_group() {\n+        assertThat(new UnixPlatform.SudoDecorator()\n+                        .withUser(\"foo\")\n+                        .withGroup(\"bar\")\n+                        .decorate(command),\n+                is(arrayContaining(\"sudo\", \"-E\", \"-u\", \"foo\", \"-g\", \"bar\", \"--\", \"echo\", \"hello\", \"world\")));\n+    }\n+\n+    @Test\n+    public void GIVEN_numeric_user_and_group_WHEN_decorate_THEN_generate_sudo_with_prefix() {\n+        assertThat(new UnixPlatform.SudoDecorator()\n+                        .withUser(\"100\")\n+                        .withGroup(\"200\")\n+                        .decorate(command),\n+                is(arrayContaining(\"sudo\", \"-E\", \"-u\", \"\\\\#100\", \"-g\", \"\\\\#200\", \"--\", \"echo\", \"hello\", \"world\")));\n+    }\n+\n+    @Test\n+    public void GIVEN_user_WHEN_decorate_THEN_generate_sudo_without_group() {\n+        assertThat(new UnixPlatform.SudoDecorator()\n+                        .withUser(\"foo\")\n+                        .decorate(command),\n+                is(arrayContaining(\"sudo\", \"-E\", \"-u\", \"foo\", \"--\", \"echo\", \"hello\", \"world\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58bf5ac04f12b12e16f5f1382f14b7d81ff78ae2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExOTE4NQ==", "bodyText": "why is this different from unix in that unix keeps all the arguments as separate entries? Why are they joined on \" \" on windows?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#discussion_r504119185", "createdAt": "2020-10-13T17:04:48Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/util/platforms/WindowsPlatformTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util.platforms;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.arrayContaining;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+public class WindowsPlatformTest {\n+\n+    @Test\n+    public void GIVEN_no_user_WHEN_decorate_THEN_do_not_generate_runas() {\n+        assertThat(new WindowsPlatform.RunAsDecorator()\n+                        .decorate(\"echo\", \"hello\"),\n+                is(arrayContaining(\"echo\", \"hello\")));\n+    }\n+    @Test\n+    public void GIVEN_user_WHEN_decorate_THEN_generate_runas() {\n+        assertThat(new WindowsPlatform.RunAsDecorator()\n+                        .withUser(\"foo@bar\")\n+                        .decorate(\"echo\", \"hello\"),\n+                is(arrayContaining(\"runas\", \"/user:foo@bar\", \"echo hello\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58bf5ac04f12b12e16f5f1382f14b7d81ff78ae2"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90985a15fefefffb6a643d84e83b3159c1f7c4bf", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/90985a15fefefffb6a643d84e83b3159c1f7c4bf", "committedDate": "2020-10-13T17:26:05Z", "message": "Merge branch 'master' into runwith"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODA2NDU4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#pullrequestreview-507806458", "createdAt": "2020-10-13T20:32:21Z", "commit": {"oid": "90985a15fefefffb6a643d84e83b3159c1f7c4bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDozMjoyMVrOHg4bdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDozMjoyMVrOHg4bdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI0MTAxNA==", "bodyText": "needs GGExtension", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#discussion_r504241014", "createdAt": "2020-10-13T20:32:21Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/util/platforms/WindowsPlatformTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util.platforms;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.arrayContaining;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+public class WindowsPlatformTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90985a15fefefffb6a643d84e83b3159c1f7c4bf"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acbeffc8264c468721c3b987cb6096564d0d91d7", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/acbeffc8264c468721c3b987cb6096564d0d91d7", "committedDate": "2020-10-13T20:53:35Z", "message": "Remove Windows RunAs until further implementation can be sorted out. Add GGExtension"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODIyMTAx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#pullrequestreview-507822101", "createdAt": "2020-10-13T20:56:01Z", "commit": {"oid": "acbeffc8264c468721c3b987cb6096564d0d91d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d46e0a66ef13b4f0d5e023401cdfdc1eceb67cd", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8d46e0a66ef13b4f0d5e023401cdfdc1eceb67cd", "committedDate": "2020-10-13T22:11:46Z", "message": "Merge branch 'master' into runwith"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTE5NTYx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/516#pullrequestreview-507919561", "createdAt": "2020-10-14T00:38:56Z", "commit": {"oid": "8d46e0a66ef13b4f0d5e023401cdfdc1eceb67cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b17a5acead43b8b5caacc06f787157803aee135b", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b17a5acead43b8b5caacc06f787157803aee135b", "committedDate": "2020-10-14T06:54:39Z", "message": "Merge branch 'master' into runwith"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9301c0cfdeb4aba2b3188779ad482dde5426dbab", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9301c0cfdeb4aba2b3188779ad482dde5426dbab", "committedDate": "2020-10-14T16:13:36Z", "message": "Merge branch 'master' into runwith"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e22f4d4af71f8ac66899d462f2da731d2323706", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9e22f4d4af71f8ac66899d462f2da731d2323706", "committedDate": "2020-10-14T20:17:22Z", "message": "Merge branch 'master' into runwith"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5a4c156409960687716d673fc23cbd917e4f0fd", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e5a4c156409960687716d673fc23cbd917e4f0fd", "committedDate": "2020-10-14T21:55:00Z", "message": "Merge branch 'master' into runwith"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ab78a2eadc6a535cf07ba5e32e135a99fcfd0d1", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9ab78a2eadc6a535cf07ba5e32e135a99fcfd0d1", "committedDate": "2020-10-15T00:48:43Z", "message": "Merge branch 'master' into runwith"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42f87bd50c12f3e0ee852316d657679f9ad2fe5f", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/42f87bd50c12f3e0ee852316d657679f9ad2fe5f", "committedDate": "2020-10-15T19:11:31Z", "message": "Merge branch 'master' into runwith"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3127, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}