{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODQzNzEy", "number": 224, "title": "Implement service soft dependencies in Kernel", "bodyText": "Issue #, if available:\nDescription of changes:\n\nIntroduce dependency type and support soft dependencies\nRemove dependency startWhen settings\n\nWhy is this change necessary:\nHow was this change tested:\n\nPassing existing tests\nAdd new integration tests\n\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-05-06T02:22:41Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224", "merged": true, "mergeCommit": {"oid": "3548b5ea3b2341afc06aa93260d8b1e396cb2c8e"}, "closed": true, "closedAt": "2020-05-13T21:16:59Z", "author": {"login": "hui-yang"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcefcKtABqjMzMDY2OTI4OTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg_XF3AFqTQxMTI5NjAwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "957f2e5d56a542f8eb9a7eba5bf7f1cb3d24d2ad", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/957f2e5d56a542f8eb9a7eba5bf7f1cb3d24d2ad", "committedDate": "2020-05-06T02:19:47Z", "message": "Implement soft dependencies with startWhen setting"}, "afterCommit": {"oid": "31f83a652b3c44d6fb69f19dc48c78c8ec64d6cb", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/31f83a652b3c44d6fb69f19dc48c78c8ec64d6cb", "committedDate": "2020-05-06T02:41:13Z", "message": "Implement soft dependencies with startWhen setting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MzAwOTMx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#pullrequestreview-406300931", "createdAt": "2020-05-06T04:44:51Z", "commit": {"oid": "31f83a652b3c44d6fb69f19dc48c78c8ec64d6cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNDo0NDo1MVrOGRD33w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNDo0NDo1MVrOGRD33w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU0MjQzMQ==", "bodyText": "Where did the default of RUNNING go to?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r420542431", "createdAt": "2020-05-06T04:44:51Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -469,21 +477,19 @@ public Topics getServiceConfig() {\n \n     private Pair<EvergreenService, State> parseSingleDependency(String name, String startWhen)\n             throws InputValidationException, ServiceLoadException {\n-        if (startWhen == null) {\n-            startWhen = State.RUNNING.toString();\n-        }\n         State x = null;\n-        int len = startWhen.length();\n-        if (len > 0) {\n+        if (startWhen != null && !startWhen.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f83a652b3c44d6fb69f19dc48c78c8ec64d6cb"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MzAxMjYx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#pullrequestreview-406301261", "createdAt": "2020-05-06T04:46:13Z", "commit": {"oid": "31f83a652b3c44d6fb69f19dc48c78c8ec64d6cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNDo0NjoxM1rOGRD5Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNDo0NjoxM1rOGRD5Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU0Mjc0Nw==", "bodyText": "Why only RUNNING here? Should this include FINISHED also since that is almost even harder than RUNNING?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r420542747", "createdAt": "2020-05-06T04:46:13Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -358,13 +360,14 @@ private Subscriber createDependencySubscriber(EvergreenService dependentEvergree\n         };\n     }\n \n-    private List<EvergreenService> getDependers() {\n+    private List<EvergreenService> getHardDependers() {\n         List<EvergreenService> dependers = new ArrayList<>();\n         Kernel kernel = context.get(Kernel.class);\n         for (EvergreenService evergreenService : kernel.orderedDependencies()) {\n-            boolean isDepender = evergreenService.dependencies.keySet().stream().anyMatch(d -> d.equals(this));\n-            if (isDepender) {\n-                dependers.add(evergreenService);\n+            for (Map.Entry<EvergreenService, DependencyInfo> entry : evergreenService.dependencies.entrySet()) {\n+                if (entry.getKey().equals(this) && State.RUNNING.equals(entry.getValue().startWhen)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f83a652b3c44d6fb69f19dc48c78c8ec64d6cb"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODI3Njkz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#pullrequestreview-406827693", "createdAt": "2020-05-06T17:22:09Z", "commit": {"oid": "31f83a652b3c44d6fb69f19dc48c78c8ec64d6cb"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31f83a652b3c44d6fb69f19dc48c78c8ec64d6cb", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/31f83a652b3c44d6fb69f19dc48c78c8ec64d6cb", "committedDate": "2020-05-06T02:41:13Z", "message": "Implement soft dependencies with startWhen setting"}, "afterCommit": {"oid": "19e8e80e41548d709edc8ccc75405d2e1f990d28", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/19e8e80e41548d709edc8ccc75405d2e1f990d28", "committedDate": "2020-05-12T02:40:46Z", "message": "Support service soft dependencies in Kernel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19e8e80e41548d709edc8ccc75405d2e1f990d28", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/19e8e80e41548d709edc8ccc75405d2e1f990d28", "committedDate": "2020-05-12T02:40:46Z", "message": "Support service soft dependencies in Kernel"}, "afterCommit": {"oid": "e985ed015a4d35b412a430eaee402911f8e46371", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e985ed015a4d35b412a430eaee402911f8e46371", "committedDate": "2020-05-12T20:49:23Z", "message": "Support service soft dependencies in Kernel"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e985ed015a4d35b412a430eaee402911f8e46371", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e985ed015a4d35b412a430eaee402911f8e46371", "committedDate": "2020-05-12T20:49:23Z", "message": "Support service soft dependencies in Kernel"}, "afterCommit": {"oid": "48a65508db1f3ac766abafc8e9f0df612f926bb2", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/48a65508db1f3ac766abafc8e9f0df612f926bb2", "committedDate": "2020-05-12T21:00:31Z", "message": "Support service soft dependencies in Kernel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDM4NDA4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#pullrequestreview-410438408", "createdAt": "2020-05-12T21:32:45Z", "commit": {"oid": "48a65508db1f3ac766abafc8e9f0df612f926bb2"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozMjo0NVrOGUZu1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozODoxMlrOGUZ4Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NjI5NQ==", "bodyText": "nit: lowercase service here.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r424046295", "createdAt": "2020-05-12T21:32:45Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -444,49 +445,45 @@ public Topics getServiceConfig() {\n         return config;\n     }\n \n-    private Map<EvergreenService, State> getDependencyStateMap(Iterable<String> dependencyList)\n+    private Map<EvergreenService, Type> getDependencyTypeMap(Iterable<String> dependencyList)\n             throws InputValidationException, ServiceLoadException {\n-        HashMap<EvergreenService, State> ret = new HashMap<>();\n+        HashMap<EvergreenService, Type> ret = new HashMap<>();\n         for (String dependency : dependencyList) {\n             String[] dependencyInfo = dependency.split(\":\");\n             if (dependencyInfo.length == 0 || dependencyInfo.length > 2) {\n                 throw new InputValidationException(\"Bad dependency syntax\");\n             }\n-            Pair<EvergreenService, State> dep =\n+            Pair<EvergreenService, Type> dep =\n                     parseSingleDependency(dependencyInfo[0], dependencyInfo.length > 1 ? dependencyInfo[1] : null);\n             ret.put(dep.getLeft(), dep.getRight());\n         }\n         return ret;\n     }\n \n-    private Pair<EvergreenService, State> parseSingleDependency(String name, String startWhen)\n+    private Pair<EvergreenService, Type> parseSingleDependency(String name, String typeString)\n             throws InputValidationException, ServiceLoadException {\n-        if (startWhen == null) {\n-            startWhen = State.RUNNING.toString();\n-        }\n-        State x = null;\n-        int len = startWhen.length();\n-        if (len > 0) {\n+        Type type = null;\n+        if (typeString != null && !typeString.isEmpty()) {\n             // do \"friendly\" match\n-            for (State s : State.values()) {\n-                if (startWhen.regionMatches(true, 0, s.name(), 0, len)) {\n-                    x = s;\n+            for (Type s : Type.values()) {\n+                if (typeString.regionMatches(true, 0, s.name(), 0, typeString.length())) {\n+                    type = s;\n                     break;\n                 }\n             }\n-            if (x == null) {\n-                throw new InputValidationException(startWhen + \" does not match any EvergreenService state name\");\n+            if (type == null) {\n+                throw new InputValidationException(typeString + \" does not match any Service dependency type\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48a65508db1f3ac766abafc8e9f0df612f926bb2"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NjczOQ==", "bodyText": "IMO these can probably be soft.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r424046739", "createdAt": "2020-05-12T21:33:48Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelLifecycle.java", "diffHunk": "@@ -73,7 +73,7 @@ public void launch() {\n \n         autostart.forEach(s -> {\n             try {\n-                mainService.addOrUpdateDependency(kernel.locate(s), State.RUNNING, true);\n+                mainService.addOrUpdateDependency(kernel.locate(s), Type.HARD, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48a65508db1f3ac766abafc8e9f0df612f926bb2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0ODEwMw==", "bodyText": "nit: may want to do a case-insensitive match using toUpperCase", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r424048103", "createdAt": "2020-05-12T21:37:01Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -444,49 +445,45 @@ public Topics getServiceConfig() {\n         return config;\n     }\n \n-    private Map<EvergreenService, State> getDependencyStateMap(Iterable<String> dependencyList)\n+    private Map<EvergreenService, Type> getDependencyTypeMap(Iterable<String> dependencyList)\n             throws InputValidationException, ServiceLoadException {\n-        HashMap<EvergreenService, State> ret = new HashMap<>();\n+        HashMap<EvergreenService, Type> ret = new HashMap<>();\n         for (String dependency : dependencyList) {\n             String[] dependencyInfo = dependency.split(\":\");\n             if (dependencyInfo.length == 0 || dependencyInfo.length > 2) {\n                 throw new InputValidationException(\"Bad dependency syntax\");\n             }\n-            Pair<EvergreenService, State> dep =\n+            Pair<EvergreenService, Type> dep =\n                     parseSingleDependency(dependencyInfo[0], dependencyInfo.length > 1 ? dependencyInfo[1] : null);\n             ret.put(dep.getLeft(), dep.getRight());\n         }\n         return ret;\n     }\n \n-    private Pair<EvergreenService, State> parseSingleDependency(String name, String startWhen)\n+    private Pair<EvergreenService, Type> parseSingleDependency(String name, String typeString)\n             throws InputValidationException, ServiceLoadException {\n-        if (startWhen == null) {\n-            startWhen = State.RUNNING.toString();\n-        }\n-        State x = null;\n-        int len = startWhen.length();\n-        if (len > 0) {\n+        Type type = null;\n+        if (typeString != null && !typeString.isEmpty()) {\n             // do \"friendly\" match\n-            for (State s : State.values()) {\n-                if (startWhen.regionMatches(true, 0, s.name(), 0, len)) {\n-                    x = s;\n+            for (Type s : Type.values()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48a65508db1f3ac766abafc8e9f0df612f926bb2"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0ODUyMA==", "bodyText": "Please add javadoc explaining what hard and soft mean.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r424048520", "createdAt": "2020-05-12T21:37:54Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/dependency/Type.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.dependency;\n+\n+import lombok.AllArgsConstructor;\n+\n+/**\n+ * Dependency type used for declared service dependencies.\n+ */\n+@AllArgsConstructor\n+public enum Type {\n+    HARD(\"HARD\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48a65508db1f3ac766abafc8e9f0df612f926bb2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0ODY1MQ==", "bodyText": "Type is far too generic. Please rename. Perhaps DependencyType.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r424048651", "createdAt": "2020-05-12T21:38:12Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/dependency/Type.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.dependency;\n+\n+import lombok.AllArgsConstructor;\n+\n+/**\n+ * Dependency type used for declared service dependencies.\n+ */\n+@AllArgsConstructor\n+public enum Type {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48a65508db1f3ac766abafc8e9f0df612f926bb2"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48a65508db1f3ac766abafc8e9f0df612f926bb2", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/48a65508db1f3ac766abafc8e9f0df612f926bb2", "committedDate": "2020-05-12T21:00:31Z", "message": "Support service soft dependencies in Kernel"}, "afterCommit": {"oid": "c3d2fbd052ca923ea3c96cadc07a37b1573e8460", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c3d2fbd052ca923ea3c96cadc07a37b1573e8460", "committedDate": "2020-05-12T22:34:09Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDM2Nzk4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#pullrequestreview-411036798", "createdAt": "2020-05-13T15:21:51Z", "commit": {"oid": "c3d2fbd052ca923ea3c96cadc07a37b1573e8460"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNToyMTo1MVrOGU24xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNToyMTo1MVrOGU24xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUyMzk3NA==", "bodyText": "Nit - should this not be changed to Soft?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r424523974", "createdAt": "2020-05-13T15:21:51Z", "author": {"login": "shaguptashaikh"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/delta.yaml", "diffHunk": "@@ -14,7 +14,7 @@ services:\n         date; sleep 5; echo Now we\\'re in phase 3\n         done\n     dependencies:\n-      - ticktock:INSTALLED\n+      - ticktock", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3d2fbd052ca923ea3c96cadc07a37b1573e8460"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDUwOTk2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#pullrequestreview-411050996", "createdAt": "2020-05-13T15:36:32Z", "commit": {"oid": "c3d2fbd052ca923ea3c96cadc07a37b1573e8460"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTozNjozM1rOGU3kGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTozNjozM1rOGU3kGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzNTA2NA==", "bodyText": "Nit- looks like leftover commented code, just remove it?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r424535064", "createdAt": "2020-05-13T15:36:33Z", "author": {"login": "shaguptashaikh"}, "path": "src/test/java/com/aws/iot/evergreen/dependency/LifecycleTest.java", "diffHunk": "@@ -109,7 +109,7 @@ public void T1() {\n \n     public static class C2 extends EvergreenService {\n         final String id = \"c2/\" + ++seq;\n-        //        @Inject @StartWhen(NEW) c1 parent;\n+        //        @Inject @ServiceDependencyType(DependencyType.SOFT) c1 parent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3d2fbd052ca923ea3c96cadc07a37b1573e8460"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDUzNDE5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#pullrequestreview-411053419", "createdAt": "2020-05-13T15:39:01Z", "commit": {"oid": "c3d2fbd052ca923ea3c96cadc07a37b1573e8460"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTozOTowMVrOGU3sFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTozOTowMVrOGU3sFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzNzExMQ==", "bodyText": "This TODO can be removed now right? or are you waiting for your other PRs?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r424537111", "createdAt": "2020-05-13T15:39:01Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -103,12 +103,12 @@\n         resolvedServiceConfig.put(SETENV_CONFIG_NAMESPACE, resolvedSetEnvConfig);\n \n         // TODO : Update package recipe format to include all information that service dependencies config\n-        // expects according to the new syntax e.g. isHotPluggable, dependency service state,\n+        // expects according to the new syntax e.g. dependencyType,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3d2fbd052ca923ea3c96cadc07a37b1573e8460"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDU2MTU1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#pullrequestreview-411056155", "createdAt": "2020-05-13T15:41:53Z", "commit": {"oid": "c3d2fbd052ca923ea3c96cadc07a37b1573e8460"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTo0MTo1M1rOGU30QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTo0MTo1M1rOGU30QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzOTIwMQ==", "bodyText": "Nit- now since you're making an effort to clean up this test, also static import verify?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r424539201", "createdAt": "2020-05-13T15:41:53Z", "author": {"login": "shaguptashaikh"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/SetupDependencyTest.java", "diffHunk": "@@ -1,63 +1,88 @@\n package com.aws.iot.evergreen.kernel;\n \n import com.aws.iot.evergreen.config.Subscriber;\n-import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.dependency.DependencyType;\n+import com.aws.iot.evergreen.kernel.exceptions.InputValidationException;\n+import com.aws.iot.evergreen.kernel.exceptions.ServiceLoadException;\n import com.aws.iot.evergreen.testcommons.testutilities.EGServiceTestUtil;\n-import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.mockito.Mockito;\n \n+import java.util.Arrays;\n import java.util.Map;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n public class SetupDependencyTest extends EGServiceTestUtil {\n \n     private EvergreenService evergreenService;\n+    private Kernel mockKernel;\n \n \n     @BeforeEach\n     void beforeEach() {\n         evergreenService = new EvergreenService(initializeMockedConfig());\n         evergreenService.context = context;\n-        Kernel mockKernel = Mockito.mock(Kernel.class);\n-        Mockito.when(context.get(Kernel.class)).thenReturn(mockKernel);\n+        mockKernel = mock(Kernel.class);\n+        when(context.get(Kernel.class)).thenReturn(mockKernel);\n     }\n \n     @Test\n     void GIVEN_no_dependencies_added_WHEN_dependency_is_added_THEN_dependency_add_successful() throws Exception {\n         // GIVEN\n-        EvergreenService dep1 = Mockito.mock(EvergreenService.class);\n+        EvergreenService dep1 = mock(EvergreenService.class);\n \n         // WHEN\n-        evergreenService.addOrUpdateDependency(dep1, State.INSTALLED, false);\n+        evergreenService.addOrUpdateDependency(dep1, DependencyType.SOFT, false);\n \n         // THEN\n-        Map<EvergreenService, State> dependencies = evergreenService.getDependencies();\n+        Map<EvergreenService, DependencyType> dependencies = evergreenService.getDependencies();\n         // verify dependency added\n-        Assertions.assertEquals(1, dependencies.size());\n-        Assertions.assertEquals(State.INSTALLED, dependencies.get(dep1));\n+        assertEquals(1, dependencies.size());\n+        assertEquals(DependencyType.SOFT, dependencies.get(dep1));\n     }\n \n     @Test\n     void GIVEN_dependency_exist_WHEN_dependency_is_updated_THEN_update_successful() throws Exception {\n         // GIVEN\n-        EvergreenService dep1 = Mockito.mock(EvergreenService.class);\n+        EvergreenService dep1 = mock(EvergreenService.class);\n \n-        evergreenService.addOrUpdateDependency(dep1, State.INSTALLED, false);\n+        evergreenService.addOrUpdateDependency(dep1, DependencyType.SOFT, false);\n         Mockito.verify(dep1).addStateSubscriber(Mockito.any(Subscriber.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3d2fbd052ca923ea3c96cadc07a37b1573e8460"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e10b864238711738a94fba0dd4faef1e9c4f926", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2e10b864238711738a94fba0dd4faef1e9c4f926", "committedDate": "2020-05-13T18:24:11Z", "message": "Support service soft dependencies in Kernel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "471e0dadab19c65c83631afa58fdba27f9218325", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/471e0dadab19c65c83631afa58fdba27f9218325", "committedDate": "2020-05-13T18:24:11Z", "message": "Address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3d2fbd052ca923ea3c96cadc07a37b1573e8460", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c3d2fbd052ca923ea3c96cadc07a37b1573e8460", "committedDate": "2020-05-12T22:34:09Z", "message": "Address comments"}, "afterCommit": {"oid": "471e0dadab19c65c83631afa58fdba27f9218325", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/471e0dadab19c65c83631afa58fdba27f9218325", "committedDate": "2020-05-13T18:24:11Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02ffb7f6a4133c2a1acfc5f8e6482d0ade81ec44", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/02ffb7f6a4133c2a1acfc5f8e6482d0ade81ec44", "committedDate": "2020-05-13T20:21:14Z", "message": "Merge branch 'master' into soft-dep"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjczNTE2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#pullrequestreview-411273516", "createdAt": "2020-05-13T20:26:34Z", "commit": {"oid": "02ffb7f6a4133c2a1acfc5f8e6482d0ade81ec44"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoyNjozNVrOGVCShA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoyNjozNVrOGVCShA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxMDc4OA==", "bodyText": "Nit - remain in its state", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#discussion_r424710788", "createdAt": "2020-05-13T20:26:35Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/dependency/DependencyType.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.dependency;\n+\n+import lombok.AllArgsConstructor;\n+\n+/**\n+ * Dependency type used for declared service dependencies.\n+ */\n+@AllArgsConstructor\n+public enum DependencyType {\n+    /**\n+     * The lifecycle of hard dependencies will impact the lifecycle of the depending service.\n+     * e.g. the depending service will be restarted by Kernel if any hard dependency errors out and tries to recover.\n+     */\n+    HARD(\"HARD\"),\n+\n+    /**\n+     * Soft dependencies have independent lifecycle from the depending service.\n+     * e.g. the depending service can remain its state if any soft dependency errors out.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02ffb7f6a4133c2a1acfc5f8e6482d0ade81ec44"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjk2MDA0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/224#pullrequestreview-411296004", "createdAt": "2020-05-13T21:00:55Z", "commit": {"oid": "02ffb7f6a4133c2a1acfc5f8e6482d0ade81ec44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2176, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}