{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNDQ0Mzg5", "number": 182, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo0MDowN1rODx2SjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMzoxMDozMFrOD0el9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTk2MzAwOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo0MDowN1rOGFjfIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzoxNzo1OFrOGIrhKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3NzQ3Mg==", "bodyText": "You don't need these if you put Test somewhere in the class name.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408477472", "createdAt": "2020-04-14T22:40:07Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.deployment.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+// TODO: This test is not ready for CI/CD yet. Need to\n+// 1. update iotClient to assume role in evergreen-beta-iad account.\n+// 2. make the host running the test accessible to corp network.\n+@Tag(\"E2E\")\n+public class DeploymentE2EWithCloudService {\n+\n+    private static String CLOUD_SERVICE_URL = \"http://eg-deployment-beta.aka.corp.amazon.com:8080/deployments\";\n+    private static String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n+    private static List<String> createdIotJobIdList = new ArrayList<>();\n+\n+    private final ObjectMapper mapper = new ObjectMapper();\n+    private final HttpClient client = HttpClients.createDefault();\n+    private Kernel kernel;\n+\n+    @TempDir\n+    Path tempRootDir;\n+\n+    @AfterEach\n+    void cleanUp() {\n+        if (kernel != null) {\n+            kernel.shutdown();\n+        }\n+    }\n+\n+    @AfterAll\n+    static void cleanUpCloudResources() {\n+        Utils.cleanAllCreatedThings();\n+        Utils.cleanAllCreatedJobs();\n+        Utils.cleanAllCreatedThingGroups();\n+        createdIotJobIdList.forEach(Utils::cleanJob);\n+    }\n+\n+    // TODO: uncomment the @Test and remove @SuppressWarnings below once the test is ready for CI/CD.\n+    // @Test\n+    @SuppressWarnings({\"PMD.SignatureDeclareThrowsException\", \"PMD.MethodNamingConventions\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NDc5NA==", "bodyText": "Rename this class to DeploymentCloudServiceIntegTest and then you don't need these.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r411754794", "createdAt": "2020-04-20T23:17:58Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.deployment.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+// TODO: This test is not ready for CI/CD yet. Need to\n+// 1. update iotClient to assume role in evergreen-beta-iad account.\n+// 2. make the host running the test accessible to corp network.\n+@Tag(\"E2E\")\n+public class DeploymentE2EWithCloudService {\n+\n+    private static String CLOUD_SERVICE_URL = \"http://eg-deployment-beta.aka.corp.amazon.com:8080/deployments\";\n+    private static String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n+    private static List<String> createdIotJobIdList = new ArrayList<>();\n+\n+    private final ObjectMapper mapper = new ObjectMapper();\n+    private final HttpClient client = HttpClients.createDefault();\n+    private Kernel kernel;\n+\n+    @TempDir\n+    Path tempRootDir;\n+\n+    @AfterEach\n+    void cleanUp() {\n+        if (kernel != null) {\n+            kernel.shutdown();\n+        }\n+    }\n+\n+    @AfterAll\n+    static void cleanUpCloudResources() {\n+        Utils.cleanAllCreatedThings();\n+        Utils.cleanAllCreatedJobs();\n+        Utils.cleanAllCreatedThingGroups();\n+        createdIotJobIdList.forEach(Utils::cleanJob);\n+    }\n+\n+    // TODO: uncomment the @Test and remove @SuppressWarnings below once the test is ready for CI/CD.\n+    // @Test\n+    @SuppressWarnings({\"PMD.SignatureDeclareThrowsException\", \"PMD.MethodNamingConventions\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3NzQ3Mg=="}, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTk4MzEzOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo0ODo1OVrOGFjraA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDowMToxMFrOGFlG8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MDYxNg==", "bodyText": "What is in this dependency that we're using?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408480616", "createdAt": "2020-04-14T22:48:59Z", "author": {"login": "MikeDombo"}, "path": "pom.xml", "diffHunk": "@@ -108,6 +108,11 @@\n             <artifactId>aws-iot-device-sdk</artifactId>\n             <version>1.0.1</version>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUwMzUzNA==", "bodyText": "The JobExecutionsRolloutConfig , RolloutConfig, etc. We are not using in this test though. Ideally this should be part of Evergreen sdk (not evergreen device sdk)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408503534", "createdAt": "2020-04-14T23:59:34Z", "author": {"login": "ShirleyZheng92"}, "path": "pom.xml", "diffHunk": "@@ -108,6 +108,11 @@\n             <artifactId>aws-iot-device-sdk</artifactId>\n             <version>1.0.1</version>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MDYxNg=="}, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUwNDA0OQ==", "bodyText": "This should be part of test dependency instead of source code dependency. I'll update that", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408504049", "createdAt": "2020-04-15T00:01:10Z", "author": {"login": "ShirleyZheng92"}, "path": "pom.xml", "diffHunk": "@@ -108,6 +108,11 @@\n             <artifactId>aws-iot-device-sdk</artifactId>\n             <version>1.0.1</version>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MDYxNg=="}, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTk4NjI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1MDoxOVrOGFjtVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzo1ODozMFrOGFlDiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTExMA==", "bodyText": "this should be private static final", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408481110", "createdAt": "2020-04-14T22:50:19Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.amazonaws.services.iot.model.AbortConfig;\n+import com.amazonaws.services.iot.model.JobExecutionsRolloutConfig;\n+import com.amazonaws.services.iot.model.TimeoutConfig;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+import java.util.Map;\n+\n+//TODO: This class should be replaced by cloud deployment service model.\n+\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@Getter\n+@Setter\n+@ToString\n+public class DeploymentRequest {\n+\n+    @JsonProperty(\"targetArn\")\n+    private String targetArn;\n+\n+    @JsonProperty(\"description\")\n+    private String description;\n+\n+    // When deploy to a thing group, runtimeSpecification stores the iot job document for the deployment.\n+    // WHen deploy to a single thing, runtimeSpecification stores the desired shadow of the device.\n+    @JsonProperty(\"runtimeSpecification\")\n+    private String runtimeSpecification;\n+\n+    @JsonProperty(\"iotJobConfiguratons\")\n+    private IotJobConfigurations iotJobConfigurations;\n+\n+    /**\n+     * Construct DeploymentRequest from DeploymentDocument.\n+     * @param targetArn thingArn or thingGroupArn\n+     * @param description description of the deployment\n+     * @param doc DeploymentDocument\n+     * @param jobConfigurations iot job configuration for thing group deployment\n+     * @throws JsonProcessingException when fail to serialize doc\n+     */\n+    public DeploymentRequest(String targetArn, String description,\n+                             DeploymentDocument doc, IotJobConfigurations jobConfigurations)\n+            throws JsonProcessingException {\n+        this.targetArn = targetArn;\n+        this.description = description;\n+\n+        ObjectMapper mapper = new ObjectMapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUwMzE3Ng==", "bodyText": "sure", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408503176", "createdAt": "2020-04-14T23:58:30Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.amazonaws.services.iot.model.AbortConfig;\n+import com.amazonaws.services.iot.model.JobExecutionsRolloutConfig;\n+import com.amazonaws.services.iot.model.TimeoutConfig;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+import java.util.Map;\n+\n+//TODO: This class should be replaced by cloud deployment service model.\n+\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@Getter\n+@Setter\n+@ToString\n+public class DeploymentRequest {\n+\n+    @JsonProperty(\"targetArn\")\n+    private String targetArn;\n+\n+    @JsonProperty(\"description\")\n+    private String description;\n+\n+    // When deploy to a thing group, runtimeSpecification stores the iot job document for the deployment.\n+    // WHen deploy to a single thing, runtimeSpecification stores the desired shadow of the device.\n+    @JsonProperty(\"runtimeSpecification\")\n+    private String runtimeSpecification;\n+\n+    @JsonProperty(\"iotJobConfiguratons\")\n+    private IotJobConfigurations iotJobConfigurations;\n+\n+    /**\n+     * Construct DeploymentRequest from DeploymentDocument.\n+     * @param targetArn thingArn or thingGroupArn\n+     * @param description description of the deployment\n+     * @param doc DeploymentDocument\n+     * @param jobConfigurations iot job configuration for thing group deployment\n+     * @throws JsonProcessingException when fail to serialize doc\n+     */\n+    public DeploymentRequest(String targetArn, String description,\n+                             DeploymentDocument doc, IotJobConfigurations jobConfigurations)\n+            throws JsonProcessingException {\n+        this.targetArn = targetArn;\n+        this.description = description;\n+\n+        ObjectMapper mapper = new ObjectMapper();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTExMA=="}, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTk4ODM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1MToyMlrOGFjurg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDowMDoxMFrOGFlFrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTQ1NA==", "bodyText": "Looks like a good change, but where is this used, how did you find a problem?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408481454", "createdAt": "2020-04-14T22:51:22Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -442,12 +442,15 @@ public void writeEffectiveConfigAsTransactionLog(Path transactionLogPath) throws\n      * @param w Writer to write config into\n      */\n     public void writeConfig(Writer w) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUwMzcyNA==", "bodyText": "I used it when verifying the demo and generated config change. We currently don't test this part.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408503724", "createdAt": "2020-04-15T00:00:10Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -442,12 +442,15 @@ public void writeEffectiveConfigAsTransactionLog(Path transactionLogPath) throws\n      * @param w Writer to write config into\n      */\n     public void writeConfig(Writer w) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTQ1NA=="}, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjIxOTYyOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDo0MzozMlrOGFl2vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDo0MzozMlrOGFl2vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxNjI4NQ==", "bodyText": "Use logger?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408516285", "createdAt": "2020-04-15T00:43:32Z", "author": {"login": "abanthiy"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.deployment.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+// TODO: This test is not ready for CI/CD yet. Need to\n+// 1. update iotClient to assume role in evergreen-beta-iad account.\n+// 2. make the host running the test accessible to corp network.\n+@Tag(\"E2E\")\n+public class DeploymentE2EWithCloudService {\n+\n+    private static String CLOUD_SERVICE_URL = \"http://eg-deployment-beta.aka.corp.amazon.com:8080/deployments\";\n+    private static String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n+    private static List<String> createdIotJobIdList = new ArrayList<>();\n+\n+    private final ObjectMapper mapper = new ObjectMapper();\n+    private final HttpClient client = HttpClients.createDefault();\n+    private Kernel kernel;\n+\n+    @TempDir\n+    Path tempRootDir;\n+\n+    @AfterEach\n+    void cleanUp() {\n+        if (kernel != null) {\n+            kernel.shutdown();\n+        }\n+    }\n+\n+    @AfterAll\n+    static void cleanUpCloudResources() {\n+        Utils.cleanAllCreatedThings();\n+        Utils.cleanAllCreatedJobs();\n+        Utils.cleanAllCreatedThingGroups();\n+        createdIotJobIdList.forEach(Utils::cleanJob);\n+    }\n+\n+    // TODO: uncomment the @Test and remove @SuppressWarnings below once the test is ready for CI/CD.\n+    // @Test\n+    @SuppressWarnings({\"PMD.SignatureDeclareThrowsException\", \"PMD.MethodNamingConventions\"})\n+    void GIVEN_blank_kernel_WHEN_create_deployment_on_thing_group_THEN_new_services_deployed_and_job_is_successful() throws Exception {\n+        System.setProperty(\"root\", tempRootDir.toString());\n+        Kernel kernel = new Kernel().parseArgs(\"-i\", getClass().getResource(\"blank_config.yaml\").toString());\n+\n+        Path localStoreContentPath = Paths.get(getClass().getResource(\"local_store_content\").getPath());\n+        // pre-load contents to package store\n+        copyFolderRecursively(localStoreContentPath, kernel.packageStorePath);\n+\n+        Utils.ThingInfo thingInfo = Utils.createThing();\n+        Utils.injectIotResourcesIntoKernel(tempRootDir, kernel, thingInfo);\n+\n+        kernel.launch();\n+\n+        // Create thing group and deployment\n+        String thingGroupArn = Utils.createThingGroupAndAddThing(thingInfo);\n+        DeploymentDocument document = DeploymentDocument.builder().timestamp(System.currentTimeMillis())\n+                .deploymentId(UUID.randomUUID().toString()).rootPackages(Arrays.asList(\"CustomerApp\", \"SomeService\"))\n+                .deploymentPackageConfigurationList(Arrays.asList(\n+                        new DeploymentPackageConfiguration(\"CustomerApp\", \"1.0.0\", null, null, null),\n+                        new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null))).build();\n+\n+        String jobId1 = sendCreateDeploymentRequest(thingGroupArn, document);\n+\n+        // wait until deployment complete\n+        Utils.waitForJobToComplete(jobId1, thingInfo.thingName, Duration.ofMinutes(2));\n+\n+        assertEquals(State.FINISHED, kernel.getMain().getState());\n+        assertEquals(State.FINISHED, kernel.locate(\"CustomerApp\").getState());\n+        assertEquals(State.FINISHED, kernel.locate(\"SomeService\").getState());\n+    }\n+\n+    @SuppressWarnings({\"PMD.SystemPrintln\"})\n+    private String sendCreateDeploymentRequest(String targetThingGroupArn, DeploymentDocument document)\n+            throws IOException {\n+        // construct http request\n+        HttpPost request = new HttpPost(CLOUD_SERVICE_URL);\n+        request.setHeader(HTTP_HEADER_ETAG, UUID.randomUUID().toString());\n+\n+        String body = mapper.writeValueAsString(new DeploymentRequest(targetThingGroupArn,\n+                \"Thing deployment\", document, null));\n+        System.out.println(\"createDeployment request: \" + body);\n+\n+        HttpEntity entity = new StringEntity(body, ContentType.APPLICATION_JSON);\n+        request.setEntity(entity);\n+\n+        // Calling cloud service\n+        HttpResponse response = client.execute(request);\n+\n+        JsonNode responseJson = mapper.readTree(response.getEntity().getContent());\n+        System.out.println(\"createDeployment response: \" + response.getStatusLine());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjI0MzMzOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDo1NjoyN1rOGFmEgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDo1NjoyN1rOGFmEgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxOTgxMQ==", "bodyText": "It will be safer to do this after each test. If a particular test leaves a job in a non-terminal state then that might show up when kernel is spun up for next test", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408519811", "createdAt": "2020-04-15T00:56:27Z", "author": {"login": "abanthiy"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.deployment.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+// TODO: This test is not ready for CI/CD yet. Need to\n+// 1. update iotClient to assume role in evergreen-beta-iad account.\n+// 2. make the host running the test accessible to corp network.\n+@Tag(\"E2E\")\n+public class DeploymentE2EWithCloudService {\n+\n+    private static String CLOUD_SERVICE_URL = \"http://eg-deployment-beta.aka.corp.amazon.com:8080/deployments\";\n+    private static String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n+    private static List<String> createdIotJobIdList = new ArrayList<>();\n+\n+    private final ObjectMapper mapper = new ObjectMapper();\n+    private final HttpClient client = HttpClients.createDefault();\n+    private Kernel kernel;\n+\n+    @TempDir\n+    Path tempRootDir;\n+\n+    @AfterEach\n+    void cleanUp() {\n+        if (kernel != null) {\n+            kernel.shutdown();\n+        }\n+    }\n+\n+    @AfterAll\n+    static void cleanUpCloudResources() {\n+        Utils.cleanAllCreatedThings();\n+        Utils.cleanAllCreatedJobs();\n+        Utils.cleanAllCreatedThingGroups();\n+        createdIotJobIdList.forEach(Utils::cleanJob);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjI1MzEyOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMTowMjowNVrOGFmKaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMTowMjowNVrOGFmKaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMTMyMw==", "bodyText": "Similar method is being constructed in this PR - https://github.com/aws/aws-greengrass-kernel/pull/178/files#diff-150ba62b88e9461f4ecbac18d92cbae2R120\nAlso applied for the inject method in this file as well.\nIf possible sync with @hui-yang w.r.t that PR, so we use the more generic method and avoid resolving conflicts later on", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408521323", "createdAt": "2020-04-15T01:02:05Z", "author": {"login": "abanthiy"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "diffHunk": "@@ -93,6 +112,45 @@ public static void waitForJobToComplete(String jobId, Duration timeout) throws T\n         throw new TimeoutException();\n     }\n \n+    public static void waitForJobToComplete(String jobId, String thingName, Duration timeout) throws TimeoutException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjI1NTk5OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMTowMzo0MlrOGFmMGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNDozMFrOGGH7yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMTc1Mw==", "bodyText": "I would add some documentation to this method. Also would prefer changing name to something like updatingKernelConfigWithIotConfiguration.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408521753", "createdAt": "2020-04-15T01:03:42Z", "author": {"login": "abanthiy"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "diffHunk": "@@ -228,4 +293,25 @@ public static void downloadFileFromURL(String url, File f) throws IOException {\n         }\n         throw lastException;\n     }\n+\n+    public static void injectIotResourcesIntoKernel(Path rootDir, Kernel kernel, Utils.ThingInfo thing) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NDYzMw==", "bodyText": "Ok", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r409074633", "createdAt": "2020-04-15T19:14:30Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "diffHunk": "@@ -228,4 +293,25 @@ public static void downloadFileFromURL(String url, File f) throws IOException {\n         }\n         throw lastException;\n     }\n+\n+    public static void injectIotResourcesIntoKernel(Path rootDir, Kernel kernel, Utils.ThingInfo thing) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMTc1Mw=="}, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjI1ODk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMTowNToyMFrOGFmNzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOToxNDo0MFrOGGH8Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMjE5MA==", "bodyText": "We will not need this class in the src right? This is only required in test, so can just put it under integrationtest directory? What documentation are we referring to create this model? Add a link to that documentation. It will be helpful till the time model is not available from cloud.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r408522190", "createdAt": "2020-04-15T01:05:20Z", "author": {"login": "abanthiy"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.amazonaws.services.iot.model.AbortConfig;\n+import com.amazonaws.services.iot.model.JobExecutionsRolloutConfig;\n+import com.amazonaws.services.iot.model.TimeoutConfig;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+import java.util.Map;\n+\n+//TODO: This class should be replaced by cloud deployment service model.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NDcxNQ==", "bodyText": "Moved to test", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r409074715", "createdAt": "2020-04-15T19:14:40Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentRequest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.amazonaws.services.iot.model.AbortConfig;\n+import com.amazonaws.services.iot.model.JobExecutionsRolloutConfig;\n+import com.amazonaws.services.iot.model.TimeoutConfig;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+import java.util.Map;\n+\n+//TODO: This class should be replaced by cloud deployment service model.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMjE5MA=="}, "originalCommit": {"oid": "7a981b789366280fa0fc65daead5d23d7ae5b155"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODE0ODgyOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzoxNjo0MlrOGIrfYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzoxNjo0MlrOGIrfYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NDMzNg==", "bodyText": "updating doesn't make much sense, change to update?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r411754336", "createdAt": "2020-04-20T23:16:42Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -252,24 +236,11 @@ void GIVEN_deployment_fails_due_to_service_broken_WHEN_deploy_fix_THEN_service_r\n     }\n \n     private void setupIotResourcesAndInjectIntoKernel() throws IOException {\n-        Utils.downloadRootCAToFile(new File(rootCaFilePath));\n         thing = Utils.createThing();\n-        try (CommitableFile cf = CommitableFile.of(new File(privateKeyFilePath).toPath(), true)) {\n-            cf.write(thing.keyPair.privateKey().getBytes(StandardCharsets.UTF_8));\n-        }\n-        try (CommitableFile cf = CommitableFile.of(new File(certificateFilePath).toPath(), true)) {\n-            cf.write(thing.certificatePem.getBytes(StandardCharsets.UTF_8));\n-        }\n-\n-        Topics deploymentServiceTopics = kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, \"DeploymentService\");\n-        deploymentServiceTopics.createLeafChild(DEVICE_PARAM_THING_NAME).withValue(thing.thingName);\n-        deploymentServiceTopics.createLeafChild(DEVICE_PARAM_MQTT_CLIENT_ENDPOINT).withValue(thing.endpoint);\n-        deploymentServiceTopics.createLeafChild(DEVICE_PARAM_PRIVATE_KEY_PATH).withValue(privateKeyFilePath);\n-        deploymentServiceTopics.createLeafChild(DEVICE_PARAM_CERTIFICATE_FILE_PATH).withValue(certificateFilePath);\n-        deploymentServiceTopics.createLeafChild(DEVICE_PARAM_ROOT_CA_PATH).withValue(rootCaFilePath);\n+        Utils.updatingKernelConfigWithIotConfiguration(kernel, thing);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bb37bfb54e442726354a117bf717dc683bcf96e"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODE1MDc5OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzoxNzoyNFrOGIrgcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzoxNzoyNFrOGIrgcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NDYwOQ==", "bodyText": "Remove todo if possible, otherwise we can't merge this, right? It would break all our tests.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r411754609", "createdAt": "2020-04-20T23:17:24Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2EWithCloudService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.integrationtests.e2e.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+// TODO: This test is not ready for CI/CD yet. Need to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bb37bfb54e442726354a117bf717dc683bcf96e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODE1NTYwOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzoxOToyMFrOGIrjIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMzozOToxM1rOGJc88w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NTI5OQ==", "bodyText": "This doesn't seem very good, use retry to get around this issue.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r411755299", "createdAt": "2020-04-20T23:19:20Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "diffHunk": "@@ -93,6 +112,45 @@ public static void waitForJobToComplete(String jobId, Duration timeout) throws T\n         throw new TimeoutException();\n     }\n \n+    public static void waitForJobExecutionToComplete(String jobId, String thingName, Duration timeout) throws TimeoutException {\n+        Instant start = Instant.now();\n+        // sleep a while so that the job execution is available in cloud.\n+        try {\n+            Thread.sleep(10_000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bb37bfb54e442726354a117bf717dc683bcf96e"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyNDMzNQ==", "bodyText": "Can we remove the sleep please?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r412524335", "createdAt": "2020-04-21T22:06:15Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "diffHunk": "@@ -93,6 +112,45 @@ public static void waitForJobToComplete(String jobId, Duration timeout) throws T\n         throw new TimeoutException();\n     }\n \n+    public static void waitForJobExecutionToComplete(String jobId, String thingName, Duration timeout) throws TimeoutException {\n+        Instant start = Instant.now();\n+        // sleep a while so that the job execution is available in cloud.\n+        try {\n+            Thread.sleep(10_000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NTI5OQ=="}, "originalCommit": {"oid": "2bb37bfb54e442726354a117bf717dc683bcf96e"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU2NDcyMw==", "bodyText": "If create-deployment is a synchronous API this wait should not be needed right? Anyway you are retrying on ResourceNotFound. Might have to adjust the backoff times to ensure this.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r412564723", "createdAt": "2020-04-21T23:39:13Z", "author": {"login": "abanthiy"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/util/Utils.java", "diffHunk": "@@ -93,6 +112,45 @@ public static void waitForJobToComplete(String jobId, Duration timeout) throws T\n         throw new TimeoutException();\n     }\n \n+    public static void waitForJobExecutionToComplete(String jobId, String thingName, Duration timeout) throws TimeoutException {\n+        Instant start = Instant.now();\n+        // sleep a while so that the job execution is available in cloud.\n+        try {\n+            Thread.sleep(10_000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1NTI5OQ=="}, "originalCommit": {"oid": "2bb37bfb54e442726354a117bf717dc683bcf96e"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzUzNzgxOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMzoxMDozMFrOGJcPmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMzoxMDozMFrOGJcPmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU1MzExNQ==", "bodyText": "Comment does not apply to what is happening here", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/182#discussion_r412553115", "createdAt": "2020-04-21T23:10:30Z", "author": {"login": "abanthiy"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentCloudServiceIntegTest.java", "diffHunk": "@@ -0,0 +1,165 @@\n+package com.aws.iot.evergreen.integrationtests.e2e.deployment;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static com.aws.iot.evergreen.integrationtests.e2e.deployment.DeploymentE2ETest.copyFolderRecursively;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.model.DeploymentDocument;\n+import com.aws.iot.evergreen.deployment.model.DeploymentPackageConfiguration;\n+import com.aws.iot.evergreen.integrationtests.e2e.model.DeploymentRequest;\n+import com.aws.iot.evergreen.integrationtests.e2e.util.Utils;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+import software.amazon.awssdk.auth.credentials.AwsSessionCredentials;\n+import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.services.iot.IotClient;\n+import software.amazon.awssdk.services.sts.StsClient;\n+import software.amazon.awssdk.services.sts.model.AssumeRoleRequest;\n+import software.amazon.awssdk.services.sts.model.AssumeRoleResponse;\n+import software.amazon.awssdk.services.sts.model.Credentials;\n+\n+@Tag(\"E2E\")\n+public class DeploymentCloudServiceIntegTest {\n+\n+    private static String CLOUD_SERVICE_URL\n+            = \"http://everg-everg-h5kz3uxz114v-1885244560.us-east-1.elb.amazonaws.com/deployments\";\n+\n+    //TODO: after cloud service support creating deployments for things in custom accounts, remove the assume role.\n+    private static String assumeRoleArn = \"arn:aws:iam::432173944312:role/EvergreenDeviceTestAssumeRole\";\n+    private static String HTTP_HEADER_ETAG = \"x-amzn-iot-eg-etag\";\n+    private static List<String> createdIotJobIdList = new ArrayList<>();\n+\n+    private final ObjectMapper mapper = new ObjectMapper();\n+    private final HttpClient client = HttpClients.createDefault();\n+    private final Logger logger = LogManager.getLogger(this.getClass());\n+    private Kernel kernel;\n+\n+    private static IotClient iotClient;\n+\n+    @TempDir\n+    Path tempRootDir;\n+\n+    @BeforeAll\n+    @SuppressWarnings(\"PMD.CloseResource\")\n+    static void setIotClient() {\n+        // create iot Thing in evergreen-beta-iad account", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99244427f333b802d78828457a740e7b5c93f7ca"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4587, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}