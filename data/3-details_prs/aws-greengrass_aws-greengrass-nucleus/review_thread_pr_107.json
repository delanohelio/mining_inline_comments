{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2ODQxNDkw", "number": 107, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxODoxODozOFrODnk0MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo0MTowMVrODnmZAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODI0MjQwOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxODoxODozOFrOF1qC1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowODo1OFrOF1trUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwNzcwMA==", "bodyText": "Nit - Dep doesn't convey very well that it's dependency, maybe we could just name is newServiceDependencies", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391807700", "createdAt": "2020-03-12T18:18:38Z", "author": {"login": "shaguptashaikh"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java", "diffHunk": "@@ -183,18 +188,22 @@ void GIVEN_kernel_running_single_service_WHEN_merge_change_adding_nested_depende\n             }\n         });\n \n-        List<String> originalRunningServices =\n+        List<String> serviceList =\n                 kernel.getMain().getDependencies().keySet().stream().map(EvergreenService::getName)\n                         .collect(Collectors.toList());\n+        serviceList.add(\"new_service\");\n+\n+        List<String> newServiceDepList = new ArrayList<String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NzIxNg==", "bodyText": "Removed due to other comments", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391867216", "createdAt": "2020-03-12T20:08:58Z", "author": {"login": "chaurah"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java", "diffHunk": "@@ -183,18 +188,22 @@ void GIVEN_kernel_running_single_service_WHEN_merge_change_adding_nested_depende\n             }\n         });\n \n-        List<String> originalRunningServices =\n+        List<String> serviceList =\n                 kernel.getMain().getDependencies().keySet().stream().map(EvergreenService::getName)\n                         .collect(Collectors.toList());\n+        serviceList.add(\"new_service\");\n+\n+        List<String> newServiceDepList = new ArrayList<String>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwNzcwMA=="}, "originalCommit": {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODQ0NzY1OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOToyMzozNFrOF1sGfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowOTowOFrOF1tr3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0MTQwNw==", "bodyText": "I prefer use Arrays.asList(\"new_service2\") instead of constructing the object outside.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391841407", "createdAt": "2020-03-12T19:23:34Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java", "diffHunk": "@@ -183,18 +188,22 @@ void GIVEN_kernel_running_single_service_WHEN_merge_change_adding_nested_depende\n             }\n         });\n \n-        List<String> originalRunningServices =\n+        List<String> serviceList =\n                 kernel.getMain().getDependencies().keySet().stream().map(EvergreenService::getName)\n                         .collect(Collectors.toList());\n+        serviceList.add(\"new_service\");\n+\n+        List<String> newServiceDepList = new ArrayList<String>();\n+        newServiceDepList.add(\"new_service2\");\n         kernel.mergeInNewConfig(\"id\", System.currentTimeMillis(), new HashMap<Object, Object>() {{\n             put(\"services\", new HashMap<Object, Object>() {{\n                 put(\"main\",new HashMap<Object, Object>() {{\n-                    put(\"requires\", String.join(\",\", originalRunningServices) + \",new_service\");\n+                    put(\"dependencies\", serviceList);\n                 }});\n \n                 put(\"new_service\",new HashMap<Object, Object>() {{\n                     put(\"run\", \"sleep 60\");\n-                    put(\"requires\", \"new_service2\");\n+                    put(\"dependencies\", newServiceDepList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NzM1Ng==", "bodyText": "Done", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391867356", "createdAt": "2020-03-12T20:09:08Z", "author": {"login": "chaurah"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java", "diffHunk": "@@ -183,18 +188,22 @@ void GIVEN_kernel_running_single_service_WHEN_merge_change_adding_nested_depende\n             }\n         });\n \n-        List<String> originalRunningServices =\n+        List<String> serviceList =\n                 kernel.getMain().getDependencies().keySet().stream().map(EvergreenService::getName)\n                         .collect(Collectors.toList());\n+        serviceList.add(\"new_service\");\n+\n+        List<String> newServiceDepList = new ArrayList<String>();\n+        newServiceDepList.add(\"new_service2\");\n         kernel.mergeInNewConfig(\"id\", System.currentTimeMillis(), new HashMap<Object, Object>() {{\n             put(\"services\", new HashMap<Object, Object>() {{\n                 put(\"main\",new HashMap<Object, Object>() {{\n-                    put(\"requires\", String.join(\",\", originalRunningServices) + \",new_service\");\n+                    put(\"dependencies\", serviceList);\n                 }});\n \n                 put(\"new_service\",new HashMap<Object, Object>() {{\n                     put(\"run\", \"sleep 60\");\n-                    put(\"requires\", \"new_service2\");\n+                    put(\"dependencies\", newServiceDepList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0MTQwNw=="}, "originalCommit": {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODQ2MTI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOToyNzo1NlrOF1sO6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowOToxN1rOF1tsXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0MzU2MA==", "bodyText": "NIT: since you remove the comma-separated string, using regex parse may be too  much here. Just use String.split(\":\")", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391843560", "createdAt": "2020-03-12T19:27:56Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -783,15 +788,17 @@ public void postInject() {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(String dependencyList) throws Exception {\n-        Matcher m = DEP_PARSE.matcher(dependencyList);\n+    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();\n-        while (m.find()) {\n-            Pair<EvergreenService, State> dep = parseSingleDependency(m.group(1), m.group(3));\n-            ret.put(dep.getLeft(), dep.getRight());\n-        }\n-        if (!m.hitEnd()) {\n-            throw new Exception(\"Bad dependency syntax\");\n+        for (String depName : dependencyList) {\n+            Matcher m = DEP_PARSE.matcher(depName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NzQ4NQ==", "bodyText": "Updated", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391867485", "createdAt": "2020-03-12T20:09:17Z", "author": {"login": "chaurah"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -783,15 +788,17 @@ public void postInject() {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(String dependencyList) throws Exception {\n-        Matcher m = DEP_PARSE.matcher(dependencyList);\n+    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();\n-        while (m.find()) {\n-            Pair<EvergreenService, State> dep = parseSingleDependency(m.group(1), m.group(3));\n-            ret.put(dep.getLeft(), dep.getRight());\n-        }\n-        if (!m.hitEnd()) {\n-            throw new Exception(\"Bad dependency syntax\");\n+        for (String depName : dependencyList) {\n+            Matcher m = DEP_PARSE.matcher(depName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0MzU2MA=="}, "originalCommit": {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODQ5ODIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo0MDoyM1rOF1sltA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowOTozNFrOF1ttWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0OTM5Ng==", "bodyText": "Pattern needs to change now? We don't expect \",;\" at the end of these strings now?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391849396", "createdAt": "2020-03-12T19:40:23Z", "author": {"login": "abanthiy"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -783,15 +788,17 @@ public void postInject() {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(String dependencyList) throws Exception {\n-        Matcher m = DEP_PARSE.matcher(dependencyList);\n+    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();\n-        while (m.find()) {\n-            Pair<EvergreenService, State> dep = parseSingleDependency(m.group(1), m.group(3));\n-            ret.put(dep.getLeft(), dep.getRight());\n-        }\n-        if (!m.hitEnd()) {\n-            throw new Exception(\"Bad dependency syntax\");\n+        for (String depName : dependencyList) {\n+            Matcher m = DEP_PARSE.matcher(depName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NzczNg==", "bodyText": "Pattern has been replaced with split.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391867736", "createdAt": "2020-03-12T20:09:34Z", "author": {"login": "chaurah"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -783,15 +788,17 @@ public void postInject() {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(String dependencyList) throws Exception {\n-        Matcher m = DEP_PARSE.matcher(dependencyList);\n+    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();\n-        while (m.find()) {\n-            Pair<EvergreenService, State> dep = parseSingleDependency(m.group(1), m.group(3));\n-            ret.put(dep.getLeft(), dep.getRight());\n-        }\n-        if (!m.hitEnd()) {\n-            throw new Exception(\"Bad dependency syntax\");\n+        for (String depName : dependencyList) {\n+            Matcher m = DEP_PARSE.matcher(depName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0OTM5Ng=="}, "originalCommit": {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODUwMDQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo0MTowMVrOF1snDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowOTo1MFrOF1tuHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0OTc0Mw==", "bodyText": "Would prefer a better naming here. Just indicate what the map is", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391849743", "createdAt": "2020-03-12T19:41:01Z", "author": {"login": "abanthiy"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -783,15 +788,17 @@ public void postInject() {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(String dependencyList) throws Exception {\n-        Matcher m = DEP_PARSE.matcher(dependencyList);\n+    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NzkzMw==", "bodyText": "Updated", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/107#discussion_r391867933", "createdAt": "2020-03-12T20:09:50Z", "author": {"login": "chaurah"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -783,15 +788,17 @@ public void postInject() {\n         }).start();\n     }\n \n-    private Map<EvergreenService, State> parseDependencyList(String dependencyList) throws Exception {\n-        Matcher m = DEP_PARSE.matcher(dependencyList);\n+    private Map<EvergreenService, State> parseDependencyList(List<String> dependencyList) throws Exception {\n         HashMap<EvergreenService, State> ret = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0OTc0Mw=="}, "originalCommit": {"oid": "45de19c4026fcc8a9d7ba31d4e85b8ceaa1a2b8a"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4885, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}