{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NTQ5MzQx", "number": 454, "title": "Rename Evergreen to Greengrass", "bodyText": "Issue #, if available:\nDescription of changes:\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-09-18T21:30:21Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454", "merged": true, "mergeCommit": {"oid": "1e80f131925163ed8078b2673137a48f809c5fc1"}, "closed": true, "closedAt": "2020-09-18T22:37:26Z", "author": {"login": "MikeDombo"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKMjytAFqTQ5MTc5MzQ3MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKNdswgFqTQ5MTgxNjc0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzkzNDcw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#pullrequestreview-491793470", "createdAt": "2020-09-18T21:34:26Z", "commit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDoyNlrOHUcg6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDoyNlrOHUcg6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMDc0NA==", "bodyText": "Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.\nProblem: InterruptedException is ignored. This can delay thread shutdown and clear the thread\u2019s interrupt status. Only code that implements a thread\u2019s interruption policy can swallow an interruption request.\nFix: Rethrow the InterruptedException or reinterrupt the current thread using Thread.currentThread().interrupt() so that higher-level interrupt handlers can function correctly.\nIf you are wrapping the InterruptedException inside a RuntimeException, call Thread.currentThread().interrupt() before throwing the RuntimeException.\nLearn more about interrupts and dealing with InterruptedException", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#discussion_r491200744", "createdAt": "2020-09-18T21:34:26Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GenericExternalService.java", "diffHunk": "@@ -286,7 +285,7 @@ private synchronized void handleRunScript() throws InterruptedException {\n     protected synchronized void shutdown() {\n         logger.atInfo().log(\"Shutdown initiated\");\n         try {\n-            run(LIFECYCLE_SHUTDOWN_NAMESPACE_TOPIC, null, lifecycleProcesses);\n+            run(Lifecycle.LIFECYCLE_SHUTDOWN_NAMESPACE_TOPIC, null, lifecycleProcesses);\n         } catch (InterruptedException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "originalPosition": 135}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzkzNTAw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#pullrequestreview-491793500", "createdAt": "2020-09-18T21:34:29Z", "commit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDoyOVrOHUchBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDoyOVrOHUchBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMDc3Mw==", "bodyText": "Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.\nProblem: InterruptedException is ignored. This can delay thread shutdown and clear the thread\u2019s interrupt status. Only code that implements a thread\u2019s interruption policy can swallow an interruption request.\nFix: Rethrow the InterruptedException or reinterrupt the current thread using Thread.currentThread().interrupt() so that higher-level interrupt handlers can function correctly.\nIf you are wrapping the InterruptedException inside a RuntimeException, call Thread.currentThread().interrupt() before throwing the RuntimeException.\nLearn more about interrupts and dealing with InterruptedException", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#discussion_r491200773", "createdAt": "2020-09-18T21:34:29Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/Lifecycle.java", "diffHunk": "@@ -400,11 +400,11 @@ private void handleCurrentStateNew(Optional<State> desiredState) throws Interrup\n                 return;\n             }\n             try {\n-                evergreenService.install();\n+                greengrassService.install();\n             } catch (InterruptedException t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzkzNTE4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#pullrequestreview-491793518", "createdAt": "2020-09-18T21:34:31Z", "commit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDozMVrOHUchEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDozMVrOHUchEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMDc4Ng==", "bodyText": "Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.\nProblem: InterruptedException is ignored. This can delay thread shutdown and clear the thread\u2019s interrupt status. Only code that implements a thread\u2019s interruption policy can swallow an interruption request.\nFix: Rethrow the InterruptedException or reinterrupt the current thread using Thread.currentThread().interrupt() so that higher-level interrupt handlers can function correctly.\nIf you are wrapping the InterruptedException inside a RuntimeException, call Thread.currentThread().interrupt() before throwing the RuntimeException.\nLearn more about interrupts and dealing with InterruptedException", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#discussion_r491200786", "createdAt": "2020-09-18T21:34:31Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/Lifecycle.java", "diffHunk": "@@ -530,13 +530,13 @@ private void handleCurrentStateRunning(Optional<State> desiredState) {\n     private void handleCurrentStateStopping() throws InterruptedException {\n         // does not handle desiredState in STOPPING because we must stop first.\n         // does not use setBackingTask because it will cancel the existing task.\n-        Future<?> shutdownFuture = evergreenService.getContext().get(ExecutorService.class).submit(() -> {\n+        Future<?> shutdownFuture = greengrassService.getContext().get(ExecutorService.class).submit(() -> {\n             try {\n-                evergreenService.shutdown();\n+                greengrassService.shutdown();\n             } catch (InterruptedException i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "originalPosition": 139}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzkzNTMy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#pullrequestreview-491793532", "createdAt": "2020-09-18T21:34:35Z", "commit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDozNVrOHUchJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDozNVrOHUchJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMDgwNA==", "bodyText": "Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.\nProblem: InterruptedException is ignored. This can delay thread shutdown and clear the thread\u2019s interrupt status. Only code that implements a thread\u2019s interruption policy can swallow an interruption request.\nFix: Rethrow the InterruptedException or reinterrupt the current thread using Thread.currentThread().interrupt() so that higher-level interrupt handlers can function correctly.\nIf you are wrapping the InterruptedException inside a RuntimeException, call Thread.currentThread().interrupt() before throwing the RuntimeException.\nLearn more about interrupts and dealing with InterruptedException", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#discussion_r491200804", "createdAt": "2020-09-18T21:34:35Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/Lifecycle.java", "diffHunk": "@@ -440,7 +440,7 @@ private void handleCurrentStateInstalledAsync(Optional<State> desiredState,\n         replaceBackingTask(() -> {\n             try {\n                 logger.atInfo(\"service-awaiting-start\").log(\"waiting for dependencies to start\");\n-                evergreenService.waitForDependencyReady();\n+                greengrassService.waitForDependencyReady();\n                 logger.atInfo(\"service-starting\").log();\n                 internalReportState(State.STARTING);\n             } catch (InterruptedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzkzNTUw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#pullrequestreview-491793550", "createdAt": "2020-09-18T21:34:38Z", "commit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDozOFrOHUchMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDozOFrOHUchMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMDgxNw==", "bodyText": "Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.\nProblem: While wrapping the caught exception into a custom one, information about the caught exception is being lost, including information about the stack trace of the exception.\nFix: If the caught exception object does not contain sensitive information, consider passing it as the \"rootCause\" or inner exception parameter to the constructor of the new exception before throwing the new exception. (Note that not all exception constructors support inner exceptions. Use a wrapper exception that supports inner exceptions.)\nLearn more", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#discussion_r491200817", "createdAt": "2020-09-18T21:34:38Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DefaultDeploymentTask.java", "diffHunk": "@@ -115,7 +115,7 @@ public DeploymentResult call()\n             logger.atInfo(DEPLOYMENT_TASK_EVENT_TYPE).setEventType(DEPLOYMENT_TASK_EVENT_TYPE)\n                     .log(\"Finished deployment task\");\n             return result;\n-        } catch (PackageVersionConflictException | UnexpectedPackagingException e) {\n+        } catch (ComponentVersionConflictException | UnexpectedPackagingException e) {\n             throw new NonRetryableDeploymentTaskFailureException(e);\n         } catch (ExecutionException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzkzNTkz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#pullrequestreview-491793593", "createdAt": "2020-09-18T21:34:44Z", "commit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDo0NFrOHUchVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozNDo0NFrOHUchVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMDg1NA==", "bodyText": "Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.\nProblem: InterruptedException is ignored. This can delay thread shutdown and clear the thread\u2019s interrupt status. Only code that implements a thread\u2019s interruption policy can swallow an interruption request.\nFix: Rethrow the InterruptedException or reinterrupt the current thread using Thread.currentThread().interrupt() so that higher-level interrupt handlers can function correctly.\nIf you are wrapping the InterruptedException inside a RuntimeException, call Thread.currentThread().interrupt() before throwing the RuntimeException.\nLearn more about interrupts and dealing with InterruptedException", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#discussion_r491200854", "createdAt": "2020-09-18T21:34:44Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/Lifecycle.java", "diffHunk": "@@ -478,23 +478,23 @@ private void handleStateTransitionStartingToRunningAsync(AtomicReference<Predica\n         Integer timeout = getTimeoutConfigValue(\n                 LIFECYCLE_STARTUP_NAMESPACE_TOPIC, DEFAULT_STARTUP_STAGE_TIMEOUT_IN_SEC);\n         Future<?> schedule =\n-            evergreenService.getContext().get(ScheduledExecutorService.class).schedule(() -> {\n+            greengrassService.getContext().get(ScheduledExecutorService.class).schedule(() -> {\n                 if (getState().equals(State.STARTING) && currentStateGeneration == getStateGeneration().get()) {\n-                    evergreenService.serviceErrored(\"startup timeout\");\n+                    greengrassService.serviceErrored(\"startup timeout\");\n                 }\n             }, timeout, TimeUnit.SECONDS);\n \n         replaceBackingTask(() -> {\n             try {\n-                if (!evergreenService.dependencyReady()) {\n+                if (!greengrassService.dependencyReady()) {\n                     internalReportState(State.INSTALLED);\n                     return;\n                 }\n-                evergreenService.startup();\n+                greengrassService.startup();\n             } catch (InterruptedException i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "originalPosition": 122}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dd927c3cd381d3505f3262227520796448cf158f", "committedDate": "2020-09-18T21:29:05Z", "message": "Rename Evergreen to Greengrass"}, "afterCommit": {"oid": "1edf6635a263a3fdc9d634f19d3dcbfa108ca9c7", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1edf6635a263a3fdc9d634f19d3dcbfa108ca9c7", "committedDate": "2020-09-18T21:46:37Z", "message": "Rename Evergreen to Greengrass"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1edf6635a263a3fdc9d634f19d3dcbfa108ca9c7", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1edf6635a263a3fdc9d634f19d3dcbfa108ca9c7", "committedDate": "2020-09-18T21:46:37Z", "message": "Rename Evergreen to Greengrass"}, "afterCommit": {"oid": "e6ff7112c5bab501f2f3d0c0e27603c11e19734b", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e6ff7112c5bab501f2f3d0c0e27603c11e19734b", "committedDate": "2020-09-18T21:48:03Z", "message": "Rename Evergreen to Greengrass"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzk4NDUz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#pullrequestreview-491798453", "createdAt": "2020-09-18T21:43:01Z", "commit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTo0MzowMVrOHUcrvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTo0OTo0OVrOHUc3VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMzUxNw==", "bodyText": "Do we need to update artifact name as well according to the table?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#discussion_r491203517", "createdAt": "2020-09-18T21:43:01Z", "author": {"login": "hui-yang"}, "path": "aws.greengrass.Nucleus-2.0.0.yaml", "diffHunk": "@@ -1,7 +1,7 @@\n ---\n RecipeFormatVersion: '2020-01-25'\n-ComponentName: aws.greengrass.core\n-ComponentDescription: Core functionality for device side orchestration of deployments and life-cycle management for execution of Greengrass components and applications.\n+ComponentName: aws.greengrass.Nucleus", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd927c3cd381d3505f3262227520796448cf158f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwNjIxMg==", "bodyText": "Also outdated", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#discussion_r491206212", "createdAt": "2020-09-18T21:49:23Z", "author": {"login": "hui-yang"}, "path": "src/integrationtests/resources/com/aws/greengrass/integrationtests/e2e/local_store_content/recipes/README.md", "diffHunk": "@@ -11,7 +11,7 @@ ensure local and Github results are the same for local debugging purpose.\n See the following for an example:\n \n ```yaml\n-TemplateVersion: '2020-01-25'\n+RecipeFormatVersion: '2020-01-25'\n ComponentName: {{SlowToDeployApp}}\n Description: An app that takes some time to install so as to slow down deployments\n Publisher: Me", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ff7112c5bab501f2f3d0c0e27603c11e19734b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwNjQ4NA==", "bodyText": "kernel => lifecyclemanager", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#discussion_r491206484", "createdAt": "2020-09-18T21:49:49Z", "author": {"login": "hui-yang"}, "path": "src/integrationtests/resources/com/aws/greengrass/integrationtests/lifecyclemanager/plugin_dependency.yaml", "diffHunk": "@@ -4,7 +4,7 @@ services:\n     version: 1.0.0\n     componentType: PLUGIN\n   plugin-dependency:\n-    class: com.aws.iot.evergreen.integrationtests.kernel.resource.PluginDependencyService\n+    class: com.aws.greengrass.integrationtests.kernel.resource.PluginDependencyService", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ff7112c5bab501f2f3d0c0e27603c11e19734b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cf7f737baf5db0e744fe168aa06ab3746683cdf", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0cf7f737baf5db0e744fe168aa06ab3746683cdf", "committedDate": "2020-09-18T22:06:29Z", "message": "Rename Evergreen to Greengrass"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6ff7112c5bab501f2f3d0c0e27603c11e19734b", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e6ff7112c5bab501f2f3d0c0e27603c11e19734b", "committedDate": "2020-09-18T21:48:03Z", "message": "Rename Evergreen to Greengrass"}, "afterCommit": {"oid": "0cf7f737baf5db0e744fe168aa06ab3746683cdf", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0cf7f737baf5db0e744fe168aa06ab3746683cdf", "committedDate": "2020-09-18T22:06:29Z", "message": "Rename Evergreen to Greengrass"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxODE1OTI2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#pullrequestreview-491815926", "createdAt": "2020-09-18T22:29:10Z", "commit": {"oid": "0cf7f737baf5db0e744fe168aa06ab3746683cdf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxODE2NjQ0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#pullrequestreview-491816644", "createdAt": "2020-09-18T22:31:35Z", "commit": {"oid": "0cf7f737baf5db0e744fe168aa06ab3746683cdf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxODE2NzQ2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#pullrequestreview-491816746", "createdAt": "2020-09-18T22:32:00Z", "commit": {"oid": "0cf7f737baf5db0e744fe168aa06ab3746683cdf"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMjozMjowMFrOHUdyIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMjozMjowMFrOHUdyIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyMTUzOA==", "bodyText": "We'll want to incorporate https://mycila.mathieu.photography/license-maven-plugin/ for keeping track of these, if we aren't already.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/454#discussion_r491221538", "createdAt": "2020-09-18T22:32:00Z", "author": {"login": "philcali"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/componentmanager/ComponentManagerIntegTest.java", "diffHunk": "@@ -1,17 +1,17 @@\n /*\n- * Copyright Amazon.com Inc. or its affiliates.\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  * SPDX-License-Identifier: Apache-2.0\n  */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cf7f737baf5db0e744fe168aa06ab3746683cdf"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2986, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}