{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNzIxMjk3", "number": 295, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTozMDozM1rOELDxOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODozNjowMlrOEMMksw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDMxNTQ3OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTozMDozM1rOGsdkAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzoxNDoyMFrOGubClw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDg4Mg==", "bodyText": "This doesn't need to be a CountDownLatch now since no one is waiting on it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r449274882", "createdAt": "2020-07-02T21:30:33Z", "author": {"login": "fufranci"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -513,21 +510,24 @@ void GIVEN_service_running_with_rollback_safe_param_WHEN_rollback_THEN_rollback_\n             put(SERVICES_NAMESPACE_TOPIC, new HashMap<Object, Object>() {{\n                 put(\"sleeperB\", new HashMap<Object, Object>() {{\n                     put(SERVICE_LIFECYCLE_NAMESPACE_TOPIC, new HashMap<Object, Object>() {{\n-                        put(LIFECYCLE_RUN_NAMESPACE_TOPIC, \"exit -1\");\n+                        put(LIFECYCLE_STARTUP_NAMESPACE_TOPIC, \"exit -1\");\n                     }});\n                 }});\n             }});\n         }};\n \n-        CountDownLatch sleeperBErrored = new CountDownLatch(1);\n+        CountDownLatch sleeperBBroken = new CountDownLatch(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzMDcxMQ==", "bodyText": "Updated to use atomicboolean", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451330711", "createdAt": "2020-07-08T07:14:20Z", "author": {"login": "fahadmohammed01"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -513,21 +510,24 @@ void GIVEN_service_running_with_rollback_safe_param_WHEN_rollback_THEN_rollback_\n             put(SERVICES_NAMESPACE_TOPIC, new HashMap<Object, Object>() {{\n                 put(\"sleeperB\", new HashMap<Object, Object>() {{\n                     put(SERVICE_LIFECYCLE_NAMESPACE_TOPIC, new HashMap<Object, Object>() {{\n-                        put(LIFECYCLE_RUN_NAMESPACE_TOPIC, \"exit -1\");\n+                        put(LIFECYCLE_STARTUP_NAMESPACE_TOPIC, \"exit -1\");\n                     }});\n                 }});\n             }});\n         }};\n \n-        CountDownLatch sleeperBErrored = new CountDownLatch(1);\n+        CountDownLatch sleeperBBroken = new CountDownLatch(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDg4Mg=="}, "originalCommit": {"oid": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDMxNjI1OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/short_running_services_using_startup_script.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTozMDo0N1rOGsdkag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjowNjo0MFrOGseSAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDk4Ng==", "bodyText": "This will break on Windows.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r449274986", "createdAt": "2020-07-02T21:30:47Z", "author": {"login": "fufranci"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/short_running_services_using_startup_script.yaml", "diffHunk": "@@ -0,0 +1,23 @@\n+---\n+services:\n+  sleeperB:\n+    lifecycle:\n+      startup: |-\n+        date; echo sleeperB_running; sleep 5", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI4NjY1OQ==", "bodyText": "But don't worry about. I think we can focus on landing this first. Then I will fix before merging the Windows PR.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r449286659", "createdAt": "2020-07-02T22:06:40Z", "author": {"login": "fufranci"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/short_running_services_using_startup_script.yaml", "diffHunk": "@@ -0,0 +1,23 @@\n+---\n+services:\n+  sleeperB:\n+    lifecycle:\n+      startup: |-\n+        date; echo sleeperB_running; sleep 5", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDk4Ng=="}, "originalCommit": {"oid": "890dbaf1b6a52c99aeade66a615e08de2ffb26eb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjE2Njk2OnYy", "diffSide": "LEFT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODoxMjo0OVrOGuKH3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzoyNjowNFrOGubaFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MzUzMw==", "bodyText": "Is it ok to remove these? Can we use eventuallyEval to make it pass?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451053533", "createdAt": "2020-07-07T18:12:49Z", "author": {"login": "hui-yang"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -418,15 +419,10 @@ void GIVEN_kernel_running_services_WHEN_merge_removes_service_THEN_removed_servi\n             }\n         });\n \n-        EvergreenService main = kernel.locate(\"main\");\n-        EvergreenService sleeperB = kernel.locate(\"sleeperB\");\n         // wait for merge to complete\n         future.get(60, TimeUnit.SECONDS);\n         //sleeperA should be closed\n         assertTrue(isSleeperAClosed.get());\n-        // main and sleeperB should be running\n-        assertEquals(State.RUNNING, main.getState());\n-        assertEquals(State.RUNNING, sleeperB.getState());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzNjcyNA==", "bodyText": "I digged a bit deeper and found a race condition, the functionality tested here is also verified in other tests. But since it triggered the race condition, I adding these checks back.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451336724", "createdAt": "2020-07-08T07:26:04Z", "author": {"login": "fahadmohammed01"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -418,15 +419,10 @@ void GIVEN_kernel_running_services_WHEN_merge_removes_service_THEN_removed_servi\n             }\n         });\n \n-        EvergreenService main = kernel.locate(\"main\");\n-        EvergreenService sleeperB = kernel.locate(\"sleeperB\");\n         // wait for merge to complete\n         future.get(60, TimeUnit.SECONDS);\n         //sleeperA should be closed\n         assertTrue(isSleeperAClosed.get());\n-        // main and sleeperB should be running\n-        assertEquals(State.RUNNING, main.getState());\n-        assertEquals(State.RUNNING, sleeperB.getState());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1MzUzMw=="}, "originalCommit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjE3MTI3OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceDependencyLifecycleTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODoxNDowOFrOGuKKmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODoxNDowOFrOGuKKmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1NDIzNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451054234", "createdAt": "2020-07-07T18:14:08Z", "author": {"login": "hui-yang"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceDependencyLifecycleTest.java", "diffHunk": "@@ -380,6 +380,11 @@ void WHEN_dependency_type_changes_with_no_other_updates_THEN_customer_app_should\n                         .toString()).launch();\n         assertThat(kernel.locate(\"main\")::getState, eventuallyEval(is(State.FINISHED)));\n \n+        // The test below assumes SoftDependency is already running and checks against RUNNING->STOPPING and\n+        // STARTING->RUNNING. But I have seen cases where it hasn't get to the initial RUNNING state yet. So we need to\n+        // wait for SoftDependency to be RUNNING first.\n+        assertThat(kernel.locate(\"SoftDependency\")::getState, eventuallyEval(is(State.RUNNING)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjI0MzcxOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODozNjowMlrOGuK4Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzoxNDoyNVrOGubCyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2NTkzNA==", "bodyText": "Do we need this long sleep time?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451065934", "createdAt": "2020-07-07T18:36:02Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -541,8 +541,7 @@ void GIVEN_service_running_with_rollback_safe_param_WHEN_rollback_THEN_rollback_\n \n         // THEN\n         // deployment should have errored and rolled back\n-        assertTrue(sleeperBErrored.await(1, TimeUnit.SECONDS));\n-        assertTrue(sleeperBRolledBack.await(1, TimeUnit.SECONDS));\n+        assertTrue(sleeperBRolledBack.await(30, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzMDc2MQ==", "bodyText": "we are waiting 30 seconds for the deployment to finish. reverted to 1 seconds", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/295#discussion_r451330761", "createdAt": "2020-07-08T07:14:25Z", "author": {"login": "fahadmohammed01"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -541,8 +541,7 @@ void GIVEN_service_running_with_rollback_safe_param_WHEN_rollback_THEN_rollback_\n \n         // THEN\n         // deployment should have errored and rolled back\n-        assertTrue(sleeperBErrored.await(1, TimeUnit.SECONDS));\n-        assertTrue(sleeperBRolledBack.await(1, TimeUnit.SECONDS));\n+        assertTrue(sleeperBRolledBack.await(30, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2NTkzNA=="}, "originalCommit": {"oid": "72e66470dc6d0cbec46376a552602d6001cd611a"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4369, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}