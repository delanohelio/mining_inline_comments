{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2OTY1MjUy", "number": 235, "title": "Fix and add test for config node removal", "bodyText": "Issue #, if available:\nDescription of changes:\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-05-12T20:57:48Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235", "merged": true, "mergeCommit": {"oid": "01278e1de3202c02beb028ca649035fe4c3e8a6c"}, "closed": true, "closedAt": "2020-06-16T22:30:41Z", "author": {"login": "ShirleyZheng92"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgq-GVAFqTQxMDQyMTkwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcr872TAFqTQzMTkzNDM0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDIxOTA4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#pullrequestreview-410421908", "createdAt": "2020-05-12T21:05:56Z", "commit": {"oid": "3d3db05555ff617cbccf55c8c410171552c8253d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowNTo1N1rOGUY8rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNDoyMlrOGUZNHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzQ1Mw==", "bodyText": "What about child added or initialized?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r424033453", "createdAt": "2020-05-12T21:05:57Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationWriter.java", "diffHunk": "@@ -94,7 +94,7 @@ public ConfigurationWriter flushImmediately(boolean fl) {\n \n     @Override\n     public synchronized void published(WhatHappened what, Topic n) {\n-        if (what == WhatHappened.childChanged) {\n+        if (what == WhatHappened.childChanged || what == WhatHappened.childRemoved) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d3db05555ff617cbccf55c8c410171552c8253d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNDE3Mw==", "bodyText": "Why make this abstract, what was wrong with the implementation?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r424034173", "createdAt": "2020-05-12T21:07:25Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Node.java", "diffHunk": "@@ -95,49 +93,41 @@ public String toString() {\n      */\n     protected boolean addWatcher(Watcher s) {\n         if (s != null) {\n-            if (watchers == null) {\n-                watchers = new CopyOnWriteArraySet<>();\n-            }\n             return watchers.add(s);\n         }\n         return false;\n     }\n \n     /**\n-     * Remove a subscriber to stop being called for updates.\n+     * Remove a watcher to stop being called for updates.\n      *\n-     * @param s subscriber to remove\n+     * @param watcher watcher to remove\n      */\n-    public void remove(Subscriber s) {\n-        if (watchers != null) {\n-            watchers.remove(s);\n-        }\n+    public void remove(Watcher watcher) {\n+        watchers.remove(watcher);\n     }\n \n     /**\n      * Remove this node from its parent.\n      */\n-    public void remove() {\n-        if (parent != null) {\n-            parent.remove(this);\n-        }\n-    }\n+    public abstract void remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d3db05555ff617cbccf55c8c410171552c8253d"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNDc1Ng==", "bodyText": "So this isn't actually removing the node. The node will still exist; it just has a null value. That's the implementation we decided to go with?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r424034756", "createdAt": "2020-05-12T21:08:36Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topic.java", "diffHunk": "@@ -118,19 +118,29 @@ public synchronized Topic withNewerValue(long proposedModtime, final Object prop\n         return this;\n     }\n \n+    @SuppressWarnings(\"PMD.NullAssignment\")\n     @Override\n-    public void fire(WhatHappened what) {\n+    public synchronized void remove() {\n+        modtime = System.currentTimeMillis();\n+        value = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d3db05555ff617cbccf55c8c410171552c8253d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNTM2Mw==", "bodyText": "What about the other values of WhatHappened? Who can call this fire method, and what values can it be called with.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r424035363", "createdAt": "2020-05-12T21:09:54Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topic.java", "diffHunk": "@@ -118,19 +118,29 @@ public synchronized Topic withNewerValue(long proposedModtime, final Object prop\n         return this;\n     }\n \n+    @SuppressWarnings(\"PMD.NullAssignment\")\n     @Override\n-    public void fire(WhatHappened what) {\n+    public synchronized void remove() {\n+        modtime = System.currentTimeMillis();\n+        value = null;\n+        context.runOnPublishQueueAndWait(() -> this.fire(WhatHappened.removed));\n+        watchers.clear();\n+    }\n+\n+    private void fire(WhatHappened what) {\n         logger.atDebug().setEventType(\"config-node-update\").addKeyValue(\"configNode\", getFullName())\n                 .addKeyValue(\"reason\", what.name()).log();\n-        if (watchers != null) {\n-            for (Watcher s : watchers) {\n-                if (s instanceof Subscriber) {\n-                    ((Subscriber) s).published(what, this);\n-                }\n+        for (Watcher s : watchers) {\n+            if (s instanceof Subscriber) {\n+                ((Subscriber) s).published(what, this);\n             }\n         }\n         if (parent != null && parentNeedsToKnow()) {\n-            parent.childChanged(what, this);\n+            if (what.equals(WhatHappened.changed)) {\n+                parent.childChanged(WhatHappened.childChanged, this);\n+            } else if (what.equals(WhatHappened.removed)) {\n+                parent.childChanged(WhatHappened.childRemoved, this);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d3db05555ff617cbccf55c8c410171552c8253d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjQ0MQ==", "bodyText": "Why does this need to be on the publish queue? The other remove and fire methods don't use it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r424036441", "createdAt": "2020-05-12T21:11:55Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -292,6 +271,19 @@ public Topics subscribe(ChildChanged cc) {\n         return this;\n     }\n \n+    @Override\n+    public synchronized void remove() {\n+        context.runOnPublishQueueAndWait(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d3db05555ff617cbccf55c8c410171552c8253d"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNzI3Nw==", "bodyText": "This seems really weird to have here. Makes more sense to me if this removal was actually in the remove method instead of a callback for childChanged.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r424037277", "createdAt": "2020-05-12T21:13:32Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -244,41 +240,24 @@ public void deepForEachTopic(Consumer<Topic> f) {\n         children.values().forEach((t) -> t.deepForEachTopic(f));\n     }\n \n-    /**\n-     * Remove a node from this node's children.\n-     *\n-     * @param n node to remove\n-     */\n-    public void remove(Node n) {\n-        if (!children.remove(n.getName(), n)) {\n-            logger.atError(\"config-node-child-remove-error\").kv(\"thisNode\", toString())\n-                    .kv(\"childNode\", n.getName()).log();\n-        }\n-        n.fire(WhatHappened.removed);\n-        childChanged(WhatHappened.childRemoved, n);\n-    }\n-\n     protected void childChanged(WhatHappened what, Node child) {\n         logger.atDebug().setEventType(\"config-node-child-update\").addKeyValue(\"configNode\", getFullName())\n                 .addKeyValue(\"reason\", what.name()).log();\n-        if (watchers != null) {\n-            for (Watcher s : watchers) {\n-                if (s instanceof ChildChanged) {\n-                    ((ChildChanged) s).childChanged(what, child);\n-                }\n-                // TODO: detect if a subscriber fails. Possibly unsubscribe it if the fault is persistent\n+\n+        if (what.equals(WhatHappened.childRemoved) && children.get(child.getName()) == child) {\n+            children.remove(child.getName());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d3db05555ff617cbccf55c8c410171552c8253d"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNzY2Mg==", "bodyText": "you already create a context in the beforeeach. Use that one otherwise you'll be leaking contexts.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r424037662", "createdAt": "2020-05-12T21:14:22Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/config/TopicsTest.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package com.aws.iot.evergreen.config;\n+\n+import java.io.ByteArrayInputStream;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import com.aws.iot.evergreen.dependency.Context;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.fasterxml.jackson.jr.ob.JSON;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+public class TopicsTest {\n+\n+    private static final String TEST_TOPICS_CONTENT =\n+            \"---\\n\"\n+            + \"foo:\\n\"\n+            + \"  key1:\\n\"\n+            + \"    subkey1: val1\\n\"\n+            + \"  key2: val2\\n\";\n+    private static Map<Object, Object> testTopicsMap;\n+\n+    private Context context;\n+\n+    @BeforeAll\n+    static void setup() throws Exception {\n+        testTopicsMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(\n+            new ByteArrayInputStream(TEST_TOPICS_CONTENT.getBytes()));\n+    }\n+\n+    @BeforeEach\n+    void beforeEach() {\n+        context = new Context();\n+    }\n+\n+    @AfterEach\n+    void afterEach() throws Exception {\n+        if (context != null) {\n+            context.close();\n+        }\n+    }\n+\n+    @Test\n+    public void GIVEN_topics_WHEN_leaf_node_removed_THEN_subscribers_get_notified_successfully() throws Exception {\n+        context = new Context();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d3db05555ff617cbccf55c8c410171552c8253d"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d3db05555ff617cbccf55c8c410171552c8253d", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3d3db05555ff617cbccf55c8c410171552c8253d", "committedDate": "2020-05-12T20:56:35Z", "message": "Fix and add test for config node removal"}, "afterCommit": {"oid": "58b90450b183a171517efd8de385fa01ade5e741", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/58b90450b183a171517efd8de385fa01ade5e741", "committedDate": "2020-06-11T21:04:16Z", "message": "Fix and add test for config node removal. Implement remove in Tlog"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58b90450b183a171517efd8de385fa01ade5e741", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/58b90450b183a171517efd8de385fa01ade5e741", "committedDate": "2020-06-11T21:04:16Z", "message": "Fix and add test for config node removal. Implement remove in Tlog"}, "afterCommit": {"oid": "18c5097df60cff028f378571282a067ff2e2c0e9", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/18c5097df60cff028f378571282a067ff2e2c0e9", "committedDate": "2020-06-11T21:23:12Z", "message": "Fix and add test for config node removal. Implement remove in Tlog"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18c5097df60cff028f378571282a067ff2e2c0e9", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/18c5097df60cff028f378571282a067ff2e2c0e9", "committedDate": "2020-06-11T21:23:12Z", "message": "Fix and add test for config node removal. Implement remove in Tlog"}, "afterCommit": {"oid": "7f6b7cb4818effd6b8085e1e79edd23bc6a3dd03", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7f6b7cb4818effd6b8085e1e79edd23bc6a3dd03", "committedDate": "2020-06-11T21:28:16Z", "message": "Fix and add test for config node removal. Implement remove in Tlog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f4493333a239db3f6f1e7d73e0e88553b5dd004b", "committedDate": "2020-06-11T22:51:27Z", "message": "Fix and add test for config node removal. Implement remove in Tlog"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f6b7cb4818effd6b8085e1e79edd23bc6a3dd03", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7f6b7cb4818effd6b8085e1e79edd23bc6a3dd03", "committedDate": "2020-06-11T21:28:16Z", "message": "Fix and add test for config node removal. Implement remove in Tlog"}, "afterCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f4493333a239db3f6f1e7d73e0e88553b5dd004b", "committedDate": "2020-06-11T22:51:27Z", "message": "Fix and add test for config node removal. Implement remove in Tlog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MzU5MjIz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#pullrequestreview-429359223", "createdAt": "2020-06-11T23:25:48Z", "commit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMzoyNTo0OVrOGix-4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMzozODo1MFrOGiyM8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEyMzY4Mg==", "bodyText": "wrong class, unless you did this on purpose.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r439123682", "createdAt": "2020-06-11T23:25:49Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationReader.java", "diffHunk": "@@ -4,48 +4,67 @@\n package com.aws.iot.evergreen.config;\n \n import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n \n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.Reader;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-import java.util.Iterator;\n import java.util.function.Predicate;\n \n-import static com.aws.iot.evergreen.util.Coerce.toObject;\n-import static com.aws.iot.evergreen.util.Utils.parseLong;\n-\n public final class ConfigurationReader {\n-    private static final java.util.regex.Pattern logLine =\n-            java.util.regex.Pattern.compile(\"([0-9]+),([^,]*),([^\\n]*)\\n*\");\n     private static final java.util.regex.Pattern seperator = java.util.regex.Pattern.compile(\"[./] *\");\n+    private static final Logger logger = LogManager.getLogger(Configuration.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEyNTExMA==", "bodyText": "not sure you should add this here, I'd prefer to let the caller do this. This could actually lead to a deadlock if this merge is running in the publish thread.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r439125110", "createdAt": "2020-06-11T23:30:54Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationReader.java", "diffHunk": "@@ -4,48 +4,67 @@\n package com.aws.iot.evergreen.config;\n \n import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n \n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.Reader;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-import java.util.Iterator;\n import java.util.function.Predicate;\n \n-import static com.aws.iot.evergreen.util.Coerce.toObject;\n-import static com.aws.iot.evergreen.util.Utils.parseLong;\n-\n public final class ConfigurationReader {\n-    private static final java.util.regex.Pattern logLine =\n-            java.util.regex.Pattern.compile(\"([0-9]+),([^,]*),([^\\n]*)\\n*\");\n     private static final java.util.regex.Pattern seperator = java.util.regex.Pattern.compile(\"[./] *\");\n+    private static final Logger logger = LogManager.getLogger(Configuration.class);\n \n     private ConfigurationReader() {\n     }\n \n     /**\n      * Merge the given transaction log into the given configuration.\n      *\n-     * @param c  configuration to merge into\n+     * @param config  configuration to merge into\n      * @param r0 reader of the transaction log to read from\n+     * @param forceTimestamp forceTimestamp\n+     * @param mergeCondition mergeCondition\n      * @throws IOException if reading fails\n      */\n-    public static void mergeTLogInto(Configuration c, Reader r0) throws IOException {\n+    public static void mergeTLogInto(Configuration config,\n+                                     Reader r0,\n+                                     boolean forceTimestamp,\n+                                     Predicate<Topic> mergeCondition) throws IOException {\n         try (BufferedReader in = r0 instanceof BufferedReader ? (BufferedReader) r0 : new BufferedReader(r0)) {\n-            String l = in.readLine();\n-            while (l != null) {\n-                java.util.regex.Matcher m = logLine.matcher(l);\n-                if (m.matches()) {\n-                    c.lookup(seperator.split(m.group(2))).withNewerValue(parseLong(m.group(1)), toObject(m.group(3)));\n+            String l;\n+\n+            for (l = in.readLine(); l != null; l = in.readLine()) {\n+                try {\n+                    Tlogline tlogline = Tlogline.fromStringInput(l);\n+                    Topic targetTopic = config.lookup(seperator.split(tlogline.topicString));\n+                    if (mergeCondition != null && !mergeCondition.test(targetTopic)) {\n+                        continue;\n+                    }\n+                    if (WhatHappened.changed.equals(tlogline.action)) {\n+                        targetTopic.withNewerValue(tlogline.timestamp, tlogline.value, forceTimestamp);\n+                    } else if (WhatHappened.removed.equals(tlogline.action)) {\n+                        if (forceTimestamp) {\n+                            targetTopic.remove();\n+                        } else {\n+                            targetTopic.remove(tlogline.timestamp);\n+                        }\n+                    }\n+                } catch (Tlogline.InvalidLogException e) {\n+                    logger.atError().setCause(e).log(\"Fail to parse log line\");\n                 }\n-                l = in.readLine();\n             }\n+\n+            // block until all changes are merged in\n+            config.context.runOnPublishQueueAndWait(() -> {});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEyNTk3NA==", "bodyText": "why are you hardcoding the what?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r439125974", "createdAt": "2020-06-11T23:34:11Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topic.java", "diffHunk": "@@ -129,8 +140,14 @@ public void fire(WhatHappened what) {\n                 }\n             }\n         }\n+\n+        if (WhatHappened.removed.equals(what)) {\n+            watchers.clear();\n+            return;\n+        }\n+\n         if (parent != null && parentNeedsToKnow()) {\n-            parent.childChanged(what, this);\n+            parent.childChanged(WhatHappened.childChanged, this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEyNjI5Nw==", "bodyText": "why are you undoing the hardcoding here? These 2 changes I commented on are confusing in how they differ.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r439126297", "createdAt": "2020-06-11T23:35:25Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -250,27 +250,34 @@ public void deepForEachTopic(Consumer<Topic> f) {\n      * @param n node to remove\n      */\n     public void remove(Node n) {\n-        if (!children.remove(n.getName(), n)) {\n-            logger.atError(\"config-node-child-remove-error\").kv(\"thisNode\", toString())\n-                    .kv(\"childNode\", n.getName()).log();\n-        }\n-        n.fire(WhatHappened.removed);\n-        childChanged(WhatHappened.childRemoved, n);\n+        context.runOnPublishQueue(() -> {\n+            if (!children.remove(n.getName(), n)) {\n+                logger.atError(\"config-node-child-remove-error\").kv(\"thisNode\", toString())\n+                        .kv(\"childNode\", n.getName()).log();\n+            }\n+            n.fire(WhatHappened.removed);\n+            childChanged(WhatHappened.childRemoved, n);\n+        });\n     }\n \n     protected void childChanged(WhatHappened what, Node child) {\n         logger.atDebug().setEventType(\"config-node-child-update\").addKeyValue(\"configNode\", getFullName())\n                 .addKeyValue(\"reason\", what.name()).log();\n-        if (watchers != null) {\n-            for (Watcher s : watchers) {\n-                if (s instanceof ChildChanged) {\n-                    ((ChildChanged) s).childChanged(what, child);\n-                }\n-                // TODO: detect if a subscriber fails. Possibly unsubscribe it if the fault is persistent\n+\n+        for (Watcher s : watchers) {\n+            if (s instanceof ChildChanged) {\n+                ((ChildChanged) s).childChanged(what, child);\n             }\n+            // TODO: detect if a subscriber fails. Possibly unsubscribe it if the fault is persistent\n+        }\n+\n+        if (what.equals(WhatHappened.removed)) {\n+            watchers.clear();\n+            return;\n         }\n+\n         if (parent != null && parentNeedsToKnow()) {\n-            parent.childChanged(WhatHappened.childChanged, child);\n+            parent.childChanged(what, child);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEyNzA1Nw==", "bodyText": "use consts for lifecycle and shutdown.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r439127057", "createdAt": "2020-06-11T23:38:05Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/config/ConfigurationReaderTest.java", "diffHunk": "@@ -56,4 +57,47 @@ public void GIVEN_tlog_with_ignored_namespace_WHEN_tlog_merged_to_config_with_no\n         assertEquals(\"TLogValue\", config.lookup(SERVICES_NAMESPACE_TOPIC, \"YellowSignal\",\n                                                 SKIP_MERGE_NAMESPACE_KEY, \"testTopic\").getOnce());\n     }\n+\n+    @Test\n+    public void GIVEN_tlog_WHEN_tlog_merged_to_config_with_forced_timestamp_THEN_topic_is_removed() throws Exception {\n+        // Create this topic with temp value\n+        config.lookup(SERVICES_NAMESPACE_TOPIC, \"YellowSignal\",\n+                      \"lifecycle\", \"shutdown\").withNewerValue(Long.MAX_VALUE, \"Test\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEyNzI4MQ==", "bodyText": "I know it is maybe silly, but can you assert not null first, then do the merge and check again?\nSame with all the other tests in this class.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r439127281", "createdAt": "2020-06-11T23:38:50Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/config/ConfigurationReaderTest.java", "diffHunk": "@@ -56,4 +57,47 @@ public void GIVEN_tlog_with_ignored_namespace_WHEN_tlog_merged_to_config_with_no\n         assertEquals(\"TLogValue\", config.lookup(SERVICES_NAMESPACE_TOPIC, \"YellowSignal\",\n                                                 SKIP_MERGE_NAMESPACE_KEY, \"testTopic\").getOnce());\n     }\n+\n+    @Test\n+    public void GIVEN_tlog_WHEN_tlog_merged_to_config_with_forced_timestamp_THEN_topic_is_removed() throws Exception {\n+        // Create this topic with temp value\n+        config.lookup(SERVICES_NAMESPACE_TOPIC, \"YellowSignal\",\n+                      \"lifecycle\", \"shutdown\").withNewerValue(Long.MAX_VALUE, \"Test\");\n+        Path tlogPath = Paths.get(ConfigurationReaderTest.class.getResource(\"test.tlog\").toURI());\n+        ConfigurationReader.mergeTlogIntoConfig(config, tlogPath, true, null);\n+\n+        assertNull(config.find(SERVICES_NAMESPACE_TOPIC, \"YellowSignal\", \"lifecycle\", \"shutdown\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5OTU3NzA2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#pullrequestreview-429957706", "createdAt": "2020-06-12T18:34:03Z", "commit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODozNDowM1rOGjN9TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODo1Mzo1MlrOGjOfTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4MjAyOQ==", "bodyText": "Why do we clear parent node watchers here?\nHow is Topics removed? Do we remove all its children first?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r439582029", "createdAt": "2020-06-12T18:34:03Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -250,27 +250,34 @@ public void deepForEachTopic(Consumer<Topic> f) {\n      * @param n node to remove\n      */\n     public void remove(Node n) {\n-        if (!children.remove(n.getName(), n)) {\n-            logger.atError(\"config-node-child-remove-error\").kv(\"thisNode\", toString())\n-                    .kv(\"childNode\", n.getName()).log();\n-        }\n-        n.fire(WhatHappened.removed);\n-        childChanged(WhatHappened.childRemoved, n);\n+        context.runOnPublishQueue(() -> {\n+            if (!children.remove(n.getName(), n)) {\n+                logger.atError(\"config-node-child-remove-error\").kv(\"thisNode\", toString())\n+                        .kv(\"childNode\", n.getName()).log();\n+            }\n+            n.fire(WhatHappened.removed);\n+            childChanged(WhatHappened.childRemoved, n);\n+        });\n     }\n \n     protected void childChanged(WhatHappened what, Node child) {\n         logger.atDebug().setEventType(\"config-node-child-update\").addKeyValue(\"configNode\", getFullName())\n                 .addKeyValue(\"reason\", what.name()).log();\n-        if (watchers != null) {\n-            for (Watcher s : watchers) {\n-                if (s instanceof ChildChanged) {\n-                    ((ChildChanged) s).childChanged(what, child);\n-                }\n-                // TODO: detect if a subscriber fails. Possibly unsubscribe it if the fault is persistent\n+\n+        for (Watcher s : watchers) {\n+            if (s instanceof ChildChanged) {\n+                ((ChildChanged) s).childChanged(what, child);\n             }\n+            // TODO: detect if a subscriber fails. Possibly unsubscribe it if the fault is persistent\n+        }\n+\n+        if (what.equals(WhatHappened.removed)) {\n+            watchers.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4NTAwOQ==", "bodyText": "Do we still plan to set null and keep the subscribers? I'm asking about the deployment rollback scenario.\nIt seems most cases the only subscriber is only added when a service is initialized. This may be a good reason that we don't have to persist subscribers. Is it safe to assume this is always the case?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r439585009", "createdAt": "2020-06-12T18:41:00Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topic.java", "diffHunk": "@@ -118,8 +118,19 @@ public synchronized Topic withNewerValue(long proposedModtime, final Object prop\n         return this;\n     }\n \n+    /**\n+     * Remove with timestamp check.\n+     * @param timestamp timestamp\n+     */\n+    public void remove(long timestamp) {\n+        if (timestamp < this.modtime) {\n+            return;\n+        }\n+        remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4NTk0Mw==", "bodyText": "+1 on the refactor", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r439585943", "createdAt": "2020-06-12T18:43:08Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/config/Tlogline.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.aws.iot.evergreen.config;\n+\n+import com.aws.iot.evergreen.util.Coerce;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.io.IOException;\n+import java.io.Writer;\n+\n+import static com.aws.iot.evergreen.util.Utils.appendLong;\n+import static com.aws.iot.evergreen.util.Utils.parseLong;\n+\n+@AllArgsConstructor\n+@Getter\n+class Tlogline {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5MDczNQ==", "bodyText": "nit: can we use the javadoc of mergeTlogIntoConfig which has more info?\nmergeTlogIntoConfig should also be renamed to mergeTLogInto as a function overload", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r439590735", "createdAt": "2020-06-12T18:53:52Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationReader.java", "diffHunk": "@@ -4,48 +4,67 @@\n package com.aws.iot.evergreen.config;\n \n import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n \n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.Reader;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-import java.util.Iterator;\n import java.util.function.Predicate;\n \n-import static com.aws.iot.evergreen.util.Coerce.toObject;\n-import static com.aws.iot.evergreen.util.Utils.parseLong;\n-\n public final class ConfigurationReader {\n-    private static final java.util.regex.Pattern logLine =\n-            java.util.regex.Pattern.compile(\"([0-9]+),([^,]*),([^\\n]*)\\n*\");\n     private static final java.util.regex.Pattern seperator = java.util.regex.Pattern.compile(\"[./] *\");\n+    private static final Logger logger = LogManager.getLogger(Configuration.class);\n \n     private ConfigurationReader() {\n     }\n \n     /**\n      * Merge the given transaction log into the given configuration.\n      *\n-     * @param c  configuration to merge into\n+     * @param config  configuration to merge into\n      * @param r0 reader of the transaction log to read from\n+     * @param forceTimestamp forceTimestamp\n+     * @param mergeCondition mergeCondition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4493333a239db3f6f1e7d73e0e88553b5dd004b"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cabc1a050ff370d98412709a840d49031fc3af6", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8cabc1a050ff370d98412709a840d49031fc3af6", "committedDate": "2020-06-15T08:46:09Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9d23ea24ff2c294369f8790b00ed1751e843183", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a9d23ea24ff2c294369f8790b00ed1751e843183", "committedDate": "2020-06-15T20:21:10Z", "message": "Merge branch 'master' into removeConfigNode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTg2MTQx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#pullrequestreview-430986141", "createdAt": "2020-06-15T20:54:44Z", "commit": {"oid": "a9d23ea24ff2c294369f8790b00ed1751e843183"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1NDo0NFrOGkCZNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1NDo0NFrOGkCZNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MTE0MA==", "bodyText": "why don't you notify the parents here?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r440441140", "createdAt": "2020-06-15T20:54:44Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topic.java", "diffHunk": "@@ -129,8 +140,14 @@ public void fire(WhatHappened what) {\n                 }\n             }\n         }\n+\n+        if (WhatHappened.removed.equals(what)) {\n+            watchers.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9d23ea24ff2c294369f8790b00ed1751e843183"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTg3MTIw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#pullrequestreview-430987120", "createdAt": "2020-06-15T20:56:15Z", "commit": {"oid": "a9d23ea24ff2c294369f8790b00ed1751e843183"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1NjoxNVrOGkCcKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1NjoxNVrOGkCcKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MTg5Ng==", "bodyText": "use asyncAssertOnBiConsumer to ensure that it is only called exactly as many times as you expect and with the precise what that you expect.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#discussion_r440441896", "createdAt": "2020-06-15T20:56:15Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/config/ConfigurationTest.java", "diffHunk": "@@ -182,4 +183,63 @@ public void GIVEN_config_with_subscribers_WHEN_topic_updated_THEN_subscribers_no\n         assertTrue(childChangedCorrectly.await(100, TimeUnit.MILLISECONDS));\n     }\n \n+    @Test\n+    public void GIVEN_config_with_subscribers_WHEN_topic_removed_THEN_subscribers_notified() {\n+        Topic testTopic = config.lookup(\"a\", \"b\", \"c\");\n+        AtomicInteger childNotified = new AtomicInteger(0);\n+        testTopic.subscribe((what, t) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9d23ea24ff2c294369f8790b00ed1751e843183"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8759ac96091fcbafc5322dcf6c231ad20bb15761", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8759ac96091fcbafc5322dcf6c231ad20bb15761", "committedDate": "2020-06-16T05:43:53Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a80bc0b5eb92772e9a2d80b6b47cdda45b9464b", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5a80bc0b5eb92772e9a2d80b6b47cdda45b9464b", "committedDate": "2020-06-16T19:04:58Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODExMDI3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#pullrequestreview-431811027", "createdAt": "2020-06-16T19:06:06Z", "commit": {"oid": "8759ac96091fcbafc5322dcf6c231ad20bb15761"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODEzMjc4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#pullrequestreview-431813278", "createdAt": "2020-06-16T19:09:19Z", "commit": {"oid": "5a80bc0b5eb92772e9a2d80b6b47cdda45b9464b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e43ecc004e4b7279027125666e609b872fb1f63", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3e43ecc004e4b7279027125666e609b872fb1f63", "committedDate": "2020-06-16T21:35:12Z", "message": "Fix tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c998254afe0c0c83ea54647dbaf3195ab7b560a", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8c998254afe0c0c83ea54647dbaf3195ab7b560a", "committedDate": "2020-06-16T21:00:34Z", "message": "Fix tests"}, "afterCommit": {"oid": "3e43ecc004e4b7279027125666e609b872fb1f63", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3e43ecc004e4b7279027125666e609b872fb1f63", "committedDate": "2020-06-16T21:35:12Z", "message": "Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxOTMwMjMy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#pullrequestreview-431930232", "createdAt": "2020-06-16T22:15:49Z", "commit": {"oid": "3e43ecc004e4b7279027125666e609b872fb1f63"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxOTM0MzQw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/235#pullrequestreview-431934340", "createdAt": "2020-06-16T22:24:30Z", "commit": {"oid": "3e43ecc004e4b7279027125666e609b872fb1f63"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2190, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}