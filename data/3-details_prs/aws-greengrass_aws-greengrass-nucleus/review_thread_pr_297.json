{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTEyNDAx", "number": 297, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMDozNzoyM1rOEL1dBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDozMDoyM1rOEL4qrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODQ1NTcyOnYy", "diffSide": "RIGHT", "path": "README_CONFIG_SCHEMA.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMDozNzoyM1rOGtmSeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMDo1OTo0N1rOGtm8EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ2NjQyNg==", "bodyText": "I know this is not part of this PR and that it has existed for some time now, but could we change this namespace to something better? Ideally we should name it based on the purpose it's serving and not how we internally handle updates to it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450466426", "createdAt": "2020-07-06T20:37:23Z", "author": {"login": "shaguptashaikh"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -25,16 +25,29 @@ services:\n         \n     lifecycle: # lifecycle commands.\n     \n+    resources: # service reserved resources path.\n+\n     logging: # logging config.\n       \n     custom: # custom config. \n     \n+    notRolledBack: # config that's not being rolled back during deployment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1af750645b3502a42950661761c0a6c63b8b1a92"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3NzA3Mw==", "bodyText": "For now I just update the readme with whatever current implementation has, we can have separate CR to update namings", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450477073", "createdAt": "2020-07-06T20:59:47Z", "author": {"login": "ShirleyZheng92"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -25,16 +25,29 @@ services:\n         \n     lifecycle: # lifecycle commands.\n     \n+    resources: # service reserved resources path.\n+\n     logging: # logging config.\n       \n     custom: # custom config. \n     \n+    notRolledBack: # config that's not being rolled back during deployment", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ2NjQyNg=="}, "originalCommit": {"oid": "1af750645b3502a42950661761c0a6c63b8b1a92"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODQ2NjMyOnYy", "diffSide": "RIGHT", "path": "README_CONFIG_SCHEMA.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMDo0MDo1M1rOGtmY_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMDo1OTowOFrOGtm62g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ2ODA5NA==", "bodyText": "I'm a little confused as to how this is meant to be 1) used and 2) updated. Will this come from the recipe? And can it be modified through deployments directly or can service modify it only over IPC? Could you maybe describe your thought process in the PR description?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450468094", "createdAt": "2020-07-06T20:40:53Z", "author": {"login": "shaguptashaikh"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -25,16 +25,29 @@ services:\n         \n     lifecycle: # lifecycle commands.\n     \n+    resources: # service reserved resources path.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1af750645b3502a42950661761c0a6c63b8b1a92"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3Njc2Mg==", "bodyText": "I guess it comes from recipe. This was implemented in IPC long time ago before recipe is introduced. For now I just update the readme with whatever current implementation has.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450476762", "createdAt": "2020-07-06T20:59:08Z", "author": {"login": "ShirleyZheng92"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -25,16 +25,29 @@ services:\n         \n     lifecycle: # lifecycle commands.\n     \n+    resources: # service reserved resources path.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ2ODA5NA=="}, "originalCommit": {"oid": "1af750645b3502a42950661761c0a6c63b8b1a92"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODQ2NzUyOnYy", "diffSide": "RIGHT", "path": "README_CONFIG_SCHEMA.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMDo0MToxNFrOGtmZqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo1MDoyOVrOGu1C_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ2ODI2NA==", "bodyText": "Same as above, how will this be used and modified, and why is this needed if there's is also per service configuration for resources?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450468264", "createdAt": "2020-07-06T20:41:14Z", "author": {"login": "shaguptashaikh"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -25,16 +25,29 @@ services:\n         \n     lifecycle: # lifecycle commands.\n     \n+    resources: # service reserved resources path.\n+\n     logging: # logging config.\n       \n     custom: # custom config. \n     \n+    notRolledBack: # config that's not being rolled back during deployment\n+\n   <service2>:\n     lifecycle:\n     logging:\n     \n+  _AUTH_TOKENS: # auth token read by AuthHandler\n+    <authToken>: <serviceName>\n+\n system:\n   <kernel system config> \n+\n+registered-resource: # resources registered by service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1af750645b3502a42950661761c0a6c63b8b1a92"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1Njc5OA==", "bodyText": "This is updated in the runtime when service register a resource when running. It's not coming from recipe", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r451756798", "createdAt": "2020-07-08T18:50:29Z", "author": {"login": "ShirleyZheng92"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -25,16 +25,29 @@ services:\n         \n     lifecycle: # lifecycle commands.\n     \n+    resources: # service reserved resources path.\n+\n     logging: # logging config.\n       \n     custom: # custom config. \n     \n+    notRolledBack: # config that's not being rolled back during deployment\n+\n   <service2>:\n     lifecycle:\n     logging:\n     \n+  _AUTH_TOKENS: # auth token read by AuthHandler\n+    <authToken>: <serviceName>\n+\n system:\n   <kernel system config> \n+\n+registered-resource: # resources registered by service", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ2ODI2NA=="}, "originalCommit": {"oid": "1af750645b3502a42950661761c0a6c63b8b1a92"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODQ4NDk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMDo0Njo1M1rOGtmkQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo1MDo0N1rOGu1Dlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MDk3OA==", "bodyText": "Why is there both 'runtime' and 'notRolledBack' namespace? if you're adding this namespace then we should change the notRolledBack namespace in DeploymentConfigMerger to runtime because it was essentially supposed to serve the same purpose. Please also change it in the config schema .md file.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450470978", "createdAt": "2020-07-06T20:46:53Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -39,6 +39,7 @@\n \n public class EvergreenService implements InjectionActions, DisruptableCheck {\n     public static final String SERVICES_NAMESPACE_TOPIC = \"services\";\n+    public static final String RUNTIME_STORE_NAMESPACE_TOPIC = \"runtime\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1af750645b3502a42950661761c0a6c63b8b1a92"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3NzQzNg==", "bodyText": "are we combining local datastore 'runtime' and 'notRolledBack'?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450477436", "createdAt": "2020-07-06T21:00:31Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -39,6 +39,7 @@\n \n public class EvergreenService implements InjectionActions, DisruptableCheck {\n     public static final String SERVICES_NAMESPACE_TOPIC = \"services\";\n+    public static final String RUNTIME_STORE_NAMESPACE_TOPIC = \"runtime\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MDk3OA=="}, "originalCommit": {"oid": "1af750645b3502a42950661761c0a6c63b8b1a92"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0MjYwNA==", "bodyText": "at least what in the runtime is not going to be roll back...", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450542604", "createdAt": "2020-07-07T00:12:47Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -39,6 +39,7 @@\n \n public class EvergreenService implements InjectionActions, DisruptableCheck {\n     public static final String SERVICES_NAMESPACE_TOPIC = \"services\";\n+    public static final String RUNTIME_STORE_NAMESPACE_TOPIC = \"runtime\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MDk3OA=="}, "originalCommit": {"oid": "1af750645b3502a42950661761c0a6c63b8b1a92"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1Njk1MQ==", "bodyText": "Removed the 'notRolledBack' key", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r451756951", "createdAt": "2020-07-08T18:50:47Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -39,6 +39,7 @@\n \n public class EvergreenService implements InjectionActions, DisruptableCheck {\n     public static final String SERVICES_NAMESPACE_TOPIC = \"services\";\n+    public static final String RUNTIME_STORE_NAMESPACE_TOPIC = \"runtime\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MDk3OA=="}, "originalCommit": {"oid": "1af750645b3502a42950661761c0a6c63b8b1a92"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODk1MjI1OnYy", "diffSide": "RIGHT", "path": "README_CONFIG_SCHEMA.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDoxMzozMlrOGtq80w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDoxMzozMlrOGtq80w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0MjgwMw==", "bodyText": "Nice! Let's start updating the README! Yay!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450542803", "createdAt": "2020-07-07T00:13:32Z", "author": {"login": "leaf94"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -25,16 +25,30 @@ services:\n         \n     lifecycle: # lifecycle commands.\n     \n+    resources: # service reserved resources path.\n+\n     logging: # logging config.\n       \n     custom: # custom config. \n     \n+    runtime: # namespace for service local datastore\n+        # not rolled back during deployment\n+\n   <service2>:\n     lifecycle:\n     logging:\n     \n+  _AUTH_TOKENS: # auth token read by AuthHandler\n+    <authToken>: <serviceName>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa9ad25f464dbf130b188d555e75402a6057741b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODk3OTA5OnYy", "diffSide": "RIGHT", "path": "README_CONFIG_SCHEMA.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDoyODoyNVrOGtrMWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDoyODoyNVrOGtrMWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0Njc3Ng==", "bodyText": "custom is gone, right?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450546776", "createdAt": "2020-07-07T00:28:25Z", "author": {"login": "MikeDombo"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -25,16 +25,30 @@ services:\n         \n     lifecycle: # lifecycle commands.\n     \n+    resources: # service reserved resources path.\n+\n     logging: # logging config.\n       \n     custom: # custom config. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa9ad25f464dbf130b188d555e75402a6057741b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODk4MjIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDozMDoyM1rOGtrOOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMDoxNDo1M1rOGvgPaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0NzI1OQ==", "bodyText": "we should use the DeviceConfiguration class to store this stuff.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450547259", "createdAt": "2020-07-07T00:30:23Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -297,7 +298,7 @@ public void setupIoTRoleForTes(String roleName, String roleAliasName, String cer\n      */\n     public void updateKernelConfigWithTesRoleInfo(Kernel kernel, String roleAliasName) {\n         Topics tesTopics = kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, TOKEN_EXCHANGE_SERVICE_TOPICS);\n-        tesTopics.createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);\n+        tesTopics.lookupTopics(PARAMETERS_CONFIG_KEY).createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa9ad25f464dbf130b188d555e75402a6057741b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1MTY4Mg==", "bodyText": "Do you mean moving this under \"system\" key?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450651682", "createdAt": "2020-07-07T07:03:44Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -297,7 +298,7 @@ public void setupIoTRoleForTes(String roleName, String roleAliasName, String cer\n      */\n     public void updateKernelConfigWithTesRoleInfo(Kernel kernel, String roleAliasName) {\n         Topics tesTopics = kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, TOKEN_EXCHANGE_SERVICE_TOPICS);\n-        tesTopics.createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);\n+        tesTopics.lookupTopics(PARAMETERS_CONFIG_KEY).createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0NzI1OQ=="}, "originalCommit": {"oid": "fa9ad25f464dbf130b188d555e75402a6057741b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyODY5MQ==", "bodyText": "Yes, and access it through that class, which is what that class is for.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r450828691", "createdAt": "2020-07-07T12:33:19Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -297,7 +298,7 @@ public void setupIoTRoleForTes(String roleName, String roleAliasName, String cer\n      */\n     public void updateKernelConfigWithTesRoleInfo(Kernel kernel, String roleAliasName) {\n         Topics tesTopics = kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, TOKEN_EXCHANGE_SERVICE_TOPICS);\n-        tesTopics.createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);\n+        tesTopics.lookupTopics(PARAMETERS_CONFIG_KEY).createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0NzI1OQ=="}, "originalCommit": {"oid": "fa9ad25f464dbf130b188d555e75402a6057741b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1NjI3Mw==", "bodyText": "Is it possible that user want to change iot role alias through deployment?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r451756273", "createdAt": "2020-07-08T18:49:31Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -297,7 +298,7 @@ public void setupIoTRoleForTes(String roleName, String roleAliasName, String cer\n      */\n     public void updateKernelConfigWithTesRoleInfo(Kernel kernel, String roleAliasName) {\n         Topics tesTopics = kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, TOKEN_EXCHANGE_SERVICE_TOPICS);\n-        tesTopics.createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);\n+        tesTopics.lookupTopics(PARAMETERS_CONFIG_KEY).createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0NzI1OQ=="}, "originalCommit": {"oid": "fa9ad25f464dbf130b188d555e75402a6057741b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1ODE4Mg==", "bodyText": "Yes. System should be configurable through deployment too", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r451758182", "createdAt": "2020-07-08T18:53:15Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -297,7 +298,7 @@ public void setupIoTRoleForTes(String roleName, String roleAliasName, String cer\n      */\n     public void updateKernelConfigWithTesRoleInfo(Kernel kernel, String roleAliasName) {\n         Topics tesTopics = kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, TOKEN_EXCHANGE_SERVICE_TOPICS);\n-        tesTopics.createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);\n+        tesTopics.lookupTopics(PARAMETERS_CONFIG_KEY).createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0NzI1OQ=="}, "originalCommit": {"oid": "fa9ad25f464dbf130b188d555e75402a6057741b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ2NDQ5MQ==", "bodyText": "Discussed offline, let's keep it under TES for now", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/297#discussion_r452464491", "createdAt": "2020-07-09T20:14:53Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -297,7 +298,7 @@ public void setupIoTRoleForTes(String roleName, String roleAliasName, String cer\n      */\n     public void updateKernelConfigWithTesRoleInfo(Kernel kernel, String roleAliasName) {\n         Topics tesTopics = kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, TOKEN_EXCHANGE_SERVICE_TOPICS);\n-        tesTopics.createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);\n+        tesTopics.lookupTopics(PARAMETERS_CONFIG_KEY).createLeafChild(IOT_ROLE_ALIAS_TOPIC).withValue(roleAliasName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0NzI1OQ=="}, "originalCommit": {"oid": "fa9ad25f464dbf130b188d555e75402a6057741b"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4375, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}