{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNTkyNzY3", "number": 703, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDoyMjo1MFrOE60kiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDo0MToxM1rOE9D6TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTE0MTg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/DeploymentConfigMerger.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDoyMjo1MFrOH2HpOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDoyMjo1MFrOH2HpOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxMDM5Mg==", "bodyText": "remove inject from the fields if they are coming in through the constructor.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/703#discussion_r526510392", "createdAt": "2020-11-19T00:22:50Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DeploymentConfigMerger.java", "diffHunk": "@@ -50,6 +52,8 @@\n \n     @Inject\n     private Kernel kernel;\n+    @Inject\n+    private DynamicComponentConfigurationValidator validator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bed7ea0af8636146ca07048b211e7da030a8757"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDI2MjMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/KernelConfigResolver.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMTozNDo0OFrOH5fxPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMTo0Mzo0M1rOH5f7Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA1MTM5MA==", "bodyText": "Maybe I miss something here, isn't line295 duplicate of line 287?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/703#discussion_r530051390", "createdAt": "2020-11-25T01:34:48Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/componentmanager/KernelConfigResolver.java", "diffHunk": "@@ -280,6 +286,15 @@ private void updateRunWith(RunWith runWith, Map<String, Object> resolvedServiceC\n                 if (configuration != null) {\n                     currentRunningConfig.copyFrom(configuration);\n                 }\n+            } else if (ComponentType.NUCLEUS.equals(componentRecipe.getComponentType())) {\n+                // Copy from existing Nucleus config (if any)\n+                Topics nucleusTopics = kernel.findServiceTopic(deviceConfiguration.getNucleusComponentName());\n+                if (nucleusTopics != null) {\n+                    Topics nucleusConfig = nucleusTopics.findTopics(CONFIGURATION_CONFIG_KEY);\n+                    if (nucleusConfig != null) {\n+                        currentRunningConfig.copyFrom(nucleusConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13c7399594cf58c024a325aedc9a26aaa5ae6130"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA1Mzk2Mg==", "bodyText": "ln 287 loads current configuration for all components, if applicable.\nln 295 makes sure the nucleus-type component inherits the existing config for current nucleus-type component. This applies when we deploy a new Nucleus component with a different name. There's separate code to ensure there's only one nucleus-type component.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/703#discussion_r530053962", "createdAt": "2020-11-25T01:43:43Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/componentmanager/KernelConfigResolver.java", "diffHunk": "@@ -280,6 +286,15 @@ private void updateRunWith(RunWith runWith, Map<String, Object> resolvedServiceC\n                 if (configuration != null) {\n                     currentRunningConfig.copyFrom(configuration);\n                 }\n+            } else if (ComponentType.NUCLEUS.equals(componentRecipe.getComponentType())) {\n+                // Copy from existing Nucleus config (if any)\n+                Topics nucleusTopics = kernel.findServiceTopic(deviceConfiguration.getNucleusComponentName());\n+                if (nucleusTopics != null) {\n+                    Topics nucleusConfig = nucleusTopics.findTopics(CONFIGURATION_CONFIG_KEY);\n+                    if (nucleusConfig != null) {\n+                        currentRunningConfig.copyFrom(nucleusConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA1MTM5MA=="}, "originalCommit": {"oid": "13c7399594cf58c024a325aedc9a26aaa5ae6130"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDYyNjY4OnYy", "diffSide": "LEFT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDo0MToxM1rOH5i_Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNTozMjoyMFrOH5jzZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwNDE1MQ==", "bodyText": "We don't need this?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/703#discussion_r530104151", "createdAt": "2020-11-25T04:41:13Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "diffHunk": "@@ -141,12 +154,6 @@ private void initPaths(String rootAbsolutePath) {\n             nucleusPaths.setTelemetryPath(TelemetryConfig.getInstance().getStoreDirectory());\n             String storeDirectory = LogManager.getRootLogConfiguration().getStoreDirectory().toAbsolutePath()\n                     .toString();\n-            Topic outputDirectoryTopic = deviceConfiguration.getLoggingConfigurationTopics()\n-                    .lookup(\"outputDirectory\");\n-            String outputDirectory = Coerce.toString(outputDirectoryTopic);\n-            if (Utils.isNotEmpty(outputDirectory)) {\n-                storeDirectory = deTilde(outputDirectory);\n-            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53ad2d2a322c35b8f9703da9d30de61af0bdb5ef"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDExNzQ3OQ==", "bodyText": "It doesn't work actually. Config hasn't been loaded here.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/703#discussion_r530117479", "createdAt": "2020-11-25T05:32:20Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "diffHunk": "@@ -141,12 +154,6 @@ private void initPaths(String rootAbsolutePath) {\n             nucleusPaths.setTelemetryPath(TelemetryConfig.getInstance().getStoreDirectory());\n             String storeDirectory = LogManager.getRootLogConfiguration().getStoreDirectory().toAbsolutePath()\n                     .toString();\n-            Topic outputDirectoryTopic = deviceConfiguration.getLoggingConfigurationTopics()\n-                    .lookup(\"outputDirectory\");\n-            String outputDirectory = Coerce.toString(outputDirectoryTopic);\n-            if (Utils.isNotEmpty(outputDirectory)) {\n-                storeDirectory = deTilde(outputDirectory);\n-            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwNDE1MQ=="}, "originalCommit": {"oid": "53ad2d2a322c35b8f9703da9d30de61af0bdb5ef"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 272, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}