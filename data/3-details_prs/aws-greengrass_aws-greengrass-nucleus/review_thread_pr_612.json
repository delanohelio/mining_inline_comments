{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0OTk3Mjk4", "number": 612, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMToyNDo1NlrOE0_HjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMDo0NjozNVrOE1CFew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTk1NTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMToyNDo1NlrOHtA_ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMToyNDo1NlrOHtA_ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2NDIwMg==", "bodyText": "why do we ignore this!? This is what Feng hit, we had some ioexception which was logged, but it just kept going.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/612#discussion_r516964202", "createdAt": "2020-11-03T21:24:56Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -397,11 +397,11 @@ private void createNewDeployment(Deployment deployment) {\n         deploymentStatusKeeper.persistAndPublishDeploymentStatus(deployment.getId(), deployment.getDeploymentType(),\n                 JobStatus.IN_PROGRESS.toString(), new HashMap<>());\n         try {\n-            deploymentDirectoryManager.createNewDeploymentDirectoryIfNotExists(\n+            deploymentDirectoryManager.createNewDeploymentDirectory(\n                     deployment.getDeploymentDocumentObj().getDeploymentId());\n             deploymentDirectoryManager.writeDeploymentMetadata(deployment);\n         } catch (IOException ioException) {\n-            logger.atError().log(\"Unable to create deployment directory\", ioException);\n+            logger.atError().log(\"Unable to create deployment directory. Ignoring\", ioException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85fc15ac82bd3fae8acf7830213a28f95ae6e50b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTk1NjQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateAction.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMToyNToxN1rOHtBACQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTo1MTo1NVrOHtBvzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2NDM2MQ==", "bodyText": "add the deployment ID in here too", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/612#discussion_r516964361", "createdAt": "2020-11-03T21:25:17Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateAction.java", "diffHunk": "@@ -0,0 +1,16 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.dependency.Crashable;\n+import lombok.Value;\n+\n+@Value\n+public class UpdateAction {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85fc15ac82bd3fae8acf7830213a28f95ae6e50b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3NTU5Mw==", "bodyText": "Can we always assume we have one pending update action? Or do we send one PreComponentUpdateEvent for each update action?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/612#discussion_r516975593", "createdAt": "2020-11-03T21:49:50Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateAction.java", "diffHunk": "@@ -0,0 +1,16 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.dependency.Crashable;\n+import lombok.Value;\n+\n+@Value\n+public class UpdateAction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2NDM2MQ=="}, "originalCommit": {"oid": "85fc15ac82bd3fae8acf7830213a28f95ae6e50b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3NjI3MQ==", "bodyText": "Also I just realized deploymentId is already the key in the pending actions map", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/612#discussion_r516976271", "createdAt": "2020-11-03T21:51:13Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateAction.java", "diffHunk": "@@ -0,0 +1,16 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.dependency.Crashable;\n+import lombok.Value;\n+\n+@Value\n+public class UpdateAction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2NDM2MQ=="}, "originalCommit": {"oid": "85fc15ac82bd3fae8acf7830213a28f95ae6e50b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3NjU4OQ==", "bodyText": "Just throw it in and then I'll figure it out in my change later.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/612#discussion_r516976589", "createdAt": "2020-11-03T21:51:55Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateAction.java", "diffHunk": "@@ -0,0 +1,16 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.dependency.Crashable;\n+import lombok.Value;\n+\n+@Value\n+public class UpdateAction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2NDM2MQ=="}, "originalCommit": {"oid": "85fc15ac82bd3fae8acf7830213a28f95ae6e50b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDQ0MTU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMDo0NjozNVrOHtFckA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMDo1MDozMFrOHtFgnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAzNzIwMA==", "bodyText": "will this update the job status? The job status was just updated to be in progress on L400", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/612#discussion_r517037200", "createdAt": "2020-11-04T00:46:35Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -398,11 +399,16 @@ private void createNewDeployment(Deployment deployment) {\n         deploymentStatusKeeper.persistAndPublishDeploymentStatus(deployment.getId(), deployment.getDeploymentType(),\n                 JobStatus.IN_PROGRESS.toString(), new HashMap<>());\n         try {\n-            deploymentDirectoryManager.createNewDeploymentDirectoryIfNotExists(\n+            deploymentDirectoryManager.createNewDeploymentDirectory(\n                     deployment.getDeploymentDocumentObj().getDeploymentId());\n             deploymentDirectoryManager.writeDeploymentMetadata(deployment);\n         } catch (IOException ioException) {\n             logger.atError().log(\"Unable to create deployment directory\", ioException);\n+            CompletableFuture<DeploymentResult> process = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f9412d39efa543d00d189054fbc4a5cb7002eb9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAzODIzNg==", "bodyText": "Yes. It will be reported in finishCurrentDeployment from the main loop in DeploymentService https://github.com/aws/aws-greengrass-nucleus/blob/6f9412d39efa543d00d189054fbc4a5cb7002eb9/src/main/java/com/aws/greengrass/deployment/DeploymentService.java#L175-L178\nAlso added test https://github.com/aws/aws-greengrass-nucleus/pull/612/files#diff-7162e2dd9781fc6302332fc5f172f2e8c27c99a7db5ea57193cfe0121c9ed76a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/612#discussion_r517038236", "createdAt": "2020-11-04T00:50:30Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -398,11 +399,16 @@ private void createNewDeployment(Deployment deployment) {\n         deploymentStatusKeeper.persistAndPublishDeploymentStatus(deployment.getId(), deployment.getDeploymentType(),\n                 JobStatus.IN_PROGRESS.toString(), new HashMap<>());\n         try {\n-            deploymentDirectoryManager.createNewDeploymentDirectoryIfNotExists(\n+            deploymentDirectoryManager.createNewDeploymentDirectory(\n                     deployment.getDeploymentDocumentObj().getDeploymentId());\n             deploymentDirectoryManager.writeDeploymentMetadata(deployment);\n         } catch (IOException ioException) {\n             logger.atError().log(\"Unable to create deployment directory\", ioException);\n+            CompletableFuture<DeploymentResult> process = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAzNzIwMA=="}, "originalCommit": {"oid": "6f9412d39efa543d00d189054fbc4a5cb7002eb9"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 463, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}