{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNTk4MDc4", "number": 693, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0MzowMVrOE6KiGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo1MDozOFrOE6KunA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDI1NDMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0MzowMVrOH1D4Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTozOToyMlrOH1GTZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwMDA5NA==", "bodyText": "Nit: remove whitespace", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/693#discussion_r525400094", "createdAt": "2020-11-17T18:43:01Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "diffHunk": "@@ -340,7 +340,22 @@ private Instant getExpiryPolicyForErr(int statusCode) {\n      */\n     private boolean areCredentialsValid(TESCache cacheEntry) {\n         Instant now = Instant.now(clock);\n-        return now.isBefore(cacheEntry.expiry);\n+        return cacheEntry.credentials != null && now.isBefore(cacheEntry.expiry);\n+    }\n+\n+    /**\n+     * Clear cached credentials.\n+     *\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456fdf9d96f97c45dcc205d873c3a78973ecf7ee"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzOTg0NQ==", "bodyText": "thanks. removed", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/693#discussion_r525439845", "createdAt": "2020-11-17T19:39:22Z", "author": {"login": "youtuyy"}, "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "diffHunk": "@@ -340,7 +340,22 @@ private Instant getExpiryPolicyForErr(int statusCode) {\n      */\n     private boolean areCredentialsValid(TESCache cacheEntry) {\n         Instant now = Instant.now(clock);\n-        return now.isBefore(cacheEntry.expiry);\n+        return cacheEntry.credentials != null && now.isBefore(cacheEntry.expiry);\n+    }\n+\n+    /**\n+     * Clear cached credentials.\n+     *\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwMDA5NA=="}, "originalCommit": {"oid": "456fdf9d96f97c45dcc205d873c3a78973ecf7ee"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDI4MzI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0OTo1NVrOH1EJHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTozOToyOVrOH1GT5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNDQ0Ng==", "bodyText": "can tesCache.get(iotCredentialsPath) ever be null? it doesn't appear to be checked elsewhere", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/693#discussion_r525404446", "createdAt": "2020-11-17T18:49:55Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "diffHunk": "@@ -340,7 +340,22 @@ private Instant getExpiryPolicyForErr(int statusCode) {\n      */\n     private boolean areCredentialsValid(TESCache cacheEntry) {\n         Instant now = Instant.now(clock);\n-        return now.isBefore(cacheEntry.expiry);\n+        return cacheEntry.credentials != null && now.isBefore(cacheEntry.expiry);\n+    }\n+\n+    /**\n+     * Clear cached credentials.\n+     *\n+     */\n+    @SuppressWarnings(\"PMD.NullAssignment\")\n+    public void clearCache() {\n+        if (iotCredentialsPath != null && tesCache.get(iotCredentialsPath) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456fdf9d96f97c45dcc205d873c3a78973ecf7ee"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzOTk3NQ==", "bodyText": "yeah you're right. it will not be null. checking if key exists instead", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/693#discussion_r525439975", "createdAt": "2020-11-17T19:39:29Z", "author": {"login": "youtuyy"}, "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "diffHunk": "@@ -340,7 +340,22 @@ private Instant getExpiryPolicyForErr(int statusCode) {\n      */\n     private boolean areCredentialsValid(TESCache cacheEntry) {\n         Instant now = Instant.now(clock);\n-        return now.isBefore(cacheEntry.expiry);\n+        return cacheEntry.credentials != null && now.isBefore(cacheEntry.expiry);\n+    }\n+\n+    /**\n+     * Clear cached credentials.\n+     *\n+     */\n+    @SuppressWarnings(\"PMD.NullAssignment\")\n+    public void clearCache() {\n+        if (iotCredentialsPath != null && tesCache.get(iotCredentialsPath) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNDQ0Ng=="}, "originalCommit": {"oid": "456fdf9d96f97c45dcc205d873c3a78973ecf7ee"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDI4NjM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo1MDozOFrOH1EK_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDoyNzowMVrOH1Q9rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNDkyNg==", "bodyText": "does the credential path ever change? does the map ever get cleared of entries?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/693#discussion_r525404926", "createdAt": "2020-11-17T18:50:38Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "diffHunk": "@@ -340,7 +340,22 @@ private Instant getExpiryPolicyForErr(int statusCode) {\n      */\n     private boolean areCredentialsValid(TESCache cacheEntry) {\n         Instant now = Instant.now(clock);\n-        return now.isBefore(cacheEntry.expiry);\n+        return cacheEntry.credentials != null && now.isBefore(cacheEntry.expiry);\n+    }\n+\n+    /**\n+     * Clear cached credentials.\n+     *\n+     */\n+    @SuppressWarnings(\"PMD.NullAssignment\")\n+    public void clearCache() {\n+        if (iotCredentialsPath != null && tesCache.get(iotCredentialsPath) != null) {\n+            LOGGER.atDebug().kv(IOT_CRED_PATH_KEY, iotCredentialsPath).log(\"Clearing TES cache\");\n+            TESCache cacheEntry = tesCache.get(iotCredentialsPath);\n+            cacheEntry.credentials = null;\n+            cacheEntry.responseCode = 0;\n+            cacheEntry.expiry = Instant.EPOCH;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456fdf9d96f97c45dcc205d873c3a78973ecf7ee"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0MDA3OQ==", "bodyText": "iotCredentialsPath will be changed when new iotRoleAlias is set. here it will only reset the values of entries to its default, but the map will not be cleared", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/693#discussion_r525440079", "createdAt": "2020-11-17T19:39:33Z", "author": {"login": "youtuyy"}, "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "diffHunk": "@@ -340,7 +340,22 @@ private Instant getExpiryPolicyForErr(int statusCode) {\n      */\n     private boolean areCredentialsValid(TESCache cacheEntry) {\n         Instant now = Instant.now(clock);\n-        return now.isBefore(cacheEntry.expiry);\n+        return cacheEntry.credentials != null && now.isBefore(cacheEntry.expiry);\n+    }\n+\n+    /**\n+     * Clear cached credentials.\n+     *\n+     */\n+    @SuppressWarnings(\"PMD.NullAssignment\")\n+    public void clearCache() {\n+        if (iotCredentialsPath != null && tesCache.get(iotCredentialsPath) != null) {\n+            LOGGER.atDebug().kv(IOT_CRED_PATH_KEY, iotCredentialsPath).log(\"Clearing TES cache\");\n+            TESCache cacheEntry = tesCache.get(iotCredentialsPath);\n+            cacheEntry.credentials = null;\n+            cacheEntry.responseCode = 0;\n+            cacheEntry.expiry = Instant.EPOCH;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNDkyNg=="}, "originalCommit": {"oid": "456fdf9d96f97c45dcc205d873c3a78973ecf7ee"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYxMDU0OQ==", "bodyText": "isn't this a tiny memory leak then if it never gets removed? Is there any harm in removing it?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/693#discussion_r525610549", "createdAt": "2020-11-18T00:15:34Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "diffHunk": "@@ -340,7 +340,22 @@ private Instant getExpiryPolicyForErr(int statusCode) {\n      */\n     private boolean areCredentialsValid(TESCache cacheEntry) {\n         Instant now = Instant.now(clock);\n-        return now.isBefore(cacheEntry.expiry);\n+        return cacheEntry.credentials != null && now.isBefore(cacheEntry.expiry);\n+    }\n+\n+    /**\n+     * Clear cached credentials.\n+     *\n+     */\n+    @SuppressWarnings(\"PMD.NullAssignment\")\n+    public void clearCache() {\n+        if (iotCredentialsPath != null && tesCache.get(iotCredentialsPath) != null) {\n+            LOGGER.atDebug().kv(IOT_CRED_PATH_KEY, iotCredentialsPath).log(\"Clearing TES cache\");\n+            TESCache cacheEntry = tesCache.get(iotCredentialsPath);\n+            cacheEntry.credentials = null;\n+            cacheEntry.responseCode = 0;\n+            cacheEntry.expiry = Instant.EPOCH;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNDkyNg=="}, "originalCommit": {"oid": "456fdf9d96f97c45dcc205d873c3a78973ecf7ee"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYxNDUxMQ==", "bodyText": "Talked with @youtuyy - if the role alias is changed, the kernel restarts so this cache will be discarded", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/693#discussion_r525614511", "createdAt": "2020-11-18T00:27:01Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/tes/CredentialRequestHandler.java", "diffHunk": "@@ -340,7 +340,22 @@ private Instant getExpiryPolicyForErr(int statusCode) {\n      */\n     private boolean areCredentialsValid(TESCache cacheEntry) {\n         Instant now = Instant.now(clock);\n-        return now.isBefore(cacheEntry.expiry);\n+        return cacheEntry.credentials != null && now.isBefore(cacheEntry.expiry);\n+    }\n+\n+    /**\n+     * Clear cached credentials.\n+     *\n+     */\n+    @SuppressWarnings(\"PMD.NullAssignment\")\n+    public void clearCache() {\n+        if (iotCredentialsPath != null && tesCache.get(iotCredentialsPath) != null) {\n+            LOGGER.atDebug().kv(IOT_CRED_PATH_KEY, iotCredentialsPath).log(\"Clearing TES cache\");\n+            TESCache cacheEntry = tesCache.get(iotCredentialsPath);\n+            cacheEntry.credentials = null;\n+            cacheEntry.responseCode = 0;\n+            cacheEntry.expiry = Instant.EPOCH;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNDkyNg=="}, "originalCommit": {"oid": "456fdf9d96f97c45dcc205d873c3a78973ecf7ee"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 259, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}