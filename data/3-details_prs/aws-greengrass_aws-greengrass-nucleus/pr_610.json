{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0ODE4ODM3", "number": 610, "title": "Setup script changes", "bodyText": "Issue #, if available:\nDescription of changes:\nClean up CLI options\nUse defaults wherever we can to reduce no of things customer needs to input\nCreate an initial deployment to deploy components like CLI and HttpDebugView on the new device, if the thing group exists, then its existing deployment will automatically be pulled down to the device so that's a no-op. If customer hasn't provided a thing group name we create a shadow deployment.\nCreate ggc_user and ggc_group if the script is run as superuser and default user / group inputs are not provided\nWhy is this change necessary:\nWe need these changes per the revised provisioning experience\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-11-03T15:37:21Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610", "merged": true, "mergeCommit": {"oid": "c5964fb776fbb11e2af15b79d4755b9e0faad7f7"}, "closed": true, "closedAt": "2020-11-07T01:06:59Z", "author": {"login": "shaguptashaikh"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY8g7IgFqTUyMjcxMzgyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdaA5evgFqTUyNTU3NDU3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNzEzODI4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#pullrequestreview-522713828", "createdAt": "2020-11-03T17:14:44Z", "commit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzoxNDo0NFrOHs4u1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzoyMToxMFrOHs4_Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyODg4NA==", "bodyText": "tes shouldn't need this one anymore I think, as long as everything is going through moonraker", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r516828884", "createdAt": "2020-11-03T17:14:44Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -69,29 +83,61 @@\n  */\n @Getter\n public class DeviceProvisioningHelper {\n-\n-    public static final Map<EnvironmentStage, String> GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n-            EnvironmentStage.PROD, \"greengrass-ats.iot.%s.amazonaws.com:8443/greengrass\",\n-            EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.amazonaws.com:8443/greengrass\",\n-            EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.amazonaws.com:8443/greengrass\"\n-    );\n+    private static final String GG_THING_POLICY_NAME = \"GreengrassV2ThingPolicy\";\n+    private static final String GG_TOKEN_EXCHANGE_ROLE_ACCESS_POLICY_SUFFIX = \"Access\";\n+    private static final String GG_TOKEN_EXCHANGE_ROLE_ACCESS_POLICY_DOCUMENT = \"{\\n\"\n+            + \"    \\\"Version\\\": \\\"2012-10-17\\\",\\n\"\n+            + \"    \\\"Statement\\\": [\\n\"\n+            + \"        {\\n\"\n+            + \"            \\\"Effect\\\": \\\"Allow\\\",\\n\"\n+            + \"            \\\"Action\\\": [\\n\"\n+            + \"                \\\"greengrass:*\\\",\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyODk3Mw==", "bodyText": "not needed", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r516828973", "createdAt": "2020-11-03T17:14:52Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -69,29 +83,61 @@\n  */\n @Getter\n public class DeviceProvisioningHelper {\n-\n-    public static final Map<EnvironmentStage, String> GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n-            EnvironmentStage.PROD, \"greengrass-ats.iot.%s.amazonaws.com:8443/greengrass\",\n-            EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.amazonaws.com:8443/greengrass\",\n-            EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.amazonaws.com:8443/greengrass\"\n-    );\n+    private static final String GG_THING_POLICY_NAME = \"GreengrassV2ThingPolicy\";\n+    private static final String GG_TOKEN_EXCHANGE_ROLE_ACCESS_POLICY_SUFFIX = \"Access\";\n+    private static final String GG_TOKEN_EXCHANGE_ROLE_ACCESS_POLICY_DOCUMENT = \"{\\n\"\n+            + \"    \\\"Version\\\": \\\"2012-10-17\\\",\\n\"\n+            + \"    \\\"Statement\\\": [\\n\"\n+            + \"        {\\n\"\n+            + \"            \\\"Effect\\\": \\\"Allow\\\",\\n\"\n+            + \"            \\\"Action\\\": [\\n\"\n+            + \"                \\\"greengrass:*\\\",\\n\"\n+            + \"                \\\"iot:DescribeCertificate\\\",\\n\"\n+            + \"                \\\"logs:CreateLogGroup\\\",\\n\"\n+            + \"                \\\"logs:CreateLogStream\\\",\\n\"\n+            + \"                \\\"logs:PutLogEvents\\\",\\n\"\n+            + \"                \\\"logs:DescribeLogStreams\\\",\\n\"\n+            + \"                \\\"iot:Connect\\\",\\n\"\n+            + \"                \\\"iot:Publish\\\",\\n\"\n+            + \"                \\\"iot:Subscribe\\\",\\n\"\n+            + \"                \\\"iot:Receive\\\",\\n\"\n+            + \"                \\\"iot:GetThingShadow\\\",\\n\"\n+            + \"                \\\"iot:UpdateThingShadow\\\"\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMTUwOQ==", "bodyText": "we do need this argument for testing AFAIK. We don't need to print it out in the help, but I think we still need it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r516831509", "createdAt": "2020-11-03T17:19:01Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -78,53 +69,29 @@\n     private static final String DEFAULT_GROUP_ARG = \"--component-default-group\";\n     private static final String DEFAULT_GROUP_ARG_SHORT = \"-g\";\n \n-\n     private static final String THING_NAME_ARG = \"--thing-name\";\n     private static final String THING_NAME_ARG_SHORT = \"-tn\";\n     private static final String THING_NAME_DEFAULT = \"MyIotThing\";\n \n     private static final String THING_GROUP_NAME_ARG = \"--thing-group-name\";\n     private static final String THING_GROUP_NAME_ARG_SHORT = \"-tgn\";\n-    private static final String THING_GROUP_NAME_DEFAULT = \"MyIotThingGroup\";\n-\n-    private static final String POLICY_NAME_ARG = \"--policy-name\";\n-    private static final String POLICY_NAME_ARG_SHORT = \"-pn\";\n-    private static final String POLICY_NAME_DEFAULT = \"MyIotThingPolicy\";\n \n     private static final String TES_ROLE_NAME_ARG = \"--tes-role-name\";\n     private static final String TES_ROLE_NAME_ARG_SHORT = \"-trn\";\n-    private static final String TES_ROLE_NAME_DEFAULT = \"MyIotRoleForTes\";\n-\n-    // no defaults. must user input\n-    private static final String TES_ROLE_POLICY_NAME_ARG = \"--tes-role-policy-name\";\n-    private static final String TES_ROLE_POLICY_NAME_ARG_SHORT = \"-trpn\";\n-    private static final String TES_ROLE_POLICY_DOC_ARG = \"--tes-role-policy-doc\";\n-    private static final String TES_ROLE_POLICY_DOC_ARG_SHORT = \"-trpd\";\n+    private static final String TES_ROLE_NAME_DEFAULT = \"GreengrassV2TokenExchangeRole\";\n \n     private static final String TES_ROLE_ALIAS_NAME_ARG = \"--tes-role-alias-name\";\n     private static final String TES_ROLE_ALIAS_NAME_ARG_SHORT = \"-tra\";\n-    private static final String TES_ROLE_ALIAS_NAME_DEFAULT = \"MyIotRoleAliasForTes\";\n+    private static final String TES_ROLE_ALIAS_NAME_DEFAULT = \"GreengrassV2TokenExchangeRoleAlias\";\n \n     private static final String PROVISION_THING_ARG = \"--provision\";\n     private static final String PROVISION_THING_ARG_SHORT = \"-p\";\n     private static final boolean NEED_PROVISIONING_DEFAULT = false;\n \n-    private static final String SETUP_TES_ARG = \"--setup-tes\";\n-    private static final String SETUP_TES_ARG_SHORT = \"-t\";\n-    private static final boolean SETUP_TES_DEFAULT = false;\n-\n     private static final String AWS_REGION_ARG = \"--aws-region\";\n     private static final String AWS_REGION_ARG_SHORT = \"-ar\";\n     private static final String AWS_REGION_DEFAULT = \"us-east-1\";\n \n-    private static final String ENV_STAGE_ARG = \"--env-stage\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMjI3Nw==", "bodyText": "Need S3:GetObject and S3:GetBucketLocation", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r516832277", "createdAt": "2020-11-03T17:20:05Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -69,29 +83,61 @@\n  */\n @Getter\n public class DeviceProvisioningHelper {\n-\n-    public static final Map<EnvironmentStage, String> GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n-            EnvironmentStage.PROD, \"greengrass-ats.iot.%s.amazonaws.com:8443/greengrass\",\n-            EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.amazonaws.com:8443/greengrass\",\n-            EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.amazonaws.com:8443/greengrass\"\n-    );\n+    private static final String GG_THING_POLICY_NAME = \"GreengrassV2ThingPolicy\";\n+    private static final String GG_TOKEN_EXCHANGE_ROLE_ACCESS_POLICY_SUFFIX = \"Access\";\n+    private static final String GG_TOKEN_EXCHANGE_ROLE_ACCESS_POLICY_DOCUMENT = \"{\\n\"\n+            + \"    \\\"Version\\\": \\\"2012-10-17\\\",\\n\"\n+            + \"    \\\"Statement\\\": [\\n\"\n+            + \"        {\\n\"\n+            + \"            \\\"Effect\\\": \\\"Allow\\\",\\n\"\n+            + \"            \\\"Action\\\": [\\n\"\n+            + \"                \\\"greengrass:*\\\",\\n\"\n+            + \"                \\\"iot:DescribeCertificate\\\",\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMjY0MQ==", "bodyText": "capital N", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r516832641", "createdAt": "2020-11-03T17:20:36Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -402,19 +312,14 @@ void provision(Kernel kernel) throws IOException, DeviceConfigurationException {\n                         thingGroupName);\n             outStream.printf(\"Successfully added Thing into Thing Group: [%s]%n\", thingGroupName);\n         }\n-\n-        // TODO: [P41215965]: setupTes should not be an arg anymore since role alias is required, need to remove\n-        //  this arg and always pass either user specified or a default role alias\n-        if (setupTes) {\n-            outStream.println(\"Setting up resources for TokenExchangeService...\");\n-            deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n-            if (tesRolePolicyName != null && tesRolePolicyDoc != null) {\n-                deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName, tesRolePolicyName, tesRolePolicyDoc);\n-            }\n-        }\n-        outStream.println(\"Configuring kernel with provisioned resource details...\");\n+        outStream.println(\"Setting up resources for TokenExchangeService...\");\n+        deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n+        deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName);\n+        outStream.println(\"Configuring nucleus with provisioned resource details...\");\n         deviceProvisioningHelper.updateKernelConfigWithIotConfiguration(kernel, thingInfo, awsRegion, tesRoleAliasName);\n         outStream.println(\"Successfully configured kernel with provisioned resource details!\");\n+        deviceProvisioningHelper.createInitialDeploymentIfNeeded(thingInfo, thingGroupName);\n+        outStream.println(\"Configured nucleus to download HttpDebugView and GreengrassCli components\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089"}, "originalPosition": 236}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMjc0Nw==", "bodyText": "capital N", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r516832747", "createdAt": "2020-11-03T17:20:42Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -402,19 +312,14 @@ void provision(Kernel kernel) throws IOException, DeviceConfigurationException {\n                         thingGroupName);\n             outStream.printf(\"Successfully added Thing into Thing Group: [%s]%n\", thingGroupName);\n         }\n-\n-        // TODO: [P41215965]: setupTes should not be an arg anymore since role alias is required, need to remove\n-        //  this arg and always pass either user specified or a default role alias\n-        if (setupTes) {\n-            outStream.println(\"Setting up resources for TokenExchangeService...\");\n-            deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n-            if (tesRolePolicyName != null && tesRolePolicyDoc != null) {\n-                deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName, tesRolePolicyName, tesRolePolicyDoc);\n-            }\n-        }\n-        outStream.println(\"Configuring kernel with provisioned resource details...\");\n+        outStream.println(\"Setting up resources for TokenExchangeService...\");\n+        deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n+        deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName);\n+        outStream.println(\"Configuring nucleus with provisioned resource details...\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089"}, "originalPosition": 232}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMjg0Mg==", "bodyText": "use const for the real name of TES", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r516832842", "createdAt": "2020-11-03T17:20:50Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -402,19 +312,14 @@ void provision(Kernel kernel) throws IOException, DeviceConfigurationException {\n                         thingGroupName);\n             outStream.printf(\"Successfully added Thing into Thing Group: [%s]%n\", thingGroupName);\n         }\n-\n-        // TODO: [P41215965]: setupTes should not be an arg anymore since role alias is required, need to remove\n-        //  this arg and always pass either user specified or a default role alias\n-        if (setupTes) {\n-            outStream.println(\"Setting up resources for TokenExchangeService...\");\n-            deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n-            if (tesRolePolicyName != null && tesRolePolicyDoc != null) {\n-                deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName, tesRolePolicyName, tesRolePolicyDoc);\n-            }\n-        }\n-        outStream.println(\"Configuring kernel with provisioned resource details...\");\n+        outStream.println(\"Setting up resources for TokenExchangeService...\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMjk2MQ==", "bodyText": "Use consts for the real name of http and cli", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r516832961", "createdAt": "2020-11-03T17:21:02Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -402,19 +312,14 @@ void provision(Kernel kernel) throws IOException, DeviceConfigurationException {\n                         thingGroupName);\n             outStream.printf(\"Successfully added Thing into Thing Group: [%s]%n\", thingGroupName);\n         }\n-\n-        // TODO: [P41215965]: setupTes should not be an arg anymore since role alias is required, need to remove\n-        //  this arg and always pass either user specified or a default role alias\n-        if (setupTes) {\n-            outStream.println(\"Setting up resources for TokenExchangeService...\");\n-            deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n-            if (tesRolePolicyName != null && tesRolePolicyDoc != null) {\n-                deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName, tesRolePolicyName, tesRolePolicyDoc);\n-            }\n-        }\n-        outStream.println(\"Configuring kernel with provisioned resource details...\");\n+        outStream.println(\"Setting up resources for TokenExchangeService...\");\n+        deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n+        deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName);\n+        outStream.println(\"Configuring nucleus with provisioned resource details...\");\n         deviceProvisioningHelper.updateKernelConfigWithIotConfiguration(kernel, thingInfo, awsRegion, tesRoleAliasName);\n         outStream.println(\"Successfully configured kernel with provisioned resource details!\");\n+        deviceProvisioningHelper.createInitialDeploymentIfNeeded(thingInfo, thingGroupName);\n+        outStream.println(\"Configured nucleus to download HttpDebugView and GreengrassCli components\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMjY0MQ=="}, "originalCommit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089"}, "originalPosition": 236}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMzA1MA==", "bodyText": "capital N", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r516833050", "createdAt": "2020-11-03T17:21:10Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/README.md", "diffHunk": "@@ -1,14 +1,13 @@\n # Easy setup script\n The setup script is intended to give a brand new user of Greengrass to get started with Greengrass device quickly.\n-As part of that experience the user can get a fat jar for the Greengrass kernel, the script can launch the kernel\n+As part of that experience the user can get a fat jar for the Greengrass nucleus, the script can launch the nucleus", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60c0efe2d7adee9f5a2a2851f24252de2a5b4089", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/60c0efe2d7adee9f5a2a2851f24252de2a5b4089", "committedDate": "2020-11-03T15:32:42Z", "message": "Setup script changes"}, "afterCommit": {"oid": "c9089ccdd19b83fa8b61c24f422bdf5d3173ee4e", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c9089ccdd19b83fa8b61c24f422bdf5d3173ee4e", "committedDate": "2020-11-05T17:55:43Z", "message": "Setup script changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9089ccdd19b83fa8b61c24f422bdf5d3173ee4e", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c9089ccdd19b83fa8b61c24f422bdf5d3173ee4e", "committedDate": "2020-11-05T17:55:43Z", "message": "Setup script changes"}, "afterCommit": {"oid": "8fc984e3b7a830adfdfa868a534a20fb72399680", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8fc984e3b7a830adfdfa868a534a20fb72399680", "committedDate": "2020-11-05T17:59:30Z", "message": "Setup script changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fc984e3b7a830adfdfa868a534a20fb72399680", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8fc984e3b7a830adfdfa868a534a20fb72399680", "committedDate": "2020-11-05T17:59:30Z", "message": "Setup script changes"}, "afterCommit": {"oid": "d232d81581aead69005b0fd60bb8d98e9789cf3d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d232d81581aead69005b0fd60bb8d98e9789cf3d", "committedDate": "2020-11-05T19:24:31Z", "message": "Setup script changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d232d81581aead69005b0fd60bb8d98e9789cf3d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d232d81581aead69005b0fd60bb8d98e9789cf3d", "committedDate": "2020-11-05T19:24:31Z", "message": "Setup script changes"}, "afterCommit": {"oid": "af52f3472963199cc43f155bbb2342c2bf59ee7f", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/af52f3472963199cc43f155bbb2342c2bf59ee7f", "committedDate": "2020-11-05T19:29:47Z", "message": "Setup script changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af52f3472963199cc43f155bbb2342c2bf59ee7f", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/af52f3472963199cc43f155bbb2342c2bf59ee7f", "committedDate": "2020-11-05T19:29:47Z", "message": "Setup script changes"}, "afterCommit": {"oid": "2a294b0a414a0fd00cbd423d9c7d3e95a3132c87", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2a294b0a414a0fd00cbd423d9c7d3e95a3132c87", "committedDate": "2020-11-05T19:33:22Z", "message": "Setup script changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a294b0a414a0fd00cbd423d9c7d3e95a3132c87", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2a294b0a414a0fd00cbd423d9c7d3e95a3132c87", "committedDate": "2020-11-05T19:33:22Z", "message": "Setup script changes"}, "afterCommit": {"oid": "bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217", "committedDate": "2020-11-05T20:32:47Z", "message": "Setup script changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NzEwMjc3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#pullrequestreview-524710277", "createdAt": "2020-11-05T22:06:58Z", "commit": {"oid": "bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMjowNjo1OFrOHuYjPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMjoxMjo0N1rOHuYtjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM5ODc4Mg==", "bodyText": "we don't need this anymore? How does it get the right IoT client for the proper stage?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518398782", "createdAt": "2020-11-05T22:06:58Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -368,21 +315,9 @@ void parseArgs() {\n             }\n         }\n \n-        // validate args\n-        if (this.tesRolePolicyName == null ^ this.tesRolePolicyDoc == null) {\n-            throw new RuntimeException(String.format(\"%s and %s must be provided together\", TES_ROLE_POLICY_NAME_ARG,\n-                    TES_ROLE_POLICY_DOC_ARG));\n-        }\n-\n         if (Region.of(awsRegion) == null) {\n             throw new RuntimeException(String.format(\"%s is invalid AWS region\", awsRegion));\n         }\n-\n-        try {\n-            IotSdkClientFactory.EnvironmentStage.fromString(environmentStage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM5OTQ5NQ==", "bodyText": "I think the S needs to be lowercase\nAlso, needs s3:HeadObject and s3:GetObject if you don't add it, we should at least print that we need those permissions.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518399495", "createdAt": "2020-11-05T22:08:35Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -69,59 +82,93 @@\n  */\n @Getter\n public class DeviceProvisioningHelper {\n-\n-    public static final Map<EnvironmentStage, String> GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n-            EnvironmentStage.PROD, \"greengrass-ats.iot.%s.amazonaws.com:8443/greengrass\",\n-            EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.amazonaws.com:8443/greengrass\",\n-            EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.amazonaws.com:8443/greengrass\"\n-    );\n-\n+    public static final Map<EnvironmentStage, String> GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap\n+            .of(EnvironmentStage.PROD, \"greengrass-ats.iot.%s.amazonaws.com:8443/greengrass\", EnvironmentStage.GAMMA,\n+                    \"greengrass-ats.gamma.%s.iot.amazonaws.com:8443/greengrass\", EnvironmentStage.BETA,\n+                    \"greengrass-ats.beta.%s.iot.amazonaws.com:8443/greengrass\");\n+    private static final String GG_THING_POLICY_NAME = \"GreengrassV2ThingPolicy\";\n+    private static final String GG_TOKEN_EXCHANGE_ROLE_ACCESS_POLICY_SUFFIX = \"Access\";\n+    private static final String GG_TOKEN_EXCHANGE_ROLE_ACCESS_POLICY_DOCUMENT =\n+            \"{\\n\" + \"    \\\"Version\\\": \\\"2012-10-17\\\",\\n\"\n+                    + \"    \\\"Statement\\\": [\\n\"\n+                    + \"        {\\n\"\n+                    + \"            \\\"Effect\\\": \\\"Allow\\\",\\n\"\n+                    + \"            \\\"Action\\\": [\\n\"\n+                    + \"                \\\"iot:DescribeCertificate\\\",\\n\"\n+                    + \"                \\\"logs:CreateLogGroup\\\",\\n\"\n+                    + \"                \\\"logs:CreateLogStream\\\",\\n\"\n+                    + \"                \\\"logs:PutLogEvents\\\",\\n\"\n+                    + \"                \\\"logs:DescribeLogStreams\\\",\\n\"\n+                    + \"                \\\"iot:Connect\\\",\\n\"\n+                    + \"                \\\"iot:Publish\\\",\\n\"\n+                    + \"                \\\"iot:Subscribe\\\",\\n\"\n+                    + \"                \\\"iot:Receive\\\",\\n\"\n+                    + \"                \\\"S3:GetBucketLocation\\\",\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM5OTk1OQ==", "bodyText": "combine strings", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518399959", "createdAt": "2020-11-05T22:09:35Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -363,8 +432,83 @@ public void addThingToGroup(IotClient iotClient, String thingName, String thingG\n         } catch (ResourceAlreadyExistsException e) {\n             outStream.printf(\"IoT Thing Group \\\"%s\\\" already existed, reusing it%n\", thingGroupName);\n         }\n-        iotClient.addThingToThingGroup(AddThingToThingGroupRequest.builder()\n-                .thingName(thingName).thingGroupName(thingGroupName).build());\n+        iotClient.addThingToThingGroup(\n+                AddThingToThingGroupRequest.builder().thingName(thingName).thingGroupName(thingGroupName).build());\n+    }\n+\n+    private boolean thingGroupExists(String thingGroupName) {\n+        try {\n+            return thingGroupName.equals(iotClient\n+                    .describeThingGroup(DescribeThingGroupRequest.builder().thingGroupName(thingGroupName).build())\n+                    .thingGroupName());\n+        } catch (ResourceNotFoundException e) {\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Creates an initial deployment to deploy dev tools like the Greengrass CLI and the Http Debug View component.\n+     *\n+     * @param thingInfo thing info for the device\n+     * @param thingGroupName thing group name\n+     */\n+    public void createInitialDeploymentIfNeeded(ThingInfo thingInfo, String thingGroupName) {\n+        if (Utils.isNotEmpty(thingGroupName) && thingGroupExists(thingGroupName)) {\n+            outStream.println(\n+                    \"Thing group exists, no need to create a deployment for Greengrass first party \" + \"components\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217"}, "originalPosition": 264}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQwMDMwNw==", "bodyText": "after creating users, set them as the default user in the config?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518400307", "createdAt": "2020-11-05T22:10:19Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -363,8 +432,83 @@ public void addThingToGroup(IotClient iotClient, String thingName, String thingG\n         } catch (ResourceAlreadyExistsException e) {\n             outStream.printf(\"IoT Thing Group \\\"%s\\\" already existed, reusing it%n\", thingGroupName);\n         }\n-        iotClient.addThingToThingGroup(AddThingToThingGroupRequest.builder()\n-                .thingName(thingName).thingGroupName(thingGroupName).build());\n+        iotClient.addThingToThingGroup(\n+                AddThingToThingGroupRequest.builder().thingName(thingName).thingGroupName(thingGroupName).build());\n+    }\n+\n+    private boolean thingGroupExists(String thingGroupName) {\n+        try {\n+            return thingGroupName.equals(iotClient\n+                    .describeThingGroup(DescribeThingGroupRequest.builder().thingGroupName(thingGroupName).build())\n+                    .thingGroupName());\n+        } catch (ResourceNotFoundException e) {\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Creates an initial deployment to deploy dev tools like the Greengrass CLI and the Http Debug View component.\n+     *\n+     * @param thingInfo thing info for the device\n+     * @param thingGroupName thing group name\n+     */\n+    public void createInitialDeploymentIfNeeded(ThingInfo thingInfo, String thingGroupName) {\n+        if (Utils.isNotEmpty(thingGroupName) && thingGroupExists(thingGroupName)) {\n+            outStream.println(\n+                    \"Thing group exists, no need to create a deployment for Greengrass first party \" + \"components\");\n+            return;\n+        }\n+\n+        CreateDeploymentRequest deploymentRequest = new CreateDeploymentRequest().withDeploymentPolicies(\n+                new DeploymentPolicies()\n+                        .withConfigurationValidationPolicy(new ConfigurationValidationPolicy().withTimeout(60))\n+                        .withComponentUpdatePolicy(\n+                                new ComponentUpdatePolicy().withAction(ComponentUpdatePolicyAction.NOTIFY_COMPONENTS)\n+                                        .withTimeout(60)).withFailureHandlingPolicy(FailureHandlingPolicy.ROLLBACK));\n+\n+        if (Utils.isNotEmpty(thingGroupName)) {\n+            outStream.println(\"Creating a deployment for Greengrass first party components to the thing group\");\n+            deploymentRequest.withTargetName(thingGroupName).withTargetType(\"thinggroup\");\n+        } else {\n+            outStream.println(\"Creating a deployment for Greengrass first party components to the device\");\n+            deploymentRequest.withTargetName(thingInfo.thingName).withTargetType(\"thing\");\n+        }\n+\n+        // TODO : Add CLI component\n+        deploymentRequest.addComponentsEntry(HTTP_DEBUG_VIEW_COMPONENT_NAME,\n+                new ComponentInfo().withVersion(HTTP_DEBUG_VIEW__COMPONENT_VERSION));\n+\n+        greengrassClient.createDeployment(deploymentRequest);\n+    }\n+\n+    /**\n+     * Set the default user and group to run components with, if the current user is a super user and the user or group\n+     * are not provided then ggc_user or ggc_group will be created.\n+     *\n+     * @param defaultUser  default user provided by user\n+     * @param defaultGroup default group provided by user\n+     * @throws IOException          If the provided user or group does not exist\n+     * @throws InterruptedException Error creating ggc_user or ggc_group\n+     */\n+    public void setDefaultUserAndGroup(String defaultUser, String defaultGroup)\n+            throws IOException, InterruptedException {\n+        Platform platform = Platform.getInstance();\n+        // If not super user and default user option is not provided, the current user will be used\n+        // as the default user so we do not need to create anything here\n+        if (platform.lookupCurrentUser().isSuperUser()) {\n+            if (Utils.isNotEmpty(defaultUser)) {\n+                // Ensure user exists\n+                platform.lookupUserByName(defaultUser);\n+            } else {\n+                platform.createUser(GGC_USER);\n+            }\n+            if (Utils.isNotEmpty(defaultGroup)) {\n+                // Ensure group exists\n+                platform.lookupGroupByName(defaultGroup);\n+            } else {\n+                platform.createGroup(GGC_GROUP);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217"}, "originalPosition": 315}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQwMDY1MQ==", "bodyText": "Add TODO with SIM id to the windows epic.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518400651", "createdAt": "2020-11-05T22:11:02Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/platforms/WindowsPlatform.java", "diffHunk": "@@ -84,6 +84,16 @@ public void validateDefaultConfiguration(DeviceConfiguration deviceConfig)\n         };\n     }\n \n+    @Override\n+    public void createUser(String user) throws IOException, InterruptedException {\n+        // yet to support\n+    }\n+\n+    @Override\n+    public void createGroup(String group) throws IOException, InterruptedException {\n+        // yet to support", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQwMTM2OQ==", "bodyText": "cmd takes a varargs list. Each argument should be a separate argument", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518401369", "createdAt": "2020-11-05T22:12:41Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/platforms/unix/DarwinPlatform.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util.platforms.unix;\n+\n+import com.aws.greengrass.util.Exec;\n+\n+import java.io.IOException;\n+\n+public class DarwinPlatform extends UnixPlatform {\n+    @Override\n+    public void createUser(String user) throws IOException, InterruptedException {\n+        Exec.cmd(\"dscl . create /Users/\" + user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQwMTQyMQ==", "bodyText": "use varargs", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518401421", "createdAt": "2020-11-05T22:12:47Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/platforms/unix/UnixPlatform.java", "diffHunk": "@@ -307,6 +307,16 @@ public UnixRunWithGenerator getRunWithGenerator() {\n         return runWithGenerator;\n     }\n \n+    @Override\n+    public void createUser(String user) throws IOException, InterruptedException {\n+        Exec.cmd(\"useradd -m \" + user);\n+    }\n+\n+    @Override\n+    public void createGroup(String group) throws IOException, InterruptedException {\n+        Exec.cmd(\"groupadd\" + group);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bd5024ee05c1c2cb8e0572d10cfa7055fbd8e217", "committedDate": "2020-11-05T20:32:47Z", "message": "Setup script changes"}, "afterCommit": {"oid": "4667fe2c1376d5be17d77e73c24dad0af5428959", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4667fe2c1376d5be17d77e73c24dad0af5428959", "committedDate": "2020-11-06T06:37:53Z", "message": "Setup script changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4667fe2c1376d5be17d77e73c24dad0af5428959", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4667fe2c1376d5be17d77e73c24dad0af5428959", "committedDate": "2020-11-06T06:37:53Z", "message": "Setup script changes"}, "afterCommit": {"oid": "cb2233cd25f3bf73bbf06a1c8100b87a94954ee0", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cb2233cd25f3bf73bbf06a1c8100b87a94954ee0", "committedDate": "2020-11-06T06:38:53Z", "message": "Setup script changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb2233cd25f3bf73bbf06a1c8100b87a94954ee0", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cb2233cd25f3bf73bbf06a1c8100b87a94954ee0", "committedDate": "2020-11-06T06:38:53Z", "message": "Setup script changes"}, "afterCommit": {"oid": "3ca7f9fbd59f523d33e396728e800866d5ef1f5d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3ca7f9fbd59f523d33e396728e800866d5ef1f5d", "committedDate": "2020-11-06T06:51:24Z", "message": "Setup script changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ca7f9fbd59f523d33e396728e800866d5ef1f5d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3ca7f9fbd59f523d33e396728e800866d5ef1f5d", "committedDate": "2020-11-06T06:51:24Z", "message": "Setup script changes"}, "afterCommit": {"oid": "2d36be27942604638aeeda46620ecf98399bd170", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2d36be27942604638aeeda46620ecf98399bd170", "committedDate": "2020-11-06T07:45:04Z", "message": "Setup script changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d36be27942604638aeeda46620ecf98399bd170", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2d36be27942604638aeeda46620ecf98399bd170", "committedDate": "2020-11-06T07:45:04Z", "message": "Setup script changes"}, "afterCommit": {"oid": "d2b5caf632fe98edde0f5e4487068b5891e00857", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d2b5caf632fe98edde0f5e4487068b5891e00857", "committedDate": "2020-11-06T07:53:14Z", "message": "Setup script changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTE4OTI2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#pullrequestreview-524918926", "createdAt": "2020-11-06T07:47:50Z", "commit": {"oid": "2d36be27942604638aeeda46620ecf98399bd170"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzo0Nzo1MVrOHujRAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzo1ODoyOFrOHujjEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3NDMzOQ==", "bodyText": "remove doubled underscore", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518574339", "createdAt": "2020-11-06T07:47:51Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -69,59 +81,96 @@\n  */\n @Getter\n public class DeviceProvisioningHelper {\n+    private static final String GG_THING_POLICY_NAME = \"GreengrassV2ThingPolicy\";\n+    private static final String GG_TOKEN_EXCHANGE_ROLE_ACCESS_POLICY_SUFFIX = \"Access\";\n+    private static final String GG_TOKEN_EXCHANGE_ROLE_ACCESS_POLICY_DOCUMENT =\n+            \"{\\n\" + \"    \\\"Version\\\": \\\"2012-10-17\\\",\\n\"\n+                    + \"    \\\"Statement\\\": [\\n\"\n+                    + \"        {\\n\"\n+                    + \"            \\\"Effect\\\": \\\"Allow\\\",\\n\"\n+                    + \"            \\\"Action\\\": [\\n\"\n+                    + \"                \\\"iot:DescribeCertificate\\\",\\n\"\n+                    + \"                \\\"logs:CreateLogGroup\\\",\\n\"\n+                    + \"                \\\"logs:CreateLogStream\\\",\\n\"\n+                    + \"                \\\"logs:PutLogEvents\\\",\\n\"\n+                    + \"                \\\"logs:DescribeLogStreams\\\",\\n\"\n+                    + \"                \\\"iot:Connect\\\",\\n\"\n+                    + \"                \\\"iot:Publish\\\",\\n\"\n+                    + \"                \\\"iot:Subscribe\\\",\\n\"\n+                    + \"                \\\"iot:Receive\\\",\\n\"\n+                    + \"                \\\"s3:GetBucketLocation\\\"\\n\"\n+                    + \"            ],\\n\"\n+                    + \"            \\\"Resource\\\": \\\"*\\\"\\n\"\n+                    + \"        }\\n\"\n+                    + \"    ]\\n\"\n+                    + \"}\";\n+    private static final String ROOT_CA_URL = \"https://www.amazontrust.com/repository/AmazonRootCA1.pem\";\n+    private static final String IOT_ROLE_POLICY_NAME_PREFIX = \"GreengrassTESCertificatePolicy\";\n+    private static final String HTTP_DEBUG_VIEW_COMPONENT_NAME = \"aws.greengrass.HttpDebugView\";\n+    private static final String HTTP_DEBUG_VIEW__COMPONENT_VERSION = \"1.0.0\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d36be27942604638aeeda46620ecf98399bd170"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3NTUxNg==", "bodyText": "add a separator like - between the random", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518575516", "createdAt": "2020-11-06T07:50:35Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -78,41 +78,25 @@\n     private static final String DEFAULT_GROUP_ARG = \"--component-default-group\";\n     private static final String DEFAULT_GROUP_ARG_SHORT = \"-g\";\n \n-\n     private static final String THING_NAME_ARG = \"--thing-name\";\n     private static final String THING_NAME_ARG_SHORT = \"-tn\";\n-    private static final String THING_NAME_DEFAULT = \"MyIotThing\";\n+    private static final String THING_NAME_DEFAULT = \"GreengrassV2IotThing\" + UUID.randomUUID();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d36be27942604638aeeda46620ecf98399bd170"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3NzkyNg==", "bodyText": "this technically works, but Exec isn't really built and tested to be able to run multiple commands using the same instance.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518577926", "createdAt": "2020-11-06T07:56:12Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/platforms/unix/DarwinPlatform.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util.platforms.unix;\n+\n+import com.aws.greengrass.util.Exec;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+public class DarwinPlatform extends UnixPlatform {\n+    private static String CREATE_USER_CMD_PREFIX = \"sudo dscl . -create /Users/\";\n+    private static String AVAILABLE_UNIQUE_ID_CMD =\n+            \"dscl . -list /Users UniqueID | awk '{print $2}' | sort -ug | tail -1\";\n+    private static String CREATE_GROUP_CMD_PREFIX = \"sudo dscl . -create /Groups/\";\n+    private static String AVAILABLE_GID_CMD = \"dscl . -list /Groups gid | awk '{print $2}' | sort -ug | tail -1\";\n+    private static String ADD_USER_TO_GROUP_CMD_PREFIX = \"sudo dscl . -append /Groups/\";\n+\n+    @Override\n+    public void createUser(String user) throws IOException, InterruptedException {\n+        try (Exec exec = new Exec()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2b5caf632fe98edde0f5e4487068b5891e00857"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3ODk2Mg==", "bodyText": "Capture errors if this fails with logging.\nSame for all of these", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r518578962", "createdAt": "2020-11-06T07:58:28Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/platforms/unix/UnixPlatform.java", "diffHunk": "@@ -310,6 +310,21 @@ public UnixRunWithGenerator getRunWithGenerator() {\n         return runWithGenerator;\n     }\n \n+    @Override\n+    public void createUser(String user) throws IOException, InterruptedException {\n+        Exec.cmd(\"useradd\", \"-m\", user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2b5caf632fe98edde0f5e4487068b5891e00857"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTI1Mjkw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#pullrequestreview-524925290", "createdAt": "2020-11-06T07:59:41Z", "commit": {"oid": "d2b5caf632fe98edde0f5e4487068b5891e00857"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2b5caf632fe98edde0f5e4487068b5891e00857", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d2b5caf632fe98edde0f5e4487068b5891e00857", "committedDate": "2020-11-06T07:53:14Z", "message": "Setup script changes"}, "afterCommit": {"oid": "5979f26a4d3194de86900965d14faa1e4181b4a3", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5979f26a4d3194de86900965d14faa1e4181b4a3", "committedDate": "2020-11-06T17:32:14Z", "message": "Setup script changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTAwNDQ4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#pullrequestreview-525500448", "createdAt": "2020-11-06T21:19:48Z", "commit": {"oid": "5979f26a4d3194de86900965d14faa1e4181b4a3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToxOTo0OFrOHu94Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMTozMjo1M1rOHu-NcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxMDM4Mg==", "bodyText": "nit: remove +", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r519010382", "createdAt": "2020-11-06T21:19:48Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/easysetup/DeviceProvisioningHelper.java", "diffHunk": "@@ -154,8 +214,8 @@ public ThingInfo createThing(IotClient client, String policyName, String thingNa\n                             + \"      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Action\\\": [\\n\"\n                             + \"                \\\"iot:Connect\\\",\\n                \\\"iot:Publish\\\",\\n\"\n                             + \"                \\\"iot:Subscribe\\\",\\n                \\\"iot:Receive\\\",\\n\"\n-                            + \"                \\\"greengrass:*\\\"\\n],\\n\"\n-                            + \"      \\\"Resource\\\": \\\"*\\\"\\n    }\\n  ]\\n}\").build());\n+                            + \"                \\\"greengrass:*\\\"\\n],\\n\" + \"      \\\"Resource\\\": \\\"*\\\"\\n    }\\n  ]\\n}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5979f26a4d3194de86900965d14faa1e4181b4a3"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNTc5Mw==", "bodyText": "Do we not take input from commandline for default user and group?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r519015793", "createdAt": "2020-11-06T21:32:53Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -393,29 +341,71 @@ private String getArg() {\n     void provision(Kernel kernel) throws IOException, DeviceConfigurationException {\n         outStream.printf(\"Provisioning AWS IoT resources for the device with IoT Thing Name: [%s]...%n\", thingName);\n         final ThingInfo thingInfo =\n-                deviceProvisioningHelper.createThing(deviceProvisioningHelper.getIotClient(), policyName, thingName);\n+                deviceProvisioningHelper.createThing(deviceProvisioningHelper.getIotClient(), thingName);\n         outStream.printf(\"Successfully provisioned AWS IoT resources for the device with IoT Thing Name: [%s]!%n\",\n                 thingName);\n         if (!Utils.isEmpty(thingGroupName)) {\n             outStream.printf(\"Adding IoT Thing [%s] into Thing Group: [%s]...%n\", thingName, thingGroupName);\n-                deviceProvisioningHelper.addThingToGroup(deviceProvisioningHelper.getIotClient(), thingName,\n-                        thingGroupName);\n+            deviceProvisioningHelper\n+                    .addThingToGroup(deviceProvisioningHelper.getIotClient(), thingName, thingGroupName);\n             outStream.printf(\"Successfully added Thing into Thing Group: [%s]%n\", thingGroupName);\n         }\n-\n-        // TODO: [P41215965]: setupTes should not be an arg anymore since role alias is required, need to remove\n-        //  this arg and always pass either user specified or a default role alias\n-        if (setupTes) {\n-            outStream.println(\"Setting up resources for TokenExchangeService...\");\n-            deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n-            if (tesRolePolicyName != null && tesRolePolicyDoc != null) {\n-                deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName, tesRolePolicyName, tesRolePolicyDoc);\n-            }\n-        }\n-        outStream.println(\"Configuring kernel with provisioned resource details...\");\n+        outStream.printf(\"Setting up resources for %s ... %n\", TokenExchangeService.TOKEN_EXCHANGE_SERVICE_TOPICS);\n+        deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n+        deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName);\n+        outStream.println(\"Configuring Nucleus with provisioned resource details...\");\n         deviceProvisioningHelper.updateKernelConfigWithIotConfiguration(kernel, thingInfo, awsRegion, tesRoleAliasName);\n         outStream.println(\"Successfully configured kernel with provisioned resource details!\");\n+        if (deployDevTools) {\n+            deviceProvisioningHelper.createInitialDeploymentIfNeeded(thingInfo, thingGroupName);\n+        }\n+\n+    }\n \n+    private void setComponentDefaultUserAndGroup() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5979f26a4d3194de86900965d14faa1e4181b4a3"}, "originalPosition": 305}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d457bd90d7635146573619a99f38a85a07f332ed", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d457bd90d7635146573619a99f38a85a07f332ed", "committedDate": "2020-11-06T22:09:11Z", "message": "Setup script changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c2c0ab41c0b1d9b4f9ddbaa56d6f0a5bb0a1fba", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9c2c0ab41c0b1d9b4f9ddbaa56d6f0a5bb0a1fba", "committedDate": "2020-11-06T22:10:57Z", "message": "Support user & group ids, help text & logs for s3 access for TES policy, address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f72fd4ee3cc21da3a43b06f7c377e0463c20eb21", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f72fd4ee3cc21da3a43b06f7c377e0463c20eb21", "committedDate": "2020-11-06T22:06:51Z", "message": "Minor formatting"}, "afterCommit": {"oid": "d2aec487daff6b363fdfd0d0661a59edd8d90fad", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d2aec487daff6b363fdfd0d0661a59edd8d90fad", "committedDate": "2020-11-06T22:10:58Z", "message": "Minor formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2aec487daff6b363fdfd0d0661a59edd8d90fad", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d2aec487daff6b363fdfd0d0661a59edd8d90fad", "committedDate": "2020-11-06T22:10:58Z", "message": "Minor formatting"}, "afterCommit": {"oid": "dde7500a8ca0a4814a70d9bbb9008c45e39de61c", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dde7500a8ca0a4814a70d9bbb9008c45e39de61c", "committedDate": "2020-11-06T22:31:16Z", "message": "Minor formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dde7500a8ca0a4814a70d9bbb9008c45e39de61c", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dde7500a8ca0a4814a70d9bbb9008c45e39de61c", "committedDate": "2020-11-06T22:31:16Z", "message": "Minor formatting"}, "afterCommit": {"oid": "606e99b8327af929a769dd1c2dbad6c21b68876d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/606e99b8327af929a769dd1c2dbad6c21b68876d", "committedDate": "2020-11-06T22:34:37Z", "message": "Minor formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTM2MzQy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#pullrequestreview-525536342", "createdAt": "2020-11-06T22:35:04Z", "commit": {"oid": "dde7500a8ca0a4814a70d9bbb9008c45e39de61c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMjozNTozNFrOHu_n_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMjozNTozNFrOHu_n_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAzODk3Mg==", "bodyText": "This isn't right is it? Shouldn't it be !present || get != 0?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r519038972", "createdAt": "2020-11-06T22:35:34Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/platforms/unix/UnixPlatform.java", "diffHunk": "@@ -397,6 +413,27 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IO\n         }\n     }\n \n+    protected void runCmd(String cmdStr, Consumer<CharSequence> out, String msg)\n+            throws IOException, InterruptedException {\n+        try (Exec exec = new Exec()) {\n+            StringBuilder output = new StringBuilder();\n+            StringBuilder error = new StringBuilder();\n+            Optional<Integer> exit = exec.withExec(cmdStr.split(\" \"))\n+                    .withShell()\n+                    .withOut(o -> {\n+                        out.accept(o);\n+                        output.append(o);\n+                    }).withErr(e -> {\n+                        error.append(e);\n+                    }).exec();\n+            if (!exit.isPresent() && exit.get() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "606e99b8327af929a769dd1c2dbad6c21b68876d"}, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "606e99b8327af929a769dd1c2dbad6c21b68876d", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/606e99b8327af929a769dd1c2dbad6c21b68876d", "committedDate": "2020-11-06T22:34:37Z", "message": "Minor formatting"}, "afterCommit": {"oid": "b50c8abf255006858cef486dc4e220e3b171b68c", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b50c8abf255006858cef486dc4e220e3b171b68c", "committedDate": "2020-11-06T22:36:45Z", "message": "Minor formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b50c8abf255006858cef486dc4e220e3b171b68c", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b50c8abf255006858cef486dc4e220e3b171b68c", "committedDate": "2020-11-06T22:36:45Z", "message": "Minor formatting"}, "afterCommit": {"oid": "7ca1f63f2a9656885215fc9831324ed7b41cfbd5", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7ca1f63f2a9656885215fc9831324ed7b41cfbd5", "committedDate": "2020-11-06T22:37:52Z", "message": "Minor formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ca1f63f2a9656885215fc9831324ed7b41cfbd5", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7ca1f63f2a9656885215fc9831324ed7b41cfbd5", "committedDate": "2020-11-06T22:37:52Z", "message": "Minor formatting"}, "afterCommit": {"oid": "d11b88055016df1616eaa5ccea4cf68b9dd435ee", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d11b88055016df1616eaa5ccea4cf68b9dd435ee", "committedDate": "2020-11-06T22:44:24Z", "message": "Minor formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07d18b16c98d1cad7e678ac49406531f408052ac", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/07d18b16c98d1cad7e678ac49406531f408052ac", "committedDate": "2020-11-06T22:55:59Z", "message": "Minor formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d11b88055016df1616eaa5ccea4cf68b9dd435ee", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d11b88055016df1616eaa5ccea4cf68b9dd435ee", "committedDate": "2020-11-06T22:44:24Z", "message": "Minor formatting"}, "afterCommit": {"oid": "07d18b16c98d1cad7e678ac49406531f408052ac", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/07d18b16c98d1cad7e678ac49406531f408052ac", "committedDate": "2020-11-06T22:55:59Z", "message": "Minor formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTQ1Mjcz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#pullrequestreview-525545273", "createdAt": "2020-11-06T22:59:12Z", "commit": {"oid": "07d18b16c98d1cad7e678ac49406531f408052ac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMjo1OToxMlrOHvAFGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMjo1OToxMlrOHvAFGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA0NjQyNw==", "bodyText": "PMD doesn't like that we are looking up user/group by name and then id and if both not found we throw an error. But since looking up always throws IOException if not found, we have to write fallback logic the way it is", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#discussion_r519046427", "createdAt": "2020-11-06T22:59:12Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -393,31 +344,94 @@ private String getArg() {\n     void provision(Kernel kernel) throws IOException, DeviceConfigurationException {\n         outStream.printf(\"Provisioning AWS IoT resources for the device with IoT Thing Name: [%s]...%n\", thingName);\n         final ThingInfo thingInfo =\n-                deviceProvisioningHelper.createThing(deviceProvisioningHelper.getIotClient(), policyName, thingName);\n+                deviceProvisioningHelper.createThing(deviceProvisioningHelper.getIotClient(), thingName);\n         outStream.printf(\"Successfully provisioned AWS IoT resources for the device with IoT Thing Name: [%s]!%n\",\n                 thingName);\n         if (!Utils.isEmpty(thingGroupName)) {\n             outStream.printf(\"Adding IoT Thing [%s] into Thing Group: [%s]...%n\", thingName, thingGroupName);\n-                deviceProvisioningHelper.addThingToGroup(deviceProvisioningHelper.getIotClient(), thingName,\n-                        thingGroupName);\n+            deviceProvisioningHelper\n+                    .addThingToGroup(deviceProvisioningHelper.getIotClient(), thingName, thingGroupName);\n             outStream.printf(\"Successfully added Thing into Thing Group: [%s]%n\", thingGroupName);\n         }\n-\n-        // TODO: [P41215965]: setupTes should not be an arg anymore since role alias is required, need to remove\n-        //  this arg and always pass either user specified or a default role alias\n-        if (setupTes) {\n-            outStream.println(\"Setting up resources for TokenExchangeService...\");\n-            deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n-            if (tesRolePolicyName != null && tesRolePolicyDoc != null) {\n-                deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName, tesRolePolicyName, tesRolePolicyDoc);\n-            }\n-        }\n-        outStream.println(\"Configuring kernel with provisioned resource details...\");\n+        outStream.printf(\"Setting up resources for %s ... %n\", TokenExchangeService.TOKEN_EXCHANGE_SERVICE_TOPICS);\n+        deviceProvisioningHelper.setupIoTRoleForTes(tesRoleName, tesRoleAliasName, thingInfo.getCertificateArn());\n+        deviceProvisioningHelper.createAndAttachRolePolicy(tesRoleName);\n+        outStream.println(\"Configuring Nucleus with provisioned resource details...\");\n         deviceProvisioningHelper.updateKernelConfigWithIotConfiguration(kernel, thingInfo, awsRegion, tesRoleAliasName);\n         outStream.println(\"Successfully configured kernel with provisioned resource details!\");\n+        if (deployDevTools) {\n+            deviceProvisioningHelper.createInitialDeploymentIfNeeded(thingInfo, thingGroupName);\n+        }\n \n     }\n \n+    @SuppressWarnings(\"PMD.PreserveStackTrace\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07d18b16c98d1cad7e678ac49406531f408052ac"}, "originalPosition": 308}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTYxMTEx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#pullrequestreview-525561111", "createdAt": "2020-11-06T23:54:26Z", "commit": {"oid": "07d18b16c98d1cad7e678ac49406531f408052ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dd6c1d00cdfff2755924f49f11050c8b8204954", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4dd6c1d00cdfff2755924f49f11050c8b8204954", "committedDate": "2020-11-07T00:20:57Z", "message": "Merge branch 'master' into setup-script"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTc0NTcx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/610#pullrequestreview-525574571", "createdAt": "2020-11-07T01:02:03Z", "commit": {"oid": "4dd6c1d00cdfff2755924f49f11050c8b8204954"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2908, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}