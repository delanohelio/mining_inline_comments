{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MDI4MzQ4", "number": 550, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMjoyOTo0M1rOEw96SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMjoyOTo0M1rOEw96SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzgxNDQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMjoyOTo0M1rOHm2F9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMjo1Mjo0OVrOHm2kbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5NDE5OA==", "bodyText": "Can we compute this information in setComponentsToGroupsMapping?\nAlso it would be slightly more efficient if we use normal loop and break when isRoot is true", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/550#discussion_r510494198", "createdAt": "2020-10-22T22:29:43Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -571,4 +571,24 @@ private void setComponentsToGroupsMapping(Topics groupsToRootComponents) {\n         }\n         return allGroupNames;\n     }\n+\n+    /**\n+     * Checks whether a component is a root component or not.\n+     * @param componentName The name of the component.\n+     * @return a boolean indicating whether a component is a root component or not.\n+     */\n+    public boolean isComponentRoot(String componentName) {\n+        Topics groupToRootComponentsTopics = config.lookupTopics(GROUP_TO_ROOT_COMPONENTS_TOPICS);\n+        AtomicBoolean isRoot = new AtomicBoolean(false);\n+        if (groupToRootComponentsTopics != null) {\n+            groupToRootComponentsTopics.children.values().stream().map(n -> (Topics) n)\n+                    .forEach(topics -> topics.children.values().stream().map(n -> (Topics) n)\n+                            .forEach(componentTopics -> {\n+                                if (componentName.equals(componentTopics.getName())) {\n+                                    isRoot.set(true);\n+                                }\n+                            }));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457168071cc0664cefd90e599ec65b3d0f3a48f0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUwMTk5Nw==", "bodyText": "Not really. Don't want to use that mapping for more than what it suggests. Will make it into a normal for.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/550#discussion_r510501997", "createdAt": "2020-10-22T22:52:49Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -571,4 +571,24 @@ private void setComponentsToGroupsMapping(Topics groupsToRootComponents) {\n         }\n         return allGroupNames;\n     }\n+\n+    /**\n+     * Checks whether a component is a root component or not.\n+     * @param componentName The name of the component.\n+     * @return a boolean indicating whether a component is a root component or not.\n+     */\n+    public boolean isComponentRoot(String componentName) {\n+        Topics groupToRootComponentsTopics = config.lookupTopics(GROUP_TO_ROOT_COMPONENTS_TOPICS);\n+        AtomicBoolean isRoot = new AtomicBoolean(false);\n+        if (groupToRootComponentsTopics != null) {\n+            groupToRootComponentsTopics.children.values().stream().map(n -> (Topics) n)\n+                    .forEach(topics -> topics.children.values().stream().map(n -> (Topics) n)\n+                            .forEach(componentTopics -> {\n+                                if (componentName.equals(componentTopics.getName())) {\n+                                    isRoot.set(true);\n+                                }\n+                            }));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5NDE5OA=="}, "originalCommit": {"oid": "457168071cc0664cefd90e599ec65b3d0f3a48f0"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 346, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}