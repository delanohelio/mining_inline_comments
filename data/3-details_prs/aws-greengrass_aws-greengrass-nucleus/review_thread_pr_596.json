{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMzgxMjkw", "number": 596, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNjo0Mjo1MlrOE0BQYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNjo1OToxMlrOE0D9mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTgxOTg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/models/Permission.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNjo0Mjo1MlrOHrlbtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNjo0Mjo1MlrOHrlbtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ2NDExOA==", "bodyText": "Indentation seems to be 8 spaces per tab, but our regular style is 4.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515464118", "createdAt": "2020-10-31T06:42:52Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/componentmanager/models/Permission.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.componentmanager.models;\n+\n+import com.aws.greengrass.util.FileSystemPermission;\n+import lombok.Builder;\n+import lombok.NonNull;\n+import lombok.Value;\n+\n+\n+/**\n+ * Permission settings for component artifacts. Read and Execute permissions can be set.\n+ * By default, the read permission is set to allow only the owner of the artifact on the disk and the execute permission\n+ * is set to NONE.\n+ */\n+@Value\n+@Builder\n+public class Permission {\n+        @NonNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c199df3563d60f657f736f3d6e99c70cf9402be7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTgyMTE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/models/PermissionType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNjo0NDo0NFrOHrlcRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNjo0NDo0NFrOHrlcRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ2NDI2Mw==", "bodyText": "check s for null? Otherwise the toUppeCase can throw a NPE", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515464263", "createdAt": "2020-10-31T06:44:44Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/componentmanager/models/PermissionType.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.componentmanager.models;\n+\n+/**\n+ * Permission attribute to set. In Linux this corresponds to setting the User or Other bits of the standard POSIX\n+ * file permissions. In Windows this would correspond with modifying the ACL for owner and \"Everyone\" groups.\n+ */\n+public enum PermissionType {\n+    /**\n+     * No permissions.\n+     */\n+    NONE,\n+    /**\n+     * Owner of file has permission.\n+     */\n+    OWNER,\n+    /**\n+     * All users have permission.\n+     */\n+    ALL;\n+\n+    public static PermissionType fromString(String s) {\n+        return PermissionType.valueOf(s.toUpperCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c199df3563d60f657f736f3d6e99c70cf9402be7"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTgyMjQ1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/greengrass/util/PermissionsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNjo0NjoyOVrOHrlc2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNjo0NjoyOVrOHrlc2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ2NDQxMQ==", "bodyText": "add our GGExtension", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515464411", "createdAt": "2020-10-31T06:46:29Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/util/PermissionsTest.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.condition.EnabledOnOs;\n+import org.junit.jupiter.api.condition.OS;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import static com.aws.greengrass.testcommons.testutilities.Matchers.hasPermission;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+@EnabledOnOs({OS.LINUX, OS.MAC})\n+class PermissionsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c199df3563d60f657f736f3d6e99c70cf9402be7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDI1Nzc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/models/PermissionType.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNjo1MTo0OVrOHrolnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNDowNzowMFrOHr1uBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNTgwNA==", "bodyText": "We don't model group as a permission type? How can the customer specify that an component can only be accessed by a group?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515515804", "createdAt": "2020-10-31T16:51:49Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/componentmanager/models/PermissionType.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.componentmanager.models;\n+\n+/**\n+ * Permission attribute to set. In Linux this corresponds to setting the User or Other bits of the standard POSIX\n+ * file permissions. In Windows this would correspond with modifying the ACL for owner and \"Everyone\" groups.\n+ */\n+public enum PermissionType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a8009466858f72f2c6fb7d058e9a0697ddf824"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NTU5Mg==", "bodyText": "They cannot - POSIX style group permissions are not cross platform so we only have owner and all", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515695592", "createdAt": "2020-11-02T00:39:19Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/componentmanager/models/PermissionType.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.componentmanager.models;\n+\n+/**\n+ * Permission attribute to set. In Linux this corresponds to setting the User or Other bits of the standard POSIX\n+ * file permissions. In Windows this would correspond with modifying the ACL for owner and \"Everyone\" groups.\n+ */\n+public enum PermissionType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNTgwNA=="}, "originalCommit": {"oid": "f2a8009466858f72f2c6fb7d058e9a0697ddf824"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTczMDk0OA==", "bodyText": "I've updated so that group is set when you set OWNER.\nIf customers want to specify that components can only be accessed by a group, they can the permission to OWNER and ensure that components are running with the same posixGroup", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515730948", "createdAt": "2020-11-02T04:07:00Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/componentmanager/models/PermissionType.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.componentmanager.models;\n+\n+/**\n+ * Permission attribute to set. In Linux this corresponds to setting the User or Other bits of the standard POSIX\n+ * file permissions. In Windows this would correspond with modifying the ACL for owner and \"Everyone\" groups.\n+ */\n+public enum PermissionType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNTgwNA=="}, "originalCommit": {"oid": "f2a8009466858f72f2c6fb7d058e9a0697ddf824"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDI2MjAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/models/Permission.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNjo1NzowNlrOHronow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMDo1NDoxNFrOHrzq-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNjMyMw==", "bodyText": "Why is the group's permission set by the ALL instead of OWNER. Isn't group also a type of OWNER?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515516323", "createdAt": "2020-10-31T16:57:06Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/componentmanager/models/Permission.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.componentmanager.models;\n+\n+import com.aws.greengrass.util.FileSystemPermission;\n+import lombok.Builder;\n+import lombok.NonNull;\n+import lombok.Value;\n+\n+\n+/**\n+ * Permission settings for component artifacts. Read and Execute permissions can be set. By default, the read permission\n+ * is set to allow only the owner of the artifact on the disk and the execute permission is set to NONE.\n+ */\n+@Value\n+@Builder\n+public class Permission {\n+    @NonNull\n+    @Builder.Default\n+    PermissionType read = PermissionType.OWNER;\n+    @NonNull\n+    @Builder.Default\n+    PermissionType execute = PermissionType.NONE;\n+\n+    /**\n+     * Convert to file system permission.\n+     *\n+     * @return a permission.\n+     */\n+    public FileSystemPermission toFileSystemPermission() {\n+        return FileSystemPermission.builder()\n+                .ownerRead(true) // we always want owner to read\n+                .ownerExecute(execute == PermissionType.ALL || execute == PermissionType.OWNER)\n+                .groupRead(read == PermissionType.ALL)\n+                .groupExecute(execute == PermissionType.ALL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a8009466858f72f2c6fb7d058e9a0697ddf824"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NzQwMA==", "bodyText": "I suppose it depends on how restrictive we want the owner to be - I can see an argument for it being modeled either way.\nI don't have a problem setting the group bits when it is set to OWNER\nRead\nOWNER \nr--r-----\nALL\nr--r--r--\nNONE\nr-------\n\nExecute - has to be readable if you set executable\nOWNER \nr-xr-x---\nALL\nr-xr-xr-x\nNONE\n?--?----- (where ? is r if they have read permissions set)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515697400", "createdAt": "2020-11-02T00:54:14Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/componentmanager/models/Permission.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.componentmanager.models;\n+\n+import com.aws.greengrass.util.FileSystemPermission;\n+import lombok.Builder;\n+import lombok.NonNull;\n+import lombok.Value;\n+\n+\n+/**\n+ * Permission settings for component artifacts. Read and Execute permissions can be set. By default, the read permission\n+ * is set to allow only the owner of the artifact on the disk and the execute permission is set to NONE.\n+ */\n+@Value\n+@Builder\n+public class Permission {\n+    @NonNull\n+    @Builder.Default\n+    PermissionType read = PermissionType.OWNER;\n+    @NonNull\n+    @Builder.Default\n+    PermissionType execute = PermissionType.NONE;\n+\n+    /**\n+     * Convert to file system permission.\n+     *\n+     * @return a permission.\n+     */\n+    public FileSystemPermission toFileSystemPermission() {\n+        return FileSystemPermission.builder()\n+                .ownerRead(true) // we always want owner to read\n+                .ownerExecute(execute == PermissionType.ALL || execute == PermissionType.OWNER)\n+                .groupRead(read == PermissionType.ALL)\n+                .groupExecute(execute == PermissionType.ALL)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNjMyMw=="}, "originalCommit": {"oid": "f2a8009466858f72f2c6fb7d058e9a0697ddf824"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDI2MzMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNjo1OToxMlrOHrooRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNDowODo0M1rOHr1vFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNjQ4NQ==", "bodyText": "What happens if the nucleus is run with a non-root user?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515516485", "createdAt": "2020-10-31T16:59:12Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java", "diffHunk": "@@ -346,9 +346,9 @@ void prepareArtifacts(ComponentIdentifier componentIdentifier, List<ComponentArt\n             }\n             File artifactFile = downloader.getArtifactFile(packageArtifactDirectory, artifact, componentIdentifier);\n             if (artifactFile != null) {\n-                // TODO: Change permissions - set world readable until artifact permissions can be set via model\n                 try {\n-                    Permissions.setArtifactPermission(artifactFile.toPath());\n+                    Permissions.setArtifactPermission(artifactFile.toPath(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a8009466858f72f2c6fb7d058e9a0697ddf824"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NjgwOA==", "bodyText": "If nucleus is run as a non-root user, we'd probably want to keep write permission on the files - otherwise they wouldn't be able to remove them when the system goes to clean up\nSetting the permissions to be group/other readable/executable can still apply though.\nDo you think that in non-root mode we should not set the \"other\" permissions bits?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515696808", "createdAt": "2020-11-02T00:49:18Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java", "diffHunk": "@@ -346,9 +346,9 @@ void prepareArtifacts(ComponentIdentifier componentIdentifier, List<ComponentArt\n             }\n             File artifactFile = downloader.getArtifactFile(packageArtifactDirectory, artifact, componentIdentifier);\n             if (artifactFile != null) {\n-                // TODO: Change permissions - set world readable until artifact permissions can be set via model\n                 try {\n-                    Permissions.setArtifactPermission(artifactFile.toPath());\n+                    Permissions.setArtifactPermission(artifactFile.toPath(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNjQ4NQ=="}, "originalCommit": {"oid": "f2a8009466858f72f2c6fb7d058e9a0697ddf824"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTczMTIyMg==", "bodyText": "I've updated so that the write permissions is always kept on when running as a non-system user. This allows the artifact clean up to still work.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/596#discussion_r515731222", "createdAt": "2020-11-02T04:08:43Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java", "diffHunk": "@@ -346,9 +346,9 @@ void prepareArtifacts(ComponentIdentifier componentIdentifier, List<ComponentArt\n             }\n             File artifactFile = downloader.getArtifactFile(packageArtifactDirectory, artifact, componentIdentifier);\n             if (artifactFile != null) {\n-                // TODO: Change permissions - set world readable until artifact permissions can be set via model\n                 try {\n-                    Permissions.setArtifactPermission(artifactFile.toPath());\n+                    Permissions.setArtifactPermission(artifactFile.toPath(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNjQ4NQ=="}, "originalCommit": {"oid": "f2a8009466858f72f2c6fb7d058e9a0697ddf824"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 437, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}