{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwODk2MTM2", "number": 515, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNTowODo0NFrOEsrApQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoyMzo1M1rOEunsHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Mjc3NDc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNTowODo0NFrOHgCsJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNTozMDoyOVrOHgDgIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM2MDU1MQ==", "bodyText": "should this be ~root/logs? or will the log config go into /logs by default?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503360551", "createdAt": "2020-10-12T15:08:44Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "diffHunk": "@@ -123,6 +124,7 @@ private void initPaths(String rootAbsolutePath) {\n             nucleusPaths.setRootPath(Paths.get(rootAbsolutePath).toAbsolutePath());\n             //set root path for the telemetry logger\n             TelemetryConfig.getInstance().setRoot(Paths.get(deTilde(ROOT_DIR_PREFIX)));\n+            LogConfig.getInstance().setRoot(Paths.get(deTilde(ROOT_DIR_PREFIX)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c37229161288e0f71db4394b394dad70c8a955"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3Mzg1OQ==", "bodyText": "The log config will go to /logs by default.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503373859", "createdAt": "2020-10-12T15:30:29Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "diffHunk": "@@ -123,6 +124,7 @@ private void initPaths(String rootAbsolutePath) {\n             nucleusPaths.setRootPath(Paths.get(rootAbsolutePath).toAbsolutePath());\n             //set root path for the telemetry logger\n             TelemetryConfig.getInstance().setRoot(Paths.get(deTilde(ROOT_DIR_PREFIX)));\n+            LogConfig.getInstance().setRoot(Paths.get(deTilde(ROOT_DIR_PREFIX)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM2MDU1MQ=="}, "originalCommit": {"oid": "99c37229161288e0f71db4394b394dad70c8a955"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Mjc3OTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNTowOTo1OVrOHgCvJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNTozNzoyMFrOHgDvng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM2MTMxOA==", "bodyText": "when we use the logger we are normally passing the class, so have an override for the class when naming the logger", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503361318", "createdAt": "2020-10-12T15:09:59Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        // TODO: Subscribe to logging configuration in the kernel config and reconfigure all the loggers.\n+    }\n+\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the a log file with the same name as the\n+     * component if the logs are configured to be written to the disk.\n+     * @param name  The name of the component\n+     * @return  a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name) {\n+        return getComponentLogger(name, name + LOG_FILE_EXTENSION);\n+    }\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n+     * signature if the logs are configured to be written to the disk.\n+     * @param name      The name of the component\n+     * @param fileName  The name of the log file.\n+     * @return a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name, String fileName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c37229161288e0f71db4394b394dad70c8a955"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM2MjU5MA==", "bodyText": "also, don't we want an override that takes a GreengrassService? Shouldn't that be the whole point?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503362590", "createdAt": "2020-10-12T15:12:05Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        // TODO: Subscribe to logging configuration in the kernel config and reconfigure all the loggers.\n+    }\n+\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the a log file with the same name as the\n+     * component if the logs are configured to be written to the disk.\n+     * @param name  The name of the component\n+     * @return  a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name) {\n+        return getComponentLogger(name, name + LOG_FILE_EXTENSION);\n+    }\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n+     * signature if the logs are configured to be written to the disk.\n+     * @param name      The name of the component\n+     * @param fileName  The name of the log file.\n+     * @return a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name, String fileName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM2MTMxOA=="}, "originalCommit": {"oid": "99c37229161288e0f71db4394b394dad70c8a955"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3NTk2Ng==", "bodyText": "I was thinking that we would use the function in the UserLambdaService and set the logger there by using getComponentLogger(String name) function with the lambda name.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503375966", "createdAt": "2020-10-12T15:34:03Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        // TODO: Subscribe to logging configuration in the kernel config and reconfigure all the loggers.\n+    }\n+\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the a log file with the same name as the\n+     * component if the logs are configured to be written to the disk.\n+     * @param name  The name of the component\n+     * @return  a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name) {\n+        return getComponentLogger(name, name + LOG_FILE_EXTENSION);\n+    }\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n+     * signature if the logs are configured to be written to the disk.\n+     * @param name      The name of the component\n+     * @param fileName  The name of the log file.\n+     * @return a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name, String fileName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM2MTMxOA=="}, "originalCommit": {"oid": "99c37229161288e0f71db4394b394dad70c8a955"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3NzgyMg==", "bodyText": "Ignore lambda. This applies to all services.\nI want this class to perform the subscription in order to reconfigure when logging configs change. So it should get the service instance so that it can then call getConfig() to get the service's config and subscribe to whatever logging topics we have", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503377822", "createdAt": "2020-10-12T15:37:20Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        // TODO: Subscribe to logging configuration in the kernel config and reconfigure all the loggers.\n+    }\n+\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the a log file with the same name as the\n+     * component if the logs are configured to be written to the disk.\n+     * @param name  The name of the component\n+     * @return  a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name) {\n+        return getComponentLogger(name, name + LOG_FILE_EXTENSION);\n+    }\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n+     * signature if the logs are configured to be written to the disk.\n+     * @param name      The name of the component\n+     * @param fileName  The name of the log file.\n+     * @return a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name, String fileName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM2MTMxOA=="}, "originalCommit": {"oid": "99c37229161288e0f71db4394b394dad70c8a955"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Mjk3NjA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjowMDo0NVrOHgEljQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjoxMjozNFrOHgE-6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5MTYyOQ==", "bodyText": "what's this about? The root doesn't have \"parameters\"", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503391629", "createdAt": "2020-10-12T16:00:45Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        this.kernel.getConfig().lookup(PARAMETERS_CONFIG_KEY, KERNEL_CONFIG_PARAMETER_TOPIC)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734443b86f40ef314e91a20ccddd802c1517e9dc"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5Njk0MQ==", "bodyText": "I think this PR will add parameters in the kernel config https://github.com/aws/aws-greengrass-kernel/pull/513/files\nThis is where we will add the root logger config.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503396941", "createdAt": "2020-10-12T16:10:23Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        this.kernel.getConfig().lookup(PARAMETERS_CONFIG_KEY, KERNEL_CONFIG_PARAMETER_TOPIC)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5MTYyOQ=="}, "originalCommit": {"oid": "734443b86f40ef314e91a20ccddd802c1517e9dc"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5ODEyMQ==", "bodyText": "In that case, your lookup here is wrong because this is looking under the config root instead of under the nucleus as a service's topics.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503398121", "createdAt": "2020-10-12T16:12:34Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        this.kernel.getConfig().lookup(PARAMETERS_CONFIG_KEY, KERNEL_CONFIG_PARAMETER_TOPIC)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5MTYyOQ=="}, "originalCommit": {"oid": "734443b86f40ef314e91a20ccddd802c1517e9dc"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Mjk4MDU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjowMTo1N1rOHgEoYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjowODo0MlrOHgE2qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5MjM1Mg==", "bodyText": "let's remove the interfaces that we won't be using. I suggest that we use only\ngetComponentLogger(Class<?> clazz, GreengrassService service)\nwhich will do make a logger with name clazz.getName() and filename service.getServiceName()", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503392352", "createdAt": "2020-10-12T16:01:57Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        this.kernel.getConfig().lookup(PARAMETERS_CONFIG_KEY, KERNEL_CONFIG_PARAMETER_TOPIC)\n+                .subscribe((why, newv) -> {\n+                    // TODO: Subscribe to logging configuration in the kernel config and reconfigure all the loggers.\n+                });\n+    }\n+\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the a log file with the same name as the\n+     * component if the logs are configured to be written to the disk.\n+     * @param name  The name of the component\n+     * @return  a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "734443b86f40ef314e91a20ccddd802c1517e9dc"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NDk2OQ==", "bodyText": "I think the logger name should be service.getServiceName() cause we need it to be unique for different services. We cache the logger based on their names. But will remove the other functions.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503394969", "createdAt": "2020-10-12T16:06:40Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        this.kernel.getConfig().lookup(PARAMETERS_CONFIG_KEY, KERNEL_CONFIG_PARAMETER_TOPIC)\n+                .subscribe((why, newv) -> {\n+                    // TODO: Subscribe to logging configuration in the kernel config and reconfigure all the loggers.\n+                });\n+    }\n+\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the a log file with the same name as the\n+     * component if the logs are configured to be written to the disk.\n+     * @param name  The name of the component\n+     * @return  a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5MjM1Mg=="}, "originalCommit": {"oid": "734443b86f40ef314e91a20ccddd802c1517e9dc"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NjAwOA==", "bodyText": "Hmm, the logger name is typically the class name, but I suppose you're right. So just have getComponentLogger(GreengrassService service) which creates a logger with getServiceName as the logger and file name.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503396008", "createdAt": "2020-10-12T16:08:42Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        this.kernel.getConfig().lookup(PARAMETERS_CONFIG_KEY, KERNEL_CONFIG_PARAMETER_TOPIC)\n+                .subscribe((why, newv) -> {\n+                    // TODO: Subscribe to logging configuration in the kernel config and reconfigure all the loggers.\n+                });\n+    }\n+\n+    /**\n+     * Get the logger for a particular component. The logs will be added to the a log file with the same name as the\n+     * component if the logs are configured to be written to the disk.\n+     * @param name  The name of the component\n+     * @return  a logger with configuration to log to a los file with the same name.\n+     */\n+    public com.aws.greengrass.logging.api.Logger getComponentLogger(String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5MjM1Mg=="}, "originalCommit": {"oid": "734443b86f40ef314e91a20ccddd802c1517e9dc"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzAxNDgyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjoxMTozMlrOHgE8yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjozOToyOVrOHgF2rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzU3Ng==", "bodyText": "this is very wordy when it doesn't really need to be. I'd just call the Topics as Logging. Make sure to change it to Topics it shouldn't be a singular Topic", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503397576", "createdAt": "2020-10-12T16:11:32Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae9209ff88ad768f0fa640cbd56c6b32db1594db"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5ODg0MA==", "bodyText": "And use the same name for the kernel's topics too", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503398840", "createdAt": "2020-10-12T16:13:59Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzU3Ng=="}, "originalCommit": {"oid": "ae9209ff88ad768f0fa640cbd56c6b32db1594db"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwMTA4Mw==", "bodyText": "Right now its not implemented yet. So my point of adding this was just to have the skeleton code. Will make the change in the next PR when that is implemented.\nAlso, the name should be ComponentLoggerConfig to keep in the same line as the dependencies and other topics in the component recipe.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503401083", "createdAt": "2020-10-12T16:17:57Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzU3Ng=="}, "originalCommit": {"oid": "ae9209ff88ad768f0fa640cbd56c6b32db1594db"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwMjI4Ng==", "bodyText": "That's not how the topics are named inside the kernel. Inside it is just dependencies, etc. And \"LoggerConfig\" is gross, none of the other names are \"config\"", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503402286", "createdAt": "2020-10-12T16:20:15Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzU3Ng=="}, "originalCommit": {"oid": "ae9209ff88ad768f0fa640cbd56c6b32db1594db"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwMjY3MQ==", "bodyText": "Is it under parameters or not? If it is new top level thing in the recipe, then it shouldn't be under parameters anyway", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503402671", "createdAt": "2020-10-12T16:20:53Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzU3Ng=="}, "originalCommit": {"oid": "ae9209ff88ad768f0fa640cbd56c6b32db1594db"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxMTQ4NA==", "bodyText": "It will be under parameters for the kernel config. But yes. will remove the lookup in the service since it will be a top level thing in the component recipe.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503411484", "createdAt": "2020-10-12T16:37:50Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzU3Ng=="}, "originalCommit": {"oid": "ae9209ff88ad768f0fa640cbd56c6b32db1594db"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxMjM5Nw==", "bodyText": "Why would they be in different places if nucleus is just a normal component?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503412397", "createdAt": "2020-10-12T16:39:29Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.PARAMETERS_CONFIG_KEY;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"rootLoggerConfig\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLoggerConfig\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzU3Ng=="}, "originalCommit": {"oid": "ae9209ff88ad768f0fa640cbd56c6b32db1594db"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzEzNzI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjo0Nzo0NFrOHgGGew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjo1Mjo0NlrOHgGQ8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxNjQ0Mw==", "bodyText": "why isn't this services.<nucleus name>.logging?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503416443", "createdAt": "2020-10-12T16:47:44Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"logging\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLogging\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        this.kernel.getConfig().lookup(KERNEL_CONFIG_PARAMETER_TOPIC)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6ad83417f877cc13ff7caf054aa15b8f738980"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxNjU5MQ==", "bodyText": "or, better yet, kernel.findServiceTopics(nucleus)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503416591", "createdAt": "2020-10-12T16:48:04Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"logging\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLogging\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        this.kernel.getConfig().lookup(KERNEL_CONFIG_PARAMETER_TOPIC)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxNjQ0Mw=="}, "originalCommit": {"oid": "3f6ad83417f877cc13ff7caf054aa15b8f738980"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxOTEyMw==", "bodyText": "I was going to wait for the other PR to get merged to reuse the KERNEL_COMPONENT_NAME field. This was just meant to be the skeleton code.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503419123", "createdAt": "2020-10-12T16:52:46Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"logging\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLogging\";\n+    private final Kernel kernel;\n+\n+    public LogManagerHelper(Kernel kernel) {\n+        this.kernel = kernel;\n+        this.kernel.getConfig().lookup(KERNEL_CONFIG_PARAMETER_TOPIC)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxNjQ0Mw=="}, "originalCommit": {"oid": "3f6ad83417f877cc13ff7caf054aa15b8f738980"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzE2MTM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjo1NDo0NFrOHgGVLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjo1NDo0NFrOHgGVLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyMDIwNQ==", "bodyText": "rename this", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503420205", "createdAt": "2020-10-12T16:54:44Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final String KERNEL_CONFIG_PARAMETER_TOPIC = \"logging\";\n+    private static final String SERVICE_CONFIG_PARAMETER_TOPIC = \"ComponentLogging\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6ad83417f877cc13ff7caf054aa15b8f738980"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzYwNTIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOToyMzozMlrOHgKgVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOToyMzozMlrOHgKgVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4ODU5Nw==", "bodyText": "do we actually need to pass the extension into the logger? Doesn't the logger actually strip it out and then add it back later?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r503488597", "createdAt": "2020-10-12T19:23:32Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+\n+/**\n+ * Helper function to get a logger with configurations separate from the root logger.\n+ */\n+public class LogManagerHelper {\n+    private static final String LOG_FILE_EXTENSION = \".log\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b16056f22523259539503298e4963b8cdedceaec"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTQ3NTU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMjozMDozOVrOHijkDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMjozMDozOVrOHijkDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk5NjMwMw==", "bodyText": "follow the example of telemetry and do nucleusPaths.setLoggerPath(). Make sure to set the log dir permissions to drwxr-xr-x", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r505996303", "createdAt": "2020-10-16T02:30:39Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "diffHunk": "@@ -123,6 +123,7 @@ private void initPaths(String rootAbsolutePath) {\n             nucleusPaths.setRootPath(Paths.get(rootAbsolutePath).toAbsolutePath());\n             //set root path for the telemetry logger\n             TelemetryConfig.getInstance().setRoot(Paths.get(deTilde(ROOT_DIR_PREFIX)));\n+            LogManager.setRoot(Paths.get(deTilde(ROOT_DIR_PREFIX)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eaf88d5312183cef5fe92df2bc1d5358b2109e0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTQ3NjMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelLifecycle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMjozMTowNlrOHijkhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMjozMTowNlrOHijkhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk5NjQyMQ==", "bodyText": "shut this down at the very very end (L299), otherwise the log messages at the end won't be logged.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r505996421", "createdAt": "2020-10-16T02:31:06Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelLifecycle.java", "diffHunk": "@@ -284,6 +285,11 @@ public void shutdown(int timeoutSeconds) {\n             //Stop the telemetry logger context after each test so we can delete the telemetry log files that are\n             // created during the test.\n             TelemetryConfig.getInstance().closeContext();\n+            // Stop all the contexts for the loggers.\n+            LogConfig.getInstance().closeContext();\n+            for (LogConfig logConfig : LogManager.getLogConfigurations().values()) {\n+                logConfig.closeContext();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eaf88d5312183cef5fe92df2bc1d5358b2109e0"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzIwMjIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/util/NucleusPaths.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoyMzo1NFrOHjJd9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoyNTo1MlrOHjJiTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNzMzNA==", "bodyText": "Where is this called?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r506617334", "createdAt": "2020-10-16T17:23:54Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/util/NucleusPaths.java", "diffHunk": "@@ -155,4 +155,9 @@ public void setTelemetryPath(Path p) throws IOException {\n         Utils.createPaths(p);\n         Permissions.setTelemetryPermission(p);\n     }\n+\n+    public void setLoggerPath(Path p) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d7b04fdbdc2108d40280c706b6b0d829ffcd448"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxODM5Nw==", "bodyText": "https://github.com/aws/aws-greengrass-nucleus/pull/515/files#diff-796008acb74cf723c72fae28dfa08e52b408eac5dd5d1762ba1bac2b626626ebR128", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r506618397", "createdAt": "2020-10-16T17:25:46Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/util/NucleusPaths.java", "diffHunk": "@@ -155,4 +155,9 @@ public void setTelemetryPath(Path p) throws IOException {\n         Utils.createPaths(p);\n         Permissions.setTelemetryPermission(p);\n     }\n+\n+    public void setLoggerPath(Path p) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNzMzNA=="}, "originalCommit": {"oid": "4d7b04fdbdc2108d40280c706b6b0d829ffcd448"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxODQ0NQ==", "bodyText": "nvm. I saw it, just before nucleusPaths.initPaths", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/515#discussion_r506618445", "createdAt": "2020-10-16T17:25:52Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/util/NucleusPaths.java", "diffHunk": "@@ -155,4 +155,9 @@ public void setTelemetryPath(Path p) throws IOException {\n         Utils.createPaths(p);\n         Permissions.setTelemetryPermission(p);\n     }\n+\n+    public void setLoggerPath(Path p) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNzMzNA=="}, "originalCommit": {"oid": "4d7b04fdbdc2108d40280c706b6b0d829ffcd448"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 647, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}