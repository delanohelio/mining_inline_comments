{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDg2Mzc5", "number": 175, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMjo1NjozOFrODw4XEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMDowOTo0NlrODw4-Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTgxNjQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMjo1NjozOFrOGEHyjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzowMjoyMVrOGEH3Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3NTExOA==", "bodyText": "Use the short form?\nlogger.atInfo(\"service-set-state\").kv(\"newState\", newState).log();", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/175#discussion_r406975118", "createdAt": "2020-04-10T22:56:38Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -95,8 +94,7 @@ private void updateStateAndBroadcast(State newState) {\n         }\n \n         // TODO: Add validation\n-        logger.atInfo().setEventType(\"service-set-state\").kv(CURRENT_STATE_METRIC_NAME, currentState)\n-                .kv(\"newState\", newState).log();\n+        logger.atInfo().setEventType(\"service-set-state\").kv(\"newState\", newState).log();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f233853eb14a2a5a978409f7d0283da6e50fb94d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3NjMwMw==", "bodyText": "Fixed.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/175#discussion_r406976303", "createdAt": "2020-04-10T23:02:21Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -95,8 +94,7 @@ private void updateStateAndBroadcast(State newState) {\n         }\n \n         // TODO: Add validation\n-        logger.atInfo().setEventType(\"service-set-state\").kv(CURRENT_STATE_METRIC_NAME, currentState)\n-                .kv(\"newState\", newState).log();\n+        logger.atInfo().setEventType(\"service-set-state\").kv(\"newState\", newState).log();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3NTExOA=="}, "originalCommit": {"oid": "f233853eb14a2a5a978409f7d0283da6e50fb94d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTkxNzEwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMDowOTo0NlrOGEIrdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMDoxMDoyOFrOGEIrzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4OTY4NQ==", "bodyText": "how does this fix the loop you mentioned, just curious. Wont the thread wait at stateEventQueue.take() anyway?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/175#discussion_r406989685", "createdAt": "2020-04-11T00:09:46Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -290,8 +283,8 @@ private boolean handleCurrentStateBroken(Optional<State> desiredState) {\n         if (State.NEW.equals(desiredState.get())) {\n             updateStateAndBroadcast(State.NEW);\n         } else {\n-            logger.atError().setEventType(\"service-broken\")\n-                    .log(\"service is broken. Deployment is needed\");\n+            logger.atError(\"service-broken\").log(\"service is broken. Deployment is needed\");\n+            return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9868928230a3f32cc18019f74a67a8fe5a00ce6"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4OTc3NA==", "bodyText": "Yes, exactly. It waits instead of looping around forever. Without the change, it would repeat that error log all the time.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/175#discussion_r406989774", "createdAt": "2020-04-11T00:10:28Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -290,8 +283,8 @@ private boolean handleCurrentStateBroken(Optional<State> desiredState) {\n         if (State.NEW.equals(desiredState.get())) {\n             updateStateAndBroadcast(State.NEW);\n         } else {\n-            logger.atError().setEventType(\"service-broken\")\n-                    .log(\"service is broken. Deployment is needed\");\n+            logger.atError(\"service-broken\").log(\"service is broken. Deployment is needed\");\n+            return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4OTY4NQ=="}, "originalCommit": {"oid": "c9868928230a3f32cc18019f74a67a8fe5a00ce6"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4567, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}