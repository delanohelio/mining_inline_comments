{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MTkyNzcy", "number": 410, "title": "Support bootstrap step in all evergreen services", "bodyText": "Issue #, if available:\nDescription of changes:\n\nSupport bootstrap step for Plugins\nUpdate error logs for kernel unpack directory lookup\n\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-09-02T21:45:24Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410", "merged": true, "mergeCommit": {"oid": "4be5a502b23c754146c922fcb822ba9df88cebaa"}, "closed": true, "closedAt": "2020-09-04T00:11:08Z", "author": {"login": "hui-yang"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFDPaCAFqTQ4MTMyNDg1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFZzEkAFqTQ4MjI3ODg3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMzI0ODUx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#pullrequestreview-481324851", "createdAt": "2020-09-02T21:47:55Z", "commit": {"oid": "7a203f760f3e62df0aceec3ed469ab77d9be7bd7"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMTo0Nzo1NVrOHMJ3jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMTo1Mjo0NVrOHMKG8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUwNjYzOQ==", "bodyText": "seems like this should be info", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#discussion_r482506639", "createdAt": "2020-09-02T21:47:55Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -169,27 +173,9 @@ boolean serviceBootstrapRequired(String componentName, Map<String, Object> newSe\n                     .log(\"Bootstrap is not required: service lifecycle bootstrap not found\");\n             return false;\n         }\n-        EvergreenService service;\n-        try {\n-            service = kernel.locate(componentName);\n-        } catch (ServiceLoadException e) {\n-            logger.atTrace().kv(COMPONENT_NAME_LOG_KEY_NAME, componentName).log(\"Bootstrap is required: new service\");\n-            return true;\n-        }\n-        if (!service.getConfig().find(VERSION_CONFIG_KEY).getOnce()\n-                .equals(newServiceConfig.get(VERSION_CONFIG_KEY))) {\n-            logger.atTrace().kv(COMPONENT_NAME_LOG_KEY_NAME, componentName)\n-                    .log(\"Bootstrap is required: service version changed\");\n-            return true;\n-        }\n-        Node serviceOldBootstrap = service.getConfig().findNode(SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n-                LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC);\n-        boolean bootstrapStepChanged =  serviceOldBootstrap == null\n-                || !serviceOldBootstrap.toPOJO().equals(newServiceLifecycle.get(LIFECYCLE_BOOTSTRAP_NAMESPACE_TOPIC));\n-        logger.atTrace().kv(COMPONENT_NAME_LOG_KEY_NAME, componentName).log(String.format(\n-                \"Bootstrap is %srequired: bootstrap step %schanged\", bootstrapStepChanged ? \"\" : \"not \",\n-                        bootstrapStepChanged ? \"\" : \"un\"));\n-        return bootstrapStepChanged;\n+        logger.atTrace().kv(COMPONENT_NAME_LOG_KEY_NAME, componentName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a203f760f3e62df0aceec3ed469ab77d9be7bd7"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUwNzE5MQ==", "bodyText": "debug?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#discussion_r482507191", "createdAt": "2020-09-02T21:48:34Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -152,6 +153,42 @@ public synchronized int bootstrap() throws InterruptedException, TimeoutExceptio\n         return atomicExitCode.get();\n     }\n \n+    /**\n+     * Check if bootstrap step needs to run during service update. Called during deployments to determine deployment\n+     * workflow.\n+     *\n+     * @param newServiceConfig new service config for the update\n+     * @return true if the service\n+     *      1. has a bootstrap step defined, 2. component version changes, or bootstrap step changes.\n+     *      false otherwise\n+     */\n+    @Override\n+    public boolean isBootstrapRequired(Map<String, Object> newServiceConfig) {\n+        if (newServiceConfig == null || !newServiceConfig.containsKey(SERVICE_LIFECYCLE_NAMESPACE_TOPIC)) {\n+            logger.atTrace().log(\"Bootstrap is not required: service lifecycle config not found\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a203f760f3e62df0aceec3ed469ab77d9be7bd7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUwNzY5NQ==", "bodyText": "Just combine this with the checks below?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#discussion_r482507695", "createdAt": "2020-09-02T21:49:13Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -152,6 +153,42 @@ public synchronized int bootstrap() throws InterruptedException, TimeoutExceptio\n         return atomicExitCode.get();\n     }\n \n+    /**\n+     * Check if bootstrap step needs to run during service update. Called during deployments to determine deployment\n+     * workflow.\n+     *\n+     * @param newServiceConfig new service config for the update\n+     * @return true if the service\n+     *      1. has a bootstrap step defined, 2. component version changes, or bootstrap step changes.\n+     *      false otherwise\n+     */\n+    @Override\n+    public boolean isBootstrapRequired(Map<String, Object> newServiceConfig) {\n+        if (newServiceConfig == null || !newServiceConfig.containsKey(SERVICE_LIFECYCLE_NAMESPACE_TOPIC)) {\n+            logger.atTrace().log(\"Bootstrap is not required: service lifecycle config not found\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUwNzE5MQ=="}, "originalCommit": {"oid": "7a203f760f3e62df0aceec3ed469ab77d9be7bd7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUxMDE3Ng==", "bodyText": "Can you validate in the integ test, that upon initial install, the bootstrap required would be false?\nAnd on subsequent installs that it requests restart?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#discussion_r482510176", "createdAt": "2020-09-02T21:52:14Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/PluginService.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+\n+import java.util.Map;\n+\n+import static com.aws.iot.evergreen.packagemanager.KernelConfigResolver.VERSION_CONFIG_KEY;\n+\n+public class PluginService extends EvergreenService {\n+    public PluginService(Topics topics) {\n+        super(topics);\n+    }\n+\n+    /**\n+     * Check if bootstrap step needs to run during service update. Called during deployments to determine deployment\n+     * workflow.\n+     *\n+     * @param newServiceConfig new service config for the update\n+     * @return\n+     */\n+    @Override\n+    public boolean isBootstrapRequired(Map<String, Object> newServiceConfig) {\n+        Topic versionTopic = getConfig().find(VERSION_CONFIG_KEY);\n+        if (versionTopic == null) {\n+            logger.atTrace().log(\"Bootstrap is required: current service version unknown\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a203f760f3e62df0aceec3ed469ab77d9be7bd7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUxMDU3OQ==", "bodyText": "Add a bootstrap override too which returns REQUEST_RESTART", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#discussion_r482510579", "createdAt": "2020-09-02T21:52:45Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/PluginService.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+\n+import java.util.Map;\n+\n+import static com.aws.iot.evergreen.packagemanager.KernelConfigResolver.VERSION_CONFIG_KEY;\n+\n+public class PluginService extends EvergreenService {\n+    public PluginService(Topics topics) {\n+        super(topics);\n+    }\n+\n+    /**\n+     * Check if bootstrap step needs to run during service update. Called during deployments to determine deployment\n+     * workflow.\n+     *\n+     * @param newServiceConfig new service config for the update\n+     * @return\n+     */\n+    @Override\n+    public boolean isBootstrapRequired(Map<String, Object> newServiceConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a203f760f3e62df0aceec3ed469ab77d9be7bd7"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNDk1OTA5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#pullrequestreview-481495909", "createdAt": "2020-09-03T05:08:57Z", "commit": {"oid": "1087f6b3454fa47cda6267771392e21ca68f0abc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNTowODo1N1rOHMWHdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNTowODo1N1rOHMWHdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcwNzMxOQ==", "bodyText": "can you also override isBuiltin to return false, since these are plugins, and therefore are not builtin.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#discussion_r482707319", "createdAt": "2020-09-03T05:08:57Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/PluginService.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+\n+import java.util.Map;\n+\n+import static com.aws.iot.evergreen.deployment.bootstrap.BootstrapSuccessCode.REQUEST_RESTART;\n+import static com.aws.iot.evergreen.packagemanager.KernelConfigResolver.VERSION_CONFIG_KEY;\n+\n+public class PluginService extends EvergreenService {\n+    public PluginService(Topics topics) {\n+        super(topics);\n+    }\n+\n+    /**\n+     * Check if bootstrap step needs to run during service update. Called during deployments to determine deployment\n+     * workflow.\n+     *\n+     * @param newServiceConfig new service config for the update\n+     * @return\n+     */\n+    @Override\n+    public boolean isBootstrapRequired(Map<String, Object> newServiceConfig) {\n+        Topic versionTopic = getConfig().find(VERSION_CONFIG_KEY);\n+        if (versionTopic == null) {\n+            logger.atTrace().log(\"Bootstrap is required: current service version unknown\");\n+            return true;\n+        }\n+        if (!versionTopic.getOnce().equals(newServiceConfig.get(VERSION_CONFIG_KEY))) {\n+            logger.atTrace().log(\"Bootstrap is required: service version changed\");\n+            return true;\n+        }\n+        logger.atTrace().log(\"Bootstrap is not required: service version unchanged\");\n+        return false;\n+    }\n+\n+    @Override\n+    public int bootstrap() {\n+        return REQUEST_RESTART;\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1087f6b3454fa47cda6267771392e21ca68f0abc"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNDk1OTQw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#pullrequestreview-481495940", "createdAt": "2020-09-03T05:09:01Z", "commit": {"oid": "1087f6b3454fa47cda6267771392e21ca68f0abc"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fa78ce07d0a90df60347fa6ba7738128b619ad3", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6fa78ce07d0a90df60347fa6ba7738128b619ad3", "committedDate": "2020-09-03T19:03:51Z", "message": "Support bootstrap step in all evergreen services"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5950302015796470ddb7eb28be8f6de6c2c1eac7", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5950302015796470ddb7eb28be8f6de6c2c1eac7", "committedDate": "2020-09-03T19:03:51Z", "message": "Update integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d211d82647a7903ec2838ac925878f0924e0bb9", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7d211d82647a7903ec2838ac925878f0924e0bb9", "committedDate": "2020-09-03T19:03:51Z", "message": "fix tests; address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1087f6b3454fa47cda6267771392e21ca68f0abc", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1087f6b3454fa47cda6267771392e21ca68f0abc", "committedDate": "2020-09-03T01:21:43Z", "message": "Update integration tests"}, "afterCommit": {"oid": "7d211d82647a7903ec2838ac925878f0924e0bb9", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7d211d82647a7903ec2838ac925878f0924e0bb9", "committedDate": "2020-09-03T19:03:51Z", "message": "fix tests; address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "698b3d06f49ee1d6e4d419f8a947a4d72f81e253", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/698b3d06f49ee1d6e4d419f8a947a4d72f81e253", "committedDate": "2020-09-03T20:27:19Z", "message": "Merge branch 'master' into fix-bootstrap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMTk3NzQ3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#pullrequestreview-482197747", "createdAt": "2020-09-03T20:57:44Z", "commit": {"oid": "698b3d06f49ee1d6e4d419f8a947a4d72f81e253"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e562fe66385d2e0231452a6cbad78ecd5aa38964", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e562fe66385d2e0231452a6cbad78ecd5aa38964", "committedDate": "2020-09-03T21:34:17Z", "message": "Merge branch 'master' into fix-bootstrap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMjc4ODcw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/410#pullrequestreview-482278870", "createdAt": "2020-09-04T00:10:16Z", "commit": {"oid": "e562fe66385d2e0231452a6cbad78ecd5aa38964"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3249, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}