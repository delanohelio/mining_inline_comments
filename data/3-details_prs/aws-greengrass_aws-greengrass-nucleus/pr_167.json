{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMTAxODMx", "number": 167, "title": "Fix for race condition when service transition from installed to running", "bodyText": "Issue #, if available:\nDescription of changes:\n\nremoved unused service from config.yaml\nFixed race condition in run lifecycle stage\n\nRace condition:\nThread 1\nservice executes the run script using thread 2 and sets the stage of the service as running.\nThread 2\nOnce run script finishes the service sets its stage as finished.\nIf thread 2 sets stage as finished before thread 1 can set the stage running, then thread 2's set stage as finished is over written and the service stays in running forever (if notime out is specified)\nWhy is this change necessary:\nFix race condition and make tests less flaky.\nAbove race condition causes the below test to fail randomly\nKernelTest#GIVEN_expected_stdout_patterns_WHEN_kernel_launches_THEN_all_expected_patterns_are_seen\nHow was this change tested:\nManual testing:\nreplicated the race condition manually by adding thread.sleep and tested the solution\nran mvn verify 50 times and builds succeeded.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-04-08T21:59:00Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/167", "merged": true, "mergeCommit": {"oid": "cddb144d474eb2d9378e3c958a5491bffc5f1d12"}, "closed": true, "closedAt": "2020-04-09T17:20:38Z", "author": {"login": "fahadmohammed01"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVvCiUAH2gAyNDAxMTAxODMxOmQ5MTUyMzM4MDBjOTUyZWM3ODEwZDllMGNkNjBiOTYxNDFmNDdlNmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcV_cV0AH2gAyNDAxMTAxODMxOjE0YTFiMTU0YTI1MWEyY2E0MDRiMzlmZTM0MmQzMmFhMGVkMDQzZmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d915233800c952ec7810d9e0cd60b96141f47e6a", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d915233800c952ec7810d9e0cd60b96141f47e6a", "committedDate": "2020-04-08T21:46:48Z", "message": "fixed race condition when changing state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23cea783978267eeb752c09a13ab1a920bec69ee", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/23cea783978267eeb752c09a13ab1a920bec69ee", "committedDate": "2020-04-08T22:00:42Z", "message": "Merge branch 'master' into fix-flaky-tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e18ecc658e21649b144528ade17caa9a7a3fdac", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3e18ecc658e21649b144528ade17caa9a7a3fdac", "committedDate": "2020-04-08T22:07:21Z", "message": "added more comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzY1NzMx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/167#pullrequestreview-390365731", "createdAt": "2020-04-08T22:07:39Z", "commit": {"oid": "23cea783978267eeb752c09a13ab1a920bec69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjowNzozOVrOGDCstQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjowNzozOVrOGDCstQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg0MzEyNQ==", "bodyText": "I don't think we should sync on this. Make a new object to sync on within this method.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/167#discussion_r405843125", "createdAt": "2020-04-08T22:07:39Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -98,38 +98,28 @@ public void startup() throws InterruptedException {\n         if (result == RunStatus.Errored) {\n             reportState(State.ERRORED);\n         } else if (result == RunStatus.NothingDone) {\n-            result = run(\"run\", exit -> {\n-                runScript = null;\n-                if (!inShutdown) {\n-                    if (exit == 0) {\n-                        this.requestStop();\n-                        logger.atInfo().setEventType(\"generic-service-stopping\").log(\"Service finished running\");\n-                    } else {\n-                        reportState(State.ERRORED);\n-                        logger.atError().setEventType(\"generic-service-errored\").addKeyValue(\"exitCode\", exit).log();\n-                    }\n-                }\n-            });\n-            Topic timeoutTopic = config.find(SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n-                    LIFECYCLE_RUN_NAMESPACE_TOPIC, TIMEOUT_NAMESPACE_TOPIC);\n-            Integer timeout = timeoutTopic == null ? null : (Integer) timeoutTopic.getOnce();\n-            if (timeout != null) {\n-                Exec processToClose = currentScript;\n-                context.get(ScheduledExecutorService.class).schedule(() -> {\n-                    if (processToClose.isRunning()) {\n-                        try {\n-                            logger.atWarn(\"service-run-timed-out\")\n-                                    .log(\"Service failed to run within timeout, calling close in process\");\n+            handleRunScript();\n+        }\n+    }\n+\n+    private void handleRunScript() throws InterruptedException {\n+        synchronized (this) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23cea783978267eeb752c09a13ab1a920bec69ee"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzY2Mjg1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/167#pullrequestreview-390366285", "createdAt": "2020-04-08T22:08:51Z", "commit": {"oid": "23cea783978267eeb752c09a13ab1a920bec69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjowODo1MVrOGDCubA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjowODo1MVrOGDCubA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg0MzU2NA==", "bodyText": "What about startup? Don't we need the same fix there?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/167#discussion_r405843564", "createdAt": "2020-04-08T22:08:51Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -98,38 +98,28 @@ public void startup() throws InterruptedException {\n         if (result == RunStatus.Errored) {\n             reportState(State.ERRORED);\n         } else if (result == RunStatus.NothingDone) {\n-            result = run(\"run\", exit -> {\n-                runScript = null;\n-                if (!inShutdown) {\n-                    if (exit == 0) {\n-                        this.requestStop();\n-                        logger.atInfo().setEventType(\"generic-service-stopping\").log(\"Service finished running\");\n-                    } else {\n-                        reportState(State.ERRORED);\n-                        logger.atError().setEventType(\"generic-service-errored\").addKeyValue(\"exitCode\", exit).log();\n-                    }\n-                }\n-            });\n-            Topic timeoutTopic = config.find(SERVICE_LIFECYCLE_NAMESPACE_TOPIC,\n-                    LIFECYCLE_RUN_NAMESPACE_TOPIC, TIMEOUT_NAMESPACE_TOPIC);\n-            Integer timeout = timeoutTopic == null ? null : (Integer) timeoutTopic.getOnce();\n-            if (timeout != null) {\n-                Exec processToClose = currentScript;\n-                context.get(ScheduledExecutorService.class).schedule(() -> {\n-                    if (processToClose.isRunning()) {\n-                        try {\n-                            logger.atWarn(\"service-run-timed-out\")\n-                                    .log(\"Service failed to run within timeout, calling close in process\");\n+            handleRunScript();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23cea783978267eeb752c09a13ab1a920bec69ee"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzY2NDgz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/167#pullrequestreview-390366483", "createdAt": "2020-04-08T22:09:15Z", "commit": {"oid": "23cea783978267eeb752c09a13ab1a920bec69ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjowOToxNVrOGDCvKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjowOToxNVrOGDCvKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg0Mzc1NA==", "bodyText": "make final", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/167#discussion_r405843754", "createdAt": "2020-04-08T22:09:15Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "diffHunk": "@@ -98,7 +100,7 @@\n     Consumer<CharSequence> stderr = NOP;\n     private Copier stderrc;\n     private Copier stdoutc;\n-    private boolean closed = false;\n+    private AtomicBoolean isClosed = new AtomicBoolean(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23cea783978267eeb752c09a13ab1a920bec69ee"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84d69686ecfc5a3abe4fca18eb964ab83cc3996a", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/84d69686ecfc5a3abe4fca18eb964ab83cc3996a", "committedDate": "2020-04-08T22:13:16Z", "message": "fixed PMD violation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bd2e689c6d1de601e6e15f924138a36849f8fd0", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5bd2e689c6d1de601e6e15f924138a36849f8fd0", "committedDate": "2020-04-08T22:22:55Z", "message": "addressed  PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzc0MDQx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/167#pullrequestreview-390374041", "createdAt": "2020-04-08T22:26:18Z", "commit": {"oid": "5bd2e689c6d1de601e6e15f924138a36849f8fd0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNDQ2NjYy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/167#pullrequestreview-390446662", "createdAt": "2020-04-09T02:09:00Z", "commit": {"oid": "5bd2e689c6d1de601e6e15f924138a36849f8fd0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14a1b154a251a2ca404b39fe342d32aa0ed043fb", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/14a1b154a251a2ca404b39fe342d32aa0ed043fb", "committedDate": "2020-04-09T16:53:28Z", "message": "Merge branch 'master' into fix-flaky-tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2430, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}