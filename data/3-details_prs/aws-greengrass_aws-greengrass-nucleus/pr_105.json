{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDUwNTY0", "number": 105, "title": "Add AbstractBaseITCase to make integration test consistent with the help of reading root from System Property", "bodyText": "Issue #, if available:\nDescription of changes:\nThis is a pull request to put root as System Property so that it is available when JVM starts.\n\nAdd AbstractBaseITCase with temp root folder and logging configuration, and all integration tests extending it will have consistent configurations.\n\nIT stands for \"Integration Test\" per maven's standard.\n\n\nEach integration test could also override it if necessary. For example, KernelTest overrides storage from console to a file since it currently relies on watching the file for verification. I think we want to achieve this capability regardless of how to configure logging with root.\n\nWhy is this change necessary:\n\n\nCurrently the root folder is only available when a Kernel instance is created and parseArgs() gets called.\n\n\nparseArg is meant to be the entry point, but any logic at between JVM starting and parseArg, such as Kernel's base class Configuration and Kernel's static level logic will not have access to the root folder.\n\n\nThe problem with logging is that when Configuration's getLogger gets called, which is the first time after JVM starts, Log4j needs root folder to configure file appender for logging, if users want log store to be FILE.\n\n\nFrom the real user usage perspective, I'm imagining the following when starting a kernel with CLI:\n\nUser runs evergreen launch -r [rootPath]\nevergreen script eventually starts JVM by running java -Droot=[rootPath] evergreen_kernel.jar\n\n\n\nAn alternative is that we could just dynamically configure the Log Appender after we parsed the root in the parseArg. The logs generated between JVM starts and parseArg needs to be handled separately.\n\nSeems James @JamesGosling  originally handled this by saving the logging temporally in memory and dump it when log is configured.\nAnother way is to simply log to CONSOLE instead of file during this period of time.\n\n\n\nHow was this change tested:\nmvn verify\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-03-11T02:27:30Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105", "merged": true, "mergeCommit": {"oid": "fab8253366507dd053b50b25d79b4759fe3adc34"}, "closed": true, "closedAt": "2020-03-19T05:59:44Z", "author": {"login": "leaf94"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMdx9DgFqTM3MjQ0MDI4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPC-Q_AH2gAyMzg2NDUwNTY0OmM3MTY0NDZhMWQ0MTA4ODkxMmU0NzBlNjlkZDFlNjc4MGQ1NjBjMWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDQwMjgy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#pullrequestreview-372440282", "createdAt": "2020-03-11T02:30:09Z", "commit": {"oid": "093125693449b8d1906f0231796a6a4050dfb462"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjozMDowOVrOF0nUnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjozNDo1NlrOF0nY8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDUyNA==", "bodyText": "Can we have multiple beforealls? Like if a class that extends this abstract test wants to use a beforeall, do both work?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390714524", "createdAt": "2020-03-11T02:30:09Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractItTestCase.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.aws.iot.evergreen.integrationtests;\n+\n+\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+import java.nio.file.Path;\n+\n+public abstract class AbstractItTestCase {\n+\n+    @TempDir\n+    protected static Path tempRootDir;\n+\n+    @BeforeAll", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093125693449b8d1906f0231796a6a4050dfb462"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDg3Ng==", "bodyText": "Get rid of the catch and fail. Just throw from the test.\nWhy did you make this change, maybe I'm missing something?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390714876", "createdAt": "2020-03-11T02:31:35Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java", "diffHunk": "@@ -192,27 +170,29 @@ void testSomeMethod() throws Exception {\n         Thread thread = new Thread(runnable);\n         thread.start();\n \n-        Kernel kernel = new Kernel();\n-        kernel.parseArgs(\"-r\", tempRootDir.toString(), \"-log\", \"stdout\", \"-i\",\n-                KernelTest.class.getResource(\"config.yaml\").toString());\n-        kernel.launch();\n-        boolean ok = OK[0].await(200, TimeUnit.SECONDS);\n-        assertTrue(ok);\n-        testGroup(0);\n-        System.out.println(\"First phase passed, now for the harder stuff\");\n-\n-        kernel.find(\"main\", \"run\")\n-                .setValue(\"while true; do\\n\" + \"        date; sleep 5; echo NEWMAIN\\n\" + \"     \" + \"   done\");\n-        //            kernel.writeConfig(new OutputStreamWriter(System.out));\n-        testGroup(1);\n-\n-        System.out.println(\"Now merging delta.yaml\");\n-        kernel.mergeInNewConfig(\"ID\", System.currentTimeMillis(),\n-                (Map<Object, Object>) JSON.std.with(new YAMLFactory()).anyFrom(getClass().getResource(\"delta\"\n-                        + \".yaml\")))\n-                .get(60, TimeUnit.SECONDS);\n-        testGroup(2);\n-        kernel.shutdown();\n+        try {\n+            Kernel kernel = new Kernel();\n+            kernel.parseArgs(\"-i\", this.getClass().getResource(\"config.yaml\").toString());\n+            kernel.launch();\n+            boolean ok = OK[0].await(200, TimeUnit.SECONDS);\n+            assertTrue(ok);\n+            testGroup(0);\n+            System.out.println(\"First phase passed, now for the harder stuff\");\n+\n+            kernel.find(\"main\", \"run\").setValue(\"while true; do\\n\" + \"        date; sleep 5; echo NEWMAIN\\n\" + \"     \" +\n+                    \"   done\");\n+            //            kernel.writeConfig(new OutputStreamWriter(System.out));\n+            testGroup(1);\n+            System.out.println(\"Now merging delta.yaml\");\n+\n+            kernel.context.get(UpdateSystemSafelyService.class).addUpdateAction(\"test\",\n+                    () -> kernel.readMerge(this.getClass().getResource(\"delta.yaml\"), false));\n+            testGroup(2);\n+            kernel.shutdown();\n+        } catch (Throwable ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093125693449b8d1906f0231796a6a4050dfb462"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTA0Ng==", "bodyText": "quit? Since this is a property that can't be fixed by a deployment.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390715046", "createdAt": "2020-03-11T02:32:28Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -133,6 +133,18 @@ public Kernel parseArgs(String... args) {\n                         ensureCreated(workPath);\n                     }\n                 });\n+\n+\n+        // Initialize root path from System Property/JVM argument\n+        String rootAbsolutePath = System.getProperty(\"root\");\n+        if (Utils.isEmpty(rootAbsolutePath) || !ensureCreated(Paths.get(rootAbsolutePath))) {\n+            System.err.println(rootAbsolutePath + \": not a valid root directory\");\n+            broken = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093125693449b8d1906f0231796a6a4050dfb462"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTUxMg==", "bodyText": "Seems like you should be setting the value as the dflt on line 121 from the system property?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390715512", "createdAt": "2020-03-11T02:34:20Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -133,6 +133,18 @@ public Kernel parseArgs(String... args) {\n                         ensureCreated(workPath);\n                     }\n                 });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093125693449b8d1906f0231796a6a4050dfb462"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTYzMg==", "bodyText": "Not a big deal, but I don't like this class name. Can we just go with AbstractTest? or similar", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390715632", "createdAt": "2020-03-11T02:34:56Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractItTestCase.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.aws.iot.evergreen.integrationtests;\n+\n+\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+import java.nio.file.Path;\n+\n+public abstract class AbstractItTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093125693449b8d1906f0231796a6a4050dfb462"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDQxNzc4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#pullrequestreview-372441778", "createdAt": "2020-03-11T02:35:28Z", "commit": {"oid": "f6a98184c4bddf9a8b734ada2fda7336d27c8459"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjozNToyOFrOF0nZTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjozNToyOFrOF0nZTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTcyNA==", "bodyText": "What is the IT in the name?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r390715724", "createdAt": "2020-03-11T02:35:28Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/AbstractBaseITCase.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.aws.iot.evergreen.integrationtests;\n+\n+\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+import java.nio.file.Path;\n+\n+public abstract class AbstractBaseITCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a98184c4bddf9a8b734ada2fda7336d27c8459"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NDk3MzYw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#pullrequestreview-374497360", "createdAt": "2020-03-13T17:46:23Z", "commit": {"oid": "f6a98184c4bddf9a8b734ada2fda7336d27c8459"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzo0NjoyM1rOF2M-UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzo0NjoyM1rOF2M-UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM3OTk4NA==", "bodyText": "This can be refactored now after James added the log listener. But I'm fine with addressing this in a separate PR.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r392379984", "createdAt": "2020-03-13T17:46:23Z", "author": {"login": "hui-yang"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelTest.java", "diffHunk": "@@ -44,44 +37,30 @@\n             new Expected(1, \"\\\"stdout\\\":\\\"NEWMAIN\\\"\", \"Assignment to 'run' script'\"),\n             new Expected(2, \"\\\"stdout\\\":\\\"JUSTME=fancy a spot of coffee?\\\"\", \"merge yaml\"),\n             new Expected(2, \"\\\"stdout\\\":\\\"I'm Frodo\\\"\", \"merge adding dependency\")};\n-    static final String LogFileName = \"test.log\";\n+    private static final String LOG_FILE_NAME = \"KernelTest.log\";\n+    private static final String LOG_FILE_PATH_NAME = tempRootDir.resolve(LOG_FILE_NAME).toAbsolutePath().toString();\n \n     static {\n         for (int i = gc.length; --i >= 0; ) {\n             OK[i] = new CountDownLatch(gc[i]);\n         }\n     }\n \n-    @TempDir\n-    Path tempRootDir;\n-\n     @BeforeAll\n-    static void setup() {\n+    static void beforeAll () {\n+        // TODO Migrate off verification through logging\n+        // override log store to a file for legacy kernel test to verify logs\n         System.setProperty(\"log.fmt\", \"JSON\");\n-        System.setProperty(\"log.storeName\", LogFileName);\n         System.setProperty(\"log.store\", \"FILE\");\n         System.setProperty(\"log.level\", \"INFO\");\n-        try {\n-            Files.deleteIfExists(Paths.get(LogFileName));\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n-    @AfterAll\n-    static void cleanup() {\n-        try {\n-            Files.deleteIfExists(Paths.get(LogFileName));\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n+        System.setProperty(\"log.storeName\", LOG_FILE_PATH_NAME);\n+        System.out.println(\"Storing log to: \" + LOG_FILE_PATH_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a98184c4bddf9a8b734ada2fda7336d27c8459"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19dd7d37fe4a1be12e3b2f11e2603253baa33b20", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/19dd7d37fe4a1be12e3b2f11e2603253baa33b20", "committedDate": "2020-03-18T22:24:44Z", "message": "Add AbstractBaseITCase to make integration test consistent with the help of reading root from System Property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cba95723eb601a1133b215c2b4fb723735d99bd3", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cba95723eb601a1133b215c2b4fb723735d99bd3", "committedDate": "2020-03-18T22:32:40Z", "message": "Add AbstractBaseITCase to make integration test consistent with the help of reading root from System Property"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6a98184c4bddf9a8b734ada2fda7336d27c8459", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f6a98184c4bddf9a8b734ada2fda7336d27c8459", "committedDate": "2020-03-11T02:33:48Z", "message": "Merge branch 'master' into root_as_jvm_arg"}, "afterCommit": {"oid": "cba95723eb601a1133b215c2b4fb723735d99bd3", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cba95723eb601a1133b215c2b4fb723735d99bd3", "committedDate": "2020-03-18T22:32:40Z", "message": "Add AbstractBaseITCase to make integration test consistent with the help of reading root from System Property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20e73da1ffc0f61402431248831cb3ce4c0795c9", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/20e73da1ffc0f61402431248831cb3ce4c0795c9", "committedDate": "2020-03-19T01:08:54Z", "message": "Remove default root path and stickiness with Preference"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MzU0MTQ2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#pullrequestreview-377354146", "createdAt": "2020-03-19T01:21:46Z", "commit": {"oid": "20e73da1ffc0f61402431248831cb3ce4c0795c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMToyMTo0NlrOF4c0Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMToyMTo0NlrOF4c0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczNjY5NQ==", "bodyText": "When you rebase, I believe you'll have a lot of additional cleanup to remove all the -rs and -logs.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#discussion_r394736695", "createdAt": "2020-03-19T01:21:46Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -37,8 +33,7 @@ void setup() {\n \n         // start kernel\n         kernel = new Kernel();\n-        kernel.parseArgs(\"-r\", tempRootDir.toString(), \"-i\",\n-                getClass().getResource(\"ipc_aware_main.yaml\").toString());\n+        kernel.parseArgs(\"-i\", this.getClass().getResource(\"ipc_aware_main.yaml\").toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e73da1ffc0f61402431248831cb3ce4c0795c9"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MzU2Mzcz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/105#pullrequestreview-377356373", "createdAt": "2020-03-19T01:27:35Z", "commit": {"oid": "20e73da1ffc0f61402431248831cb3ce4c0795c9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c716446a1d41088912e470e69dd1e6780d560c1a", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c716446a1d41088912e470e69dd1e6780d560c1a", "committedDate": "2020-03-19T03:02:46Z", "message": "Merge branch 'master' into root_as_jvm_arg"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2321, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}