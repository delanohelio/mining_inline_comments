{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MjEyMzAz", "number": 649, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTo0NjoyOVrOE3JMqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTo0NjoyOVrOE3JMqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjU3ODMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/iot/IotCloudHelper.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTo0NjoyOVrOHwUQig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTozMTo1MlrOHwseJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNTYxMA==", "bodyText": "does IoT complain if we send an empty thing name header?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/649#discussion_r520425610", "createdAt": "2020-11-10T09:46:29Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/iot/IotCloudHelper.java", "diffHunk": "@@ -49,15 +50,21 @@\n      * Sends Http request to Iot Cloud.\n      *\n      * @param connManager underlying connection manager to use for sending requests\n+     * @param thingName   IoT Thing Name\n      * @param path        Http url to query\n      * @param verb        Http verb for the request\n      * @param body        Http body for the request\n      * @return Http response corresponding to http request for path\n      * @throws AWSIotException when unable to send the request successfully\n      */\n-    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, final String path,\n-                                            final String verb, final byte[] body) throws AWSIotException {\n-        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost())};\n+    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, String thingName,\n+                                            final String path, final String verb, final byte[] body)\n+            throws AWSIotException {\n+        if (thingName == null) {\n+            thingName = \"\";\n+        }\n+        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost()),\n+                new HttpHeader(HTTP_HEADER_THING_NAME, thingName)};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3b19bb0ed833ea4d67348a097359111568e34c9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcyOTc2MA==", "bodyText": "We never sent the header at all before, so I don't se why it would care.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/649#discussion_r520729760", "createdAt": "2020-11-10T17:12:17Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/iot/IotCloudHelper.java", "diffHunk": "@@ -49,15 +50,21 @@\n      * Sends Http request to Iot Cloud.\n      *\n      * @param connManager underlying connection manager to use for sending requests\n+     * @param thingName   IoT Thing Name\n      * @param path        Http url to query\n      * @param verb        Http verb for the request\n      * @param body        Http body for the request\n      * @return Http response corresponding to http request for path\n      * @throws AWSIotException when unable to send the request successfully\n      */\n-    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, final String path,\n-                                            final String verb, final byte[] body) throws AWSIotException {\n-        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost())};\n+    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, String thingName,\n+                                            final String path, final String verb, final byte[] body)\n+            throws AWSIotException {\n+        if (thingName == null) {\n+            thingName = \"\";\n+        }\n+        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost()),\n+                new HttpHeader(HTTP_HEADER_THING_NAME, thingName)};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNTYxMA=="}, "originalCommit": {"oid": "d3b19bb0ed833ea4d67348a097359111568e34c9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwODUwMQ==", "bodyText": "We should probably log error if thing name is not set, as we are allowing customers to rely on it for securing access to resources in cloud.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/649#discussion_r520808501", "createdAt": "2020-11-10T19:07:45Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/greengrass/iot/IotCloudHelper.java", "diffHunk": "@@ -49,15 +50,21 @@\n      * Sends Http request to Iot Cloud.\n      *\n      * @param connManager underlying connection manager to use for sending requests\n+     * @param thingName   IoT Thing Name\n      * @param path        Http url to query\n      * @param verb        Http verb for the request\n      * @param body        Http body for the request\n      * @return Http response corresponding to http request for path\n      * @throws AWSIotException when unable to send the request successfully\n      */\n-    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, final String path,\n-                                            final String verb, final byte[] body) throws AWSIotException {\n-        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost())};\n+    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, String thingName,\n+                                            final String path, final String verb, final byte[] body)\n+            throws AWSIotException {\n+        if (thingName == null) {\n+            thingName = \"\";\n+        }\n+        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost()),\n+                new HttpHeader(HTTP_HEADER_THING_NAME, thingName)};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNTYxMA=="}, "originalCommit": {"oid": "d3b19bb0ed833ea4d67348a097359111568e34c9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwOTY2Mg==", "bodyText": "If they use it in the cloud, IAM will just reject the request.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/649#discussion_r520809662", "createdAt": "2020-11-10T19:09:55Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/iot/IotCloudHelper.java", "diffHunk": "@@ -49,15 +50,21 @@\n      * Sends Http request to Iot Cloud.\n      *\n      * @param connManager underlying connection manager to use for sending requests\n+     * @param thingName   IoT Thing Name\n      * @param path        Http url to query\n      * @param verb        Http verb for the request\n      * @param body        Http body for the request\n      * @return Http response corresponding to http request for path\n      * @throws AWSIotException when unable to send the request successfully\n      */\n-    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, final String path,\n-                                            final String verb, final byte[] body) throws AWSIotException {\n-        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost())};\n+    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, String thingName,\n+                                            final String path, final String verb, final byte[] body)\n+            throws AWSIotException {\n+        if (thingName == null) {\n+            thingName = \"\";\n+        }\n+        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost()),\n+                new HttpHeader(HTTP_HEADER_THING_NAME, thingName)};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNTYxMA=="}, "originalCommit": {"oid": "d3b19bb0ed833ea4d67348a097359111568e34c9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwOTg1MQ==", "bodyText": "It is set using the same mechanism that sets the role alias, so if the RA is set, so will this.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/649#discussion_r520809851", "createdAt": "2020-11-10T19:10:17Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/iot/IotCloudHelper.java", "diffHunk": "@@ -49,15 +50,21 @@\n      * Sends Http request to Iot Cloud.\n      *\n      * @param connManager underlying connection manager to use for sending requests\n+     * @param thingName   IoT Thing Name\n      * @param path        Http url to query\n      * @param verb        Http verb for the request\n      * @param body        Http body for the request\n      * @return Http response corresponding to http request for path\n      * @throws AWSIotException when unable to send the request successfully\n      */\n-    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, final String path,\n-                                            final String verb, final byte[] body) throws AWSIotException {\n-        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost())};\n+    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, String thingName,\n+                                            final String path, final String verb, final byte[] body)\n+            throws AWSIotException {\n+        if (thingName == null) {\n+            thingName = \"\";\n+        }\n+        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost()),\n+                new HttpHeader(HTTP_HEADER_THING_NAME, thingName)};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNTYxMA=="}, "originalCommit": {"oid": "d3b19bb0ed833ea4d67348a097359111568e34c9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxNjMzNw==", "bodyText": "Also, this isn't only called by TES it is also used by DCM I think.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/649#discussion_r520816337", "createdAt": "2020-11-10T19:21:30Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/iot/IotCloudHelper.java", "diffHunk": "@@ -49,15 +50,21 @@\n      * Sends Http request to Iot Cloud.\n      *\n      * @param connManager underlying connection manager to use for sending requests\n+     * @param thingName   IoT Thing Name\n      * @param path        Http url to query\n      * @param verb        Http verb for the request\n      * @param body        Http body for the request\n      * @return Http response corresponding to http request for path\n      * @throws AWSIotException when unable to send the request successfully\n      */\n-    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, final String path,\n-                                            final String verb, final byte[] body) throws AWSIotException {\n-        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost())};\n+    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, String thingName,\n+                                            final String path, final String verb, final byte[] body)\n+            throws AWSIotException {\n+        if (thingName == null) {\n+            thingName = \"\";\n+        }\n+        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost()),\n+                new HttpHeader(HTTP_HEADER_THING_NAME, thingName)};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNTYxMA=="}, "originalCommit": {"oid": "d3b19bb0ed833ea4d67348a097359111568e34c9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgyMTU2OQ==", "bodyText": "I understand its unlikely that we get into the case when thing name is empty, I will leave it up to you.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/649#discussion_r520821569", "createdAt": "2020-11-10T19:30:32Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/greengrass/iot/IotCloudHelper.java", "diffHunk": "@@ -49,15 +50,21 @@\n      * Sends Http request to Iot Cloud.\n      *\n      * @param connManager underlying connection manager to use for sending requests\n+     * @param thingName   IoT Thing Name\n      * @param path        Http url to query\n      * @param verb        Http verb for the request\n      * @param body        Http body for the request\n      * @return Http response corresponding to http request for path\n      * @throws AWSIotException when unable to send the request successfully\n      */\n-    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, final String path,\n-                                            final String verb, final byte[] body) throws AWSIotException {\n-        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost())};\n+    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, String thingName,\n+                                            final String path, final String verb, final byte[] body)\n+            throws AWSIotException {\n+        if (thingName == null) {\n+            thingName = \"\";\n+        }\n+        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost()),\n+                new HttpHeader(HTTP_HEADER_THING_NAME, thingName)};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNTYxMA=="}, "originalCommit": {"oid": "d3b19bb0ed833ea4d67348a097359111568e34c9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgyMjMxMA==", "bodyText": "Since it would fail-safe, I'm not worried about it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/649#discussion_r520822310", "createdAt": "2020-11-10T19:31:52Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/iot/IotCloudHelper.java", "diffHunk": "@@ -49,15 +50,21 @@\n      * Sends Http request to Iot Cloud.\n      *\n      * @param connManager underlying connection manager to use for sending requests\n+     * @param thingName   IoT Thing Name\n      * @param path        Http url to query\n      * @param verb        Http verb for the request\n      * @param body        Http body for the request\n      * @return Http response corresponding to http request for path\n      * @throws AWSIotException when unable to send the request successfully\n      */\n-    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, final String path,\n-                                            final String verb, final byte[] body) throws AWSIotException {\n-        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost())};\n+    public IotCloudResponse sendHttpRequest(final IotConnectionManager connManager, String thingName,\n+                                            final String path, final String verb, final byte[] body)\n+            throws AWSIotException {\n+        if (thingName == null) {\n+            thingName = \"\";\n+        }\n+        final HttpHeader[] headers = {new HttpHeader(\"host\", connManager.getHost()),\n+                new HttpHeader(HTTP_HEADER_THING_NAME, thingName)};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNTYxMA=="}, "originalCommit": {"oid": "d3b19bb0ed833ea4d67348a097359111568e34c9"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 200, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}