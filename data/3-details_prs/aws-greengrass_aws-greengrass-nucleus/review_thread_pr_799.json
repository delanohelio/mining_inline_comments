{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNTIyNDc1", "number": 799, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTowMTowNlrOFGeEeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMToyMzo0NlrOFGebfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzI4NDQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateSystemPolicyService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTowMTowNlrOIHf4Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTowMzozMFrOIHf7ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDczMzI0Ng==", "bodyText": "What happens if the action is in progress, like mentioned in the javadoc?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/799#discussion_r544733246", "createdAt": "2020-12-17T01:01:06Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateSystemPolicyService.java", "diffHunk": "@@ -116,7 +117,8 @@ public boolean discardPendingUpdateAction(String tag) {\n         }\n         // Signal components that they can resume their work since the update is not going to happen\n         lifecycleIPCAgent.sendPostComponentUpdateEvent(new PostComponentUpdateEvent());\n-        return pendingActions.remove(tag) != null;\n+        pendingActions.remove(tag);\n+        return true;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f793e6bdd1f5943b1684fba3c6ae55edd8230443"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDczNDE0Nw==", "bodyText": "It will return false on line 116", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/799#discussion_r544734147", "createdAt": "2020-12-17T01:03:30Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateSystemPolicyService.java", "diffHunk": "@@ -116,7 +117,8 @@ public boolean discardPendingUpdateAction(String tag) {\n         }\n         // Signal components that they can resume their work since the update is not going to happen\n         lifecycleIPCAgent.sendPostComponentUpdateEvent(new PostComponentUpdateEvent());\n-        return pendingActions.remove(tag) != null;\n+        pendingActions.remove(tag);\n+        return true;\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDczMzI0Ng=="}, "originalCommit": {"oid": "f793e6bdd1f5943b1684fba3c6ae55edd8230443"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzM0MzMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateSystemPolicyService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMToyMzo0NlrOIHgYww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMToyODoyM1rOIHgfaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0MTU3MQ==", "bodyText": "Why not just use ConcurrentHashMap?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/799#discussion_r544741571", "createdAt": "2020-12-17T01:23:46Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateSystemPolicyService.java", "diffHunk": "@@ -47,7 +48,7 @@\n     // String identifies the action, the pair consist of timeout and an action. The timeout\n     // represents the value in seconds the kernel will wait for components to respond to\n     // an precomponent update event\n-    private final Map<String, UpdateAction> pendingActions = new LinkedHashMap<>();\n+    private final Map<String, UpdateAction> pendingActions = Collections.synchronizedMap(new LinkedHashMap<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f793e6bdd1f5943b1684fba3c6ae55edd8230443"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0MjYwOQ==", "bodyText": "We need to keep ordering I believe", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/799#discussion_r544742609", "createdAt": "2020-12-17T01:26:42Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateSystemPolicyService.java", "diffHunk": "@@ -47,7 +48,7 @@\n     // String identifies the action, the pair consist of timeout and an action. The timeout\n     // represents the value in seconds the kernel will wait for components to respond to\n     // an precomponent update event\n-    private final Map<String, UpdateAction> pendingActions = new LinkedHashMap<>();\n+    private final Map<String, UpdateAction> pendingActions = Collections.synchronizedMap(new LinkedHashMap<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0MTU3MQ=="}, "originalCommit": {"oid": "f793e6bdd1f5943b1684fba3c6ae55edd8230443"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0MzI3NQ==", "bodyText": "It needs to be a LinkedHashMap so all pending actions are executed in order, right now we only ever have 1 action because we use this only for deployments and we process 1 deployment at a time, but this service was written to accommodate more actions and execute them in order of registration, and we've always left it like that", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/799#discussion_r544743275", "createdAt": "2020-12-17T01:28:23Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/UpdateSystemPolicyService.java", "diffHunk": "@@ -47,7 +48,7 @@\n     // String identifies the action, the pair consist of timeout and an action. The timeout\n     // represents the value in seconds the kernel will wait for components to respond to\n     // an precomponent update event\n-    private final Map<String, UpdateAction> pendingActions = new LinkedHashMap<>();\n+    private final Map<String, UpdateAction> pendingActions = Collections.synchronizedMap(new LinkedHashMap<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0MTU3MQ=="}, "originalCommit": {"oid": "f793e6bdd1f5943b1684fba3c6ae55edd8230443"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 171, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}