{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5ODk3OTIz", "number": 737, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDo1MTozMVrOE-50yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDo1MTozMVrOE-50yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Mzk0NTcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/util/orchestration/SystemdUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDo1MTozMVrOH8TyHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzozMjo0MVrOH9EJeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMDczMg==", "bodyText": "would be better if you use the UserDecorator to build these commands. They don't need sudo if kernel is already running as root (which is the common case)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/737#discussion_r533000732", "createdAt": "2020-12-01T00:51:31Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/orchestration/SystemdUtils.java", "diffHunk": "@@ -21,25 +21,38 @@\n     private static final String PID_FILE_PARAM = \"REPLACE_WITH_GG_LOADER_PID_FILE\";\n     private static final String LOADER_FILE_PARAM = \"REPLACE_WITH_GG_LOADER_FILE\";\n     private static final String SERVICE_CONFIG_FILE_PATH = \"/etc/systemd/system/greengrass.service\";\n+    private static final String LOG_EVENT_NAME = \"systemd-setup\";\n \n     @Override\n     public boolean setupSystemService(KernelAlternatives kernelAlternatives) {\n+        logger.atDebug(LOG_EVENT_NAME).log(\"Start systemd setup\");\n         try {\n             kernelAlternatives.setupInitLaunchDirIfAbsent();\n+\n+            Path serviceTemplate = kernelAlternatives.getServiceTemplatePath();\n+            if (!Files.exists(serviceTemplate)) {\n+                throw new IOException(\"Missing service template file at: \" + serviceTemplate);\n+            }\n+            Path loaderPath = kernelAlternatives.getLoaderPath();\n+            if (!Files.exists(serviceTemplate)) {\n+                throw new IOException(\"Missing loader file at: \" + loaderPath);\n+            }\n+\n             Path serviceConfig = kernelAlternatives.getServiceConfigPath();\n-            interpolateServiceTemplate(kernelAlternatives.getServiceTemplatePath(), serviceConfig, kernelAlternatives);\n+            interpolateServiceTemplate(serviceTemplate, serviceConfig, kernelAlternatives);\n \n             runCommand(String.format(\"sudo cp %s %s\", serviceConfig, SERVICE_CONFIG_FILE_PATH));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb5891e8609d0747e9c5db7d1dd15da1f85d1d0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5MzE0NQ==", "bodyText": "and if you are worried about providing a user, there is a getPrivilegedUser() on the platform object so you can pass that in.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/737#discussion_r533793145", "createdAt": "2020-12-01T23:32:41Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/util/orchestration/SystemdUtils.java", "diffHunk": "@@ -21,25 +21,38 @@\n     private static final String PID_FILE_PARAM = \"REPLACE_WITH_GG_LOADER_PID_FILE\";\n     private static final String LOADER_FILE_PARAM = \"REPLACE_WITH_GG_LOADER_FILE\";\n     private static final String SERVICE_CONFIG_FILE_PATH = \"/etc/systemd/system/greengrass.service\";\n+    private static final String LOG_EVENT_NAME = \"systemd-setup\";\n \n     @Override\n     public boolean setupSystemService(KernelAlternatives kernelAlternatives) {\n+        logger.atDebug(LOG_EVENT_NAME).log(\"Start systemd setup\");\n         try {\n             kernelAlternatives.setupInitLaunchDirIfAbsent();\n+\n+            Path serviceTemplate = kernelAlternatives.getServiceTemplatePath();\n+            if (!Files.exists(serviceTemplate)) {\n+                throw new IOException(\"Missing service template file at: \" + serviceTemplate);\n+            }\n+            Path loaderPath = kernelAlternatives.getLoaderPath();\n+            if (!Files.exists(serviceTemplate)) {\n+                throw new IOException(\"Missing loader file at: \" + loaderPath);\n+            }\n+\n             Path serviceConfig = kernelAlternatives.getServiceConfigPath();\n-            interpolateServiceTemplate(kernelAlternatives.getServiceTemplatePath(), serviceConfig, kernelAlternatives);\n+            interpolateServiceTemplate(serviceTemplate, serviceConfig, kernelAlternatives);\n \n             runCommand(String.format(\"sudo cp %s %s\", serviceConfig, SERVICE_CONFIG_FILE_PATH));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMDczMg=="}, "originalCommit": {"oid": "4fb5891e8609d0747e9c5db7d1dd15da1f85d1d0"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 328, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}