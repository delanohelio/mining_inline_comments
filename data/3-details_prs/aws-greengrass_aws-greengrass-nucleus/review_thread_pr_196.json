{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NzA5NzAz", "number": 196, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjoyNjozMlrOD0UZ9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjowOTo0NlrOD0hcZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTg2ODcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjoyNjozMlrOGJNHOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODoyOTozMlrOGJSgaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwNTIxMQ==", "bodyText": "don't add the suppression because it is wrong. Please just delete the rule from the xml files since the rule is broken.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412305211", "createdAt": "2020-04-21T16:26:32Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -202,6 +202,7 @@ private void enqueueStateEvent(Object event) {\n         }\n     }\n \n+    @SuppressWarnings(\"PMD.AvoidGettingFutureWithoutTimeout\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6879f232db23a4473d1d3dcc9b0aa23d09a7abcb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5MzU3Ng==", "bodyText": "This does help to identify some occurrences of calling get().  But I do see false positive and false negative.\nI will remove the rule.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412393576", "createdAt": "2020-04-21T18:29:32Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -202,6 +202,7 @@ private void enqueueStateEvent(Object event) {\n         }\n     }\n \n+    @SuppressWarnings(\"PMD.AvoidGettingFutureWithoutTimeout\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwNTIxMQ=="}, "originalCommit": {"oid": "6879f232db23a4473d1d3dcc9b0aa23d09a7abcb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzEwMjYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTowNTo0NFrOGJYc8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxNzoyNFrOGJa0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw==", "bodyText": "not sure we can put a timeout here.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412490993", "createdAt": "2020-04-21T21:05:44Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -47,9 +51,7 @@ public Void call() throws NonRetryableDeploymentTaskFailureException, RetryableD\n \n             List<PackageIdentifier> desiredPackages = dependencyResolver\n                     .resolveDependencies(deploymentDocument, rootPackages);\n-            // Block this without timeout because a device can be offline and it can take quite a long time\n-            // to download a package.\n-            packageStore.preparePackages(desiredPackages).get();\n+            packageStore.preparePackages(desiredPackages).get(TIMEOUT_MINUTES, TimeUnit.MINUTES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwMTg3Nw==", "bodyText": "I am not sure too. So I put a very long timeout (60 minutes) here. But I also I want to call out: If there is a timeout, it now translates into RetryableDeploymentTaskFailureException.\nSo two questions:\n\nDo we want some timeout?\nIf so, how long? Is 60 min enough?\n\n@fengwa-aws  I see that you made most of the changes here. Can you offer your opinion?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412501877", "createdAt": "2020-04-21T21:24:01Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -47,9 +51,7 @@ public Void call() throws NonRetryableDeploymentTaskFailureException, RetryableD\n \n             List<PackageIdentifier> desiredPackages = dependencyResolver\n                     .resolveDependencies(deploymentDocument, rootPackages);\n-            // Block this without timeout because a device can be offline and it can take quite a long time\n-            // to download a package.\n-            packageStore.preparePackages(desiredPackages).get();\n+            packageStore.preparePackages(desiredPackages).get(TIMEOUT_MINUTES, TimeUnit.MINUTES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw=="}, "originalCommit": {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNjc0Nw==", "bodyText": "Didn't the comment already explain? We don't need a timeout here.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412506747", "createdAt": "2020-04-21T21:32:57Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -47,9 +51,7 @@ public Void call() throws NonRetryableDeploymentTaskFailureException, RetryableD\n \n             List<PackageIdentifier> desiredPackages = dependencyResolver\n                     .resolveDependencies(deploymentDocument, rootPackages);\n-            // Block this without timeout because a device can be offline and it can take quite a long time\n-            // to download a package.\n-            packageStore.preparePackages(desiredPackages).get();\n+            packageStore.preparePackages(desiredPackages).get(TIMEOUT_MINUTES, TimeUnit.MINUTES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw=="}, "originalCommit": {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNDM2MQ==", "bodyText": "Without any timeout, a thread could be blocked forever. Why would waiting forever better than a very long timeout?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412514361", "createdAt": "2020-04-21T21:47:09Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -47,9 +51,7 @@ public Void call() throws NonRetryableDeploymentTaskFailureException, RetryableD\n \n             List<PackageIdentifier> desiredPackages = dependencyResolver\n                     .resolveDependencies(deploymentDocument, rootPackages);\n-            // Block this without timeout because a device can be offline and it can take quite a long time\n-            // to download a package.\n-            packageStore.preparePackages(desiredPackages).get();\n+            packageStore.preparePackages(desiredPackages).get(TIMEOUT_MINUTES, TimeUnit.MINUTES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw=="}, "originalCommit": {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNzM1MA==", "bodyText": "A deployment can take hours or even days, for example, if the device is offline and the packages cannot be downloaded, or if one of the services are performing critical tasks and cannot be interrupted.\nThe intention is the thread will be blocked until:\n\nthe future is finished;\nthe future is cancelled;\nthe thread is interrupted.\n\nThe caller can always cancel it or interrupt the thread if it decides not to wait any longer (e.g. a new deployment comes in).", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412517350", "createdAt": "2020-04-21T21:52:52Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -47,9 +51,7 @@ public Void call() throws NonRetryableDeploymentTaskFailureException, RetryableD\n \n             List<PackageIdentifier> desiredPackages = dependencyResolver\n                     .resolveDependencies(deploymentDocument, rootPackages);\n-            // Block this without timeout because a device can be offline and it can take quite a long time\n-            // to download a package.\n-            packageStore.preparePackages(desiredPackages).get();\n+            packageStore.preparePackages(desiredPackages).get(TIMEOUT_MINUTES, TimeUnit.MINUTES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw=="}, "originalCommit": {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyOTcxOA==", "bodyText": "I will undo this change.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412529718", "createdAt": "2020-04-21T22:17:24Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentTask.java", "diffHunk": "@@ -47,9 +51,7 @@ public Void call() throws NonRetryableDeploymentTaskFailureException, RetryableD\n \n             List<PackageIdentifier> desiredPackages = dependencyResolver\n                     .resolveDependencies(deploymentDocument, rootPackages);\n-            // Block this without timeout because a device can be offline and it can take quite a long time\n-            // to download a package.\n-            packageStore.preparePackages(desiredPackages).get();\n+            packageStore.preparePackages(desiredPackages).get(TIMEOUT_MINUTES, TimeUnit.MINUTES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MDk5Mw=="}, "originalCommit": {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzIwMTIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMToyOTo0OVrOGJZUFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxOTozMlrOGJa4Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNTExMA==", "bodyText": "Why 30 seconds?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412505110", "createdAt": "2020-04-21T21:29:49Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java", "diffHunk": "@@ -35,6 +37,7 @@\n     public static final String MERGE_CONFIG_EVENT_KEY = \"merge-config\";\n \n     private static final Logger logger = LogManager.getLogger(DeploymentConfigMerger.class);\n+    private static final int TIMEOUT_SECONDS = 30;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzMDc3MA==", "bodyText": "I will undo this change.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412530770", "createdAt": "2020-04-21T22:19:32Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java", "diffHunk": "@@ -35,6 +37,7 @@\n     public static final String MERGE_CONFIG_EVENT_KEY = \"merge-config\";\n \n     private static final Logger logger = LogManager.getLogger(DeploymentConfigMerger.class);\n+    private static final int TIMEOUT_SECONDS = 30;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNTExMA=="}, "originalCommit": {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzIwNzQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTozMToxOVrOGJZXbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxNTo0MlrOGJaw8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNTk2Nw==", "bodyText": "The original comment already explain why timeout is not needed here. 30 second is very likely not sufficient for a deployment to finish.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412505967", "createdAt": "2020-04-21T21:31:19Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -215,14 +217,11 @@ private void connectToAWSIot() throws InterruptedException {\n \n     }\n \n-    @SuppressWarnings({\"PMD.NullAssignment\", \"PMD.AvoidGettingFutureWithoutTimeout\"})\n+    @SuppressWarnings(\"PMD.NullAssignment\")\n     private void finishCurrentDeployment() throws InterruptedException {\n         logger.atInfo().kv(JOB_ID_LOG_KEY_NAME, currentJobId).log(\"Current deployment finished\");\n         try {\n-            //No timeout is set here. Detection of error is delegated to downstream components like\n-            // dependency resolver, package downloader, kernel which will have more visibility\n-            // if something is going wrong\n-            currentProcessStatus.get();\n+            currentProcessStatus.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyODg4Mw==", "bodyText": "i will undo this change.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412528883", "createdAt": "2020-04-21T22:15:42Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -215,14 +217,11 @@ private void connectToAWSIot() throws InterruptedException {\n \n     }\n \n-    @SuppressWarnings({\"PMD.NullAssignment\", \"PMD.AvoidGettingFutureWithoutTimeout\"})\n+    @SuppressWarnings(\"PMD.NullAssignment\")\n     private void finishCurrentDeployment() throws InterruptedException {\n         logger.atInfo().kv(JOB_ID_LOG_KEY_NAME, currentJobId).log(\"Current deployment finished\");\n         try {\n-            //No timeout is set here. Detection of error is delegated to downstream components like\n-            // dependency resolver, package downloader, kernel which will have more visibility\n-            // if something is going wrong\n-            currentProcessStatus.get();\n+            currentProcessStatus.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNTk2Nw=="}, "originalCommit": {"oid": "bda792f575d22e72ef644d567c6eeb83e042de1f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDAwNDg0OnYy", "diffSide": "LEFT", "path": "codestyle/pmd-eg-ruleset.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjowOTo0NlrOGJgHGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoxMjoxOFrOGJgKag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNjQ3Mg==", "bodyText": "I'm not sure if we should remove this. Can we keep it and just add SuppressWarnings in the few places we don't need timeout? I think in the majority of cases we want to enforce a timeout.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412616472", "createdAt": "2020-04-22T02:09:46Z", "author": {"login": "fengwang666"}, "path": "codestyle/pmd-eg-ruleset.xml", "diffHunk": "@@ -79,26 +79,6 @@\n     </rule>\n     <rule ref=\"category/java/security.xml\">\n     </rule>\n-    <rule name=\"AvoidGettingFutureWithoutTimeout\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3948df35725d3c65c01610c0499d0e119912c1c7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNzMyMg==", "bodyText": "The rule is just broken and cannot be fixed. We need to be vigilant in future CRs.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/196#discussion_r412617322", "createdAt": "2020-04-22T02:12:18Z", "author": {"login": "MikeDombo"}, "path": "codestyle/pmd-eg-ruleset.xml", "diffHunk": "@@ -79,26 +79,6 @@\n     </rule>\n     <rule ref=\"category/java/security.xml\">\n     </rule>\n-    <rule name=\"AvoidGettingFutureWithoutTimeout\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNjQ3Mg=="}, "originalCommit": {"oid": "3948df35725d3c65c01610c0499d0e119912c1c7"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4623, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}