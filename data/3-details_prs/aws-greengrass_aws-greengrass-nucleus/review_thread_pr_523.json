{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyOTc4MzMx", "number": 523, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzozNToyNlrOEtQuVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzozOTo0MlrOEtQxrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODk1MzgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/builtin/services/cli/CLIServiceAgent.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzozNToyNlrOHg9Fdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzo1NzozNlrOHg9eyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzMwMg==", "bodyText": "What's the use-case of performing a partial update in case of read failure?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/523#discussion_r504317302", "createdAt": "2020-10-13T23:35:26Z", "author": {"login": "philcali"}, "path": "src/main/java/com/aws/greengrass/builtin/services/cli/CLIServiceAgent.java", "diffHunk": "@@ -241,6 +245,39 @@ public void updateRecipesAndArtifacts(UpdateRecipesAndArtifactsRequest request)\n         }\n     }\n \n+    private void copyRecipes(Path from, Path to) throws IOException {\n+        for (Path r : Files.walk(from).collect(Collectors.toList())) {\n+            String ext = Utils.extension(r.toString());\n+            ComponentRecipe recipe = null;\n+            try {\n+                switch (ext.toLowerCase()) {\n+                    case \"yaml\":\n+                    case \"yml\":\n+                        recipe = SerializerFactory.getRecipeSerializer().readValue(r.toFile(), ComponentRecipe.class);\n+                        break;\n+                    case \"json\":\n+                        recipe = SerializerFactory.getRecipeSerializerJson()\n+                                .readValue(r.toFile(), ComponentRecipe.class);\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            } catch (IOException e) {\n+                logger.atError().log(\"Error reading recipe file from {}\", r, e);\n+            }\n+\n+            if (recipe == null) {\n+                continue;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ec588d1d1485bef06a4285af2fbf58f319a72a7"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxOTIwNg==", "bodyText": "That may not be the recipe that they are caring about deploying", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/523#discussion_r504319206", "createdAt": "2020-10-13T23:42:15Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/builtin/services/cli/CLIServiceAgent.java", "diffHunk": "@@ -241,6 +245,39 @@ public void updateRecipesAndArtifacts(UpdateRecipesAndArtifactsRequest request)\n         }\n     }\n \n+    private void copyRecipes(Path from, Path to) throws IOException {\n+        for (Path r : Files.walk(from).collect(Collectors.toList())) {\n+            String ext = Utils.extension(r.toString());\n+            ComponentRecipe recipe = null;\n+            try {\n+                switch (ext.toLowerCase()) {\n+                    case \"yaml\":\n+                    case \"yml\":\n+                        recipe = SerializerFactory.getRecipeSerializer().readValue(r.toFile(), ComponentRecipe.class);\n+                        break;\n+                    case \"json\":\n+                        recipe = SerializerFactory.getRecipeSerializerJson()\n+                                .readValue(r.toFile(), ComponentRecipe.class);\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            } catch (IOException e) {\n+                logger.atError().log(\"Error reading recipe file from {}\", r, e);\n+            }\n+\n+            if (recipe == null) {\n+                continue;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzMwMg=="}, "originalCommit": {"oid": "2ec588d1d1485bef06a4285af2fbf58f319a72a7"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMjMwOQ==", "bodyText": "Are we doing strict parsing? Failing on unknown fields and such?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/523#discussion_r504322309", "createdAt": "2020-10-13T23:52:50Z", "author": {"login": "philcali"}, "path": "src/main/java/com/aws/greengrass/builtin/services/cli/CLIServiceAgent.java", "diffHunk": "@@ -241,6 +245,39 @@ public void updateRecipesAndArtifacts(UpdateRecipesAndArtifactsRequest request)\n         }\n     }\n \n+    private void copyRecipes(Path from, Path to) throws IOException {\n+        for (Path r : Files.walk(from).collect(Collectors.toList())) {\n+            String ext = Utils.extension(r.toString());\n+            ComponentRecipe recipe = null;\n+            try {\n+                switch (ext.toLowerCase()) {\n+                    case \"yaml\":\n+                    case \"yml\":\n+                        recipe = SerializerFactory.getRecipeSerializer().readValue(r.toFile(), ComponentRecipe.class);\n+                        break;\n+                    case \"json\":\n+                        recipe = SerializerFactory.getRecipeSerializerJson()\n+                                .readValue(r.toFile(), ComponentRecipe.class);\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            } catch (IOException e) {\n+                logger.atError().log(\"Error reading recipe file from {}\", r, e);\n+            }\n+\n+            if (recipe == null) {\n+                continue;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzMwMg=="}, "originalCommit": {"oid": "2ec588d1d1485bef06a4285af2fbf58f319a72a7"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMzc4Ng==", "bodyText": "Some fields are required and if they don't have it it would fail, but I think we're lenient with extra fields", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/523#discussion_r504323786", "createdAt": "2020-10-13T23:57:36Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/builtin/services/cli/CLIServiceAgent.java", "diffHunk": "@@ -241,6 +245,39 @@ public void updateRecipesAndArtifacts(UpdateRecipesAndArtifactsRequest request)\n         }\n     }\n \n+    private void copyRecipes(Path from, Path to) throws IOException {\n+        for (Path r : Files.walk(from).collect(Collectors.toList())) {\n+            String ext = Utils.extension(r.toString());\n+            ComponentRecipe recipe = null;\n+            try {\n+                switch (ext.toLowerCase()) {\n+                    case \"yaml\":\n+                    case \"yml\":\n+                        recipe = SerializerFactory.getRecipeSerializer().readValue(r.toFile(), ComponentRecipe.class);\n+                        break;\n+                    case \"json\":\n+                        recipe = SerializerFactory.getRecipeSerializerJson()\n+                                .readValue(r.toFile(), ComponentRecipe.class);\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            } catch (IOException e) {\n+                logger.atError().log(\"Error reading recipe file from {}\", r, e);\n+            }\n+\n+            if (recipe == null) {\n+                continue;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzMwMg=="}, "originalCommit": {"oid": "2ec588d1d1485bef06a4285af2fbf58f319a72a7"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODk2MjM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzozOTo0MlrOHg9KRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzo0NDowN1rOHg9PFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxODUzNA==", "bodyText": "Will customers understand --env-stage? Should we use --endpoint instead (like the SDK)?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/523#discussion_r504318534", "createdAt": "2020-10-13T23:39:42Z", "author": {"login": "philcali"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -51,6 +52,8 @@\n             + \"\\t--install-cli, -ic\\t\\tY/N Indicate if you want to install Greengrass device CLI\\n\"\n             + \"\\t--setup-system-service, -ss\\t\\tY/N Indicate if you want to setup Greengrass as a system service\\n\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ec588d1d1485bef06a4285af2fbf58f319a72a7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxOTc2NA==", "bodyText": "will probably undocument it for release. Customers will only use prod", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/523#discussion_r504319764", "createdAt": "2020-10-13T23:44:07Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/easysetup/GreengrassSetup.java", "diffHunk": "@@ -51,6 +52,8 @@\n             + \"\\t--install-cli, -ic\\t\\tY/N Indicate if you want to install Greengrass device CLI\\n\"\n             + \"\\t--setup-system-service, -ss\\t\\tY/N Indicate if you want to setup Greengrass as a system service\\n\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxODUzNA=="}, "originalCommit": {"oid": "2ec588d1d1485bef06a4285af2fbf58f319a72a7"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 667, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}