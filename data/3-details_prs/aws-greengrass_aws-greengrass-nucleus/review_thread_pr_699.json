{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNTMxMzk5", "number": 699, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjozNjoyOVrOE6y8mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToxNToxMFrOE7Pr5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDg3NTc2OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/e2e/deployment/DeploymentE2ETest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjozNjoyOVrOH2FJxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDo0Mzo1OFrOH2IE2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2OTU3NA==", "bodyText": "why is this a new error?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526469574", "createdAt": "2020-11-18T22:36:29Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -175,9 +177,10 @@ void GIVEN_kernel_running_WHEN_device_deployment_adds_packages_THEN_new_services\n \n     @Timeout(value = 10, unit = TimeUnit.MINUTES)\n     @Test\n-    void GIVEN_target_service_has_dependencies_WHEN_deploys_target_service_THEN_service_and_dependencies_should_be_deployed()\n+    void GIVEN_target_service_has_dependencies_WHEN_deploys_target_service_THEN_service_and_dependencies_should_be_deployed(ExtensionContext context)\n             throws Exception {\n         // Set up stdout listener to capture stdout for verify interpolation\n+        ignoreExceptionOfType(context, UserPrincipalNotFoundException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae79f461efead973f56a7f7dd4acfa13515901af"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NjYxMQ==", "bodyText": "This is not related to this change, but something that gets thrown when testing locally on a mac. Saw the same exception get ignored in few other integ tests.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526486611", "createdAt": "2020-11-18T23:16:57Z", "author": {"login": "fahadmohammed01"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -175,9 +177,10 @@ void GIVEN_kernel_running_WHEN_device_deployment_adds_packages_THEN_new_services\n \n     @Timeout(value = 10, unit = TimeUnit.MINUTES)\n     @Test\n-    void GIVEN_target_service_has_dependencies_WHEN_deploys_target_service_THEN_service_and_dependencies_should_be_deployed()\n+    void GIVEN_target_service_has_dependencies_WHEN_deploys_target_service_THEN_service_and_dependencies_should_be_deployed(ExtensionContext context)\n             throws Exception {\n         // Set up stdout listener to capture stdout for verify interpolation\n+        ignoreExceptionOfType(context, UserPrincipalNotFoundException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2OTU3NA=="}, "originalCommit": {"oid": "ae79f461efead973f56a7f7dd4acfa13515901af"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwNTIyMg==", "bodyText": "This probably is not.. on mac, you need to change the nobody to your alias in BaseE2E and then E2E test would work.  Does it still show up even after that?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526505222", "createdAt": "2020-11-19T00:07:18Z", "author": {"login": "leaf94"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -175,9 +177,10 @@ void GIVEN_kernel_running_WHEN_device_deployment_adds_packages_THEN_new_services\n \n     @Timeout(value = 10, unit = TimeUnit.MINUTES)\n     @Test\n-    void GIVEN_target_service_has_dependencies_WHEN_deploys_target_service_THEN_service_and_dependencies_should_be_deployed()\n+    void GIVEN_target_service_has_dependencies_WHEN_deploys_target_service_THEN_service_and_dependencies_should_be_deployed(ExtensionContext context)\n             throws Exception {\n         // Set up stdout listener to capture stdout for verify interpolation\n+        ignoreExceptionOfType(context, UserPrincipalNotFoundException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2OTU3NA=="}, "originalCommit": {"oid": "ae79f461efead973f56a7f7dd4acfa13515901af"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxNzQ2NQ==", "bodyText": "that worked", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526517465", "createdAt": "2020-11-19T00:43:58Z", "author": {"login": "fahadmohammed01"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -175,9 +177,10 @@ void GIVEN_kernel_running_WHEN_device_deployment_adds_packages_THEN_new_services\n \n     @Timeout(value = 10, unit = TimeUnit.MINUTES)\n     @Test\n-    void GIVEN_target_service_has_dependencies_WHEN_deploys_target_service_THEN_service_and_dependencies_should_be_deployed()\n+    void GIVEN_target_service_has_dependencies_WHEN_deploys_target_service_THEN_service_and_dependencies_should_be_deployed(ExtensionContext context)\n             throws Exception {\n         // Set up stdout listener to capture stdout for verify interpolation\n+        ignoreExceptionOfType(context, UserPrincipalNotFoundException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2OTU3NA=="}, "originalCommit": {"oid": "ae79f461efead973f56a7f7dd4acfa13515901af"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDg3NzQyOnYy", "diffSide": "LEFT", "path": "src/integrationtests/resources/com/aws/greengrass/integrationtests/deployment/YellowAndRedSignal.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjozNzowNFrOH2FKsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzowNDowMFrOH2F5JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2OTgwOQ==", "bodyText": "why is config gone? We should be testing configuration shouldn't we?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526469809", "createdAt": "2020-11-18T22:37:04Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/resources/com/aws/greengrass/integrationtests/deployment/YellowAndRedSignal.json", "diffHunk": "@@ -9,10 +9,7 @@\n     {\n       \"Name\": \"YellowSignal\",\n       \"ResolvedVersion\": \"1.0.0\",\n-      \"RootComponent\": true,\n-      \"Configuration\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae79f461efead973f56a7f7dd4acfa13515901af"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4MTcwMA==", "bodyText": "DeploymentTaskIntegrationTest#GIVEN_multiple_deployments_with_config_update_WHEN_submitted_to_deployment_task_THEN_configs_are_updated is the new test which verify the config merge behavior, it uses below files\nComponentConfigTest_DeployDocument_1\nComponentConfigTest_DeployDocument_2\nComponentConfigTest_DeployDocument_3\nComponentConfigTest_DeployDocument_4\nComponentConfigTest_DeployDocument_5\nThe test that got removed verify similar things but using the deprecated methods.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526481700", "createdAt": "2020-11-18T23:04:00Z", "author": {"login": "fahadmohammed01"}, "path": "src/integrationtests/resources/com/aws/greengrass/integrationtests/deployment/YellowAndRedSignal.json", "diffHunk": "@@ -9,10 +9,7 @@\n     {\n       \"Name\": \"YellowSignal\",\n       \"ResolvedVersion\": \"1.0.0\",\n-      \"RootComponent\": true,\n-      \"Configuration\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2OTgwOQ=="}, "originalCommit": {"oid": "ae79f461efead973f56a7f7dd4acfa13515901af"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDg5NjA4OnYy", "diffSide": "LEFT", "path": "src/test/java/com/aws/greengrass/componentmanager/KernelConfigResolverTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjo0MzoxM1rOH2FV-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo1MToyMlrOH2zUsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ3MjY5OA==", "bodyText": "Do equivalents of these tests exist for Configuration? I don't think it would", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526472698", "createdAt": "2020-11-18T22:43:13Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/componentmanager/KernelConfigResolverTest.java", "diffHunk": "@@ -265,205 +260,6 @@ void GIVEN_deployment_for_existing_package_WHEN_config_resolution_requested_THEN\n                 dependencyListContains(\"main\", TEST_INPUT_PACKAGE_A, servicesConfig));\n     }\n \n-    @Test\n-    void GIVEN_deployment_with_parameters_set_WHEN_config_resolution_requested_THEN_parameters_should_be_interpolated()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae79f461efead973f56a7f7dd4acfa13515901af"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NTc1MA==", "bodyText": "New unit tests:\nGIVEN_deployment_with_configuration_update_WHEN_config_resolution_requested_THEN_correct_value_applied\nGIVEN_deployment_with_configuration_reset_WHEN_config_resolution_requested_THEN_default_value_applied\nGIVEN_deployment_with_configuration_update_on_dependency_component_WHEN_config_resolution_requested_THEN_correct_value_applied_to_dependent_component", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526485750", "createdAt": "2020-11-18T23:14:47Z", "author": {"login": "fahadmohammed01"}, "path": "src/test/java/com/aws/greengrass/componentmanager/KernelConfigResolverTest.java", "diffHunk": "@@ -265,205 +260,6 @@ void GIVEN_deployment_for_existing_package_WHEN_config_resolution_requested_THEN\n                 dependencyListContains(\"main\", TEST_INPUT_PACKAGE_A, servicesConfig));\n     }\n \n-    @Test\n-    void GIVEN_deployment_with_parameters_set_WHEN_config_resolution_requested_THEN_parameters_should_be_interpolated()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ3MjY5OA=="}, "originalCommit": {"oid": "ae79f461efead973f56a7f7dd4acfa13515901af"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyNjAzMg==", "bodyText": "I had added some runWith config in the tests, are those carried over to the new ones?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r527226032", "createdAt": "2020-11-19T21:51:22Z", "author": {"login": "rbattle"}, "path": "src/test/java/com/aws/greengrass/componentmanager/KernelConfigResolverTest.java", "diffHunk": "@@ -265,205 +260,6 @@ void GIVEN_deployment_for_existing_package_WHEN_config_resolution_requested_THEN\n                 dependencyListContains(\"main\", TEST_INPUT_PACKAGE_A, servicesConfig));\n     }\n \n-    @Test\n-    void GIVEN_deployment_with_parameters_set_WHEN_config_resolution_requested_THEN_parameters_should_be_interpolated()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ3MjY5OA=="}, "originalCommit": {"oid": "ae79f461efead973f56a7f7dd4acfa13515901af"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDg5Nzk1OnYy", "diffSide": "LEFT", "path": "src/test/java/com/aws/greengrass/deployment/converter/DeploymentDocumentConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjo0Mzo0NlrOH2FXGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjo0Mzo0NlrOH2FXGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ3Mjk4NA==", "bodyText": "same as before, do we have equivalent test coverage for the new method?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526472984", "createdAt": "2020-11-18T22:43:46Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/deployment/converter/DeploymentDocumentConverterTest.java", "diffHunk": "@@ -213,36 +139,6 @@ void GIVEN_Full_Local_Override_Request_config_update_And_Current_Root_WHEN_conve\n         assertThat(DependencyComponentConfig.getResolvedVersion(), is(\"*\"));\n     }\n \n-    @Test\n-    void GIVEN_fleet_configuration_with_arn_WHEN_convert_to_deployment_doc_THEN_parse_successfully() {\n-        String configurationArn =\n-                Arn.builder().withPartition(\"aws\").withService(\"gg\").withResource(\"configuration:thing/test:1\").build()\n-                        .toString();\n-        Map<String, Object> configMapA = new HashMap<String, Object>() {{\n-            put(\"param1\", \"value1\");\n-        }};\n-        Map<String, Object> configMapB = new HashMap<String, Object>() {{\n-            put(\"param2\", singletonMap(\"foo\", \"bar\"));\n-        }};\n-        FleetConfiguration config =\n-                FleetConfiguration.builder().creationTimestamp(0L).packages(new HashMap<String, PackageInfo>() {{\n-                    put(\"pkgA\", new PackageInfo(true, \"1.0.0\", configMapA));\n-                    put(\"pkgB\", new PackageInfo(false, \"1.1.0\", configMapB));\n-                }}).componentUpdatePolicy(new ComponentUpdatePolicy().withAction(\"NOTIFY_COMPONENTS\").withTimeout(60))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae79f461efead973f56a7f7dd4acfa13515901af"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTEwOTQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/KernelConfigResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDowODowM1rOH2HV_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDoyNzoxNVrOH2HvNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwNTQ2OQ==", "bodyText": "and this", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526505469", "createdAt": "2020-11-19T00:08:03Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/greengrass/componentmanager/KernelConfigResolver.java", "diffHunk": "@@ -571,125 +532,6 @@ private String lookupSystemConfig(ComponentIdentifier component, String namespac\n \n     /**** end of new configuration code path. Most of below are all deprecated and will be remove soon ****/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a28230dbd353770351df54695e14ddabbb7958d"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxMTkyNQ==", "bodyText": "removed", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r526511925", "createdAt": "2020-11-19T00:27:15Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/greengrass/componentmanager/KernelConfigResolver.java", "diffHunk": "@@ -571,125 +532,6 @@ private String lookupSystemConfig(ComponentIdentifier component, String namespac\n \n     /**** end of new configuration code path. Most of below are all deprecated and will be remove soon ****/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwNTQ2OQ=="}, "originalCommit": {"oid": "2a28230dbd353770351df54695e14ddabbb7958d"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTU4NDM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/model/DeploymentPackageConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToxNToxMFrOH2x7SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMzoxNTo0NlrOH213QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIwMzE0NQ==", "bodyText": "does this need to be public if it is used for testing? could it be package private? or tests updated to use the builder?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r527203145", "createdAt": "2020-11-19T21:15:10Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/deployment/model/DeploymentPackageConfiguration.java", "diffHunk": "@@ -41,30 +39,23 @@\n     @JsonProperty(\"ResolvedVersion\")\n     private String resolvedVersion;\n \n-    @Deprecated\n-    @JsonProperty(\"Configuration\")\n-    private Map<String, Object> configuration = new HashMap<>();\n-\n     @JsonProperty(\"ConfigurationUpdate\")\n     private ConfigurationUpdateOperation configurationUpdateOperation;\n \n     @JsonProperty(\"RunWith\")\n     private RunWith runWith;\n \n     /**\n-     * Constructor for no update configuration update for backward compatibility.\n+     * Constructor for no update configuration update. Used for testing\n      *\n      * @param packageName     name of package\n      * @param rootComponent   if it is root\n      * @param resolvedVersion resolved version\n-     * @param configuration   configuration\n      */\n-    public DeploymentPackageConfiguration(String packageName, boolean rootComponent, String resolvedVersion,\n-            Map<String, Object> configuration) {\n+    public DeploymentPackageConfiguration(String packageName, boolean rootComponent, String resolvedVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c562a48ab5c1a5c726b72d643d5acef44ef044e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI2NzY0OQ==", "bodyText": "This used at multiple places, we can move to private once the test are use builder. but I would prefer to do that later.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/699#discussion_r527267649", "createdAt": "2020-11-19T23:15:46Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/greengrass/deployment/model/DeploymentPackageConfiguration.java", "diffHunk": "@@ -41,30 +39,23 @@\n     @JsonProperty(\"ResolvedVersion\")\n     private String resolvedVersion;\n \n-    @Deprecated\n-    @JsonProperty(\"Configuration\")\n-    private Map<String, Object> configuration = new HashMap<>();\n-\n     @JsonProperty(\"ConfigurationUpdate\")\n     private ConfigurationUpdateOperation configurationUpdateOperation;\n \n     @JsonProperty(\"RunWith\")\n     private RunWith runWith;\n \n     /**\n-     * Constructor for no update configuration update for backward compatibility.\n+     * Constructor for no update configuration update. Used for testing\n      *\n      * @param packageName     name of package\n      * @param rootComponent   if it is root\n      * @param resolvedVersion resolved version\n-     * @param configuration   configuration\n      */\n-    public DeploymentPackageConfiguration(String packageName, boolean rootComponent, String resolvedVersion,\n-            Map<String, Object> configuration) {\n+    public DeploymentPackageConfiguration(String packageName, boolean rootComponent, String resolvedVersion) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIwMzE0NQ=="}, "originalCommit": {"oid": "8c562a48ab5c1a5c726b72d643d5acef44ef044e"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 268, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}