{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMTU2NDkx", "number": 119, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNDozODowOVrODo96Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNDo0MDoxNVrODo97AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjgzOTA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/DependencyResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNDozODowOVrOF32IRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzoyNzo0N1rOF4Pj0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMjg1NA==", "bodyText": "This is fine, but why not just have the resolve method throw the exception?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/119#discussion_r394102854", "createdAt": "2020-03-18T04:38:09Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/DependencyResolver.java", "diffHunk": "@@ -84,10 +84,12 @@\n \n         // Map of package name and resolved version\n         Map<String, Semver> resolvedPackageNameToVersion = new HashMap<>();\n-        boolean resolved = resolveDependencyTree(resolvedPackageNameToVersion, packageNameToVersionConstraints,\n-                rootPackagesToResolve);\n-        if (!resolved) {\n-            throw new PackageVersionConflictException(\"Unresolved packages: \" + rootPackagesToResolve);\n+\n+        Optional<String> errorMessage = resolveDependencyTree(resolvedPackageNameToVersion,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2832f883b3774ff287cbdbca206042016e6c9abf"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxOTUwNg==", "bodyText": "There could be multiple conflicts during the resolution, and then a different path will be explored instead of throwing the exception right away. This will just contain the last conflict.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/119#discussion_r394519506", "createdAt": "2020-03-18T17:27:47Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/DependencyResolver.java", "diffHunk": "@@ -84,10 +84,12 @@\n \n         // Map of package name and resolved version\n         Map<String, Semver> resolvedPackageNameToVersion = new HashMap<>();\n-        boolean resolved = resolveDependencyTree(resolvedPackageNameToVersion, packageNameToVersionConstraints,\n-                rootPackagesToResolve);\n-        if (!resolved) {\n-            throw new PackageVersionConflictException(\"Unresolved packages: \" + rootPackagesToResolve);\n+\n+        Optional<String> errorMessage = resolveDependencyTree(resolvedPackageNameToVersion,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMjg1NA=="}, "originalCommit": {"oid": "2832f883b3774ff287cbdbca206042016e6c9abf"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Mjg0MDQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/DependencyResolver.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNDozOToxNVrOF32JIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzoyODo0NVrOF4PmWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzA3NQ==", "bodyText": "String.format instead of concatenation would be preferred I think. Here and elsewhere.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/119#discussion_r394103075", "createdAt": "2020-03-18T04:39:15Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/DependencyResolver.java", "diffHunk": "@@ -335,4 +349,19 @@ private Package getPackage(final String pkgName, final Semver version) throws Pa\n         //}\n         //return (Map<String, String>) dependencyListForPlatform;\n     }\n+\n+    private String buildErrorMessage(final String pkgName, final Map<String, Semver> resolvedPackageNameToVersion,\n+                                     final Map<String, String> versionConstraints) {\n+        Map<PackageIdentifier, String> pkgIdToVersionRequirements = new HashMap<>();\n+        versionConstraints.forEach((dependingPkgName, versionRequirement) -> pkgIdToVersionRequirements.put(\n+                new PackageIdentifier(dependingPkgName, resolvedPackageNameToVersion.get(dependingPkgName)),\n+                versionRequirement));\n+        return \"Conflicts in resolving package \" + pkgName + \". Version constraints from upstream packages: \"\n+                + pkgIdToVersionRequirements;\n+    }\n+\n+    private String buildErrorMessage(PackageIdentifier pkg, PackageIdentifier dependingPkg, String requirement) {\n+        return \"Package version \" + pkg + \" does not satisfy requirements of \" + dependingPkg", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2832f883b3774ff287cbdbca206042016e6c9abf"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUyMDE1NA==", "bodyText": "Will do", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/119#discussion_r394520154", "createdAt": "2020-03-18T17:28:45Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/DependencyResolver.java", "diffHunk": "@@ -335,4 +349,19 @@ private Package getPackage(final String pkgName, final Semver version) throws Pa\n         //}\n         //return (Map<String, String>) dependencyListForPlatform;\n     }\n+\n+    private String buildErrorMessage(final String pkgName, final Map<String, Semver> resolvedPackageNameToVersion,\n+                                     final Map<String, String> versionConstraints) {\n+        Map<PackageIdentifier, String> pkgIdToVersionRequirements = new HashMap<>();\n+        versionConstraints.forEach((dependingPkgName, versionRequirement) -> pkgIdToVersionRequirements.put(\n+                new PackageIdentifier(dependingPkgName, resolvedPackageNameToVersion.get(dependingPkgName)),\n+                versionRequirement));\n+        return \"Conflicts in resolving package \" + pkgName + \". Version constraints from upstream packages: \"\n+                + pkgIdToVersionRequirements;\n+    }\n+\n+    private String buildErrorMessage(PackageIdentifier pkg, PackageIdentifier dependingPkg, String requirement) {\n+        return \"Package version \" + pkg + \" does not satisfy requirements of \" + dependingPkg", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzA3NQ=="}, "originalCommit": {"oid": "2832f883b3774ff287cbdbca206042016e6c9abf"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Mjg0MTYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/PackageIdentifier.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNDo0MDoxNVrOF32J6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzoyODo0OFrOF4Pmew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzI3NA==", "bodyText": "Let's have a custom to string since the error this is used with will be customer facing.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/119#discussion_r394103274", "createdAt": "2020-03-18T04:40:15Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/PackageIdentifier.java", "diffHunk": "@@ -7,12 +7,14 @@\n import lombok.AllArgsConstructor;\n import lombok.EqualsAndHashCode;\n import lombok.Getter;\n+import lombok.ToString;\n \n @JsonSerialize\n @JsonInclude(JsonInclude.Include.NON_NULL)\n @Getter\n @EqualsAndHashCode\n @AllArgsConstructor\n+@ToString", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2832f883b3774ff287cbdbca206042016e6c9abf"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUyMDE4Nw==", "bodyText": "Good point. Will do", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/119#discussion_r394520187", "createdAt": "2020-03-18T17:28:48Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/PackageIdentifier.java", "diffHunk": "@@ -7,12 +7,14 @@\n import lombok.AllArgsConstructor;\n import lombok.EqualsAndHashCode;\n import lombok.Getter;\n+import lombok.ToString;\n \n @JsonSerialize\n @JsonInclude(JsonInclude.Include.NON_NULL)\n @Getter\n @EqualsAndHashCode\n @AllArgsConstructor\n+@ToString", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzI3NA=="}, "originalCommit": {"oid": "2832f883b3774ff287cbdbca206042016e6c9abf"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4916, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}