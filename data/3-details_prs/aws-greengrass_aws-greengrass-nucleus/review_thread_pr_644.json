{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3OTYwMDk3", "number": 644, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0MDowN1rOE25nLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjoxNDoxMFrOE3bwsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDAyNDc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0MDowN1rOHv8UAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDoxMzozMlrOHv_5Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMzI4MQ==", "bodyText": "why is the value null? Why wouldn't this save the new value?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520033281", "createdAt": "2020-11-09T18:40:07Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -152,6 +152,8 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n             tlogline = new Tlogline(t.getModtime(), t.path(), WhatHappened.changed, t.getOnce());\n         } else if (what == WhatHappened.childRemoved) {\n             tlogline = new Tlogline(n.getModtime(), n.path(), WhatHappened.removed, null);\n+        } else if (what == WhatHappened.nodeTypeChanged) {\n+            tlogline = new Tlogline(n.getModtime(), n.path(), WhatHappened.nodeTypeChanged, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f82c3fc6ba33af99a8bf9a3b19df3e7488398b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA5MTkwNg==", "bodyText": "Functionally nodeTypeChanged is same as removed. I'll remove the nodeTypeChanged type", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520091906", "createdAt": "2020-11-09T20:13:32Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -152,6 +152,8 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n             tlogline = new Tlogline(t.getModtime(), t.path(), WhatHappened.changed, t.getOnce());\n         } else if (what == WhatHappened.childRemoved) {\n             tlogline = new Tlogline(n.getModtime(), n.path(), WhatHappened.removed, null);\n+        } else if (what == WhatHappened.nodeTypeChanged) {\n+            tlogline = new Tlogline(n.getModtime(), n.path(), WhatHappened.nodeTypeChanged, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMzI4MQ=="}, "originalCommit": {"oid": "71f82c3fc6ba33af99a8bf9a3b19df3e7488398b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDAzMzg4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/greengrass/config/ConfigurationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0MjozNFrOHv8Zuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDoxNDo1N1rOHv_8Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNDc0Nw==", "bodyText": "without your change, does this test fail with the error that nodes cannot change type?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520034747", "createdAt": "2020-11-09T18:42:34Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/config/ConfigurationTest.java", "diffHunk": "@@ -637,6 +637,101 @@ void GIVEN_config_update_WHEN_merge_update_interleave_THEN_expect_merge_correct(\n         assertEquals(now, config.findNode(\"nodeToBeMerged\", \"key3\").modtime);\n     }\n \n+\n+    @Test\n+    void GIVEN_config_update_WHEN_node_type_change_THEN_expect_merge_correct() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f82c3fc6ba33af99a8bf9a3b19df3e7488398b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA5MjcyMg==", "bodyText": "Yes, since the UpdateBehaviorTree is using Merge not Replace. Without the change, merge will fail. My change basically makes merge has the same behavior as replace when node type changes", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520092722", "createdAt": "2020-11-09T20:14:57Z", "author": {"login": "ShirleyZheng92"}, "path": "src/test/java/com/aws/greengrass/config/ConfigurationTest.java", "diffHunk": "@@ -637,6 +637,101 @@ void GIVEN_config_update_WHEN_merge_update_interleave_THEN_expect_merge_correct(\n         assertEquals(now, config.findNode(\"nodeToBeMerged\", \"key3\").modtime);\n     }\n \n+\n+    @Test\n+    void GIVEN_config_update_WHEN_node_type_change_THEN_expect_merge_correct() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNDc0Nw=="}, "originalCommit": {"oid": "71f82c3fc6ba33af99a8bf9a3b19df3e7488398b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA0MTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0NDoyNlrOHv8d6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0NDoyNlrOHv8d6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNTgxNg==", "bodyText": "The what here is only from childChanged so if your child changed doesn't propagate this what type, then this is useless.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520035816", "createdAt": "2020-11-09T18:44:26Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -152,6 +152,8 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n             tlogline = new Tlogline(t.getModtime(), t.path(), WhatHappened.changed, t.getOnce());\n         } else if (what == WhatHappened.childRemoved) {\n             tlogline = new Tlogline(n.getModtime(), n.path(), WhatHappened.removed, null);\n+        } else if (what == WhatHappened.nodeTypeChanged) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f82c3fc6ba33af99a8bf9a3b19df3e7488398b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA0NDY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/config/ConfigurationReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0NToxOFrOHv8gBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDoxMjo1NVrOHv_3qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNjM1OA==", "bodyText": "Why do we need a new type? You were modeling this before as a remove and then an add, so what does this type do differently when it seems that you're just removing it on L77.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520036358", "createdAt": "2020-11-09T18:45:18Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationReader.java", "diffHunk": "@@ -62,6 +62,19 @@ public static void mergeTLogInto(Configuration config, Reader reader, boolean fo\n                         } else {\n                             n.remove(tlogline.timestamp);\n                         }\n+                    } else if (WhatHappened.nodeTypeChanged.equals(tlogline.action)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f82c3fc6ba33af99a8bf9a3b19df3e7488398b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA5MTU2Mw==", "bodyText": "Functionally it's the same. Yeah I can remove the nodeTypeChanged type.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520091563", "createdAt": "2020-11-09T20:12:55Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationReader.java", "diffHunk": "@@ -62,6 +62,19 @@ public static void mergeTLogInto(Configuration config, Reader reader, boolean fo\n                         } else {\n                             n.remove(tlogline.timestamp);\n                         }\n+                    } else if (WhatHappened.nodeTypeChanged.equals(tlogline.action)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNjM1OA=="}, "originalCommit": {"oid": "71f82c3fc6ba33af99a8bf9a3b19df3e7488398b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDY4OTkwOnYy", "diffSide": "LEFT", "path": "src/main/java/com/aws/greengrass/config/Topics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTozOToxN1rOHwCpdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoyNjo0NVrOHwuV8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEzNzA3OA==", "bodyText": "Since this branch is removed, the original mergeChild code path will go to line 311-314. Is that the correct behavior? Should mergeChild also remove the previous child (line311)?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520137078", "createdAt": "2020-11-09T21:39:17Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/config/Topics.java", "diffHunk": "@@ -281,28 +281,6 @@ private void updateChild(CaseInsensitiveString key, Object value,\n             childMergeBehavior = mergeBehavior;\n         }\n \n-        switch (childMergeBehavior.getDefaultBehavior()) {\n-            case MERGE:\n-                mergeChild(key, value, childMergeBehavior);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a1be0293fa0521d6cf4545c932805bb67a9f4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1Mjk3Nw==", "bodyText": "Discussed offline. it's the leafNode->containerNode change. If not removing then the updated value cannot merge in", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520852977", "createdAt": "2020-11-10T20:26:45Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/greengrass/config/Topics.java", "diffHunk": "@@ -281,28 +281,6 @@ private void updateChild(CaseInsensitiveString key, Object value,\n             childMergeBehavior = mergeBehavior;\n         }\n \n-        switch (childMergeBehavior.getDefaultBehavior()) {\n-            case MERGE:\n-                mergeChild(key, value, childMergeBehavior);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEzNzA3OA=="}, "originalCommit": {"oid": "d67a1be0293fa0521d6cf4545c932805bb67a9f4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTEyOTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/config/Topics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTo0NzoyOVrOHwtBtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDowMjo1OFrOHwtkMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzMTQxNA==", "bodyText": "why? If you're adding an interior node, then we want that event!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520831414", "createdAt": "2020-11-10T19:47:29Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/Topics.java", "diffHunk": "@@ -281,43 +281,55 @@ private void updateChild(CaseInsensitiveString key, Object value,\n             childMergeBehavior = mergeBehavior;\n         }\n \n-        switch (childMergeBehavior.getDefaultBehavior()) {\n-            case MERGE:\n-                mergeChild(key, value, childMergeBehavior);\n-                break;\n-            case REPLACE:\n-                replaceChild(key, value, childMergeBehavior);\n-                break;\n-            default:\n-        }\n-    }\n-\n-    private void mergeChild(CaseInsensitiveString key, Object value,\n-                            @NonNull UpdateBehaviorTree mergeBehavior) {\n-        if (value instanceof Map) {\n-            createInteriorChild(key).updateFromMap((Map) value, mergeBehavior);\n-        } else {\n-            createLeafChild(key).withNewerValue(mergeBehavior.getTimestampToUse(), value, false, true);\n-        }\n-    }\n-\n-    private void replaceChild(CaseInsensitiveString key, Object value,\n-                              @Nonnull UpdateBehaviorTree childMergeBehavior) {\n         Node existingChild = children.get(key);\n         // if new node is a container node\n         if (value instanceof Map) {\n-            // if existing child is a leaf node\n-            if (existingChild != null && !(existingChild instanceof Topics)) {\n-                remove(existingChild);\n+            // if existing child is a container node\n+            if (existingChild == null || existingChild instanceof Topics) {\n+                createInteriorChild(key).updateFromMap((Map) value, childMergeBehavior);\n+            } else {\n+                // not calling remove() to avoid WhatHappened.removed event\n+                if (!children.remove(new CaseInsensitiveString(existingChild.getName()), existingChild)) {\n+                    logger.atError(\"config-node-child-remove-error\").kv(\"thisNode\", toString())\n+                            .kv(\"childNode\", existingChild.getName())\n+                            .log();\n+                    return;\n+                }\n+                context.runOnPublishQueue(() -> {\n+                    this.childChanged(WhatHappened.childRemoved, existingChild);\n+                });\n+                // not calling createInteriorChild() to avoid WhatHappened.interiorAdded event", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ced0918c8d6cd698c9f7159041864b97c487ee"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg0MDI0MQ==", "bodyText": "Ok I thought it wrong. Will use createInteriorChild(0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520840241", "createdAt": "2020-11-10T20:02:58Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/greengrass/config/Topics.java", "diffHunk": "@@ -281,43 +281,55 @@ private void updateChild(CaseInsensitiveString key, Object value,\n             childMergeBehavior = mergeBehavior;\n         }\n \n-        switch (childMergeBehavior.getDefaultBehavior()) {\n-            case MERGE:\n-                mergeChild(key, value, childMergeBehavior);\n-                break;\n-            case REPLACE:\n-                replaceChild(key, value, childMergeBehavior);\n-                break;\n-            default:\n-        }\n-    }\n-\n-    private void mergeChild(CaseInsensitiveString key, Object value,\n-                            @NonNull UpdateBehaviorTree mergeBehavior) {\n-        if (value instanceof Map) {\n-            createInteriorChild(key).updateFromMap((Map) value, mergeBehavior);\n-        } else {\n-            createLeafChild(key).withNewerValue(mergeBehavior.getTimestampToUse(), value, false, true);\n-        }\n-    }\n-\n-    private void replaceChild(CaseInsensitiveString key, Object value,\n-                              @Nonnull UpdateBehaviorTree childMergeBehavior) {\n         Node existingChild = children.get(key);\n         // if new node is a container node\n         if (value instanceof Map) {\n-            // if existing child is a leaf node\n-            if (existingChild != null && !(existingChild instanceof Topics)) {\n-                remove(existingChild);\n+            // if existing child is a container node\n+            if (existingChild == null || existingChild instanceof Topics) {\n+                createInteriorChild(key).updateFromMap((Map) value, childMergeBehavior);\n+            } else {\n+                // not calling remove() to avoid WhatHappened.removed event\n+                if (!children.remove(new CaseInsensitiveString(existingChild.getName()), existingChild)) {\n+                    logger.atError(\"config-node-child-remove-error\").kv(\"thisNode\", toString())\n+                            .kv(\"childNode\", existingChild.getName())\n+                            .log();\n+                    return;\n+                }\n+                context.runOnPublishQueue(() -> {\n+                    this.childChanged(WhatHappened.childRemoved, existingChild);\n+                });\n+                // not calling createInteriorChild() to avoid WhatHappened.interiorAdded event", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzMTQxNA=="}, "originalCommit": {"oid": "77ced0918c8d6cd698c9f7159041864b97c487ee"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTEzOTc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/config/Topics.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTo1MDoxNlrOHwtIVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDowNzo0M1rOHwtuzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzMzEwOA==", "bodyText": "I don't understand why this logic just got so much more complicated than yesterday. Why so many changes to just copy over the watchers list?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520833108", "createdAt": "2020-11-10T19:50:16Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/Topics.java", "diffHunk": "@@ -281,43 +281,55 @@ private void updateChild(CaseInsensitiveString key, Object value,\n             childMergeBehavior = mergeBehavior;\n         }\n \n-        switch (childMergeBehavior.getDefaultBehavior()) {\n-            case MERGE:\n-                mergeChild(key, value, childMergeBehavior);\n-                break;\n-            case REPLACE:\n-                replaceChild(key, value, childMergeBehavior);\n-                break;\n-            default:\n-        }\n-    }\n-\n-    private void mergeChild(CaseInsensitiveString key, Object value,\n-                            @NonNull UpdateBehaviorTree mergeBehavior) {\n-        if (value instanceof Map) {\n-            createInteriorChild(key).updateFromMap((Map) value, mergeBehavior);\n-        } else {\n-            createLeafChild(key).withNewerValue(mergeBehavior.getTimestampToUse(), value, false, true);\n-        }\n-    }\n-\n-    private void replaceChild(CaseInsensitiveString key, Object value,\n-                              @Nonnull UpdateBehaviorTree childMergeBehavior) {\n         Node existingChild = children.get(key);\n         // if new node is a container node\n         if (value instanceof Map) {\n-            // if existing child is a leaf node\n-            if (existingChild != null && !(existingChild instanceof Topics)) {\n-                remove(existingChild);\n+            // if existing child is a container node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ced0918c8d6cd698c9f7159041864b97c487ee"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzOTUzNw==", "bodyText": "Basically this just to remove node without invoking remove event on this node's listener. However we still need to have the 'childRemoved' event fire to parent nodes so that ConfigurationWriter knows this node is removed.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520839537", "createdAt": "2020-11-10T20:01:40Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/greengrass/config/Topics.java", "diffHunk": "@@ -281,43 +281,55 @@ private void updateChild(CaseInsensitiveString key, Object value,\n             childMergeBehavior = mergeBehavior;\n         }\n \n-        switch (childMergeBehavior.getDefaultBehavior()) {\n-            case MERGE:\n-                mergeChild(key, value, childMergeBehavior);\n-                break;\n-            case REPLACE:\n-                replaceChild(key, value, childMergeBehavior);\n-                break;\n-            default:\n-        }\n-    }\n-\n-    private void mergeChild(CaseInsensitiveString key, Object value,\n-                            @NonNull UpdateBehaviorTree mergeBehavior) {\n-        if (value instanceof Map) {\n-            createInteriorChild(key).updateFromMap((Map) value, mergeBehavior);\n-        } else {\n-            createLeafChild(key).withNewerValue(mergeBehavior.getTimestampToUse(), value, false, true);\n-        }\n-    }\n-\n-    private void replaceChild(CaseInsensitiveString key, Object value,\n-                              @Nonnull UpdateBehaviorTree childMergeBehavior) {\n         Node existingChild = children.get(key);\n         // if new node is a container node\n         if (value instanceof Map) {\n-            // if existing child is a leaf node\n-            if (existingChild != null && !(existingChild instanceof Topics)) {\n-                remove(existingChild);\n+            // if existing child is a container node", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzMzEwOA=="}, "originalCommit": {"oid": "77ced0918c8d6cd698c9f7159041864b97c487ee"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg0Mjk1OQ==", "bodyText": "I don't think that helps anyone. In pretty much all cases, we subscribe to topics and not a topic (or certainly not a topic which might turn into a topics). So ignoring the remove event doesn't help anything and just makes all this far more complicated.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520842959", "createdAt": "2020-11-10T20:07:43Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/Topics.java", "diffHunk": "@@ -281,43 +281,55 @@ private void updateChild(CaseInsensitiveString key, Object value,\n             childMergeBehavior = mergeBehavior;\n         }\n \n-        switch (childMergeBehavior.getDefaultBehavior()) {\n-            case MERGE:\n-                mergeChild(key, value, childMergeBehavior);\n-                break;\n-            case REPLACE:\n-                replaceChild(key, value, childMergeBehavior);\n-                break;\n-            default:\n-        }\n-    }\n-\n-    private void mergeChild(CaseInsensitiveString key, Object value,\n-                            @NonNull UpdateBehaviorTree mergeBehavior) {\n-        if (value instanceof Map) {\n-            createInteriorChild(key).updateFromMap((Map) value, mergeBehavior);\n-        } else {\n-            createLeafChild(key).withNewerValue(mergeBehavior.getTimestampToUse(), value, false, true);\n-        }\n-    }\n-\n-    private void replaceChild(CaseInsensitiveString key, Object value,\n-                              @Nonnull UpdateBehaviorTree childMergeBehavior) {\n         Node existingChild = children.get(key);\n         // if new node is a container node\n         if (value instanceof Map) {\n-            // if existing child is a leaf node\n-            if (existingChild != null && !(existingChild instanceof Topics)) {\n-                remove(existingChild);\n+            // if existing child is a container node", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzMzEwOA=="}, "originalCommit": {"oid": "77ced0918c8d6cd698c9f7159041864b97c487ee"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTQ0NjE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/config/Topics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMToyMToxOVrOHwwEQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMToyMToxOVrOHwwEQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4MTIxOA==", "bodyText": "nit\nformatting", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520881218", "createdAt": "2020-11-10T21:21:19Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/Topics.java", "diffHunk": "@@ -281,43 +281,32 @@ private void updateChild(CaseInsensitiveString key, Object value,\n             childMergeBehavior = mergeBehavior;\n         }\n \n-        switch (childMergeBehavior.getDefaultBehavior()) {\n-            case MERGE:\n-                mergeChild(key, value, childMergeBehavior);\n-                break;\n-            case REPLACE:\n-                replaceChild(key, value, childMergeBehavior);\n-                break;\n-            default:\n-        }\n-    }\n-\n-    private void mergeChild(CaseInsensitiveString key, Object value,\n-                            @NonNull UpdateBehaviorTree mergeBehavior) {\n-        if (value instanceof Map) {\n-            createInteriorChild(key).updateFromMap((Map) value, mergeBehavior);\n-        } else {\n-            createLeafChild(key).withNewerValue(mergeBehavior.getTimestampToUse(), value, false, true);\n-        }\n-    }\n-\n-    private void replaceChild(CaseInsensitiveString key, Object value,\n-                              @Nonnull UpdateBehaviorTree childMergeBehavior) {\n         Node existingChild = children.get(key);\n         // if new node is a container node\n         if (value instanceof Map) {\n-            // if existing child is a leaf node\n-            if (existingChild != null && !(existingChild instanceof Topics)) {\n+            // if existing child is a container node\n+            if (existingChild == null || existingChild instanceof Topics) {\n+                createInteriorChild(key).updateFromMap((Map) value, childMergeBehavior);\n+            } else {\n                 remove(existingChild);\n+                Topics newNode = createInteriorChild(key);\n+                for (Watcher watcher: existingChild.watchers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6818262f066c56b25929d369ba87be5df363c1b7"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTQ0NzA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/config/Topics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMToyMTozNlrOHwwEzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMToyMTozNlrOHwwEzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4MTM1OQ==", "bodyText": "formatting", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520881359", "createdAt": "2020-11-10T21:21:36Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/Topics.java", "diffHunk": "@@ -281,43 +281,32 @@ private void updateChild(CaseInsensitiveString key, Object value,\n             childMergeBehavior = mergeBehavior;\n         }\n \n-        switch (childMergeBehavior.getDefaultBehavior()) {\n-            case MERGE:\n-                mergeChild(key, value, childMergeBehavior);\n-                break;\n-            case REPLACE:\n-                replaceChild(key, value, childMergeBehavior);\n-                break;\n-            default:\n-        }\n-    }\n-\n-    private void mergeChild(CaseInsensitiveString key, Object value,\n-                            @NonNull UpdateBehaviorTree mergeBehavior) {\n-        if (value instanceof Map) {\n-            createInteriorChild(key).updateFromMap((Map) value, mergeBehavior);\n-        } else {\n-            createLeafChild(key).withNewerValue(mergeBehavior.getTimestampToUse(), value, false, true);\n-        }\n-    }\n-\n-    private void replaceChild(CaseInsensitiveString key, Object value,\n-                              @Nonnull UpdateBehaviorTree childMergeBehavior) {\n         Node existingChild = children.get(key);\n         // if new node is a container node\n         if (value instanceof Map) {\n-            // if existing child is a leaf node\n-            if (existingChild != null && !(existingChild instanceof Topics)) {\n+            // if existing child is a container node\n+            if (existingChild == null || existingChild instanceof Topics) {\n+                createInteriorChild(key).updateFromMap((Map) value, childMergeBehavior);\n+            } else {\n                 remove(existingChild);\n+                Topics newNode = createInteriorChild(key);\n+                for (Watcher watcher: existingChild.watchers) {\n+                    newNode.addWatcher(watcher);\n+                }\n+                newNode.updateFromMap((Map) value, childMergeBehavior);\n             }\n-            createInteriorChild(key).updateFromMap((Map) value, childMergeBehavior);\n         // if new node is a leaf node\n         } else {\n-            // if existing child is a container node\n-            if (existingChild != null && !(existingChild instanceof Topic)) {\n+            if (existingChild == null || existingChild instanceof Topic) {\n+                createLeafChild(key).withNewerValue(childMergeBehavior.getTimestampToUse(), value, false, true);\n+            } else {\n                 remove(existingChild);\n+                Topic newNode = createLeafChild(key);\n+                for (Watcher watcher: existingChild.watchers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6818262f066c56b25929d369ba87be5df363c1b7"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTYxOTcxOnYy", "diffSide": "RIGHT", "path": "CONFIGURE_COMPONENT_README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjoxNDoxMFrOHwxspA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjoxNDoxMFrOHwxspA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkwNzk0MA==", "bodyText": "Thanks for updating this!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/644#discussion_r520907940", "createdAt": "2020-11-10T22:14:10Z", "author": {"login": "fengwang666"}, "path": "CONFIGURE_COMPONENT_README.md", "diffHunk": "@@ -121,6 +121,13 @@ At every level,\n 2. If a key doesn't exist, then key-value pair that is merging in will be added. Note a key that is not existed in the default value,\n could also be added.\n \n+#### 2.3.3 MERGE - The change between a 'leaf' node and a 'container node'\n+1. If a config node has children, it's a 'container' node.\n+1. If a config node has value while not having children, it's a 'leaf' node.\n+1. If during a MERGE, a node type changed between 'leaf' and 'container', the old node will be removed and new node will be created.\n+ Subscribers of the old node will be copied over to new node.\n+ Parent node subscribers will be notified of 'childRemoved' event.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0565f8afcef5421b41fb026942ffcd2c3e2baaa"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 191, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}