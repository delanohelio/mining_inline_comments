{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MzMxNDc0", "number": 357, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDoxMzoyMFrOEWV1Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDoxNjo1NFrOEWV4qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODYxNzY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationReader.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDoxMzoyMFrOG9mjiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDozNjoxNlrOG9nHOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0ODAxMQ==", "bodyText": "maybe use getter and mark it as private since we already has it?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/357#discussion_r467248011", "createdAt": "2020-08-07T20:13:20Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationReader.java", "diffHunk": "@@ -28,28 +27,25 @@ private ConfigurationReader() {\n      * @param reader         reader of the transaction log to read from\n      * @param forceTimestamp should ignore if the proposed timestamp is older than current\n      * @param mergeCondition Predicate that returns true if the provided Topic should be merged and false if not\n-     *\n      * @throws IOException if reading fails\n      */\n-    public static void mergeTLogInto(Configuration config,\n-                                     Reader reader,\n-                                     boolean forceTimestamp,\n+    public static void mergeTLogInto(Configuration config, Reader reader, boolean forceTimestamp,\n                                      Predicate<Node> mergeCondition) throws IOException {\n-        try (BufferedReader in = reader instanceof BufferedReader\n-                ? (BufferedReader) reader : new BufferedReader(reader)) {\n+        try (BufferedReader in = reader instanceof BufferedReader ? (BufferedReader) reader\n+                : new BufferedReader(reader)) {\n             String l;\n \n             for (l = in.readLine(); l != null; l = in.readLine()) {\n                 try {\n                     Tlogline tlogline = Tlogline.fromStringInput(l);\n                     if (WhatHappened.changed.equals(tlogline.action)) {\n-                        Topic targetTopic = config.lookup(seperator.split(tlogline.topicString));\n+                        Topic targetTopic = config.lookup(tlogline.topicPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc87bf528e00b9fab568ecdb9cf470bbbb9382af"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1MDExMg==", "bodyText": "Since we already have it? Not sure what you mean.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/357#discussion_r467250112", "createdAt": "2020-08-07T20:18:50Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationReader.java", "diffHunk": "@@ -28,28 +27,25 @@ private ConfigurationReader() {\n      * @param reader         reader of the transaction log to read from\n      * @param forceTimestamp should ignore if the proposed timestamp is older than current\n      * @param mergeCondition Predicate that returns true if the provided Topic should be merged and false if not\n-     *\n      * @throws IOException if reading fails\n      */\n-    public static void mergeTLogInto(Configuration config,\n-                                     Reader reader,\n-                                     boolean forceTimestamp,\n+    public static void mergeTLogInto(Configuration config, Reader reader, boolean forceTimestamp,\n                                      Predicate<Node> mergeCondition) throws IOException {\n-        try (BufferedReader in = reader instanceof BufferedReader\n-                ? (BufferedReader) reader : new BufferedReader(reader)) {\n+        try (BufferedReader in = reader instanceof BufferedReader ? (BufferedReader) reader\n+                : new BufferedReader(reader)) {\n             String l;\n \n             for (l = in.readLine(); l != null; l = in.readLine()) {\n                 try {\n                     Tlogline tlogline = Tlogline.fromStringInput(l);\n                     if (WhatHappened.changed.equals(tlogline.action)) {\n-                        Topic targetTopic = config.lookup(seperator.split(tlogline.topicString));\n+                        Topic targetTopic = config.lookup(tlogline.topicPath);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0ODAxMQ=="}, "originalCommit": {"oid": "cc87bf528e00b9fab568ecdb9cf470bbbb9382af"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1NzE0NA==", "bodyText": "I meant the TlogLine class already have @getter", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/357#discussion_r467257144", "createdAt": "2020-08-07T20:36:16Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationReader.java", "diffHunk": "@@ -28,28 +27,25 @@ private ConfigurationReader() {\n      * @param reader         reader of the transaction log to read from\n      * @param forceTimestamp should ignore if the proposed timestamp is older than current\n      * @param mergeCondition Predicate that returns true if the provided Topic should be merged and false if not\n-     *\n      * @throws IOException if reading fails\n      */\n-    public static void mergeTLogInto(Configuration config,\n-                                     Reader reader,\n-                                     boolean forceTimestamp,\n+    public static void mergeTLogInto(Configuration config, Reader reader, boolean forceTimestamp,\n                                      Predicate<Node> mergeCondition) throws IOException {\n-        try (BufferedReader in = reader instanceof BufferedReader\n-                ? (BufferedReader) reader : new BufferedReader(reader)) {\n+        try (BufferedReader in = reader instanceof BufferedReader ? (BufferedReader) reader\n+                : new BufferedReader(reader)) {\n             String l;\n \n             for (l = in.readLine(); l != null; l = in.readLine()) {\n                 try {\n                     Tlogline tlogline = Tlogline.fromStringInput(l);\n                     if (WhatHappened.changed.equals(tlogline.action)) {\n-                        Topic targetTopic = config.lookup(seperator.split(tlogline.topicString));\n+                        Topic targetTopic = config.lookup(tlogline.topicPath);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0ODAxMQ=="}, "originalCommit": {"oid": "cc87bf528e00b9fab568ecdb9cf470bbbb9382af"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODYyNjk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/util/Coerce.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDoxNjo1NFrOG9mpBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDoxNjo1NFrOG9mpBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0OTQxMg==", "bodyText": "yeah let's remember if we can switch this with jackson...", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/357#discussion_r467249412", "createdAt": "2020-08-07T20:16:54Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/util/Coerce.java", "diffHunk": "@@ -287,6 +287,17 @@ public static void appendParseableString(Object o, Appendable out) throws IOExce\n             out.append(\"null\");\n         } else if (o instanceof Boolean || o instanceof Number || o instanceof List) {\n             out.append(o.toString());\n+        } else if (o.getClass().isArray()) {\n+            out.append('[');\n+            Object[] objects = (Object[]) o;\n+            for (int j = 0; j < objects.length; j++) {\n+                Object i = objects[j];\n+                out.append(toString(i));\n+                if (j != objects.length - 1) {\n+                    out.append(',');\n+                }\n+            }\n+            out.append(']');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc87bf528e00b9fab568ecdb9cf470bbbb9382af"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4526, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}