{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyODMwNTU3", "number": 349, "title": "TES should reject unsupported verb and uri and add tests", "bodyText": "Issue #, if available:\nDescription of changes:\nRestart server in tes when port changes\nAdd test cases for role alias name changes in e2e test\nAdd handling for unsupported request method and uri and corresponding ut\nWhy is this change necessary:\nEnable updating roleAlias\nTES should reject unsupported verb and uri\nHow was this change tested:\nmvn verify\ne2e test\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-08-04T15:11:49Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349", "merged": true, "mergeCommit": {"oid": "50e123b088a48ed5da80b17d80d95fbff6ee7db7"}, "closed": true, "closedAt": "2020-08-10T16:27:47Z", "author": {"login": "youtuyy"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7jX-sgH2gAyNDYyODMwNTU3Ojk3YWJmMGI3NjYzMWVmMTE5MmE5YWRiY2Q3NmE1NzFiMjFiYzJkMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9krJDAFqTQ2NDM4MDgzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "97abf0b76631ef1192a9adbcd76a571b21bc2d33", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/97abf0b76631ef1192a9adbcd76a571b21bc2d33", "committedDate": "2020-08-04T09:40:29Z", "message": "TES restarts server on port change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwOTcwMjU5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-460970259", "createdAt": "2020-08-04T16:19:57Z", "commit": {"oid": "97abf0b76631ef1192a9adbcd76a571b21bc2d33"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxOTo1N1rOG7n1lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoyMDozM1rOG7n3EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3MTg2Mw==", "bodyText": "don't pass the exception as a string, just pass it as e", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r465171863", "createdAt": "2020-08-04T16:19:57Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/tes/TokenExchangeService.java", "diffHunk": "@@ -133,6 +135,20 @@ private void validateConfig() {\n                 .build());\n     }\n \n+    private void restartServer() {\n+        if (server != null) {\n+            server.stop();\n+        }\n+        try {\n+            server = new HttpServerImpl(port, this.credentialRequestHandler);\n+            server.start();\n+            logger.atInfo().log(\"Restarted Token Server at port {}\", port);\n+            setEnvVariablesForDependencies(server.getServerPort());\n+        } catch (IOException | IllegalArgumentException e) {\n+            serviceErrored(e.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97abf0b76631ef1192a9adbcd76a571b21bc2d33"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3MjI0MA==", "bodyText": "maybe don't create a new method. Evergreen can restart your service for you if you call requestRestart", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r465172240", "createdAt": "2020-08-04T16:20:33Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/tes/TokenExchangeService.java", "diffHunk": "@@ -133,6 +135,20 @@ private void validateConfig() {\n                 .build());\n     }\n \n+    private void restartServer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97abf0b76631ef1192a9adbcd76a571b21bc2d33"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTE0MjE3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-461114217", "createdAt": "2020-08-04T19:34:22Z", "commit": {"oid": "97abf0b76631ef1192a9adbcd76a571b21bc2d33"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTozNDoyMlrOG7urJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTozNDoyMlrOG7urJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4Mzg3Nw==", "bodyText": "Would this work without restarting all components?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r465283877", "createdAt": "2020-08-04T19:34:22Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/iot/evergreen/tes/TokenExchangeService.java", "diffHunk": "@@ -133,6 +135,20 @@ private void validateConfig() {\n                 .build());\n     }\n \n+    private void restartServer() {\n+        if (server != null) {\n+            server.stop();\n+        }\n+        try {\n+            server = new HttpServerImpl(port, this.credentialRequestHandler);\n+            server.start();\n+            logger.atInfo().log(\"Restarted Token Server at port {}\", port);\n+            setEnvVariablesForDependencies(server.getServerPort());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97abf0b76631ef1192a9adbcd76a571b21bc2d33"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTE1OTcx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-461115971", "createdAt": "2020-08-04T19:37:05Z", "commit": {"oid": "97abf0b76631ef1192a9adbcd76a571b21bc2d33"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTozNzowNVrOG7uwfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTozNzowNVrOG7uwfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4NTI0Ng==", "bodyText": "nit: move this out to a method. its being repeated now.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r465285246", "createdAt": "2020-08-04T19:37:05Z", "author": {"login": "prateek-y"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/tes/TESTest.java", "diffHunk": "@@ -147,6 +159,29 @@ void GIVEN_iot_role_alias_WHEN_tes_is_queried_THEN_valid_credentials_are_returne\n             networkUtils.recoverNetwork();\n         }\n \n+        // Should fetch new credentials after updating roleAlias\n+        kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, TOKEN_EXCHANGE_SERVICE_TOPICS)\n+                .lookup(PARAMETERS_CONFIG_KEY, IOT_ROLE_ALIAS_TOPIC).withValue(newRoleAliasName);\n+        deviceProvisioningHelper.setupIoTRoleForTes(roleName, newRoleAliasName, thingInfo.getCertificateArn());\n+        con = (HttpURLConnection) url.openConnection();\n+        con.setRequestMethod(\"GET\");\n+        token = kernel.getConfig().findTopics(SERVICES_NAMESPACE_TOPIC, AuthenticationHandler.AUTH_TOKEN_LOOKUP_KEY)\n+                .iterator().next().getName();\n+        assertNotNull(token);\n+        con.setRequestProperty(\"Authorization\", token);\n+        assertEquals(HTTP_200, con.getResponseCode());\n+        StringBuilder newResponse = new StringBuilder();\n+        try (BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97abf0b76631ef1192a9adbcd76a571b21bc2d33"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eeace4a7ca7013f0b9d55c57f9a64d3386f09e1b", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eeace4a7ca7013f0b9d55c57f9a64d3386f09e1b", "committedDate": "2020-08-05T19:34:48Z", "message": "Merge branch 'master' into tes-config-change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56903dd02a1521493c97e55ad841e2351653b84c", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/56903dd02a1521493c97e55ad841e2351653b84c", "committedDate": "2020-08-06T00:11:07Z", "message": "Handle unsupported method and uri and add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2f9451dd6e0d3d2212e30d077cf0bfd821a62d7", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f2f9451dd6e0d3d2212e30d077cf0bfd821a62d7", "committedDate": "2020-08-06T01:14:33Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caad7419eb06080c2021e8e4881186c9514e0812", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/caad7419eb06080c2021e8e4881186c9514e0812", "committedDate": "2020-08-06T03:22:59Z", "message": "Merge branch 'master' into tes-config-change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c259ac7b2e8842aea00f8dc6f465ab6f275ecab0", "committedDate": "2020-08-06T18:21:28Z", "message": "Merge branch 'master' into tes-config-change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODA1NzQy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-462805742", "createdAt": "2020-08-06T19:15:35Z", "commit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToxNTozNVrOG9A5FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToxNTozNVrOG9A5FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzMDkzMw==", "bodyText": "nit: make \"GET\" a constant", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r466630933", "createdAt": "2020-08-06T19:15:35Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/iot/evergreen/tes/CredentialRequestHandler.java", "diffHunk": "@@ -111,6 +113,17 @@ public void setIotCredentialsPath(String iotRoleAlias) {\n     @SuppressWarnings(\"PMD.AvoidCatchingThrowable\")\n     public void handle(final HttpExchange exchange) throws IOException {\n         try {\n+            if (!exchange.getRequestMethod().equals(\"GET\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODA2MTc1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-462806175", "createdAt": "2020-08-06T19:16:13Z", "commit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToxNjoxM1rOG9A6fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToxNjoxM1rOG9A6fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzMTI5Mg==", "bodyText": "I think this is warn, since customers should not do this at all. This might be indicative of a rogue process.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r466631292", "createdAt": "2020-08-06T19:16:13Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/iot/evergreen/tes/CredentialRequestHandler.java", "diffHunk": "@@ -111,6 +113,17 @@ public void setIotCredentialsPath(String iotRoleAlias) {\n     @SuppressWarnings(\"PMD.AvoidCatchingThrowable\")\n     public void handle(final HttpExchange exchange) throws IOException {\n         try {\n+            if (!exchange.getRequestMethod().equals(\"GET\")) {\n+                LOGGER.atInfo().log(\"Unsupported http method for {}. GET is supported.\", exchange.getRequestMethod());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODA3MjM5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-462807239", "createdAt": "2020-08-06T19:17:52Z", "commit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToxNzo1MlrOG9A9iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToxNzo1MlrOG9A9iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzMjA3Mw==", "bodyText": "lets add all verbs for sake of completeness", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r466632073", "createdAt": "2020-08-06T19:17:52Z", "author": {"login": "prateek-y"}, "path": "src/test/java/com/aws/iot/evergreen/tes/CredentialRequestHandlerTest.java", "diffHunk": "@@ -113,6 +118,43 @@ public void GIVEN_credential_handler_WHEN_called_handle_THEN_returns_creds() thr\n         mockStream.close();\n     }\n \n+    @Test\n+    @SuppressWarnings(\"PMD.CloseResource\")\n+    public void GIVEN_credential_handler_WHEN_unsupported_request_method_THEN_return_405() throws Exception {\n+        CredentialRequestHandler handler = new CredentialRequestHandler(\n+                mockCloudHelper,\n+                mockConnectionManager,\n+                mockAuthNHandler,\n+                mockAuthZHandler);\n+        handler.setIotCredentialsPath(ROLE_ALIAS);\n+        HttpExchange mockExchange = mock(HttpExchange.class);\n+        when(mockExchange.getRequestMethod()).thenReturn(\"POST\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODEwMjE4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-462810218", "createdAt": "2020-08-06T19:22:27Z", "commit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyMjoyN1rOG9BGYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyMjoyN1rOG9BGYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzNDMzNg==", "bodyText": "let's also handle the case, when customer sends a URI with prefixed, suffixed with another string. Something like \"/something\" +TES_URI, TES_URI + \"/something\".", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r466634336", "createdAt": "2020-08-06T19:22:27Z", "author": {"login": "prateek-y"}, "path": "src/test/java/com/aws/iot/evergreen/tes/CredentialRequestHandlerTest.java", "diffHunk": "@@ -113,6 +118,43 @@ public void GIVEN_credential_handler_WHEN_called_handle_THEN_returns_creds() thr\n         mockStream.close();\n     }\n \n+    @Test\n+    @SuppressWarnings(\"PMD.CloseResource\")\n+    public void GIVEN_credential_handler_WHEN_unsupported_request_method_THEN_return_405() throws Exception {\n+        CredentialRequestHandler handler = new CredentialRequestHandler(\n+                mockCloudHelper,\n+                mockConnectionManager,\n+                mockAuthNHandler,\n+                mockAuthZHandler);\n+        handler.setIotCredentialsPath(ROLE_ALIAS);\n+        HttpExchange mockExchange = mock(HttpExchange.class);\n+        when(mockExchange.getRequestMethod()).thenReturn(\"POST\");\n+        handler.handle(mockExchange);\n+\n+        int expectedStatus = 405;\n+        int expectedResponseLength = -1;\n+        verify(mockExchange, times(1)).sendResponseHeaders(expectedStatus, expectedResponseLength);\n+    }\n+\n+    @Test\n+    @SuppressWarnings(\"PMD.CloseResource\")\n+    public void GIVEN_credential_handler_WHEN_unsupported_uri_THEN_return_400() throws Exception {\n+        CredentialRequestHandler handler = new CredentialRequestHandler(\n+                mockCloudHelper,\n+                mockConnectionManager,\n+                mockAuthNHandler,\n+                mockAuthZHandler);\n+        handler.setIotCredentialsPath(ROLE_ALIAS);\n+        HttpExchange mockExchange = mock(HttpExchange.class);\n+        when(mockExchange.getRequestMethod()).thenReturn(REQUEST_METHOD);\n+        when(mockExchange.getRequestURI()).thenReturn(URI.create(\"badURI\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODEwNTk4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-462810598", "createdAt": "2020-08-06T19:23:02Z", "commit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyMzowM1rOG9BHcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyMzowM1rOG9BHcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzNDYwOQ==", "bodyText": "wondering if we can extract all this to a private method.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r466634609", "createdAt": "2020-08-06T19:23:03Z", "author": {"login": "prateek-y"}, "path": "src/test/java/com/aws/iot/evergreen/tes/CredentialRequestHandlerTest.java", "diffHunk": "@@ -449,6 +509,8 @@ public void GIVEN_connection_error_WHEN_called_handle_THEN_expire_immediately(Ex\n         when(mockExchange.getResponseBody()).thenReturn(mockStream);\n         Headers mockHeader = mock(Headers.class);\n         when(mockExchange.getRequestHeaders()).thenReturn(mockHeader);\n+        when(mockExchange.getRequestURI()).thenReturn(TES_URI);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "originalPosition": 155}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODExNzE5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-462811719", "createdAt": "2020-08-06T19:24:46Z", "commit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyNDo0NlrOG9BK2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOToyNDo0NlrOG9BK2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzNTQ4MQ==", "bodyText": "Lets send a random body with post as well.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r466635481", "createdAt": "2020-08-06T19:24:46Z", "author": {"login": "prateek-y"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/tes/TESTest.java", "diffHunk": "@@ -95,63 +107,72 @@ static void tearDown() {\n         try {\n             kernel.shutdown();\n         } finally {\n-            deviceProvisioningHelper.cleanThing(IotSdkClientFactory.getIotClient(AWS_REGION,\n-                    Collections.singleton(InvalidRequestException.class)), thingInfo);\n-            IotJobsUtils.cleanUpIotRoleForTest(IotSdkClientFactory.getIotClient(AWS_REGION), IamSdkClientFactory.getIamClient(),\n-                    roleName, roleAliasName, thingInfo.getCertificateArn());\n+            deviceProvisioningHelper.cleanThing(\n+                    IotSdkClientFactory.getIotClient(AWS_REGION, Collections.singleton(InvalidRequestException.class)),\n+                    thingInfo);\n+            IotJobsUtils.cleanUpIotRoleForTest(IotSdkClientFactory.getIotClient(AWS_REGION),\n+                    IamSdkClientFactory.getIamClient(), roleName, roleAliasName, thingInfo.getCertificateArn());\n+            IotJobsUtils.cleanUpIotRoleForTest(IotSdkClientFactory.getIotClient(AWS_REGION),\n+                    IamSdkClientFactory.getIamClient(), roleName, newRoleAliasName, thingInfo.getCertificateArn());\n         }\n     }\n \n     @Test\n     void GIVEN_iot_role_alias_WHEN_tes_is_queried_THEN_valid_credentials_are_returned() throws Exception {\n-        String urlString = kernel.getConfig().find(SETENV_CONFIG_NAMESPACE, TES_URI_ENV_VARIABLE_NAME).getOnce().toString();\n+        String urlString =\n+                kernel.getConfig().find(SETENV_CONFIG_NAMESPACE, TES_URI_ENV_VARIABLE_NAME).getOnce().toString();\n         assertNotNull(urlString);\n         URL url = new URL(urlString);\n         // Get the first token from the token map\n-        String token = kernel.getConfig().findTopics(SERVICES_NAMESPACE_TOPIC, AuthenticationHandler.AUTH_TOKEN_LOOKUP_KEY).iterator().next().getName();\n+        String token =\n+                kernel.getConfig().findTopics(SERVICES_NAMESPACE_TOPIC, AuthenticationHandler.AUTH_TOKEN_LOOKUP_KEY)\n+                        .iterator().next().getName();\n         assertNotNull(token);\n+        String response = getResponseString(url, token);\n+        assertThat(response, matchesPattern(AWS_CREDENTIALS_PATTERN));\n+\n+        // Should reject unsupported method\n         HttpURLConnection con = (HttpURLConnection) url.openConnection();\n+        con.setRequestMethod(\"POST\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259ac7b2e8842aea00f8dc6f465ab6f275ecab0"}, "originalPosition": 110}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f57d642051963ac023cda7729a27e7fe624edd5e", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f57d642051963ac023cda7729a27e7fe624edd5e", "committedDate": "2020-08-06T23:44:03Z", "message": "Merge branch 'master' into tes-config-change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be4cbeaf494d6fff7f3fd817f29b6dc1600d08cb", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/be4cbeaf494d6fff7f3fd817f29b6dc1600d08cb", "committedDate": "2020-08-06T23:44:44Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd8295ac20691505761d8dffb48f9718d56f0dea", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bd8295ac20691505761d8dffb48f9718d56f0dea", "committedDate": "2020-08-06T23:45:07Z", "message": "Merge remote-tracking branch 'origin/tes-config-change' into tes-config-change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTU3OTUw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-462957950", "createdAt": "2020-08-07T00:16:24Z", "commit": {"oid": "bd8295ac20691505761d8dffb48f9718d56f0dea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDoxNjoyNVrOG9ISgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDoxNjoyNVrOG9ISgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MjEyOQ==", "bodyText": "remove?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#discussion_r466752129", "createdAt": "2020-08-07T00:16:25Z", "author": {"login": "prateek-y"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/tes/TESTest.java", "diffHunk": "@@ -95,63 +108,85 @@ static void tearDown() {\n         try {\n             kernel.shutdown();\n         } finally {\n-            deviceProvisioningHelper.cleanThing(IotSdkClientFactory.getIotClient(AWS_REGION,\n-                    Collections.singleton(InvalidRequestException.class)), thingInfo);\n-            IotJobsUtils.cleanUpIotRoleForTest(IotSdkClientFactory.getIotClient(AWS_REGION), IamSdkClientFactory.getIamClient(),\n-                    roleName, roleAliasName, thingInfo.getCertificateArn());\n+            deviceProvisioningHelper.cleanThing(\n+                    IotSdkClientFactory.getIotClient(AWS_REGION, Collections.singleton(InvalidRequestException.class)),\n+                    thingInfo);\n+            IotJobsUtils.cleanUpIotRoleForTest(IotSdkClientFactory.getIotClient(AWS_REGION),\n+                    IamSdkClientFactory.getIamClient(), roleName, roleAliasName, thingInfo.getCertificateArn());\n+            IotJobsUtils.cleanUpIotRoleForTest(IotSdkClientFactory.getIotClient(AWS_REGION),\n+                    IamSdkClientFactory.getIamClient(), roleName, newRoleAliasName, thingInfo.getCertificateArn());\n         }\n     }\n \n     @Test\n-    void GIVEN_iot_role_alias_WHEN_tes_is_queried_THEN_valid_credentials_are_returned() throws Exception {\n-        String urlString = kernel.getConfig().find(SETENV_CONFIG_NAMESPACE, TES_URI_ENV_VARIABLE_NAME).getOnce().toString();\n+    void GIVEN_iot_role_alias_WHEN_tes_is_queried_THEN_valid_credentials_are_returned(ExtensionContext context)\n+            throws Exception {\n+        //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd8295ac20691505761d8dffb48f9718d56f0dea"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "909c59ede02ac6b51f7cb0c9c814da7b18592f7e", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/909c59ede02ac6b51f7cb0c9c814da7b18592f7e", "committedDate": "2020-08-07T00:20:47Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTY0OTg4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-462964988", "createdAt": "2020-08-07T00:40:41Z", "commit": {"oid": "909c59ede02ac6b51f7cb0c9c814da7b18592f7e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fa639fb5c02d8d7357ed3ffd08c084bb1e45167", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0fa639fb5c02d8d7357ed3ffd08c084bb1e45167", "committedDate": "2020-08-07T17:34:01Z", "message": "Merge branch 'master' into tes-config-change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a378232c4338467fc1ae37ac498342c6ecf7121c", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a378232c4338467fc1ae37ac498342c6ecf7121c", "committedDate": "2020-08-10T08:22:33Z", "message": "Merge branch 'master' into tes-config-change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MzgwODM5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/349#pullrequestreview-464380839", "createdAt": "2020-08-10T16:19:10Z", "commit": {"oid": "a378232c4338467fc1ae37ac498342c6ecf7121c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2062, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}