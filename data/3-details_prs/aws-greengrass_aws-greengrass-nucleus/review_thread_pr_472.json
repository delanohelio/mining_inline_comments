{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNzM1ODEy", "number": 472, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMjozMDo1MlrOEnSLhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjoyNzoyOVrOEnhiVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjI3NzgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMjozMDo1MlrOHXy1Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNDowMTozOFrOHX0MRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcxMjA5OA==", "bodyText": "Curious, where is deploymentGroupToRootPackages used?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/472#discussion_r494712098", "createdAt": "2020-09-25T02:30:52Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -243,6 +245,8 @@ private void finishCurrentDeployment() throws InterruptedException {\n                             pkgDetails.put(GROUP_TO_ROOT_COMPONENTS_VERSION_KEY, pkgConfig.getResolvedVersion());\n                             pkgDetails.put(GROUP_TO_ROOT_COMPONENTS_GROUP_CONFIG_ARN,\n                                     deploymentDocument.getDeploymentId());\n+                            pkgDetails.put(GROUP_TO_ROOT_COMPONENTS_GROUP_NAME,\n+                                    deploymentDocument.getGroupName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab6e64c2e4a37852a4ae2aadb07de70369b8de51"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDczNDQwNA==", "bodyText": "deploymentGroupToRootPackages is used to update the GROUP_TO_ROOT_COMPONENTS_TOPICS which contain all the root component to group mappings. This is updated during deployment.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/472#discussion_r494734404", "createdAt": "2020-09-25T04:01:38Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -243,6 +245,8 @@ private void finishCurrentDeployment() throws InterruptedException {\n                             pkgDetails.put(GROUP_TO_ROOT_COMPONENTS_VERSION_KEY, pkgConfig.getResolvedVersion());\n                             pkgDetails.put(GROUP_TO_ROOT_COMPONENTS_GROUP_CONFIG_ARN,\n                                     deploymentDocument.getDeploymentId());\n+                            pkgDetails.put(GROUP_TO_ROOT_COMPONENTS_GROUP_NAME,\n+                                    deploymentDocument.getGroupName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcxMjA5OA=="}, "originalCommit": {"oid": "ab6e64c2e4a37852a4ae2aadb07de70369b8de51"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjMxMzE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMjo1MDozOVrOHXzJpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMjo1MDozOVrOHXzJpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcxNzM0OA==", "bodyText": "NIT: can you add a comment of what's the structure under componentsToGroupsTopics ?\ncomponentsToGroupsTopics:\n  <componentName>:\n    <deploymentConfigArn>: <groupName>", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/472#discussion_r494717348", "createdAt": "2020-09-25T02:50:39Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -460,9 +464,12 @@ private void setComponentsToGroupsMapping(Topics groupsToRootComponents) {\n             Topic groupConfigTopic = componentTopics.lookup(GROUP_TO_ROOT_COMPONENTS_GROUP_CONFIG_ARN);\n             String groupConfig = Coerce.toString(groupConfigTopic);\n \n+            Topic groupNameTopic = componentTopics.lookup(GROUP_TO_ROOT_COMPONENTS_GROUP_NAME);\n+            String groupName = Coerce.toString(groupNameTopic);\n+\n             Map<String, Object> groupDeploymentIdSet = (Map<String, Object>) componentsToGroupsMappingCache\n                     .getOrDefault(componentTopics.getName(), new HashMap<>());\n-            groupDeploymentIdSet.putIfAbsent(groupConfig, true);\n+            groupDeploymentIdSet.putIfAbsent(groupConfig, groupName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab6e64c2e4a37852a4ae2aadb07de70369b8de51"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODc5MzgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjoyNzoyOVrOHYKhUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjoyNzoyOVrOHYKhUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEwMDI0MQ==", "bodyText": "use our own utils. Utils.isEmpty", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/472#discussion_r495100241", "createdAt": "2020-09-25T16:27:29Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DeploymentService.java", "diffHunk": "@@ -502,14 +517,19 @@ private void setComponentsToGroupsMapping(Topics groupsToRootComponents) {\n      * @param componentName The name of the component.\n      * @return The list of groups the component is a part of.\n      */\n-    public Set<String> getGroupConfigsForUserComponent(String componentName) {\n+    public Set<String> getGroupNamesForUserComponent(String componentName) {\n         Topics componentsToGroupsTopics = config.lookupTopics(COMPONENTS_TO_GROUPS_TOPICS);\n \n         Set<String> componentGroups = new HashSet<>();\n         if (componentsToGroupsTopics != null) {\n             Topics groupsTopics = componentsToGroupsTopics.lookupTopics(componentName);\n-            groupsTopics.children.values().stream().map(n -> (Topic) n).map(Topic::getName)\n-                    .forEach(componentGroups::add);\n+            groupsTopics.children.values().stream().map(n -> (Topic) n)\n+                    .forEach(topic -> {\n+                        String groupName = Coerce.toString(topic);\n+                        if (!StringUtils.isNullOrEmpty(groupName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ceba704f76dbe402b05f08c8de79c15e9be9159"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 562, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}