{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5Mzg5MTEz", "number": 451, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMjozOTo1MlrOElIxig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzowNzoxMVrOEmz_2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Mzc2NTIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMjozOTo1MlrOHUd5pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNToyMjoyNFrOHVWJGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyMzQ2Mg==", "bodyText": "Maybe also check artifactsDecompressedDirectory and delete it", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r491223462", "createdAt": "2020-09-18T22:39:52Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java", "diffHunk": "@@ -136,6 +137,23 @@ PackageRecipe getPackageRecipe(@NonNull PackageIdentifier pkgId) throws PackageL\n         return optionalPackage.get();\n     }\n \n+    /**\n+     * Delete the package recipe and all artifacts from disk.\n+     *\n+     * @param pkgId package identifier\n+     */\n+    void deletePackage(@NonNull PackageIdentifier pkgId) throws PackagingException {\n+        Path recipePath = resolveRecipePath(pkgId.getName(), pkgId.getVersion());\n+        Path artifactDirPath = resolveArtifactDirectoryPath(pkgId);\n+\n+        try {\n+            Files.deleteIfExists(recipePath);\n+            FileUtils.deleteDirectory(artifactDirPath.toFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f011ba05f809bcbe9264a488c186486f7f1f45c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE0NDkyMQ==", "bodyText": "good point!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492144921", "createdAt": "2020-09-21T15:22:24Z", "author": {"login": "tilo-chen"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java", "diffHunk": "@@ -136,6 +137,23 @@ PackageRecipe getPackageRecipe(@NonNull PackageIdentifier pkgId) throws PackageL\n         return optionalPackage.get();\n     }\n \n+    /**\n+     * Delete the package recipe and all artifacts from disk.\n+     *\n+     * @param pkgId package identifier\n+     */\n+    void deletePackage(@NonNull PackageIdentifier pkgId) throws PackagingException {\n+        Path recipePath = resolveRecipePath(pkgId.getName(), pkgId.getVersion());\n+        Path artifactDirPath = resolveArtifactDirectoryPath(pkgId);\n+\n+        try {\n+            Files.deleteIfExists(recipePath);\n+            FileUtils.deleteDirectory(artifactDirPath.toFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyMzQ2Mg=="}, "originalCommit": {"oid": "8f011ba05f809bcbe9264a488c186486f7f1f45c"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Mzc5NDI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMjo1Njo1OFrOHUeJ1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNTozMzowM1rOHVWzvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyNzYwNQ==", "bodyText": "hmm. how often do we recalculate the whole directory? I feel we can keep track of an increasing number until the next cleanup", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r491227605", "createdAt": "2020-09-18T22:56:58Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java", "diffHunk": "@@ -233,6 +251,36 @@ public Path resolveAndSetupArtifactsUnpackDirectory(@NonNull PackageIdentifier p\n         }\n     }\n \n+    /**\n+     * Get the total size of files in the package store by recursively walking the package store directory. Provides an\n+     * estimate of the package store's disk usage.\n+     *\n+     * @return total length of files in bytes\n+     * @throws UnexpectedPackagingException if unable to access the package store directory\n+     */\n+    public long getContentSize() throws UnexpectedPackagingException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f011ba05f809bcbe9264a488c186486f7f1f45c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE1NTgzNg==", "bodyText": "this iteration we'll recalculate before every download. one downside of tracking a number is that it may become inconsistent over time. join the discussion here! https://quip-amazon.com/AaoVA3qZbqhf/Evergreen-Package-Store-Size-Limit#CcI9CA9WoEz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492155836", "createdAt": "2020-09-21T15:33:03Z", "author": {"login": "tilo-chen"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageStore.java", "diffHunk": "@@ -233,6 +251,36 @@ public Path resolveAndSetupArtifactsUnpackDirectory(@NonNull PackageIdentifier p\n         }\n     }\n \n+    /**\n+     * Get the total size of files in the package store by recursively walking the package store directory. Provides an\n+     * estimate of the package store's disk usage.\n+     *\n+     * @return total length of files in bytes\n+     * @throws UnexpectedPackagingException if unable to access the package store directory\n+     */\n+    public long getContentSize() throws UnexpectedPackagingException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIyNzYwNQ=="}, "originalCommit": {"oid": "8f011ba05f809bcbe9264a488c186486f7f1f45c"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDQ5NTYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODowMDowOFrOHVcYlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDozMToxMlrOHVhV1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzE4OA==", "bodyText": "Maybe use consistent name DecompressedDirectory?\nAlso reuse this method in resolveAndSetupArtifactsUnpackDirectory below", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492247188", "createdAt": "2020-09-21T18:00:08Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -215,6 +235,17 @@ private Path resolveRecipePath(String packageName, Semver packageVersion) {\n         return recipeDirectory.resolve(String.format(RECIPE_FILE_NAME_FORMAT, packageName, packageVersion.getValue()));\n     }\n \n+    /**\n+     * Resolve the artifact unpack directory.\n+     *\n+     * @param packageIdentifier packageIdentifier\n+     * @return artifact unpack directory path\n+     */\n+    public Path resolveArtifactsUnpackDirectory(@NonNull ComponentIdentifier packageIdentifier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b03162dbd606a748e2a584cfc7ff07313fe35c27"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1ODAzOQ==", "bodyText": "I'll rename.\nThe existing resolveAndSetupArtifactsUnpackDirectory actually creates the directory if it doesn't exist, which kind of defeats the purpose if we want to check and remove it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492258039", "createdAt": "2020-09-21T18:19:47Z", "author": {"login": "tilo-chen"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -215,6 +235,17 @@ private Path resolveRecipePath(String packageName, Semver packageVersion) {\n         return recipeDirectory.resolve(String.format(RECIPE_FILE_NAME_FORMAT, packageName, packageVersion.getValue()));\n     }\n \n+    /**\n+     * Resolve the artifact unpack directory.\n+     *\n+     * @param packageIdentifier packageIdentifier\n+     * @return artifact unpack directory path\n+     */\n+    public Path resolveArtifactsUnpackDirectory(@NonNull ComponentIdentifier packageIdentifier) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzE4OA=="}, "originalCommit": {"oid": "b03162dbd606a748e2a584cfc7ff07313fe35c27"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMyODQwNQ==", "bodyText": "I meant to reuse resolveArtifactsUnpackDirectory in resolveAndSetupArtifactsUnpackDirectory", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492328405", "createdAt": "2020-09-21T20:31:12Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -215,6 +235,17 @@ private Path resolveRecipePath(String packageName, Semver packageVersion) {\n         return recipeDirectory.resolve(String.format(RECIPE_FILE_NAME_FORMAT, packageName, packageVersion.getValue()));\n     }\n \n+    /**\n+     * Resolve the artifact unpack directory.\n+     *\n+     * @param packageIdentifier packageIdentifier\n+     * @return artifact unpack directory path\n+     */\n+    public Path resolveArtifactsUnpackDirectory(@NonNull ComponentIdentifier packageIdentifier) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzE4OA=="}, "originalCommit": {"oid": "b03162dbd606a748e2a584cfc7ff07313fe35c27"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDQ5NTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODowMDoxMFrOHVcYqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMTo1OToxNlrOHVj2aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzIwOQ==", "bodyText": "I think it's possible artifactDirPath or artifactUnpackDirPath doesn't exist. Maybe don't throw in that case?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492247209", "createdAt": "2020-09-21T18:00:10Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -138,6 +139,25 @@ ComponentRecipe getPackageRecipe(@NonNull ComponentIdentifier pkgId) throws Pack\n         return optionalPackage.get();\n     }\n \n+    /**\n+     * Delete the package recipe and all artifacts from disk.\n+     *\n+     * @param pkgId package identifier\n+     */\n+    void deletePackage(@NonNull ComponentIdentifier pkgId) throws PackagingException {\n+        Path recipePath = resolveRecipePath(pkgId.getName(), pkgId.getVersion());\n+        Path artifactDirPath = resolveArtifactDirectoryPath(pkgId);\n+        Path artifactUnpackDirPath = resolveArtifactsUnpackDirectory(pkgId);\n+\n+        try {\n+            Files.deleteIfExists(recipePath);\n+            FileUtils.deleteDirectory(artifactDirPath.toFile());\n+            FileUtils.deleteDirectory(artifactUnpackDirPath.toFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b03162dbd606a748e2a584cfc7ff07313fe35c27"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1OTE0NQ==", "bodyText": "FileUtils.deleteDirectory will check existence first. Here we're only catching IOException. I should add a comment here. Thanks!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492259145", "createdAt": "2020-09-21T18:21:44Z", "author": {"login": "tilo-chen"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -138,6 +139,25 @@ ComponentRecipe getPackageRecipe(@NonNull ComponentIdentifier pkgId) throws Pack\n         return optionalPackage.get();\n     }\n \n+    /**\n+     * Delete the package recipe and all artifacts from disk.\n+     *\n+     * @param pkgId package identifier\n+     */\n+    void deletePackage(@NonNull ComponentIdentifier pkgId) throws PackagingException {\n+        Path recipePath = resolveRecipePath(pkgId.getName(), pkgId.getVersion());\n+        Path artifactDirPath = resolveArtifactDirectoryPath(pkgId);\n+        Path artifactUnpackDirPath = resolveArtifactsUnpackDirectory(pkgId);\n+\n+        try {\n+            Files.deleteIfExists(recipePath);\n+            FileUtils.deleteDirectory(artifactDirPath.toFile());\n+            FileUtils.deleteDirectory(artifactUnpackDirPath.toFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzIwOQ=="}, "originalCommit": {"oid": "b03162dbd606a748e2a584cfc7ff07313fe35c27"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMyOTAzNw==", "bodyText": "Does that mean we should also handle IllegalArgumentException? http://commons.apache.org/proper/commons-io/javadocs/api-2.5/org/apache/commons/io/FileUtils.html#deleteDirectory(java.io.File)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492329037", "createdAt": "2020-09-21T20:32:20Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -138,6 +139,25 @@ ComponentRecipe getPackageRecipe(@NonNull ComponentIdentifier pkgId) throws Pack\n         return optionalPackage.get();\n     }\n \n+    /**\n+     * Delete the package recipe and all artifacts from disk.\n+     *\n+     * @param pkgId package identifier\n+     */\n+    void deletePackage(@NonNull ComponentIdentifier pkgId) throws PackagingException {\n+        Path recipePath = resolveRecipePath(pkgId.getName(), pkgId.getVersion());\n+        Path artifactDirPath = resolveArtifactDirectoryPath(pkgId);\n+        Path artifactUnpackDirPath = resolveArtifactsUnpackDirectory(pkgId);\n+\n+        try {\n+            Files.deleteIfExists(recipePath);\n+            FileUtils.deleteDirectory(artifactDirPath.toFile());\n+            FileUtils.deleteDirectory(artifactUnpackDirPath.toFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzIwOQ=="}, "originalCommit": {"oid": "b03162dbd606a748e2a584cfc7ff07313fe35c27"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2OTUxMw==", "bodyText": "Oh the comment says it throws IllegalArgumentException but the code actually doesn't! We can file a bug report...", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492369513", "createdAt": "2020-09-21T21:59:16Z", "author": {"login": "tilo-chen"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -138,6 +139,25 @@ ComponentRecipe getPackageRecipe(@NonNull ComponentIdentifier pkgId) throws Pack\n         return optionalPackage.get();\n     }\n \n+    /**\n+     * Delete the package recipe and all artifacts from disk.\n+     *\n+     * @param pkgId package identifier\n+     */\n+    void deletePackage(@NonNull ComponentIdentifier pkgId) throws PackagingException {\n+        Path recipePath = resolveRecipePath(pkgId.getName(), pkgId.getVersion());\n+        Path artifactDirPath = resolveArtifactDirectoryPath(pkgId);\n+        Path artifactUnpackDirPath = resolveArtifactsUnpackDirectory(pkgId);\n+\n+        try {\n+            Files.deleteIfExists(recipePath);\n+            FileUtils.deleteDirectory(artifactDirPath.toFile());\n+            FileUtils.deleteDirectory(artifactUnpackDirPath.toFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0NzIwOQ=="}, "originalCommit": {"oid": "b03162dbd606a748e2a584cfc7ff07313fe35c27"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTEyMzc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo0OToyMlrOHWH4fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo0OToyMlrOHWH4fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk1OTg3MA==", "bodyText": "rename package to component everywhere", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r492959870", "createdAt": "2020-09-22T18:49:22Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentStore.java", "diffHunk": "@@ -138,6 +139,25 @@ ComponentRecipe getPackageRecipe(@NonNull ComponentIdentifier pkgId) throws Pack\n         return optionalPackage.get();\n     }\n \n+    /**\n+     * Delete the package recipe and all artifacts from disk.\n+     *\n+     * @param pkgId package identifier\n+     */\n+    void deletePackage(@NonNull ComponentIdentifier pkgId) throws PackagingException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fba2a61de4cebbce3310a3fadcc794353702f81"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MTMzMjcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzowNzoxMVrOHXD6fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzoxMzoxMVrOHXELUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0MzQyMA==", "bodyText": "Didn't you verify this already?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r493943420", "createdAt": "2020-09-23T23:07:11Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -103,6 +105,38 @@ public File downloadToPath(ComponentIdentifier componentIdentifier, ComponentArt\n         return null;\n     }\n \n+    /**\n+     * Get the size of artifact from greengrass repo by sending HTTP HEAD request.\n+     *\n+     * @param packageIdentifier package info\n+     * @param artifact artifact info\n+     * @return ContentLength in bytes\n+     */\n+    @Override\n+    public long getSize(ComponentIdentifier packageIdentifier, ComponentArtifact artifact)\n+            throws IOException, PackageDownloadException {\n+        logger.atInfo().setEventType(\"get-artifact-size-from-greengrass-repo\")\n+                .addKeyValue(\"packageIdentifier\", packageIdentifier)\n+                .addKeyValue(\"artifactUri\", artifact.getArtifactUri().toString()).log();\n+\n+        String preSignedUrl =\n+                getArtifactDownloadURL(packageIdentifier, artifact.getArtifactUri().getSchemeSpecificPart());\n+        URL url = new URL(preSignedUrl);\n+        HttpURLConnection conn = connect(url);\n+        conn.setRequestMethod(\"HEAD\");\n+        Map<String, List<String>> headers = conn.getHeaderFields();\n+        // TODO verify this works by trying on a real package", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "540f1c082dc13ba280f3aea7451272374f972394"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0NzcyOQ==", "bodyText": "Not yet. Will address this in next PR", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/451#discussion_r493947729", "createdAt": "2020-09-23T23:13:11Z", "author": {"login": "tilo-chen"}, "path": "src/main/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -103,6 +105,38 @@ public File downloadToPath(ComponentIdentifier componentIdentifier, ComponentArt\n         return null;\n     }\n \n+    /**\n+     * Get the size of artifact from greengrass repo by sending HTTP HEAD request.\n+     *\n+     * @param packageIdentifier package info\n+     * @param artifact artifact info\n+     * @return ContentLength in bytes\n+     */\n+    @Override\n+    public long getSize(ComponentIdentifier packageIdentifier, ComponentArtifact artifact)\n+            throws IOException, PackageDownloadException {\n+        logger.atInfo().setEventType(\"get-artifact-size-from-greengrass-repo\")\n+                .addKeyValue(\"packageIdentifier\", packageIdentifier)\n+                .addKeyValue(\"artifactUri\", artifact.getArtifactUri().toString()).log();\n+\n+        String preSignedUrl =\n+                getArtifactDownloadURL(packageIdentifier, artifact.getArtifactUri().getSchemeSpecificPart());\n+        URL url = new URL(preSignedUrl);\n+        HttpURLConnection conn = connect(url);\n+        conn.setRequestMethod(\"HEAD\");\n+        Map<String, List<String>> headers = conn.getHeaderFields();\n+        // TODO verify this works by trying on a real package", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0MzQyMA=="}, "originalCommit": {"oid": "540f1c082dc13ba280f3aea7451272374f972394"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 524, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}