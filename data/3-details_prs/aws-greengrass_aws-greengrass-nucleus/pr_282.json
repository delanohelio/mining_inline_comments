{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTYzODMw", "number": 282, "title": "Add replaceMap in Topics", "bodyText": "ReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\nIssue #, if available:\nDescription of changes:\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nIf a node is switched between a container/leaf node, currently it's removed and re-created. Future changes are needed.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-06-17T02:27:50Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282", "merged": true, "mergeCommit": {"oid": "135b6ef6e1c0533e160d01ae82270b6c7c21d677"}, "closed": true, "closedAt": "2020-07-17T18:58:10Z", "author": {"login": "ShirleyZheng92"}, "timelineItems": {"totalCount": 45, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsAfW2AFqTQzMjAxNzE4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc15ClmgFqTQ1MDkwODI2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDE3MTgy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-432017182", "createdAt": "2020-06-17T02:33:00Z", "commit": {"oid": "85265c32d5894bacd6ca5ded0949c5e4277a8c46"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjozMzowMFrOGkzhxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjozMzowMFrOGkzhxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NjE1MA==", "bodyText": "why are you changing the mod time, but not the value? The mod time should reflect the value's time, right?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r441246150", "createdAt": "2020-06-17T02:33:00Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topic.java", "diffHunk": "@@ -105,7 +105,14 @@ public Topic withNewerValue(long proposedModtime, final Object proposed) {\n     public synchronized Topic withNewerValue(long proposedModtime, final Object proposed, boolean forceTimestamp) {\n         final Object currentValue = value;\n         final long currentModtime = modtime;\n-        if (Objects.equals(proposed, currentValue) || !forceTimestamp && (proposedModtime < currentModtime)) {\n+        if (Objects.equals(proposed, currentValue)) {\n+            if (forceTimestamp || currentModtime < proposedModtime) {\n+                modtime = proposedModtime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85265c32d5894bacd6ca5ded0949c5e4277a8c46"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDE4MDAy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-432018002", "createdAt": "2020-06-17T02:35:55Z", "commit": {"oid": "85265c32d5894bacd6ca5ded0949c5e4277a8c46"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjozNTo1NVrOGkzkkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjozNTo1NVrOGkzkkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0Njg2Nw==", "bodyText": "I don't really think we should call remove here because that will remove the watchers and send updates that it was removed. But what you really want is to just replace it atomically, not delete and then add.\nYou might want to create a Topics, copy the watchers over, then directly remove it from the children so that it never fires the WhatHappened.Removed, because that isn't really accurate.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r441246867", "createdAt": "2020-06-17T02:35:55Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -205,6 +207,38 @@ public void mergeMap(long lastModified, Map<Object, Object> map) {\n         });\n     }\n \n+    /**\n+     * Replace the given map to this Topics tree.\n+     *\n+     * @param lastModified last modified time\n+     * @param map          map to merge in\n+     */\n+    public void replaceMap(long lastModified, Map<Object, Object> map) {\n+        Set<String> childToRemove = new HashSet<>(children.keySet());\n+\n+        map.forEach((okey, value) -> {\n+            String key = okey.toString();\n+            childToRemove.remove(key);\n+            Node existingChild = children.get(key);\n+            if (value instanceof Map) {\n+                // if a leaf node is replaced with container node\n+                if (existingChild != null && !(existingChild instanceof Topics)) {\n+                    remove(existingChild);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85265c32d5894bacd6ca5ded0949c5e4277a8c46"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cebfe5f8807414685f92e294fe6ba40c49704aab", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cebfe5f8807414685f92e294fe6ba40c49704aab", "committedDate": "2020-06-18T00:10:07Z", "message": "Merge branch 'master' into replaceConfig"}, "afterCommit": {"oid": "67b3be162d1732cf54c183ce5d3f6aec3db12755", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/67b3be162d1732cf54c183ce5d3f6aec3db12755", "committedDate": "2020-07-01T02:59:48Z", "message": "Add NodeTypeChanged event type in WhatHappened enum\n\nThe event type shows a node is changed and switched between a container node and a\nleaf node.\n\nChanged function interface of Subscriber and removed ChildChanged\ninterface. Subscriber now applies to both Topic and Topics listener."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjIyNDk2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-441222496", "createdAt": "2020-07-01T21:57:17Z", "commit": {"oid": "67b3be162d1732cf54c183ce5d3f6aec3db12755"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTo1NzoxN1rOGr2p_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTo1NzoxN1rOGr2p_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYzNzQzNw==", "bodyText": "why do we need these?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r448637437", "createdAt": "2020-07-01T21:57:17Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Node.java", "diffHunk": "@@ -28,6 +28,14 @@ protected Node(Context c, String n, Topics p) {\n         fnc = calcFnc();\n     }\n \n+    public synchronized Topics getParent() {\n+        return parent;\n+    }\n+\n+    protected synchronized void setParent(Topics p) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b3be162d1732cf54c183ce5d3f6aec3db12755"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjIzNTAz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-441223503", "createdAt": "2020-07-01T21:59:21Z", "commit": {"oid": "67b3be162d1732cf54c183ce5d3f6aec3db12755"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTo1OToyMVrOGr2tEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTo1OToyMVrOGr2tEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYzODIyNw==", "bodyText": "this shouldn't really be necessary, right? Can we just use lookupTopic which will create the node properly without this manual work?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r448638227", "createdAt": "2020-07-01T21:59:21Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -205,6 +207,70 @@ public void mergeMap(long lastModified, Map<Object, Object> map) {\n         });\n     }\n \n+    /**\n+     * Replace the given map to this Topics tree.\n+     *\n+     * @param lastModified last modified time\n+     * @param map          map to merge in\n+     */\n+    public void replaceMap(long lastModified, Map<Object, Object> map) {\n+        Set<String> childToRemove = new HashSet<>(children.keySet());\n+\n+        map.forEach((okey, value) -> {\n+            String key = okey.toString();\n+            childToRemove.remove(key);\n+            Node existingChild = children.get(key);\n+            if (value instanceof Map) {\n+                // if a leaf node is replaced with container node\n+                if (existingChild instanceof Topic) {\n+                    Topics newNode = new Topics(context, key, null);\n+                    newNode.replaceMap(lastModified, (Map) value);\n+\n+                    context.runOnPublishQueue(() -> {\n+                        children.put(key, newNode);\n+                        newNode.setParent(this);\n+                        existingChild.setParent(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b3be162d1732cf54c183ce5d3f6aec3db12755"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjIzODU3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-441223857", "createdAt": "2020-07-01T22:00:10Z", "commit": {"oid": "67b3be162d1732cf54c183ce5d3f6aec3db12755"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMjowMDoxMFrOGr2uJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMjowMDoxMFrOGr2uJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYzODUwMw==", "bodyText": "this shouldn't be needed since the existing child is going away, right?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r448638503", "createdAt": "2020-07-01T22:00:10Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -205,6 +207,70 @@ public void mergeMap(long lastModified, Map<Object, Object> map) {\n         });\n     }\n \n+    /**\n+     * Replace the given map to this Topics tree.\n+     *\n+     * @param lastModified last modified time\n+     * @param map          map to merge in\n+     */\n+    public void replaceMap(long lastModified, Map<Object, Object> map) {\n+        Set<String> childToRemove = new HashSet<>(children.keySet());\n+\n+        map.forEach((okey, value) -> {\n+            String key = okey.toString();\n+            childToRemove.remove(key);\n+            Node existingChild = children.get(key);\n+            if (value instanceof Map) {\n+                // if a leaf node is replaced with container node\n+                if (existingChild instanceof Topic) {\n+                    Topics newNode = new Topics(context, key, null);\n+                    newNode.replaceMap(lastModified, (Map) value);\n+\n+                    context.runOnPublishQueue(() -> {\n+                        children.put(key, newNode);\n+                        newNode.setParent(this);\n+                        existingChild.setParent(null);\n+                        // set watcher here so that the watcher doesn't receive notification from\n+                        // the above replaceMap() invocation\n+                        newNode.watchers.addAll(existingChild.watchers);\n+                        existingChild.watchers.clear();\n+                        newNode.fire(WhatHappened.nodeTypeChanged);\n+                    });\n+                } else {\n+                    createInteriorChild(key).replaceMap(lastModified, (Map) value);\n+                }\n+            } else {\n+                // if a container node is replaced with leaf node\n+                if (existingChild instanceof Topics) {\n+                    Topic newNode = new Topic(context, key, null);\n+                    newNode.withNewerValue(lastModified, value);\n+\n+                    context.runOnPublishQueue(() -> {\n+                        children.put(key, newNode);\n+                        newNode.setParent(this);\n+                        existingChild.setParent(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b3be162d1732cf54c183ce5d3f6aec3db12755"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67b3be162d1732cf54c183ce5d3f6aec3db12755", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/67b3be162d1732cf54c183ce5d3f6aec3db12755", "committedDate": "2020-07-01T02:59:48Z", "message": "Add NodeTypeChanged event type in WhatHappened enum\n\nThe event type shows a node is changed and switched between a container node and a\nleaf node.\n\nChanged function interface of Subscriber and removed ChildChanged\ninterface. Subscriber now applies to both Topic and Topics listener."}, "afterCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a", "committedDate": "2020-07-02T06:14:21Z", "message": "Add NodeTypeChanged event type in WhatHappened enum\n\nThe event type shows a node is changed and switched between a container node and a\nleaf node.\n\nChanged function interface of Subscriber and removed ChildChanged\ninterface. Subscriber now applies to both Topic and Topics listener."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODg3OTI2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-441887926", "createdAt": "2020-07-02T17:19:34Z", "commit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzoxOTozNFrOGsWw7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo0Mzo1NFrOGsXhSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2MzUwMg==", "bodyText": "does this TODO still apply?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449163502", "createdAt": "2020-07-02T17:19:34Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationWriter.java", "diffHunk": "@@ -124,6 +124,6 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n     }\n \n     public void writeAll() { //TODO double check this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2NDcyMQ==", "bodyText": "not sure do we want to be more specific to differentiate btw \"changed to Topics \" vs \"changed to Topic\"?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449164721", "createdAt": "2020-07-02T17:22:03Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/config/WhatHappened.java", "diffHunk": "@@ -4,5 +4,5 @@\n package com.aws.iot.evergreen.config;\n \n public enum WhatHappened {\n-    changed, initialized, childChanged, removed, childRemoved\n+    changed, initialized, childChanged, removed, childRemoved, nodeTypeChanged", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2NTMxNg==", "bodyText": "Like the naming here.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449165316", "createdAt": "2020-07-02T17:23:14Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/config/ConfigurationTest.java", "diffHunk": "@@ -302,4 +304,203 @@ public void GIVEN_config_to_merge_WHEN_read_with_current_timestamp_THEN_merge()\n         assertEquals(\"echo main service installed\",\n                 config.find(SERVICES_NAMESPACE_TOPIC, \"main\", \"lifecycle\", \"install\").getOnce());\n     }\n+\n+    @Test\n+    public void GIVEN_topics_WHEN_call_replace_map_THEN_content_replaced_and_subscribers_invoked() throws Exception {\n+        // GIVEN\n+        // set up initial config and listeners\n+        String initConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeToBeRemoved:\\n\"\n+                + \"    key1: val1\\n\"\n+                + \"  leafToBeUpdated: val2\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeRemoved: dummy\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2NjQ5Ng==", "bodyText": "should we consider providing an override method without taking timestamp, which sets current timestamp? This magical number has always been confusing...", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449166496", "createdAt": "2020-07-02T17:25:30Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/config/ConfigurationTest.java", "diffHunk": "@@ -302,4 +304,203 @@ public void GIVEN_config_to_merge_WHEN_read_with_current_timestamp_THEN_merge()\n         assertEquals(\"echo main service installed\",\n                 config.find(SERVICES_NAMESPACE_TOPIC, \"main\", \"lifecycle\", \"install\").getOnce());\n     }\n+\n+    @Test\n+    public void GIVEN_topics_WHEN_call_replace_map_THEN_content_replaced_and_subscribers_invoked() throws Exception {\n+        // GIVEN\n+        // set up initial config and listeners\n+        String initConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeToBeRemoved:\\n\"\n+                + \"    key1: val1\\n\"\n+                + \"  leafToBeUpdated: val2\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeRemoved: dummy\";\n+\n+        String updateConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeAdded: val1\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeUpdated: updatedValue\";\n+\n+        Map<Object, Object> initConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(initConfig.getBytes())) {\n+            initConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.mergeMap(1, initConfigMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2NzYyNA==", "bodyText": "nit - I guess you didn't use AtomicBoolean because you want to ensure the count is exactly 1 - If that's the case could you rename the containerNodeRemoved to be containerNodeRemovedCount?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449167624", "createdAt": "2020-07-02T17:27:41Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/config/ConfigurationTest.java", "diffHunk": "@@ -302,4 +304,203 @@ public void GIVEN_config_to_merge_WHEN_read_with_current_timestamp_THEN_merge()\n         assertEquals(\"echo main service installed\",\n                 config.find(SERVICES_NAMESPACE_TOPIC, \"main\", \"lifecycle\", \"install\").getOnce());\n     }\n+\n+    @Test\n+    public void GIVEN_topics_WHEN_call_replace_map_THEN_content_replaced_and_subscribers_invoked() throws Exception {\n+        // GIVEN\n+        // set up initial config and listeners\n+        String initConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeToBeRemoved:\\n\"\n+                + \"    key1: val1\\n\"\n+                + \"  leafToBeUpdated: val2\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeRemoved: dummy\";\n+\n+        String updateConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeAdded: val1\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeUpdated: updatedValue\";\n+\n+        Map<Object, Object> initConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(initConfig.getBytes())) {\n+            initConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.mergeMap(1, initConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        AtomicInteger containerNodeRemoved = new AtomicInteger(0);\n+        config.findTopics(\"foo\", \"nodeToBeRemoved\").subscribe((what, c) -> {\n+            if (WhatHappened.removed == what) {\n+                containerNodeRemoved.incrementAndGet();\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2ODY0MQ==", "bodyText": "Very clear and easy to follow!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449168641", "createdAt": "2020-07-02T17:29:46Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/config/ConfigurationTest.java", "diffHunk": "@@ -302,4 +304,203 @@ public void GIVEN_config_to_merge_WHEN_read_with_current_timestamp_THEN_merge()\n         assertEquals(\"echo main service installed\",\n                 config.find(SERVICES_NAMESPACE_TOPIC, \"main\", \"lifecycle\", \"install\").getOnce());\n     }\n+\n+    @Test\n+    public void GIVEN_topics_WHEN_call_replace_map_THEN_content_replaced_and_subscribers_invoked() throws Exception {\n+        // GIVEN\n+        // set up initial config and listeners\n+        String initConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeToBeRemoved:\\n\"\n+                + \"    key1: val1\\n\"\n+                + \"  leafToBeUpdated: val2\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeRemoved: dummy\";\n+\n+        String updateConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeAdded: val1\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeUpdated: updatedValue\";\n+\n+        Map<Object, Object> initConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(initConfig.getBytes())) {\n+            initConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.mergeMap(1, initConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        AtomicInteger containerNodeRemoved = new AtomicInteger(0);\n+        config.findTopics(\"foo\", \"nodeToBeRemoved\").subscribe((what, c) -> {\n+            if (WhatHappened.removed == what) {\n+                containerNodeRemoved.incrementAndGet();\n+            }\n+        });\n+\n+        AtomicInteger leafNodeRemoved = new AtomicInteger(0);\n+        config.find(\"foo\", \"leafToBeRemoved\").subscribe((what, c) -> {\n+            if (WhatHappened.removed == what) {\n+                leafNodeRemoved.incrementAndGet();\n+            }\n+        });\n+\n+        AtomicBoolean nodeUnchangedNotified = new AtomicBoolean(false);\n+        config.find(\"foo\", \"nodeUnchanged\").subscribe((what, c) -> {\n+            if (WhatHappened.initialized != what) {\n+                nodeUnchangedNotified.set(true);\n+            }\n+        });\n+\n+        AtomicInteger leafNodeUpdated = new AtomicInteger(0);\n+        config.find(\"foo\", \"leafToBeUpdated\").subscribe((what, node) -> {\n+            Topic t = (Topic) node;\n+            if (WhatHappened.changed == what && t.getOnce().equals(\"updatedValue\")) {\n+                leafNodeUpdated.incrementAndGet();\n+            }\n+        });\n+\n+        // WHEN\n+        Map<Object, Object> updateConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(updateConfig.getBytes())) {\n+            updateConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.root.replaceMap(2, updateConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        // THEN\n+        assertEquals(updateConfigMap, config.toPOJO());\n+\n+        assertEquals(1, leafNodeRemoved.get());\n+        assertEquals(1, containerNodeRemoved.get());\n+        assertEquals(1, leafNodeUpdated.get());\n+        assertFalse(nodeUnchangedNotified.get());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2OTA4MQ==", "bodyText": "was this for debugging?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449169081", "createdAt": "2020-07-02T17:30:40Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/config/ConfigurationTest.java", "diffHunk": "@@ -302,4 +304,203 @@ public void GIVEN_config_to_merge_WHEN_read_with_current_timestamp_THEN_merge()\n         assertEquals(\"echo main service installed\",\n                 config.find(SERVICES_NAMESPACE_TOPIC, \"main\", \"lifecycle\", \"install\").getOnce());\n     }\n+\n+    @Test\n+    public void GIVEN_topics_WHEN_call_replace_map_THEN_content_replaced_and_subscribers_invoked() throws Exception {\n+        // GIVEN\n+        // set up initial config and listeners\n+        String initConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeToBeRemoved:\\n\"\n+                + \"    key1: val1\\n\"\n+                + \"  leafToBeUpdated: val2\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeRemoved: dummy\";\n+\n+        String updateConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeAdded: val1\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeUpdated: updatedValue\";\n+\n+        Map<Object, Object> initConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(initConfig.getBytes())) {\n+            initConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.mergeMap(1, initConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        AtomicInteger containerNodeRemoved = new AtomicInteger(0);\n+        config.findTopics(\"foo\", \"nodeToBeRemoved\").subscribe((what, c) -> {\n+            if (WhatHappened.removed == what) {\n+                containerNodeRemoved.incrementAndGet();\n+            }\n+        });\n+\n+        AtomicInteger leafNodeRemoved = new AtomicInteger(0);\n+        config.find(\"foo\", \"leafToBeRemoved\").subscribe((what, c) -> {\n+            if (WhatHappened.removed == what) {\n+                leafNodeRemoved.incrementAndGet();\n+            }\n+        });\n+\n+        AtomicBoolean nodeUnchangedNotified = new AtomicBoolean(false);\n+        config.find(\"foo\", \"nodeUnchanged\").subscribe((what, c) -> {\n+            if (WhatHappened.initialized != what) {\n+                nodeUnchangedNotified.set(true);\n+            }\n+        });\n+\n+        AtomicInteger leafNodeUpdated = new AtomicInteger(0);\n+        config.find(\"foo\", \"leafToBeUpdated\").subscribe((what, node) -> {\n+            Topic t = (Topic) node;\n+            if (WhatHappened.changed == what && t.getOnce().equals(\"updatedValue\")) {\n+                leafNodeUpdated.incrementAndGet();\n+            }\n+        });\n+\n+        // WHEN\n+        Map<Object, Object> updateConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(updateConfig.getBytes())) {\n+            updateConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.root.replaceMap(2, updateConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        // THEN\n+        assertEquals(updateConfigMap, config.toPOJO());\n+\n+        assertEquals(1, leafNodeRemoved.get());\n+        assertEquals(1, containerNodeRemoved.get());\n+        assertEquals(1, leafNodeUpdated.get());\n+        assertFalse(nodeUnchangedNotified.get());\n+    }\n+\n+    @Test\n+    public void GIVEN_config_with_subscribers_WHEN_topic_type_changed_THEN_subscribers_notified() throws Exception {\n+        // GIVEN\n+        // set up initial config and listeners\n+        String initConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  node1:\\n\"\n+                + \"    key1: val1\\n\"\n+                + \"  node2: val2\\n\";\n+\n+        String updateConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  node1: val1\\n\"\n+                + \"  node2:\\n\"\n+                + \"    key2: val2\\n\";\n+\n+        Map<Object, Object> initConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(initConfig.getBytes())) {\n+            initConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.mergeMap(1, initConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        Pair<CompletableFuture<Void>, Subscriber> node1Changed = createSingleAssertSubscriber((what, node) -> {\n+                    assertEquals(WhatHappened.nodeTypeChanged, what, node.getFullName() + node.toPOJO());\n+                    assertEquals(\"val1\", ((Topic) node).getOnce());\n+                });\n+        config.findTopics(\"foo\", \"node1\").subscribe(node1Changed.getRight());\n+\n+        Pair<CompletableFuture<Void>, Subscriber> nodeRemoved = createSingleAssertSubscriber((what, node) -> {\n+                    assertEquals(WhatHappened.removed, what, node.getFullName());\n+                });\n+        config.find(\"foo\", \"node1\", \"key1\").subscribe(nodeRemoved.getRight());\n+\n+        Pair<CompletableFuture<Void>, Subscriber> node2Changed = createSingleAssertSubscriber((what, node) -> {\n+                    assertEquals(WhatHappened.nodeTypeChanged, what, node.getFullName());\n+                    assertEquals(\"val2\", ((Topics) node).find(\"key2\").getOnce());\n+                });\n+        config.find(\"foo\", \"node2\").subscribe(node2Changed.getRight());\n+\n+        // WHEN\n+        Map<Object, Object> updateConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(updateConfig.getBytes())) {\n+            updateConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.root.replaceMap(2, updateConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        // THEN\n+        node1Changed.getLeft().get(100, TimeUnit.MILLISECONDS);\n+        node2Changed.getLeft().get(100, TimeUnit.MILLISECONDS);\n+        nodeRemoved.getLeft().get(100, TimeUnit.MILLISECONDS);\n+\n+        assertEquals(updateConfigMap, config.toPOJO());\n+    }\n+\n+    @Test\n+    public void GIVEN_config_with_subscribers_WHEN_topic_type_changed_THEN_parent_node_notified() throws Exception {\n+        // GIVEN\n+        // set up initial config and listeners\n+        String initConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  node1:\\n\"\n+                + \"    key1: val1\\n\"\n+                + \"  node2: val2\\n\";\n+\n+        String updateConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  node1: val1\\n\"\n+                + \"  node2:\\n\"\n+                + \"    key2: val2\\n\";\n+\n+        Map<Object, Object> initConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(initConfig.getBytes())) {\n+            initConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.mergeMap(1, initConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        AtomicInteger node1Changed = new AtomicInteger();\n+        AtomicInteger node2Changed = new AtomicInteger();\n+        config.findTopics(\"foo\").subscribe((what, node) -> {\n+            if (WhatHappened.childChanged == what) {\n+                System.err.println(\"child changed\" + node.getFullName() + \" \" + node.toPOJO());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2OTc4NQ==", "bodyText": "will we receive \"nodeTypeChanged\"?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449169785", "createdAt": "2020-07-02T17:31:58Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/config/ConfigurationTest.java", "diffHunk": "@@ -302,4 +304,203 @@ public void GIVEN_config_to_merge_WHEN_read_with_current_timestamp_THEN_merge()\n         assertEquals(\"echo main service installed\",\n                 config.find(SERVICES_NAMESPACE_TOPIC, \"main\", \"lifecycle\", \"install\").getOnce());\n     }\n+\n+    @Test\n+    public void GIVEN_topics_WHEN_call_replace_map_THEN_content_replaced_and_subscribers_invoked() throws Exception {\n+        // GIVEN\n+        // set up initial config and listeners\n+        String initConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeToBeRemoved:\\n\"\n+                + \"    key1: val1\\n\"\n+                + \"  leafToBeUpdated: val2\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeRemoved: dummy\";\n+\n+        String updateConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  nodeAdded: val1\\n\"\n+                + \"  nodeUnchanged: unchanged\\n\"\n+                + \"  leafToBeUpdated: updatedValue\";\n+\n+        Map<Object, Object> initConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(initConfig.getBytes())) {\n+            initConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.mergeMap(1, initConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        AtomicInteger containerNodeRemoved = new AtomicInteger(0);\n+        config.findTopics(\"foo\", \"nodeToBeRemoved\").subscribe((what, c) -> {\n+            if (WhatHappened.removed == what) {\n+                containerNodeRemoved.incrementAndGet();\n+            }\n+        });\n+\n+        AtomicInteger leafNodeRemoved = new AtomicInteger(0);\n+        config.find(\"foo\", \"leafToBeRemoved\").subscribe((what, c) -> {\n+            if (WhatHappened.removed == what) {\n+                leafNodeRemoved.incrementAndGet();\n+            }\n+        });\n+\n+        AtomicBoolean nodeUnchangedNotified = new AtomicBoolean(false);\n+        config.find(\"foo\", \"nodeUnchanged\").subscribe((what, c) -> {\n+            if (WhatHappened.initialized != what) {\n+                nodeUnchangedNotified.set(true);\n+            }\n+        });\n+\n+        AtomicInteger leafNodeUpdated = new AtomicInteger(0);\n+        config.find(\"foo\", \"leafToBeUpdated\").subscribe((what, node) -> {\n+            Topic t = (Topic) node;\n+            if (WhatHappened.changed == what && t.getOnce().equals(\"updatedValue\")) {\n+                leafNodeUpdated.incrementAndGet();\n+            }\n+        });\n+\n+        // WHEN\n+        Map<Object, Object> updateConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(updateConfig.getBytes())) {\n+            updateConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.root.replaceMap(2, updateConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        // THEN\n+        assertEquals(updateConfigMap, config.toPOJO());\n+\n+        assertEquals(1, leafNodeRemoved.get());\n+        assertEquals(1, containerNodeRemoved.get());\n+        assertEquals(1, leafNodeUpdated.get());\n+        assertFalse(nodeUnchangedNotified.get());\n+    }\n+\n+    @Test\n+    public void GIVEN_config_with_subscribers_WHEN_topic_type_changed_THEN_subscribers_notified() throws Exception {\n+        // GIVEN\n+        // set up initial config and listeners\n+        String initConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  node1:\\n\"\n+                + \"    key1: val1\\n\"\n+                + \"  node2: val2\\n\";\n+\n+        String updateConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  node1: val1\\n\"\n+                + \"  node2:\\n\"\n+                + \"    key2: val2\\n\";\n+\n+        Map<Object, Object> initConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(initConfig.getBytes())) {\n+            initConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.mergeMap(1, initConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        Pair<CompletableFuture<Void>, Subscriber> node1Changed = createSingleAssertSubscriber((what, node) -> {\n+                    assertEquals(WhatHappened.nodeTypeChanged, what, node.getFullName() + node.toPOJO());\n+                    assertEquals(\"val1\", ((Topic) node).getOnce());\n+                });\n+        config.findTopics(\"foo\", \"node1\").subscribe(node1Changed.getRight());\n+\n+        Pair<CompletableFuture<Void>, Subscriber> nodeRemoved = createSingleAssertSubscriber((what, node) -> {\n+                    assertEquals(WhatHappened.removed, what, node.getFullName());\n+                });\n+        config.find(\"foo\", \"node1\", \"key1\").subscribe(nodeRemoved.getRight());\n+\n+        Pair<CompletableFuture<Void>, Subscriber> node2Changed = createSingleAssertSubscriber((what, node) -> {\n+                    assertEquals(WhatHappened.nodeTypeChanged, what, node.getFullName());\n+                    assertEquals(\"val2\", ((Topics) node).find(\"key2\").getOnce());\n+                });\n+        config.find(\"foo\", \"node2\").subscribe(node2Changed.getRight());\n+\n+        // WHEN\n+        Map<Object, Object> updateConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(updateConfig.getBytes())) {\n+            updateConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.root.replaceMap(2, updateConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        // THEN\n+        node1Changed.getLeft().get(100, TimeUnit.MILLISECONDS);\n+        node2Changed.getLeft().get(100, TimeUnit.MILLISECONDS);\n+        nodeRemoved.getLeft().get(100, TimeUnit.MILLISECONDS);\n+\n+        assertEquals(updateConfigMap, config.toPOJO());\n+    }\n+\n+    @Test\n+    public void GIVEN_config_with_subscribers_WHEN_topic_type_changed_THEN_parent_node_notified() throws Exception {\n+        // GIVEN\n+        // set up initial config and listeners\n+        String initConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  node1:\\n\"\n+                + \"    key1: val1\\n\"\n+                + \"  node2: val2\\n\";\n+\n+        String updateConfig = \"---\\n\"\n+                + \"foo:\\n\"\n+                + \"  node1: val1\\n\"\n+                + \"  node2:\\n\"\n+                + \"    key2: val2\\n\";\n+\n+        Map<Object, Object> initConfigMap;\n+        try (InputStream inputStream = new ByteArrayInputStream(initConfig.getBytes())) {\n+            initConfigMap = (Map) JSON.std.with(new YAMLFactory()).anyFrom(inputStream);\n+        }\n+        config.mergeMap(1, initConfigMap);\n+        config.context.runOnPublishQueueAndWait(() -> {});\n+\n+        AtomicInteger node1Changed = new AtomicInteger();\n+        AtomicInteger node2Changed = new AtomicInteger();\n+        config.findTopics(\"foo\").subscribe((what, node) -> {\n+            if (WhatHappened.childChanged == what) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "originalPosition": 192}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3MDcyOA==", "bodyText": "edge case - check if map is null or empty.  Especially when it is null, map.forEach will throw NPE...", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449170728", "createdAt": "2020-07-02T17:33:50Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -209,6 +211,70 @@ public void mergeMap(long lastModified, Map<Object, Object> map) {\n         });\n     }\n \n+    /**\n+     * Replace the given map to this Topics tree.\n+     *\n+     * @param lastModified last modified time\n+     * @param map          map to merge in\n+     */\n+    public void replaceMap(long lastModified, Map<Object, Object> map) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3MzgxNw==", "bodyText": "I see you are approaching this with 4 branches here: leaf -> container, leaf -> leaf, container -> container, and container -> leaf.\nSo I would suggest move this comment down btw current line 229 and 230. And also add the missing comment for leaf -> leaf and container -> container just to be clear and consistent.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449173817", "createdAt": "2020-07-02T17:39:57Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -209,6 +211,70 @@ public void mergeMap(long lastModified, Map<Object, Object> map) {\n         });\n     }\n \n+    /**\n+     * Replace the given map to this Topics tree.\n+     *\n+     * @param lastModified last modified time\n+     * @param map          map to merge in\n+     */\n+    public void replaceMap(long lastModified, Map<Object, Object> map) {\n+        Set<String> childToRemove = new HashSet<>(children.keySet());\n+\n+        map.forEach((okey, value) -> {\n+            String key = okey.toString();\n+            childToRemove.remove(key);\n+            Node existingChild = children.get(key);\n+            if (value instanceof Map) {\n+                // if a leaf node is replaced with container node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3NTg4Mg==", "bodyText": "Then we could add a method to \"override\" properly I guess. At least encapsulate this logic.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449175882", "createdAt": "2020-07-02T17:43:54Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -205,6 +207,70 @@ public void mergeMap(long lastModified, Map<Object, Object> map) {\n         });\n     }\n \n+    /**\n+     * Replace the given map to this Topics tree.\n+     *\n+     * @param lastModified last modified time\n+     * @param map          map to merge in\n+     */\n+    public void replaceMap(long lastModified, Map<Object, Object> map) {\n+        Set<String> childToRemove = new HashSet<>(children.keySet());\n+\n+        map.forEach((okey, value) -> {\n+            String key = okey.toString();\n+            childToRemove.remove(key);\n+            Node existingChild = children.get(key);\n+            if (value instanceof Map) {\n+                // if a leaf node is replaced with container node\n+                if (existingChild instanceof Topic) {\n+                    Topics newNode = new Topics(context, key, null);\n+                    newNode.replaceMap(lastModified, (Map) value);\n+\n+                    context.runOnPublishQueue(() -> {\n+                        children.put(key, newNode);\n+                        newNode.setParent(this);\n+                        existingChild.setParent(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYzODIyNw=="}, "originalCommit": {"oid": "67b3be162d1732cf54c183ce5d3f6aec3db12755"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7c3dedee224bdaf2200d6e0ac2b3d4c67744be4a", "committedDate": "2020-07-02T06:14:21Z", "message": "Add NodeTypeChanged event type in WhatHappened enum\n\nThe event type shows a node is changed and switched between a container node and a\nleaf node.\n\nChanged function interface of Subscriber and removed ChildChanged\ninterface. Subscriber now applies to both Topic and Topics listener."}, "afterCommit": {"oid": "938499640d173d9ae2585bd7cda9eafcb8928b11", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/938499640d173d9ae2585bd7cda9eafcb8928b11", "committedDate": "2020-07-02T20:20:02Z", "message": "split nodeTypeChanged into changedToTopic and changedToTopics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDE5Nzkw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-442019790", "createdAt": "2020-07-02T21:08:29Z", "commit": {"oid": "938499640d173d9ae2585bd7cda9eafcb8928b11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTowODoyOVrOGsdD6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTowODoyOVrOGsdD6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2NjY2Ng==", "bodyText": "These additional enum values here look redundant to me. I think what you're using these for can be achieved using the existing childChanged event because you fire changedToTopics / changedToTopic event in Topics->replaceMap() only to transform them to WhatHappened.childChanged at Topics.java:364 and Topic.java:151. Other than that these are only used in a test class for assertions, can't we do that without introducing new events? Or am I missing something?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r449266666", "createdAt": "2020-07-02T21:08:29Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/config/WhatHappened.java", "diffHunk": "@@ -4,5 +4,5 @@\n package com.aws.iot.evergreen.config;\n \n public enum WhatHappened {\n-    changed, initialized, childChanged, removed, childRemoved\n+    changed, initialized, childChanged, removed, childRemoved, changedToTopic, changedToTopics", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "938499640d173d9ae2585bd7cda9eafcb8928b11"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDI2Nzg2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-442026786", "createdAt": "2020-07-02T21:23:10Z", "commit": {"oid": "938499640d173d9ae2585bd7cda9eafcb8928b11"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "938499640d173d9ae2585bd7cda9eafcb8928b11", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/938499640d173d9ae2585bd7cda9eafcb8928b11", "committedDate": "2020-07-02T20:20:02Z", "message": "split nodeTypeChanged into changedToTopic and changedToTopics"}, "afterCommit": {"oid": "67a2177e56964d47de4736a92543ae0d9085225f", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/67a2177e56964d47de4736a92543ae0d9085225f", "committedDate": "2020-07-06T17:05:22Z", "message": "Add replaceMap in Topics\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67a2177e56964d47de4736a92543ae0d9085225f", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/67a2177e56964d47de4736a92543ae0d9085225f", "committedDate": "2020-07-06T17:05:22Z", "message": "Add replaceMap in Topics\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map."}, "afterCommit": {"oid": "2ccf9601de4f557d45e994dcf72d1a835d4adf1f", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2ccf9601de4f557d45e994dcf72d1a835d4adf1f", "committedDate": "2020-07-06T19:49:39Z", "message": "Update tlog to record container node removal. Add replaceMap in Topics.\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\n\nCurrent tlog writer/reader doesn't record container node removal event.\nUpdate Node to record modtime and node removal time.\nUpdate tlog to record container node removal."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ccf9601de4f557d45e994dcf72d1a835d4adf1f", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2ccf9601de4f557d45e994dcf72d1a835d4adf1f", "committedDate": "2020-07-06T19:49:39Z", "message": "Update tlog to record container node removal. Add replaceMap in Topics.\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\n\nCurrent tlog writer/reader doesn't record container node removal event.\nUpdate Node to record modtime and node removal time.\nUpdate tlog to record container node removal."}, "afterCommit": {"oid": "d5889e69305876f0658334dfaf680d643126cc8c", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d5889e69305876f0658334dfaf680d643126cc8c", "committedDate": "2020-07-06T20:02:37Z", "message": "Update tlog to record container node removal. Add replaceMap in Topics.\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\n\nCurrent tlog writer/reader doesn't record container node removal event.\nUpdate Node to record modtime and node removal time.\nUpdate tlog to record container node removal."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzg2NDA5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-443386409", "createdAt": "2020-07-06T20:30:00Z", "commit": {"oid": "d5889e69305876f0658334dfaf680d643126cc8c"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5889e69305876f0658334dfaf680d643126cc8c", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d5889e69305876f0658334dfaf680d643126cc8c", "committedDate": "2020-07-06T20:02:37Z", "message": "Update tlog to record container node removal. Add replaceMap in Topics.\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\n\nCurrent tlog writer/reader doesn't record container node removal event.\nUpdate Node to record modtime and node removal time.\nUpdate tlog to record container node removal."}, "afterCommit": {"oid": "d53931e475a92f9e829287335277b211260ef66a", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d53931e475a92f9e829287335277b211260ef66a", "committedDate": "2020-07-06T20:50:18Z", "message": "Update tlog to record container node removal. Add replaceMap in Topics.\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\n\nCurrent tlog writer/reader doesn't record container node removal event.\nUpdate Node to record modtime and node removal time.\nUpdate tlog to record container node removal."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d53931e475a92f9e829287335277b211260ef66a", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d53931e475a92f9e829287335277b211260ef66a", "committedDate": "2020-07-06T20:50:18Z", "message": "Update tlog to record container node removal. Add replaceMap in Topics.\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\n\nCurrent tlog writer/reader doesn't record container node removal event.\nUpdate Node to record modtime and node removal time.\nUpdate tlog to record container node removal."}, "afterCommit": {"oid": "a66f4f38a0ec8b5ab0a67997574419ff7d82a5ae", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a66f4f38a0ec8b5ab0a67997574419ff7d82a5ae", "committedDate": "2020-07-07T07:00:56Z", "message": "Update tlog to record container node removal. Add replaceMap in Topics.\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\n\nCurrent tlog writer/reader doesn't record container node removal event.\nUpdate Node to record modtime and node removal time.\nUpdate tlog to record container node removal."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MjQ3MDc0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-444247074", "createdAt": "2020-07-07T21:01:40Z", "commit": {"oid": "a66f4f38a0ec8b5ab0a67997574419ff7d82a5ae"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTI4ODA5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-445128809", "createdAt": "2020-07-08T21:06:11Z", "commit": {"oid": "2feee166ddf5b681efd3f29c7858070062dfdfea"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2feee166ddf5b681efd3f29c7858070062dfdfea", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2feee166ddf5b681efd3f29c7858070062dfdfea", "committedDate": "2020-07-08T19:04:44Z", "message": "Merge branch 'master' into replaceConfig"}, "afterCommit": {"oid": "06da31352404929d45e9d6e7078c2307886203e2", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/06da31352404929d45e9d6e7078c2307886203e2", "committedDate": "2020-07-08T22:22:47Z", "message": "Update tlog to record container node removal. Add replaceMap in Topics.\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\n\nCurrent tlog writer/reader doesn't record container node removal event.\nUpdate Node to record modtime and node removal time.\nUpdate tlog to record container node removal."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjIyMzIz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-445222323", "createdAt": "2020-07-09T00:58:30Z", "commit": {"oid": "05d97a862d1736a932372a2b4ba30fded3a3de97"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NzU4ODY5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-445758869", "createdAt": "2020-07-09T16:02:19Z", "commit": {"oid": "05d97a862d1736a932372a2b4ba30fded3a3de97"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjowMjoxOVrOGvXzVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjowMjoxOVrOGvXzVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNjIzMA==", "bodyText": "return?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r452326230", "createdAt": "2020-07-09T16:02:19Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -209,6 +225,46 @@ public void mergeMap(long lastModified, Map<Object, Object> map) {\n         });\n     }\n \n+    /**\n+     * Replace the given map to this Topics tree.\n+     *\n+     * @param lastModified last modified time\n+     * @param map          map to merge in\n+     */\n+    @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH\")\n+    public void replaceMap(long lastModified, Map<Object, Object> map) {\n+        if (map == null) {\n+            logger.atInfo().kv(\"node\", getFullName()).log(\"Null map received in mergeMap(), ignoring.\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d97a862d1736a932372a2b4ba30fded3a3de97"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "533d2ee62eca0318406ec3cd044896c5c570ac3d", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/533d2ee62eca0318406ec3cd044896c5c570ac3d", "committedDate": "2020-07-09T16:39:34Z", "message": "Update tlog to record container node removal. Add replaceMap in Topics.\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\n\nCurrent tlog writer/reader doesn't record container node removal event.\nUpdate Node to record modtime and node removal time.\nUpdate tlog to record container node removal."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05d97a862d1736a932372a2b4ba30fded3a3de97", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/05d97a862d1736a932372a2b4ba30fded3a3de97", "committedDate": "2020-07-08T23:42:11Z", "message": "Merge branch 'master' into replaceConfig"}, "afterCommit": {"oid": "533d2ee62eca0318406ec3cd044896c5c570ac3d", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/533d2ee62eca0318406ec3cd044896c5c570ac3d", "committedDate": "2020-07-09T16:39:34Z", "message": "Update tlog to record container node removal. Add replaceMap in Topics.\n\nReplaceMap will remove the unused fields config when reading from a new\nmap. It effectively override the config with the new map.\n\nCurrent tlog writer/reader doesn't record container node removal event.\nUpdate Node to record modtime and node removal time.\nUpdate tlog to record container node removal."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba83f9ed6e146f252ac1e10f0b671708f7d44223", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ba83f9ed6e146f252ac1e10f0b671708f7d44223", "committedDate": "2020-07-09T16:41:29Z", "message": "Merge branch 'master' into replaceConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e77e0535577f1e05ddf83026edfaf659a443329c", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e77e0535577f1e05ddf83026edfaf659a443329c", "committedDate": "2020-07-10T17:24:22Z", "message": "Merge branch 'master' into replaceConfig"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1bc148d13c4284bb79c6f2297f69a9d6f4d86320", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1bc148d13c4284bb79c6f2297f69a9d6f4d86320", "committedDate": "2020-07-13T16:03:55Z", "message": "minor fixes"}, "afterCommit": {"oid": "faef36d3c847936e1ab56478ca22fd908d549ba6", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/faef36d3c847936e1ab56478ca22fd908d549ba6", "committedDate": "2020-07-14T21:19:37Z", "message": "Fix tests to run on Windows"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e47eeb06b16d526dfb40f03344a04f018c97b3b6", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e47eeb06b16d526dfb40f03344a04f018c97b3b6", "committedDate": "2020-07-14T22:46:58Z", "message": "Fix tests to run on Windows"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "faef36d3c847936e1ab56478ca22fd908d549ba6", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/faef36d3c847936e1ab56478ca22fd908d549ba6", "committedDate": "2020-07-14T21:19:37Z", "message": "Fix tests to run on Windows"}, "afterCommit": {"oid": "e47eeb06b16d526dfb40f03344a04f018c97b3b6", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e47eeb06b16d526dfb40f03344a04f018c97b3b6", "committedDate": "2020-07-14T22:46:58Z", "message": "Fix tests to run on Windows"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5532e1b89ff723ef2418594b4df9b4ec75047ca", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e5532e1b89ff723ef2418594b4df9b4ec75047ca", "committedDate": "2020-07-14T23:00:22Z", "message": "Merge branch 'master' into replaceConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "325693ad7eb1077d34bc42281a30dd9945f94f40", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/325693ad7eb1077d34bc42281a30dd9945f94f40", "committedDate": "2020-07-15T18:37:29Z", "message": "Merge branch 'master' into replaceConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e591afd738655541756374bcf4029d59debae7d9", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e591afd738655541756374bcf4029d59debae7d9", "committedDate": "2020-07-15T19:41:37Z", "message": "Extend timeout for DeploymentTaskIntegTest\n\nFix DeploymentConfigMergerTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c71e9c3bccaadc1a875246ba870aec3570d3e89", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0c71e9c3bccaadc1a875246ba870aec3570d3e89", "committedDate": "2020-07-15T19:24:42Z", "message": "Extend timeout for DeploymentTaskIntegTest"}, "afterCommit": {"oid": "e591afd738655541756374bcf4029d59debae7d9", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e591afd738655541756374bcf4029d59debae7d9", "committedDate": "2020-07-15T19:41:37Z", "message": "Extend timeout for DeploymentTaskIntegTest\n\nFix DeploymentConfigMergerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84b7335f6789359dcb1fc804be00d0c9eb9ec361", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/84b7335f6789359dcb1fc804be00d0c9eb9ec361", "committedDate": "2020-07-16T07:16:19Z", "message": "Merge branch 'master' into replaceConfig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NTY3NDkw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-449567490", "createdAt": "2020-07-16T07:18:33Z", "commit": {"oid": "84b7335f6789359dcb1fc804be00d0c9eb9ec361"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNzoxODozM1rOGydQUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNzoxODozM1rOGydQUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU2MTI5OQ==", "bodyText": "this warning means that a null dereference is inevitable. Shouldn't it be fixed instead of ignored?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r455561299", "createdAt": "2020-07-16T07:18:33Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -192,13 +195,27 @@ public Topics findTopics(String... path) {\n         return n;\n     }\n \n+    protected Node findNode(String... path) {\n+        int limit = path.length - 1;\n+        Topics n = this;\n+        for (int i = 0; i < limit && n != null; i++) {\n+            n = n.findInteriorChild(path[i]);\n+        }\n+        return n == null ? null : n.getChild(path[limit]);\n+    }\n+\n     /**\n      * Add the given map to this Topics tree.\n      *\n      * @param lastModified last modified time\n      * @param map          map to merge in\n      */\n+    @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84b7335f6789359dcb1fc804be00d0c9eb9ec361"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NTY4ODM0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-449568834", "createdAt": "2020-07-16T07:20:38Z", "commit": {"oid": "84b7335f6789359dcb1fc804be00d0c9eb9ec361"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNzoyMDozOFrOGydUuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNzoyMDozOFrOGydUuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU2MjQyNQ==", "bodyText": "why do we need this change? This code was working before somehow", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r455562425", "createdAt": "2020-07-16T07:20:38Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/deployment/DeploymentConfigMergerTest.java", "diffHunk": "@@ -197,8 +198,9 @@ public void GIVEN_waitForServicesToStart_WHEN_service_reached_desired_state_THEN\n         assertFalse(serviceStarted.await(3*WAIT_SVC_START_POLL_INTERVAL_MILLISEC, TimeUnit.MILLISECONDS));\n \n         // WHEN\n-        when(mockService.getState()).thenReturn(State.RUNNING);\n-        when(mockService.reachedDesiredState()).thenReturn(true);\n+        // use doReturn() here: https://stackoverflow.com/questions/11121772\n+        doReturn(State.RUNNING).when(mockService).getState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84b7335f6789359dcb1fc804be00d0c9eb9ec361"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMDQ2OTM1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-450046935", "createdAt": "2020-07-16T17:08:13Z", "commit": {"oid": "84b7335f6789359dcb1fc804be00d0c9eb9ec361"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMDY5MjQ1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-450069245", "createdAt": "2020-07-16T17:36:47Z", "commit": {"oid": "84b7335f6789359dcb1fc804be00d0c9eb9ec361"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMDY5NjI1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-450069625", "createdAt": "2020-07-16T17:37:13Z", "commit": {"oid": "84b7335f6789359dcb1fc804be00d0c9eb9ec361"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e44fe243faeb84208a4a0333967cc5b946584bac", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e44fe243faeb84208a4a0333967cc5b946584bac", "committedDate": "2020-07-16T18:04:14Z", "message": "Merge branch 'master' into replaceConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18cf8783ce1db2e18e74abe9248492f86546d992", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/18cf8783ce1db2e18e74abe9248492f86546d992", "committedDate": "2020-07-16T20:01:21Z", "message": "Modify covered ratio to pass windows build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "009b69d8d0cea0c61c2508b52c65f805384c86f5", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/009b69d8d0cea0c61c2508b52c65f805384c86f5", "committedDate": "2020-07-17T00:06:50Z", "message": "Merge branch 'master' into replaceConfig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMzU0NzE5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-450354719", "createdAt": "2020-07-17T03:47:45Z", "commit": {"oid": "009b69d8d0cea0c61c2508b52c65f805384c86f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODc2NDc3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-450876477", "createdAt": "2020-07-17T18:35:32Z", "commit": {"oid": "009b69d8d0cea0c61c2508b52c65f805384c86f5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODozNTozMlrOGzdRzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODozNTozMlrOGzdRzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxMDI1Mg==", "bodyText": "nit: error message should be replaceMap", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#discussion_r456610252", "createdAt": "2020-07-17T18:35:32Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -209,6 +226,47 @@ public void mergeMap(long lastModified, Map<Object, Object> map) {\n         });\n     }\n \n+    /**\n+     * Replace the given map to this Topics tree.\n+     *\n+     * @param lastModified last modified time\n+     * @param map          map to merge in\n+     */\n+    @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH\")\n+    public void replaceMap(long lastModified, Map<Object, Object> map) {\n+        if (map == null) {\n+            logger.atInfo().kv(\"node\", getFullName()).log(\"Null map received in mergeMap(), ignoring.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "009b69d8d0cea0c61c2508b52c65f805384c86f5"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwOTA4MjY2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/282#pullrequestreview-450908266", "createdAt": "2020-07-17T19:31:29Z", "commit": {"oid": "009b69d8d0cea0c61c2508b52c65f805384c86f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2821, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}