{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MDQ1MDgx", "number": 614, "title": "Move logging config to system config.", "bodyText": "Issue #, if available:\nDescription of changes:\nSubscribe to changes to the logging config in the nucleus configuration and then reconfigure all the loggers.\nWhy is this change necessary:\nHow was this change tested:\nAdded unit tests.\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-11-03T23:24:20Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614", "merged": true, "mergeCommit": {"oid": "a815ec99241f6a5fb55841d63f045e2176934f80"}, "closed": true, "closedAt": "2020-11-11T01:43:01Z", "author": {"login": "nikkhilmuthye"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZCBuPAH2gAyNTE1MDQ1MDgxOmVlYTNhMDZiNmExNTQ2OWRlMWFhNWJlMGUzODNhNThjZTFiZGIyZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbTZ96gFqTUyNzc3MjI3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eea3a06b6a15469de1aa5be0e383a58ce1bdb2dd", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eea3a06b6a15469de1aa5be0e383a58ce1bdb2dd", "committedDate": "2020-11-03T23:47:02Z", "message": "Move logging config to system config."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07cc62085d6c7277bc067eb487920e5db33d0ff7", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/07cc62085d6c7277bc067eb487920e5db33d0ff7", "committedDate": "2020-11-03T23:22:58Z", "message": "Move logging config to system config."}, "afterCommit": {"oid": "eea3a06b6a15469de1aa5be0e383a58ce1bdb2dd", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eea3a06b6a15469de1aa5be0e383a58ce1bdb2dd", "committedDate": "2020-11-03T23:47:02Z", "message": "Move logging config to system config."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/239cc152ddc874aabc215a5a9597b70fd0a09abd", "committedDate": "2020-11-04T00:43:48Z", "message": "Merge branch 'master' into moveloggingcofig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyOTc5MDU0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-522979054", "createdAt": "2020-11-04T01:07:06Z", "commit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMTowNzowNlrOHtFwvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMTowODo0NFrOHtFyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0MjM2Ng==", "bodyText": "Keep the default config?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517042366", "createdAt": "2020-11-04T01:07:06Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,94 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.amazon.aws.iot.greengrass.component.common.ComponentType;\n+import com.aws.greengrass.config.CaseInsensitiveString;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.deployment.DeviceConfiguration.DEFAULT_NUCLEUS_COMPONENT_NAME;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+import static com.aws.greengrass.lifecyclemanager.Kernel.SERVICE_TYPE_TOPIC_KEY;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel),\n+                        CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS)\n+                //.dflt(LoggerConfiguration.builder().build())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0MjUwMQ==", "bodyText": "How does the list look like in yaml?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517042501", "createdAt": "2020-11-04T01:07:42Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,94 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.amazon.aws.iot.greengrass.component.common.ComponentType;\n+import com.aws.greengrass.config.CaseInsensitiveString;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.deployment.DeviceConfiguration.DEFAULT_NUCLEUS_COMPONENT_NAME;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+import static com.aws.greengrass.lifecyclemanager.Kernel.SERVICE_TYPE_TOPIC_KEY;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel),\n+                        CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS)\n+                //.dflt(LoggerConfiguration.builder().build())\n+                .subscribe((what, loggingParam) -> {\n+                    if (loggingParam == null) {\n+                        logger.atInfo().log(\"No logging configuration configured\");\n+                        return;\n+                    }\n+                    try {\n+                        List<LoggerConfiguration> configuration = OBJECT_MAPPER.convertValue(loggingParam.toPOJO(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0Mjc0MA==", "bodyText": "Why not exposing the methods in deviceConfiguration?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517042740", "createdAt": "2020-11-04T01:08:44Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,94 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.amazon.aws.iot.greengrass.component.common.ComponentType;\n+import com.aws.greengrass.config.CaseInsensitiveString;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.deployment.DeviceConfiguration.DEFAULT_NUCLEUS_COMPONENT_NAME;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+import static com.aws.greengrass.lifecyclemanager.Kernel.SERVICE_TYPE_TOPIC_KEY;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel),\n+                        CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS)\n+                //.dflt(LoggerConfiguration.builder().build())\n+                .subscribe((what, loggingParam) -> {\n+                    if (loggingParam == null) {\n+                        logger.atInfo().log(\"No logging configuration configured\");\n+                        return;\n+                    }\n+                    try {\n+                        List<LoggerConfiguration> configuration = OBJECT_MAPPER.convertValue(loggingParam.toPOJO(),\n+                                new TypeReference<List<LoggerConfiguration>>() {\n+                                });\n+                        if (configuration == null) {\n+                            configuration =  new ArrayList<>();\n+                        }\n+                        if (configuration.isEmpty()) {\n+                            configuration.add(LoggerConfiguration.builder().build());\n+                        }\n+                        LogManager.reconfigureAllLoggers(configuration.get(0));\n+                    } catch (IllegalArgumentException e) {\n+                        logger.atError().kv(\"node\", loggingParam.getFullName()).kv(\"value\", loggingParam).setCause(e)\n+                                .log(\"Unable to parse logging configuration\");\n+                    }\n+                });\n+    }\n+\n+    /**\n+     * Get the Nucleus component name to lookup the configuration in the right place. If no component of type Nucleus\n+     * exists, create service config for the default Nucleus component.\n+     */\n+    private static String getNucleusComponentName(Kernel kernel) {\n+        Optional<CaseInsensitiveString> nucleusComponent =\n+                kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC).children.keySet().stream()\n+                        .filter(s -> ComponentType.NUCLEUS.name().equals(getComponentType(kernel, s.toString())))\n+                        .findAny();\n+        return nucleusComponent.map(CaseInsensitiveString::toString).orElse(DEFAULT_NUCLEUS_COMPONENT_NAME);\n+    }\n+\n+    private static String getComponentType(Kernel kernel, String serviceName) {\n+        return Coerce.toString(kernel.getConfig().find(SERVICES_NAMESPACE_TOPIC, serviceName, SERVICE_TYPE_TOPIC_KEY));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyOTgyNDYy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-522982462", "createdAt": "2020-11-04T01:18:02Z", "commit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMToxODowMlrOHtF8Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMToxODowMlrOHtF8Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0NTMyMw==", "bodyText": "for this directory, you should be modifying the path in initPaths", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517045323", "createdAt": "2020-11-04T01:18:02Z", "author": {"login": "MikeDombo"}, "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -168,6 +168,13 @@ services:\n       privateKeyPath: \"root/privKey.key\"\n       rootCaPath: \"root/rootCA.pem\"\n       iotRoleAlias: \"tes_alias\"\n+      logging:\n+        level: INFO\n+        fileSizeKB: 1024\n+        totalLogsSizeKB: 10240\n+        format: TEXT\n+        outputDirectory: /path/to/logs/directory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNTM3MTgz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-523537183", "createdAt": "2020-11-04T16:36:48Z", "commit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjozNjo0OFrOHtgTvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjozNjo0OFrOHtgTvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3NzMwOA==", "bodyText": "this should be lookupTopics as logging is a topics and not a topic", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517477308", "createdAt": "2020-11-04T16:36:48Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,94 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.amazon.aws.iot.greengrass.component.common.ComponentType;\n+import com.aws.greengrass.config.CaseInsensitiveString;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.deployment.DeviceConfiguration.DEFAULT_NUCLEUS_COMPONENT_NAME;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+import static com.aws.greengrass.lifecyclemanager.Kernel.SERVICE_TYPE_TOPIC_KEY;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel),\n+                        CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNTQyNDY4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-523542468", "createdAt": "2020-11-04T16:42:37Z", "commit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjo0MjozOFrOHtgj5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjo0MjozOFrOHtgj5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ4MTQ0Ng==", "bodyText": "Use https://github.com/aws/aws-greengrass-nucleus/blob/8ee8a8f65ea2226786490e81cb015ae0fd28f141/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java#L142", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517481446", "createdAt": "2020-11-04T16:42:38Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,94 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.amazon.aws.iot.greengrass.component.common.ComponentType;\n+import com.aws.greengrass.config.CaseInsensitiveString;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.deployment.DeviceConfiguration.DEFAULT_NUCLEUS_COMPONENT_NAME;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+import static com.aws.greengrass.lifecyclemanager.Kernel.SERVICE_TYPE_TOPIC_KEY;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel),\n+                        CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS)\n+                //.dflt(LoggerConfiguration.builder().build())\n+                .subscribe((what, loggingParam) -> {\n+                    if (loggingParam == null) {\n+                        logger.atInfo().log(\"No logging configuration configured\");\n+                        return;\n+                    }\n+                    try {\n+                        List<LoggerConfiguration> configuration = OBJECT_MAPPER.convertValue(loggingParam.toPOJO(),\n+                                new TypeReference<List<LoggerConfiguration>>() {\n+                                });\n+                        if (configuration == null) {\n+                            configuration =  new ArrayList<>();\n+                        }\n+                        if (configuration.isEmpty()) {\n+                            configuration.add(LoggerConfiguration.builder().build());\n+                        }\n+                        LogManager.reconfigureAllLoggers(configuration.get(0));\n+                    } catch (IllegalArgumentException e) {\n+                        logger.atError().kv(\"node\", loggingParam.getFullName()).kv(\"value\", loggingParam).setCause(e)\n+                                .log(\"Unable to parse logging configuration\");\n+                    }\n+                });\n+    }\n+\n+    /**\n+     * Get the Nucleus component name to lookup the configuration in the right place. If no component of type Nucleus\n+     * exists, create service config for the default Nucleus component.\n+     */\n+    private static String getNucleusComponentName(Kernel kernel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNTQ2ODYx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-523546861", "createdAt": "2020-11-04T16:47:15Z", "commit": {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "committedDate": "2020-11-04T22:57:48Z", "message": "Address PR comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODA2OTEx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-523806911", "createdAt": "2020-11-04T23:20:12Z", "commit": {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMzoyMDoxMlrOHttM9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMzoyOTo0M1rOHttZzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODU2NA==", "bodyText": "this isn't the same behavior as before, which initialized the component only when it didn't exist. You're now initializing it whether or not it exists, you're just doing it when the name is the default name.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517688564", "createdAt": "2020-11-04T23:20:12Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -97,7 +99,12 @@\n     @Inject\n     public DeviceConfiguration(Kernel kernel) {\n         this.kernel = kernel;\n-        this.nucleusComponentName = getNucleusComponentName();\n+        Pair<String, Boolean> nucleusComponentNamePair = getNucleusComponentName(this.kernel);\n+        this.nucleusComponentName = nucleusComponentNamePair.getLeft();\n+        // If the Nucleus name is default, then initialize the nucleus component configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODgzOQ==", "bodyText": "is this going to update the log manager's path too?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517688839", "createdAt": "2020-11-04T23:21:02Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "diffHunk": "@@ -152,7 +156,16 @@ private void initPaths(String rootAbsolutePath) {\n             TelemetryConfig.getInstance().setRoot(Paths.get(deTilde(ROOT_DIR_PREFIX)));\n             LogManager.setRoot(Paths.get(deTilde(ROOT_DIR_PREFIX)));\n             nucleusPaths.setTelemetryPath(TelemetryConfig.getInstance().getStoreDirectory());\n-            nucleusPaths.setLoggerPath(LogManager.getRootLogConfiguration().getStoreDirectory());\n+            String storeDirectory = LogManager.getRootLogConfiguration().getStoreDirectory().toAbsolutePath()\n+                    .toString();\n+            Topic outputDirectoryTopic = kernel.getConfig().lookup(SERVICES_NAMESPACE_TOPIC,\n+                    DeviceConfiguration.getNucleusComponentName(kernel).getLeft(), CONFIGURATION_CONFIG_KEY,\n+                    NUCLEUS_CONFIG_LOGGING_TOPICS, \"outputDirectory\");\n+            String outputDirectory = Coerce.toString(outputDirectoryTopic);\n+            if (Utils.isNotEmpty(outputDirectory)) {\n+                storeDirectory = deTilde(outputDirectory);\n+            }\n+            nucleusPaths.setLoggerPath(Paths.get(storeDirectory));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTE5MA==", "bodyText": "add to the device config a method to just give you the topics for the nucleus config.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517689190", "createdAt": "2020-11-04T23:22:09Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,51 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.aws.greengrass.config.Node;\n+import com.aws.greengrass.config.WhatHappened;\n+import com.aws.greengrass.deployment.DeviceConfiguration;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.LogFormat;\n+import com.aws.greengrass.logging.impl.config.LogStore;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.aws.greengrass.util.Pair;\n+import org.slf4j.event.Level;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        Pair<String, Boolean> nucleusComponentNamePair = DeviceConfiguration.getNucleusComponentName(kernel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTMwMg==", "bodyText": "not true. Don't log this.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517689302", "createdAt": "2020-11-04T23:22:28Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +63,41 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    private static void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            logger.atInfo().log(\"No logging configuration configured\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTY4MQ==", "bodyText": "full name is not what you want. The full name includes the whole path services.aws.greengrass.Nucleus.parameters.logging.level", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517689681", "createdAt": "2020-11-04T23:23:41Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +63,41 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    private static void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            logger.atInfo().log(\"No logging configuration configured\");\n+            return;\n+        }\n+        LoggerConfiguration configuration2 = LoggerConfiguration.builder().build();\n+        if (WhatHappened.childChanged.equals(what)) {\n+            if (\"level\".equals(loggingParam.getFullName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTg2Mg==", "bodyText": "Given this error, I'd doubt that your tests have appropriate coverage.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517689862", "createdAt": "2020-11-04T23:24:09Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +63,41 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    private static void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            logger.atInfo().log(\"No logging configuration configured\");\n+            return;\n+        }\n+        LoggerConfiguration configuration2 = LoggerConfiguration.builder().build();\n+        if (WhatHappened.childChanged.equals(what)) {\n+            if (\"level\".equals(loggingParam.getFullName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTY4MQ=="}, "originalCommit": {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5MTczNg==", "bodyText": "don't trigger only on childchanged, this won't work when the subscription is first added. Just ignore the whathappened and read directly from the config store. Ignore what and loggingParam", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517691736", "createdAt": "2020-11-04T23:29:21Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +63,41 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    private static void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            logger.atInfo().log(\"No logging configuration configured\");\n+            return;\n+        }\n+        LoggerConfiguration configuration2 = LoggerConfiguration.builder().build();\n+        if (WhatHappened.childChanged.equals(what)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5MTg1Mw==", "bodyText": "only reconfigure if something changed.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517691853", "createdAt": "2020-11-04T23:29:43Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +63,41 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    private static void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            logger.atInfo().log(\"No logging configuration configured\");\n+            return;\n+        }\n+        LoggerConfiguration configuration2 = LoggerConfiguration.builder().build();\n+        if (WhatHappened.childChanged.equals(what)) {\n+            if (\"level\".equals(loggingParam.getFullName())) {\n+                configuration2.setLevel(Level.valueOf(Coerce.toString(loggingParam.toPOJO())));\n+            }\n+            if (\"fileSizeKB\".equals(loggingParam.getFullName())) {\n+                configuration2.setFileSizeKB(Coerce.toLong(loggingParam.toPOJO()));\n+            }\n+            if (\"totalLogsSizeKB\".equals(loggingParam.getFullName())) {\n+                configuration2.setTotalLogsSizeKB(Coerce.toLong(loggingParam.toPOJO()));\n+            }\n+            if (\"format\".equals(loggingParam.getFullName())) {\n+                configuration2.setFormat(LogFormat.valueOf(Coerce.toString(loggingParam.toPOJO())));\n+            }\n+            if (\"outputDirectory\".equals(loggingParam.getFullName())) {\n+                configuration2.setOutputDirectory(Coerce.toString(loggingParam.toPOJO()));\n+            }\n+            if (\"outputType\".equals(loggingParam.getFullName())) {\n+                configuration2.setOutputType(LogStore.valueOf(Coerce.toString(loggingParam.toPOJO())));\n+            }\n+        }\n+        LogManager.reconfigureAllLoggers(configuration2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f"}, "originalPosition": 96}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4723a06a658de583414363086e21288006085ac", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f4723a06a658de583414363086e21288006085ac", "committedDate": "2020-11-05T05:54:35Z", "message": "Address PR comments."}, "afterCommit": {"oid": "223a4507d82aca1b5d234f3a08cbdc61425e4c36", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/223a4507d82aca1b5d234f3a08cbdc61425e4c36", "committedDate": "2020-11-05T06:28:27Z", "message": "Address PR comments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "223a4507d82aca1b5d234f3a08cbdc61425e4c36", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/223a4507d82aca1b5d234f3a08cbdc61425e4c36", "committedDate": "2020-11-05T06:28:27Z", "message": "Address PR comments."}, "afterCommit": {"oid": "f207defb936280f5767b8c1fe66e0502afa6af62", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f207defb936280f5767b8c1fe66e0502afa6af62", "committedDate": "2020-11-05T16:29:21Z", "message": "Address PR comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41ac3adbbc3cb87571b852a9685fc042e5cbc6c9", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/41ac3adbbc3cb87571b852a9685fc042e5cbc6c9", "committedDate": "2020-11-05T18:05:16Z", "message": "Address PR comments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f207defb936280f5767b8c1fe66e0502afa6af62", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f207defb936280f5767b8c1fe66e0502afa6af62", "committedDate": "2020-11-05T16:29:21Z", "message": "Address PR comments."}, "afterCommit": {"oid": "41ac3adbbc3cb87571b852a9685fc042e5cbc6c9", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/41ac3adbbc3cb87571b852a9685fc042e5cbc6c9", "committedDate": "2020-11-05T18:05:16Z", "message": "Address PR comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTgxMzU2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-524581356", "createdAt": "2020-11-05T19:11:56Z", "commit": {"oid": "41ac3adbbc3cb87571b852a9685fc042e5cbc6c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOToxMTo1NlrOHuSUjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOToxMTo1NlrOHuSUjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5NjcxOQ==", "bodyText": "remove this check now that you are reading directly.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518296719", "createdAt": "2020-11-05T19:11:56Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +72,64 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    @SuppressWarnings(\"PMD.UselessParentheses\")\n+    static synchronized void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ac3adbbc3cb87571b852a9685fc042e5cbc6c9"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTgxMzgy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-524581382", "createdAt": "2020-11-05T19:11:58Z", "commit": {"oid": "41ac3adbbc3cb87571b852a9685fc042e5cbc6c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOToxMTo1OFrOHuSUoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOToxMTo1OFrOHuSUoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5NjczNg==", "bodyText": "your frompojo can throw stuff, you should handle that.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518296736", "createdAt": "2020-11-05T19:11:58Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +72,64 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    @SuppressWarnings(\"PMD.UselessParentheses\")\n+    static synchronized void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            return;\n+        }\n+        LoggerConfiguration configuration = fromPojo(loggingTopics.toPOJO());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ac3adbbc3cb87571b852a9685fc042e5cbc6c9"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "757d950910682700fb54201c13e3d815c9e0dd06", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/757d950910682700fb54201c13e3d815c9e0dd06", "committedDate": "2020-11-05T21:09:23Z", "message": "Address PR comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Njc4NjAy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-524678602", "createdAt": "2020-11-05T21:15:59Z", "commit": {"oid": "757d950910682700fb54201c13e3d815c9e0dd06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMToxNTo1OVrOHuWy0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMToxNTo1OVrOHuWy0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM3MDAwMg==", "bodyText": "remove this check", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518370002", "createdAt": "2020-11-05T21:15:59Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +65,76 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    @SuppressWarnings(\"PMD.UselessParentheses\")\n+    static synchronized void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingTopics == null) {\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "757d950910682700fb54201c13e3d815c9e0dd06"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Njc5NTM5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-524679539", "createdAt": "2020-11-05T21:17:22Z", "commit": {"oid": "757d950910682700fb54201c13e3d815c9e0dd06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMToxNzoyMlrOHuW46A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMToxNzoyMlrOHuW46A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM3MTU2MA==", "bodyText": "You're having to do a lot because of the static nature of this. Can you check the usage of this class and see if you can just make it non-static. That should reduce a lot of the funkiness.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518371560", "createdAt": "2020-11-05T21:17:22Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,53 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.aws.greengrass.config.Node;\n+import com.aws.greengrass.config.Topics;\n+import com.aws.greengrass.config.WhatHappened;\n+import com.aws.greengrass.deployment.DeviceConfiguration;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.LogFormat;\n+import com.aws.greengrass.logging.impl.config.LogStore;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import org.slf4j.event.Level;\n+\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+import java.util.Map;\n+import java.util.Objects;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static Topics loggingTopics;\n+    private static Kernel kernel;\n+    private static LoggerConfiguration currentConfiguration;\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "757d950910682700fb54201c13e3d815c9e0dd06"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8b7a72baf9d42417b6c57571a621c88beaa2390", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a8b7a72baf9d42417b6c57571a621c88beaa2390", "committedDate": "2020-11-06T00:42:57Z", "message": "Address PR comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Nzg1NzE5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-524785719", "createdAt": "2020-11-06T00:58:43Z", "commit": {"oid": "a8b7a72baf9d42417b6c57571a621c88beaa2390"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMDo1ODo0M1rOHucXYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMDo1ODo0M1rOHucXYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2MTI4Mg==", "bodyText": "now that this isn't static, remove the kernel as a parameter from all of these.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518461282", "createdAt": "2020-11-06T00:58:43Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -162,9 +189,48 @@ private void initializeNucleusComponentConfig() {\n         mainDependencies.add(DEFAULT_NUCLEUS_COMPONENT_NAME);\n         kernel.getConfig().lookup(SERVICES_NAMESPACE_TOPIC, MAIN_SERVICE_NAME, SERVICE_DEPENDENCIES_NAMESPACE_TOPIC)\n                 .dflt(mainDependencies);\n+        handleLoggingConfig(kernel);\n     }\n \n-    private String getComponentType(String serviceName) {\n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    private void handleLoggingConfig(Kernel kernel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8b7a72baf9d42417b6c57571a621c88beaa2390"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Nzg1OTI2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-524785926", "createdAt": "2020-11-06T00:59:20Z", "commit": {"oid": "a8b7a72baf9d42417b6c57571a621c88beaa2390"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMDo1OToyMFrOHucYLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMDo1OToyMFrOHucYLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2MTQ4NA==", "bodyText": "I think you can undo all these changes now", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518461484", "createdAt": "2020-11-06T00:59:20Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -135,20 +154,28 @@ public DeviceConfiguration(Kernel kernel, String thingName, String iotDataEndpoi\n         validate();\n     }\n \n+    /**\n+     * Get the logging configuration.\n+     * @param kernel    {@link Kernel}\n+     * @return  Configuration for logger.\n+     */\n+    public Topics getLoggingConfigurationTopic(Kernel kernel) {\n+        return kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel).getLeft(),\n+                CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS);\n+    }\n+\n     /**\n      * Get the Nucleus component name to lookup the configuration in the right place. If no component of type Nucleus\n      * exists, create service config for the default Nucleus component.\n+     * @param kernel {@link Kernel}\n      */\n-    private String getNucleusComponentName() {\n+    private Pair<String, Boolean> getNucleusComponentName(Kernel kernel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8b7a72baf9d42417b6c57571a621c88beaa2390"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2a860f583400669b1a40acfade23e7ed1e538e7", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c2a860f583400669b1a40acfade23e7ed1e538e7", "committedDate": "2020-11-06T01:12:32Z", "message": "Address PR comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "411de9406c4d109527dd75605a458394370f47e7", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/411de9406c4d109527dd75605a458394370f47e7", "committedDate": "2020-11-06T01:40:16Z", "message": "Address PR comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NDIxNTc2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-525421576", "createdAt": "2020-11-06T19:09:29Z", "commit": {"oid": "411de9406c4d109527dd75605a458394370f47e7"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxOTowOToyOVrOHu6NSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxOToxMToyMFrOHu6QtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk1MDIxOA==", "bodyText": "change back?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518950218", "createdAt": "2020-11-06T19:09:29Z", "author": {"login": "hui-yang"}, "path": "pom.xml", "diffHunk": "@@ -96,7 +96,7 @@\n         <dependency>\n             <groupId>com.aws.greengrass</groupId>\n             <artifactId>logging</artifactId>\n-            <version>0.0.0-SNAPSHOT</version>\n+            <version>0.0.0-moveloggingcofig-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411de9406c4d109527dd75605a458394370f47e7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk1MTA5Mw==", "bodyText": "nit: define these constants in logging repo", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518951093", "createdAt": "2020-11-06T19:11:20Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -417,5 +478,38 @@ private void validateDeviceConfiguration(String thingName, String certificateFil\n         }\n     }\n \n-\n+    /**\n+     * Get the logger configuration from POJO.\n+     * @param pojoMap   The map containing logger configuration.\n+     * @return  the logger configuration.\n+     * @throws IllegalArgumentException if the POJO map has an invalid argument.\n+     */\n+    private LoggerConfiguration fromPojo(Map<String, Object> pojoMap) {\n+        LoggerConfiguration configuration = LoggerConfiguration.builder().build();\n+        pojoMap.forEach((s, o) -> {\n+            switch (s) {\n+                case \"level\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411de9406c4d109527dd75605a458394370f47e7"}, "originalPosition": 142}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "646873c4a88a9c5430f8d17a3956afd4f3625c95", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/646873c4a88a9c5430f8d17a3956afd4f3625c95", "committedDate": "2020-11-10T17:12:32Z", "message": "Merge branch 'master' into moveloggingcofig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "072fb79d4d92077c36e223b4bc4a98848895a233", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/072fb79d4d92077c36e223b4bc4a98848895a233", "committedDate": "2020-11-10T17:22:27Z", "message": "Revert back to use normal logging version dependency in pom."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab7f44c71e49a4be144a53bc50cb426a8bb199b6", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ab7f44c71e49a4be144a53bc50cb426a8bb199b6", "committedDate": "2020-11-10T23:02:02Z", "message": "Merge branch 'master' into moveloggingcofig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Njg3MTgx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-527687181", "createdAt": "2020-11-10T23:22:16Z", "commit": {"oid": "ab7f44c71e49a4be144a53bc50cb426a8bb199b6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzoyMjoxNlrOHwzfEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzoyMjozOFrOHwzfqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzNzIzNQ==", "bodyText": "use getTopics(NUCLEUS_CONFIG_LOGGING_TOPICS)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r520937235", "createdAt": "2020-11-10T23:22:16Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -136,14 +150,24 @@ public DeviceConfiguration(Kernel kernel, String thingName, String iotDataEndpoi\n         validate();\n     }\n \n+    /**\n+     * Get the logging configuration.\n+     * @return  Configuration for logger.\n+     */\n+    public Topics getLoggingConfigurationTopic() {\n+        return kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, this.nucleusComponentName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab7f44c71e49a4be144a53bc50cb426a8bb199b6"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzNzM4Ng==", "bodyText": "rename to topics", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r520937386", "createdAt": "2020-11-10T23:22:38Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -136,14 +150,24 @@ public DeviceConfiguration(Kernel kernel, String thingName, String iotDataEndpoi\n         validate();\n     }\n \n+    /**\n+     * Get the logging configuration.\n+     * @return  Configuration for logger.\n+     */\n+    public Topics getLoggingConfigurationTopic() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab7f44c71e49a4be144a53bc50cb426a8bb199b6"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f69c6bcb78ff626cdd30a6a0a8eb60fc5ac2c53", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4f69c6bcb78ff626cdd30a6a0a8eb60fc5ac2c53", "committedDate": "2020-11-11T00:47:23Z", "message": "Address PR comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NzYyNjUx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-527762651", "createdAt": "2020-11-11T00:50:57Z", "commit": {"oid": "4f69c6bcb78ff626cdd30a6a0a8eb60fc5ac2c53"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e01c7931d4c1f147c6f6c8923a05802781a49bb", "author": {"user": {"login": "nikkhilmuthye", "name": "Nikkhil Muthye"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8e01c7931d4c1f147c6f6c8923a05802781a49bb", "committedDate": "2020-11-11T01:07:34Z", "message": "Merge branch 'master' into moveloggingcofig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NzcyMjc1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#pullrequestreview-527772275", "createdAt": "2020-11-11T01:09:45Z", "commit": {"oid": "8e01c7931d4c1f147c6f6c8923a05802781a49bb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2914, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}