{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMTI4MDM3", "number": 131, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0NTowOVrODq_6Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoyOToyOVrODrDTsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDEzOTIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0NTowOVrOF7F4hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzoxNTo0M1rOF7GlPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNjY5NQ==", "bodyText": "NIT: if not too much change, can you update the function name to outputString() ?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397506695", "createdAt": "2020-03-24T22:45:09Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "diffHunk": "@@ -344,15 +348,16 @@ private void exec() {\n      * Get the stdout and stderr output as a string.\n      *\n      * @return String of output.\n+     * @throws InterruptedException if thread is interrupted while executing\n      */\n-    public String asString() {\n+    public String asString() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxODE0MQ==", "bodyText": "Ok", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397518141", "createdAt": "2020-03-24T23:15:43Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "diffHunk": "@@ -344,15 +348,16 @@ private void exec() {\n      * Get the stdout and stderr output as a string.\n      *\n      * @return String of output.\n+     * @throws InterruptedException if thread is interrupted while executing\n      */\n-    public String asString() {\n+    public String asString() throws InterruptedException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNjY5NQ=="}, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDE0Mzg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0NzowMFrOF7F7Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzoxNTozNVrOF7GlGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNzM5MQ==", "bodyText": "Why InterruptedException can be throw here?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397507391", "createdAt": "2020-03-24T22:47:00Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "diffHunk": "@@ -46,27 +46,31 @@\n         if (Files.exists(Paths.get(\"/usr/bin/yum\"))) {\n             ranks.put(\"fedora\", 11);\n         }\n-        String sysver = Exec.sh(\"uname -a\").toLowerCase();\n-        if (sysver.contains(\"ubuntu\")) {\n-            ranks.put(\"ubuntu\", 20);\n-        }\n-        if (sysver.contains(\"darwin\")) {\n-            ranks.put(\"macos\", 20);\n-        }\n-        if (sysver.contains(\"raspbian\")) {\n-            ranks.put(\"raspbian\", 22);\n-        }\n-        if (sysver.contains(\"qnx\")) {\n-            ranks.put(\"qnx\", 22);\n-        }\n-        if (sysver.contains(\"cygwin\")) {\n-            ranks.put(\"cygwin\", 22);\n-        }\n-        if (sysver.contains(\"freebsd\")) {\n-            ranks.put(\"freebsd\", 22);\n-        }\n-        if (sysver.contains(\"solaris\") || sysver.contains(\"sunos\")) {\n-            ranks.put(\"solaris\", 22);\n+        try {\n+            String sysver = Exec.sh(\"uname -a\").toLowerCase();\n+            if (sysver.contains(\"ubuntu\")) {\n+                ranks.put(\"ubuntu\", 20);\n+            }\n+            if (sysver.contains(\"darwin\")) {\n+                ranks.put(\"macos\", 20);\n+            }\n+            if (sysver.contains(\"raspbian\")) {\n+                ranks.put(\"raspbian\", 22);\n+            }\n+            if (sysver.contains(\"qnx\")) {\n+                ranks.put(\"qnx\", 22);\n+            }\n+            if (sysver.contains(\"cygwin\")) {\n+                ranks.put(\"cygwin\", 22);\n+            }\n+            if (sysver.contains(\"freebsd\")) {\n+                ranks.put(\"freebsd\", 22);\n+            }\n+            if (sysver.contains(\"solaris\") || sysver.contains(\"sunos\")) {\n+                ranks.put(\"solaris\", 22);\n+            }\n+        } catch (InterruptedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxODEwNg==", "bodyText": "Exec can throw.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397518106", "createdAt": "2020-03-24T23:15:35Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "diffHunk": "@@ -46,27 +46,31 @@\n         if (Files.exists(Paths.get(\"/usr/bin/yum\"))) {\n             ranks.put(\"fedora\", 11);\n         }\n-        String sysver = Exec.sh(\"uname -a\").toLowerCase();\n-        if (sysver.contains(\"ubuntu\")) {\n-            ranks.put(\"ubuntu\", 20);\n-        }\n-        if (sysver.contains(\"darwin\")) {\n-            ranks.put(\"macos\", 20);\n-        }\n-        if (sysver.contains(\"raspbian\")) {\n-            ranks.put(\"raspbian\", 22);\n-        }\n-        if (sysver.contains(\"qnx\")) {\n-            ranks.put(\"qnx\", 22);\n-        }\n-        if (sysver.contains(\"cygwin\")) {\n-            ranks.put(\"cygwin\", 22);\n-        }\n-        if (sysver.contains(\"freebsd\")) {\n-            ranks.put(\"freebsd\", 22);\n-        }\n-        if (sysver.contains(\"solaris\") || sysver.contains(\"sunos\")) {\n-            ranks.put(\"solaris\", 22);\n+        try {\n+            String sysver = Exec.sh(\"uname -a\").toLowerCase();\n+            if (sysver.contains(\"ubuntu\")) {\n+                ranks.put(\"ubuntu\", 20);\n+            }\n+            if (sysver.contains(\"darwin\")) {\n+                ranks.put(\"macos\", 20);\n+            }\n+            if (sysver.contains(\"raspbian\")) {\n+                ranks.put(\"raspbian\", 22);\n+            }\n+            if (sysver.contains(\"qnx\")) {\n+                ranks.put(\"qnx\", 22);\n+            }\n+            if (sysver.contains(\"cygwin\")) {\n+                ranks.put(\"cygwin\", 22);\n+            }\n+            if (sysver.contains(\"freebsd\")) {\n+                ranks.put(\"freebsd\", 22);\n+            }\n+            if (sysver.contains(\"solaris\") || sysver.contains(\"sunos\")) {\n+                ranks.put(\"solaris\", 22);\n+            }\n+        } catch (InterruptedException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNzM5MQ=="}, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDE0NjU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0Nzo1MlrOF7F8sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzoxNToyNFrOF7Gk0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNzc2Mw==", "bodyText": "Can we wrap the try catch around only this line?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397507763", "createdAt": "2020-03-24T22:47:52Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "diffHunk": "@@ -46,27 +46,31 @@\n         if (Files.exists(Paths.get(\"/usr/bin/yum\"))) {\n             ranks.put(\"fedora\", 11);\n         }\n-        String sysver = Exec.sh(\"uname -a\").toLowerCase();\n-        if (sysver.contains(\"ubuntu\")) {\n-            ranks.put(\"ubuntu\", 20);\n-        }\n-        if (sysver.contains(\"darwin\")) {\n-            ranks.put(\"macos\", 20);\n-        }\n-        if (sysver.contains(\"raspbian\")) {\n-            ranks.put(\"raspbian\", 22);\n-        }\n-        if (sysver.contains(\"qnx\")) {\n-            ranks.put(\"qnx\", 22);\n-        }\n-        if (sysver.contains(\"cygwin\")) {\n-            ranks.put(\"cygwin\", 22);\n-        }\n-        if (sysver.contains(\"freebsd\")) {\n-            ranks.put(\"freebsd\", 22);\n-        }\n-        if (sysver.contains(\"solaris\") || sysver.contains(\"sunos\")) {\n-            ranks.put(\"solaris\", 22);\n+        try {\n+            String sysver = Exec.sh(\"uname -a\").toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxODAzMw==", "bodyText": "The remaining code requires the variable so it doesn't make sense to do it otherwise.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397518033", "createdAt": "2020-03-24T23:15:24Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "diffHunk": "@@ -46,27 +46,31 @@\n         if (Files.exists(Paths.get(\"/usr/bin/yum\"))) {\n             ranks.put(\"fedora\", 11);\n         }\n-        String sysver = Exec.sh(\"uname -a\").toLowerCase();\n-        if (sysver.contains(\"ubuntu\")) {\n-            ranks.put(\"ubuntu\", 20);\n-        }\n-        if (sysver.contains(\"darwin\")) {\n-            ranks.put(\"macos\", 20);\n-        }\n-        if (sysver.contains(\"raspbian\")) {\n-            ranks.put(\"raspbian\", 22);\n-        }\n-        if (sysver.contains(\"qnx\")) {\n-            ranks.put(\"qnx\", 22);\n-        }\n-        if (sysver.contains(\"cygwin\")) {\n-            ranks.put(\"cygwin\", 22);\n-        }\n-        if (sysver.contains(\"freebsd\")) {\n-            ranks.put(\"freebsd\", 22);\n-        }\n-        if (sysver.contains(\"solaris\") || sysver.contains(\"sunos\")) {\n-            ranks.put(\"solaris\", 22);\n+        try {\n+            String sysver = Exec.sh(\"uname -a\").toLowerCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNzc2Mw=="}, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDE5NjE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzowODoxNVrOF7GalQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzoxNDo1NFrOF7GkMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNTQxMw==", "bodyText": "why not log this? whats the advantage of sending this to sys.err than logging at error.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397515413", "createdAt": "2020-03-24T23:08:15Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "diffHunk": "@@ -46,27 +46,31 @@\n         if (Files.exists(Paths.get(\"/usr/bin/yum\"))) {\n             ranks.put(\"fedora\", 11);\n         }\n-        String sysver = Exec.sh(\"uname -a\").toLowerCase();\n-        if (sysver.contains(\"ubuntu\")) {\n-            ranks.put(\"ubuntu\", 20);\n-        }\n-        if (sysver.contains(\"darwin\")) {\n-            ranks.put(\"macos\", 20);\n-        }\n-        if (sysver.contains(\"raspbian\")) {\n-            ranks.put(\"raspbian\", 22);\n-        }\n-        if (sysver.contains(\"qnx\")) {\n-            ranks.put(\"qnx\", 22);\n-        }\n-        if (sysver.contains(\"cygwin\")) {\n-            ranks.put(\"cygwin\", 22);\n-        }\n-        if (sysver.contains(\"freebsd\")) {\n-            ranks.put(\"freebsd\", 22);\n-        }\n-        if (sysver.contains(\"solaris\") || sysver.contains(\"sunos\")) {\n-            ranks.put(\"solaris\", 22);\n+        try {\n+            String sysver = Exec.sh(\"uname -a\").toLowerCase();\n+            if (sysver.contains(\"ubuntu\")) {\n+                ranks.put(\"ubuntu\", 20);\n+            }\n+            if (sysver.contains(\"darwin\")) {\n+                ranks.put(\"macos\", 20);\n+            }\n+            if (sysver.contains(\"raspbian\")) {\n+                ranks.put(\"raspbian\", 22);\n+            }\n+            if (sysver.contains(\"qnx\")) {\n+                ranks.put(\"qnx\", 22);\n+            }\n+            if (sysver.contains(\"cygwin\")) {\n+                ranks.put(\"cygwin\", 22);\n+            }\n+            if (sysver.contains(\"freebsd\")) {\n+                ranks.put(\"freebsd\", 22);\n+            }\n+            if (sysver.contains(\"solaris\") || sysver.contains(\"sunos\")) {\n+                ranks.put(\"solaris\", 22);\n+            }\n+        } catch (InterruptedException e) {\n+            e.printStackTrace(System.err);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNzg3Mg==", "bodyText": "This is a static block which runs immediately on import, so the logger won't necessarily be setup. I will change it to use the logger, but it may break when the logger starts reading from config.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397517872", "createdAt": "2020-03-24T23:14:54Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "diffHunk": "@@ -46,27 +46,31 @@\n         if (Files.exists(Paths.get(\"/usr/bin/yum\"))) {\n             ranks.put(\"fedora\", 11);\n         }\n-        String sysver = Exec.sh(\"uname -a\").toLowerCase();\n-        if (sysver.contains(\"ubuntu\")) {\n-            ranks.put(\"ubuntu\", 20);\n-        }\n-        if (sysver.contains(\"darwin\")) {\n-            ranks.put(\"macos\", 20);\n-        }\n-        if (sysver.contains(\"raspbian\")) {\n-            ranks.put(\"raspbian\", 22);\n-        }\n-        if (sysver.contains(\"qnx\")) {\n-            ranks.put(\"qnx\", 22);\n-        }\n-        if (sysver.contains(\"cygwin\")) {\n-            ranks.put(\"cygwin\", 22);\n-        }\n-        if (sysver.contains(\"freebsd\")) {\n-            ranks.put(\"freebsd\", 22);\n-        }\n-        if (sysver.contains(\"solaris\") || sysver.contains(\"sunos\")) {\n-            ranks.put(\"solaris\", 22);\n+        try {\n+            String sysver = Exec.sh(\"uname -a\").toLowerCase();\n+            if (sysver.contains(\"ubuntu\")) {\n+                ranks.put(\"ubuntu\", 20);\n+            }\n+            if (sysver.contains(\"darwin\")) {\n+                ranks.put(\"macos\", 20);\n+            }\n+            if (sysver.contains(\"raspbian\")) {\n+                ranks.put(\"raspbian\", 22);\n+            }\n+            if (sysver.contains(\"qnx\")) {\n+                ranks.put(\"qnx\", 22);\n+            }\n+            if (sysver.contains(\"cygwin\")) {\n+                ranks.put(\"cygwin\", 22);\n+            }\n+            if (sysver.contains(\"freebsd\")) {\n+                ranks.put(\"freebsd\", 22);\n+            }\n+            if (sysver.contains(\"solaris\") || sysver.contains(\"sunos\")) {\n+                ranks.put(\"solaris\", 22);\n+            }\n+        } catch (InterruptedException e) {\n+            e.printStackTrace(System.err);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNTQxMw=="}, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDMzMjEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDowODozMlrOF7HqqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDozMzozMlrOF7IH4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNTkxMw==", "bodyText": "What's the advantage of using thread pool instead of Thread here? These are long running threads that have the same lifetime as the services themselves. It doesn't seem like we can save any thread.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397535913", "createdAt": "2020-03-25T00:08:32Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -807,8 +798,7 @@ public String getName() {\n     @Override\n     public void postInject() {\n         initDependenciesTopic();\n-        //TODO: Use better threadPool mechanism\n-        lifeCycleThread = new Thread(() -> {\n+        lifecycleFuture = context.get(ExecutorService.class).submit(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0MzM5Mg==", "bodyText": "No, we won't save any thread except perhaps when we add or remove a service then a thread can be reused.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397543392", "createdAt": "2020-03-25T00:33:32Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -807,8 +798,7 @@ public String getName() {\n     @Override\n     public void postInject() {\n         initDependenciesTopic();\n-        //TODO: Use better threadPool mechanism\n-        lifeCycleThread = new Thread(() -> {\n+        lifecycleFuture = context.get(ExecutorService.class).submit(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNTkxMw=="}, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 149}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDMzNDU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDowOTo0M1rOF7HsGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDowOTo0M1rOF7HsGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNjI4Mg==", "bodyText": "update java doc?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397536282", "createdAt": "2020-03-25T00:09:43Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -618,27 +616,22 @@ public boolean isErrored() {\n      * Called when this service is known to be needed to make sure that required\n      * additional software is installed.\n      */\n-    protected void install() {\n+    protected void install() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDMzNDk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDowOTo1M1rOF7HsVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDowOTo1M1rOF7HsVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNjM0Mg==", "bodyText": "update doc, this is worth documenting", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397536342", "createdAt": "2020-03-25T00:09:53Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -618,27 +616,22 @@ public boolean isErrored() {\n      * Called when this service is known to be needed to make sure that required\n      * additional software is installed.\n      */\n-    protected void install() {\n+    protected void install() throws InterruptedException {\n     }\n \n     /**\n      * Called when all dependencies are RUNNING. If there are no dependencies,\n      * it is called right after postInject.  The service doesn't transition to RUNNING\n      * until *after* this state is complete.\n      */\n-    protected void startup() {\n+    protected void startup() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDMzNjU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDoxMDoyN1rOF7HtPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDoxMDoyN1rOF7HtPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNjU3Mg==", "bodyText": "update doc to document the behavior", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397536572", "createdAt": "2020-03-25T00:10:27Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -618,27 +616,22 @@ public boolean isErrored() {\n      * Called when this service is known to be needed to make sure that required\n      * additional software is installed.\n      */\n-    protected void install() {\n+    protected void install() throws InterruptedException {\n     }\n \n     /**\n      * Called when all dependencies are RUNNING. If there are no dependencies,\n      * it is called right after postInject.  The service doesn't transition to RUNNING\n      * until *after* this state is complete.\n      */\n-    protected void startup() {\n+    protected void startup() throws InterruptedException {\n         reportState(State.RUNNING);\n     }\n \n-    @Deprecated\n-    public void run() {\n-        reportState(State.FINISHED);\n-    }\n-\n     /**\n      * Called when the object's state leaves RUNNING.\n      */\n-    protected void shutdown() {\n+    protected void shutdown() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDM0MDk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDoxMjo0MlrOF7HvyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDoxMjo0MlrOF7HvyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNzIyNA==", "bodyText": "Add comment explaining why we populate up the InteruptedException.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397537224", "createdAt": "2020-03-25T00:12:42Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "diffHunk": "@@ -329,11 +329,15 @@ private void exec() {\n                         (stderr != null ? stderr : stdout).accept(\"\\n[TIMEOUT after InterruptedException]\\n\");\n                         process.destroyForcibly();\n                     }\n+                    throw ie;\n                 }\n                 stderrc.join(5000);\n                 stdoutc.join(5000);\n             }\n         } catch (Throwable ex) {\n+            if (ex instanceof InterruptedException) {\n+                throw (InterruptedException) ex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDM0NDY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDoxNDoxMVrOF7HxzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDoxNDoxMVrOF7HxzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNzc0MQ==", "bodyText": "log here?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397537741", "createdAt": "2020-03-25T00:14:11Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -121,7 +120,12 @@ public void startup() {\n     @Override\n     public void shutdown() {\n         inShutdown = true;\n-        run(\"shutdown\", null);\n+        try {\n+            run(\"shutdown\", null);\n+        } catch (InterruptedException ex) {\n+            inShutdown = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb83d2a454e7eae4b0b9a4f97cd0b81194b6f8e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDY5MTU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoyNzoyMFrOF7K8_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoyNzoyMFrOF7K8_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4OTc1Nw==", "bodyText": "NIT:\ntry {\n} catch(InterruptedException e) {\n  logger.Warn()\n} catch(Throwable t) {\n  reportError\n} finally {\n}", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397589757", "createdAt": "2020-03-25T03:27:20Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -413,8 +411,13 @@ private void startStateTransition() throws InterruptedException {\n                         try {\n                             install();\n                         } catch (Throwable t) {\n-                            reportState(State.ERRORED);\n-                            logger.atError().setEventType(\"service-install-error\").setCause(t).log();\n+                            if (t instanceof InterruptedException) {\n+                                logger.atWarn(\"service-install-interrupted\")\n+                                        .log(\"Service interrupted while running install\");\n+                            } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50d3074288a8f8323d008f3d3277305a3b722467"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDY5NTU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoyOToyOVrOF7K_Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoyOToyOVrOF7K_Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5MDMzMA==", "bodyText": "ditto", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/131#discussion_r397590330", "createdAt": "2020-03-25T03:29:29Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -807,33 +827,35 @@ public String getName() {\n     @Override\n     public void postInject() {\n         initDependenciesTopic();\n-        //TODO: Use better threadPool mechanism\n-        lifeCycleThread = new Thread(() -> {\n+        lifecycleFuture = context.get(ExecutorService.class).submit(() -> {\n             while (!isClosed.get()) {\n                 try {\n                     startStateTransition();\n                     return;\n                 } catch (Throwable e) {\n+                    if (e instanceof InterruptedException) {\n+                        logger.atWarn().setEventType(\"service-state-transition-interrupted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50d3074288a8f8323d008f3d3277305a3b722467"}, "originalPosition": 221}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4937, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}