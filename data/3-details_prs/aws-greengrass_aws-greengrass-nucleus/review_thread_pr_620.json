{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NTI4MDM2", "number": 620, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzozNTowNFrOE1U-Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzozNTowNFrOE1U-Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzUzNTU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/software/amazon/awssdk/eventstreamrpc/ServiceOperationMappingContinuationHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzozNTowNFrOHtipnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzozNTowNFrOHtipnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUxNTY3Ng==", "bodyText": "fine for now, but ideally we wouldn't be calling string.format and let the logger do it instead.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/620#discussion_r517515676", "createdAt": "2020-11-04T17:35:04Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/software/amazon/awssdk/eventstreamrpc/ServiceOperationMappingContinuationHandler.java", "diffHunk": "@@ -100,19 +101,19 @@ protected void onConnectRequest(List<Header> headers, byte[] payload) {\n                         throw new RuntimeException(\"Unknown authorization decision for \" + authenticationData.getIdentityLabel());\n                 }\n             } else { //version mismatch\n-                LOGGER.warning(String.format(\"Client version {%s} mismatches server version {%s}\",\n+                LOGGER.warn(String.format(\"Client version {%s} mismatches server version {%s}\",\n                         versionHeader.isPresent() ? versionHeader.get() : \"null\",\n                         Version.getInstance().getVersionString()));\n             }\n         } catch (Exception e) {\n-            LOGGER.severe(String.format(\"%s occurred while attempting to authN/authZ connect: %s\", e.getClass(), e.getMessage()));\n+            LOGGER.error(String.format(\"%s occurred while attempting to authN/authZ connect: %s\", e.getClass(), e.getMessage()));\n         } finally {\n             final String authLabel =  authenticationData != null ? authenticationData.getIdentityLabel() : \"null\";\n             LOGGER.info(\"Sending connect response for \" + authLabel);\n             connection.sendProtocolMessage(null, null, acceptResponseType, responseMessageFlag[0])\n                 .whenComplete((res, ex) -> {\n                     if (ex != null) {\n-                        LOGGER.severe(String.format(\"Sending connection response for %s threw exception (%s): %s\",\n+                        LOGGER.error(String.format(\"Sending connection response for %s threw exception (%s): %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "710a3c5800b59465d93ee07c952e29084a0346a8"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 472, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}