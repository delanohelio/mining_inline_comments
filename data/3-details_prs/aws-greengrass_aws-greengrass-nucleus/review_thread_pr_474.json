{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMjUxNDMz", "number": 474, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzozNTozOFrOEni5tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzozNTozOFrOEni5tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTAxNzUwOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzozNTozOFrOHYMr0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0MDoxNlrOHYM0sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNTY5OA==", "bodyText": "the problem is that getPeriodPublishMetricsFuture can return null. Are you 100% sure that at this point, it cannot be null?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/474#discussion_r495135698", "createdAt": "2020-09-25T17:35:38Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java", "diffHunk": "@@ -104,7 +102,8 @@ void GIVEN_kernel_running_with_telemetry_config_WHEN_launch_THEN_metrics_are_pub\n         TimeUnit.SECONDS.sleep(periodicInterval + 1);\n         assertTrue(Coerce.toLong(telTopics.find(RUNTIME_STORE_NAMESPACE_TOPIC,\n                 TELEMETRY_LAST_PERIODIC_AGGREGATION_TIME_TOPIC)) > lastAgg);\n-\n+        long delay = ta.getPeriodicPublishMetricsFuture().getDelay(TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b96edef4199ca7746f3ab925a3fe04e0aaa5a8d5"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNzk2OA==", "bodyText": "Yes, by this time the first publish is also done which is scheduled using the future. It cannot be null.\nThe previous check was too early for periodPublishMetricsFuture to be not null as it is assigned to be null when TA starts.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/474#discussion_r495137968", "createdAt": "2020-09-25T17:40:16Z", "author": {"login": "saranyailla"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/telemetry/TelemetryAgentTest.java", "diffHunk": "@@ -104,7 +102,8 @@ void GIVEN_kernel_running_with_telemetry_config_WHEN_launch_THEN_metrics_are_pub\n         TimeUnit.SECONDS.sleep(periodicInterval + 1);\n         assertTrue(Coerce.toLong(telTopics.find(RUNTIME_STORE_NAMESPACE_TOPIC,\n                 TELEMETRY_LAST_PERIODIC_AGGREGATION_TIME_TOPIC)) > lastAgg);\n-\n+        long delay = ta.getPeriodicPublishMetricsFuture().getDelay(TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNTY5OA=="}, "originalCommit": {"oid": "b96edef4199ca7746f3ab925a3fe04e0aaa5a8d5"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 570, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}