{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTMzMDA3", "number": 87, "title": "Plug in parameter values from deployments into loaded packages", "bodyText": "Issue #, if available:\nDescription of changes:\nPlug in parameter values set in deployment into package objects when loading packages\nWhy is this change necessary:\nCustomers can define package parameters with default values and use them in the recipe, at the time of deployment they can choose to override package parameter values. If they do, we need to use those and replace their references in the recipe, if not, we need to use default values and still replace their references in the recipe. This change plugs in values overridden in deployment into loaded packages.\nHow was this change tested:\nAdded a test for the new code, part of this PR\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-02-28T00:00:43Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87", "merged": true, "mergeCommit": {"oid": "2bbca2adfc77ee211651dc194a5888c4dbbfbe25"}, "closed": true, "closedAt": "2020-02-28T02:08:59Z", "author": {"login": "shaguptashaikh"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIkdJtAFqTM2NjA4NDk0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcImInogFqTM2NjEyMDc1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDg0OTQw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#pullrequestreview-366084940", "createdAt": "2020-02-28T00:05:53Z", "commit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowNTo1NFrOFvldmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowNTo1NFrOFvldmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0MTE3OA==", "bodyText": "Add for the other 3 as well please (artifacts, dependencies, requires)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#discussion_r385441178", "createdAt": "2020-02-28T00:05:54Z", "author": {"login": "chaurah"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/Package.java", "diffHunk": "@@ -84,8 +85,8 @@ public Package(@JsonProperty(\"RecipeTemplateVersion\") RecipeTemplateVersion reci\n         this.version = new Semver(version.toString(), Semver.SemverType.NPM);\n         this.description = description;\n         this.publisher = publisher;\n-        this.packageParameters = packageParameters;\n-        this.lifecycle = lifecycle;\n+        this.packageParameters = packageParameters != null ? packageParameters : Collections.emptySet();\n+        this.lifecycle = lifecycle != null ? lifecycle : Collections.emptyMap();\n         this.artifacts = artifacts;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDg2MDEx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#pullrequestreview-366086011", "createdAt": "2020-02-28T00:09:01Z", "commit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowOTowMVrOFvlhXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowOTowMVrOFvlhXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0MjE0MA==", "bodyText": "This should throw an exception I think. packageMetadata or pkg should never be null at this point", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#discussion_r385442140", "createdAt": "2020-02-28T00:09:01Z", "author": {"login": "chaurah"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -240,8 +239,37 @@ Package loadPackage(String name, Map<String, PackageRegistryEntry> activePackage\n         packageCache.put(packageEntry, pkg);\n \n         for (PackageRegistryEntry.Reference dependOn : packageEntry.getDependsOn().values()) {\n-            pkg.getDependencyPackages().add(loadPackage(dependOn.getName(), activePackages, packageCache));\n+            pkg.getDependencyPackages().add(loadPackage(dependOn.getName(),\n+                    getDependencyPackageMetadata(dependOn.getName(), packageMetadata), activePackages, packageCache));\n         }\n         return pkg;\n     }\n+\n+    private void pluginParameterValues(Package pkg, PackageMetadata packageMetadata) {\n+        if (packageMetadata != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDg3MTM3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#pullrequestreview-366087137", "createdAt": "2020-02-28T00:12:25Z", "commit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDkyMDA2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#pullrequestreview-366092006", "createdAt": "2020-02-28T00:26:55Z", "commit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDoyNjo1NlrOFvl11w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDoyNjo1NlrOFvl11w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0NzM4Mw==", "bodyText": "Would putAll work here?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#discussion_r385447383", "createdAt": "2020-02-28T00:26:56Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -240,8 +239,37 @@ Package loadPackage(String name, Map<String, PackageRegistryEntry> activePackage\n         packageCache.put(packageEntry, pkg);\n \n         for (PackageRegistryEntry.Reference dependOn : packageEntry.getDependsOn().values()) {\n-            pkg.getDependencyPackages().add(loadPackage(dependOn.getName(), activePackages, packageCache));\n+            pkg.getDependencyPackages().add(loadPackage(dependOn.getName(),\n+                    getDependencyPackageMetadata(dependOn.getName(), packageMetadata), activePackages, packageCache));\n         }\n         return pkg;\n     }\n+\n+    private void pluginParameterValues(Package pkg, PackageMetadata packageMetadata) {\n+        if (packageMetadata != null) {\n+            packageMetadata.getParameters().forEach(parameterFromDeployment -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDkyMzUy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#pullrequestreview-366092352", "createdAt": "2020-02-28T00:28:03Z", "commit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDoyODowM1rOFvl2_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDoyODowM1rOFvl2_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0NzY3OA==", "bodyText": "[nit]\nNeeds reformatting, spacing looks off.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#discussion_r385447678", "createdAt": "2020-02-28T00:28:03Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/PackageMetadata.java", "diffHunk": "@@ -42,6 +45,8 @@ public PackageMetadata(String name, String version, String versionConstraint, Se\n         this.version = new Semver(version, Semver.SemverType.NPM);\n         this.versionConstraint = versionConstraint;\n         this.dependsOn = dependsOn == null ? Collections.emptySet() : Collections.unmodifiableSet(dependsOn);\n+        this.parameters = parameters == Utils.nullEmpty(parameters)? Collections.emptySet() :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDkyNjAw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#pullrequestreview-366092600", "createdAt": "2020-02-28T00:28:53Z", "commit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDoyODo1NFrOFvl34g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDozMDo1MlrOFvl5yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0NzkwNg==", "bodyText": "[nit]\nParameter not paramater.\nTypo: deployment_set_parameters...", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#discussion_r385447906", "createdAt": "2020-02-28T00:28:54Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/packagemanager/PackageManagerTest.java", "diffHunk": "@@ -205,7 +206,79 @@ void GIVEN_packages_not_registered_WHEN_load_package_THEN_fail_to_proceed() {\n         PackageRegistryEntry entryA = new PackageRegistryEntry(\"A\", new Semver(\"1.0.0\"), Collections.emptyMap());\n \n         assertThrows(PackageLoadingException.class,\n-                () -> packageManager.loadPackage(\"B\", Collections.singletonMap(\"A\", entryA), new HashMap<>()),\n+                () -> packageManager.loadPackage(\"B\", null, Collections.singletonMap(\"A\", entryA), new HashMap<>()),\n                 \"package B not found in registry\");\n     }\n+\n+    @Test\n+    void GIVEN_deployment_sets_paramaters_WHEN_load_package_invoked_THEN_plug_in_new_parameter_values()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0ODM5NA==", "bodyText": "hamcrest has a contains that would make the error message more readable if you used it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#discussion_r385448394", "createdAt": "2020-02-28T00:30:52Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/packagemanager/PackageManagerTest.java", "diffHunk": "@@ -205,7 +206,79 @@ void GIVEN_packages_not_registered_WHEN_load_package_THEN_fail_to_proceed() {\n         PackageRegistryEntry entryA = new PackageRegistryEntry(\"A\", new Semver(\"1.0.0\"), Collections.emptyMap());\n \n         assertThrows(PackageLoadingException.class,\n-                () -> packageManager.loadPackage(\"B\", Collections.singletonMap(\"A\", entryA), new HashMap<>()),\n+                () -> packageManager.loadPackage(\"B\", null, Collections.singletonMap(\"A\", entryA), new HashMap<>()),\n                 \"package B not found in registry\");\n     }\n+\n+    @Test\n+    void GIVEN_deployment_sets_paramaters_WHEN_load_package_invoked_THEN_plug_in_new_parameter_values()\n+            throws Exception {\n+        // GIVEN\n+        PackageRegistryEntry entryA = new PackageRegistryEntry(\"A\", new Semver(\"1.0.0\"), Collections.emptyMap());\n+        PackageRegistryEntry entryB = new PackageRegistryEntry(\"B\", new Semver(\"1.0.0\"), Collections.emptyMap());\n+        PackageRegistryEntry entryC = new PackageRegistryEntry(\"C\", new Semver(\"1.0.0\"), Collections.emptyMap());\n+\n+        entryA.getDependsOn().put(\"B\", new PackageRegistryEntry.Reference(\"B\", new Semver(\"1.0.0\"), \"1.0.0\"));\n+        entryA.getDependsOn().put(\"C\", new PackageRegistryEntry.Reference(\"C\", new Semver(\"1.0.0\"), \"1.0.0\"));\n+        List<PackageRegistryEntry> activePackages = Arrays.asList(entryA, entryB, entryC);\n+        when(packageRegistry.findActivePackages()).thenReturn(activePackages);\n+\n+\n+        Set<PackageParameter> packageAParams = new HashSet<>(\n+                Arrays.asList(new PackageParameter(\"PackageA_param1\", \"PackageA_param1_default\", \"String\"),\n+                        new PackageParameter(\"PackageA_param2\", \"PackageA_param2_default\", \"String\")));\n+        Set<PackageParameter> packageBParams = new HashSet<>(\n+                Arrays.asList(new PackageParameter(\"PackageB_param1\", \"PackageB_param1_default\", \"String\"),\n+                        new PackageParameter(\"PackageB_param2\", \"PackageB_param2_default\", \"String\")));\n+        Set<PackageParameter> packageCParams = new HashSet<>(\n+                Arrays.asList(new PackageParameter(\"PackageC_param1\", \"PackageC_param1_default\", \"String\"),\n+                        new PackageParameter(\"PackageC_param2\", \"PackageC_param2_default\", \"String\")));\n+\n+        Package pkgA = new Package(null, \"A\", new Semver(\"1.0.0\"), null, null, packageAParams, null, null, null, null);\n+        when(packageStore.getPackage(\"A\", new Semver(\"1.0.0\"))).thenReturn(Optional.of(pkgA));\n+        Package pkgB = new Package(null, \"B\", new Semver(\"1.0.0\"), null, null, packageBParams, null, null, null, null);\n+        when(packageStore.getPackage(\"B\", new Semver(\"1.0.0\"))).thenReturn(Optional.of(pkgB));\n+        Package pkgC = new Package(null, \"C\", new Semver(\"1.0.0\"), null, null, packageCParams, null, null, null, null);\n+        when(packageStore.getPackage(\"C\", new Semver(\"1.0.0\"))).thenReturn(Optional.of(pkgC));\n+\n+        PackageMetadata pkgMetadatsB = new PackageMetadata(\"B\", \"1.0.0\", \"1.0.0\", Collections.emptySet(),\n+                Collections.singleton(new PackageParameter(\"PackageB_param1\", \"PackageB_param1_value\", \"String\")));\n+        PackageMetadata pkgMetadatsC =\n+                new PackageMetadata(\"C\", \"1.0.0\", \"1.0.0\", Collections.emptySet(), Collections.emptySet());\n+        PackageMetadata pkgMetadatsA =\n+                new PackageMetadata(\"A\", \"1.0.0\", \"1.0.0\", new HashSet<>(Arrays.asList(pkgMetadatsB, pkgMetadatsC)),\n+                        new HashSet<>(Arrays.asList(\n+                                new PackageParameter(\"PackageA_param1\", \"PackageA_param1_value\", \"String\"),\n+                                new PackageParameter(\"PackageA_param2\", \"PackageA_param2_value\", \"String\"))));\n+\n+        // WHEN\n+        Set<Package> resolvedPackages = packageManager.resolvePackages(Collections.singleton(pkgMetadatsA)).get();\n+        Package resultPackageA = findPackageInSet(resolvedPackages, \"A\");\n+        Package resultPackageB = findPackageInSet(resultPackageA.getDependencyPackages(), \"B\");\n+        Package resultPackageC = findPackageInSet(resultPackageA.getDependencyPackages(), \"C\");\n+\n+        // THEN\n+        assertThat(\"If all param values were overridden, all should be loaded into package\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e097ffde65466c839418545518847766e63d6da"}, "originalPosition": 122}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e097ffde65466c839418545518847766e63d6da", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9e097ffde65466c839418545518847766e63d6da", "committedDate": "2020-02-27T23:56:40Z", "message": "Plug in parameter values from deployments into loaded packages"}, "afterCommit": {"oid": "0e182b77cc0c9fe43bb06386979ba792d6ac586a", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0e182b77cc0c9fe43bb06386979ba792d6ac586a", "committedDate": "2020-02-28T00:55:27Z", "message": "Plug in parameter values from deployments into loaded packages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca4f98275952a155bd598857fd63527851ff2994", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ca4f98275952a155bd598857fd63527851ff2994", "committedDate": "2020-02-28T01:01:43Z", "message": "Plug in parameter values from deployments into loaded packages"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e182b77cc0c9fe43bb06386979ba792d6ac586a", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0e182b77cc0c9fe43bb06386979ba792d6ac586a", "committedDate": "2020-02-28T00:55:27Z", "message": "Plug in parameter values from deployments into loaded packages"}, "afterCommit": {"oid": "ca4f98275952a155bd598857fd63527851ff2994", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ca4f98275952a155bd598857fd63527851ff2994", "committedDate": "2020-02-28T01:01:43Z", "message": "Plug in parameter values from deployments into loaded packages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTA3MjU2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#pullrequestreview-366107256", "createdAt": "2020-02-28T01:15:48Z", "commit": {"oid": "ca4f98275952a155bd598857fd63527851ff2994"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMToxNTo0OFrOFvmp3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMToxNjo0NlrOFvmq0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2MDcwMA==", "bodyText": "[nit]\nSeems like name can be removed since we have the metadata which contains the name.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#discussion_r385460700", "createdAt": "2020-02-28T01:15:48Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -208,17 +207,17 @@ void resolveDependencies(PackageMetadata packageMetadata, Map<String, PackageReg\n         return downloadedPackages;\n     }\n \n-    private Set<Package> loadPackages(Set<String> packageNames, Map<String, PackageRegistryEntry> activePackages)\n-            throws PackageLoadingException {\n+    private Set<Package> loadPackages(Set<PackageMetadata> proposedPackages,\n+                                      Map<String, PackageRegistryEntry> activePackages) throws PackageLoadingException {\n         Set<Package> packages = new HashSet<>();\n         Map<PackageRegistryEntry, Package> packageCache = new HashMap<>();\n-        for (String packageName : packageNames) {\n-            packages.add(loadPackage(packageName, activePackages, packageCache));\n+        for (PackageMetadata proposedPackage : proposedPackages) {\n+            packages.add(loadPackage(proposedPackage.getName(), proposedPackage, activePackages, packageCache));\n         }\n         return packages;\n     }\n \n-    Package loadPackage(String name, Map<String, PackageRegistryEntry> activePackages,\n+    Package loadPackage(String name, PackageMetadata packageMetadata, Map<String, PackageRegistryEntry> activePackages,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4f98275952a155bd598857fd63527851ff2994"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2MDk0NA==", "bodyText": "Why are we adding and removing the same thing?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#discussion_r385460944", "createdAt": "2020-02-28T01:16:46Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -237,11 +236,42 @@ Package loadPackage(String name, Map<String, PackageRegistryEntry> activePackage\n \n         Package pkg = packageOptional\n                 .orElseThrow(() -> new PackageLoadingException(String.format(\"package %s not found\", name)));\n+        pluginParameterValues(pkg, packageMetadata);\n         packageCache.put(packageEntry, pkg);\n \n         for (PackageRegistryEntry.Reference dependOn : packageEntry.getDependsOn().values()) {\n-            pkg.getDependencyPackages().add(loadPackage(dependOn.getName(), activePackages, packageCache));\n+            pkg.getDependencyPackages().add(loadPackage(dependOn.getName(),\n+                    getDependencyPackageMetadata(dependOn.getName(), packageMetadata), activePackages, packageCache));\n         }\n         return pkg;\n     }\n+\n+    private void pluginParameterValues(Package pkg, PackageMetadata packageMetadata) {\n+        if (packageMetadata != null) {\n+            packageMetadata.getParameters().forEach(parameterFromDeployment -> {\n+                if (pkg.getPackageParameters().contains(parameterFromDeployment)) {\n+                    pkg.getPackageParameters().remove(parameterFromDeployment);\n+                    pkg.getPackageParameters().add(parameterFromDeployment);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4f98275952a155bd598857fd63527851ff2994"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c65d28840fc2934859f62ff38a69fee5eea03ee", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5c65d28840fc2934859f62ff38a69fee5eea03ee", "committedDate": "2020-02-28T01:19:08Z", "message": "Merge branch 'master' into plug-in-parameters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTIwNzU1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/87#pullrequestreview-366120755", "createdAt": "2020-02-28T02:03:17Z", "commit": {"oid": "5c65d28840fc2934859f62ff38a69fee5eea03ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2285, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}