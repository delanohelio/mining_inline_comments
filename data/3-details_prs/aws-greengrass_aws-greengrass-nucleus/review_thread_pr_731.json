{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NjkwNzEz", "number": 731, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMTozMDozN1rOE9Zdlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMTozMDozN1rOE9Zdlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyODE1NzY3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloaderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMTozMDozN1rOH6Eb0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMTozMDozN1rOH6Eb0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY1MjExNQ==", "bodyText": "Didn't realize we can write this way!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/731#discussion_r530652115", "createdAt": "2020-11-25T21:30:37Z", "author": {"login": "ShirleyZheng92"}, "path": "src/test/java/com/aws/greengrass/componentmanager/plugins/GreengrassRepositoryDownloaderTest.java", "diffHunk": "@@ -94,33 +90,33 @@ void GIVEN_artifact_url_WHEN_attempt_download_THEN_task_succeed() throws Excepti\n         Path saveToPath = testCache.resolve(\"CoolService\").resolve(\"1.0.0\");\n         Files.createDirectories(saveToPath);\n \n-        GreengrassRepositoryDownloader downloader = spy(new GreengrassRepositoryDownloader(clientFactory,\n-                pkgId, artifact, saveToPath, componentStore));\n+        GreengrassRepositoryDownloader downloader =\n+                spy(new GreengrassRepositoryDownloader(clientFactory, pkgId, artifact, saveToPath, componentStore));\n+\n+        assertThat(downloader.getArtifactFilename(), is(\"artifact.txt\"));\n \n         // mock requests to get downloadSize and local file name\n         GetComponentVersionArtifactResult result =\n                 new GetComponentVersionArtifactResult().withPreSignedUrl(\"https://www.amazon.com/artifact.txt\");\n-        when(client.getComponentVersionArtifact(getComponentVersionArtifactRequestArgumentCaptor.capture())).thenReturn(result);\n+        when(client.getComponentVersionArtifact(getComponentVersionArtifactRequestArgumentCaptor.capture()))\n+                .thenReturn(result);\n \n+        // mock requests to return partial stream\n         doReturn(connection).when(downloader).connect(any());\n-        when(connection.getResponseCode()).thenReturn(HttpURLConnection.HTTP_OK);\n         when(connection.getContentLengthLong()).thenReturn(Files.size(mockArtifactPath));\n-        when(connection.getHeaderField(\"Content-Disposition\")).thenReturn(\"filename=artifact.txt\");\n-        assertThat(downloader.getArtifactFilename(), is(\"artifact.txt\"));\n-\n-        // mock requests to return partial stream\n-        when(connection.getResponseCode()).thenReturn(HttpURLConnection.HTTP_PARTIAL);\n+        when(connection.getResponseCode()).thenReturn(HttpURLConnection.HTTP_OK)\n+                .thenReturn(HttpURLConnection.HTTP_PARTIAL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29d4e502ceb6c8bc5b559eba83dd2f9c953028e2"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 315, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}