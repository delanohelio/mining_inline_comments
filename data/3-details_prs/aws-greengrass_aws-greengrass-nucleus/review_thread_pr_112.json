{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NDI3MzYz", "number": 112, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToxNzoxNVrODnoT5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMDo0NjowNlrODnrhNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODgxNTA4OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToxNzoxNVrOF1vlXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToxNzoxNVrOF1vlXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5ODQ2Mg==", "bodyText": "Since we're not awaiting these, they can just be atomic integers.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/112#discussion_r391898462", "createdAt": "2020-03-12T21:17:15Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "diffHunk": "@@ -40,29 +40,37 @@ void setup() {\n \n     @Test\n     void WHEN_kernel_shutdown_THEN_services_are_shutdown_in_reverse_dependecy_order() throws InterruptedException {\n+        CountDownLatch mainClosed = new CountDownLatch(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee10afe037278bfb77c3b1e6ef0d3597dc59fe9c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTMwMDg1OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMDoxODo0MlrOF1z8dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMDoxODo0MlrOF1z8dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2OTkwOA==", "bodyText": "Maybe change the isCloseable to FINISHED because it should be FINISHED right? Also below occurrences!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/112#discussion_r391969908", "createdAt": "2020-03-13T00:18:42Z", "author": {"login": "leaf94"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "diffHunk": "@@ -40,30 +35,37 @@ void setup() {\n \n     @Test\n     void WHEN_kernel_shutdown_THEN_services_are_shutdown_in_reverse_dependecy_order() throws InterruptedException {\n+        AtomicBoolean mainClosed = new AtomicBoolean(false);\n+        AtomicBoolean sleeperAClosed = new AtomicBoolean(false);\n+        AtomicBoolean sleeperBClosed = new AtomicBoolean(false);\n+\n+        kernel.context.addGlobalStateChangeListener((service, oldState, newState) -> {\n+            if (service.getName().equals(\"main\") && newState.isClosable()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ad6ede73cd1d5ca3f28ffb7bc8537772ea55b0"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTMwNzE5OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMDoyMzowM1rOF10AWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMDoyMzowM1rOF10AWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk3MDkwNA==", "bodyText": "Update this :)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/112#discussion_r391970904", "createdAt": "2020-03-13T00:23:03Z", "author": {"login": "leaf94"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "diffHunk": "@@ -40,30 +35,37 @@ void setup() {\n \n     @Test\n     void WHEN_kernel_shutdown_THEN_services_are_shutdown_in_reverse_dependecy_order() throws InterruptedException {\n+        AtomicBoolean mainClosed = new AtomicBoolean(false);\n+        AtomicBoolean sleeperAClosed = new AtomicBoolean(false);\n+        AtomicBoolean sleeperBClosed = new AtomicBoolean(false);\n+\n+        kernel.context.addGlobalStateChangeListener((service, oldState, newState) -> {\n+            if (service.getName().equals(\"main\") && newState.isClosable()) {\n+                mainClosed.set(true);\n+            }\n+            // Only count main as started if its dependency (new_service) has already been started", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ad6ede73cd1d5ca3f28ffb7bc8537772ea55b0"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTM0MDY5OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMDo0NjowNlrOF10UrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMDo0NjowNlrOF10UrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk3NjEwOA==", "bodyText": "As discussed offline, I think Boolean will work the same way... Since the global state listener logic will be executed one at a time...", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/112#discussion_r391976108", "createdAt": "2020-03-13T00:46:06Z", "author": {"login": "leaf94"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/KernelShutdownTest.java", "diffHunk": "@@ -40,30 +35,37 @@ void setup() {\n \n     @Test\n     void WHEN_kernel_shutdown_THEN_services_are_shutdown_in_reverse_dependecy_order() throws InterruptedException {\n+        AtomicBoolean mainClosed = new AtomicBoolean(false);\n+        AtomicBoolean sleeperAClosed = new AtomicBoolean(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ad6ede73cd1d5ca3f28ffb7bc8537772ea55b0"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4898, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}