{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDc1MjY3", "number": 174, "title": "Fixed race condition during service close", "bodyText": "Description of changes:\nFor a service in FINISHED state, when close() is closed the  following happens\n\nrequeststop() -> pushes new desired state as \"FINISHED\" to stateEventQueue\nlifecycle.setClosed(true) -> sets the closed flag in lifecycle\n\nRace condition:\nWhen a new item is available in stateEventQueue the lifecycle thread is unblocked and proceeds to process the new event. Before proceeding with the new event the lifecycle thread checks if the\nservice is closed and service is in a closable state. If both the conditions are true, the thread exits and service is marked as closed.\nDue to race condition,  if the lifecycle thread performs the check before lifecycle.setClosed(true) can be executed, lifecycle thread enters the state transitioning logic. Since the service is already in the desired state, the lifecycle thread had nothing to do but wait for the next state event.  If there is no next event, the thread waits indefinitely and causes the tests to timeout.\nHow was this change tested:\n\nReproduced the bug using Thread.sleep() and the fix was verified.\nmvn verify\n\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-04-10T21:24:32Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174", "merged": true, "mergeCommit": {"oid": "0188ad9ee5d5ccf707115ef9cd96c77981599fc0"}, "closed": true, "closedAt": "2020-04-10T23:20:36Z", "author": {"login": "fahadmohammed01"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWXmMYgH2gAyNDAyMDc1MjY3OjE5YjNjNDc3ZjBmYWZlODdiNmNkODJhOTgwZTFiNmZmMzNkMzM5YTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWZTdjAFqTM5MTY5OTIzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "19b3c477f0fafe87b6cd82a980e1b6ff33d339a8", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/19b3c477f0fafe87b6cd82a980e1b6ff33d339a8", "committedDate": "2020-04-10T21:01:57Z", "message": "ficed race condition during service close"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjcyOTA4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#pullrequestreview-391672908", "createdAt": "2020-04-10T21:29:50Z", "commit": {"oid": "19b3c477f0fafe87b6cd82a980e1b6ff33d339a8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMToyOTo1MFrOGEGX9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTozMTowMlrOGEGZgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MTkyNQ==", "bodyText": "Fantastic! Can we decrease the timeouts on the other e2e tests as well?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#discussion_r406951925", "createdAt": "2020-04-10T21:29:50Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -143,7 +143,7 @@ void GIVEN_kernel_running_with_deployed_services_WHEN_deployment_removes_package\n                         Arrays.asList(new DeploymentPackageConfiguration(\"CustomerApp\", \"1.0.0\", null, null, null),\n                                 new DeploymentPackageConfiguration(\"SomeService\", \"1.0.0\", null, null, null))).build());\n         String jobId1 = Utils.createJob(document1, targets);\n-        Utils.waitForJobToComplete(jobId1, Duration.ofMinutes(5));\n+        Utils.waitForJobToComplete(jobId1, Duration.ofMinutes(2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b3c477f0fafe87b6cd82a980e1b6ff33d339a8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1MjMyMg==", "bodyText": "Simple fix, looks great.\nJust 1 question though, does this actually work if the service is currently RUNNING? Because it needs to go through STOPPING, then FINISHED, which means that it needs to go through the loop multiple times, but since you have set it to closed, won't it stop the loop, thus preventing it from properly stopping?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#discussion_r406952322", "createdAt": "2020-04-10T21:31:02Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -256,8 +256,8 @@ protected void shutdown() throws InterruptedException {\n                 } catch (InterruptedException e) {\n                     logger.error(\"Interrupted waiting for dependers to exit\");\n                 }\n-                requestStop();\n                 lifecycle.setClosed(true);\n+                requestStop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b3c477f0fafe87b6cd82a980e1b6ff33d339a8"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjg2NjU2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#pullrequestreview-391686656", "createdAt": "2020-04-10T22:11:17Z", "commit": {"oid": "19b3c477f0fafe87b6cd82a980e1b6ff33d339a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjk3NDk0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#pullrequestreview-391697494", "createdAt": "2020-04-10T22:53:32Z", "commit": {"oid": "19b3c477f0fafe87b6cd82a980e1b6ff33d339a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjk5MjM1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/174#pullrequestreview-391699235", "createdAt": "2020-04-10T23:01:18Z", "commit": {"oid": "19b3c477f0fafe87b6cd82a980e1b6ff33d339a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2103, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}