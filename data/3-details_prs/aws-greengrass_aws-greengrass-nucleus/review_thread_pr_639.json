{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MDUzMzI3", "number": 639, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMjozMTowOFrOE2Sotw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxOTo0ODowOFrOE32Y-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzYzODk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMjozMTowOFrOHvCYSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMToyMDoyNVrOHwwCVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDEwNw==", "bodyText": "So I'm guessing we're not able to force TokenExchangeService to start up before the AuthorizationHandler, then?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r519084107", "createdAt": "2020-11-07T02:31:08Z", "author": {"login": "avipinku"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -73,6 +74,8 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n         Map<String, List<AuthorizationPolicy>> componentNameToPolicies = policyParser.parseAllAuthorizationPolicies(\n                 kernel);\n \n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk4NzUyMA==", "bodyText": "There is no fixed order in which these classes would be loaded so there is not guarantee that TokenExchangeService will start after AuthorizationHandler", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r519987520", "createdAt": "2020-11-09T17:25:01Z", "author": {"login": "k-khatri"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -73,6 +74,8 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n         Map<String, List<AuthorizationPolicy>> componentNameToPolicies = policyParser.parseAllAuthorizationPolicies(\n                 kernel);\n \n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDEwNw=="}, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNjQwOA==", "bodyText": "Ok. Do we want to remove the registration logic in the TokenExchangeService.java PostInject, if we're registering it here?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r520016408", "createdAt": "2020-11-09T18:10:41Z", "author": {"login": "avipinku"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -73,6 +74,8 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n         Map<String, List<AuthorizationPolicy>> componentNameToPolicies = policyParser.parseAllAuthorizationPolicies(\n                 kernel);\n \n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDEwNw=="}, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExNjQ1Mg==", "bodyText": "These 2 names look different aws.greengrass.TokenExchangeService and com.aws.greengrass.tes.TokenExchangeService so I guess we need to keep them", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r520116452", "createdAt": "2020-11-09T20:59:32Z", "author": {"login": "k-khatri"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -73,6 +74,8 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n         Map<String, List<AuthorizationPolicy>> componentNameToPolicies = policyParser.parseAllAuthorizationPolicies(\n                 kernel);\n \n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDEwNw=="}, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1MjA1NA==", "bodyText": "Also add \"aws.greengrass#PublishToTopic\",  \"aws.greengrass#SubscribeToTopic\" for aws.greengrass.ipc.pubsub service. Add \"aws.greengrass#PublishToIoTCore\", \"aws.greengrass#SubscribeToIoTCore\" for \"aws.greengrass.ipc.mqttproxy\" service.\nI think we dont need to add TES and secrets here, as they will always start after Auth Handler as those are services and not native classes. Let them do registration on their own, like they do it today.\n\nMake sure these constants are properly defined at a single place.\nAdd UT with bad operation fields in the config and make sure they fail", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r520152054", "createdAt": "2020-11-09T22:08:52Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -73,6 +74,8 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n         Map<String, List<AuthorizationPolicy>> componentNameToPolicies = policyParser.parseAllAuthorizationPolicies(\n                 kernel);\n \n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDEwNw=="}, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwMzQ5Nw==", "bodyText": "@prateek-y We are already doing the registration in the postInject of these classes MqttProxyIPCService and PubSubIPCService. So in that case after removing TES we don't even need this change?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r520203497", "createdAt": "2020-11-10T00:15:50Z", "author": {"login": "k-khatri"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -73,6 +74,8 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n         Map<String, List<AuthorizationPolicy>> componentNameToPolicies = policyParser.parseAllAuthorizationPolicies(\n                 kernel);\n \n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDEwNw=="}, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwNDAwOA==", "bodyText": "Only thing remains is uncommenting the exception", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r520204008", "createdAt": "2020-11-10T00:17:28Z", "author": {"login": "k-khatri"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -73,6 +74,8 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n         Map<String, List<AuthorizationPolicy>> componentNameToPolicies = policyParser.parseAllAuthorizationPolicies(\n                 kernel);\n \n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDEwNw=="}, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwNTExNQ==", "bodyText": "actually lets keep tes as well, and just initialize the map with the same operations. If register is called later, it can just override the map. We just want to make sure that when AuthHandler comes up it knows all operations.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r520205115", "createdAt": "2020-11-10T00:20:41Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -73,6 +74,8 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n         Map<String, List<AuthorizationPolicy>> componentNameToPolicies = policyParser.parseAllAuthorizationPolicies(\n                 kernel);\n \n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDEwNw=="}, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4MDcyNw==", "bodyText": "Added the them to the map also added a UT check for bad operations", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r520880727", "createdAt": "2020-11-10T21:20:25Z", "author": {"login": "k-khatri"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -73,6 +74,8 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n         Map<String, List<AuthorizationPolicy>> componentNameToPolicies = policyParser.parseAllAuthorizationPolicies(\n                 kernel);\n \n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDEwNw=="}, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzYzOTI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMjozMToyN1rOHvCYbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTowMDoyNVrOHwBaxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDE0MQ==", "bodyText": "You can remove this comment now", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r519084141", "createdAt": "2020-11-07T02:31:27Z", "author": {"login": "avipinku"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -313,9 +316,9 @@ private void isComponentRegistered(String componentName) throws AuthorizationExc\n         }\n         // TODO: [V234938383] solve the issue where the authhandler starts up and loads policies before services", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExNjkzMw==", "bodyText": "Done", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r520116933", "createdAt": "2020-11-09T21:00:25Z", "author": {"login": "k-khatri"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -313,9 +316,9 @@ private void isComponentRegistered(String componentName) throws AuthorizationExc\n         }\n         // TODO: [V234938383] solve the issue where the authhandler starts up and loads policies before services", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDE0MQ=="}, "originalCommit": {"oid": "596a77a53908809795d9ebef29e5467b6c4dcc8b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTk4MjMyOnYy", "diffSide": "LEFT", "path": "src/test/java/com/aws/greengrass/authorization/AuthorizationHandlerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxOTo0ODowMlrOHxb28Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMDozMjoxN1rOHxdPbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU5ODcwNQ==", "bodyText": "why was this section removed?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r521598705", "createdAt": "2020-11-11T19:48:02Z", "author": {"login": "avipinku"}, "path": "src/test/java/com/aws/greengrass/authorization/AuthorizationHandlerTest.java", "diffHunk": "@@ -456,15 +464,6 @@ void GIVEN_authZ_handler_WHEN_loaded_incorrect_config_THEN_load_fails(ExtensionC\n                 Collections.singletonList(getAuthZPolicy()), false);\n         assertTrue(logReceived.await(5, TimeUnit.SECONDS));\n \n-        // Now let the mock return mock topics", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43dde1143dcd0a81fe8d7a55a13aa21fdf725079"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYyMTM1Nw==", "bodyText": "Seems like this section was outdated with respect to the current code loadAuthorizationPolicies no longer returns an exception", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r521621357", "createdAt": "2020-11-11T20:32:17Z", "author": {"login": "k-khatri"}, "path": "src/test/java/com/aws/greengrass/authorization/AuthorizationHandlerTest.java", "diffHunk": "@@ -456,15 +464,6 @@ void GIVEN_authZ_handler_WHEN_loaded_incorrect_config_THEN_load_fails(ExtensionC\n                 Collections.singletonList(getAuthZPolicy()), false);\n         assertTrue(logReceived.await(5, TimeUnit.SECONDS));\n \n-        // Now let the mock return mock topics", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU5ODcwNQ=="}, "originalCommit": {"oid": "43dde1143dcd0a81fe8d7a55a13aa21fdf725079"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTk4MjY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxOTo0ODowOFrOHxb3JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMDozMjo1M1rOHxdQmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU5ODc1Ng==", "bodyText": "nit: we should move these into another method in the same way that we have componentNameToPolicies.putAll(getDefaultPolicies());", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r521598756", "createdAt": "2020-11-11T19:48:08Z", "author": {"login": "avipinku"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -69,10 +76,15 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n                                 AuthorizationPolicyParser policyParser) {\n         this.kernel = kernel;\n         this.authModule = authModule;\n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43dde1143dcd0a81fe8d7a55a13aa21fdf725079"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYyMTY1OA==", "bodyText": "May be will add this in next PR, will skip for this one", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/639#discussion_r521621658", "createdAt": "2020-11-11T20:32:53Z", "author": {"login": "k-khatri"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationHandler.java", "diffHunk": "@@ -69,10 +76,15 @@ public AuthorizationHandler(Kernel kernel,  AuthorizationModule authModule,\n                                 AuthorizationPolicyParser policyParser) {\n         this.kernel = kernel;\n         this.authModule = authModule;\n+        // Adding TES component and operation before it's default policies are fetched\n+        componentToOperationsMap.put(TOKEN_EXCHANGE_SERVICE_TOPICS, new HashSet<>(Arrays.asList(AUTHZ_TES_OPERATION)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU5ODc1Ng=="}, "originalCommit": {"oid": "43dde1143dcd0a81fe8d7a55a13aa21fdf725079"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 182, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}