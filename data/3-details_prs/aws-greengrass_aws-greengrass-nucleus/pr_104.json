{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1Nzk0MDA4", "number": 104, "title": "Update state change listener", "bodyText": "Issue #, if available:\nDescription of changes:\n\nExpand the GlobalStateChangeListener::globalServiceStateChanged to have both old and new states\nSwitch tests to use newState from event instead of getState()\n\nWhy is this change necessary:\nMany places in source code and integration tests are using this global service listener to perform some logic against the old and new state. However, If state transition is too fast, then getState() may return inconsistent result.\nFor example, let's say State transitions from A->B->C in a very short period of time, getState() may return B or C, depending on the exact call time.\nInstead, the event is deterministic and it always emit two events in order:\n\nA->B\nB->C\n\nAs a result, we could rely on the oldState and newState in event.\nHow was this change tested:\n\nmvn verify\nServiceConfigMergingTest still have possibilities to fail...\n\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-03-09T20:11:10Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/104", "merged": true, "mergeCommit": {"oid": "828a53f81ed03a8bf1cc0cbb966c32c36c7c373e"}, "closed": true, "closedAt": "2020-03-10T04:23:24Z", "author": {"login": "leaf94"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMDYm5AH2gAyMzg1Nzk0MDA4Ojg0MjQ3NWVkYWYzODk1ZTRkYmM2OTliOGE0NWNkNjVhY2I3ZmJmMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMJ1ragFqTM3MTY1OTExMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "842475edaf3895e4dbc699b8a45cd65acb7fbf32", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/842475edaf3895e4dbc699b8a45cd65acb7fbf32", "committedDate": "2020-03-09T19:49:46Z", "message": "Expand the GlobalStateChangeListener::globalServiceStateChanged to have both old and new; Switch tests to use newState from event instead of getState()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7407e7123f1b80350c44f846893b82f73595a1b", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f7407e7123f1b80350c44f846893b82f73595a1b", "committedDate": "2020-03-09T20:03:22Z", "message": "more"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDk1NjIw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/104#pullrequestreview-371495620", "createdAt": "2020-03-09T20:13:46Z", "commit": {"oid": "f7407e7123f1b80350c44f846893b82f73595a1b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMDoxMzo0NlrOFz3wIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMDoxNDoyMFrOFz3xTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzNTEzNg==", "bodyText": "Ideally with this change we should only need to check for \"RUNNING\" since it should first go to running before finished.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/104#discussion_r389935136", "createdAt": "2020-03-09T20:13:46Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java", "diffHunk": "@@ -161,21 +160,20 @@ void GIVEN_kernel_running_single_service_WHEN_merge_change_adding_nested_depende\n         CountDownLatch newServiceStarted = new CountDownLatch(1);\n \n         // Check that new_service2 starts, then new_service, and then main gets restarted\n-        kernel.context.addGlobalStateChangeListener((service, prevState) -> {\n-            if (service.getName().equals(\"new_service2\") && service.getState().equals(State.RUNNING)) {\n+        kernel.context.addGlobalStateChangeListener((service, oldState, newState) -> {\n+            if (service.getName().equals(\"new_service2\") && newState.equals(State.RUNNING)) {\n                 newService2Started.countDown();\n             }\n             if (newService2Started.getCount() == 0) {\n-                if (service.getName().equals(\"new_service\") && service.getState().equals(State.RUNNING)) {\n+                if (service.getName().equals(\"new_service\") && newState.equals(State.RUNNING)) {\n                     newServiceStarted.countDown();\n                 }\n             }\n             // Only count main as started if its dependency (new_service) has already been started\n-            // TODO change to use new state from event instead of getState()\n             if (newServiceStarted.getCount() == 0) {\n                 if (service.getName().equals(\"main\")\n-                        && (service.getState().equals(State.RUNNING) || service.getState().equals(State.FINISHED))\n-                        && prevState.equals(State.INSTALLED)) {\n+                        && (newState.equals(State.RUNNING) || newState.equals(State.FINISHED))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7407e7123f1b80350c44f846893b82f73595a1b"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzNTQzOA==", "bodyText": "Excellent!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/104#discussion_r389935438", "createdAt": "2020-03-09T20:14:20Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/builtin/services/lifecycle/LifecycleIPCAgent.java", "diffHunk": "@@ -44,10 +44,10 @@\n \n     private static final Logger log = LogManager.getLogger(LifecycleIPCAgent.class);\n \n-    private EvergreenService.GlobalStateChangeListener onServiceChange = (service, prev) -> {\n+    private EvergreenService.GlobalStateChangeListener onServiceChange = (service, oldState, newState) -> {\n         Map<ConnectionContext, BiConsumer<State, State>> callbacks = listeners.get(service.getName());\n         if (callbacks != null) {\n-            callbacks.values().forEach(x -> x.accept(prev, service.getState()));\n+            callbacks.values().forEach(x -> x.accept(oldState, newState));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7407e7123f1b80350c44f846893b82f73595a1b"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0f867ddf5874c01874acf0c67b6d2f5abbc2767", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c0f867ddf5874c01874acf0c67b6d2f5abbc2767", "committedDate": "2020-03-10T02:00:55Z", "message": "pr comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNjU5MTEw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/104#pullrequestreview-371659110", "createdAt": "2020-03-10T03:20:57Z", "commit": {"oid": "c0f867ddf5874c01874acf0c67b6d2f5abbc2767"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2319, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}