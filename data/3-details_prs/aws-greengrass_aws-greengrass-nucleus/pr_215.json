{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMjQ0Mjk3", "number": 215, "title": "Add unit tests for ShellRunner", "bodyText": "Issue #, if available:\nhttps://issues-pdx.amazon.com/issues/P35106546\nDescription of changes:\nAdd unit tests for ShellRunner\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-04-28T17:00:06Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215", "merged": true, "mergeCommit": {"oid": "de3c4d6530f8c36f4794e97d71dc2e37ae5e521d"}, "closed": true, "closedAt": "2020-04-29T19:13:53Z", "author": {"login": "fufranci"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccGuHpAH2gAyNDEwMjQ0Mjk3OjMwMTJmOGQ0ODY3NDhkNzlhYmIwZTNjOWI3MTQ0YmVjMzhiMjYzMWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccdYqmgFqTQwMjk1OTk1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3012f8d486748d79abb0e3c9b7144bec38b2631f", "author": {"user": {"login": "fufranci", "name": "Francis Fu"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3012f8d486748d79abb0e3c9b7144bec38b2631f", "committedDate": "2020-04-28T16:45:46Z", "message": "Add unit tests for ShellRunner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMDM3NzUz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#pullrequestreview-402037753", "createdAt": "2020-04-28T17:03:00Z", "commit": {"oid": "3012f8d486748d79abb0e3c9b7144bec38b2631f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzowMzowMVrOGNeE_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzowMzo1MlrOGNeHJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc3NzQ2OQ==", "bodyText": "Please name these as GIVEN, WHEN, THEN -- BDD style.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#discussion_r416777469", "createdAt": "2020-04-28T17:03:01Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/ShellRunnerTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.testcommons.testutilities.EGServiceTestUtil;\n+import com.aws.iot.evergreen.util.Exec;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+\n+import java.nio.file.Paths;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.IntConsumer;\n+\n+import static com.aws.iot.evergreen.ipc.AuthHandler.SERVICE_UNIQUE_ID_KEY;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.when;\n+\n+class ShellRunnerTest extends EGServiceTestUtil {\n+\n+    @Mock\n+    private Topic uniqueId;\n+\n+    @Mock\n+    private Kernel kernel;\n+\n+    private EvergreenService evergreenService;\n+\n+    @BeforeEach\n+    void beforeEach() {\n+        Topics config = initializeMockedConfig();\n+        when(config.findLeafChild(SERVICE_UNIQUE_ID_KEY)).thenReturn(uniqueId);\n+        when(kernel.getWorkPath()).thenReturn(Paths.get(System.getProperty(\"user.dir\")));\n+        evergreenService = new EvergreenService(config);\n+    }\n+\n+    @Test\n+    void testForeground() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3012f8d486748d79abb0e3c9b7144bec38b2631f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc3ODAyMA==", "bodyText": "let's keep this quick. This test works the same if you don't sleep for any time.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#discussion_r416778020", "createdAt": "2020-04-28T17:03:52Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/ShellRunnerTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.testcommons.testutilities.EGServiceTestUtil;\n+import com.aws.iot.evergreen.util.Exec;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+\n+import java.nio.file.Paths;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.IntConsumer;\n+\n+import static com.aws.iot.evergreen.ipc.AuthHandler.SERVICE_UNIQUE_ID_KEY;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.when;\n+\n+class ShellRunnerTest extends EGServiceTestUtil {\n+\n+    @Mock\n+    private Topic uniqueId;\n+\n+    @Mock\n+    private Kernel kernel;\n+\n+    private EvergreenService evergreenService;\n+\n+    @BeforeEach\n+    void beforeEach() {\n+        Topics config = initializeMockedConfig();\n+        when(config.findLeafChild(SERVICE_UNIQUE_ID_KEY)).thenReturn(uniqueId);\n+        when(kernel.getWorkPath()).thenReturn(Paths.get(System.getProperty(\"user.dir\")));\n+        evergreenService = new EvergreenService(config);\n+    }\n+\n+    @Test\n+    void testForeground() throws Exception {\n+        try (Context context = new Context()) {\n+            context.put(Kernel.class, kernel);\n+            final ShellRunner shellRunner = context.get(ShellRunner.class);\n+            try (Exec exec = shellRunner.setup(\"note\", \"echo hi\", evergreenService)) {\n+                boolean ok = shellRunner.successful(exec, \"note\", null, evergreenService);\n+                assertTrue(ok);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    void testBackground() throws Exception {\n+        final AtomicInteger exitCode = new AtomicInteger();\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        IntConsumer background = (value) -> {\n+            exitCode.set(value);\n+            latch.countDown();\n+        };\n+\n+        try (Context context = new Context()) {\n+            context.put(Kernel.class, kernel);\n+            final ShellRunner shellRunner = context.get(ShellRunner.class);\n+            try (Exec exec = shellRunner.setup(\"note\", \"sleep 5\", evergreenService)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3012f8d486748d79abb0e3c9b7144bec38b2631f"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c5a25fab5e8c4bdab52acb407f246ec7d63ac26", "author": {"user": {"login": "fufranci", "name": "Francis Fu"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1c5a25fab5e8c4bdab52acb407f246ec7d63ac26", "committedDate": "2020-04-28T17:25:18Z", "message": "Address feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMDc5ODU4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#pullrequestreview-402079858", "createdAt": "2020-04-28T17:57:51Z", "commit": {"oid": "1c5a25fab5e8c4bdab52acb407f246ec7d63ac26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzo1Nzo1MVrOGNgPlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzo1Nzo1MVrOGNgPlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxMjk1MQ==", "bodyText": "nice, we need negative cases too.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#discussion_r416812951", "createdAt": "2020-04-28T17:57:51Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/ShellRunnerTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.testcommons.testutilities.EGServiceTestUtil;\n+import com.aws.iot.evergreen.util.Exec;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+\n+import java.nio.file.Paths;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.IntConsumer;\n+\n+import static com.aws.iot.evergreen.ipc.AuthHandler.SERVICE_UNIQUE_ID_KEY;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.when;\n+\n+class ShellRunnerTest extends EGServiceTestUtil {\n+\n+    @Mock\n+    private Topic uniqueId;\n+\n+    @Mock\n+    private Kernel kernel;\n+\n+    private EvergreenService evergreenService;\n+\n+    @BeforeEach\n+    void beforeEach() {\n+        Topics config = initializeMockedConfig();\n+        when(config.findLeafChild(SERVICE_UNIQUE_ID_KEY)).thenReturn(uniqueId);\n+        when(kernel.getWorkPath()).thenReturn(Paths.get(System.getProperty(\"user.dir\")));\n+        evergreenService = new EvergreenService(config);\n+    }\n+\n+    @Test\n+    void GIVEN_shell_command_WHEN_run_in_foreground_THEN_succeeds() throws Exception {\n+        try (Context context = new Context()) {\n+            context.put(Kernel.class, kernel);\n+            final ShellRunner shellRunner = context.get(ShellRunner.class);\n+            try (Exec exec = shellRunner.setup(\"note\", \"echo hi\", evergreenService)) {\n+                boolean ok = shellRunner.successful(exec, \"note\", null, evergreenService);\n+                assertTrue(ok);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    void GIVEN_shell_command_WHEN_run_in_background_THEN_succeeds() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c5a25fab5e8c4bdab52acb407f246ec7d63ac26"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65f3ba587ffbe142225ef9d008763489d7fa4463", "author": {"user": {"login": "fufranci", "name": "Francis Fu"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/65f3ba587ffbe142225ef9d008763489d7fa4463", "committedDate": "2020-04-28T18:55:35Z", "message": "Add negative cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b9530538e756cde8afa7e65a9119548fa767308", "author": {"user": {"login": "fufranci", "name": "Francis Fu"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1b9530538e756cde8afa7e65a9119548fa767308", "committedDate": "2020-04-28T21:23:00Z", "message": "Merge branch 'master' into process_test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjY0Mjc3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#pullrequestreview-402264277", "createdAt": "2020-04-28T22:44:58Z", "commit": {"oid": "1b9530538e756cde8afa7e65a9119548fa767308"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjo0NDo1OFrOGNpuwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjo0NDo1OFrOGNpuwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2ODM4Ng==", "bodyText": "let's also assert that the process has exited after the successful is done.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#discussion_r416968386", "createdAt": "2020-04-28T22:44:58Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/ShellRunnerTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.testcommons.testutilities.EGServiceTestUtil;\n+import com.aws.iot.evergreen.util.Exec;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+\n+import java.nio.file.Paths;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.IntConsumer;\n+\n+import static com.aws.iot.evergreen.ipc.AuthHandler.SERVICE_UNIQUE_ID_KEY;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.when;\n+\n+class ShellRunnerTest extends EGServiceTestUtil {\n+\n+    @Mock\n+    private Topic uniqueId;\n+\n+    @Mock\n+    private Kernel kernel;\n+\n+    private EvergreenService evergreenService;\n+\n+    @BeforeEach\n+    void beforeEach() {\n+        Topics config = initializeMockedConfig();\n+        when(config.findLeafChild(SERVICE_UNIQUE_ID_KEY)).thenReturn(uniqueId);\n+        when(kernel.getWorkPath()).thenReturn(Paths.get(System.getProperty(\"user.dir\")));\n+        evergreenService = new EvergreenService(config);\n+    }\n+\n+    @Test\n+    void GIVEN_shell_command_WHEN_run_in_foreground_THEN_succeeds() throws Exception {\n+        try (Context context = new Context()) {\n+            context.put(Kernel.class, kernel);\n+            final ShellRunner shellRunner = context.get(ShellRunner.class);\n+            try (Exec exec = shellRunner.setup(\"note\", \"echo hi\", evergreenService)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b9530538e756cde8afa7e65a9119548fa767308"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjY1MjY1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#pullrequestreview-402265265", "createdAt": "2020-04-28T22:47:22Z", "commit": {"oid": "1b9530538e756cde8afa7e65a9119548fa767308"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eae9f3e94de75360657c6ec7738b9f1bbeb25d1", "author": {"user": {"login": "fufranci", "name": "Francis Fu"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4eae9f3e94de75360657c6ec7738b9f1bbeb25d1", "committedDate": "2020-04-28T23:12:52Z", "message": "assert process has exited"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjc2NjA2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#pullrequestreview-402276606", "createdAt": "2020-04-28T23:15:43Z", "commit": {"oid": "4eae9f3e94de75360657c6ec7738b9f1bbeb25d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjc2OTQ4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#pullrequestreview-402276948", "createdAt": "2020-04-28T23:16:33Z", "commit": {"oid": "4eae9f3e94de75360657c6ec7738b9f1bbeb25d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzoxNjozM1rOGNqcSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzoxNjozM1rOGNqcSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4MDA0Mg==", "bodyText": "Looks like the shell runner is still only 80% covered, can you check on that and try to raise it?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#discussion_r416980042", "createdAt": "2020-04-28T23:16:33Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/ShellRunnerTest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package com.aws.iot.evergreen.kernel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eae9f3e94de75360657c6ec7738b9f1bbeb25d1"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMzA1MDUy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#pullrequestreview-402305052", "createdAt": "2020-04-29T00:38:45Z", "commit": {"oid": "4eae9f3e94de75360657c6ec7738b9f1bbeb25d1"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMDozODo0NVrOGNsGtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMDo1MTo0OVrOGNsUOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwNzI4Ng==", "bodyText": "[Optional] Passing a @TempDir Path tempDir would be safer. Right now, we are not interacting with the working folder but we could prevent people from doing so in the future...", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#discussion_r417007286", "createdAt": "2020-04-29T00:38:45Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/ShellRunnerTest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.testcommons.testutilities.EGServiceTestUtil;\n+import com.aws.iot.evergreen.util.Exec;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+\n+import java.nio.file.Paths;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.IntConsumer;\n+\n+import static com.aws.iot.evergreen.ipc.AuthHandler.SERVICE_UNIQUE_ID_KEY;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.when;\n+\n+class ShellRunnerTest extends EGServiceTestUtil {\n+\n+    @Mock\n+    private Topic uniqueId;\n+\n+    @Mock\n+    private Kernel kernel;\n+\n+    private EvergreenService evergreenService;\n+\n+    @BeforeEach\n+    void beforeEach() {\n+        Topics config = initializeMockedConfig();\n+        when(config.findLeafChild(SERVICE_UNIQUE_ID_KEY)).thenReturn(uniqueId);\n+        when(kernel.getWorkPath()).thenReturn(Paths.get(System.getProperty(\"user.dir\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eae9f3e94de75360657c6ec7738b9f1bbeb25d1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwNzkwOQ==", "bodyText": "Very clean, neat, and also safe way to initialize ShellRunner!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#discussion_r417007909", "createdAt": "2020-04-29T00:40:56Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/ShellRunnerTest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.testcommons.testutilities.EGServiceTestUtil;\n+import com.aws.iot.evergreen.util.Exec;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+\n+import java.nio.file.Paths;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.IntConsumer;\n+\n+import static com.aws.iot.evergreen.ipc.AuthHandler.SERVICE_UNIQUE_ID_KEY;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.when;\n+\n+class ShellRunnerTest extends EGServiceTestUtil {\n+\n+    @Mock\n+    private Topic uniqueId;\n+\n+    @Mock\n+    private Kernel kernel;\n+\n+    private EvergreenService evergreenService;\n+\n+    @BeforeEach\n+    void beforeEach() {\n+        Topics config = initializeMockedConfig();\n+        when(config.findLeafChild(SERVICE_UNIQUE_ID_KEY)).thenReturn(uniqueId);\n+        when(kernel.getWorkPath()).thenReturn(Paths.get(System.getProperty(\"user.dir\")));\n+        evergreenService = new EvergreenService(config);\n+    }\n+\n+    @Test\n+    void GIVEN_shell_command_WHEN_run_in_foreground_THEN_succeeds() throws Exception {\n+        try (Context context = new Context()) {\n+            context.put(Kernel.class, kernel);\n+            final ShellRunner shellRunner = context.get(ShellRunner.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eae9f3e94de75360657c6ec7738b9f1bbeb25d1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwODI3MQ==", "bodyText": "I'd rename the successful to run... I always feel confused about this successful method...", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#discussion_r417008271", "createdAt": "2020-04-29T00:42:03Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/ShellRunnerTest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.testcommons.testutilities.EGServiceTestUtil;\n+import com.aws.iot.evergreen.util.Exec;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+\n+import java.nio.file.Paths;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.IntConsumer;\n+\n+import static com.aws.iot.evergreen.ipc.AuthHandler.SERVICE_UNIQUE_ID_KEY;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.when;\n+\n+class ShellRunnerTest extends EGServiceTestUtil {\n+\n+    @Mock\n+    private Topic uniqueId;\n+\n+    @Mock\n+    private Kernel kernel;\n+\n+    private EvergreenService evergreenService;\n+\n+    @BeforeEach\n+    void beforeEach() {\n+        Topics config = initializeMockedConfig();\n+        when(config.findLeafChild(SERVICE_UNIQUE_ID_KEY)).thenReturn(uniqueId);\n+        when(kernel.getWorkPath()).thenReturn(Paths.get(System.getProperty(\"user.dir\")));\n+        evergreenService = new EvergreenService(config);\n+    }\n+\n+    @Test\n+    void GIVEN_shell_command_WHEN_run_in_foreground_THEN_succeeds() throws Exception {\n+        try (Context context = new Context()) {\n+            context.put(Kernel.class, kernel);\n+            final ShellRunner shellRunner = context.get(ShellRunner.class);\n+            try (Exec exec = shellRunner.setup(\"note\", \"echo hi\", evergreenService)) {\n+                boolean ok = shellRunner.successful(exec, \"note\", null, evergreenService);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eae9f3e94de75360657c6ec7738b9f1bbeb25d1"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxMDc0NQ==", "bodyText": "Also, do you think it is more clear if we make this into two methods? Something like runAtForeground vs runAtBackground. We could avoid passing null as argument for branching. I understand the change might be big (may required to change GenericExternalService), but I feel it is very helpful.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#discussion_r417010745", "createdAt": "2020-04-29T00:51:49Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/ShellRunnerTest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Topic;\n+import com.aws.iot.evergreen.config.Topics;\n+import com.aws.iot.evergreen.dependency.Context;\n+import com.aws.iot.evergreen.testcommons.testutilities.EGServiceTestUtil;\n+import com.aws.iot.evergreen.util.Exec;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+\n+import java.nio.file.Paths;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.IntConsumer;\n+\n+import static com.aws.iot.evergreen.ipc.AuthHandler.SERVICE_UNIQUE_ID_KEY;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.when;\n+\n+class ShellRunnerTest extends EGServiceTestUtil {\n+\n+    @Mock\n+    private Topic uniqueId;\n+\n+    @Mock\n+    private Kernel kernel;\n+\n+    private EvergreenService evergreenService;\n+\n+    @BeforeEach\n+    void beforeEach() {\n+        Topics config = initializeMockedConfig();\n+        when(config.findLeafChild(SERVICE_UNIQUE_ID_KEY)).thenReturn(uniqueId);\n+        when(kernel.getWorkPath()).thenReturn(Paths.get(System.getProperty(\"user.dir\")));\n+        evergreenService = new EvergreenService(config);\n+    }\n+\n+    @Test\n+    void GIVEN_shell_command_WHEN_run_in_foreground_THEN_succeeds() throws Exception {\n+        try (Context context = new Context()) {\n+            context.put(Kernel.class, kernel);\n+            final ShellRunner shellRunner = context.get(ShellRunner.class);\n+            try (Exec exec = shellRunner.setup(\"note\", \"echo hi\", evergreenService)) {\n+                boolean ok = shellRunner.successful(exec, \"note\", null, evergreenService);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eae9f3e94de75360657c6ec7738b9f1bbeb25d1"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTU5OTUz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/215#pullrequestreview-402959953", "createdAt": "2020-04-29T19:10:09Z", "commit": {"oid": "4eae9f3e94de75360657c6ec7738b9f1bbeb25d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2164, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}