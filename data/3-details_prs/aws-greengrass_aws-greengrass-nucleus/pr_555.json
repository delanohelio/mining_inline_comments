{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3ODc1MDYy", "number": 555, "title": "Set the owner of artifacts for a service when commands are first run.", "bodyText": "Refactored generation of the user/group to run a service with.\nArtifacts are set to the user/group running the service.\nThe run as user is set for a component in the deployment. If none is\nprovided, the default user/group is used. If no default is set, and\nthe kernel user is not root, the kernel user is used.\nArtifacts that are not \"run\" are left unchanged - they are owned by\nthe kernel user.\nArtifact permissions are updated to be world readable - the model change for specifying permissions on artifacts has been made on the cloud side but needs to be supported in the nucleus.\nIssue #, if available:\nDescription of changes:\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-10-21T21:29:46Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555", "merged": true, "mergeCommit": {"oid": "bb5dc0751fe256fd2e383b66619e8a033aa5d71a"}, "closed": true, "closedAt": "2020-10-29T19:57:37Z", "author": {"login": "rbattle"}, "timelineItems": {"totalCount": 55, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdU0kb_gFqTUxNDIwNDk1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXWri1AFqTUxOTk3MDQyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MjA0OTU5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-514204959", "createdAt": "2020-10-21T21:37:04Z", "commit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMTozNzowNFrOHmG3mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMTo0OToxMlrOHmHbSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyMDQ3NA==", "bodyText": "not really needed.\nBut definitely do call kernel.shutdown()", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r509720474", "createdAt": "2020-10-21T21:37:04Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "diffHunk": "@@ -52,6 +58,27 @@\n     @BeforeEach\n     void beforeEach() {\n         kernel = new Kernel();\n+        kernel.getContext().put(RunWithArtifactHandler.class, new NoOpArtifactHandler(kernel.getNucleusPaths()));\n+    }\n+\n+    @AfterEach\n+    void cleanup() {\n+        kernel.getContext().remove(RunWithArtifactHandler.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyMzIzNQ==", "bodyText": "formatting", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r509723235", "createdAt": "2020-10-21T21:41:05Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GenericExternalService.java", "diffHunk": "@@ -350,23 +371,52 @@ public void handleError() throws InterruptedException {\n      * Store user, group, and shell that will be used to run the service. This should be used throughout the lifecycle.\n      * This information can change with a deployment, but service *must* execute the lifecycle steps with the same\n      * user/group/shell that was configured when it started.\n+     */\n+    protected boolean storeInitialRunWithConfiguration() {\n+        Optional<RunWith> opt = runWithGenerator.generate(config);\n+        if (opt.isPresent()) {\n+            runWith = opt.get();\n+\n+            LogEventBuilder logEvent  = logger.atDebug().kv(\"user\", runWith.getUser());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDI2NA==", "bodyText": "Why only Unix?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r509724264", "createdAt": "2020-10-21T21:42:18Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/RunWithArtifactHandler.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.componentmanager.models.ComponentIdentifier;\n+import com.aws.greengrass.util.CrashableFunction;\n+import com.aws.greengrass.util.Exec;\n+import com.aws.greengrass.util.FileSystemPermission;\n+import com.aws.greengrass.util.NucleusPaths;\n+import com.aws.greengrass.util.platforms.Platform;\n+import com.aws.greengrass.util.platforms.UnixPlatform;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import javax.inject.Inject;\n+\n+/**\n+ * Update artifact ownership based on service RunWith information.\n+ */\n+public class RunWithArtifactHandler {\n+\n+    final NucleusPaths nucleusPaths;\n+\n+    final UnixPlatform unixPlatform;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDY5Nw==", "bodyText": "Even if we only support Unix, shouldn't this class take a Platform as the field?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r509724697", "createdAt": "2020-10-21T21:42:48Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/RunWithArtifactHandler.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.componentmanager.models.ComponentIdentifier;\n+import com.aws.greengrass.util.CrashableFunction;\n+import com.aws.greengrass.util.Exec;\n+import com.aws.greengrass.util.FileSystemPermission;\n+import com.aws.greengrass.util.NucleusPaths;\n+import com.aws.greengrass.util.platforms.Platform;\n+import com.aws.greengrass.util.platforms.UnixPlatform;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import javax.inject.Inject;\n+\n+/**\n+ * Update artifact ownership based on service RunWith information.\n+ */\n+public class RunWithArtifactHandler {\n+\n+    final NucleusPaths nucleusPaths;\n+\n+    final UnixPlatform unixPlatform;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDI2NA=="}, "originalCommit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNjY3NA==", "bodyText": "can we hoist this to the Platform class? That way we can implement it on windows eventually.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r509726674", "createdAt": "2020-10-21T21:45:09Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/platforms/UnixPlatform.java", "diffHunk": "@@ -184,8 +271,108 @@ public UserDecorator withGroup(String group) {\n     public void setPermissions(FileSystemPermission permission, Path path) throws IOException {\n         Files.setPosixFilePermissions(path, permission.toPosixFilePermissions());\n         if (permission.getOwnerUser() != null) {\n-            Files.setOwner(path, path.getFileSystem().getUserPrincipalLookupService()\n-                    .lookupPrincipalByName(permission.getOwnerUser()));\n+            setPathOwner(permission, path, false);\n+        }\n+    }\n+\n+\n+    @Override\n+    public Optional<String> lookupPrimaryGroup(String user) {\n+        // run `id` command to load group (-g) name (n)\n+        StringBuilder out = new StringBuilder();\n+        StringBuilder err = new StringBuilder();\n+        try (Exec exec = new Exec()) {\n+            exec.withExec(\"id\", \"-gn\", user)\n+                .withOut(out::append)\n+                .withErr(err::append)\n+                .exec();\n+        } catch (IOException | InterruptedException e) {\n+            logger.atError().setCause(e).setEventType(\"lookup-primary-group\")\n+                    .log(\"Error while looking up primary group for %s\", user);\n+            return Optional.empty();\n+        }\n+\n+        if (!err.toString().isEmpty()) {\n+            logger.atWarn().setEventType(\"lookup-primary-group\")\n+                    .log(\"Error while lookup up primary group for %s: '%s'\",\n+                    user, err.toString());\n+            return Optional.empty();\n+        }\n+\n+        String group = out.toString().trim();\n+        if (group.isEmpty()) {\n+            logger.atWarn().setEventType(\"lookup-primary-group\")\n+                    .log(\"Empty primary group returned for %s\", user);\n+            return Optional.empty();\n+        }\n+        return Optional.of(group);\n+    }\n+\n+    /**\n+     * Set the owner of a path.\n+     *\n+     * @param permission a permission object containing owner user/group\n+     * @param path the path to change.\n+     * @param recurse whether to recursively set owner for directory paths.\n+     * @throws IOException if an error occurs while updating the ownership.\n+     */\n+    public void setPathOwner(FileSystemPermission permission, Path path, boolean recurse) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1"}, "originalPosition": 235}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNzM3OA==", "bodyText": "hoist to Platform and call is isSuperUser or something like that. On windows we'd need to be Administrator.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r509727378", "createdAt": "2020-10-21T21:45:57Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/platforms/UnixPlatform.java", "diffHunk": "@@ -16,25 +18,106 @@\n import java.io.IOException;\n import java.io.InputStreamReader;\n import java.nio.charset.StandardCharsets;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.FileVisitor;\n import java.nio.file.Files;\n+import java.nio.file.LinkOption;\n import java.nio.file.Path;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.nio.file.attribute.GroupPrincipal;\n+import java.nio.file.attribute.PosixFileAttributeView;\n+import java.nio.file.attribute.UserPrincipal;\n+import java.nio.file.attribute.UserPrincipalLookupService;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n+import java.util.Optional;\n import java.util.concurrent.TimeUnit;\n+import java.util.function.Function;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n import static com.aws.greengrass.util.Utils.inputStreamToString;\n \n-public class UnixPlatform extends Platform {\n+public class UnixPlatform extends Platform implements PosixUserPlatform {\n     protected static final int SIGINT = 2;\n     protected static final int SIGKILL = 9;\n     public static final Pattern PS_PID_PATTERN = Pattern.compile(\"(\\\\d+)\\\\s+(\\\\d+)\");\n \n+    public static final String PRIVILEGED_USER = \"root\";\n+    public static final String STDOUT = \"stdout\";\n+    public static final String STDERR = \"stderr\";\n+    private static Boolean IS_ROOT;\n+\n+    /**\n+     * Check whether the current user is root or not.\n+     *\n+     * @return true if root.\n+     */\n+    private synchronized boolean checkIsRoot() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyODI1OQ==", "bodyText": "We already log the command in shellrunner, so if this duplicates that, then I'd remove one of them.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r509728259", "createdAt": "2020-10-21T21:47:01Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/Exec.java", "diffHunk": "@@ -398,14 +400,23 @@ public Exec withErr(Consumer<CharSequence> o) {\n         return decorated;\n     }\n \n+    /**\n+     * Execute a command.\n+     *\n+     * @returns the process exit code.\n+     * @throws InterruptedException if the command is interrupted while running.\n+     * @throws IOException if an error occurs while executing.\n+     */\n     @SuppressWarnings(\"PMD.AvoidRethrowingException\")\n-    private void exec() throws InterruptedException, IOException {\n+    public Optional<Integer> exec() throws InterruptedException, IOException {\n         // Don't run anything if the current thread is currently interrupted\n         if (Thread.currentThread().isInterrupted()) {\n             logger.atWarn().kv(\"command\", this).log(\"Refusing to execute because the active thread is interrupted\");\n             throw new InterruptedException();\n         }\n-        process = Runtime.getRuntime().exec(getCommand(), environment, dir);\n+        final String[] command = getCommand();\n+        logger.atDebug().kv(\"command\", (Supplier<String>) () -> String.join(\" \", command)).log();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyOTE0Ng==", "bodyText": "any possibility to make this more generic than posix?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r509729146", "createdAt": "2020-10-21T21:48:27Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/RunWithGenerator.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.config.Topics;\n+import com.aws.greengrass.deployment.DeviceConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.aws.greengrass.util.Exec;\n+import com.aws.greengrass.util.Utils;\n+import com.aws.greengrass.util.platforms.Platform;\n+import com.aws.greengrass.util.platforms.PosixUserPlatform;\n+\n+import java.util.Optional;\n+import javax.inject.Inject;\n+\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.POSIX_GROUP_KEY;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.POSIX_USER_KEY;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.RUN_WITH_NAMESPACE_TOPIC;\n+\n+/**\n+ * Generate a {@link RunWith} from a service {@link Topics} configuration. This takes into account the configuration\n+ * from the service and the default configuration in the kernel.\n+ */\n+public class RunWithGenerator {\n+\n+    final DeviceConfiguration deviceConfig;\n+\n+    final PosixUserPlatform posixUserPlatform;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyOTYwOA==", "bodyText": "My preference would be to call into the Platform instance for any platform specific stuff. Everything which isn't inside of Platform shouldn't care (ideally).", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r509729608", "createdAt": "2020-10-21T21:49:12Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/RunWithArtifactHandler.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.componentmanager.models.ComponentIdentifier;\n+import com.aws.greengrass.util.CrashableFunction;\n+import com.aws.greengrass.util.Exec;\n+import com.aws.greengrass.util.FileSystemPermission;\n+import com.aws.greengrass.util.NucleusPaths;\n+import com.aws.greengrass.util.platforms.Platform;\n+import com.aws.greengrass.util.platforms.UnixPlatform;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import javax.inject.Inject;\n+\n+/**\n+ * Update artifact ownership based on service RunWith information.\n+ */\n+public class RunWithArtifactHandler {\n+\n+    final NucleusPaths nucleusPaths;\n+\n+    final UnixPlatform unixPlatform;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDI2NA=="}, "originalCommit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f506647854995fb10f5880fb5ad23f005ae813a1", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f506647854995fb10f5880fb5ad23f005ae813a1", "committedDate": "2020-10-21T21:28:25Z", "message": "Set the owner of artifacts for a service when commands are first run.\n\nRefactored generation of the user/group to run a service with.\n\nArtifacts are set to the user/group running the service.\nThe run as user is set for a component in the deployment. If none is\nprovided, the default user/group is used. If no default is set, and\nthe kernel user is not root, the kernel user is used.\n\nArtifacts that are not \"run\" are left unchanged - they are owned by\nthe kernel user."}, "afterCommit": {"oid": "14cdb22d603d6317e0e7a7c49c3b6993468cf179", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/14cdb22d603d6317e0e7a7c49c3b6993468cf179", "committedDate": "2020-10-22T16:59:18Z", "message": "Set the owner of artifacts for a service when commands are first run.\n\nRefactored generation of the user/group to run a service with.\n\nArtifacts are set to the user/group running the service.\nThe run as user is set for a component in the deployment. If none is\nprovided, the default user/group is used. If no default is set, and\nthe kernel user is not root, the kernel user is used.\n\nArtifacts that are not \"run\" are left unchanged - they are owned by\nthe kernel user."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b0c7c0d79c84a3ce99a10dac9d20bfa4414de2a", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8b0c7c0d79c84a3ce99a10dac9d20bfa4414de2a", "committedDate": "2020-10-22T17:07:26Z", "message": "Set the owner of artifacts for a service when commands are first run.\n\nRefactored generation of the user/group to run a service with.\n\nArtifacts are set to the user/group running the service.\nThe run as user is set for a component in the deployment. If none is\nprovided, the default user/group is used. If no default is set, and\nthe kernel user is not root, the kernel user is used.\n\nArtifacts that are not \"run\" are left unchanged - they are owned by\nthe kernel user."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14cdb22d603d6317e0e7a7c49c3b6993468cf179", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/14cdb22d603d6317e0e7a7c49c3b6993468cf179", "committedDate": "2020-10-22T16:59:18Z", "message": "Set the owner of artifacts for a service when commands are first run.\n\nRefactored generation of the user/group to run a service with.\n\nArtifacts are set to the user/group running the service.\nThe run as user is set for a component in the deployment. If none is\nprovided, the default user/group is used. If no default is set, and\nthe kernel user is not root, the kernel user is used.\n\nArtifacts that are not \"run\" are left unchanged - they are owned by\nthe kernel user."}, "afterCommit": {"oid": "8b0c7c0d79c84a3ce99a10dac9d20bfa4414de2a", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8b0c7c0d79c84a3ce99a10dac9d20bfa4414de2a", "committedDate": "2020-10-22T17:07:26Z", "message": "Set the owner of artifacts for a service when commands are first run.\n\nRefactored generation of the user/group to run a service with.\n\nArtifacts are set to the user/group running the service.\nThe run as user is set for a component in the deployment. If none is\nprovided, the default user/group is used. If no default is set, and\nthe kernel user is not root, the kernel user is used.\n\nArtifacts that are not \"run\" are left unchanged - they are owned by\nthe kernel user."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eba68eb4bf97821d773ea456676bd7c3ac9d18ad", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eba68eb4bf97821d773ea456676bd7c3ac9d18ad", "committedDate": "2020-10-22T17:14:37Z", "message": "Merge branch 'master' into set-owner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43cd2943521e8371f61a9a9bc35758f955ca85c7", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/43cd2943521e8371f61a9a9bc35758f955ca85c7", "committedDate": "2020-10-22T19:54:38Z", "message": "Merge branch 'master' into set-owner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MDgzODA2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-515083806", "createdAt": "2020-10-22T20:14:01Z", "commit": {"oid": "43cd2943521e8371f61a9a9bc35758f955ca85c7"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoxNDowMVrOHmyJnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoxNDowMVrOHmyJnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQyOTU5Nw==", "bodyText": "[nit]\nUse Files.exists", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r510429597", "createdAt": "2020-10-22T20:14:01Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/RunWithArtifactHandler.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.componentmanager.models.ComponentIdentifier;\n+import com.aws.greengrass.util.CrashableFunction;\n+import com.aws.greengrass.util.FileSystemPermission;\n+import com.aws.greengrass.util.NucleusPaths;\n+import com.aws.greengrass.util.platforms.Platform;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import javax.inject.Inject;\n+\n+import static com.aws.greengrass.util.FileSystemPermission.Option.IgnorePermission;\n+import static com.aws.greengrass.util.FileSystemPermission.Option.Recurse;\n+\n+/**\n+ * Update artifact ownership based on service RunWith information.\n+ */\n+public class RunWithArtifactHandler {\n+\n+    final NucleusPaths nucleusPaths;\n+\n+    final Platform platform;\n+\n+    /**\n+     * Construct a new handler.\n+     *\n+     * @param paths paths in the nucleus.\n+     */\n+    @Inject\n+    public RunWithArtifactHandler(NucleusPaths paths) {\n+        this(paths, Platform.getInstance());\n+    }\n+\n+    /**\n+     * Construct a new handler.\n+     *\n+     * @param paths paths in the nucleus.\n+     * @param platform the platform instance.\n+     */\n+    public RunWithArtifactHandler(NucleusPaths paths, Platform platform) {\n+        this.nucleusPaths = paths;\n+        this.platform = platform;\n+    }\n+\n+    /**\n+     * Update the owner of the artifacts in the component on the local filesystem. The user and group of from the\n+     * RunWith parameter are used.\n+     *\n+     * @param id      the component to update.\n+     * @param runWith the user/group that should own the files.\n+     * @throws IOException if an error occurs while updating. This can occur if the user running the kernel does not\n+     *                     have the correct permissions or capabilities to change file ownership to another user.\n+     */\n+    public void updateOwner(ComponentIdentifier id, RunWith runWith) throws IOException {\n+        Path artifacts = nucleusPaths.artifactPath(id);\n+        Path unarchived = nucleusPaths.unarchiveArtifactPath(id);\n+\n+        FileSystemPermission permission = FileSystemPermission.builder()\n+                .ownerUser(runWith.getUser())\n+                .ownerGroup(runWith.getGroup())\n+                .build();\n+\n+        CrashableFunction<Path, Void, IOException> f = (p) -> {\n+            if (p.toFile().exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43cd2943521e8371f61a9a9bc35758f955ca85c7"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e0a9521e2dc4b78409910ada86f14a2f3b5f148", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1e0a9521e2dc4b78409910ada86f14a2f3b5f148", "committedDate": "2020-10-23T21:53:58Z", "message": "Fix tests to work on build machines and desktops\n\nSet the posixUser to 'nobody' - this is not good in production, but it is a user that exists on Linux and Macs without requiring a user to be created.\nFix tests to use random temp directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8333e6433f013b63e4cfff615f2df03c8d51be13", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8333e6433f013b63e4cfff615f2df03c8d51be13", "committedDate": "2020-10-23T22:48:48Z", "message": "Merge branch 'master' into set-owner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDUwNzIx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-516050721", "createdAt": "2020-10-23T22:55:51Z", "commit": {"oid": "8333e6433f013b63e4cfff615f2df03c8d51be13"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMjo1NTo1MVrOHngfbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMjo1Njo1OVrOHngggQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE4ODg0NQ==", "bodyText": "remove the listener using try-finally", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r511188845", "createdAt": "2020-10-23T22:55:51Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "diffHunk": "@@ -308,20 +317,30 @@ void GIVEN_bootstrap_command_WHEN_runs_longer_than_5_sec_THEN_timeout_exception_\n     @EnabledOnOs({OS.LINUX, OS.MAC})\n     @ParameterizedTest\n     @MethodSource(\"posixTestUserConfig\")\n-    void GIVEN_posix_default_user_WHEN_runs_THEN_runs_with_default_user(String file, String expectedUid)\n+    void GIVEN_posix_default_user_WHEN_runs_THEN_runs_with_default_user(String file, String expectedInstallUid,\n+                                                                        String expectedRunUid)\n             throws Exception {\n+\n+        CountDownLatch countDownLatch = new CountDownLatch(2);\n+        // Set up stdout listener to capture stdout for verifying users\n+        List<String> stdouts = new CopyOnWriteArrayList<>();\n+        Consumer<GreengrassLogMessage> listener = m -> {\n+            Map<String, String> contexts = m.getContexts();\n+            String messageOnStdout = contexts.get(\"stdout\");\n+            if (messageOnStdout != null\n+                    && (messageOnStdout.contains(\"run as\")\n+                        || messageOnStdout.contains(\"install as\") )) {\n+                stdouts.add(messageOnStdout);\n+                countDownLatch.countDown();\n+            }\n+        };\n+        Slf4jLogAdapter.addGlobalListener(listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8333e6433f013b63e4cfff615f2df03c8d51be13"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE4OTEyMQ==", "bodyText": "this need to be changed now that Shagupta merged the system property change", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r511189121", "createdAt": "2020-10-23T22:56:59Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/resources/com/aws/greengrass/integrationtests/deployment/long_running_services.yaml", "diffHunk": "@@ -1,4 +1,8 @@\n ---\n+system:\n+  runWithDefault:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8333e6433f013b63e4cfff615f2df03c8d51be13"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDUyNzU1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-516052755", "createdAt": "2020-10-23T23:04:06Z", "commit": {"oid": "8333e6433f013b63e4cfff615f2df03c8d51be13"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzowNDowN1rOHngmsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzowNjoxMFrOHngoxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5MDcwNg==", "bodyText": "this won't work unless passwordless sudo is there. Can you maybe try running the sudo version, and if that fails then run without sudo perhaps?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r511190706", "createdAt": "2020-10-23T23:04:07Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/testcommons/testutilities/SpawnedProcessProtector.java", "diffHunk": "@@ -54,7 +53,11 @@ public void afterAll(ExtensionContext context) throws Exception {\n                 }\n \n                 // Kill the stray process\n-                Processes.newPidProcess(Integer.parseInt(pid)).destroyForcefully();\n+                proc = new ProcessBuilder().command(\"sudo\", \"kill\", \"-9\", pid).start();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8333e6433f013b63e4cfff615f2df03c8d51be13"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5MTAwMA==", "bodyText": "you can implement both each and all with the same extension if you wanted", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r511191000", "createdAt": "2020-10-23T23:05:11Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/testcommons/testutilities/UniqueRootPathBeforeAll.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *  SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.testcommons.testutilities;\n+\n+import org.junit.jupiter.api.extension.BeforeAllCallback;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+import org.junit.jupiter.api.extension.ExtensionContext.Namespace;\n+\n+import static com.aws.greengrass.testcommons.testutilities.UniqueRootStoreHelper.KEY;\n+\n+public class UniqueRootPathBeforeAll implements BeforeAllCallback {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8333e6433f013b63e4cfff615f2df03c8d51be13"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5MTIzNw==", "bodyText": "we have a utility already to recursively delete. Utils.deleteFileRecursively", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r511191237", "createdAt": "2020-10-23T23:06:10Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/testcommons/testutilities/UniqueRootStoreHelper.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *  SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.testcommons.testutilities;\n+\n+import org.junit.jupiter.api.extension.ExtensionConfigurationException;\n+import org.junit.jupiter.api.extension.ExtensionContext.Store.CloseableResource;\n+\n+import java.io.IOException;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.attribute.BasicFileAttributes;\n+\n+import static java.nio.file.FileVisitResult.CONTINUE;\n+\n+final class UniqueRootStoreHelper {\n+    static final String KEY = \"root\";\n+\n+    private UniqueRootStoreHelper() {\n+        \n+    }\n+\n+    public static CloseableResource createPath(String key) {\n+        try {\n+            Path p = Files.createTempDirectory(\"greengrass-test\");\n+            System.setProperty(key, p.toAbsolutePath().toString());\n+            return new CloseableResource() {\n+                @Override\n+                public void close() throws Throwable {\n+                    System.clearProperty(key);\n+                    Files.walkFileTree(p, new SimpleFileVisitor<Path>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8333e6433f013b63e4cfff615f2df03c8d51be13"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDc4MjY3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-516078267", "createdAt": "2020-10-23T23:26:13Z", "commit": {"oid": "8333e6433f013b63e4cfff615f2df03c8d51be13"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzoyNjoxM1rOHng6PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzoyNjoxM1rOHng6PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTcwOQ==", "bodyText": "I will change this to the new format:\nservices:\n  aws.greengrass.Nucleus:\n    runWithDefault:\n      posixUser: nobody", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r511195709", "createdAt": "2020-10-23T23:26:13Z", "author": {"login": "rbattle"}, "path": "src/integrationtests/resources/com/aws/greengrass/integrationtests/deployment/config.yaml", "diffHunk": "@@ -1,4 +1,8 @@\n ---\n+system:\n+  runWithDefault:\n+    posixUser: nobody\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8333e6433f013b63e4cfff615f2df03c8d51be13"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1341a816a498ab00a14463e11185cbbb3683bd89", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1341a816a498ab00a14463e11185cbbb3683bd89", "committedDate": "2020-10-26T04:07:13Z", "message": "Update Unix user/group attribute to parse UIDs/GIDs as long instead of int\nUIDs are generally unsigned ints\n\nUpdate test yaml files and add closable log utility\n\nWrap calls to add log listener in an auto closeable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b26499d91d5f0b0f5819f6b398e83b640e12c9c1", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b26499d91d5f0b0f5819f6b398e83b640e12c9c1", "committedDate": "2020-10-26T04:09:42Z", "message": "Merge branch 'master' into set-owner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6d95c10912965a17c3202868b885ef540b65b04", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c6d95c10912965a17c3202868b885ef540b65b04", "committedDate": "2020-10-26T04:30:31Z", "message": "For tests, attempt to kill with sudo and without"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4321b32203d9bb0378bca77ac689af793a632959", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4321b32203d9bb0378bca77ac689af793a632959", "committedDate": "2020-10-26T05:39:45Z", "message": "Add back a protected constructor in GenericExternalService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebbb077d4c41353aab9085725cf8fb398588ce3e", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ebbb077d4c41353aab9085725cf8fb398588ce3e", "committedDate": "2020-10-26T06:06:36Z", "message": "Remove group for nobody"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e0e99cd9dc6e0ddb88c4ae978ed4d9ef2660104", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4e0e99cd9dc6e0ddb88c4ae978ed4d9ef2660104", "committedDate": "2020-10-26T07:31:57Z", "message": "Add log messages when looking up user info fails. Fix yaml file config to set default user"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0a9175fda160f197d918bdc28c0aee2f4766373", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e0a9175fda160f197d918bdc28c0aee2f4766373", "committedDate": "2020-10-26T20:17:40Z", "message": "Fix DeploymentConfigMergingTest to keep nucleus configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "449c812195ccefd7408ad0301ba8f03939bed545", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/449c812195ccefd7408ad0301ba8f03939bed545", "committedDate": "2020-10-26T20:20:03Z", "message": "Merge branch 'master' into set-owner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62141dd542de61c0700efd240e92b91f40a8d910", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/62141dd542de61c0700efd240e92b91f40a8d910", "committedDate": "2020-10-26T20:48:20Z", "message": "Remove a bogus instanceof"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acc2e031a23909cca5e65619125f97d96fce25e3", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/acc2e031a23909cca5e65619125f97d96fce25e3", "committedDate": "2020-10-26T20:53:50Z", "message": "remove debug logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c192edc210524d39fa5f788d1f860ff75b64fe1b", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c192edc210524d39fa5f788d1f860ff75b64fe1b", "committedDate": "2020-10-27T00:41:40Z", "message": "Set default user for e2e tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fac93219e960576c6fd8855a93c47bffac3e13a6", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fac93219e960576c6fd8855a93c47bffac3e13a6", "committedDate": "2020-10-27T02:45:19Z", "message": "Merge remote-tracking branch 'origin/master' into set-owner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6543de990b248ddacd5f7ed318dade976072fd2c", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6543de990b248ddacd5f7ed318dade976072fd2c", "committedDate": "2020-10-27T03:26:42Z", "message": "Fix config merging test dependency order check"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a98cbed35e4d10e8818545de9c2e481e9f1b3f10", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a98cbed35e4d10e8818545de9c2e481e9f1b3f10", "committedDate": "2020-10-27T03:05:35Z", "message": "Fix config merging test dependency order check"}, "afterCommit": {"oid": "6543de990b248ddacd5f7ed318dade976072fd2c", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6543de990b248ddacd5f7ed318dade976072fd2c", "committedDate": "2020-10-27T03:26:42Z", "message": "Fix config merging test dependency order check"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5de4387d6eb09da7d618e3248e232e6c70a12449", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5de4387d6eb09da7d618e3248e232e6c70a12449", "committedDate": "2020-10-27T07:49:16Z", "message": "Set artifact and artifact dir permissions\n\nPermissions will be set to world readable for artifacts - this is temporary until the component model change is consumed\n\nThe artifacts directories need to be globally readable and executable so any user can enter the directories - otherwise sharing artifacts does not work\n\nOwnership of artifacts directories is set to the nucleus user. Ownership of artifact files is set to the user running the component (or default user)\n\nUpdate Exec to remove some environment variables for HOME, USER, that do not and should not be set for components. These took the values of the user running the kernel (e.g. root)\n\nThe `cd()` method to change to the user home directory is also dangerous and unused so it has been removed. We do not want to start processes in the user home directory."}, "afterCommit": {"oid": "6393770b9b11f76061385fafdbaf0d3912fb6c38", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6393770b9b11f76061385fafdbaf0d3912fb6c38", "committedDate": "2020-10-27T08:22:18Z", "message": "Set artifact and artifact dir permissions\n\nPermissions will be set to world readable for artifacts - this is temporary until the component model change is consumed\n\nThe artifacts directories need to be globally readable and executable so any user can enter the directories - otherwise sharing artifacts does not work\n\nOwnership of artifacts directories is set to the nucleus user. Ownership of artifact files is set to the user running the component (or default user)\n\nUpdate Exec to remove some environment variables for HOME, USER, that do not and should not be set for components. These took the values of the user running the kernel (e.g. root)\n\nThe `cd()` method to change to the user home directory is also dangerous and unused so it has been removed. We do not want to start processes in the user home directory."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b126b89975a9384ce37e93f0add6bdf2770db54", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2b126b89975a9384ce37e93f0add6bdf2770db54", "committedDate": "2020-10-27T16:02:46Z", "message": "Set artifact and artifact dir permissions\n\nPermissions will be set to world readable for artifacts - this is temporary until the component model change is consumed\n\nThe artifacts directories need to be globally readable and executable so any user can enter the directories - otherwise sharing artifacts does not work\n\nOwnership of artifacts directories is set to the nucleus user. Ownership of artifact files is set to the user running the component (or default user)\n\nUpdate Exec to remove some environment variables for HOME, USER, that do not and should not be set for components. These took the values of the user running the kernel (e.g. root)\n\nThe `cd()` method to change to the user home directory is also dangerous and unused so it has been removed. We do not want to start processes in the user home directory."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6393770b9b11f76061385fafdbaf0d3912fb6c38", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6393770b9b11f76061385fafdbaf0d3912fb6c38", "committedDate": "2020-10-27T08:22:18Z", "message": "Set artifact and artifact dir permissions\n\nPermissions will be set to world readable for artifacts - this is temporary until the component model change is consumed\n\nThe artifacts directories need to be globally readable and executable so any user can enter the directories - otherwise sharing artifacts does not work\n\nOwnership of artifacts directories is set to the nucleus user. Ownership of artifact files is set to the user running the component (or default user)\n\nUpdate Exec to remove some environment variables for HOME, USER, that do not and should not be set for components. These took the values of the user running the kernel (e.g. root)\n\nThe `cd()` method to change to the user home directory is also dangerous and unused so it has been removed. We do not want to start processes in the user home directory."}, "afterCommit": {"oid": "2b126b89975a9384ce37e93f0add6bdf2770db54", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2b126b89975a9384ce37e93f0add6bdf2770db54", "committedDate": "2020-10-27T16:02:46Z", "message": "Set artifact and artifact dir permissions\n\nPermissions will be set to world readable for artifacts - this is temporary until the component model change is consumed\n\nThe artifacts directories need to be globally readable and executable so any user can enter the directories - otherwise sharing artifacts does not work\n\nOwnership of artifacts directories is set to the nucleus user. Ownership of artifact files is set to the user running the component (or default user)\n\nUpdate Exec to remove some environment variables for HOME, USER, that do not and should not be set for components. These took the values of the user running the kernel (e.g. root)\n\nThe `cd()` method to change to the user home directory is also dangerous and unused so it has been removed. We do not want to start processes in the user home directory."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ca6989a9b0038ba03c9426a3790aedc131e04ee", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7ca6989a9b0038ba03c9426a3790aedc131e04ee", "committedDate": "2020-10-27T18:13:14Z", "message": "Merge branch 'master' into set-owner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3OTk3MTY3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-517997167", "createdAt": "2020-10-27T18:01:20Z", "commit": {"oid": "2b126b89975a9384ce37e93f0add6bdf2770db54"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODowMToyMFrOHpJwzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODoxNzo1MlrOHpKg8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxMzYxMw==", "bodyText": "ooh nice improvement!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r512913613", "createdAt": "2020-10-27T18:01:20Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -170,35 +170,33 @@ void GIVEN_kernel_running_single_service_WHEN_merge_changes_service_THEN_service\n                 safeUpdateRegistered.set(true);\n             }\n         };\n-        Slf4jLogAdapter.addGlobalListener(listener);\n-\n-        kernel.launch();\n-        assertTrue(mainRunning.await(5, TimeUnit.SECONDS));\n-\n-        // WHEN\n-        CountDownLatch mainRestarted = new CountDownLatch(1);\n-        kernel.getContext().addGlobalStateChangeListener((service, oldState, newState) -> {\n-            if (service.getName().equals(\"main\") && newState.equals(State.FINISHED) && oldState.equals(State.STARTING)) {\n-                mainRestarted.countDown();\n-            }\n-        });\n+        try (AutoCloseable l = TestUtils.createCloseableLogListener(listener)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b126b89975a9384ce37e93f0add6bdf2770db54"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyMDI1NQ==", "bodyText": "does this need to be a dependency of main? The previous file had it as a dep, but it isn't here.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r512920255", "createdAt": "2020-10-27T18:10:02Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/resources/com/aws/greengrass/integrationtests/deployment/delta.yaml", "diffHunk": "@@ -1,4 +1,9 @@\n services:\n+  aws.greengrass.Nucleus:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b126b89975a9384ce37e93f0add6bdf2770db54"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyMzcyMg==", "bodyText": "use enhanced for loop?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r512923722", "createdAt": "2020-10-27T18:14:46Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/RunWithArtifactHandler.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.componentmanager.models.ComponentIdentifier;\n+import com.aws.greengrass.util.CrashableFunction;\n+import com.aws.greengrass.util.FileSystemPermission;\n+import com.aws.greengrass.util.NucleusPaths;\n+import com.aws.greengrass.util.platforms.Platform;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Iterator;\n+import javax.inject.Inject;\n+\n+import static com.aws.greengrass.util.FileSystemPermission.Option.IgnorePermission;\n+import static com.aws.greengrass.util.FileSystemPermission.Option.Recurse;\n+\n+/**\n+ * Update artifact ownership based on service RunWith information.\n+ */\n+public class RunWithArtifactHandler {\n+\n+    final NucleusPaths nucleusPaths;\n+\n+    final Platform platform;\n+\n+    /**\n+     * Construct a new handler.\n+     *\n+     * @param paths paths in the nucleus.\n+     */\n+    @Inject\n+    public RunWithArtifactHandler(NucleusPaths paths) {\n+        this(paths, Platform.getInstance());\n+    }\n+\n+    /**\n+     * Construct a new handler.\n+     *\n+     * @param paths paths in the nucleus.\n+     * @param platform the platform instance.\n+     */\n+    public RunWithArtifactHandler(NucleusPaths paths, Platform platform) {\n+        this.nucleusPaths = paths;\n+        this.platform = platform;\n+    }\n+\n+    /**\n+     * Update the owner of the artifacts in the component on the local filesystem. The user and group of from the\n+     * RunWith parameter are used.\n+     *\n+     * @param id      the component to update.\n+     * @param runWith the user/group that should own the files.\n+     * @throws IOException if an error occurs while updating. This can occur if the user running the kernel does not\n+     *                     have the correct permissions or capabilities to change file ownership to another user.\n+     */\n+    public void updateOwner(ComponentIdentifier id, RunWith runWith) throws IOException {\n+        Path artifacts = nucleusPaths.artifactPath(id);\n+        Path unarchived = nucleusPaths.unarchiveArtifactPath(id);\n+\n+        FileSystemPermission permission = FileSystemPermission.builder()\n+                .ownerUser(runWith.getUser())\n+                .ownerGroup(runWith.getGroup())\n+                .build();\n+\n+        // change ownership of files within the artifact dirs, but don't change the artifact dir itself as that would\n+        // make it writable to the user\n+        CrashableFunction<Path, Void, IOException> f = (p) -> {\n+            if (Files.exists(p)) {\n+                for (Iterator<Path> it = Files.list(p).iterator(); it.hasNext(); ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca6989a9b0038ba03c9426a3790aedc131e04ee"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyNTIwMQ==", "bodyText": "this shouldn't be using setArtifactStorePermission should it? Since this path is the artifacts for a particular component.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r512925201", "createdAt": "2020-10-27T18:16:52Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/NucleusPaths.java", "diffHunk": "@@ -128,15 +132,18 @@ public Path unarchivePath() {\n     public Path unarchiveArtifactPath(ComponentIdentifier componentIdentifier, String artifactName) throws IOException {\n         Path p = unarchiveArtifactPath(componentIdentifier).resolve(artifactName);\n         Utils.createPaths(p);\n-        Permissions.setArtifactPermission(p);\n+        Permissions.setArtifactStorePermission(p);\n         return p;\n     }\n \n     public Path unarchiveArtifactPath(ComponentIdentifier componentIdentifier) throws IOException {\n-        Path p = unarchivePath().resolve(componentIdentifier.getName())\n-                .resolve(componentIdentifier.getVersion().getValue());\n+        Path p = unarchivePath().resolve(componentIdentifier.getName());\n+        Utils.createPaths(p);\n+        Permissions.setArtifactStorePermission(p);\n+\n+        p = p.resolve(componentIdentifier.getVersion().getValue());\n         Utils.createPaths(p);\n-        Permissions.setArtifactPermission(p);\n+        Permissions.setArtifactStorePermission(p);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca6989a9b0038ba03c9426a3790aedc131e04ee"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyNTkzOA==", "bodyText": "enhanced for loop?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r512925938", "createdAt": "2020-10-27T18:17:52Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/Permissions.java", "diffHunk": "@@ -8,19 +8,48 @@\n import com.aws.greengrass.util.platforms.Platform;\n \n import java.io.IOException;\n+import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.Iterator;\n \n public final class Permissions {\n     private static final Platform platform = Platform.getInstance();\n-    private static final FileSystemPermission OWNER_RWX_ONLY =\n-            new FileSystemPermission(null, null, true, true, true, false, false, false, false, false, false);\n-    private static final FileSystemPermission OWNER_RWX_EVERYONE_RX =\n-            new FileSystemPermission(null, null, true, true, true, true, false, true, true, false, true);\n+    private static final FileSystemPermission OWNER_RWX_ONLY =  FileSystemPermission.builder()\n+            .ownerRead(true).ownerWrite(true).ownerExecute(true).build();\n+    private static final FileSystemPermission OWNER_RWX_EVERYONE_RX = FileSystemPermission.builder()\n+            .ownerRead(true).ownerWrite(true).ownerExecute(true)\n+            .groupRead(true).groupExecute(true)\n+            .otherRead(true).otherExecute(true)\n+            .build();\n+    private static final FileSystemPermission OWNER_R_ONLY = FileSystemPermission.builder().ownerRead(true).build();\n+    private static final FileSystemPermission EVERYONE_RX = FileSystemPermission.builder()\n+            .ownerRead(true).ownerExecute(true)\n+            .groupRead(true).groupExecute(true)\n+            .otherRead(true).otherExecute(true)\n+            .build();\n \n     private Permissions() {\n     }\n \n+    /**\n+     * Set default permissions on an artifact.\n+     *\n+     * @param p the artifact path.\n+     * @throws IOException if an error occurs.\n+     */\n     public static void setArtifactPermission(Path p) throws IOException {\n+        if (p == null || !Files.exists(p)) {\n+            return;\n+        }\n+        // default artifact permissions - readable by owner but everyone can access dirs\n+        if (Files.isDirectory(p)) {\n+            platform.setPermissions(OWNER_RWX_EVERYONE_RX, p);\n+            for (Iterator<Path> it = Files.list(p).iterator(); it.hasNext(); ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca6989a9b0038ba03c9426a3790aedc131e04ee"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4Mjg2ODA4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-518286808", "createdAt": "2020-10-28T02:47:03Z", "commit": {"oid": "7ca6989a9b0038ba03c9426a3790aedc131e04ee"}, "state": "DISMISSED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMjo0NzowNFrOHpYBMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMzozNjo0OVrOHpY1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE0NzE4NQ==", "bodyText": "nit: package -> component", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r513147185", "createdAt": "2020-10-28T02:47:04Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java", "diffHunk": "@@ -306,7 +307,16 @@ void prepareArtifacts(ComponentIdentifier componentIdentifier, List<ComponentArt\n                 }\n             }\n             File artifactFile = downloader.getArtifactFile(packageArtifactDirectory, artifact, componentIdentifier);\n-\n+            if (artifactFile != null) {\n+                // TODO: Change permissions - set world readable until artifact permissions can be set via model\n+                try {\n+                    Permissions.setArtifactPermission(artifactFile.toPath());\n+                } catch (IOException e) {\n+                    throw new PackageDownloadException(\n+                            String.format(\"Failed to change permissions of package %s artifact %s\", componentIdentifier,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca6989a9b0038ba03c9426a3790aedc131e04ee"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE0NzMzNw==", "bodyText": "What's this TODO about? Does it need to be resolved before re:Invent?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r513147337", "createdAt": "2020-10-28T02:47:38Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/componentmanager/ComponentManager.java", "diffHunk": "@@ -306,7 +307,16 @@ void prepareArtifacts(ComponentIdentifier componentIdentifier, List<ComponentArt\n                 }\n             }\n             File artifactFile = downloader.getArtifactFile(packageArtifactDirectory, artifact, componentIdentifier);\n-\n+            if (artifactFile != null) {\n+                // TODO: Change permissions - set world readable until artifact permissions can be set via model", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca6989a9b0038ba03c9426a3790aedc131e04ee"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE0OTk0OA==", "bodyText": "Why do we need to set runWith to null?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r513149948", "createdAt": "2020-10-28T02:57:07Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GenericExternalService.java", "diffHunk": "@@ -326,6 +348,7 @@ protected synchronized void shutdown() {\n             stopAllLifecycleProcesses();\n             logger.atInfo().setEventType(\"generic-service-shutdown\").log();\n         }\n+        runWith = null; // reset runWith - a deployment can change user info", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca6989a9b0038ba03c9426a3790aedc131e04ee"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE1OTcwMQ==", "bodyText": "Shouldn't this be logged as an Error? The IOException is logged as an error inside updateArtifactOwner. Also what would be the default owner and permission if updateArtifactOwner fails?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r513159701", "createdAt": "2020-10-28T03:34:08Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GenericExternalService.java", "diffHunk": "@@ -406,8 +460,16 @@ protected void storeInitialRunWithConfiguration() {\n \n     @SuppressWarnings(\"PMD.CloseResource\")\n     protected Pair<RunStatus, Exec> run(Topic t, String cmd, IntConsumer background, List<Exec> trackingList,\n-                                        boolean requiresPrivilege)\n-            throws InterruptedException {\n+                                        boolean requiresPrivilege) throws InterruptedException {\n+        if (runWith == null) {\n+            if (!storeInitialRunWithConfiguration()) {\n+                return new Pair<>(RunStatus.Errored, null);\n+            }\n+            if (!updateArtifactOwner()) {\n+                logger.atWarn().log(\"Service artifacts may not be accessible to user\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca6989a9b0038ba03c9426a3790aedc131e04ee"}, "originalPosition": 199}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE2MDQ5Ng==", "bodyText": "If setPermissions throws IOException, do we want to continue the for loop for the rest?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r513160496", "createdAt": "2020-10-28T03:36:49Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/RunWithArtifactHandler.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.lifecyclemanager;\n+\n+import com.aws.greengrass.componentmanager.models.ComponentIdentifier;\n+import com.aws.greengrass.util.CrashableFunction;\n+import com.aws.greengrass.util.FileSystemPermission;\n+import com.aws.greengrass.util.NucleusPaths;\n+import com.aws.greengrass.util.platforms.Platform;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Iterator;\n+import javax.inject.Inject;\n+\n+import static com.aws.greengrass.util.FileSystemPermission.Option.IgnorePermission;\n+import static com.aws.greengrass.util.FileSystemPermission.Option.Recurse;\n+\n+/**\n+ * Update artifact ownership based on service RunWith information.\n+ */\n+public class RunWithArtifactHandler {\n+\n+    final NucleusPaths nucleusPaths;\n+\n+    final Platform platform;\n+\n+    /**\n+     * Construct a new handler.\n+     *\n+     * @param paths paths in the nucleus.\n+     */\n+    @Inject\n+    public RunWithArtifactHandler(NucleusPaths paths) {\n+        this(paths, Platform.getInstance());\n+    }\n+\n+    /**\n+     * Construct a new handler.\n+     *\n+     * @param paths paths in the nucleus.\n+     * @param platform the platform instance.\n+     */\n+    public RunWithArtifactHandler(NucleusPaths paths, Platform platform) {\n+        this.nucleusPaths = paths;\n+        this.platform = platform;\n+    }\n+\n+    /**\n+     * Update the owner of the artifacts in the component on the local filesystem. The user and group of from the\n+     * RunWith parameter are used.\n+     *\n+     * @param id      the component to update.\n+     * @param runWith the user/group that should own the files.\n+     * @throws IOException if an error occurs while updating. This can occur if the user running the kernel does not\n+     *                     have the correct permissions or capabilities to change file ownership to another user.\n+     */\n+    public void updateOwner(ComponentIdentifier id, RunWith runWith) throws IOException {\n+        Path artifacts = nucleusPaths.artifactPath(id);\n+        Path unarchived = nucleusPaths.unarchiveArtifactPath(id);\n+\n+        FileSystemPermission permission = FileSystemPermission.builder()\n+                .ownerUser(runWith.getUser())\n+                .ownerGroup(runWith.getGroup())\n+                .build();\n+\n+        // change ownership of files within the artifact dirs, but don't change the artifact dir itself as that would\n+        // make it writable to the user\n+        CrashableFunction<Path, Void, IOException> f = (p) -> {\n+            if (Files.exists(p)) {\n+                for (Iterator<Path> it = Files.list(p).iterator(); it.hasNext(); ) {\n+                    platform.setPermissions(permission, it.next(), Recurse, IgnorePermission);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca6989a9b0038ba03c9426a3790aedc131e04ee"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04ca88f915c1010fb6c49a85e3ac0143409436b8", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/04ca88f915c1010fb6c49a85e3ac0143409436b8", "committedDate": "2020-10-28T07:12:35Z", "message": "Add nucleus dependency for delta test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b0c1fcb2bd04c9ba32d80fec1fad8e6a9c61362", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0b0c1fcb2bd04c9ba32d80fec1fad8e6a9c61362", "committedDate": "2020-10-28T07:12:35Z", "message": "Fix loader bug; Update iot jobs dedupe (#573)\n\nCo-authored-by: Shagupta Shaikh <58999292+shaguptashaikh@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d47f5c988e70d71136e466a0483ddacd247ca85", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8d47f5c988e70d71136e466a0483ddacd247ca85", "committedDate": "2020-10-28T07:12:35Z", "message": "Fix permissions on temp directory when deleting, add logging for exec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54be8ffc81cbf8ea223259118ca127eace266e38", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/54be8ffc81cbf8ea223259118ca127eace266e38", "committedDate": "2020-10-28T07:28:21Z", "message": "Merge remote-tracking branch 'origin/master' into set-owner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bf5d1a85b661253ed758fc3b423c370228e7fe9", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7bf5d1a85b661253ed758fc3b423c370228e7fe9", "committedDate": "2020-10-28T08:35:31Z", "message": "Fixes so tests run as non-root user"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9f9fa7b841d84c51e8ca6f55d52cbc693ec4fd2", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f9f9fa7b841d84c51e8ca6f55d52cbc693ec4fd2", "committedDate": "2020-10-28T08:39:51Z", "message": "Change warn log to error for artifact ownership failure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c845840f934f558cc6f265e847a8f5bd24c696a", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9c845840f934f558cc6f265e847a8f5bd24c696a", "committedDate": "2020-10-28T08:37:24Z", "message": "Change warn log to error for artifact ownership failure"}, "afterCommit": {"oid": "f9f9fa7b841d84c51e8ca6f55d52cbc693ec4fd2", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f9f9fa7b841d84c51e8ca6f55d52cbc693ec4fd2", "committedDate": "2020-10-28T08:39:51Z", "message": "Change warn log to error for artifact ownership failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c026838ad6d3d83c9973991d07b958acd355b0ec", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c026838ad6d3d83c9973991d07b958acd355b0ec", "committedDate": "2020-10-28T08:44:38Z", "message": "set permissions and delete in visitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64e5dc0322bbd6253c6b405a9395d08f1f6d98bb", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/64e5dc0322bbd6253c6b405a9395d08f1f6d98bb", "committedDate": "2020-10-28T15:01:50Z", "message": "Merge branch 'master' into set-owner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "544afb1a681c09522cf61df525174202464d99a5", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/544afb1a681c09522cf61df525174202464d99a5", "committedDate": "2020-10-28T20:27:18Z", "message": "Merge branch 'master' into set-owner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDYyOTIy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-519062922", "createdAt": "2020-10-28T20:36:54Z", "commit": {"oid": "544afb1a681c09522cf61df525174202464d99a5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3183479f8760efbf300cfe722652e0095ebc150", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e3183479f8760efbf300cfe722652e0095ebc150", "committedDate": "2020-10-28T20:41:49Z", "message": "Merge branch 'master' into set-owner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDg0NzY0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-519084764", "createdAt": "2020-10-28T21:07:47Z", "commit": {"oid": "e3183479f8760efbf300cfe722652e0095ebc150"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fc8d297ed187042ba225b21daa983ab7bf52044", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2fc8d297ed187042ba225b21daa983ab7bf52044", "committedDate": "2020-10-29T01:03:32Z", "message": "Add default user to easy setup. Fix kernel command line user setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0863ff550db055febb27e609fdf2714797294a5e", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0863ff550db055febb27e609fdf2714797294a5e", "committedDate": "2020-10-29T02:06:26Z", "message": "Merge remote-tracking branch 'origin/master' into set-owner"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "615f2311283c6bf31041c938d0138b8c1ceb78bc", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/615f2311283c6bf31041c938d0138b8c1ceb78bc", "committedDate": "2020-10-29T02:24:31Z", "message": "Fix ezsetup arg"}, "afterCommit": {"oid": "5b4427043b8e77c21fa57a978c094aa3c265d131", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5b4427043b8e77c21fa57a978c094aa3c265d131", "committedDate": "2020-10-29T02:25:55Z", "message": "Fix ezsetup arg"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b4427043b8e77c21fa57a978c094aa3c265d131", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5b4427043b8e77c21fa57a978c094aa3c265d131", "committedDate": "2020-10-29T02:25:55Z", "message": "Fix ezsetup arg"}, "afterCommit": {"oid": "016fddca697dfcf3477109df6077112f3bd0e262", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/016fddca697dfcf3477109df6077112f3bd0e262", "committedDate": "2020-10-29T02:27:26Z", "message": "Fix ezsetup arg"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MjkyMDE4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-519292018", "createdAt": "2020-10-29T02:44:12Z", "commit": {"oid": "016fddca697dfcf3477109df6077112f3bd0e262"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0NDoxM1rOHqFsmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo0NDoxM1rOHqFsmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NTU3Ng==", "bodyText": "Does this need to get passed through the easy setup too?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#discussion_r513895576", "createdAt": "2020-10-29T02:44:13Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "diffHunk": "@@ -101,13 +103,37 @@ public void parseArgs(String... args) {\n                 case \"-es\":\n                     deviceConfiguration.getEnvironmentStage().withValue(getArg());\n                     break;\n+                case \"--component-default-user\":\n+                case \"-u\":\n+                    if (Exec.isWindows) {\n+                        deviceConfiguration.getRunWithDefaultWindowsUser().withValue(getArg());\n+                    } else {\n+                        deviceConfiguration.getRunWithDefaultPosixUser().withValue(getArg());\n+                    }\n+                    break;\n+                case \"--component-default-group\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "016fddca697dfcf3477109df6077112f3bd0e262"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6f581068f50075fe05ede31655afb8b40cb5f9d", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a6f581068f50075fe05ede31655afb8b40cb5f9d", "committedDate": "2020-10-29T04:20:40Z", "message": "Fix ezsetup arg"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "016fddca697dfcf3477109df6077112f3bd0e262", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/016fddca697dfcf3477109df6077112f3bd0e262", "committedDate": "2020-10-29T02:27:26Z", "message": "Fix ezsetup arg"}, "afterCommit": {"oid": "a6f581068f50075fe05ede31655afb8b40cb5f9d", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a6f581068f50075fe05ede31655afb8b40cb5f9d", "committedDate": "2020-10-29T04:20:40Z", "message": "Fix ezsetup arg"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5ODQ2NDY4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-519846468", "createdAt": "2020-10-29T16:21:57Z", "commit": {"oid": "a6f581068f50075fe05ede31655afb8b40cb5f9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01403e89901333b81ea8d1fbfb91f99f12706807", "author": {"user": {"login": "rbattle", "name": "Robert Battle"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/01403e89901333b81ea8d1fbfb91f99f12706807", "committedDate": "2020-10-29T18:26:41Z", "message": "Merge branch 'master' into set-owner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5OTcwNDIz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/555#pullrequestreview-519970423", "createdAt": "2020-10-29T18:42:58Z", "commit": {"oid": "01403e89901333b81ea8d1fbfb91f99f12706807"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2812, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}