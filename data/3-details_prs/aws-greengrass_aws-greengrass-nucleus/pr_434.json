{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NzI5MjI4", "number": 434, "title": "Generating authentication token for CLI and storing in a file", "bodyText": "Issue #, if available:\nDescription of changes:\nGenerating auth token for CLI. Switched to new branch to have clean commits on top of master.\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-09-14T16:10:27Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434", "merged": true, "mergeCommit": {"oid": "4b1cbd8b49fa714f0fa58c571fa6879e31d3778b"}, "closed": true, "closedAt": "2020-09-16T17:33:16Z", "author": {"login": "abanthiy"}, "timelineItems": {"totalCount": 39, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI2gIeAFqTQ4Nzk4MzQ1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJf4HLAFqTQ4OTg0NTc4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3OTgzNDU1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-487983455", "createdAt": "2020-09-14T17:15:33Z", "commit": {"oid": "c898dba0b608ab25a888bd58b53a517ae17f144f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzoxNTozM1rOHRe_-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzoxNzozMVrOHRfExw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA5NTczNw==", "bodyText": "nit\nremove the listener in a finally", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r488095737", "createdAt": "2020-09-14T17:15:33Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/fss/FleetStatusServiceTest.java", "diffHunk": "@@ -97,6 +98,13 @@ void GIVEN_kernel_running_with_deployed_services_WHEN_deployment_finishes_THEN_f\n                     mqttMessagesList.get().add(m);\n                 }).build());\n \n+        CountDownLatch fssPublishLatch = new CountDownLatch(2);\n+        Slf4jLogAdapter.addGlobalListener(eslm->{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c898dba0b608ab25a888bd58b53a517ae17f144f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA5Njk2Nw==", "bodyText": "Why not set the cause? Just ignore it in tests if you must", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r488096967", "createdAt": "2020-09-14T17:17:31Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/modules/CLIService.java", "diffHunk": "@@ -60,42 +78,102 @@\n     @Inject\n     private DeploymentStatusKeeper deploymentStatusKeeper;\n \n+    @Inject\n+    private AuthenticationHandler authenticationHandler;\n+\n+    @Inject\n+    private Kernel kernel;\n+\n     public CLIService(Topics topics) {\n         super(topics);\n     }\n \n     /**\n      * Constructor for unit testing.\n      * @param topics Service config\n+     * @param privateConfig Private config for the service\n      * @param router {@link IPCRouter}\n      * @param agent {@link CLIServiceAgent}\n      * @param deploymentStatusKeeper {@link DeploymentStatusKeeper}\n+     * @param authenticationHandler {@link AuthenticationHandler}\n+     * @param kernel {@link Kernel}\n      */\n-    public CLIService(Topics topics, IPCRouter router, CLIServiceAgent agent,\n-                      DeploymentStatusKeeper deploymentStatusKeeper) {\n-        super(topics);\n+    public CLIService(Topics topics, Topics privateConfig, IPCRouter router, CLIServiceAgent agent,\n+                      DeploymentStatusKeeper deploymentStatusKeeper, AuthenticationHandler authenticationHandler,\n+                      Kernel kernel) {\n+        super(topics, privateConfig);\n         this.router = router;\n         this.agent = agent;\n         this.deploymentStatusKeeper = deploymentStatusKeeper;\n+        this.authenticationHandler = authenticationHandler;\n+        this.kernel = kernel;\n     }\n \n     @Override\n     public void postInject() {\n         BuiltInServiceDestinationCode destination = BuiltInServiceDestinationCode.CLI;\n         super.postInject();\n+        // Does not happen for built-in/plugin services so doing explicitly\n+        AuthenticationHandler.registerAuthenticationToken(this);\n         try {\n             router.registerServiceCallback(destination.getValue(), this::handleMessage);\n             logger.atInfo().setEventType(\"ipc-register-request-handler\").addKeyValue(\"destination\", destination.name())\n                     .log();\n             deploymentStatusKeeper.registerDeploymentStatusConsumer(Deployment.DeploymentType.LOCAL,\n                     this::deploymentStatusChanged, CLIService.class.getName());\n+\n         } catch (IPCException e) {\n             logger.atError().setEventType(\"ipc-register-request-handler-error\").setCause(e)\n                     .addKeyValue(\"destination\", destination.name())\n                     .log(\"Failed to register service callback to destination\");\n         }\n     }\n \n+    @Override\n+    protected void startup() {\n+        try {\n+            generateCliIpcInfo();\n+            reportState(State.RUNNING);\n+        } catch (IOException | UnauthenticatedException e) {\n+            logger.atError().setEventType(\"cli-ipc-info-generation-error\")\n+                    // CloseByInterrupt exception occurs in tests if the threads finish earlier than this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c898dba0b608ab25a888bd58b53a517ae17f144f"}, "originalPosition": 130}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "424a2c967fb20f037d2aafbfad5ef5e5adef575c", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/424a2c967fb20f037d2aafbfad5ef5e5adef575c", "committedDate": "2020-09-14T18:55:16Z", "message": "Using modified IPC Client with new thread pool and closing connection in IotConnectionManager"}, "afterCommit": {"oid": "f88d6773f39f29b778635a916ea750c9fd8a7490", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f88d6773f39f29b778635a916ea750c9fd8a7490", "committedDate": "2020-09-14T19:41:45Z", "message": "Using modified IPC Client with new thread pool and closing connection in IotConnectionManager. Updating test to avoid IPC Server exception."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjE1NzAx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-488215701", "createdAt": "2020-09-14T23:09:49Z", "commit": {"oid": "434183cc3a995cbb31e48ad5040c0c8b4c89ee66"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzowOTo0OVrOHRqs0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzowOTo0OVrOHRqs0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI4NzQ0Mw==", "bodyText": "you can change this back now", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r488287443", "createdAt": "2020-09-14T23:09:49Z", "author": {"login": "MikeDombo"}, "path": "pom.xml", "diffHunk": "@@ -90,7 +90,7 @@\n         <dependency>\n             <groupId>com.aws.iot</groupId>\n             <artifactId>evergreen-java-sdk</artifactId>\n-            <version>0.0.0-SNAPSHOT</version>\n+            <version>0.0.0-cached-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434183cc3a995cbb31e48ad5040c0c8b4c89ee66"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjE1ODY2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-488215866", "createdAt": "2020-09-14T23:10:18Z", "commit": {"oid": "434183cc3a995cbb31e48ad5040c0c8b4c89ee66"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzoxMDoxOFrOHRqtYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzoxMDoxOFrOHRqtYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI4NzU4NA==", "bodyText": "why are these needed, I don't think I see it used?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r488287584", "createdAt": "2020-09-14T23:10:18Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/fss/FleetStatusService.java", "diffHunk": "@@ -66,7 +67,8 @@\n     private final Kernel kernel;\n     private final String architecture;\n     private final String platform;\n-    private final MqttChunkedPayloadPublisher<ComponentStatusDetails> publisher;\n+    @Getter @Setter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434183cc3a995cbb31e48ad5040c0c8b4c89ee66"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjE2MTky", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-488216192", "createdAt": "2020-09-14T23:11:10Z", "commit": {"oid": "434183cc3a995cbb31e48ad5040c0c8b4c89ee66"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzoxMToxMFrOHRqujg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzoxMToxMFrOHRqujg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI4Nzg4Ng==", "bodyText": "with coerce you don't need to call getOnce", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r488287886", "createdAt": "2020-09-14T23:11:10Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/modules/CLIService.java", "diffHunk": "@@ -60,42 +78,102 @@\n     @Inject\n     private DeploymentStatusKeeper deploymentStatusKeeper;\n \n+    @Inject\n+    private AuthenticationHandler authenticationHandler;\n+\n+    @Inject\n+    private Kernel kernel;\n+\n     public CLIService(Topics topics) {\n         super(topics);\n     }\n \n     /**\n      * Constructor for unit testing.\n      * @param topics Service config\n+     * @param privateConfig Private config for the service\n      * @param router {@link IPCRouter}\n      * @param agent {@link CLIServiceAgent}\n      * @param deploymentStatusKeeper {@link DeploymentStatusKeeper}\n+     * @param authenticationHandler {@link AuthenticationHandler}\n+     * @param kernel {@link Kernel}\n      */\n-    public CLIService(Topics topics, IPCRouter router, CLIServiceAgent agent,\n-                      DeploymentStatusKeeper deploymentStatusKeeper) {\n-        super(topics);\n+    public CLIService(Topics topics, Topics privateConfig, IPCRouter router, CLIServiceAgent agent,\n+                      DeploymentStatusKeeper deploymentStatusKeeper, AuthenticationHandler authenticationHandler,\n+                      Kernel kernel) {\n+        super(topics, privateConfig);\n         this.router = router;\n         this.agent = agent;\n         this.deploymentStatusKeeper = deploymentStatusKeeper;\n+        this.authenticationHandler = authenticationHandler;\n+        this.kernel = kernel;\n     }\n \n     @Override\n     public void postInject() {\n         BuiltInServiceDestinationCode destination = BuiltInServiceDestinationCode.CLI;\n         super.postInject();\n+        // Does not happen for built-in/plugin services so doing explicitly\n+        AuthenticationHandler.registerAuthenticationToken(this);\n         try {\n             router.registerServiceCallback(destination.getValue(), this::handleMessage);\n             logger.atInfo().setEventType(\"ipc-register-request-handler\").addKeyValue(\"destination\", destination.name())\n                     .log();\n             deploymentStatusKeeper.registerDeploymentStatusConsumer(Deployment.DeploymentType.LOCAL,\n                     this::deploymentStatusChanged, CLIService.class.getName());\n+\n         } catch (IPCException e) {\n             logger.atError().setEventType(\"ipc-register-request-handler-error\").setCause(e)\n                     .addKeyValue(\"destination\", destination.name())\n                     .log(\"Failed to register service callback to destination\");\n         }\n     }\n \n+    @Override\n+    protected void startup() {\n+        try {\n+            generateCliIpcInfo();\n+            reportState(State.RUNNING);\n+        } catch (IOException | UnauthenticatedException e) {\n+            logger.atError().setEventType(\"cli-ipc-info-generation-error\")\n+                    // CloseByInterrupt exception occurs in tests if the threads finish earlier than this method\n+                    // fnishes generating the cli ipc info file. This not setting the cause here.\n+                    .kv(\"errorMessage\", e.getMessage())\n+                    .log(\"Failed to create cli_ipc_info file\");\n+        }\n+    }\n+\n+    @SuppressFBWarnings(value = {\"RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\", \"RV_RETURN_VALUE_IGNORED\"},\n+            justification = \"File is created in the same method\")\n+    @SuppressWarnings(\"PMD.PrematureDeclaration\")\n+    private void generateCliIpcInfo() throws UnauthenticatedException, IOException {\n+        String cliAuthToken = authenticationHandler.registerAuthenticationTokenForExternalClient(\n+                Coerce.toString(getPrivateConfig().find(SERVICE_UNIQUE_ID_KEY).getOnce()),\n+                GREENGRASS_CLI);\n+        Map<String, String> ipcInfo = new HashMap<>();\n+        ipcInfo.put(CLI_AUTH_TOKEN, cliAuthToken);\n+\n+        if (config.getRoot().find(SETENV_CONFIG_NAMESPACE, KERNEL_URI_ENV_VARIABLE_NAME) == null) {\n+            logger.atWarn().log(\"Did not find IPC socket URL in the config. Not creating the cli ipc info file\");\n+            return;\n+        } else {\n+            //TODO: Change the URL as per the new IPC\n+            ipcInfo.put(SOCKET_URL, Coerce.toString(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434183cc3a995cbb31e48ad5040c0c8b4c89ee66"}, "originalPosition": 152}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "982fbed5b560aa47abaa7ddccb0dbd1498555607", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/982fbed5b560aa47abaa7ddccb0dbd1498555607", "committedDate": "2020-09-14T23:35:11Z", "message": "Merge branch 'master' into cliAuthentication2"}, "afterCommit": {"oid": "688c20186b2d5987c190a22237ac5781d9e75abc", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/688c20186b2d5987c190a22237ac5781d9e75abc", "committedDate": "2020-09-14T23:47:15Z", "message": "Addressing PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjMxNjk3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-488231697", "createdAt": "2020-09-14T23:56:33Z", "commit": {"oid": "688c20186b2d5987c190a22237ac5781d9e75abc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzo1NjozM1rOHRrj4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzo1NjozM1rOHRrj4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwMTUzOQ==", "bodyText": "why add lenient()", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r488301539", "createdAt": "2020-09-14T23:56:33Z", "author": {"login": "fahadmohammed01"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/EGServiceTestUtil.java", "diffHunk": "@@ -57,15 +56,14 @@ public Topics initializeMockedConfig() {\n         lenient().when(config.lookupTopics(eq(RUNTIME_STORE_NAMESPACE_TOPIC))).thenReturn(runtimeStoreTopic);\n         lenient().when(config.lookupTopics(eq(PRIVATE_STORE_NAMESPACE_TOPIC))).thenReturn(privateStoreTopic);\n         lenient().when(privateStoreTopic.createLeafChild(eq(STATE_TOPIC_NAME))).thenReturn(stateTopic);\n-        when(config.createLeafChild(eq(SERVICE_DEPENDENCIES_NAMESPACE_TOPIC))).thenReturn(dependenciesTopic);\n-        when(config.getName()).thenReturn(serviceFullName);\n-        when(dependenciesTopic.dflt(Mockito.any())).thenReturn(dependenciesTopic);\n-        when(dependenciesTopic.getOnce()).thenReturn(new ArrayList<>());\n-        when(config.getContext()).thenReturn(context);\n+        lenient().when(config.createLeafChild(eq(SERVICE_DEPENDENCIES_NAMESPACE_TOPIC))).thenReturn(dependenciesTopic);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688c20186b2d5987c190a22237ac5781d9e75abc"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "688c20186b2d5987c190a22237ac5781d9e75abc", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/688c20186b2d5987c190a22237ac5781d9e75abc", "committedDate": "2020-09-14T23:47:15Z", "message": "Addressing PR comments"}, "afterCommit": {"oid": "0491d27ab1331b63cc0830cecca2b0adea2fd418", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0491d27ab1331b63cc0830cecca2b0adea2fd418", "committedDate": "2020-09-15T00:16:57Z", "message": "Addressing PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjQ1NzU1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-488245755", "createdAt": "2020-09-15T00:40:52Z", "commit": {"oid": "0491d27ab1331b63cc0830cecca2b0adea2fd418"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDo0MDo1MlrOHRsV0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDo1MDoyNVrOHRsgjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNDMyMQ==", "bodyText": "nit: authenticated", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r488314321", "createdAt": "2020-09-15T00:40:52Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/AuthenticationHandler.java", "diffHunk": "@@ -62,6 +63,43 @@ public static void registerAuthenticationToken(EvergreenService s) {\n         }\n     }\n \n+    /**\n+     * Register an auth token for an external client which is not part of Evergreen. Only authenticate EG service can", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0491d27ab1331b63cc0830cecca2b0adea2fd418"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNTkzMg==", "bodyText": "Seems unnecessary to call registerAuthenticationTokenForExternalClient. Maybe extract ln 86,91-96 and retry that only?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r488315932", "createdAt": "2020-09-15T00:46:15Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/AuthenticationHandler.java", "diffHunk": "@@ -62,6 +63,43 @@ public static void registerAuthenticationToken(EvergreenService s) {\n         }\n     }\n \n+    /**\n+     * Register an auth token for an external client which is not part of Evergreen. Only authenticate EG service can\n+     * register such a token.\n+     * @param requestingAuthToken Auth token of the requesting service\n+     * @param clientIdentifier The identifier to identify the client for which the token is being requested\n+     * @return Auth token.\n+     * @throws UnauthenticatedException thrown when the requestAuthToken is invalid\n+     */\n+    public String registerAuthenticationTokenForExternalClient(String requestingAuthToken,\n+                                                               String clientIdentifier)\n+            throws UnauthenticatedException {\n+        String authenticatedService = doAuthentication(requestingAuthToken);\n+        // Making it available only for CLIService right now. If it needs to be extended, requesting service can be\n+        // taken as a parameter\n+        if (!authenticatedService.equals(CLIService.CLI_SERVICE)) {\n+            logger.atError().kv(\"Requesting service name\", CLIService.CLI_SERVICE)\n+                    .log(\"Invalid requesting auth token for service\");\n+            throw new UnauthenticatedException(\"Invalid requesting auth token for service\");\n+        }\n+\n+        String authenticationToken = Utils.generateRandomString(16).toUpperCase();\n+        Topics tokenTopics = config.lookupTopics(EvergreenService.SERVICES_NAMESPACE_TOPIC,\n+                AUTHENTICATION_TOKEN_LOOKUP_KEY);\n+        tokenTopics.withParentNeedsToKnow(false);\n+\n+        Topic tokenTopic = tokenTopics.createLeafChild(authenticationToken);\n+\n+        // If the authentication token was already registered, that's an issue, so we will retry\n+        // generating a new token in that case\n+        if (tokenTopic.getOnce() == null) {\n+            tokenTopic.withValue(clientIdentifier);\n+            return authenticationToken;\n+        } else {\n+            return registerAuthenticationTokenForExternalClient(requestingAuthToken, clientIdentifier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0491d27ab1331b63cc0830cecca2b0adea2fd418"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNjg2Mw==", "bodyText": "Is this message correct? Why not moving this check to the beginning before ipcInfo is created?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r488316863", "createdAt": "2020-09-15T00:49:38Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/modules/CLIService.java", "diffHunk": "@@ -60,42 +78,101 @@\n     @Inject\n     private DeploymentStatusKeeper deploymentStatusKeeper;\n \n+    @Inject\n+    private AuthenticationHandler authenticationHandler;\n+\n+    @Inject\n+    private Kernel kernel;\n+\n     public CLIService(Topics topics) {\n         super(topics);\n     }\n \n     /**\n      * Constructor for unit testing.\n      * @param topics Service config\n+     * @param privateConfig Private config for the service\n      * @param router {@link IPCRouter}\n      * @param agent {@link CLIServiceAgent}\n      * @param deploymentStatusKeeper {@link DeploymentStatusKeeper}\n+     * @param authenticationHandler {@link AuthenticationHandler}\n+     * @param kernel {@link Kernel}\n      */\n-    public CLIService(Topics topics, IPCRouter router, CLIServiceAgent agent,\n-                      DeploymentStatusKeeper deploymentStatusKeeper) {\n-        super(topics);\n+    public CLIService(Topics topics, Topics privateConfig, IPCRouter router, CLIServiceAgent agent,\n+                      DeploymentStatusKeeper deploymentStatusKeeper, AuthenticationHandler authenticationHandler,\n+                      Kernel kernel) {\n+        super(topics, privateConfig);\n         this.router = router;\n         this.agent = agent;\n         this.deploymentStatusKeeper = deploymentStatusKeeper;\n+        this.authenticationHandler = authenticationHandler;\n+        this.kernel = kernel;\n     }\n \n     @Override\n     public void postInject() {\n         BuiltInServiceDestinationCode destination = BuiltInServiceDestinationCode.CLI;\n         super.postInject();\n+        // Does not happen for built-in/plugin services so doing explicitly\n+        AuthenticationHandler.registerAuthenticationToken(this);\n         try {\n             router.registerServiceCallback(destination.getValue(), this::handleMessage);\n             logger.atInfo().setEventType(\"ipc-register-request-handler\").addKeyValue(\"destination\", destination.name())\n                     .log();\n             deploymentStatusKeeper.registerDeploymentStatusConsumer(Deployment.DeploymentType.LOCAL,\n                     this::deploymentStatusChanged, CLIService.class.getName());\n+\n         } catch (IPCException e) {\n             logger.atError().setEventType(\"ipc-register-request-handler-error\").setCause(e)\n                     .addKeyValue(\"destination\", destination.name())\n                     .log(\"Failed to register service callback to destination\");\n         }\n     }\n \n+    @Override\n+    protected void startup() {\n+        try {\n+            generateCliIpcInfo();\n+            reportState(State.RUNNING);\n+        } catch (IOException | UnauthenticatedException e) {\n+            logger.atError().setEventType(\"cli-ipc-info-generation-error\")\n+                    // CloseByInterrupt exception occurs in tests if the threads finish earlier than this method\n+                    // fnishes generating the cli ipc info file. This not setting the cause here.\n+                    .kv(\"errorMessage\", e.getMessage())\n+                    .log(\"Failed to create cli_ipc_info file\");\n+        }\n+    }\n+\n+    @SuppressFBWarnings(value = {\"RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\", \"RV_RETURN_VALUE_IGNORED\"},\n+            justification = \"File is created in the same method\")\n+    @SuppressWarnings(\"PMD.PrematureDeclaration\")\n+    private void generateCliIpcInfo() throws UnauthenticatedException, IOException {\n+        String cliAuthToken = authenticationHandler.registerAuthenticationTokenForExternalClient(\n+                Coerce.toString(getPrivateConfig().find(SERVICE_UNIQUE_ID_KEY)),\n+                GREENGRASS_CLI);\n+        Map<String, String> ipcInfo = new HashMap<>();\n+        ipcInfo.put(CLI_AUTH_TOKEN, cliAuthToken);\n+\n+        if (config.getRoot().find(SETENV_CONFIG_NAMESPACE, KERNEL_URI_ENV_VARIABLE_NAME) == null) {\n+            logger.atWarn().log(\"Did not find IPC socket URL in the config. Not creating the cli ipc info file\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0491d27ab1331b63cc0830cecca2b0adea2fd418"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNzA3MQ==", "bodyText": "Is this file for CLI to read? Why does CLIService needs to be a service?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r488317071", "createdAt": "2020-09-15T00:50:25Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/modules/CLIService.java", "diffHunk": "@@ -60,42 +78,101 @@\n     @Inject\n     private DeploymentStatusKeeper deploymentStatusKeeper;\n \n+    @Inject\n+    private AuthenticationHandler authenticationHandler;\n+\n+    @Inject\n+    private Kernel kernel;\n+\n     public CLIService(Topics topics) {\n         super(topics);\n     }\n \n     /**\n      * Constructor for unit testing.\n      * @param topics Service config\n+     * @param privateConfig Private config for the service\n      * @param router {@link IPCRouter}\n      * @param agent {@link CLIServiceAgent}\n      * @param deploymentStatusKeeper {@link DeploymentStatusKeeper}\n+     * @param authenticationHandler {@link AuthenticationHandler}\n+     * @param kernel {@link Kernel}\n      */\n-    public CLIService(Topics topics, IPCRouter router, CLIServiceAgent agent,\n-                      DeploymentStatusKeeper deploymentStatusKeeper) {\n-        super(topics);\n+    public CLIService(Topics topics, Topics privateConfig, IPCRouter router, CLIServiceAgent agent,\n+                      DeploymentStatusKeeper deploymentStatusKeeper, AuthenticationHandler authenticationHandler,\n+                      Kernel kernel) {\n+        super(topics, privateConfig);\n         this.router = router;\n         this.agent = agent;\n         this.deploymentStatusKeeper = deploymentStatusKeeper;\n+        this.authenticationHandler = authenticationHandler;\n+        this.kernel = kernel;\n     }\n \n     @Override\n     public void postInject() {\n         BuiltInServiceDestinationCode destination = BuiltInServiceDestinationCode.CLI;\n         super.postInject();\n+        // Does not happen for built-in/plugin services so doing explicitly\n+        AuthenticationHandler.registerAuthenticationToken(this);\n         try {\n             router.registerServiceCallback(destination.getValue(), this::handleMessage);\n             logger.atInfo().setEventType(\"ipc-register-request-handler\").addKeyValue(\"destination\", destination.name())\n                     .log();\n             deploymentStatusKeeper.registerDeploymentStatusConsumer(Deployment.DeploymentType.LOCAL,\n                     this::deploymentStatusChanged, CLIService.class.getName());\n+\n         } catch (IPCException e) {\n             logger.atError().setEventType(\"ipc-register-request-handler-error\").setCause(e)\n                     .addKeyValue(\"destination\", destination.name())\n                     .log(\"Failed to register service callback to destination\");\n         }\n     }\n \n+    @Override\n+    protected void startup() {\n+        try {\n+            generateCliIpcInfo();\n+            reportState(State.RUNNING);\n+        } catch (IOException | UnauthenticatedException e) {\n+            logger.atError().setEventType(\"cli-ipc-info-generation-error\")\n+                    // CloseByInterrupt exception occurs in tests if the threads finish earlier than this method\n+                    // fnishes generating the cli ipc info file. This not setting the cause here.\n+                    .kv(\"errorMessage\", e.getMessage())\n+                    .log(\"Failed to create cli_ipc_info file\");\n+        }\n+    }\n+\n+    @SuppressFBWarnings(value = {\"RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\", \"RV_RETURN_VALUE_IGNORED\"},\n+            justification = \"File is created in the same method\")\n+    @SuppressWarnings(\"PMD.PrematureDeclaration\")\n+    private void generateCliIpcInfo() throws UnauthenticatedException, IOException {\n+        String cliAuthToken = authenticationHandler.registerAuthenticationTokenForExternalClient(\n+                Coerce.toString(getPrivateConfig().find(SERVICE_UNIQUE_ID_KEY)),\n+                GREENGRASS_CLI);\n+        Map<String, String> ipcInfo = new HashMap<>();\n+        ipcInfo.put(CLI_AUTH_TOKEN, cliAuthToken);\n+\n+        if (config.getRoot().find(SETENV_CONFIG_NAMESPACE, KERNEL_URI_ENV_VARIABLE_NAME) == null) {\n+            logger.atWarn().log(\"Did not find IPC socket URL in the config. Not creating the cli ipc info file\");\n+            return;\n+        } else {\n+            //TODO: Change the URL as per the new IPC\n+            ipcInfo.put(SOCKET_URL, Coerce.toString(\n+                    config.getRoot().find(SETENV_CONFIG_NAMESPACE, KERNEL_URI_ENV_VARIABLE_NAME)));\n+        }\n+\n+        Path filePath = kernel.getRootPath().resolve(CLI_IPC_INFO_FILENAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0491d27ab1331b63cc0830cecca2b0adea2fd418"}, "originalPosition": 156}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0491d27ab1331b63cc0830cecca2b0adea2fd418", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0491d27ab1331b63cc0830cecca2b0adea2fd418", "committedDate": "2020-09-15T00:16:57Z", "message": "Addressing PR comments"}, "afterCommit": {"oid": "858451ea0277b4660b18d00e46e0f3b4f97c6f19", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/858451ea0277b4660b18d00e46e0f3b4f97c6f19", "committedDate": "2020-09-15T02:08:38Z", "message": "Addressing PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4e90253af6535d66d918092962bc3252ad213f6", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d4e90253af6535d66d918092962bc3252ad213f6", "committedDate": "2020-09-15T18:58:49Z", "message": "Using ipc client retry branch of the SDK"}, "afterCommit": {"oid": "da1d51ebae3efe274d3d2eb6c92ec05e518d8b53", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/da1d51ebae3efe274d3d2eb6c92ec05e518d8b53", "committedDate": "2020-09-15T22:00:16Z", "message": "Using ipc connect retry and ignoring ConnectException in CLI tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9693d7423d4ee859449820418458c08e498edf89", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9693d7423d4ee859449820418458c08e498edf89", "committedDate": "2020-09-15T22:53:15Z", "message": "Adding debug logs for socket connect exception"}, "afterCommit": {"oid": "71b414fc34217867254c0a44c95b893208e25c1a", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/71b414fc34217867254c0a44c95b893208e25c1a", "committedDate": "2020-09-15T22:53:54Z", "message": "Adding debug logs for socket connect exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71b414fc34217867254c0a44c95b893208e25c1a", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/71b414fc34217867254c0a44c95b893208e25c1a", "committedDate": "2020-09-15T22:53:54Z", "message": "Adding debug logs for socket connect exception"}, "afterCommit": {"oid": "80c183092836d3cd75d546891ab59fc74b357fa8", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/80c183092836d3cd75d546891ab59fc74b357fa8", "committedDate": "2020-09-15T22:56:40Z", "message": "Adding debug logs for socket connect exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80c183092836d3cd75d546891ab59fc74b357fa8", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/80c183092836d3cd75d546891ab59fc74b357fa8", "committedDate": "2020-09-15T22:56:40Z", "message": "Adding debug logs for socket connect exception"}, "afterCommit": {"oid": "d06772366c4d0aa8a4a77b4d985b1bd442cb7d4e", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d06772366c4d0aa8a4a77b4d985b1bd442cb7d4e", "committedDate": "2020-09-15T23:42:49Z", "message": "Adding debug logs for socket connect exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d06772366c4d0aa8a4a77b4d985b1bd442cb7d4e", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d06772366c4d0aa8a4a77b4d985b1bd442cb7d4e", "committedDate": "2020-09-15T23:42:49Z", "message": "Adding debug logs for socket connect exception"}, "afterCommit": {"oid": "40c6595353e4dc0eb420c5d3e1d0ec5730457b41", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/40c6595353e4dc0eb420c5d3e1d0ec5730457b41", "committedDate": "2020-09-15T23:48:34Z", "message": "Adding debug logs for socket connect exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40c6595353e4dc0eb420c5d3e1d0ec5730457b41", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/40c6595353e4dc0eb420c5d3e1d0ec5730457b41", "committedDate": "2020-09-15T23:48:34Z", "message": "Adding debug logs for socket connect exception"}, "afterCommit": {"oid": "832d4ab4667bbd3c802cf9f15c0601a52cf212a5", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/832d4ab4667bbd3c802cf9f15c0601a52cf212a5", "committedDate": "2020-09-16T02:39:16Z", "message": "Adding debug logs for socket connect exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "832d4ab4667bbd3c802cf9f15c0601a52cf212a5", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/832d4ab4667bbd3c802cf9f15c0601a52cf212a5", "committedDate": "2020-09-16T02:39:16Z", "message": "Adding debug logs for socket connect exception"}, "afterCommit": {"oid": "2b7a4c26f5676bbda73274cf672c819d069e5927", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2b7a4c26f5676bbda73274cf672c819d069e5927", "committedDate": "2020-09-16T02:48:47Z", "message": "Adding debug logs for socket connect exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b7a4c26f5676bbda73274cf672c819d069e5927", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2b7a4c26f5676bbda73274cf672c819d069e5927", "committedDate": "2020-09-16T02:48:47Z", "message": "Adding debug logs for socket connect exception"}, "afterCommit": {"oid": "29135b5d1ce97c4300f5e17e1996dca72f3df3ef", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/29135b5d1ce97c4300f5e17e1996dca72f3df3ef", "committedDate": "2020-09-16T02:52:04Z", "message": "Adding debug logs for socket connect exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6965f5aa770a99f51e5956e5e2fe9160b6b841bf", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6965f5aa770a99f51e5956e5e2fe9160b6b841bf", "committedDate": "2020-09-16T03:09:31Z", "message": "Generating authentication token for CLI and storing in a file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f41eae11ebd5e3f6ee649549841d1c9fd77f96ab", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f41eae11ebd5e3f6ee649549841d1c9fd77f96ab", "committedDate": "2020-09-16T03:09:31Z", "message": "Changing logs in pubsub agent to info from debug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9150c2e3028e90e6f8c16c11fd1638fc95cb34a4", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9150c2e3028e90e6f8c16c11fd1638fc95cb34a4", "committedDate": "2020-09-16T03:09:31Z", "message": "Using modified IPC Client with new thread pool and closing connection in IotConnectionManager. Updating test to avoid IPC Server exception."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8816be42d64513d3eb6e6439cf5ab1f0bb361793", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8816be42d64513d3eb6e6439cf5ab1f0bb361793", "committedDate": "2020-09-16T03:09:31Z", "message": "Reverting the timeout values to 2 seconds and reverting the info logs to debug in PubSubAgent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4462a82887feca5de06b7cc5c4c891c7d39a771", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b4462a82887feca5de06b7cc5c4c891c7d39a771", "committedDate": "2020-09-16T03:09:31Z", "message": "Changing evergreen sdk version to snapshot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c60708d7ebab2383ba2f5ecfcfcabddf59b3af4", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3c60708d7ebab2383ba2f5ecfcfcabddf59b3af4", "committedDate": "2020-09-16T03:09:31Z", "message": "Addressing PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "245bfb63ed3a60835bebffa460e19f1535e51ac0", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/245bfb63ed3a60835bebffa460e19f1535e51ac0", "committedDate": "2020-09-16T03:09:31Z", "message": "Using ipc connect retry and ignoring ConnectException in CLI tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29135b5d1ce97c4300f5e17e1996dca72f3df3ef", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/29135b5d1ce97c4300f5e17e1996dca72f3df3ef", "committedDate": "2020-09-16T02:52:04Z", "message": "Adding debug logs for socket connect exception"}, "afterCommit": {"oid": "6956c3bf64ff38fd3b3a44ccf117381ab368c114", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6956c3bf64ff38fd3b3a44ccf117381ab368c114", "committedDate": "2020-09-16T03:09:31Z", "message": "Adding debug logs for socket connect exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb33ab2f56d1ebf8e9376efe6560fdb5dc07c03e", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bb33ab2f56d1ebf8e9376efe6560fdb5dc07c03e", "committedDate": "2020-09-16T05:12:47Z", "message": "Setting temp directory as root in IPCUtils"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a624524c6301a99ffcd2721a1de95c61996598b4", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a624524c6301a99ffcd2721a1de95c61996598b4", "committedDate": "2020-09-16T04:50:08Z", "message": "Setting temp directory as root in IPCUtils"}, "afterCommit": {"oid": "bb33ab2f56d1ebf8e9376efe6560fdb5dc07c03e", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bb33ab2f56d1ebf8e9376efe6560fdb5dc07c03e", "committedDate": "2020-09-16T05:12:47Z", "message": "Setting temp directory as root in IPCUtils"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MjkxMTc5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-489291179", "createdAt": "2020-09-16T05:46:08Z", "commit": {"oid": "bb33ab2f56d1ebf8e9376efe6560fdb5dc07c03e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTo0NjowOFrOHSg_5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTo0NjowOFrOHSg_5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3NzA2MA==", "bodyText": "any reason why we are only getting this for CLI and none of the other IPC tests?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r489177060", "createdAt": "2020-09-16T05:46:08Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCCliTest.java", "diffHunk": "@@ -75,25 +83,41 @@\n class IPCCliTest {\n \n     private static Kernel kernel;\n+    private static int LOCAL_DEPLOYMENT_TIMEOUT_MINUTES = 5;\n+    private static int SERVICE_STATE_CHECK_TIMEOUT_MINUTES = 5;\n     private IPCClient client;\n+    private static ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, false)\n+                    .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n \n     @BeforeEach\n-    void beforeEach(ExtensionContext context) throws InterruptedException {\n+    void beforeEach(ExtensionContext context) throws InterruptedException, IOException {\n+        ignoreExceptionOfType(context, ConnectException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb33ab2f56d1ebf8e9376efe6560fdb5dc07c03e"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MjkxMjY1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-489291265", "createdAt": "2020-09-16T05:46:22Z", "commit": {"oid": "bb33ab2f56d1ebf8e9376efe6560fdb5dc07c03e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTo0NjoyMlrOHShAJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTo0NjoyMlrOHShAJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3NzEyNg==", "bodyText": "await", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r489177126", "createdAt": "2020-09-16T05:46:22Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCCliTest.java", "diffHunk": "@@ -75,25 +83,41 @@\n class IPCCliTest {\n \n     private static Kernel kernel;\n+    private static int LOCAL_DEPLOYMENT_TIMEOUT_MINUTES = 5;\n+    private static int SERVICE_STATE_CHECK_TIMEOUT_MINUTES = 5;\n     private IPCClient client;\n+    private static ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, false)\n+                    .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n \n     @BeforeEach\n-    void beforeEach(ExtensionContext context) throws InterruptedException {\n+    void beforeEach(ExtensionContext context) throws InterruptedException, IOException {\n+        ignoreExceptionOfType(context, ConnectException.class);\n         ignoreExceptionWithMessage(context, \"Connection reset by peer\");\n         // Ignore if IPC can't send us more lifecycle updates because the test is already done.\n         ignoreExceptionUltimateCauseWithMessage(context, \"Channel not found for given connection context\");\n         kernel = prepareKernelFromConfigFile(\"ipc.yaml\", TEST_SERVICE_NAME, this.getClass());\n+        //wait for CLI Service to be up and running\n+        CountDownLatch cliServiceLatch = new CountDownLatch(1);\n+        kernel.getContext().addGlobalStateChangeListener((s, o, n)->{\n+            if (s.getName().equals(CLI_SERVICE) && n == State.RUNNING) {\n+                cliServiceLatch.countDown();\n+            }\n+        });\n+        cliServiceLatch.countDown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb33ab2f56d1ebf8e9376efe6560fdb5dc07c03e"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MjkxOTA1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-489291905", "createdAt": "2020-09-16T05:47:56Z", "commit": {"oid": "bb33ab2f56d1ebf8e9376efe6560fdb5dc07c03e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTo0Nzo1NlrOHShCQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTo0Nzo1NlrOHShCQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3NzY2Nw==", "bodyText": "Please use @TempDir which will cleanup after the test.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#discussion_r489177667", "createdAt": "2020-09-16T05:47:56Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/ipc/IPCTestUtils.java", "diffHunk": "@@ -38,9 +40,10 @@ public static KernelIPCClientConfig getIPCConfigForService(String serviceName, K\n                         .getOnce())).build();\n     }\n \n-    public static Kernel prepareKernelFromConfigFile(String configFile, String serviceName, Class testClass) throws InterruptedException {\n+    public static Kernel prepareKernelFromConfigFile(String configFile, String serviceName, Class testClass) throws InterruptedException, IOException {\n         Kernel kernel = new Kernel();\n-        kernel.parseArgs(\"-i\", testClass.getResource(configFile).toString());\n+        String rootDirectoryPath = Files.createTempDirectory(\"ipcCliTest\").toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb33ab2f56d1ebf8e9376efe6560fdb5dc07c03e"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cad3472aad6632e1c50ee9064e3bda2d9c2f5119", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cad3472aad6632e1c50ee9064e3bda2d9c2f5119", "committedDate": "2020-09-16T05:56:36Z", "message": "Addressing PR comments"}, "afterCommit": {"oid": "357063cdae2f9b29fa94c87a23cf55c8b4012fb0", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/357063cdae2f9b29fa94c87a23cf55c8b4012fb0", "committedDate": "2020-09-16T06:37:01Z", "message": "Addressing PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "357063cdae2f9b29fa94c87a23cf55c8b4012fb0", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/357063cdae2f9b29fa94c87a23cf55c8b4012fb0", "committedDate": "2020-09-16T06:37:01Z", "message": "Addressing PR comments"}, "afterCommit": {"oid": "d73879b90032ec88fbe90de192fd85b99b62f47f", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d73879b90032ec88fbe90de192fd85b99b62f47f", "committedDate": "2020-09-16T06:51:07Z", "message": "Addressing PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d73879b90032ec88fbe90de192fd85b99b62f47f", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d73879b90032ec88fbe90de192fd85b99b62f47f", "committedDate": "2020-09-16T06:51:07Z", "message": "Addressing PR comments"}, "afterCommit": {"oid": "82dc23b265245f980c5fb84757b8843a00d43527", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/82dc23b265245f980c5fb84757b8843a00d43527", "committedDate": "2020-09-16T07:39:43Z", "message": "Addressing PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82dc23b265245f980c5fb84757b8843a00d43527", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/82dc23b265245f980c5fb84757b8843a00d43527", "committedDate": "2020-09-16T07:39:43Z", "message": "Addressing PR comments"}, "afterCommit": {"oid": "ef5baa85e1c67d4d83a46606273c979b0ab13674", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ef5baa85e1c67d4d83a46606273c979b0ab13674", "committedDate": "2020-09-16T07:55:11Z", "message": "Addressing PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab742cea367b262daf2ed933dbf7d5a3c7f2ee4f", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ab742cea367b262daf2ed933dbf7d5a3c7f2ee4f", "committedDate": "2020-09-16T08:01:01Z", "message": "Addressing PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef5baa85e1c67d4d83a46606273c979b0ab13674", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ef5baa85e1c67d4d83a46606273c979b0ab13674", "committedDate": "2020-09-16T07:55:11Z", "message": "Addressing PR comments"}, "afterCommit": {"oid": "ab742cea367b262daf2ed933dbf7d5a3c7f2ee4f", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ab742cea367b262daf2ed933dbf7d5a3c7f2ee4f", "committedDate": "2020-09-16T08:01:01Z", "message": "Addressing PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5Nzg5MDky", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-489789092", "createdAt": "2020-09-16T16:15:59Z", "commit": {"oid": "ab742cea367b262daf2ed933dbf7d5a3c7f2ee4f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5ODQ1Nzgy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/434#pullrequestreview-489845782", "createdAt": "2020-09-16T17:30:54Z", "commit": {"oid": "ab742cea367b262daf2ed933dbf7d5a3c7f2ee4f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3301, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}