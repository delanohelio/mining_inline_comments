{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMzM0NDc1", "number": 592, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMzo1MjozMlrOEz_a_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMzo1NDowN1rOEz_bnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTUxOTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMzo1MjozMlrOHrjK8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMzo1OTo1M1rOHrjPtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyNzA1Ng==", "bodyText": "this isn't logging. use debug instead", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/592#discussion_r515427056", "createdAt": "2020-10-30T23:52:32Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java", "diffHunk": "@@ -156,6 +161,29 @@ public void startup() {\n             close();\n             throw e;\n         }\n+\n+        // IPC socket does not get created immediately after runServer returns\n+        // Wait up to 30s for it to exist\n+        Path ipcPath = Paths.get(ipcServerSocketAbsolutePath);\n+        long maxTime = System.currentTimeMillis() + MAX_IPC_SOCKET_CREATION_WAIT_TIME_SECONDS * 1000;\n+        while (System.currentTimeMillis() < maxTime && Files.notExists(ipcPath)) {\n+            logger.atDebug(\"Waiting for server socket file\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a92cbec2a1488aab510d6ac954d3749e83f0fd93"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyODI3OQ==", "bodyText": "\ud83e\udd26", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/592#discussion_r515428279", "createdAt": "2020-10-30T23:59:53Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java", "diffHunk": "@@ -156,6 +161,29 @@ public void startup() {\n             close();\n             throw e;\n         }\n+\n+        // IPC socket does not get created immediately after runServer returns\n+        // Wait up to 30s for it to exist\n+        Path ipcPath = Paths.get(ipcServerSocketAbsolutePath);\n+        long maxTime = System.currentTimeMillis() + MAX_IPC_SOCKET_CREATION_WAIT_TIME_SECONDS * 1000;\n+        while (System.currentTimeMillis() < maxTime && Files.notExists(ipcPath)) {\n+            logger.atDebug(\"Waiting for server socket file\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyNzA1Ng=="}, "originalCommit": {"oid": "a92cbec2a1488aab510d6ac954d3749e83f0fd93"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTUyMDkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMzo1NDowN1rOHrjL5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMzo1NDowN1rOHrjL5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyNzMwMg==", "bodyText": "rethrow (as unchecked) to cause the startup to fail?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/592#discussion_r515427302", "createdAt": "2020-10-30T23:54:07Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/ipc/IPCEventStreamService.java", "diffHunk": "@@ -156,6 +161,29 @@ public void startup() {\n             close();\n             throw e;\n         }\n+\n+        // IPC socket does not get created immediately after runServer returns\n+        // Wait up to 30s for it to exist\n+        Path ipcPath = Paths.get(ipcServerSocketAbsolutePath);\n+        long maxTime = System.currentTimeMillis() + MAX_IPC_SOCKET_CREATION_WAIT_TIME_SECONDS * 1000;\n+        while (System.currentTimeMillis() < maxTime && Files.notExists(ipcPath)) {\n+            logger.atDebug(\"Waiting for server socket file\");\n+            try {\n+                Thread.sleep(SOCKET_CREATE_POLL_INTERVAL_MS);\n+            } catch (InterruptedException e) {\n+                logger.atWarn().setCause(e).log(\"Service interrupted before server socket exists\");\n+                close();\n+                return;\n+            }\n+        }\n+        // set permissions on IPC socket so that everyone can read/write\n+        try {\n+            Permissions.setIpcSocketPermission(ipcPath);\n+        } catch (IOException e) {\n+            logger.atError().setCause(e).log(\"Error while setting permissions for IPC server socket\");\n+            close();\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a92cbec2a1488aab510d6ac954d3749e83f0fd93"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 432, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}