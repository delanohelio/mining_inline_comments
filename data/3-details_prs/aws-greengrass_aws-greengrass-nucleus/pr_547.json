{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MjY2MDU1", "number": 547, "title": "Add ability to restart nucleus on nucleus config changes if needed", "bodyText": "Issue #, if available:\nDescription of changes:\nSystem settings (which are modeled as the Nucleus component's config) might need nucleus to restart to take effect, example - network proxy settings need this already. To support that we allow services to check specific keys and decide if restart is needed during deployment. Currently this ability will be given to builtin services because no other types of services have the requirement, per Jamie's recommendation.\nThis PR will need more changes after the previous system setting PR is merged.\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-10-19T20:44:33Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547", "merged": true, "mergeCommit": {"oid": "4647bd29de278c8aee8d1c07b807959c96421d6b"}, "closed": true, "closedAt": "2020-10-23T15:20:16Z", "author": {"login": "shaguptashaikh"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUKe4TABqjM4OTU0NTk1MTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVYASkgFqTUxNTc1NjM4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2155940b450d3d45a6f5890afde6af5e5186205e", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2155940b450d3d45a6f5890afde6af5e5186205e", "committedDate": "2020-10-19T20:41:33Z", "message": "Add ability to restart nucleus on nucleus config changes if needed"}, "afterCommit": {"oid": "56a8b695d859704e4c7b1d7af0db89dced9f1e0b", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/56a8b695d859704e4c7b1d7af0db89dced9f1e0b", "committedDate": "2020-10-19T20:48:19Z", "message": "Add ability to restart nucleus on nucleus config changes if needed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56a8b695d859704e4c7b1d7af0db89dced9f1e0b", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/56a8b695d859704e4c7b1d7af0db89dced9f1e0b", "committedDate": "2020-10-19T20:48:19Z", "message": "Add ability to restart nucleus on nucleus config changes if needed"}, "afterCommit": {"oid": "88c709e228f0f63b4bf83efad1267895c1de80e2", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/88c709e228f0f63b4bf83efad1267895c1de80e2", "committedDate": "2020-10-19T20:55:25Z", "message": "Add ability to restart nucleus on nucleus config changes if needed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTU2MDgy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#pullrequestreview-512156082", "createdAt": "2020-10-19T21:01:27Z", "commit": {"oid": "88c709e228f0f63b4bf83efad1267895c1de80e2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMToyN1rOHkhgVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMTo0OFrOHkhhAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTczMg==", "bodyText": "nit: spelling mistake here: restartNucleusOnNucleusConfigChange", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508059732", "createdAt": "2020-10-19T21:01:27Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java", "diffHunk": "@@ -265,6 +265,20 @@ public int bootstrap() throws InterruptedException, TimeoutException {\n         return NO_OP;\n     }\n \n+    /**\n+     * Check if the proposed Nucleus config needs Nucleus to be restarted. Deployment workflow ill call this to decide\n+     * if nucleus restart is needed. Default is false, Greengrass services should override this method to check if\n+     * specific nucleus config keys have changed and if that should need a restart.\n+     *\n+     * @param newNucleusConfig new nucleus component config for the update\n+     * @return true if the proposed nucleus config should cause nucleus restart\n+     */\n+    public boolean restartNucleuslOnNucleusConfigChange(Map<String, Object> newNucleusConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88c709e228f0f63b4bf83efad1267895c1de80e2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTkwNw==", "bodyText": "nit: workflow will", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508059907", "createdAt": "2020-10-19T21:01:48Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GreengrassService.java", "diffHunk": "@@ -265,6 +265,20 @@ public int bootstrap() throws InterruptedException, TimeoutException {\n         return NO_OP;\n     }\n \n+    /**\n+     * Check if the proposed Nucleus config needs Nucleus to be restarted. Deployment workflow ill call this to decide", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88c709e228f0f63b4bf83efad1267895c1de80e2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjI5Mzc5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#pullrequestreview-512229379", "createdAt": "2020-10-19T23:30:53Z", "commit": {"oid": "88c709e228f0f63b4bf83efad1267895c1de80e2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMzozMDo1M1rOHklNdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMzozMjozNlrOHklPeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyMDQzNg==", "bodyText": "What's the reasoning of adding a separate check instead of extending serviceBootstrapRequired? Is it to limit the restart option to builtins only?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508120436", "createdAt": "2020-10-19T23:30:53Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -112,7 +116,40 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig) throws Service\n         logger.atInfo().kv(\"list\", dependencyFound).log(\"Found a list of bootstrap tasks in dependency order\");\n         dependencyFound.forEach(name -> bootstrapTaskStatusList.add(new BootstrapTaskStatus(name)));\n \n-        return !bootstrapTaskStatusList.isEmpty();\n+        if (bootstrapTaskStatusList.isEmpty()) {\n+            return nucleusConfigChangeNeedsRestart(newConfig);\n+        } else {\n+            return true;\n+        }\n+    }\n+\n+    private boolean nucleusConfigChangeNeedsRestart(Map<String, Object> deploymentConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88c709e228f0f63b4bf83efad1267895c1de80e2"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyMDk1Mw==", "bodyText": "curious, how many times will we try getting the config key for nucleus? Can this information be saved somewhere?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r508120953", "createdAt": "2020-10-19T23:32:36Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -112,7 +116,40 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig) throws Service\n         logger.atInfo().kv(\"list\", dependencyFound).log(\"Found a list of bootstrap tasks in dependency order\");\n         dependencyFound.forEach(name -> bootstrapTaskStatusList.add(new BootstrapTaskStatus(name)));\n \n-        return !bootstrapTaskStatusList.isEmpty();\n+        if (bootstrapTaskStatusList.isEmpty()) {\n+            return nucleusConfigChangeNeedsRestart(newConfig);\n+        } else {\n+            return true;\n+        }\n+    }\n+\n+    private boolean nucleusConfigChangeNeedsRestart(Map<String, Object> deploymentConfig) {\n+        boolean needsRestart = false;\n+        Map<String, Object> proposedNucleusConfig = getProposedNucleusConfig(deploymentConfig);\n+        for (GreengrassService s : kernel.orderedDependencies()) {\n+            // For now, only let builtin Greengrass services decide\n+            if (s.isBuiltin()) {\n+                needsRestart = needsRestart || s.restartNucleuslOnNucleusConfigChange(proposedNucleusConfig);\n+            }\n+        }\n+        return needsRestart;\n+    }\n+\n+    private Map<String, Object> getProposedNucleusConfig(Map<String, Object> deploymentConfig) {\n+        for (Map.Entry<String, Object> serviceConfig : deploymentConfig.entrySet()) {\n+            if (serviceConfig instanceof Map) {\n+                Map<String, Object> serviceConfigMap = (Map<String, Object>) serviceConfig;\n+                String componentType = Coerce.toString(serviceConfigMap.get(SERVICE_TYPE_TOPIC_KEY));\n+                Object componentConfiguration = serviceConfigMap.get(KernelConfigResolver.CONFIGURATION_CONFIG_KEY);\n+                // TODO : Use constant after rebasing on with PR 513\n+                //  And use enum from common component model when the new component type\n+                //  is available in common component model\n+                if (\"aws.greengrass.nucleus\".equals(componentType) && componentConfiguration instanceof Map) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88c709e228f0f63b4bf83efad1267895c1de80e2"}, "originalPosition": 65}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd63a91e3ab035c49e8562ef2bbfac8796b171d7", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dd63a91e3ab035c49e8562ef2bbfac8796b171d7", "committedDate": "2020-10-19T23:52:38Z", "message": "Merge branch 'master' into system-setting-restarts-kernel"}, "afterCommit": {"oid": "eca47aaf4816f215fcd7ca17870434ab6429771e", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eca47aaf4816f215fcd7ca17870434ab6429771e", "committedDate": "2020-10-21T16:53:06Z", "message": "Add ability to restart nucleus on nucleus config changes if needed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MDMzNDM5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#pullrequestreview-514033439", "createdAt": "2020-10-21T17:56:20Z", "commit": {"oid": "eca47aaf4816f215fcd7ca17870434ab6429771e"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNzo1NjoyMFrOHl6g4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNzo1NjoyMFrOHl6g4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUxODA1MA==", "bodyText": "nit on the comment. Right now we execute bootstrap tasks one by one, and then restart/reboot/do nothing, based on the return code. When the no more bootstrap tasks, we restart once regardless of the return code of last task. So we don't restart nucleus explicitly for nucleus config change, and we also don't consolidate the restart to once.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r509518050", "createdAt": "2020-10-21T17:56:20Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -88,6 +95,11 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig) throws Service\n                     \"No bootstrap tasks found: Deployment configuration is missing or has no service changes\");\n             return false;\n         }\n+\n+        // Validate nucleus config early, if it's valid, still proceed with evaluating if any bootstrap tasks\n+        // are needed such that we only need to restart nucleus once for all changes\n+        final boolean nucleusConfigValidAndNeedsRestart = nucleusConfigValidAndNeedsRestart(newConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eca47aaf4816f215fcd7ca17870434ab6429771e"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MTM5MTM1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#pullrequestreview-514139135", "createdAt": "2020-10-21T19:59:31Z", "commit": {"oid": "eca47aaf4816f215fcd7ca17870434ab6429771e"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo1OTozMVrOHmBmqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDowMDoxOVrOHmBrqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzNDIxNg==", "bodyText": "nit: have a static string for this?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r509634216", "createdAt": "2020-10-21T19:59:31Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/deployment/bootstrap/BootstrapManager.java", "diffHunk": "@@ -112,7 +124,37 @@ public boolean isBootstrapRequired(Map<String, Object> newConfig) throws Service\n         logger.atInfo().kv(\"list\", dependencyFound).log(\"Found a list of bootstrap tasks in dependency order\");\n         dependencyFound.forEach(name -> bootstrapTaskStatusList.add(new BootstrapTaskStatus(name)));\n \n-        return !bootstrapTaskStatusList.isEmpty();\n+        return nucleusConfigValidAndNeedsRestart || !bootstrapTaskStatusList.isEmpty();\n+    }\n+\n+    private boolean nucleusConfigValidAndNeedsRestart(Map<String, Object> deploymentConfig)\n+            throws ComponentConfigurationValidationException {\n+        boolean needsRestart = false;\n+        Map<String, Object> proposedNucleusConfig = getProposedNucleusConfig(deploymentConfig);\n+        for (GreengrassService s : kernel.orderedDependencies()) {\n+            // For now, only let builtin Greengrass services decide\n+            if (s.isBuiltin()) {\n+                needsRestart = needsRestart || s.restartNucleuslOnNucleusConfigChange(proposedNucleusConfig);\n+            }\n+        }\n+        return needsRestart;\n+    }\n+\n+    private Map<String, Object> getProposedNucleusConfig(Map<String, Object> deploymentConfig) {\n+        for (Map.Entry<String, Object> serviceConfig : deploymentConfig.entrySet()) {\n+            if (serviceConfig instanceof Map) {\n+                Map<String, Object> serviceConfigMap = (Map<String, Object>) serviceConfig;\n+                String componentType = Coerce.toString(serviceConfigMap.get(SERVICE_TYPE_TOPIC_KEY));\n+                Object componentConfiguration = serviceConfigMap.get(KernelConfigResolver.CONFIGURATION_CONFIG_KEY);\n+                // TODO : Use constant after rebasing on with PR 513\n+                //  And use enum from common component model when the new component type\n+                //  is available in common component model\n+                if (\"aws.greengrass.nucleus\".equals(componentType) && componentConfiguration instanceof Map) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eca47aaf4816f215fcd7ca17870434ab6429771e"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzNTQ5Ng==", "bodyText": "nit: add License header.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#discussion_r509635496", "createdAt": "2020-10-21T20:00:19Z", "author": {"login": "nikkhilmuthye"}, "path": "src/main/java/com/aws/greengrass/deployment/exceptions/ComponentConfigurationValidationException.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.aws.greengrass.deployment.exceptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eca47aaf4816f215fcd7ca17870434ab6429771e"}, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eca47aaf4816f215fcd7ca17870434ab6429771e", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eca47aaf4816f215fcd7ca17870434ab6429771e", "committedDate": "2020-10-21T16:53:06Z", "message": "Add ability to restart nucleus on nucleus config changes if needed"}, "afterCommit": {"oid": "fa5abfe76e2f41b7b6cb7def277d6ce944e20421", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fa5abfe76e2f41b7b6cb7def277d6ce944e20421", "committedDate": "2020-10-22T22:23:23Z", "message": "Add ability to restart nucleus on nucleus config changes if needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46b4727c9c01a2f71d356a05d3213426ea589a44", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/46b4727c9c01a2f71d356a05d3213426ea589a44", "committedDate": "2020-10-22T22:24:22Z", "message": "Add ability to restart nucleus on nucleus config changes if needed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa5abfe76e2f41b7b6cb7def277d6ce944e20421", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fa5abfe76e2f41b7b6cb7def277d6ce944e20421", "committedDate": "2020-10-22T22:23:23Z", "message": "Add ability to restart nucleus on nucleus config changes if needed"}, "afterCommit": {"oid": "46b4727c9c01a2f71d356a05d3213426ea589a44", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/46b4727c9c01a2f71d356a05d3213426ea589a44", "committedDate": "2020-10-22T22:24:22Z", "message": "Add ability to restart nucleus on nucleus config changes if needed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTg5MDE1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#pullrequestreview-515189015", "createdAt": "2020-10-22T23:37:58Z", "commit": {"oid": "46b4727c9c01a2f71d356a05d3213426ea589a44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4da793a86d34cd11c1adca215fce4b5aa4743a27", "author": {"user": {"login": "hui-yang", "name": "Hui Yang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4da793a86d34cd11c1adca215fce4b5aa4743a27", "committedDate": "2020-10-22T23:49:26Z", "message": "Merge branch 'master' into system-setting-restarts-kernel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "687c6b3e65d5781b6b64f4d92a044194edef8ec0", "author": {"user": {"login": "shaguptashaikh", "name": "Shagupta Shaikh"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/687c6b3e65d5781b6b64f4d92a044194edef8ec0", "committedDate": "2020-10-23T09:34:25Z", "message": "Merge branch 'master' into system-setting-restarts-kernel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NzU2Mzg5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/547#pullrequestreview-515756389", "createdAt": "2020-10-23T15:07:41Z", "commit": {"oid": "687c6b3e65d5781b6b64f4d92a044194edef8ec0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2792, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}