{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MzQ5ODUz", "number": 48, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMDoxNzoyNlrODcGg8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMDoxNzoyNlrODcGg8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzkzNDU5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/util/CoerceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMDoxNzoyNlrOFj-F9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMDoxNzoyNlrOFj-F9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2MTgxMw==", "bodyText": "Like this!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/48#discussion_r373261813", "createdAt": "2020-01-31T00:17:26Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/util/CoerceTest.java", "diffHunk": "@@ -10,22 +10,24 @@\n import static com.aws.iot.evergreen.util.Coerce.toInt;\n import static com.aws.iot.evergreen.util.Coerce.toQuotedString;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class CoerceTest {\n \n     @Test\n     public void T1() {\n-        assertEquals(true, toBoolean(true));\n-        assertEquals(true, toBoolean(\"true\"));\n-        assertEquals(true, toBoolean(1));\n-        assertEquals(true, toBoolean(\"yes\"));\n-        assertEquals(true, toBoolean(99));\n-        assertEquals(false, toBoolean(false));\n-        assertEquals(false, toBoolean(\"false\"));\n-        assertEquals(false, toBoolean(\"bozo\"));\n-        assertEquals(false, toBoolean(null));\n-        assertEquals(false, toBoolean(0));\n+        assertTrue(toBoolean(true));\n+        assertTrue(toBoolean(\"true\"));\n+        assertTrue(toBoolean(1));\n+        assertTrue(toBoolean(\"yes\"));\n+        assertTrue(toBoolean(99));\n+        assertFalse(toBoolean(false));\n+        assertFalse(toBoolean(\"false\"));\n+        assertFalse(toBoolean(\"bozo\"));\n+        assertFalse(toBoolean(null));\n+        assertFalse(toBoolean(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75a2cbe4532c716654b36f97e5d0a306f356f6ec"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 56, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}