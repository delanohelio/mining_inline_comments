{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0ODM5MjU0", "number": 397, "title": "Major update for adapting to the new Recipe format and cloud changes", "bodyText": "Issue #, if available:\nDescription of changes:\nThis is yet another unavoidable PR with many files... But don't worry, the changes actually are clear if you follow the guide.\n\nCleaned up all messy Jackson annotations and constructors for JSON creation on all of our core models under packagemanager/models.\n\n\n Merge #386 after it's finalized\n\n\nRecipeLoader loads from a recipe file String and gives back the core model PackageRecipe (not renamed yet so that people don't lose track). This adaption not only deserialize the recipe file, but also loads the platform specific manifests. If no matched platform, then Optional.empty() is returned.\n\n\n Merge #389 after it's finalized.\n\n\n\nPackageStore uses RecipeLoader to load the recipe and return PackageRecipe, and since we used PackageRecipe across our code base, other places don't have to change.\n\n\nRestructured all recipe files for unit, integ, and E2E tests. Cleaned up a bunch of unused and confusing recipe files.\n\n\nUpdated Cloud SDK and update FindComponentVersionsByPlatform signature. Only passing Os but not Architecture to make it working E2E first.\n\n\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-08-27T17:13:18Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397", "merged": true, "mergeCommit": {"oid": "53ec867c3a76f1b8ada9f66202805d2a2f82b8c3"}, "closed": true, "closedAt": "2020-08-28T20:31:17Z", "author": {"login": "leaf94"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCkiRZAH2gAyNDc0ODM5MjU0OmJhN2ZhMDRlOWIzNjhiYTYzNmNmODkwOWM3ZGZkNTExNThmOWFlMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDbCblAFqTQ3ODAwNzc3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ba7fa04e9b368ba636cf8909c7dfd51158f9ae05", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ba7fa04e9b368ba636cf8909c7dfd51158f9ae05", "committedDate": "2020-08-26T04:59:06Z", "message": "Add logic for resolving current platform and findBestMatch platform\n\nfindBestMatch functions will be moved to the common model between local and cloud."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "607eb21570db4f0c7d1537cd2e7ce32b29b58048", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/607eb21570db4f0c7d1537cd2e7ce32b29b58048", "committedDate": "2020-08-26T17:22:06Z", "message": "merged shirley's change so that we can do real testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f9885d87136783a26daea5d93d901b1ff524a0f", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8f9885d87136783a26daea5d93d901b1ff524a0f", "committedDate": "2020-08-27T16:06:52Z", "message": "integ tests working"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2OTc5NzE3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-476979717", "createdAt": "2020-08-27T18:31:25Z", "commit": {"oid": "8f9885d87136783a26daea5d93d901b1ff524a0f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8576f275e0e484ed0ba7c6baf8efc37febc74a0", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d8576f275e0e484ed0ba7c6baf8efc37febc74a0", "committedDate": "2020-08-28T05:39:22Z", "message": "Testing in beta"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "907ef9c3c12815d5a6e49ff81e72f00e8a46369f", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/907ef9c3c12815d5a6e49ff81e72f00e8a46369f", "committedDate": "2020-08-28T06:22:45Z", "message": "Update SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "756a2d7abbfd9edd96baab17755ef0971ddf1303", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/756a2d7abbfd9edd96baab17755ef0971ddf1303", "committedDate": "2020-08-28T06:33:33Z", "message": "merge complete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d92f796d26cf719bc4ccbe0322e57a3f8fb8a9f", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3d92f796d26cf719bc4ccbe0322e57a3f8fb8a9f", "committedDate": "2020-08-28T06:42:59Z", "message": "save"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8282a31ef9631f03c3fcb121a125b2b6bb4f464b", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8282a31ef9631f03c3fcb121a125b2b6bb4f464b", "committedDate": "2020-08-28T06:46:56Z", "message": "merge complete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cde27d9baaffae0a15ed041e3e6de0ecb087d93", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6cde27d9baaffae0a15ed041e3e6de0ecb087d93", "committedDate": "2020-08-28T08:21:28Z", "message": "E2E not working. Cloud's FindComponentVersionsByPlatform returns empty Result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5661d27d5cd2c575b62c739e99664168549f9367", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5661d27d5cd2c575b62c739e99664168549f9367", "committedDate": "2020-08-28T09:15:51Z", "message": "E2E passing on local"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0feb0937748af1805fafd5bcdc47aedbb8d80827", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0feb0937748af1805fafd5bcdc47aedbb8d80827", "committedDate": "2020-08-28T09:24:51Z", "message": "Add README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78005f1c9ee0351c6d1bab5938b09cc5957abe43", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/78005f1c9ee0351c6d1bab5938b09cc5957abe43", "committedDate": "2020-08-28T09:26:36Z", "message": "Fix E2E"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c26d5e9635b9f51535a4221645348c11684c00d", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3c26d5e9635b9f51535a4221645348c11684c00d", "committedDate": "2020-08-28T09:36:05Z", "message": "type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ce79e8ea7ec275f958b176f565a8744bac670316", "committedDate": "2020-08-28T16:45:07Z", "message": "Fix flaky E2E"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODgxMTQ4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477881148", "createdAt": "2020-08-28T16:49:23Z", "commit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo0OToyM1rOHJNlwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo0OToyM1rOHJNlwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMTg4OQ==", "bodyText": "We can't omit platform entirely if it runs on anything?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479421889", "createdAt": "2020-08-28T16:49:23Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/e2e/local_store_content/recipes/README.md", "diffHunk": "@@ -0,0 +1,29 @@\n+## Platform for E2E\n+As cloud only matches exact OS name, in the recipe, we need to provide the OS name that will be detected when running ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODg0OTA3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477884907", "createdAt": "2020-08-28T16:55:06Z", "commit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1NTowNlrOHJNxAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1NTowNlrOHJNxAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDc3MQ==", "bodyText": "What's this for?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479424771", "createdAt": "2020-08-28T16:55:06Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/common/ComponentParameter.java", "diffHunk": "@@ -20,6 +21,10 @@\n \n     ParameterType type;\n \n+    @JsonPOJOBuilder(withPrefix = \"\")\n+    public static class ComponentParameterBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODg1NjE4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477885618", "createdAt": "2020-08-28T16:56:08Z", "commit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1NjowOVrOHJNzPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1NjowOVrOHJNzPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNTM0Mw==", "bodyText": "won't this be looking for artifactUri in JSON? Isn't it just uri?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479425343", "createdAt": "2020-08-28T16:56:09Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/ComponentArtifact.java", "diffHunk": "@@ -3,34 +3,23 @@\n \n package com.aws.iot.evergreen.packagemanager.models;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n import lombok.AllArgsConstructor;\n import lombok.Builder;\n-import lombok.Getter;\n-import lombok.NoArgsConstructor;\n+import lombok.NonNull;\n+import lombok.Value;\n \n import java.net.URI;\n \n-@Getter\n-@AllArgsConstructor\n-@NoArgsConstructor\n+@Value\n @Builder\n+@AllArgsConstructor\n public class ComponentArtifact {\n \n-    @JsonProperty(\"Uri\")\n-    private URI artifactUri;\n-\n-    @JsonProperty(\"Checksum\")\n-    private String checksum;\n+    @NonNull URI artifactUri;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODg2NDEx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477886411", "createdAt": "2020-08-28T16:57:14Z", "commit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1NzoxNFrOHJN1kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1NzoxNFrOHJN1kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNTkzOQ==", "bodyText": "Set it to HARD by default", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479425939", "createdAt": "2020-08-28T16:57:14Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/RecipeDependencyProperties.java", "diffHunk": "@@ -5,28 +5,24 @@\n \n package com.aws.iot.evergreen.packagemanager.models;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n import lombok.AllArgsConstructor;\n-import lombok.EqualsAndHashCode;\n-import lombok.Getter;\n+import lombok.Value;\n \n-@Getter\n+@Value\n @AllArgsConstructor\n-@EqualsAndHashCode\n-@JsonSerialize\n public class RecipeDependencyProperties {\n-    @JsonProperty(\"VersionRequirements\")\n-    String versionRequirements;\n-    @JsonProperty(\"DependencyType\")\n-    String dependencyType;\n+    String versionRequirements; // TODO Make it strongly typed with Semver.Requirement\n+    String dependencyType;  //TODO Make it enum\n \n     /**\n      * RecipeDependencyProperties constructor.\n      *\n      * @param versionRequirements dependency version constraints\n      */\n+    @SuppressWarnings(\"PMD.NullAssignment\")\n+    // dependencyType could be null now. TODO not allow null after changing to enum\n     public RecipeDependencyProperties(String versionRequirements) {\n         this.versionRequirements = versionRequirements;\n+        this.dependencyType = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODg3MTEw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477887110", "createdAt": "2020-08-28T16:58:17Z", "commit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1ODoxN1rOHJN3oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1ODoxN1rOHJN3oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNjQ2NQ==", "bodyText": "no *", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479426465", "createdAt": "2020-08-28T16:58:17Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/config/PlatformResolverTest.java", "diffHunk": "@@ -14,11 +14,9 @@\n import java.io.InputStream;\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce79e8ea7ec275f958b176f565a8744bac670316"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc55a6cf23841b1971caa1b410f238dcfe45eb93", "author": {"user": {"login": "wikimonkey", "name": "Jason Wang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dc55a6cf23841b1971caa1b410f238dcfe45eb93", "committedDate": "2020-08-28T17:32:48Z", "message": "set default to dependency type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTExMTM4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477911138", "createdAt": "2020-08-28T17:36:17Z", "commit": {"oid": "dc55a6cf23841b1971caa1b410f238dcfe45eb93"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b", "author": {"user": {"login": "wikimonkey", "name": "Jason Wang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/aec9b35137f6de58d43be280c3d7b89ac34bf77b", "committedDate": "2020-08-28T17:38:32Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTM0NjYy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477934662", "createdAt": "2020-08-28T18:15:33Z", "commit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoxNTozNFrOHJQIEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoxNTozNFrOHJQIEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2MzQ0Mg==", "bodyText": "why remove GAMMA ?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479463442", "createdAt": "2020-08-28T18:15:34Z", "author": {"login": "fahadmohammed01"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -99,7 +98,7 @@\n  */\n @ExtendWith(EGExtension.class)\n public class BaseE2ETestCase implements AutoCloseable {\n-    protected static final String FCS_GAMMA_ENDPOINT = \"https://bp5p2uvbx6.execute-api.us-east-1.amazonaws.com/Gamma\";\n+    private static final String FCS_ENDPOINT = \"https://bp5p2uvbx6.execute-api.us-east-1.amazonaws.com/Gamma\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4b1f91f100aa9ee962a75bbf87aa4b71c35c85f", "author": {"user": {"login": "wikimonkey", "name": "Jason Wang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a4b1f91f100aa9ee962a75bbf87aa4b71c35c85f", "committedDate": "2020-08-28T18:15:51Z", "message": "fix unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTM3OTMz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477937933", "createdAt": "2020-08-28T18:21:18Z", "commit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyMToxOVrOHJQSeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyMToxOVrOHJQSeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2NjEwNg==", "bodyText": "\"os: all\" not required ?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479466106", "createdAt": "2020-08-28T18:21:19Z", "author": {"login": "fahadmohammed01"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/local_store_content/recipes/RedSignal-1.0.0.yaml", "diffHunk": "@@ -1,9 +1,11 @@\n ---\n-RecipeTemplateVersion: '2020-01-25'\n+TemplateVersion: '2020-01-25'\n ComponentName: RedSignal\n Description: A service revoking approval to proceed\n Publisher: Me\n Version: '1.0.0'\n-Lifecycle:\n-  run:\n-    \"echo Stop what you are doing\"\n+Manifests:\n+  - Platform:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ab1aa5a4345dddd223dd7cbe9febbe8d82ed2d6", "author": {"user": {"login": "wikimonkey", "name": "Jason Wang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8ab1aa5a4345dddd223dd7cbe9febbe8d82ed2d6", "committedDate": "2020-08-28T18:47:51Z", "message": "fix unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTMxNDEx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477931411", "createdAt": "2020-08-28T18:10:05Z", "commit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoxMDowNVrOHJP-Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyMDo0N1rOHJQReA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2MDkyMw==", "bodyText": "NIT: you can do Platform: windows (for windows specific) and all(for the rest)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479460923", "createdAt": "2020-08-28T18:10:05Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/e2e/local_store_content/recipes/NonDisruptableService-1.0.0.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n ---\n-RecipeTemplateVersion: '2020-01-25'\n+TemplateVersion: '2020-01-25'\n ComponentName: {{NonDisruptableService}}\n Description: A service that can be performing important task so should not be restarted if not safe\n Publisher: Me\n Version: '1.0.0'\n-Platforms:\n-  - ubuntu\n-  - debian\n-  - macos\n-  - windows\n-Lifecycle:\n-  run: |-\n-    while true; do\n-    echo \"running non disruptable service version 1.0.0\"; sleep 5\n-    done\n\\ No newline at end of file\n+Manifests:\n+  - Platform:\n+      os: macos", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2MTE2Nw==", "bodyText": "Use Linux here. if we do exact text match, then we have to use an os.flavor field", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479461167", "createdAt": "2020-08-28T18:10:38Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/e2e/local_store_content/recipes/NonDisruptableService-1.0.1.yaml", "diffHunk": "@@ -1,16 +1,21 @@\n ---\n-RecipeTemplateVersion: '2020-01-25'\n+TemplateVersion: '2020-01-25'\n ComponentName: {{NonDisruptableService}}\n Description: A service that can be performing important task so should not be restarted if not safe\n Publisher: Me\n Version: '1.0.1'\n-Platforms:\n-  - ubuntu\n-  - debian\n-  - macos\n-  - windows\n-Lifecycle:\n-  run: |-\n-    while true; do\n-    echo \"running non disruptable service version 1.0.1\"; sleep 5\n-    done\n\\ No newline at end of file\n+Manifests:\n+  - Platform:\n+      os: macos\n+    Lifecycle:\n+      run: |-\n+        while true; do\n+        echo \"running non disruptable service version 1.0.1\"; sleep 5\n+        done\n+  - Platform:\n+      os: ubuntu", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2MTQ2OA==", "bodyText": "use linux here", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479461468", "createdAt": "2020-08-28T18:11:18Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/e2e/local_store_content/recipes/README.md", "diffHunk": "@@ -0,0 +1,29 @@\n+## Platform for E2E\n+As cloud only matches exact OS name, in the recipe, we need to provide the OS name that will be detected when running \n+the E2E tests.\n+\n+As a result, both `macos` and `ubuntu` are provided to make E2E can work on our local laptop and Github Action \n+(which uses ubuntu).\n+\n+When making any change, don't forget to change the two manifests together, since they should also be consistent to \n+ensure local and Github results are the same for local debugging purpose. \n+\n+See the following for an example:\n+\n+```yaml\n+TemplateVersion: '2020-01-25'\n+ComponentName: {{SlowToDeployApp}}\n+Description: An app that takes some time to install so as to slow down deployments\n+Publisher: Me\n+Version: '1.0.0'\n+Manifests:\n+  - Platform:\n+      os: macos\n+    Lifecycle:\n+      install: sleep 5\n+\n+  - Platform:\n+      os: ubuntu", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2MTU3Nw==", "bodyText": "use linux here", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479461577", "createdAt": "2020-08-28T18:11:34Z", "author": {"login": "ShirleyZheng92"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/e2e/local_store_content/recipes/README.md", "diffHunk": "@@ -0,0 +1,29 @@\n+## Platform for E2E\n+As cloud only matches exact OS name, in the recipe, we need to provide the OS name that will be detected when running \n+the E2E tests.\n+\n+As a result, both `macos` and `ubuntu` are provided to make E2E can work on our local laptop and Github Action ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2MzIzMg==", "bodyText": "Nice!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479463232", "createdAt": "2020-08-28T18:15:05Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/common/SerializerFactory.java", "diffHunk": "@@ -16,7 +16,8 @@\n public final class SerializerFactory {\n     private static final ObjectMapper RECIPE_SERIALIZER =\n             new ObjectMapper(new YAMLFactory()).enable(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES)\n-                    .setSerializationInclusion(JsonInclude.Include.NON_NULL);\n+                                               .enable(MapperFeature.ACCEPT_CASE_INSENSITIVE_ENUMS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2NTg0OA==", "bodyText": "Will this become an Enum? If so can you add a todo?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479465848", "createdAt": "2020-08-28T18:20:47Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/models/PackageRecipe.java", "diffHunk": "@@ -3,202 +3,43 @@\n \n package com.aws.iot.evergreen.packagemanager.models;\n \n-import com.aws.iot.evergreen.config.PlatformResolver;\n-import com.aws.iot.evergreen.util.SerializerFactory;\n-import com.fasterxml.jackson.annotation.JsonCreator;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.core.JsonParser;\n-import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.DeserializationContext;\n-import com.fasterxml.jackson.databind.JsonDeserializer;\n-import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n-import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n import com.vdurmont.semver4j.Semver;\n-import com.vdurmont.semver4j.SemverException;\n-import lombok.AccessLevel;\n import lombok.AllArgsConstructor;\n import lombok.Builder;\n-import lombok.EqualsAndHashCode;\n-import lombok.Getter;\n-import lombok.NoArgsConstructor;\n+import lombok.Value;\n \n-import java.io.IOException;\n import java.util.Collections;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n \n-@Getter\n-@NoArgsConstructor(force = true, access = AccessLevel.PRIVATE)\n-@EqualsAndHashCode(onlyExplicitlyIncluded = true)\n+@Value\n @Builder\n @AllArgsConstructor\n public class PackageRecipe {\n-    private static final String DEPENDENCY_VERSION_REQUIREMENTS_KEY = \"versionrequirements\";\n-    private static final String DEPENDENCY_TYPE_KEY = \"dependencytype\";\n \n-    // TODO: Will be used for schema versioning in the future\n-    private final RecipeTemplateVersion recipeTemplateVersion;\n+    RecipeTemplateVersion recipeTemplateVersion;\n \n-    @EqualsAndHashCode.Include\n-    private final String componentName;\n+    String componentName;\n \n-    private final String componentType;\n+    Semver version;\n \n-    @EqualsAndHashCode.Include\n-    private Semver version;\n+    String description;\n \n-    private final String description;\n+    String publisher;\n \n-    private final String publisher;\n+    // The following fields are the platform specific and has already been resolved when loading from the recipe file\n+    @Builder.Default\n+    Set<PackageParameter> packageParameters = Collections.emptySet();\n \n-    private final Set<PackageParameter> packageParameters;\n+    @Builder.Default\n+    Map<String, Object> lifecycle = Collections.emptyMap();\n \n-    private final List<String> platforms;\n+    @Builder.Default\n+    List<ComponentArtifact> artifacts = Collections.emptyList();\n \n-    private final Map<String, Object> lifecycle;\n+    @Builder.Default\n+    Map<String, RecipeDependencyProperties> dependencies = Collections.emptyMap();\n \n-    private final List<ComponentArtifact> artifacts;\n-\n-    private final Map<String, RecipeDependencyProperties> dependencies;\n-\n-    /**\n-     * Constructor for Jackson to deserialize.\n-     *\n-     * @param recipeTemplateVersion Template version found in the Recipe file\n-     * @param componentName         Name of the component\n-     * @param version               Version of the package\n-     * @param description           Description metadata\n-     * @param publisher             Name of the publisher\n-     * @param packageParameters     Parameters included in the recipe\n-     * @param platforms             Platforms supported by the recipe\n-     * @param lifecycle             Lifecycle definitions\n-     * @param artifacts             Artifact definitions\n-     * @param dependencies          List of dependencies\n-     * @param componentType         Type of component to be created\n-     * @throws SemverException if the semver fails to be created\n-     */\n-    @Deprecated\n-    @JsonCreator\n-    @SuppressWarnings(\"PMD.ExcessiveParameterList\")\n-    public PackageRecipe(@JsonProperty(\"RecipeTemplateVersion\") RecipeTemplateVersion recipeTemplateVersion,\n-                         @JsonProperty(\"ComponentName\") String componentName, @JsonProperty(\"Version\") Semver version,\n-                         @JsonProperty(\"Description\") String description, @JsonProperty(\"Publisher\") String publisher,\n-                         @JsonProperty(\"Parameters\") Set<PackageParameter> packageParameters,\n-                         @JsonProperty(\"Platforms\") List<String> platforms, @JsonProperty(\"Lifecycle\") @JsonDeserialize(\n-            using = MapFieldDeserializer.class) Map<String, Object> lifecycle,\n-                         @JsonProperty(\"Artifacts\") @JsonDeserialize(\n-                                 using = ArtifactDeserializer.class) List<ComponentArtifact> artifacts,\n-                         @JsonProperty(\"Dependencies\") @JsonDeserialize(\n-                                 using = DependencyMapDeserializer.class)\n-                                     Map<String, RecipeDependencyProperties> dependencies,\n-                         @JsonProperty(\"ComponentType\") String componentType) {\n-\n-        this.recipeTemplateVersion = recipeTemplateVersion;\n-        this.componentName = componentName;\n-        //TODO: Figure out how to do this in deserialize (only option so far seems to be custom deserializer)\n-        //TODO: Validate SemverType.STRICT before creating this\n-        this.version = new Semver(version.toString(), Semver.SemverType.NPM);\n-        this.description = description;\n-        this.publisher = publisher;\n-        this.platforms = platforms;\n-        this.packageParameters = packageParameters == null ? Collections.emptySet() : packageParameters;\n-        this.lifecycle = lifecycle == null ? Collections.emptyMap() : lifecycle;\n-        this.artifacts = artifacts == null ? Collections.emptyList() : artifacts;\n-        this.dependencies = dependencies == null ? Collections.emptyMap() : dependencies;\n-        this.componentType = componentType;\n-    }\n-\n-    @JsonSerialize(using = SemverSerializer.class)\n-    public Semver getVersion() {\n-        return version;\n-    }\n-\n-    @Deprecated\n-    private static class ArtifactDeserializer extends JsonDeserializer<List<ComponentArtifact>> {\n-        @Override\n-        @SuppressWarnings(\"unchecked\")\n-        public List<ComponentArtifact> deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)\n-                throws IOException {\n-\n-\n-            Map<String, List<ComponentArtifact>> artifacts = SerializerFactory\n-                                                .getRecipeSerializer()\n-                                                .convertValue(\n-                                                        jsonParser.readValueAsTree(),\n-                                                        new TypeReference<Map<String, List<ComponentArtifact>>>() {});\n-\n-            Map<Object, Object> map = new HashMap<>(artifacts);\n-\n-            return (List<ComponentArtifact>) PlatformResolver.resolvePlatform(map);\n-        }\n-    }\n-\n-    @Deprecated\n-    private static class MapFieldDeserializer extends JsonDeserializer<Map<String, Object>> {\n-        @Override\n-        @SuppressWarnings(\"unchecked\")\n-        public Map<String, Object> deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)\n-                throws IOException {\n-            Map<Object, Object> map =\n-                    SerializerFactory.getRecipeSerializer().convertValue(jsonParser.readValueAsTree(), Map.class);\n-\n-            return (Map<String, Object>) PlatformResolver.resolvePlatform(map);\n-        }\n-    }\n-\n-    @Deprecated\n-    private static class DependencyMapDeserializer extends JsonDeserializer<Map<String, RecipeDependencyProperties>> {\n-        @Override\n-        public Map<String, RecipeDependencyProperties> deserialize(JsonParser p, DeserializationContext ctxt)\n-                throws IOException {\n-            Object resolved = PlatformResolver.resolvePlatform(\n-                    SerializerFactory.getRecipeSerializer().convertValue(p.readValueAsTree(), Map.class));\n-            if (resolved == null) {\n-                return Collections.emptyMap();\n-            }\n-            if (!(resolved instanceof Map)) {\n-                throw new IOException(String.format(\"Illegal dependency syntax in package recipe. Dependencies \"\n-                        + \"after platform resolution should be a map, but actually: %s\", resolved));\n-            }\n-\n-            Map<String, RecipeDependencyProperties> dependencyPropertiesMap = new HashMap<>();\n-            for (Map.Entry<String, Object> entry : ((Map<String, Object>) resolved).entrySet()) {\n-                String name = entry.getKey();\n-                Object value = entry.getValue();\n-                if (!(value instanceof Map)) {\n-                    throw new IOException(String.format(\"Illegal dependency syntax in package recipe. Dependency %s \"\n-                            + \"should have a property map, but actually: %s\", name, entry.getValue()));\n-                }\n-                Map<String, String> propMap = (Map<String, String>) value;\n-                String versionRequirements = \"*\";\n-                String dependencyType = \"\";\n-                for (Map.Entry<String, String> e : propMap.entrySet()) {\n-                    if (e.getValue() == null) {\n-                        continue;\n-                    }\n-                    String k = e.getKey();\n-                    switch (k.toLowerCase()) {\n-                        case DEPENDENCY_VERSION_REQUIREMENTS_KEY:\n-                            versionRequirements = e.getValue();\n-                            break;\n-                        case DEPENDENCY_TYPE_KEY:\n-                            dependencyType = e.getValue();\n-                            break;\n-                        default:\n-                            throw new IOException(String.format(\"Illegal dependency syntax in package recipe. \"\n-                                    + \"Dependency %s has unknown keyword: %s\", name, k));\n-                    }\n-                }\n-\n-                if (dependencyType.isEmpty()) {\n-                    dependencyPropertiesMap.put(name, new RecipeDependencyProperties(versionRequirements));\n-                    continue;\n-                }\n-                dependencyPropertiesMap.put(name, new RecipeDependencyProperties(versionRequirements, dependencyType));\n-            }\n-            return dependencyPropertiesMap;\n-        }\n-    }\n+    String componentType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec9b35137f6de58d43be280c3d7b89ac34bf77b"}, "originalPosition": 218}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTU0NTYx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477954561", "createdAt": "2020-08-28T18:50:16Z", "commit": {"oid": "8ab1aa5a4345dddd223dd7cbe9febbe8d82ed2d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODo1MDoxNlrOHJRE4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODo1MDoxNlrOHJRE4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3OTAxMA==", "bodyText": "Will this break unit test?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#discussion_r479479010", "createdAt": "2020-08-28T18:50:16Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/config/PlatformResolver.java", "diffHunk": "@@ -176,7 +176,7 @@ private static Architecture getArchInfo() {\n      * @param recipeList a list of recipe input\n      * @return closest recipe\n      */\n-    public Optional<PlatformSpecificManifest> findBestMatch(List<PlatformSpecificManifest> recipeList) {\n+    public static Optional<PlatformSpecificManifest> findBestMatch(List<PlatformSpecificManifest> recipeList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ab1aa5a4345dddd223dd7cbe9febbe8d82ed2d6"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTkzNjkx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-477993691", "createdAt": "2020-08-28T20:01:36Z", "commit": {"oid": "8ab1aa5a4345dddd223dd7cbe9febbe8d82ed2d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MDA3Nzc0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/397#pullrequestreview-478007774", "createdAt": "2020-08-28T20:29:06Z", "commit": {"oid": "8ab1aa5a4345dddd223dd7cbe9febbe8d82ed2d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3224, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}