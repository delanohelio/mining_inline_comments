{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NTg3NTA1", "number": 622, "title": "Add partition support for both IamSdkClientFactory.java and IotSdkCli\u2026", "bodyText": "\u2026entFactory.java\nIssue #, if available:\nIAM Client and others, AWS Partition support. Details: https://sim.amazon.com/issues/P41214188\nDescription of changes:\nmake changes for in IamSdkClientFactory and IotSdkClientFactory, so that it would be modified based on customer's awsRegion.\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-11-04T19:13:59Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622", "merged": true, "mergeCommit": {"oid": "affb0a1a11aa762743baafbee65d49764a3bd32e"}, "closed": true, "closedAt": "2020-11-11T20:22:25Z", "author": {"login": "awszztt"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZSmvggH2gAyNTE1NTg3NTA1OjRlOTkyZDc5MTdkNDI1NDhkZjg0YzMzMzdjOGZkNjdmNTI0ZWVhMDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbj3hpgFqTUyODUwNTUyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4e992d7917d42548df84c3337c8fd67f524eea04", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4e992d7917d42548df84c3337c8fd67f524eea04", "committedDate": "2020-11-04T19:05:57Z", "message": "add partition supoort for both IamSdkClientFactory.java and IotSdkClientFactory.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a9ead3114ff45e36a6df316267c1b4fa1e64f2d", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8a9ead3114ff45e36a6df316267c1b4fa1e64f2d", "committedDate": "2020-11-05T00:53:40Z", "message": "add new AwsRegionPartition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99c8f939815e82a23fdc8bb4b32a6add21d2d052", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/99c8f939815e82a23fdc8bb4b32a6add21d2d052", "committedDate": "2020-11-05T01:27:28Z", "message": "add new AwsRegionPartition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f968d52ec58f1d7f22e8b1255b47e4d11d94c07", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9f968d52ec58f1d7f22e8b1255b47e4d11d94c07", "committedDate": "2020-11-05T09:01:21Z", "message": "bug fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abbfdeaa4142527f42e891c450257ff91635ff4e", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/abbfdeaa4142527f42e891c450257ff91635ff4e", "committedDate": "2020-11-05T18:00:07Z", "message": "bug fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MzQ2MDU3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#pullrequestreview-525346057", "createdAt": "2020-11-06T17:17:31Z", "commit": {"oid": "abbfdeaa4142527f42e891c450257ff91635ff4e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNzoxNzozMVrOHu2o0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNzozNTo1OFrOHu3RNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5MTczMQ==", "bodyText": "Can we get region from the DeviceConfiguration?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r518891731", "createdAt": "2020-11-06T17:17:31Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/IamSdkClientFactory.java", "diffHunk": "@@ -35,17 +35,23 @@\n             RetryPolicy.builder().numRetries(5).backoffStrategy(BackoffStrategy.defaultThrottlingStrategy())\n                     .retryCondition(retryCondition).build();\n \n+    private static final String DEFAULT_AWS_REGION = \"us-east-1\";\n+\n     private IamSdkClientFactory() {\n     }\n \n+    public static IamClient getIamClient() {\n+        return getIamClient(DEFAULT_AWS_REGION);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbfdeaa4142527f42e891c450257ff91635ff4e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5NjQ5MA==", "bodyText": "This will require us to make a code change every time a region is added. Instead, we can ask the SDK for the partition a region is in, and then map that to a global region (e.g. \"aws\" -> AWS_GLOBAL, \"aws-cn\" -> AWS_CN_GLOBAL, etc). That way we only need to update the code to support new partitions.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r518896490", "createdAt": "2020-11-06T17:25:57Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/EndpointGenerator.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.utils.ImmutableMap;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public final class EndpointGenerator {\n+    private static final String DEFAULT_IOT_CONTROL_PLANE_ENDPOINT_FORMAT = \"https://%s.%s.iot.amazonaws.com\";\n+    private static final String CN_IOT_CONTROL_PLANE_ENDPOINT_FORMAT = \"https://%s.%s.iot.amazonaws.com.cn\";\n+    private static Map<String, String> REGION_TO_IOT_CONTROL_PLANE_ENDPOINT = new HashMap<>();\n+    private static Map<String, Region> GLOBAL_REGION_CONVERTER = new HashMap<>();\n+    private static Map<String, Map<IotSdkClientFactory.EnvironmentStage, String>>\n+            REGION_TO_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT = new HashMap<>();\n+\n+    private static final Map<IotSdkClientFactory.EnvironmentStage, String>\n+            DEFAULT_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n+            IotSdkClientFactory.EnvironmentStage.PROD, \"greengrass-ats.iot.%s.amazonaws.com:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.amazonaws.com:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.amazonaws.com:8443/greengrass\"\n+    );\n+    private static final Map<IotSdkClientFactory.EnvironmentStage, String>\n+            CN_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n+            IotSdkClientFactory.EnvironmentStage.PROD, \"greengrass-ats.iot.%s.amazonaws.com.cn:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.amazonaws.com.cn:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.amazonaws.com.cn:8443/greengrass\"\n+    );\n+\n+    static {\n+        REGION_TO_IOT_CONTROL_PLANE_ENDPOINT.put(\"cn-north-1\", CN_IOT_CONTROL_PLANE_ENDPOINT_FORMAT);\n+\n+        REGION_TO_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT.put(\"cn-north-1\",\n+                CN_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT);\n+\n+        GLOBAL_REGION_CONVERTER.put(\"cn-north-1\", Region.AWS_CN_GLOBAL);\n+        GLOBAL_REGION_CONVERTER.put(\"us-gov-east-1\", Region.AWS_US_GOV_GLOBAL);\n+        GLOBAL_REGION_CONVERTER.put(\"us-gov-west-1\", Region.AWS_US_GOV_GLOBAL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbfdeaa4142527f42e891c450257ff91635ff4e"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5NzIwMg==", "bodyText": "Nit: name this RegionsUtils instead?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r518897202", "createdAt": "2020-11-06T17:27:09Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/EndpointGenerator.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.utils.ImmutableMap;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public final class EndpointGenerator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbfdeaa4142527f42e891c450257ff91635ff4e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkwMDQ1OA==", "bodyText": "Get rid of this map, we don't need to pre-compute these strings.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r518900458", "createdAt": "2020-11-06T17:33:01Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/EndpointGenerator.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.utils.ImmutableMap;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public final class EndpointGenerator {\n+    private static final String DEFAULT_IOT_CONTROL_PLANE_ENDPOINT_FORMAT = \"https://%s.%s.iot.amazonaws.com\";\n+    private static final String CN_IOT_CONTROL_PLANE_ENDPOINT_FORMAT = \"https://%s.%s.iot.amazonaws.com.cn\";\n+    private static Map<String, String> REGION_TO_IOT_CONTROL_PLANE_ENDPOINT = new HashMap<>();\n+    private static Map<String, Region> GLOBAL_REGION_CONVERTER = new HashMap<>();\n+    private static Map<String, Map<IotSdkClientFactory.EnvironmentStage, String>>\n+            REGION_TO_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT = new HashMap<>();\n+\n+    private static final Map<IotSdkClientFactory.EnvironmentStage, String>\n+            DEFAULT_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n+            IotSdkClientFactory.EnvironmentStage.PROD, \"greengrass-ats.iot.%s.amazonaws.com:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.amazonaws.com:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.amazonaws.com:8443/greengrass\"\n+    );\n+    private static final Map<IotSdkClientFactory.EnvironmentStage, String>\n+            CN_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n+            IotSdkClientFactory.EnvironmentStage.PROD, \"greengrass-ats.iot.%s.amazonaws.com.cn:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.amazonaws.com.cn:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.amazonaws.com.cn:8443/greengrass\"\n+    );\n+\n+    static {\n+        REGION_TO_IOT_CONTROL_PLANE_ENDPOINT.put(\"cn-north-1\", CN_IOT_CONTROL_PLANE_ENDPOINT_FORMAT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbfdeaa4142527f42e891c450257ff91635ff4e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkwMjA3MQ==", "bodyText": "I don't think this is useful", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r518902071", "createdAt": "2020-11-06T17:35:58Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/IamSdkClientFactory.java", "diffHunk": "@@ -35,17 +35,23 @@\n             RetryPolicy.builder().numRetries(5).backoffStrategy(BackoffStrategy.defaultThrottlingStrategy())\n                     .retryCondition(retryCondition).build();\n \n+    private static final String DEFAULT_AWS_REGION = \"us-east-1\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbfdeaa4142527f42e891c450257ff91635ff4e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e89fa5fd87c354ed5e918abdfa0266e42c491c4", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1e89fa5fd87c354ed5e918abdfa0266e42c491c4", "committedDate": "2020-11-06T20:28:37Z", "message": "check the region partition with the sdk"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTA2Mzk3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#pullrequestreview-525506397", "createdAt": "2020-11-06T21:29:46Z", "commit": {"oid": "1e89fa5fd87c354ed5e918abdfa0266e42c491c4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToyOTo0NlrOHu-Ijg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMTozNDozOFrOHu-Qcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNDU0Mg==", "bodyText": "Nit: shorten this to getGreengrassServiceEndpoint", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r519014542", "createdAt": "2020-11-06T21:29:46Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/RegionUtils.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.utils.ImmutableMap;\n+\n+import java.util.Map;\n+\n+public final class RegionUtils {\n+    private static final String DEFAULT_IOT_CONTROL_PLANE_ENDPOINT_FORMAT = \"https://%s.%s.iot.%s\";\n+    private static final Map<IotSdkClientFactory.EnvironmentStage, String>\n+            DEFAULT_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n+            IotSdkClientFactory.EnvironmentStage.PROD, \"greengrass-ats.iot.%s.%s:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.%s:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.%s:8443/greengrass\"\n+    );\n+    private static final String CN_PARTITION_ID = \"aws-cn\";\n+    private static final String US_GOV_PARTITION_ID = \"aws-us-gov\";\n+\n+    private RegionUtils() {\n+    }\n+\n+    /**\n+     * Get Greengrass ServiceEndpoint by region and stage.\n+     * @param awsRegion aws region\n+     * @param stage environment stage\n+     * @return Greengrass ServiceEndpoint\n+     */\n+    public static String getGreengrassServiceEndpointByRegionAndStage(String awsRegion,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e89fa5fd87c354ed5e918abdfa0266e42c491c4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNDU5MA==", "bodyText": "nit: same thing here", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r519014590", "createdAt": "2020-11-06T21:29:55Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/RegionUtils.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.utils.ImmutableMap;\n+\n+import java.util.Map;\n+\n+public final class RegionUtils {\n+    private static final String DEFAULT_IOT_CONTROL_PLANE_ENDPOINT_FORMAT = \"https://%s.%s.iot.%s\";\n+    private static final Map<IotSdkClientFactory.EnvironmentStage, String>\n+            DEFAULT_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n+            IotSdkClientFactory.EnvironmentStage.PROD, \"greengrass-ats.iot.%s.%s:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.%s:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.%s:8443/greengrass\"\n+    );\n+    private static final String CN_PARTITION_ID = \"aws-cn\";\n+    private static final String US_GOV_PARTITION_ID = \"aws-us-gov\";\n+\n+    private RegionUtils() {\n+    }\n+\n+    /**\n+     * Get Greengrass ServiceEndpoint by region and stage.\n+     * @param awsRegion aws region\n+     * @param stage environment stage\n+     * @return Greengrass ServiceEndpoint\n+     */\n+    public static String getGreengrassServiceEndpointByRegionAndStage(String awsRegion,\n+                                                                      IotSdkClientFactory.EnvironmentStage stage) {\n+        String dnsSuffix = Region.of(awsRegion).metadata().partition().dnsSuffix();\n+        return String.format(DEFAULT_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT.get(stage), awsRegion, dnsSuffix);\n+    }\n+\n+    /**\n+     * Get Iot Control Plane Endpoint by region and stage.\n+     * @param awsRegion aws region\n+     * @param stage environment stage\n+     * @return Iot Control Plane Endpoint\n+     */\n+    public static String getIotControlPlaneEndpointByRegionAndStage(Region awsRegion,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e89fa5fd87c354ed5e918abdfa0266e42c491c4"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNjU2Mg==", "bodyText": "getIamClient(String region) is fine. But getIamClient() doesn't work if the GGC is in a non-aws partition. You can either remove it or have it use region from DeviceConfiguration", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r519016562", "createdAt": "2020-11-06T21:34:38Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/IamSdkClientFactory.java", "diffHunk": "@@ -35,17 +35,23 @@\n             RetryPolicy.builder().numRetries(5).backoffStrategy(BackoffStrategy.defaultThrottlingStrategy())\n                     .retryCondition(retryCondition).build();\n \n+    private static final String DEFAULT_AWS_REGION = \"us-east-1\";\n+\n     private IamSdkClientFactory() {\n     }\n \n+    public static IamClient getIamClient() {\n+        return getIamClient(DEFAULT_AWS_REGION);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5MTczMQ=="}, "originalCommit": {"oid": "abbfdeaa4142527f42e891c450257ff91635ff4e"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aebc9a8174e84d58fb7abf0144fc07961810abd", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8aebc9a8174e84d58fb7abf0144fc07961810abd", "committedDate": "2020-11-06T22:47:31Z", "message": "remove method of getIamClient without input"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd7ab892cfae72b5c6b022e061286de9efaa4c23", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dd7ab892cfae72b5c6b022e061286de9efaa4c23", "committedDate": "2020-11-06T22:48:06Z", "message": "Merge branch 'master' into iam-partition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb4e797cf26fb894711a0021ddc54e4eaf5e7842", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eb4e797cf26fb894711a0021ddc54e4eaf5e7842", "committedDate": "2020-11-06T23:05:08Z", "message": "remove unnecessary field"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTc2NDUx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#pullrequestreview-525576451", "createdAt": "2020-11-07T01:14:53Z", "commit": {"oid": "eb4e797cf26fb894711a0021ddc54e4eaf5e7842"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMToxNDo1M1rOHvB1dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMToxNDo1M1rOHvB1dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3NTE5MA==", "bodyText": "rename to getPartitionFromRegion", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r519075190", "createdAt": "2020-11-07T01:14:53Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/RegionUtils.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.utils.ImmutableMap;\n+\n+import java.util.Map;\n+\n+public final class RegionUtils {\n+    private static final String DEFAULT_IOT_CONTROL_PLANE_ENDPOINT_FORMAT = \"https://%s.%s.iot.%s\";\n+    private static final Map<IotSdkClientFactory.EnvironmentStage, String>\n+            DEFAULT_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n+            IotSdkClientFactory.EnvironmentStage.PROD, \"greengrass-ats.iot.%s.%s:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.%s:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.%s:8443/greengrass\"\n+    );\n+    private static final String CN_PARTITION_ID = \"aws-cn\";\n+    private static final String US_GOV_PARTITION_ID = \"aws-us-gov\";\n+\n+    private RegionUtils() {\n+    }\n+\n+    /**\n+     * Get Greengrass ServiceEndpoint by region and stage.\n+     * @param awsRegion aws region\n+     * @param stage environment stage\n+     * @return Greengrass ServiceEndpoint\n+     */\n+    public static String getGreengrassServiceEndpoint(String awsRegion,\n+                                                      IotSdkClientFactory.EnvironmentStage stage) {\n+        String dnsSuffix = Region.of(awsRegion).metadata().partition().dnsSuffix();\n+        return String.format(DEFAULT_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT.get(stage), awsRegion, dnsSuffix);\n+    }\n+\n+    /**\n+     * Get Iot Control Plane Endpoint by region and stage.\n+     * @param awsRegion aws region\n+     * @param stage environment stage\n+     * @return Iot Control Plane Endpoint\n+     */\n+    public static String getIotControlPlaneEndpoint(Region awsRegion,\n+                                                    IotSdkClientFactory.EnvironmentStage stage) {\n+        String dnsSuffix = awsRegion.metadata().partition().dnsSuffix();\n+        return String.format(DEFAULT_IOT_CONTROL_PLANE_ENDPOINT_FORMAT, stage.value, awsRegion, dnsSuffix);\n+    }\n+\n+    /**\n+     * Get global region.\n+     * @param awsRegion aws region\n+     * @return Region\n+     */\n+    public static Region getGlobalRegion(String awsRegion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb4e797cf26fb894711a0021ddc54e4eaf5e7842"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "289733302ae349e0de9f9b2eb044e2181f618d86", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/289733302ae349e0de9f9b2eb044e2181f618d86", "committedDate": "2020-11-07T01:34:24Z", "message": "remame function name to getPartitionFromRegion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd2588c9a499541f6696f1d6bca85dde7931507c", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dd2588c9a499541f6696f1d6bca85dde7931507c", "committedDate": "2020-11-07T18:33:18Z", "message": "Merge branch 'master' into iam-partition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dcfba2165fd44b359467bd8aa9fc9cdf82e9d9f", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3dcfba2165fd44b359467bd8aa9fc9cdf82e9d9f", "committedDate": "2020-11-09T22:43:50Z", "message": "Merge branch 'master' into iam-partition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Njc2MDIz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#pullrequestreview-527676023", "createdAt": "2020-11-10T22:59:08Z", "commit": {"oid": "3dcfba2165fd44b359467bd8aa9fc9cdf82e9d9f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjo1OTowOFrOHwy7fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjo1OTowOFrOHwy7fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyODEyNg==", "bodyText": "return Region.of(Region.of(awsRegion).metadata().id()) instead of hardcoding these 3 partitions.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r520928126", "createdAt": "2020-11-10T22:59:08Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/RegionUtils.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.utils.ImmutableMap;\n+\n+import java.util.Map;\n+\n+public final class RegionUtils {\n+    private static final String DEFAULT_IOT_CONTROL_PLANE_ENDPOINT_FORMAT = \"https://%s.%s.iot.%s\";\n+    private static final Map<IotSdkClientFactory.EnvironmentStage, String>\n+            DEFAULT_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT = ImmutableMap.of(\n+            IotSdkClientFactory.EnvironmentStage.PROD, \"greengrass-ats.iot.%s.%s:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.GAMMA, \"greengrass-ats.gamma.%s.iot.%s:8443/greengrass\",\n+            IotSdkClientFactory.EnvironmentStage.BETA, \"greengrass-ats.beta.%s.iot.%s:8443/greengrass\"\n+    );\n+    private static final String CN_PARTITION_ID = \"aws-cn\";\n+    private static final String US_GOV_PARTITION_ID = \"aws-us-gov\";\n+\n+    private RegionUtils() {\n+    }\n+\n+    /**\n+     * Get Greengrass ServiceEndpoint by region and stage.\n+     * @param awsRegion aws region\n+     * @param stage environment stage\n+     * @return Greengrass ServiceEndpoint\n+     */\n+    public static String getGreengrassServiceEndpoint(String awsRegion,\n+                                                      IotSdkClientFactory.EnvironmentStage stage) {\n+        String dnsSuffix = Region.of(awsRegion).metadata().partition().dnsSuffix();\n+        return String.format(DEFAULT_GREENGRASS_SERVICE_STAGE_TO_ENDPOINT_FORMAT.get(stage), awsRegion, dnsSuffix);\n+    }\n+\n+    /**\n+     * Get Iot Control Plane Endpoint by region and stage.\n+     * @param awsRegion aws region\n+     * @param stage environment stage\n+     * @return Iot Control Plane Endpoint\n+     */\n+    public static String getIotControlPlaneEndpoint(Region awsRegion,\n+                                                    IotSdkClientFactory.EnvironmentStage stage) {\n+        String dnsSuffix = awsRegion.metadata().partition().dnsSuffix();\n+        return String.format(DEFAULT_IOT_CONTROL_PLANE_ENDPOINT_FORMAT, stage.value, awsRegion, dnsSuffix);\n+    }\n+\n+    /**\n+     * Get global region based on the region partition ID.\n+     * @param awsRegion aws region\n+     * @return Region\n+     */\n+    public static Region getPartitionFromRegion(String awsRegion) {\n+        String partitionId = Region.of(awsRegion).metadata().id();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcfba2165fd44b359467bd8aa9fc9cdf82e9d9f"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5900856bdeacd1f1d2e38672cc800ef2d335ec79", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5900856bdeacd1f1d2e38672cc800ef2d335ec79", "committedDate": "2020-11-11T00:54:24Z", "message": "make changes in the method of getGlobalRegion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d85a03e78b0362d89ed1acae55362ea8d65dc6f0", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d85a03e78b0362d89ed1acae55362ea8d65dc6f0", "committedDate": "2020-11-11T00:55:16Z", "message": "Merge branch 'master' into iam-partition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Nzc0MzUw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#pullrequestreview-527774350", "createdAt": "2020-11-11T01:15:30Z", "commit": {"oid": "d85a03e78b0362d89ed1acae55362ea8d65dc6f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMToxNTozMFrOHw2a6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMToxNTozMFrOHw2a6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk4NTMyMA==", "bodyText": "No Evergreen. We are Greengrass", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#discussion_r520985320", "createdAt": "2020-11-11T01:15:30Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -170,10 +163,10 @@\n     protected static final AWSEvergreen greengrassClient = AWSEvergreenClientBuilder.standard()\n                                                                              .withEndpointConfiguration(\n                                                                                      new AwsClientBuilder.EndpointConfiguration(\n-                                                                                             String.format(STAGE_TO_ENDPOINT_FORMAT.get(envStage), GAMMA_REGION.toString()),\n+                                                                                             RegionUtils.getEvergreenEndpoint(GAMMA_REGION.toString(), envStage),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d85a03e78b0362d89ed1acae55362ea8d65dc6f0"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODMyMjgx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#pullrequestreview-527832281", "createdAt": "2020-11-11T03:14:52Z", "commit": {"oid": "d85a03e78b0362d89ed1acae55362ea8d65dc6f0"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66b88cad0e55abb16d132a6e722fc5a70ea03200", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/66b88cad0e55abb16d132a6e722fc5a70ea03200", "committedDate": "2020-11-11T06:03:22Z", "message": "Merge branch 'master' into iam-partition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d25c7147a5a9e81ef31539ba9adedd966d39443", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8d25c7147a5a9e81ef31539ba9adedd966d39443", "committedDate": "2020-11-11T06:17:31Z", "message": "Merge branch 'master' into iam-partition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d8683405a32cc5a734811d573b9ef0a3e65820d", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8d8683405a32cc5a734811d573b9ef0a3e65820d", "committedDate": "2020-11-11T19:13:25Z", "message": "Merge branch 'master' into iam-partition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NDc3MDA5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#pullrequestreview-528477009", "createdAt": "2020-11-11T19:36:26Z", "commit": {"oid": "8d8683405a32cc5a734811d573b9ef0a3e65820d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a09153d4d184ce4b81d8b03f89e32a2c7760cbb", "author": {"user": {"login": "awszztt", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5a09153d4d184ce4b81d8b03f89e32a2c7760cbb", "committedDate": "2020-11-11T19:54:48Z", "message": "refine the method name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NDkyOTY4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#pullrequestreview-528492968", "createdAt": "2020-11-11T20:00:57Z", "commit": {"oid": "5a09153d4d184ce4b81d8b03f89e32a2c7760cbb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NTA1NTI4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/622#pullrequestreview-528505528", "createdAt": "2020-11-11T20:20:31Z", "commit": {"oid": "5a09153d4d184ce4b81d8b03f89e32a2c7760cbb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2928, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}