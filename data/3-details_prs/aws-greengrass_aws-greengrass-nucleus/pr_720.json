{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MDc1MDQw", "number": 720, "title": "Support manifest level lifecycle override", "bodyText": "Issue #, if available:\nDescription of changes:\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-11-24T00:20:39Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720", "merged": true, "mergeCommit": {"oid": "8a0435145a64b7e87d496a8f592d600b0b9108bd"}, "closed": true, "closedAt": "2020-11-25T21:35:48Z", "author": {"login": "ShirleyZheng92"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfewVZAFqTUzNjk1MjI4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgDkCCgFqTUzODc5NTIxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTUyMjg5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#pullrequestreview-536952289", "createdAt": "2020-11-24T00:36:27Z", "commit": {"oid": "8a71bb4e2bc1ef093b0dd170e9456be77191489b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMDozNjoyN1rOH4k4Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMDozODoxN1rOH4k6iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA4NjQ5NQ==", "bodyText": "I try to make it a habit of not calling a get method multiple times. Here it makes no difference, but there are other places where data can change between get calls. Of course, I didn't follow my own rule above, but just worth a note :)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#discussion_r529086495", "createdAt": "2020-11-24T00:36:27Z", "author": {"login": "JamieHunter"}, "path": "src/main/java/com/aws/greengrass/componentmanager/converter/RecipeLoader.java", "diffHunk": "@@ -170,39 +170,26 @@ private static ComponentArtifact convertArtifactFromFile(\n             @Nonnull PlatformSpecificManifest manifest,\n             @Nonnull Set<String> allSelectors) {\n \n-        Map<String, Object> effectiveLifecycleMap = lifecycleMap;\n-\n-        if (manifest.getSelections() == null || manifest.getSelections().isEmpty()) {\n-            // BEGIN BETA Compatibility code\n-            // TODO: These need to be removed for re:Invent\n-            // We might be running with old lifecycle\n-            if (effectiveLifecycleMap.isEmpty()) {\n-                effectiveLifecycleMap = manifest.getLifecycle();\n-            }\n-            if (effectiveLifecycleMap.isEmpty()) {\n-                LOGGER.warn(\"Non-empty lifecycle section ignored after (old style) platform selection filtering\");\n-                return Collections.emptyMap();\n-            }\n-\n-            return effectiveLifecycleMap;\n-            // END BETA Compatibility code\n+        // If there is manifest level lifecycle\n+        if (manifest.getLifecycle() != null && !manifest.getLifecycle().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a71bb4e2bc1ef093b0dd170e9456be77191489b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA4NzExNQ==", "bodyText": "This warning will occur if the lifecycle was empty / not provided.\nIt's important to only give this warning if a non-empty lifecyle was turned into an empty lifecycle else it will be confusing for a valid scenario.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#discussion_r529087115", "createdAt": "2020-11-24T00:38:17Z", "author": {"login": "JamieHunter"}, "path": "src/main/java/com/aws/greengrass/componentmanager/converter/RecipeLoader.java", "diffHunk": "@@ -170,39 +170,26 @@ private static ComponentArtifact convertArtifactFromFile(\n             @Nonnull PlatformSpecificManifest manifest,\n             @Nonnull Set<String> allSelectors) {\n \n-        Map<String, Object> effectiveLifecycleMap = lifecycleMap;\n-\n-        if (manifest.getSelections() == null || manifest.getSelections().isEmpty()) {\n-            // BEGIN BETA Compatibility code\n-            // TODO: These need to be removed for re:Invent\n-            // We might be running with old lifecycle\n-            if (effectiveLifecycleMap.isEmpty()) {\n-                effectiveLifecycleMap = manifest.getLifecycle();\n-            }\n-            if (effectiveLifecycleMap.isEmpty()) {\n-                LOGGER.warn(\"Non-empty lifecycle section ignored after (old style) platform selection filtering\");\n-                return Collections.emptyMap();\n-            }\n-\n-            return effectiveLifecycleMap;\n-            // END BETA Compatibility code\n+        // If there is manifest level lifecycle\n+        if (manifest.getLifecycle() != null && !manifest.getLifecycle().isEmpty()) {\n+            return manifest.getLifecycle();\n+        }\n+\n+        // selections were applied to the lifecycle section\n+        // we allow the following syntax forms (combined)\n+        //\n+        // Lifecycle:\n+        //    <selector>: (optional)\n+        //       Section:\n+        //          <selector>: (optional)\n+        //              body\n+        Object filtered = PlatformResolver.filterPlatform(lifecycleMap, allSelectors,\n+                manifest.getSelections()).orElse(Collections.emptyMap());\n+        if (filtered instanceof Map && !((Map<?, ?>) filtered).isEmpty()) {\n+            return (Map<String, Object>) filtered;\n         } else {\n-            // selections were applied to the lifecycle section\n-            // we allow the following syntax forms (combined)\n-            //\n-            // Lifecycle:\n-            //    <selector>: (optional)\n-            //       Section:\n-            //          <selector>: (optional)\n-            //              body\n-            Object filtered = PlatformResolver.filterPlatform(effectiveLifecycleMap, allSelectors,\n-                    manifest.getSelections()).orElse(Collections.emptyMap());\n-            if (filtered instanceof Map && !((Map<?, ?>) filtered).isEmpty()) {\n-                return (Map<String, Object>) filtered;\n-            } else {\n-                LOGGER.warn(\"Non-empty lifecycle section ignored after platform selection filtering\");\n-                return Collections.emptyMap();\n-            }\n+            LOGGER.warn(\"Non-empty lifecycle section ignored after platform selection filtering\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a71bb4e2bc1ef093b0dd170e9456be77191489b"}, "originalPosition": 54}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a71bb4e2bc1ef093b0dd170e9456be77191489b", "author": {"user": null}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8a71bb4e2bc1ef093b0dd170e9456be77191489b", "committedDate": "2020-11-24T00:19:42Z", "message": "Support manifest level lifecycle override"}, "afterCommit": {"oid": "11ebd5a6eb42b72d22d9ad8915c22fd7ffa3c679", "author": {"user": null}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/11ebd5a6eb42b72d22d9ad8915c22fd7ffa3c679", "committedDate": "2020-11-24T20:36:42Z", "message": "Support manifest level lifecycle override. Update platform field in ResolveComponentCandidates call."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11ebd5a6eb42b72d22d9ad8915c22fd7ffa3c679", "author": {"user": null}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/11ebd5a6eb42b72d22d9ad8915c22fd7ffa3c679", "committedDate": "2020-11-24T20:36:42Z", "message": "Support manifest level lifecycle override. Update platform field in ResolveComponentCandidates call."}, "afterCommit": {"oid": "69032db91bc3a2e85a21612d847fc3b751cae53a", "author": {"user": null}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/69032db91bc3a2e85a21612d847fc3b751cae53a", "committedDate": "2020-11-24T20:48:25Z", "message": "Support manifest level lifecycle override. Update platform field in ResolveComponentCandidates call."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3OTA2MzUx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#pullrequestreview-537906351", "createdAt": "2020-11-24T20:57:50Z", "commit": {"oid": "69032db91bc3a2e85a21612d847fc3b751cae53a"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDo1Nzo1MFrOH5U49Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDo1Nzo1MFrOH5U49Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3MzE0MQ==", "bodyText": "Just providing artifacts is one scenario. I expect when we support other recipe types, we're more likely to see lifecycle implied rather than explicit.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#discussion_r529873141", "createdAt": "2020-11-24T20:57:50Z", "author": {"login": "JamieHunter"}, "path": "src/main/java/com/aws/greengrass/componentmanager/converter/RecipeLoader.java", "diffHunk": "@@ -170,39 +170,26 @@ private static ComponentArtifact convertArtifactFromFile(\n             @Nonnull PlatformSpecificManifest manifest,\n             @Nonnull Set<String> allSelectors) {\n \n-        Map<String, Object> effectiveLifecycleMap = lifecycleMap;\n-\n-        if (manifest.getSelections() == null || manifest.getSelections().isEmpty()) {\n-            // BEGIN BETA Compatibility code\n-            // TODO: These need to be removed for re:Invent\n-            // We might be running with old lifecycle\n-            if (effectiveLifecycleMap.isEmpty()) {\n-                effectiveLifecycleMap = manifest.getLifecycle();\n-            }\n-            if (effectiveLifecycleMap.isEmpty()) {\n-                LOGGER.warn(\"Non-empty lifecycle section ignored after (old style) platform selection filtering\");\n-                return Collections.emptyMap();\n-            }\n-\n-            return effectiveLifecycleMap;\n-            // END BETA Compatibility code\n+        // If there is manifest level lifecycle\n+        if (manifest.getLifecycle() != null && !manifest.getLifecycle().isEmpty()) {\n+            return manifest.getLifecycle();\n+        }\n+\n+        // selections were applied to the lifecycle section\n+        // we allow the following syntax forms (combined)\n+        //\n+        // Lifecycle:\n+        //    <selector>: (optional)\n+        //       Section:\n+        //          <selector>: (optional)\n+        //              body\n+        Object filtered = PlatformResolver.filterPlatform(lifecycleMap, allSelectors,\n+                manifest.getSelections()).orElse(Collections.emptyMap());\n+        if (filtered instanceof Map && !((Map<?, ?>) filtered).isEmpty()) {\n+            return (Map<String, Object>) filtered;\n         } else {\n-            // selections were applied to the lifecycle section\n-            // we allow the following syntax forms (combined)\n-            //\n-            // Lifecycle:\n-            //    <selector>: (optional)\n-            //       Section:\n-            //          <selector>: (optional)\n-            //              body\n-            Object filtered = PlatformResolver.filterPlatform(effectiveLifecycleMap, allSelectors,\n-                    manifest.getSelections()).orElse(Collections.emptyMap());\n-            if (filtered instanceof Map && !((Map<?, ?>) filtered).isEmpty()) {\n-                return (Map<String, Object>) filtered;\n-            } else {\n-                LOGGER.warn(\"Non-empty lifecycle section ignored after platform selection filtering\");\n-                return Collections.emptyMap();\n-            }\n+            LOGGER.warn(\"Non-empty lifecycle section ignored after platform selection filtering\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA4NzExNQ=="}, "originalCommit": {"oid": "8a71bb4e2bc1ef093b0dd170e9456be77191489b"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDA1NTA1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#pullrequestreview-538005505", "createdAt": "2020-11-24T22:04:50Z", "commit": {"oid": "69032db91bc3a2e85a21612d847fc3b751cae53a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "825720a823bb3e9cfec804800d9f267d7ad0feeb", "author": {"user": null}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/825720a823bb3e9cfec804800d9f267d7ad0feeb", "committedDate": "2020-11-24T23:01:46Z", "message": "Support manifest level lifecycle override."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69032db91bc3a2e85a21612d847fc3b751cae53a", "author": {"user": null}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/69032db91bc3a2e85a21612d847fc3b751cae53a", "committedDate": "2020-11-24T20:48:25Z", "message": "Support manifest level lifecycle override. Update platform field in ResolveComponentCandidates call."}, "afterCommit": {"oid": "825720a823bb3e9cfec804800d9f267d7ad0feeb", "author": {"user": null}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/825720a823bb3e9cfec804800d9f267d7ad0feeb", "committedDate": "2020-11-24T23:01:46Z", "message": "Support manifest level lifecycle override."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDU1NDg5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#pullrequestreview-538055489", "createdAt": "2020-11-24T23:47:20Z", "commit": {"oid": "825720a823bb3e9cfec804800d9f267d7ad0feeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e52fbf90bc4bd56ce0f9bf799385ffb5467664c", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0e52fbf90bc4bd56ce0f9bf799385ffb5467664c", "committedDate": "2020-11-24T23:47:24Z", "message": "Merge branch 'master' into manifest_lifecycle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ad1a6585d3f6d76f97532ca582143899630dc2b", "author": {"user": {"login": "ShirleyZheng92", "name": "Xueli Zheng "}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3ad1a6585d3f6d76f97532ca582143899630dc2b", "committedDate": "2020-11-25T18:50:17Z", "message": "Merge branch 'master' into manifest_lifecycle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4Nzk1MjEx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/720#pullrequestreview-538795211", "createdAt": "2020-11-25T19:31:53Z", "commit": {"oid": "3ad1a6585d3f6d76f97532ca582143899630dc2b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2738, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}