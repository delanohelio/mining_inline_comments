{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMzAxODE3", "number": 374, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODowMjo0MlrOEaF6LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODowMjo0MlrOEaF6LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Nzk1MjQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODowMjo0MlrOHDTRMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODowNjowM1rOHDTY2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIyMzQ3NQ==", "bodyText": "If the component has a SOFT dependency, do we need to throw service load exception during locate?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/374#discussion_r473223475", "createdAt": "2020-08-19T18:02:42Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -353,6 +357,22 @@ public EvergreenService locate(String name) throws ServiceLoadException {\n \n             Class<?> clazz = null;\n             if (serviceRootTopics != null) {\n+\n+                // Try locating all the dependencies first so that they'll all exist prior to their dependant.\n+                // This is to fix an ordering problem with plugins such as lambda manager. The plugin needs to be\n+                // located *before* the dependant is located so that the plugin has its jar loaded into the classloader.\n+                Topic dependenciesTopic = serviceRootTopics.findLeafChild(SERVICE_DEPENDENCIES_NAMESPACE_TOPIC);\n+                if (dependenciesTopic != null && dependenciesTopic.getOnce() instanceof Collection) {\n+                    try {\n+                        for (Pair<String, DependencyType> p : EvergreenService\n+                                .parseDependencies((Collection<String>) dependenciesTopic.getOnce())) {\n+                            locate(p.getLeft());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b42d793d08b02fff12a1a9b9b01c880b49793df"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIyNTQzNQ==", "bodyText": "Yes because we still need the dependency to exist, it just doesn't need to be RUNNING.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/374#discussion_r473225435", "createdAt": "2020-08-19T18:06:03Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -353,6 +357,22 @@ public EvergreenService locate(String name) throws ServiceLoadException {\n \n             Class<?> clazz = null;\n             if (serviceRootTopics != null) {\n+\n+                // Try locating all the dependencies first so that they'll all exist prior to their dependant.\n+                // This is to fix an ordering problem with plugins such as lambda manager. The plugin needs to be\n+                // located *before* the dependant is located so that the plugin has its jar loaded into the classloader.\n+                Topic dependenciesTopic = serviceRootTopics.findLeafChild(SERVICE_DEPENDENCIES_NAMESPACE_TOPIC);\n+                if (dependenciesTopic != null && dependenciesTopic.getOnce() instanceof Collection) {\n+                    try {\n+                        for (Pair<String, DependencyType> p : EvergreenService\n+                                .parseDependencies((Collection<String>) dependenciesTopic.getOnce())) {\n+                            locate(p.getLeft());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIyMzQ3NQ=="}, "originalCommit": {"oid": "8b42d793d08b02fff12a1a9b9b01c880b49793df"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4559, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}