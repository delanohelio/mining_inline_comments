{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NDIzMzgz", "number": 558, "title": "Compress Tlog when too large. Fix Topic.addValidator ", "bodyText": "Issue #, if available:\nDescription of changes:\nFix Topic.addValidator directly setting the value after validation:\nThis can cause two problems: 1. if validator modified the value, then update is not fired. 2. if topic has multiple validators, the existing validators are ignored.\nAdding a withValue call fixes this.\nImplemented compress Tlog in ConfigurationWriter:\nConfigurationWriter will track number of entries written and compress the log file when limit is reached.\nCompression means persisting the current effective kernel config to the new tlog and delete the old one.\nReferenced implementation of: https://github.com/innoq/log4j/blob/master/src/main/java/org/apache/log4j/RollingFileAppender.java\nWhy is this change necessary:\nprevent tlog from growing forever\nHow was this change tested:\nunit test, integ test\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-10-22T16:42:22Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558", "merged": true, "mergeCommit": {"oid": "b8232d5b71c486e89aa4c24465a3bbdfd03e4b73"}, "closed": true, "closedAt": "2020-11-02T18:56:08Z", "author": {"login": "tilo-chen"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVbAmMAFqTUxNTkxNDc1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYpQSdgFqTUyMTkwOTk0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1OTE0NzU4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-515914758", "createdAt": "2020-10-23T18:34:48Z", "commit": {"oid": "4e72e8df35fa7c0197717ff3c16f05054326cefd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODozNDo0OFrOHnZOtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODozNjo1OVrOHnZXBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA2OTg3Nw==", "bodyText": "What's the unit of this size? Is it bytes?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r511069877", "createdAt": "2020-10-23T18:34:48Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -3,56 +3,70 @@\n \n package com.aws.greengrass.config;\n \n+import com.aws.greengrass.dependency.Context;\n+import com.aws.greengrass.lifecyclemanager.Kernel;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.util.Coerce;\n import com.aws.greengrass.util.Commitable;\n import com.aws.greengrass.util.CommitableWriter;\n import com.aws.greengrass.util.Utils;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import lombok.Setter;\n \n import java.io.Closeable;\n import java.io.IOException;\n import java.io.Writer;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n import java.nio.file.StandardOpenOption;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import static com.aws.greengrass.util.Utils.flush;\n \n public class ConfigurationWriter implements Closeable, ChildChanged {\n-    private final Writer out;\n+    public static final String TRUNCATE_TLOG_EVENT = \"truncate-tlog\";\n+    private Writer out;\n+    private final Path outPath;\n     private final Configuration conf;\n     @SuppressFBWarnings(value = \"IS2_INCONSISTENT_SYNC\", justification = \"No need for flush immediately to be sync\")\n     private boolean flushImmediately;\n     private final AtomicBoolean closed = new AtomicBoolean();\n \n+    private boolean autoTruncate = false;\n+    private long count;       // bytes written so far\n+    private long maxCount;    // max size of log file before truncation\n+    @Setter\n+    private Context context;\n+\n     private static final Logger logger = LogManager.getLogger(ConfigurationWriter.class);\n+    private static final long DEFAULT_MAX_TLOG_SIZE = 10_000_000L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e72e8df35fa7c0197717ff3c16f05054326cefd"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA3MjAwNw==", "bodyText": "Looks good. Do we delete the old files at some point?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r511072007", "createdAt": "2020-10-23T18:36:59Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -120,17 +161,65 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n         }\n \n         try {\n-            Coerce.appendParseableString(tlogline, out);\n+            count += Coerce.appendParseableString(tlogline, out);\n         } catch (IOException ex) {\n             logger.atError().setEventType(\"config-dump-error\").addKeyValue(\"configNode\", n.getFullName()).setCause(ex)\n                     .log();\n         }\n         if (flushImmediately) {\n             flush(out);\n         }\n+        if (autoTruncate && count > maxCount) {\n+            truncateTlog();\n+        }\n     }\n \n     public void writeAll() { //TODO double check this\n         conf.deepForEachTopic(n -> childChanged(WhatHappened.childChanged, n));\n     }\n+\n+    /**\n+     * Create a new Writer for writing to a tlog file.\n+     *\n+     * @param outputPath path to tlog file\n+     * @return a new writer\n+     * @throws IOException if I/O error creating output file or writer\n+     */\n+    private static Writer newTlogWriter(Path outputPath) throws IOException {\n+        return Files.newBufferedWriter(outputPath, StandardOpenOption.WRITE, StandardOpenOption.APPEND,\n+                StandardOpenOption.DSYNC, StandardOpenOption.CREATE);\n+    }\n+\n+    /**\n+     * Discard current tlog. Start a new tlog with the current kernel configs.\n+     * Old tlog will be renamed to tlog.old\n+     * No need to synchronize because only calling from synchronized childChanged\n+     */\n+    private synchronized void truncateTlog() {\n+        logger.atInfo(TRUNCATE_TLOG_EVENT).log(\"started\");\n+        // TODO: handle errors\n+        Throwable error = context.runOnPublishQueueAndWait(() -> {\n+            // close existing writer\n+            flush(out);\n+            if (out instanceof Commitable) {\n+                ((Commitable) out).commit();\n+            }\n+            Utils.close(out);\n+            logger.atDebug(TRUNCATE_TLOG_EVENT).log(\"existing tlog writer closed\");\n+            // move old tlog\n+            Path oldTlogPath = outPath.resolveSibling(outPath.getFileName() + \".old\");\n+            Files.move(outPath, oldTlogPath, StandardCopyOption.REPLACE_EXISTING);\n+            logger.atDebug(TRUNCATE_TLOG_EVENT).log(\"existing tlog renamed to \" + oldTlogPath);\n+            // write current state to new tlog\n+            context.get(Kernel.class).writeEffectiveConfigAsTransactionLog(outPath);\n+            logger.atDebug(TRUNCATE_TLOG_EVENT).log(\"current effective config written to \" + outPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e72e8df35fa7c0197717ff3c16f05054326cefd"}, "originalPosition": 183}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c12b26c704b3ce51e88d086e0806f766fc2f855b", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c12b26c704b3ce51e88d086e0806f766fc2f855b", "committedDate": "2020-10-23T22:39:38Z", "message": "add deletion. improve test"}, "afterCommit": {"oid": "ed3815c96587d7c135b3c3aa9e79acf1998dbfb6", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ed3815c96587d7c135b3c3aa9e79acf1998dbfb6", "committedDate": "2020-10-23T22:42:28Z", "message": "add deletion. improve test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c530db74291e820bab3b3d627aea33a042546984", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c530db74291e820bab3b3d627aea33a042546984", "committedDate": "2020-10-26T16:01:36Z", "message": "fix synchronization"}, "afterCommit": {"oid": "d1cd21e3f8dd7bd9f07ac9a6464186148f8d8e5c", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d1cd21e3f8dd7bd9f07ac9a6464186148f8d8e5c", "committedDate": "2020-10-26T16:16:09Z", "message": "fix synchronization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MTA3NDE3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-518107417", "createdAt": "2020-10-27T20:18:06Z", "commit": {"oid": "da9a663f7f4ec468f916f84f2eb7d6dc6e343be9"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDoxODowNlrOHpPPMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDoyNjoyOVrOHpPhfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwMzMxNA==", "bodyText": "this needs to be in an aftereach, otherwise it won't be shutdown if the test fails.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513003314", "createdAt": "2020-10-27T20:18:06Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/KernelTest.java", "diffHunk": "@@ -326,6 +336,46 @@ void GIVEN_expected_state_transitions_WHEN_services_error_out_THEN_all_expectati\n         }\n     }\n \n+    @SuppressWarnings(\"PMD.CloseResource\")\n+    @Test\n+    void GIVEN_kernel_running_WHEN_truncate_tlog_THEN_current_config_saved_and_using_new_tlog()\n+            throws InterruptedException, IOException {\n+        kernel = new Kernel().parseArgs().launch();\n+        Context context = kernel.getContext();\n+        Configuration config = context.get(Configuration.class);\n+        Path configPath = kernel.getNucleusPaths().configPath();\n+        KernelLifecycle kernelLifecycle = context.get(KernelLifecycle.class);\n+\n+        // create a tlog that's not interrupted by truncation workflow. goal is to be consistent with this one\n+        context.runOnPublishQueueAndWait(() -> {\n+            kernel.writeEffectiveConfigAsTransactionLog(configPath.resolve(\"full.tlog\"));\n+            ConfigurationWriter.logTransactionsTo(config, configPath.resolve(\"full.tlog\")).flushImmediately(true);\n+        });\n+\n+        // create some test topics\n+        Topic testTopic1 = config.lookup(\"testTopic1\").withValue(\"initial\");\n+        context.runOnPublishQueueAndWait(() -> {\n+            // make truncate run by setting a small size\n+            kernelLifecycle.getTlog().withMaxFileSize(1);\n+            testTopic1.withNewerValue(System.currentTimeMillis(), \"triggering truncate\");\n+            // immediately queue a task to increase max size to prevent repeated truncation\n+            context.runOnPublishQueue(() -> kernelLifecycle.getTlog().withMaxFileSize(100_000));\n+        });\n+        // wait for things to finish\n+        Thread.sleep(1000);\n+        testTopic1.withNewerValue(System.currentTimeMillis(),\"should be in new log\");\n+\n+        // block and check equivalence\n+        context.runOnPublishQueueAndWait(() -> {\n+            Configuration fullConfig = ConfigurationReader.createFromTLog(new Context(), configPath.resolve(\"full.tlog\"));\n+            Configuration newConfig = ConfigurationReader.createFromTLog(new Context(), configPath.resolve(\"config.tlog\"));\n+            Map<String, Object> fullConfigMap = fullConfig.toPOJO();\n+            Map<String, Object> newConfigMap = newConfig.toPOJO();\n+            assertThat(newConfigMap, is(fullConfigMap));\n+        });\n+        kernel.shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da9a663f7f4ec468f916f84f2eb7d6dc6e343be9"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwMzUwOA==", "bodyText": "do not create new Contexts, this creates a new thread which you're going to lose track of", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513003508", "createdAt": "2020-10-27T20:18:25Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/KernelTest.java", "diffHunk": "@@ -326,6 +336,46 @@ void GIVEN_expected_state_transitions_WHEN_services_error_out_THEN_all_expectati\n         }\n     }\n \n+    @SuppressWarnings(\"PMD.CloseResource\")\n+    @Test\n+    void GIVEN_kernel_running_WHEN_truncate_tlog_THEN_current_config_saved_and_using_new_tlog()\n+            throws InterruptedException, IOException {\n+        kernel = new Kernel().parseArgs().launch();\n+        Context context = kernel.getContext();\n+        Configuration config = context.get(Configuration.class);\n+        Path configPath = kernel.getNucleusPaths().configPath();\n+        KernelLifecycle kernelLifecycle = context.get(KernelLifecycle.class);\n+\n+        // create a tlog that's not interrupted by truncation workflow. goal is to be consistent with this one\n+        context.runOnPublishQueueAndWait(() -> {\n+            kernel.writeEffectiveConfigAsTransactionLog(configPath.resolve(\"full.tlog\"));\n+            ConfigurationWriter.logTransactionsTo(config, configPath.resolve(\"full.tlog\")).flushImmediately(true);\n+        });\n+\n+        // create some test topics\n+        Topic testTopic1 = config.lookup(\"testTopic1\").withValue(\"initial\");\n+        context.runOnPublishQueueAndWait(() -> {\n+            // make truncate run by setting a small size\n+            kernelLifecycle.getTlog().withMaxFileSize(1);\n+            testTopic1.withNewerValue(System.currentTimeMillis(), \"triggering truncate\");\n+            // immediately queue a task to increase max size to prevent repeated truncation\n+            context.runOnPublishQueue(() -> kernelLifecycle.getTlog().withMaxFileSize(100_000));\n+        });\n+        // wait for things to finish\n+        Thread.sleep(1000);\n+        testTopic1.withNewerValue(System.currentTimeMillis(),\"should be in new log\");\n+\n+        // block and check equivalence\n+        context.runOnPublishQueueAndWait(() -> {\n+            Configuration fullConfig = ConfigurationReader.createFromTLog(new Context(), configPath.resolve(\"full.tlog\"));\n+            Configuration newConfig = ConfigurationReader.createFromTLog(new Context(), configPath.resolve(\"config.tlog\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da9a663f7f4ec468f916f84f2eb7d6dc6e343be9"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwMzkxNQ==", "bodyText": "this needs to be an AtomicLong", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513003915", "createdAt": "2020-10-27T20:19:05Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -5,56 +5,73 @@\n \n package com.aws.greengrass.config;\n \n+import com.aws.greengrass.dependency.Context;\n+import com.aws.greengrass.lifecyclemanager.Kernel;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.util.Coerce;\n import com.aws.greengrass.util.Commitable;\n import com.aws.greengrass.util.CommitableWriter;\n import com.aws.greengrass.util.Utils;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import lombok.Setter;\n \n import java.io.Closeable;\n import java.io.IOException;\n import java.io.Writer;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n import java.nio.file.StandardOpenOption;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import static com.aws.greengrass.util.Utils.flush;\n \n public class ConfigurationWriter implements Closeable, ChildChanged {\n-    private final Writer out;\n+    public static final String TRUNCATE_TLOG_EVENT = \"truncate-tlog\";\n+    private static final long DEFAULT_MAX_TLOG_SIZE_BYTES = 10_000_000L;\n+\n+    private Writer out;\n+    private final Path outPath;\n     private final Configuration conf;\n+    private final AtomicBoolean closed = new AtomicBoolean();\n     @SuppressFBWarnings(value = \"IS2_INCONSISTENT_SYNC\", justification = \"No need for flush immediately to be sync\")\n     private boolean flushImmediately;\n-    private final AtomicBoolean closed = new AtomicBoolean();\n+    @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")  // same situation as flushImmediately\n+    private boolean autoTruncate = false;\n+    @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")\n+    private long count = 0;  // bytes written so far", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da9a663f7f4ec468f916f84f2eb7d6dc6e343be9"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwNDE0Nw==", "bodyText": "what is outpath?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513004147", "createdAt": "2020-10-27T20:19:28Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -5,56 +5,73 @@\n \n package com.aws.greengrass.config;\n \n+import com.aws.greengrass.dependency.Context;\n+import com.aws.greengrass.lifecyclemanager.Kernel;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.util.Coerce;\n import com.aws.greengrass.util.Commitable;\n import com.aws.greengrass.util.CommitableWriter;\n import com.aws.greengrass.util.Utils;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import lombok.Setter;\n \n import java.io.Closeable;\n import java.io.IOException;\n import java.io.Writer;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n import java.nio.file.StandardOpenOption;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import static com.aws.greengrass.util.Utils.flush;\n \n public class ConfigurationWriter implements Closeable, ChildChanged {\n-    private final Writer out;\n+    public static final String TRUNCATE_TLOG_EVENT = \"truncate-tlog\";\n+    private static final long DEFAULT_MAX_TLOG_SIZE_BYTES = 10_000_000L;\n+\n+    private Writer out;\n+    private final Path outPath;\n     private final Configuration conf;\n+    private final AtomicBoolean closed = new AtomicBoolean();\n     @SuppressFBWarnings(value = \"IS2_INCONSISTENT_SYNC\", justification = \"No need for flush immediately to be sync\")\n     private boolean flushImmediately;\n-    private final AtomicBoolean closed = new AtomicBoolean();\n+    @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")  // same situation as flushImmediately\n+    private boolean autoTruncate = false;\n+    @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")\n+    private long count = 0;  // bytes written so far\n+    @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")\n+    private long maxCount = DEFAULT_MAX_TLOG_SIZE_BYTES;  // max before truncation\n+    @Setter\n+    private Context context;\n \n     private static final Logger logger = LogManager.getLogger(ConfigurationWriter.class);\n \n     @SuppressWarnings(\"LeakingThisInConstructor\")\n-    ConfigurationWriter(Configuration c, Writer o) {\n+    ConfigurationWriter(Configuration c, Writer o, Path op) {\n         out = o;\n+        outPath = op;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da9a663f7f4ec468f916f84f2eb7d6dc6e343be9"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwNTU3MA==", "bodyText": "just synchronize it, it can't hurt", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513005570", "createdAt": "2020-10-27T20:22:09Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -122,17 +165,71 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n         }\n \n         try {\n-            Coerce.appendParseableString(tlogline, out);\n+            count += Coerce.appendParseableString(tlogline, out);\n         } catch (IOException ex) {\n             logger.atError().setEventType(\"config-dump-error\").addKeyValue(\"configNode\", n.getFullName()).setCause(ex)\n                     .log();\n         }\n         if (flushImmediately) {\n             flush(out);\n         }\n+        if (autoTruncate && count > maxCount) {\n+            truncateTlog();\n+        }\n     }\n \n     public void writeAll() { //TODO double check this\n         conf.deepForEachTopic(n -> childChanged(WhatHappened.childChanged, n));\n     }\n+\n+    /**\n+     * Create a new Writer for writing to a tlog file.\n+     *\n+     * @param outputPath path to tlog file\n+     * @return a new writer\n+     * @throws IOException if I/O error creating output file or writer\n+     */\n+    private static Writer newTlogWriter(Path outputPath) throws IOException {\n+        return Files.newBufferedWriter(outputPath, StandardOpenOption.WRITE, StandardOpenOption.APPEND,\n+                StandardOpenOption.DSYNC, StandardOpenOption.CREATE);\n+    }\n+\n+    /**\n+     * Discard current tlog. Start a new tlog with the current kernel configs.\n+     * Old tlog will be renamed to tlog.old\n+     * No need to synchronize because only calling from synchronized childChanged\n+     */\n+    private void truncateTlog() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da9a663f7f4ec468f916f84f2eb7d6dc6e343be9"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAwNzk5Nw==", "bodyText": "use long", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513007997", "createdAt": "2020-10-27T20:26:29Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/Coerce.java", "diffHunk": "@@ -248,14 +248,17 @@ public static String toString(Object o) {\n      *\n      * @param o object to convert.\n      * @param out appendable to write to.\n+     * @return number of characters written\n      * @throws IOException if the append fails.\n      */\n-    public static void appendParseableString(Object o, Appendable out) throws IOException {\n+    public static int appendParseableString(Object o, Appendable out) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da9a663f7f4ec468f916f84f2eb7d6dc6e343be9"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da9a663f7f4ec468f916f84f2eb7d6dc6e343be9", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/da9a663f7f4ec468f916f84f2eb7d6dc6e343be9", "committedDate": "2020-10-27T15:48:48Z", "message": "Merge branch 'master' into compress-tlog"}, "afterCommit": {"oid": "3a3c31b1609ba5bb548f258bae2c2443f802b276", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3a3c31b1609ba5bb548f258bae2c2443f802b276", "committedDate": "2020-10-27T23:59:49Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4OTA0NTEz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-518904513", "createdAt": "2020-10-28T17:16:18Z", "commit": {"oid": "b0258caef94e7097f8baba6705669552c5662bde"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNzoxNjoxOFrOHp1DIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNzoyMjo1MVrOHp1V-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYyMjgxNw==", "bodyText": "it isn't too likely, but what if we just had 1 very large thing in the config? Maybe this shouldn't go by bytes but by number of events?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513622817", "createdAt": "2020-10-28T17:16:18Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -5,56 +5,73 @@\n \n package com.aws.greengrass.config;\n \n+import com.aws.greengrass.dependency.Context;\n+import com.aws.greengrass.lifecyclemanager.Kernel;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.util.Coerce;\n import com.aws.greengrass.util.Commitable;\n import com.aws.greengrass.util.CommitableWriter;\n import com.aws.greengrass.util.Utils;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import lombok.Setter;\n \n import java.io.Closeable;\n import java.io.IOException;\n import java.io.Writer;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n import java.nio.file.StandardOpenOption;\n import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicLong;\n \n import static com.aws.greengrass.util.Utils.flush;\n \n public class ConfigurationWriter implements Closeable, ChildChanged {\n-    private final Writer out;\n+    private static final String TRUNCATE_TLOG_EVENT = \"truncate-tlog\";\n+    private static final long DEFAULT_MAX_TLOG_SIZE_BYTES = 10_000_000L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0258caef94e7097f8baba6705669552c5662bde"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYyMzEyMQ==", "bodyText": "this log doesn't seem helpful, I'd just remove it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513623121", "createdAt": "2020-10-28T17:16:47Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -5,56 +5,73 @@\n \n package com.aws.greengrass.config;\n \n+import com.aws.greengrass.dependency.Context;\n+import com.aws.greengrass.lifecyclemanager.Kernel;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.util.Coerce;\n import com.aws.greengrass.util.Commitable;\n import com.aws.greengrass.util.CommitableWriter;\n import com.aws.greengrass.util.Utils;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import lombok.Setter;\n \n import java.io.Closeable;\n import java.io.IOException;\n import java.io.Writer;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n import java.nio.file.StandardOpenOption;\n import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicLong;\n \n import static com.aws.greengrass.util.Utils.flush;\n \n public class ConfigurationWriter implements Closeable, ChildChanged {\n-    private final Writer out;\n+    private static final String TRUNCATE_TLOG_EVENT = \"truncate-tlog\";\n+    private static final long DEFAULT_MAX_TLOG_SIZE_BYTES = 10_000_000L;\n+\n+    private Writer out;\n+    private final Path tlogOutputPath;\n     private final Configuration conf;\n+    private final AtomicBoolean closed = new AtomicBoolean();\n+    private final AtomicLong count = new AtomicLong(0);  // bytes written so far\n     @SuppressFBWarnings(value = \"IS2_INCONSISTENT_SYNC\", justification = \"No need for flush immediately to be sync\")\n     private boolean flushImmediately;\n-    private final AtomicBoolean closed = new AtomicBoolean();\n+    @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")  // same situation as flushImmediately\n+    private boolean autoTruncate = false;\n+    @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")\n+    private long maxCount = DEFAULT_MAX_TLOG_SIZE_BYTES;  // max before truncation\n+    @Setter\n+    private Context context;\n \n     private static final Logger logger = LogManager.getLogger(ConfigurationWriter.class);\n \n     @SuppressWarnings(\"LeakingThisInConstructor\")\n-    ConfigurationWriter(Configuration c, Writer o) {\n+    ConfigurationWriter(Configuration c, Writer o, Path p) {\n         out = o;\n+        tlogOutputPath = p;\n         conf = c;\n         conf.getRoot().addWatcher(this);\n     }\n \n     ConfigurationWriter(Configuration c, Path p) throws IOException {\n-        this(c, CommitableWriter.abandonOnClose(p));\n+        this(c, CommitableWriter.abandonOnClose(p), p);\n     }\n \n     /**\n      * Dump the configuration into a file given by the path.\n      *\n-     * @param c    configuration to write out\n-     * @param file path to write to\n+     * @param c configuration to write out\n+     * @param p path to write to\n      */\n-    public static void dump(Configuration c, Path file) {\n-        try (ConfigurationWriter cs = new ConfigurationWriter(c, CommitableWriter.abandonOnClose(file))) {\n+    public static void dump(Configuration c, Path p) {\n+        try (ConfigurationWriter cs = new ConfigurationWriter(c, p)) {\n             cs.writeAll();\n-            logger.atInfo().setEventType(\"config-dump\").addKeyValue(\"path\", file).log();\n+            logger.atInfo().setEventType(\"config-dump\").addKeyValue(\"path\", p).log();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0258caef94e7097f8baba6705669552c5662bde"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYyNDE3MQ==", "bodyText": "probably not a helpful log", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513624171", "createdAt": "2020-10-28T17:18:20Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -124,17 +167,69 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n         }\n \n         try {\n-            Coerce.appendParseableString(tlogline, out);\n+            count.addAndGet(Coerce.appendParseableString(tlogline, out));\n         } catch (IOException ex) {\n             logger.atError().setEventType(\"config-dump-error\").addKeyValue(\"configNode\", n.getFullName()).setCause(ex)\n                     .log();\n         }\n         if (flushImmediately) {\n             flush(out);\n         }\n+        if (autoTruncate && count.get() > maxCount) {\n+            truncateTlog();\n+        }\n     }\n \n     public void writeAll() { // GG_NEEDS_REVIEW: TODO double check this\n         conf.deepForEachTopic(n -> childChanged(WhatHappened.childChanged, n));\n     }\n+\n+    /**\n+     * Create a new Writer for writing to a tlog file.\n+     *\n+     * @param outputPath path to tlog file\n+     * @return a new writer\n+     * @throws IOException if I/O error creating output file or writer\n+     */\n+    private static Writer newTlogWriter(Path outputPath) throws IOException {\n+        return Files.newBufferedWriter(outputPath, StandardOpenOption.WRITE, StandardOpenOption.APPEND,\n+                StandardOpenOption.DSYNC, StandardOpenOption.CREATE);\n+    }\n+\n+    /**\n+     * Discard current tlog. Start a new tlog with the current kernel configs.\n+     */\n+    private synchronized void truncateTlog() {\n+        logger.atInfo(TRUNCATE_TLOG_EVENT).log(\"started\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0258caef94e7097f8baba6705669552c5662bde"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYyNDMxNw==", "bodyText": "definitely need this now, cannot merge without it.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513624317", "createdAt": "2020-10-28T17:18:32Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -124,17 +167,69 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n         }\n \n         try {\n-            Coerce.appendParseableString(tlogline, out);\n+            count.addAndGet(Coerce.appendParseableString(tlogline, out));\n         } catch (IOException ex) {\n             logger.atError().setEventType(\"config-dump-error\").addKeyValue(\"configNode\", n.getFullName()).setCause(ex)\n                     .log();\n         }\n         if (flushImmediately) {\n             flush(out);\n         }\n+        if (autoTruncate && count.get() > maxCount) {\n+            truncateTlog();\n+        }\n     }\n \n     public void writeAll() { // GG_NEEDS_REVIEW: TODO double check this\n         conf.deepForEachTopic(n -> childChanged(WhatHappened.childChanged, n));\n     }\n+\n+    /**\n+     * Create a new Writer for writing to a tlog file.\n+     *\n+     * @param outputPath path to tlog file\n+     * @return a new writer\n+     * @throws IOException if I/O error creating output file or writer\n+     */\n+    private static Writer newTlogWriter(Path outputPath) throws IOException {\n+        return Files.newBufferedWriter(outputPath, StandardOpenOption.WRITE, StandardOpenOption.APPEND,\n+                StandardOpenOption.DSYNC, StandardOpenOption.CREATE);\n+    }\n+\n+    /**\n+     * Discard current tlog. Start a new tlog with the current kernel configs.\n+     */\n+    private synchronized void truncateTlog() {\n+        logger.atInfo(TRUNCATE_TLOG_EVENT).log(\"started\");\n+        // TODO: handle errors and recover", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0258caef94e7097f8baba6705669552c5662bde"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYyNzY0MA==", "bodyText": "Truncation is running in the publish queue isn't it? Do we need to wait here or can you just block on the publish queue using runOnPublishQueueAndWait?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r513627640", "createdAt": "2020-10-28T17:22:51Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/config/ConfigurationWriterTest.java", "diffHunk": "@@ -98,4 +103,29 @@ void GIVEN_config_with_configuration_writer_WHEN_config_remove_made_THEN_written\n             assertNull(readConfig.find(\"a\", \"containerToBeRemoved\"));\n         }\n     }\n+\n+    @Test\n+    void GIVEN_config_with_configuration_writer_WHEN_max_size_reached_THEN_auto_truncate()\n+            throws IOException, InterruptedException {\n+        Path tlog = tempDir.resolve(\"test_truncate.tlog\");\n+        Configuration config = new Configuration(context);\n+        Kernel mockKernel = mock(Kernel.class);\n+        doNothing().when(mockKernel).writeEffectiveConfigAsTransactionLog(any());\n+        context.put(Kernel.class, mockKernel);\n+\n+        ConfigurationWriter.logTransactionsTo(config, tlog)\n+                .flushImmediately(true).withAutoTruncate(context).withMaxFileSize(120);\n+\n+        Topic test1 = config.lookup(\"test1\").withValue(\"1\");\n+        test1.withNewerValue(System.currentTimeMillis(), \"a longer string to exceed limit\");\n+        // wait for truncation to complete\n+        Thread.sleep(500);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0258caef94e7097f8baba6705669552c5662bde"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0258caef94e7097f8baba6705669552c5662bde", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b0258caef94e7097f8baba6705669552c5662bde", "committedDate": "2020-10-28T17:12:02Z", "message": "Merge branch 'master' into compress-tlog"}, "afterCommit": {"oid": "ada8cee3031a058db00f82603a26e531a504b6d7", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ada8cee3031a058db00f82603a26e531a504b6d7", "committedDate": "2020-10-29T16:38:45Z", "message": "using line counts. try to recover from errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMTYwODc5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-520160879", "createdAt": "2020-10-29T23:37:31Z", "commit": {"oid": "ada8cee3031a058db00f82603a26e531a504b6d7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzozNzozMlrOHqyXJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzozODo1MFrOHqyYkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYyNzM2Ng==", "bodyText": "rename bytes to lines", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r514627366", "createdAt": "2020-10-29T23:37:32Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -82,6 +97,34 @@ public synchronized void close() {\n         Utils.close(out);\n     }\n \n+    /**\n+     * Set to enable auto truncate with default max tlog size.\n+     * @param context a Context to provide access to kernel\n+     * @return this\n+     * @throws IOException I/O error querying current log file size\n+     */\n+    public ConfigurationWriter withAutoTruncate(Context context) throws IOException {\n+        autoTruncate = true;\n+        setContext(context);\n+        if (Files.exists(tlogOutputPath)) {\n+            count.set(Files.lines(tlogOutputPath).count());\n+        } else {\n+            count.set(0);\n+        }\n+        return this;\n+    }\n+\n+    /**\n+     * Set max lines of tlog before truncation.\n+     *\n+     * @param bytes max number of lines\n+     * @return this\n+     */\n+    public ConfigurationWriter withMaxLines(long bytes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada8cee3031a058db00f82603a26e531a504b6d7"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYyNzczMA==", "bodyText": "I wouldn't actually do this, otherwise we'll have the same problem that I was talking about before. I'd just reset the count to 0, and then say once we hit 15,000 new events, to truncate. That seems reasonable.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r514627730", "createdAt": "2020-10-29T23:38:50Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -125,16 +168,92 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n \n         try {\n             Coerce.appendParseableString(tlogline, out);\n+            count.incrementAndGet();\n         } catch (IOException ex) {\n             logger.atError().setEventType(\"config-dump-error\").addKeyValue(\"configNode\", n.getFullName()).setCause(ex)\n                     .log();\n         }\n         if (flushImmediately) {\n             flush(out);\n         }\n+        long currCount = count.get();\n+        if (autoTruncate && currCount > maxCount && currCount > retryCount) {\n+            truncateTlog();\n+        }\n     }\n \n     public void writeAll() { // GG_NEEDS_REVIEW: TODO double check this\n         conf.deepForEachTopic(n -> childChanged(WhatHappened.childChanged, n));\n     }\n+\n+    /**\n+     * Create a new Writer for writing to a tlog file.\n+     *\n+     * @param outputPath path to tlog file\n+     * @return a new writer\n+     * @throws IOException if I/O error creating output file or writer\n+     */\n+    private static Writer newTlogWriter(Path outputPath) throws IOException {\n+        return Files.newBufferedWriter(outputPath, StandardOpenOption.WRITE, StandardOpenOption.APPEND,\n+                StandardOpenOption.DSYNC, StandardOpenOption.CREATE);\n+    }\n+\n+    /**\n+     * Discard current tlog. Start a new tlog with the current kernel configs.\n+     */\n+    private synchronized void truncateTlog() {\n+        Path oldTlogPath = tlogOutputPath.resolveSibling(tlogOutputPath.getFileName() + \".old\");\n+        Throwable error = context.runOnPublishQueueAndWait(() -> {\n+            // close existing writer\n+            flush(out);\n+            if (out instanceof Commitable) {\n+                ((Commitable) out).commit();\n+            }\n+            logger.atDebug(TRUNCATE_TLOG_EVENT).log(\"existing tlog writer closed\");\n+            // move old tlog\n+            try {\n+                Files.move(tlogOutputPath, oldTlogPath, StandardCopyOption.REPLACE_EXISTING);\n+            } catch (IOException e) {\n+                logger.atError(TRUNCATE_TLOG_EVENT, e).log(\"failed to rename existing tlog\");\n+                // recover: reopen writer to old tlog\n+                out = newTlogWriter(tlogOutputPath);\n+                setTruncateRetryCount();\n+                logger.atWarn(TRUNCATE_TLOG_EVENT, e).log(\"recovered and will retry later\");\n+                return;\n+            }\n+            logger.atDebug(TRUNCATE_TLOG_EVENT).log(\"existing tlog renamed to \" + oldTlogPath);\n+            // write current state to new tlog\n+            try {\n+                context.get(Kernel.class).writeEffectiveConfigAsTransactionLog(tlogOutputPath);\n+            } catch (IOException e) {\n+                logger.atError(TRUNCATE_TLOG_EVENT, e).log(\"failed to persist kernel config\");\n+                // recover: undo renaming and keep using old tlog\n+                Files.move(oldTlogPath, tlogOutputPath, StandardCopyOption.REPLACE_EXISTING);\n+                out = newTlogWriter(tlogOutputPath);\n+                setTruncateRetryCount();\n+                logger.atWarn(TRUNCATE_TLOG_EVENT, e).log(\"recovered and will retry later\");\n+                return;\n+            }\n+            logger.atDebug(TRUNCATE_TLOG_EVENT).log(\"current effective config written to \" + tlogOutputPath);\n+            // open writer to new tlog\n+            out = newTlogWriter(tlogOutputPath);\n+            count.set(Files.lines(tlogOutputPath).count());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada8cee3031a058db00f82603a26e531a504b6d7"}, "originalPosition": 203}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ada8cee3031a058db00f82603a26e531a504b6d7", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ada8cee3031a058db00f82603a26e531a504b6d7", "committedDate": "2020-10-29T16:38:45Z", "message": "using line counts. try to recover from errors"}, "afterCommit": {"oid": "e2af41d2816e4ee9b31458e321b973a882a85201", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e2af41d2816e4ee9b31458e321b973a882a85201", "committedDate": "2020-10-30T17:47:29Z", "message": "reset count zero if success"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDI1NzIw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-521025720", "createdAt": "2020-10-30T20:46:38Z", "commit": {"oid": "71d6d51b44538cdec90c7f0f11279f4e92bf3e40"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDo0NjozOFrOHrgBJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDo1MjoyOVrOHrgKLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM3NTM5Nw==", "bodyText": "Just add the justification here instead of in comment, so it's easier to maintain. Same for maxCount", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r515375397", "createdAt": "2020-10-30T20:46:38Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -5,56 +5,73 @@\n \n package com.aws.greengrass.config;\n \n+import com.aws.greengrass.dependency.Context;\n+import com.aws.greengrass.lifecyclemanager.Kernel;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.util.Coerce;\n import com.aws.greengrass.util.Commitable;\n import com.aws.greengrass.util.CommitableWriter;\n import com.aws.greengrass.util.Utils;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import lombok.Setter;\n \n import java.io.Closeable;\n import java.io.IOException;\n import java.io.Writer;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n import java.nio.file.StandardOpenOption;\n import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicLong;\n \n import static com.aws.greengrass.util.Utils.flush;\n \n public class ConfigurationWriter implements Closeable, ChildChanged {\n-    private final Writer out;\n+    private static final String TRUNCATE_TLOG_EVENT = \"truncate-tlog\";\n+    private static final long DEFAULT_MAX_TLOG_LINES = 15_000;\n+\n+    private Writer out;\n+    private final Path tlogOutputPath;\n     private final Configuration conf;\n+    private final AtomicBoolean closed = new AtomicBoolean();\n+    private final AtomicLong count = new AtomicLong(0);  // lines written so far\n     @SuppressFBWarnings(value = \"IS2_INCONSISTENT_SYNC\", justification = \"No need for flush immediately to be sync\")\n     private boolean flushImmediately;\n-    private final AtomicBoolean closed = new AtomicBoolean();\n+    @SuppressFBWarnings(\"IS2_INCONSISTENT_SYNC\")  // same situation as flushImmediately", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71d6d51b44538cdec90c7f0f11279f4e92bf3e40"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM3NzcxMQ==", "bodyText": "Can we add some testing for different error handling scenarios as well?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r515377711", "createdAt": "2020-10-30T20:52:29Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/greengrass/config/ConfigurationWriter.java", "diffHunk": "@@ -125,16 +168,92 @@ public synchronized void childChanged(WhatHappened what, Node n) {\n \n         try {\n             Coerce.appendParseableString(tlogline, out);\n+            count.incrementAndGet();\n         } catch (IOException ex) {\n             logger.atError().setEventType(\"config-dump-error\").addKeyValue(\"configNode\", n.getFullName()).setCause(ex)\n                     .log();\n         }\n         if (flushImmediately) {\n             flush(out);\n         }\n+        long currCount = count.get();\n+        if (autoTruncate && currCount > maxCount && currCount > retryCount) {\n+            truncateTlog();\n+        }\n     }\n \n     public void writeAll() { // GG_NEEDS_REVIEW: TODO double check this\n         conf.deepForEachTopic(n -> childChanged(WhatHappened.childChanged, n));\n     }\n+\n+    /**\n+     * Create a new Writer for writing to a tlog file.\n+     *\n+     * @param outputPath path to tlog file\n+     * @return a new writer\n+     * @throws IOException if I/O error creating output file or writer\n+     */\n+    private static Writer newTlogWriter(Path outputPath) throws IOException {\n+        return Files.newBufferedWriter(outputPath, StandardOpenOption.WRITE, StandardOpenOption.APPEND,\n+                StandardOpenOption.DSYNC, StandardOpenOption.CREATE);\n+    }\n+\n+    /**\n+     * Discard current tlog. Start a new tlog with the current kernel configs.\n+     */\n+    private synchronized void truncateTlog() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71d6d51b44538cdec90c7f0f11279f4e92bf3e40"}, "originalPosition": 167}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDY3MzIy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-521067322", "createdAt": "2020-10-30T22:23:12Z", "commit": {"oid": "61be71c752fd7c2a72c001e36ead669cbe0ff9f1"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDY4Njk3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-521068697", "createdAt": "2020-10-30T22:27:26Z", "commit": {"oid": "61be71c752fd7c2a72c001e36ead669cbe0ff9f1"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMjoyNzoyN1rOHriEMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMjoyNzoyN1rOHriEMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwODk0NA==", "bodyText": "don't run this inside of the publish queue, otherwise it will not cause the test to fail", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#discussion_r515408944", "createdAt": "2020-10-30T22:27:27Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/KernelTest.java", "diffHunk": "@@ -316,6 +325,45 @@ void GIVEN_expected_state_transitions_WHEN_services_error_out_THEN_all_expectati\n         }\n     }\n \n+    @SuppressWarnings(\"PMD.CloseResource\")\n+    @Test\n+    void GIVEN_kernel_running_WHEN_truncate_tlog_THEN_current_config_saved_and_using_new_tlog()\n+            throws InterruptedException {\n+        kernel = new Kernel().parseArgs().launch();\n+        Context context = kernel.getContext();\n+        Configuration config = context.get(Configuration.class);\n+        Path configPath = kernel.getNucleusPaths().configPath();\n+        KernelLifecycle kernelLifecycle = context.get(KernelLifecycle.class);\n+\n+        // create a tlog that's not interrupted by truncation workflow. goal is to be consistent with this one\n+        context.runOnPublishQueueAndWait(() -> {\n+            kernel.writeEffectiveConfigAsTransactionLog(configPath.resolve(\"full.tlog\"));\n+            ConfigurationWriter.logTransactionsTo(config, configPath.resolve(\"full.tlog\")).flushImmediately(true);\n+        });\n+\n+        // create some test topics\n+        Topic testTopic1 = config.lookup(\"testTopic1\").withValue(\"initial\");\n+        context.runOnPublishQueueAndWait(() -> {\n+            // make truncate run by setting a small size\n+            kernelLifecycle.getTlog().withMaxEntries(1);\n+            testTopic1.withNewerValue(System.currentTimeMillis(), \"triggering truncate\");\n+            // immediately queue a task to increase max size to prevent repeated truncation\n+            context.runOnPublishQueue(() -> kernelLifecycle.getTlog().withMaxEntries(100_000));\n+        });\n+        // wait for things to finish\n+        Thread.sleep(1000);\n+        testTopic1.withNewerValue(System.currentTimeMillis(),\"should be in new log\");\n+\n+        // block and check equivalence\n+        context.runOnPublishQueueAndWait(() -> {\n+            Configuration fullConfig = ConfigurationReader.createFromTLog(context, configPath.resolve(\"full.tlog\"));\n+            Configuration newConfig = ConfigurationReader.createFromTLog(context, configPath.resolve(\"config.tlog\"));\n+            Map<String, Object> fullConfigMap = fullConfig.toPOJO();\n+            Map<String, Object> newConfigMap = newConfig.toPOJO();\n+            assertThat(newConfigMap, is(fullConfigMap));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61be71c752fd7c2a72c001e36ead669cbe0ff9f1"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDc2NTg5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-521076589", "createdAt": "2020-10-30T22:55:50Z", "commit": {"oid": "5234a8302b92c948493f3172f242d7b3336ec18b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb7468ac093a0d96a620d9d070f23639c8577c67", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cb7468ac093a0d96a620d9d070f23639c8577c67", "committedDate": "2020-11-01T22:29:27Z", "message": "add compress tlog workflow and test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d773cdde9cd64e3729a4df1020abd7e877fe3f06", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d773cdde9cd64e3729a4df1020abd7e877fe3f06", "committedDate": "2020-11-01T22:29:27Z", "message": "add detection and trigger compress tlog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed7b9845c1ab725a6285afc3878dec67d92f1d69", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ed7b9845c1ab725a6285afc3878dec67d92f1d69", "committedDate": "2020-11-01T22:29:27Z", "message": "add deletion. improve test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf9ac2b9aa29e281201acb0f16b0ecb968e4e89a", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cf9ac2b9aa29e281201acb0f16b0ecb968e4e89a", "committedDate": "2020-11-01T22:29:27Z", "message": "fix synchronization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e74773139e41a645b362c1d1d138e733f75e14a", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4e74773139e41a645b362c1d1d138e733f75e14a", "committedDate": "2020-11-01T22:29:27Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a023e8ac6a48c87c86b672ffb8fd7e0b0fec6e9", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9a023e8ac6a48c87c86b672ffb8fd7e0b0fec6e9", "committedDate": "2020-11-01T22:29:28Z", "message": "not creating new context in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9da89b6f8ab4048fcf1ba3b2a65178bc52a69bd", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f9da89b6f8ab4048fcf1ba3b2a65178bc52a69bd", "committedDate": "2020-11-01T22:29:28Z", "message": "using line counts. try to recover from errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91095116d8c70ddda0cfdf848cdfff9028fb1750", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/91095116d8c70ddda0cfdf848cdfff9028fb1750", "committedDate": "2020-11-01T22:29:28Z", "message": "reset count zero if success"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b22298a4e2560c7890f602d7713efa54ac45fc12", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b22298a4e2560c7890f602d7713efa54ac45fc12", "committedDate": "2020-11-01T22:29:28Z", "message": "Update ConfigurationWriter.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69503cd5ba721686099e50cb24bacac6f06abbe8", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/69503cd5ba721686099e50cb24bacac6f06abbe8", "committedDate": "2020-11-01T22:29:28Z", "message": "improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60835ac82a5c06a9e5b6cbb8c15e220deabcbf38", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/60835ac82a5c06a9e5b6cbb8c15e220deabcbf38", "committedDate": "2020-11-01T22:29:28Z", "message": "test truncate twice"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaf1757b2217843a2c9e08252b455a8464689978", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eaf1757b2217843a2c9e08252b455a8464689978", "committedDate": "2020-11-01T22:29:28Z", "message": "kernel test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e20cad62dc5f3db964b83e4438c41dfecfa9b138", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e20cad62dc5f3db964b83e4438c41dfecfa9b138", "committedDate": "2020-11-01T22:29:28Z", "message": "kernel test and topic addValidator bug"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b5819097d0bde23a3c19ba865a86d95a82dd2ee", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7b5819097d0bde23a3c19ba865a86d95a82dd2ee", "committedDate": "2020-10-31T00:35:26Z", "message": "kernel test"}, "afterCommit": {"oid": "e20cad62dc5f3db964b83e4438c41dfecfa9b138", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e20cad62dc5f3db964b83e4438c41dfecfa9b138", "committedDate": "2020-11-01T22:29:28Z", "message": "kernel test and topic addValidator bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbaa462a9e0e43e02061275bbedfa0ee49d3623a", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fbaa462a9e0e43e02061275bbedfa0ee49d3623a", "committedDate": "2020-11-02T02:39:19Z", "message": "add a test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODA1NzM0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-521805734", "createdAt": "2020-11-02T16:43:57Z", "commit": {"oid": "fbaa462a9e0e43e02061275bbedfa0ee49d3623a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODQ0Mjk1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-521844295", "createdAt": "2020-11-02T17:24:02Z", "commit": {"oid": "fbaa462a9e0e43e02061275bbedfa0ee49d3623a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0be3808b5f0eb73883f8e5a45f1c939c6387dc84", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0be3808b5f0eb73883f8e5a45f1c939c6387dc84", "committedDate": "2020-11-02T17:33:12Z", "message": "kernel test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "989bc41b931fbc632f9ad8459f1326e34bb5eac9", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/989bc41b931fbc632f9ad8459f1326e34bb5eac9", "committedDate": "2020-11-02T17:33:29Z", "message": "Merge branch 'master' into compress-tlog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2ae9d8dd17f6b1802296077eacc01e553a30d1b", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d2ae9d8dd17f6b1802296077eacc01e553a30d1b", "committedDate": "2020-11-02T17:40:45Z", "message": "Merge branch 'master' into compress-tlog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODk5MTc2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-521899176", "createdAt": "2020-11-02T18:39:20Z", "commit": {"oid": "d2ae9d8dd17f6b1802296077eacc01e553a30d1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTA5OTQy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/558#pullrequestreview-521909942", "createdAt": "2020-11-02T18:55:19Z", "commit": {"oid": "d2ae9d8dd17f6b1802296077eacc01e553a30d1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2819, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}