{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NjI3NTMw", "number": 404, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzoyNDoyN1rOEehOKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODowNjozOFrOEfBXHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDM3MDMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzoyNDoyN1rOHKNkaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzo0MjowMVrOHLBejg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3MDEyMQ==", "bodyText": "Is findAny() still correct?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/404#discussion_r480470121", "createdAt": "2020-08-31T23:24:27Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -295,8 +297,12 @@ private String lookupParameterValueForComponent(\n                                                                                             String packageName,\n                                                                                             String packageVersion) {\n         return document.getDeploymentPackageConfigurationList().stream()\n-                .filter(packageConfig -> packageName.equals(packageConfig.getPackageName()) && packageVersion\n-                        .equals(packageConfig.getResolvedVersion())).findAny();\n+                       .filter(packageConfig ->\n+                               packageName.equals(packageConfig.getPackageName())\n+                                       // TODO packageConfig.getResolvedVersion() should be strongly typed when created\n+                                       && Requirement.buildNPM(packageConfig.getResolvedVersion())\n+                                                     .isSatisfiedBy(new Semver(packageVersion, Semver.SemverType.NPM)))\n+                       .findAny();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e7ec30bc4258f43f6a4c4c1bc3c1b3ee47ce793"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMyMDU5MA==", "bodyText": "Good question. findAny and findFirst might both be correct, as a deployment doc could have multiple entries that satisfy the resolved version (which might change). Let's keep it for now I guess.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/404#discussion_r481320590", "createdAt": "2020-09-01T17:42:01Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolver.java", "diffHunk": "@@ -295,8 +297,12 @@ private String lookupParameterValueForComponent(\n                                                                                             String packageName,\n                                                                                             String packageVersion) {\n         return document.getDeploymentPackageConfigurationList().stream()\n-                .filter(packageConfig -> packageName.equals(packageConfig.getPackageName()) && packageVersion\n-                        .equals(packageConfig.getResolvedVersion())).findAny();\n+                       .filter(packageConfig ->\n+                               packageName.equals(packageConfig.getPackageName())\n+                                       // TODO packageConfig.getResolvedVersion() should be strongly typed when created\n+                                       && Requirement.buildNPM(packageConfig.getResolvedVersion())\n+                                                     .isSatisfiedBy(new Semver(packageVersion, Semver.SemverType.NPM)))\n+                       .findAny();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3MDEyMQ=="}, "originalCommit": {"oid": "6e7ec30bc4258f43f6a4c4c1bc3c1b3ee47ce793"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTYzNjEzOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolverTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODowNjozOFrOHLCVXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODoyMzozMFrOHLC5Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNDYyMg==", "bodyText": "What if the customer isn't specifying requirements? What if it is just 1.2?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/404#discussion_r481334622", "createdAt": "2020-09-01T18:06:38Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolverTest.java", "diffHunk": "@@ -406,7 +406,7 @@ void GIVEN_deployment_with_artifact_WHEN_config_resolution_requested_THEN_artifa\n         }}, Collections.emptyList(), Collections.emptyMap(), null);\n \n         DeploymentPackageConfiguration rootPackageDeploymentConfig =\n-                new DeploymentPackageConfiguration(TEST_INPUT_PACKAGE_A, true, \"1.2\", Collections.emptyMap());\n+                new DeploymentPackageConfiguration(TEST_INPUT_PACKAGE_A, true, \"=1.2\", Collections.emptyMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e552aed9c745e0863142876c456939dce9df309c"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNTI1Nw==", "bodyText": "If it needs to be a version range, then we need to make this clear in the cloud", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/404#discussion_r481335257", "createdAt": "2020-09-01T18:07:51Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolverTest.java", "diffHunk": "@@ -406,7 +406,7 @@ void GIVEN_deployment_with_artifact_WHEN_config_resolution_requested_THEN_artifa\n         }}, Collections.emptyList(), Collections.emptyMap(), null);\n \n         DeploymentPackageConfiguration rootPackageDeploymentConfig =\n-                new DeploymentPackageConfiguration(TEST_INPUT_PACKAGE_A, true, \"1.2\", Collections.emptyMap());\n+                new DeploymentPackageConfiguration(TEST_INPUT_PACKAGE_A, true, \"=1.2\", Collections.emptyMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNDYyMg=="}, "originalCommit": {"oid": "e552aed9c745e0863142876c456939dce9df309c"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM0Mzc0Nw==", "bodyText": "1.2 should also work but it doesn't now. But 1.2.0 works. Took me some time to debug and found a werid error from Semver lib... I opened an issue with them: vdurmont/semver4j#46\nBut in reality, right now cloud and local will send a valid \"x.y.z\" with patch version specified, so we should be good.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/404#discussion_r481343747", "createdAt": "2020-09-01T18:23:30Z", "author": {"login": "leaf94"}, "path": "src/test/java/com/aws/iot/evergreen/packagemanager/KernelConfigResolverTest.java", "diffHunk": "@@ -406,7 +406,7 @@ void GIVEN_deployment_with_artifact_WHEN_config_resolution_requested_THEN_artifa\n         }}, Collections.emptyList(), Collections.emptyMap(), null);\n \n         DeploymentPackageConfiguration rootPackageDeploymentConfig =\n-                new DeploymentPackageConfiguration(TEST_INPUT_PACKAGE_A, true, \"1.2\", Collections.emptyMap());\n+                new DeploymentPackageConfiguration(TEST_INPUT_PACKAGE_A, true, \"=1.2\", Collections.emptyMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNDYyMg=="}, "originalCommit": {"oid": "e552aed9c745e0863142876c456939dce9df309c"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 742, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}