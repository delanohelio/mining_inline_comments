{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjM4OTE1", "number": 212, "title": "Refactor PackageManager to use new PackageStore", "bodyText": "Issue #, if available:\nDescription of changes:\nPart 3 of #201\n\nRefactor PackageManager to use new PackageStore.\nKernelConfigResolver depends on PackageStore only.\nNote that with proper DI, the integration/E2E test doesn't have to change at all.\nClean up TestHelper and test resources.\n\nWhy is this change necessary:\n\nPackageManager coordinates getting recipes from cloud and local, and downloading artifact. By encapsulating recipe CRUD in the PackageStore, PackageManager doesn't handle details, such as folder structure, file I/O, at the higher level.\n\nHow was this change tested:\nmvn clean verify.\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-04-23T22:49:16Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212", "merged": true, "mergeCommit": {"oid": "1ebfd040218af9b4ca35dce15a1989941a0c300b"}, "closed": true, "closedAt": "2020-04-28T19:50:05Z", "author": {"login": "leaf94"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcagI8vgH2gAyNDA4MjM4OTE1OmY2YjY0MTA3ZDAwNjQ5MGMxMjliOGQ4ZGY5ZDg4ZWM3NzQwYjRkZjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccJIwIAFqTQwMjE0OTcxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6b64107d006490c129b8d8df9d88ec7740b4df3", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f6b64107d006490c129b8d8df9d88ec7740b4df3", "committedDate": "2020-04-23T17:14:51Z", "message": "Implement PackageStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa96f07584959ae6429866b5b27b6c2c179578af", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fa96f07584959ae6429866b5b27b6c2c179578af", "committedDate": "2020-04-23T17:25:32Z", "message": "Implement PackageStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3baa86269b0ee9fcddcb13839c27738ace8ee2bf", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3baa86269b0ee9fcddcb13839c27738ace8ee2bf", "committedDate": "2020-04-23T17:32:46Z", "message": "Implement PackageStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "091066d97955d68b49c8cf7334958eda6fae157e", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/091066d97955d68b49c8cf7334958eda6fae157e", "committedDate": "2020-04-23T17:43:34Z", "message": "small typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69fadd6379276c19dc05aaa9a29b82e67916f1e0", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/69fadd6379276c19dc05aaa9a29b82e67916f1e0", "committedDate": "2020-04-23T20:14:50Z", "message": "rename to save"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e22e0b97873999a371707d13f88b8e523b3e8715", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e22e0b97873999a371707d13f88b8e523b3e8715", "committedDate": "2020-04-23T22:32:54Z", "message": "Refactor package manager with new store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c4fd9a0124f9cbae1792e6c3487bf571b843070", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9c4fd9a0124f9cbae1792e6c3487bf571b843070", "committedDate": "2020-04-23T22:34:32Z", "message": "Refactor package manager with new store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd388cd097a5fc2e6e0a93c519e01f2154a2040c", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dd388cd097a5fc2e6e0a93c519e01f2154a2040c", "committedDate": "2020-04-23T22:42:31Z", "message": "clean up TestHelper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b30b1f1422fe357ed1811c7804bbe860bfe400b7", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b30b1f1422fe357ed1811c7804bbe860bfe400b7", "committedDate": "2020-04-23T22:43:18Z", "message": "clean up test resources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "093a67f80fd5eaffb18fedbc6647083778391300", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/093a67f80fd5eaffb18fedbc6647083778391300", "committedDate": "2020-04-23T22:44:23Z", "message": "minor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTQ5NjA0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#pullrequestreview-399549604", "createdAt": "2020-04-23T23:40:02Z", "commit": {"oid": "093a67f80fd5eaffb18fedbc6647083778391300"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMzo0MDowMlrOGLAcUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMzo0MDowMlrOGLAcUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5NDc3MA==", "bodyText": "Here is some logic that PackageManger knows about the internal file structure of PackageStore.\nWould it make sense if the store handles downloading as well?\nOtherwise, if you want the package manager to be 100% unaware of how the store keeps its packages, you will need to define an interface between the manager and the store which I think is an overkill.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#discussion_r414194770", "createdAt": "2020-04-23T23:40:02Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -195,78 +158,24 @@ private void preparePackage(PackageIdentifier packageIdentifier)\n \n     private PackageRecipe findRecipeDownloadIfNotExisted(PackageIdentifier packageIdentifier)\n             throws PackageDownloadException, PackageLoadingException {\n-        Path recipePath = resolveRecipePath(packageIdentifier.getName(), packageIdentifier.getVersion());\n         Optional<PackageRecipe> packageOptional = Optional.empty();\n         try {\n-            packageOptional = findPackageRecipe(recipePath);\n+            packageOptional = packageStore.findPackageRecipe(packageIdentifier);\n         } catch (PackageLoadingException e) {\n-            logger.atWarn().log(String.format(\"Failed to load package from %s\", recipePath), e);\n+            logger.atWarn().log(String.format(\"Failed to load package recipe for %s\", packageIdentifier), e);\n         }\n         if (packageOptional.isPresent()) {\n             return packageOptional.get();\n         } else {\n             PackageRecipe packageRecipe = greengrassPackageServiceHelper.downloadPackageRecipe(packageIdentifier);\n-            savePackageRecipeToFile(packageRecipe, recipePath);\n+            packageStore.savePackageRecipe(packageRecipe);\n             return packageRecipe;\n         }\n     }\n \n-    /**\n-     * Get the package recipe with given package identifier.\n-     *\n-     * @param pkgId package identifier\n-     * @return retrieved package recipe.\n-     * @throws PackageLoadingException if fails to find the target package recipe or failed to load recipe\n-     */\n-    public PackageRecipe getPackageRecipe(PackageIdentifier pkgId) throws PackageLoadingException {\n-        Optional<PackageRecipe> optionalPackage =\n-                findPackageRecipe(resolveRecipePath(pkgId.getName(), pkgId.getVersion()));\n-\n-        if (!optionalPackage.isPresent()) {\n-            // TODO refine exception and logs\n-            throw new PackageLoadingException(\n-                    String.format(\"The recipe for package: '%s' doesn't exist in the local package store.\", pkgId));\n-        }\n-\n-        return optionalPackage.get();\n-    }\n-\n-    Optional<PackageRecipe> findPackageRecipe(Path recipePath) throws PackageLoadingException {\n-        logger.atDebug().setEventType(\"finding-package-recipe\").addKeyValue(\"packageRecipePath\", recipePath).log();\n-        if (!Files.exists(recipePath) || !Files.isRegularFile(recipePath)) {\n-            return Optional.empty();\n-        }\n-\n-        byte[] recipeContent;\n-        try {\n-            recipeContent = Files.readAllBytes(recipePath);\n-        } catch (IOException e) {\n-            throw new PackageLoadingException(String.format(\"Failed to load package recipe at %s\", recipePath), e);\n-        }\n-\n-        try {\n-            return Optional.of(OBJECT_MAPPER.readValue(recipeContent, PackageRecipe.class));\n-        } catch (IOException e) {\n-            throw new PackageLoadingException(String.format(\"Failed to parse package recipe at %s\", recipePath), e);\n-        }\n-    }\n-\n-    void savePackageRecipeToFile(PackageRecipe packageRecipe, Path saveToFile) throws PackageLoadingException {\n-        try {\n-            OBJECT_MAPPER.writeValue(saveToFile.toFile(), packageRecipe);\n-        } catch (IOException e) {\n-            throw new PackageLoadingException(String.format(\"Failed to save package recipe to %s\", saveToFile), e);\n-        }\n-    }\n-\n-    private Path resolveRecipePath(String packageName, Semver packageVersion) {\n-        return recipeDirectory.resolve(String.format(\"%s-%s.yaml\", packageName, packageVersion.getValue()));\n-    }\n-\n     void downloadArtifactsIfNecessary(PackageIdentifier packageIdentifier, List<URI> artifactList)\n             throws PackageLoadingException, PackageDownloadException {\n-        Path packageArtifactDirectory =\n-                resolveArtifactDirectoryPath(packageIdentifier.getName(), packageIdentifier.getVersion());\n+        Path packageArtifactDirectory = packageStore.resolveArtifactDirectoryPath(packageIdentifier);\n         if (!Files.exists(packageArtifactDirectory) || !Files.isDirectory(packageArtifactDirectory)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093a67f80fd5eaffb18fedbc6647083778391300"}, "originalPosition": 248}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTUyNjAz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#pullrequestreview-399552603", "createdAt": "2020-04-23T23:48:53Z", "commit": {"oid": "093a67f80fd5eaffb18fedbc6647083778391300"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMzo0ODo1M1rOGLApjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMzo0ODo1M1rOGLApjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5ODE1OA==", "bodyText": "Is making this package private (as opposed to private) intentional?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#discussion_r414198158", "createdAt": "2020-04-23T23:48:53Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -119,7 +83,7 @@ private void initializeSubDirectories(Path packageStoreDirectory) {\n      *     locally.\n      * @throws PackagingException if fails when trying to list available package metadata\n      */\n-    public Iterator<PackageMetadata> listAvailablePackageMetadata(String packageName, Requirement versionRequirement)\n+    Iterator<PackageMetadata> listAvailablePackageMetadata(String packageName, Requirement versionRequirement)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093a67f80fd5eaffb18fedbc6647083778391300"}, "originalPosition": 136}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjQwODA3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#pullrequestreview-399640807", "createdAt": "2020-04-24T05:01:45Z", "commit": {"oid": "093a67f80fd5eaffb18fedbc6647083778391300"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMTQ4OTU4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#pullrequestreview-400148958", "createdAt": "2020-04-24T17:43:51Z", "commit": {"oid": "093a67f80fd5eaffb18fedbc6647083778391300"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMTQ2ODQx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#pullrequestreview-400146841", "createdAt": "2020-04-24T17:40:44Z", "commit": {"oid": "093a67f80fd5eaffb18fedbc6647083778391300"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzo0MDo0NFrOGLiVEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzo0Mjo1MlrOGLiahg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc0OTk3MQ==", "bodyText": "What do we need NoArgsConstructor for?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#discussion_r414749971", "createdAt": "2020-04-24T17:40:44Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -12,103 +13,66 @@\n import com.aws.iot.evergreen.packagemanager.exceptions.PackageDownloadException;\n import com.aws.iot.evergreen.packagemanager.exceptions.PackageLoadingException;\n import com.aws.iot.evergreen.packagemanager.exceptions.PackagingException;\n-import com.aws.iot.evergreen.packagemanager.exceptions.UnexpectedPackagingException;\n import com.aws.iot.evergreen.packagemanager.models.PackageIdentifier;\n import com.aws.iot.evergreen.packagemanager.models.PackageMetadata;\n import com.aws.iot.evergreen.packagemanager.models.PackageRecipe;\n import com.aws.iot.evergreen.packagemanager.plugins.ArtifactDownloader;\n import com.aws.iot.evergreen.packagemanager.plugins.GreengrassRepositoryDownloader;\n import com.aws.iot.evergreen.util.Coerce;\n-import com.aws.iot.evergreen.util.SerializerFactory;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n import com.vdurmont.semver4j.Requirement;\n import com.vdurmont.semver4j.Semver;\n-import com.vdurmont.semver4j.SemverException;\n+import lombok.NoArgsConstructor;\n \n-import java.io.File;\n import java.io.IOException;\n import java.net.URI;\n import java.net.URISyntaxException;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Optional;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Future;\n import java.util.stream.Collectors;\n import javax.inject.Inject;\n-import javax.inject.Named;\n \n-public class PackageManager {\n+@NoArgsConstructor // for dependency injection", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093a67f80fd5eaffb18fedbc6647083778391300"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc1MTM2Ng==", "bodyText": "I'm little confused. We have listAvailablePackageMetadata in both packageStore and packageManager?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#discussion_r414751366", "createdAt": "2020-04-24T17:42:52Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -129,7 +93,7 @@ private void initializeSubDirectories(Path packageStoreDirectory) {\n \n         // 2. list available packages locally\n         List<PackageMetadata> packageMetadataList =\n-                listAvailablePackageMetadataFromLocal(packageName, versionRequirement);\n+                packageStore.listAvailablePackageMetadata(packageName, versionRequirement);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "093a67f80fd5eaffb18fedbc6647083778391300"}, "originalPosition": 145}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3651359133548188c0c56b92f986d3582e429ccd", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3651359133548188c0c56b92f986d3582e429ccd", "committedDate": "2020-04-28T17:27:19Z", "message": "Merge branch 'master' into package_manager_refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "636f7669b4d493ba78b3c6869bcf10ee5fd5e895", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/636f7669b4d493ba78b3c6869bcf10ee5fd5e895", "committedDate": "2020-04-28T17:47:48Z", "message": "Merge branch 'master' into package_manager_refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afa78e51d60ed4eddf818cda80302f0a6eea81e1", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/afa78e51d60ed4eddf818cda80302f0a6eea81e1", "committedDate": "2020-04-28T18:18:03Z", "message": "Merge branch 'master' into package_manager_refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3710394df716257f99414c344a2e35213bef56bc", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3710394df716257f99414c344a2e35213bef56bc", "committedDate": "2020-04-28T18:18:28Z", "message": "Fix unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "524d36f68ffafa3e43641a5c8061bf91e6fe2ff0", "author": {"user": {"login": "leaf94", "name": "Ethan Huang"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/524d36f68ffafa3e43641a5c8061bf91e6fe2ff0", "committedDate": "2020-04-28T18:37:19Z", "message": "Fix integ and e2e tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMTQ4OTc2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#pullrequestreview-402148976", "createdAt": "2020-04-28T19:33:37Z", "commit": {"oid": "524d36f68ffafa3e43641a5c8061bf91e6fe2ff0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMTQ5NzEx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/212#pullrequestreview-402149711", "createdAt": "2020-04-28T19:34:40Z", "commit": {"oid": "524d36f68ffafa3e43641a5c8061bf91e6fe2ff0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2158, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}