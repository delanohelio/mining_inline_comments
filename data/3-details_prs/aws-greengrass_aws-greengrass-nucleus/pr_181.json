{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNDE4NDgz", "number": 181, "title": "Initial refactor of Kernel.java to split it into several classes", "bodyText": "Issue #, if available:\nDescription of changes:\nThis change is the first of several PRs to refactor Kernel and increase testability and test coverage.\nThis first change simply breaks up the existing ~700 line kernel into 4 different classes.\n\nKernelCommandLine -- Handles the command line parsing\nKernelLifecycle -- Handles starting and stopping of the kernel and all services\nDeploymentConfigMerger -- Handles the config merging methods\nKernel -- Still the main class which handles the Configuration and Context. Removed inheritance from Configuration and replaced with composition.\n\nMany catch (Throwable) have been removed and replaced with more specific catch blocks. Removed several unused command line args: -log, -main, -print. Other than these changes, there are no logical changes in this PR, the existing code was just moved to different classes.\nWhy is this change necessary:\nHow was this change tested:\nAll existing tests pass.\nAny additional information or context required to review the change:\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-04-14T21:16:05Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181", "merged": true, "mergeCommit": {"oid": "24f781003a9d52745657514c36f712a877149da6"}, "closed": true, "closedAt": "2020-04-15T17:57:15Z", "author": {"login": "MikeDombo"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXqWaZABqjMyMzI5NzE1MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX73WoAFqTM5NDAwMTkzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc29f85866f193b8ee3ebed5d9c13952a37b7542", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/bc29f85866f193b8ee3ebed5d9c13952a37b7542", "committedDate": "2020-04-14T21:13:47Z", "message": "Initial refactor of Kernel.java"}, "afterCommit": {"oid": "fbb87a2335c21bf9a5dd71525c494281b44e4151", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fbb87a2335c21bf9a5dd71525c494281b44e4151", "committedDate": "2020-04-14T21:26:43Z", "message": "Initial refactor of Kernel.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbb87a2335c21bf9a5dd71525c494281b44e4151", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fbb87a2335c21bf9a5dd71525c494281b44e4151", "committedDate": "2020-04-14T21:26:43Z", "message": "Initial refactor of Kernel.java"}, "afterCommit": {"oid": "8f6586d05dca90e832d5b78ea0534ca20c9b540a", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8f6586d05dca90e832d5b78ea0534ca20c9b540a", "committedDate": "2020-04-14T21:44:58Z", "message": "Initial refactor of Kernel.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f6586d05dca90e832d5b78ea0534ca20c9b540a", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8f6586d05dca90e832d5b78ea0534ca20c9b540a", "committedDate": "2020-04-14T21:44:58Z", "message": "Initial refactor of Kernel.java"}, "afterCommit": {"oid": "5976f0bd0956d5faa1f7ac9e0c336414ddcf645f", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5976f0bd0956d5faa1f7ac9e0c336414ddcf645f", "committedDate": "2020-04-14T21:45:28Z", "message": "Initial refactor of Kernel.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzEzNzI5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#pullrequestreview-393313729", "createdAt": "2020-04-14T21:36:17Z", "commit": {"oid": "fbb87a2335c21bf9a5dd71525c494281b44e4151"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTo0ODoyMFrOGFiMig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzowOTozNlrOGFkHNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1NjMzMA==", "bodyText": "Nit- this deTilde method here has nothing to do with command line arg passing, it's finding more use then we could move it to the Utils class?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#discussion_r408456330", "createdAt": "2020-04-14T21:48:20Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeviceConfigurationHelper.java", "diffHunk": "@@ -30,16 +31,20 @@\n     @Inject\n     private Kernel kernel;\n \n+    @Inject\n+    private KernelCommandLine kernelCommandLine;\n+\n     /**\n      * Retrieves the device configuration information from kernel config to communicate with Iot Cloud.\n      * @return {@link DeviceConfiguration}\n      * @throws DeviceConfigurationException when configuration is not available for the device.\n      */\n     public DeviceConfiguration getDeviceConfiguration() throws DeviceConfigurationException {\n         String thingName = getStringParameterFromConfig(DEVICE_PARAM_THING_NAME);\n-        String certificateFilePath = kernel.deTilde(getStringParameterFromConfig(DEVICE_PARAM_CERTIFICATE_FILE_PATH));\n-        String privateKeyPath = kernel.deTilde(getStringParameterFromConfig(DEVICE_PARAM_PRIVATE_KEY_PATH));\n-        String rootCAPath = kernel.deTilde(getStringParameterFromConfig(DEVICE_PARAM_ROOT_CA_PATH));\n+        String certificateFilePath = kernelCommandLine.deTilde(\n+                getStringParameterFromConfig(DEVICE_PARAM_CERTIFICATE_FILE_PATH));\n+        String privateKeyPath = kernelCommandLine.deTilde(getStringParameterFromConfig(DEVICE_PARAM_PRIVATE_KEY_PATH));\n+        String rootCAPath = kernelCommandLine.deTilde(getStringParameterFromConfig(DEVICE_PARAM_ROOT_CA_PATH));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5976f0bd0956d5faa1f7ac9e0c336414ddcf645f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4NjM0OA==", "bodyText": "Does it need to return this? it is essentially taking a kernel instance in the constructor and modifying it", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#discussion_r408486348", "createdAt": "2020-04-14T23:05:23Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelLifecycle.java", "diffHunk": "@@ -0,0 +1,222 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.ConfigurationWriter;\n+import com.aws.iot.evergreen.dependency.EZPlugins;\n+import com.aws.iot.evergreen.dependency.ImplementsService;\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.exceptions.InputValidationException;\n+import com.aws.iot.evergreen.kernel.exceptions.ServiceLoadException;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import com.aws.iot.evergreen.util.Exec;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Queue;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static com.aws.iot.evergreen.util.Utils.close;\n+import static com.aws.iot.evergreen.util.Utils.deepToString;\n+\n+public class KernelLifecycle {\n+    private static final Logger logger = LogManager.getLogger(KernelLifecycle.class);\n+\n+    private final Kernel kernel;\n+    private final KernelCommandLine kernelCommandLine;\n+    private final Map<String, Class<?>> serviceImplementors = new HashMap<>();\n+    private ConfigurationWriter tlog;\n+    private EvergreenService mainService;\n+    private final AtomicBoolean isShutdownInitiated = new AtomicBoolean(false);\n+\n+    public KernelLifecycle(Kernel kernel, KernelCommandLine kernelCommandLine) {\n+        this.kernel = kernel;\n+        this.kernelCommandLine = kernelCommandLine;\n+    }\n+\n+    /**\n+     * Startup the Kernel and all services.\n+     */\n+    public Kernel launch() {\n+        logger.atInfo().log(\"root path = {}. config path = {}\", kernel.rootPath,\n+                kernel.configPath);\n+        kernelCommandLine.installCliTool(getClass().getClassLoader().getResource(\"evergreen-launch\"));\n+        Exec.setDefaultEnv(\"EVERGREEN_HOME\", kernel.rootPath.toString());\n+\n+        try {\n+            mainService = kernel.locate(kernelCommandLine.mainServiceName);\n+        } catch (ServiceLoadException sle) {\n+            RuntimeException rte =\n+                    new RuntimeException(\"Cannot load main service\", sle);\n+            logger.atError(\"system-boot-error\", rte).log();\n+            throw rte;\n+        }\n+        Path transactionLogPath = kernel.configPath.resolve(\"config.tlog\");\n+        Path configurationFile = kernel.configPath.resolve(\"config.yaml\");\n+        try {\n+            if (kernelCommandLine.haveRead) {\n+                // new config file came in from the outside\n+                kernel.writeEffectiveConfig(configurationFile);\n+                Files.deleteIfExists(transactionLogPath);\n+            } else {\n+                if (Files.exists(configurationFile)) {\n+                    kernel.config.read(configurationFile);\n+                }\n+                if (Files.exists(transactionLogPath)) {\n+                    kernel.config.read(transactionLogPath);\n+                }\n+            }\n+            tlog = ConfigurationWriter.logTransactionsTo(kernel.config, transactionLogPath);\n+            tlog.flushImmediately(true);\n+        } catch (IOException ioe) {\n+            logger.atError().setEventType(\"system-config-error\").setCause(ioe).log();\n+            throw new RuntimeException(ioe);\n+        }\n+\n+        if (!kernelCommandLine.forReal) {\n+            kernel.context.put(ShellRunner.class, kernel.context.get(ShellRunner.Dryrun.class));\n+        }\n+\n+        Queue<String> autostart = findBuiltInServicesAndPlugins();\n+        autostart.forEach(s -> {\n+            try {\n+                mainService.addOrUpdateDependency(kernel.locate(s), State.RUNNING, true);\n+            } catch (ServiceLoadException se) {\n+                logger.atError().setCause(se).log(\"Unable to load service {}\", s);\n+            } catch (InputValidationException e) {\n+                logger.atError().setCause(e).log(\"Unable to add auto-starting dependency {} to main\", s);\n+            }\n+        });\n+        kernel.writeEffectiveConfig();\n+        logger.atInfo().setEventType(\"system-start\").addKeyValue(\"main\", kernel.getMain()).log();\n+        startupAllServices();\n+\n+        return kernel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5976f0bd0956d5faa1f7ac9e0c336414ddcf645f"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4NzczMg==", "bodyText": "Nit- I would name it something that is more specific and suits better as a class name, say DeploymentConfigMerger, and if this is only intended to be used for deployments, should we move it to the deployment package?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#discussion_r408487732", "createdAt": "2020-04-14T23:09:36Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/DeploymentMerge.java", "diffHunk": "@@ -0,0 +1,176 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.exceptions.ServiceUpdateException;\n+import com.aws.iot.evergreen.kernel.exceptions.ServiceLoadException;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import lombok.AllArgsConstructor;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Future;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+\n+import static com.aws.iot.evergreen.kernel.EvergreenService.SERVICES_NAMESPACE_TOPIC;\n+\n+@AllArgsConstructor\n+public class DeploymentMerge {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5976f0bd0956d5faa1f7ac9e0c336414ddcf645f"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a811cb375fca693b0eaef8ad2c6e2c1d33edcf30", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a811cb375fca693b0eaef8ad2c6e2c1d33edcf30", "committedDate": "2020-04-15T00:31:09Z", "message": "Initial refactor of Kernel.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5976f0bd0956d5faa1f7ac9e0c336414ddcf645f", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5976f0bd0956d5faa1f7ac9e0c336414ddcf645f", "committedDate": "2020-04-14T21:45:28Z", "message": "Initial refactor of Kernel.java"}, "afterCommit": {"oid": "29300fad0c3c074e2d956a1927148e31b98a5b56", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/29300fad0c3c074e2d956a1927148e31b98a5b56", "committedDate": "2020-04-15T00:31:45Z", "message": "Address PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29300fad0c3c074e2d956a1927148e31b98a5b56", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/29300fad0c3c074e2d956a1927148e31b98a5b56", "committedDate": "2020-04-15T00:31:45Z", "message": "Address PR comments"}, "afterCommit": {"oid": "5068d1ae3e2fb5ab59770a88b0d54a786c44424b", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5068d1ae3e2fb5ab59770a88b0d54a786c44424b", "committedDate": "2020-04-15T00:33:42Z", "message": "Address PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5068d1ae3e2fb5ab59770a88b0d54a786c44424b", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5068d1ae3e2fb5ab59770a88b0d54a786c44424b", "committedDate": "2020-04-15T00:33:42Z", "message": "Address PR comments"}, "afterCommit": {"oid": "d84fd7c3c9604938d9545b0b7355caf62d455828", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d84fd7c3c9604938d9545b0b7355caf62d455828", "committedDate": "2020-04-15T00:36:14Z", "message": "Address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNDExNzU3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#pullrequestreview-393411757", "createdAt": "2020-04-15T02:10:38Z", "commit": {"oid": "d84fd7c3c9604938d9545b0b7355caf62d455828"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d84fd7c3c9604938d9545b0b7355caf62d455828", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d84fd7c3c9604938d9545b0b7355caf62d455828", "committedDate": "2020-04-15T00:36:14Z", "message": "Address PR comments"}, "afterCommit": {"oid": "c466a80670fbda88948e0f2031a74634a30ae7f5", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c466a80670fbda88948e0f2031a74634a30ae7f5", "committedDate": "2020-04-15T02:42:07Z", "message": "Address PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9497fcc3ebad603e2eb970411e8cf5ca90426749", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9497fcc3ebad603e2eb970411e8cf5ca90426749", "committedDate": "2020-04-15T02:46:11Z", "message": "Address PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c466a80670fbda88948e0f2031a74634a30ae7f5", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c466a80670fbda88948e0f2031a74634a30ae7f5", "committedDate": "2020-04-15T02:42:07Z", "message": "Address PR comments"}, "afterCommit": {"oid": "9497fcc3ebad603e2eb970411e8cf5ca90426749", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9497fcc3ebad603e2eb970411e8cf5ca90426749", "committedDate": "2020-04-15T02:46:11Z", "message": "Address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzOTcwMTQy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#pullrequestreview-393970142", "createdAt": "2020-04-15T17:07:55Z", "commit": {"oid": "9497fcc3ebad603e2eb970411e8cf5ca90426749"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzOTk3NDAz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#pullrequestreview-393997403", "createdAt": "2020-04-15T17:45:05Z", "commit": {"oid": "9497fcc3ebad603e2eb970411e8cf5ca90426749"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNzo0NTowNVrOGGEu1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNzo0NzoyNVrOGGE0Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyMjE2Ng==", "bodyText": "This seems weird, we call kernel.parseArgs from KernelCommandLine and then kernel.parseArgs() calls parseArgs() method in KernelCommandLine class", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#discussion_r409022166", "createdAt": "2020-04-15T17:45:05Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -0,0 +1,195 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.kernel;\n+\n+import com.aws.iot.evergreen.config.Configuration;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import com.aws.iot.evergreen.util.Coerce;\n+import com.aws.iot.evergreen.util.Exec;\n+import com.aws.iot.evergreen.util.Utils;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.nio.file.attribute.PosixFilePermissions;\n+import java.util.Objects;\n+\n+import static com.aws.iot.evergreen.util.Utils.HOME_PATH;\n+\n+public class KernelCommandLine {\n+    private static final Logger logger = LogManager.getLogger(KernelCommandLine.class);\n+    private static final String done = \" missing \"; // unique marker\n+    private final Kernel kernel;\n+    boolean forReal = true;\n+    boolean haveRead = false;\n+    String mainServiceName = \"main\";\n+    private String[] args;\n+    private String arg;\n+    private int argpos = 0;\n+\n+    private static final String configPathName = \"~root/config\";\n+    private static final String clitoolPathName = \"~root/bin\";\n+    private static final String workPathName = \"~root/work\";\n+    private static final String packageStorePathName = \"~root/packages\";\n+\n+    public static void main(String[] args) {\n+        new Kernel().parseArgs(args).launch();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9497fcc3ebad603e2eb970411e8cf5ca90426749"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyMjg4NA==", "bodyText": "move deTilde to a util?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#discussion_r409022884", "createdAt": "2020-04-15T17:46:20Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeviceConfigurationHelper.java", "diffHunk": "@@ -30,16 +31,20 @@\n     @Inject\n     private Kernel kernel;\n \n+    @Inject\n+    private KernelCommandLine kernelCommandLine;\n+\n     /**\n      * Retrieves the device configuration information from kernel config to communicate with Iot Cloud.\n      * @return {@link DeviceConfiguration}\n      * @throws DeviceConfigurationException when configuration is not available for the device.\n      */\n     public DeviceConfiguration getDeviceConfiguration() throws DeviceConfigurationException {\n         String thingName = getStringParameterFromConfig(DEVICE_PARAM_THING_NAME);\n-        String certificateFilePath = kernel.deTilde(getStringParameterFromConfig(DEVICE_PARAM_CERTIFICATE_FILE_PATH));\n-        String privateKeyPath = kernel.deTilde(getStringParameterFromConfig(DEVICE_PARAM_PRIVATE_KEY_PATH));\n-        String rootCAPath = kernel.deTilde(getStringParameterFromConfig(DEVICE_PARAM_ROOT_CA_PATH));\n+        String certificateFilePath = kernelCommandLine.deTilde(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9497fcc3ebad603e2eb970411e8cf5ca90426749"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyMzUzNA==", "bodyText": "Moving all this to DeploymentConfigMerger makes a lot of sense, nice!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#discussion_r409023534", "createdAt": "2020-04-15T17:47:25Z", "author": {"login": "fahadmohammed01"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java", "diffHunk": "@@ -0,0 +1,188 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.deployment;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.deployment.exceptions.ServiceUpdateException;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.GenericExternalService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import com.aws.iot.evergreen.kernel.UpdateSystemSafelyService;\n+import com.aws.iot.evergreen.kernel.exceptions.ServiceLoadException;\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import lombok.AllArgsConstructor;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Future;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+\n+import static com.aws.iot.evergreen.kernel.EvergreenService.SERVICES_NAMESPACE_TOPIC;\n+\n+@AllArgsConstructor\n+public class DeploymentConfigMerger {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9497fcc3ebad603e2eb970411e8cf5ca90426749"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDAxOTM0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/181#pullrequestreview-394001934", "createdAt": "2020-04-15T17:51:12Z", "commit": {"oid": "9497fcc3ebad603e2eb970411e8cf5ca90426749"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2115, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}