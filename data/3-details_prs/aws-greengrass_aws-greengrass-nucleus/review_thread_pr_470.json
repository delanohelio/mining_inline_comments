{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMTMzNzcx", "number": 470, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMjoxODowN1rOEm2TBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjoyNjoyOFrOEnH7Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MTcwOTQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMjoxODowN1rOHXHV9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMjozNTowN1rOHXHmWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk5OTYwNw==", "bodyText": "Nit: make awsRegion of type Region and have getIotClient(Region, AwsCredentialsProvider) call this", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/470#discussion_r493999607", "createdAt": "2020-09-24T02:18:07Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "diffHunk": "@@ -73,6 +73,26 @@ public static IotClient getIotClient(Region awsRegion, AwsCredentialsProvider cr\n                 .overrideConfiguration(ClientOverrideConfiguration.builder().retryPolicy(retryPolicy).build()).build();\n     }\n \n+    /**\n+     * Build IotClient for desired region, stage and credentials.\n+     *\n+     * @param awsRegion           aws region\n+     * @param stage               {@link EnvironmentStage}\n+     * @param credentialsProvider credentials provider\n+     * @return\n+     */\n+    public static IotClient getIotClient(String awsRegion, EnvironmentStage stage,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f05f519ad65d31544d02be28d57c2f387e6f0a10"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzgwMw==", "bodyText": "If I make getIotClient(Region, AwsCredentialsProvider) call the above method, I'll have to add \"throws URISyntaxException\" to it, when actually it's not required because the if block of above method will never be executed when called from getIotClient(Region, AwsCredentialsProvider). And its callers will have to unnecessarily handle the exception.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/470#discussion_r494003803", "createdAt": "2020-09-24T02:35:07Z", "author": {"login": "popanmol"}, "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "diffHunk": "@@ -73,6 +73,26 @@ public static IotClient getIotClient(Region awsRegion, AwsCredentialsProvider cr\n                 .overrideConfiguration(ClientOverrideConfiguration.builder().retryPolicy(retryPolicy).build()).build();\n     }\n \n+    /**\n+     * Build IotClient for desired region, stage and credentials.\n+     *\n+     * @param awsRegion           aws region\n+     * @param stage               {@link EnvironmentStage}\n+     * @param credentialsProvider credentials provider\n+     * @return\n+     */\n+    public static IotClient getIotClient(String awsRegion, EnvironmentStage stage,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk5OTYwNw=="}, "originalCommit": {"oid": "f05f519ad65d31544d02be28d57c2f387e6f0a10"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MTgyNjk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMzozMTowN1rOHXIatw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMzozMTowN1rOHXIatw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAxNzIwNw==", "bodyText": "the other implementations should call this one so we don't need to duplicate logic.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/470#discussion_r494017207", "createdAt": "2020-09-24T03:31:07Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "diffHunk": "@@ -73,6 +73,27 @@ public static IotClient getIotClient(Region awsRegion, AwsCredentialsProvider cr\n                 .overrideConfiguration(ClientOverrideConfiguration.builder().retryPolicy(retryPolicy).build()).build();\n     }\n \n+    /**\n+     * Build IotClient for desired region, stage and credentials.\n+     *\n+     * @param awsRegion           aws region\n+     * @param stage               {@link EnvironmentStage}\n+     * @param credentialsProvider credentials provider\n+     * @return IotClient instance\n+     * @throws URISyntaxException when Iot endpoint is malformed\n+     */\n+    public static IotClient getIotClient(Region awsRegion, EnvironmentStage stage,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0791551f5fd217956efd00cda30f84c896100302"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDU4NzU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjoyNDowNlrOHXi2Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjoyNDowNlrOHXi2Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ1MDIwMg==", "bodyText": "Returning a default IotClient is probably not the correct thing to do in this case. This SHOULD never happen, but if something changed and it did, and the client still functioned (e.g. using credentials from a customer profile), then that could be very bad.\nWe definitely need explicit failure here. Either revert and duplicate code or bubble up the exception.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/470#discussion_r494450202", "createdAt": "2020-09-24T16:24:06Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "diffHunk": "@@ -69,8 +57,26 @@ public static IotClient getIotClient(String awsRegion, EnvironmentStage stage) t\n      * @return IotClient instance\n      */\n     public static IotClient getIotClient(Region awsRegion, AwsCredentialsProvider credentialsProvider) {\n-        return IotClient.builder().region(awsRegion).credentialsProvider(credentialsProvider)\n-                .overrideConfiguration(ClientOverrideConfiguration.builder().retryPolicy(retryPolicy).build()).build();\n+        try {\n+            return getIotClient(awsRegion, EnvironmentStage.PROD, credentialsProvider, Collections.emptySet());\n+        } catch (URISyntaxException e) {\n+            //this will never execute\n+            return IotClient.builder().build();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d336ed1cde35258f64d6afaefbb2f2801d749e7c"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDU5Mjg0OnYy", "diffSide": "LEFT", "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjoyNToyMVrOHXi5RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjoyNToyMVrOHXi5RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ1MTAxMg==", "bodyText": "Nit: I realize this is only used in one place, but it's probably useful here still with a comment indicating this is the default retry policy used by all methods", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/470#discussion_r494451012", "createdAt": "2020-09-24T16:25:21Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "diffHunk": "@@ -31,13 +32,6 @@\n             Arrays.asList(ThrottlingException.class, InternalException.class, InternalFailureException.class,\n                     LimitExceededException.class));\n \n-    private static final RetryCondition retryCondition = OrRetryCondition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d336ed1cde35258f64d6afaefbb2f2801d749e7c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDU5NzI3OnYy", "diffSide": "LEFT", "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjoyNjoyOFrOHXi8Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNzozMjowNlrOHXlZHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ1MTc0Ng==", "bodyText": "Interestingly enough, this didn't previously use the default policy :) 5 retries instead of 10.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/470#discussion_r494451746", "createdAt": "2020-09-24T16:26:28Z", "author": {"login": "jbutler"}, "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "diffHunk": "@@ -85,19 +91,42 @@ public static IotClient getIotClient(Region awsRegion, AwsCredentialsProvider cr\n     public static IotClient getIotClient(String awsRegion, EnvironmentStage stage,\n                                          Set<Class<? extends Exception>> additionalRetryableExceptions)\n             throws URISyntaxException {\n+        return getIotClient(Region.of(awsRegion), stage, null, additionalRetryableExceptions);\n+    }\n+\n+    /**\n+     * Build IotClient for desired region, stage and credentials with custom retry logic.\n+     * @param awsRegion                     aws region\n+     * @param stage                         {@link EnvironmentStage}\n+     * @param credentialsProvider           credentials provider\n+     * @param additionalRetryableExceptions additional exceptions to retry on\n+     * @return IotClient instance\n+     * @throws URISyntaxException when Iot endpoint is malformed\n+     */\n+    public static IotClient getIotClient(Region awsRegion, EnvironmentStage stage,\n+                                         AwsCredentialsProvider credentialsProvider,\n+                                         Set<Class<? extends Exception>> additionalRetryableExceptions)\n+            throws URISyntaxException {\n         Set<Class<? extends Exception>> allExceptionsToRetryOn = new HashSet<>();\n         allExceptionsToRetryOn.addAll(retryableIoTExceptions);\n         allExceptionsToRetryOn.addAll(additionalRetryableExceptions);\n-        IotClientBuilder iotClientBuilder = IotClient.builder().region(Region.of(awsRegion)).overrideConfiguration(\n-                ClientOverrideConfiguration.builder().retryPolicy(\n-                        RetryPolicy.builder().numRetries(5).backoffStrategy(BackoffStrategy.defaultThrottlingStrategy())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d336ed1cde35258f64d6afaefbb2f2801d749e7c"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MTkzMw==", "bodyText": "changed the number of retries from 5 to 10 because if we wanna have all methods call one implementation, then we would need to have one common value of retries", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/470#discussion_r494491933", "createdAt": "2020-09-24T17:32:06Z", "author": {"login": "popanmol"}, "path": "src/main/java/com/aws/greengrass/util/IotSdkClientFactory.java", "diffHunk": "@@ -85,19 +91,42 @@ public static IotClient getIotClient(Region awsRegion, AwsCredentialsProvider cr\n     public static IotClient getIotClient(String awsRegion, EnvironmentStage stage,\n                                          Set<Class<? extends Exception>> additionalRetryableExceptions)\n             throws URISyntaxException {\n+        return getIotClient(Region.of(awsRegion), stage, null, additionalRetryableExceptions);\n+    }\n+\n+    /**\n+     * Build IotClient for desired region, stage and credentials with custom retry logic.\n+     * @param awsRegion                     aws region\n+     * @param stage                         {@link EnvironmentStage}\n+     * @param credentialsProvider           credentials provider\n+     * @param additionalRetryableExceptions additional exceptions to retry on\n+     * @return IotClient instance\n+     * @throws URISyntaxException when Iot endpoint is malformed\n+     */\n+    public static IotClient getIotClient(Region awsRegion, EnvironmentStage stage,\n+                                         AwsCredentialsProvider credentialsProvider,\n+                                         Set<Class<? extends Exception>> additionalRetryableExceptions)\n+            throws URISyntaxException {\n         Set<Class<? extends Exception>> allExceptionsToRetryOn = new HashSet<>();\n         allExceptionsToRetryOn.addAll(retryableIoTExceptions);\n         allExceptionsToRetryOn.addAll(additionalRetryableExceptions);\n-        IotClientBuilder iotClientBuilder = IotClient.builder().region(Region.of(awsRegion)).overrideConfiguration(\n-                ClientOverrideConfiguration.builder().retryPolicy(\n-                        RetryPolicy.builder().numRetries(5).backoffStrategy(BackoffStrategy.defaultThrottlingStrategy())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ1MTc0Ng=="}, "originalCommit": {"oid": "d336ed1cde35258f64d6afaefbb2f2801d749e7c"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 556, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}