{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDU4NzI5", "number": 67, "title": "Changes to update application layer protocol", "bodyText": "Description of changes:\nUpdated services to use new application protocol\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-02-21T01:24:30Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67", "merged": true, "mergeCommit": {"oid": "20ca8d2a11289171a0734005e4fbcca5849b6f90"}, "closed": true, "closedAt": "2020-02-25T19:59:57Z", "author": {"login": "fahadmohammed01"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGVWiVgH2gAyMzc4MDU4NzI5OjJjMTBmOTJkMTlmZDUzOWYwMmJiYjBjNGI3NjQ5M2ZjN2Y1MmNjMWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH3vE2gH2gAyMzc4MDU4NzI5OjM2YWYzNjBmYWYwMDlhMjhmYjBjYjc4NTVjMDE0ZDg4ZWYwYTlkZDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2c10f92d19fd539f02bbb0c4b76493fc7f52cc1b", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2c10f92d19fd539f02bbb0c4b76493fc7f52cc1b", "committedDate": "2020-02-21T01:22:15Z", "message": "Changes to update application layer protocol"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzQ5MjYz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#pullrequestreview-362349263", "createdAt": "2020-02-21T01:28:22Z", "commit": {"oid": "2c10f92d19fd539f02bbb0c4b76493fc7f52cc1b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMToyODoyM1rOFso6Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMTozMTowM1rOFso9Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1MTk0Ng==", "bodyText": "Like the other apps, this should be read from the sdk as a public static", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#discussion_r382351946", "createdAt": "2020-02-21T01:28:23Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/AuthHandler.java", "diffHunk": "@@ -30,6 +28,7 @@\n public class AuthHandler implements InjectionActions {\n     public static final String AUTH_TOKEN_LOOKUP_KEY = \"_AUTH_TOKENS\";\n     public static final String SERVICE_UNIQUE_ID_KEY = \"_UID\";\n+    public static final int AUTH_API_VERSION = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c10f92d19fd539f02bbb0c4b76493fc7f52cc1b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1MjQyNw==", "bodyText": "Read this from the sdk.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#discussion_r382352427", "createdAt": "2020-02-21T01:30:15Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/modules/LifecycleIPCService.java", "diffHunk": "@@ -33,6 +31,7 @@\n //TODO: see if this needs to be a GGService\n @ImplementsService(name = \"lifecycleipc\", autostart = true)\n public class LifecycleIPCService extends EvergreenService {\n+    public static final int LIFECYCLE_SERVICE_API_VERSION = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c10f92d19fd539f02bbb0c4b76493fc7f52cc1b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1MjY2Mg==", "bodyText": "No * imports.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#discussion_r382352662", "createdAt": "2020-02-21T01:31:03Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/ipc/AuthHandlerTest.java", "diffHunk": "@@ -27,13 +28,10 @@\n import java.net.SocketAddress;\n import java.nio.charset.StandardCharsets;\n \n-import static com.aws.iot.evergreen.ipc.AuthHandler.AUTH_TOKEN_LOOKUP_KEY;\n-import static com.aws.iot.evergreen.ipc.AuthHandler.SERVICE_UNIQUE_ID_KEY;\n+import static com.aws.iot.evergreen.ipc.AuthHandler.*;\n import static org.hamcrest.CoreMatchers.containsString;\n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c10f92d19fd539f02bbb0c4b76493fc7f52cc1b"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ea935a2640992466f47776e08ef5506612026f3", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4ea935a2640992466f47776e08ef5506612026f3", "committedDate": "2020-02-21T01:38:14Z", "message": "removed * imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "743db013d0e187deecc581744327c53090b91f7e", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/743db013d0e187deecc581744327c53090b91f7e", "committedDate": "2020-02-21T19:35:01Z", "message": "addressed PR  comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4299437600afc92ce6a3258e9fa8717c12e8f088", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4299437600afc92ce6a3258e9fa8717c12e8f088", "committedDate": "2020-02-21T19:45:56Z", "message": "fixed check style issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODc5NDc0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#pullrequestreview-362879474", "createdAt": "2020-02-21T19:55:15Z", "commit": {"oid": "4299437600afc92ce6a3258e9fa8717c12e8f088"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo1NToxNVrOFtC10Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo1NToxNVrOFtC10Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3Njc4NQ==", "bodyText": "Why is this todo? It should be done in this pull.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#discussion_r382776785", "createdAt": "2020-02-21T19:55:15Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/modules/LifecycleIPCService.java", "diffHunk": "@@ -68,12 +68,9 @@ public void postInject() {\n     public Future<Message> handleMessage(Message message, ConnectionContext context) {\n         CompletableFuture<Message> fut = new CompletableFuture<>();\n \n+        ApplicationMessage applicationMessage = new ApplicationMessage(message.getPayload());\n         try {\n-            ApplicationMessage applicationMessage = new ApplicationMessage(message.getPayload());\n-            if (applicationMessage.getVersion() != LIFECYCLE_SERVICE_API_VERSION) {\n-                throw new IllegalArgumentException(\"Unknown API Version\");\n-            }\n-\n+            //TODO: add version compatibility check", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4299437600afc92ce6a3258e9fa8717c12e8f088"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyOTM2MTgy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#pullrequestreview-362936182", "createdAt": "2020-02-21T21:45:39Z", "commit": {"oid": "4299437600afc92ce6a3258e9fa8717c12e8f088"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMTo0NTozOVrOFtFgfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMTo0NTozOVrOFtFgfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgyMDQ3OA==", "bodyText": "I'm wondering that if we are completing the future here, why return a Future of this method instead of Message directly?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#discussion_r382820478", "createdAt": "2020-02-21T21:45:39Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/modules/LifecycleIPCService.java", "diffHunk": "@@ -62,55 +61,56 @@ public void postInject() {\n     /**\n      * Handle all requests from the client.\n      *\n-     * @param request the incoming request\n+     * @param message the incoming request\n      * @param context caller request context\n      * @return future containing our response\n      */\n-    public Future<Message> handleMessage(Message request, ConnectionContext context) {\n+    public Future<Message> handleMessage(Message message, ConnectionContext context) {\n         CompletableFuture<Message> fut = new CompletableFuture<>();\n \n+        ApplicationMessage applicationMessage = new ApplicationMessage(message.getPayload());\n         try {\n-            GeneralRequest<Object, LifecycleRequestTypes> obj =\n-                    IPCUtil.decode(request, new TypeReference<GeneralRequest<Object, LifecycleRequestTypes>>() {\n-                    });\n-\n-            GeneralResponse<?, LifecycleResponseStatus> genResp = new GeneralResponse<>();\n-            switch (obj.getType()) {\n-                case listen:\n+            //TODO: add version compatibility check\n+            LifecycleServiceOpCodes lifecycleServiceOpCodes =\n+                    LifecycleServiceOpCodes.values()[applicationMessage.getOpCode()];\n+            LifecycleGenericResponse lifecycleGenericResponse = new LifecycleGenericResponse();\n+            switch (lifecycleServiceOpCodes) {\n+                case REGISTER_LISTENER:\n                     LifecycleListenRequest listenRequest =\n-                            mapper.convertValue(obj.getRequest(), LifecycleListenRequest.class);\n-                    genResp = agent.listenToStateChanges(listenRequest, context);\n+                            mapper.readValue(applicationMessage.getPayload(), LifecycleListenRequest.class);\n+                    lifecycleGenericResponse = agent.listenToStateChanges(listenRequest, context);\n                     break;\n-                case setState:\n+                case REPORT_STATE:\n                     StateChangeRequest stateChangeRequest =\n-                            mapper.convertValue(obj.getRequest(), StateChangeRequest.class);\n-                    genResp = agent.reportState(stateChangeRequest, context);\n+                            mapper.readValue(applicationMessage.getPayload(), StateChangeRequest.class);\n+                    lifecycleGenericResponse = agent.reportState(stateChangeRequest, context);\n                     break;\n                 default:\n-                    genResp.setError(LifecycleResponseStatus.InvalidRequest);\n-                    genResp.setErrorMessage(\"Unknown request type \" + obj.getType());\n+                    lifecycleGenericResponse.setStatus(LifecycleResponseStatus.InvalidRequest);\n+                    lifecycleGenericResponse.setErrorMessage(\"Unknown request type \"\n+                            + lifecycleServiceOpCodes.toString());\n                     break;\n             }\n-            fut.complete(new Message(IPCUtil.encode(genResp)));\n \n+            ApplicationMessage responseMessage = ApplicationMessage.builder().version(applicationMessage.getVersion())\n+                    .payload(mapper.writeValueAsBytes(lifecycleGenericResponse)).build();\n+            fut.complete(new Message(responseMessage.toByteArray()));\n         } catch (Throwable e) {\n             log.log(Level.Error, \"Failed to respond to handleMessage\", e);\n-\n-            GeneralResponse<Void, LifecycleResponseStatus> errorResponse =\n-                    GeneralResponse.<Void, LifecycleResponseStatus>builder()\n-                            .error(LifecycleResponseStatus.InternalError).errorMessage(e.getMessage()).build();\n-\n             try {\n-                fut.complete(new Message(IPCUtil.encode(errorResponse)));\n+                LifecycleGenericResponse response = LifecycleGenericResponse.builder()\n+                        .status(LifecycleResponseStatus.InternalError).errorMessage(e.getMessage()).build();\n+                ApplicationMessage responseMessage = ApplicationMessage.builder()\n+                        .version(applicationMessage.getVersion())\n+                        .payload(mapper.writeValueAsBytes(response)).build();\n+                fut.complete(new Message(responseMessage.toByteArray()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4299437600afc92ce6a3258e9fa8717c12e8f088"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyOTM3MTg4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#pullrequestreview-362937188", "createdAt": "2020-02-21T21:47:51Z", "commit": {"oid": "4299437600afc92ce6a3258e9fa8717c12e8f088"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMTo0Nzo1MVrOFtFjmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMTo0Nzo1MVrOFtFjmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgyMTI3Mw==", "bodyText": "Missing version?\nShould add @Notnull to the fields in ApplicationMessage so that the builder will fail for missing fields.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#discussion_r382821273", "createdAt": "2020-02-21T21:47:51Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/builtin/services/lifecycle/LifecycleIPCAgent.java", "diffHunk": "@@ -108,18 +108,17 @@ public void postInject() {\n             executor.submit(() -> {\n                 // Synchronize on context so that we only try to send 1 update at a time to a given client\n                 synchronized (context) {\n-                    StateTransitionEvent trans =\n-                            StateTransitionEvent.builder().newState(newState.toString()).oldState(oldState.toString())\n-                                    .service(listenRequest.getServiceName()).build();\n-\n-                    GeneralRequest<StateTransitionEvent, LifecycleRequestTypes> req =\n-                            GeneralRequest.<StateTransitionEvent, LifecycleRequestTypes>builder()\n-                                    .type(LifecycleRequestTypes.transition).request(trans).build();\n+                    StateTransitionEvent stateTransitionEvent =\n+                            StateTransitionEvent.builder().newState(newState.toString())\n+                                    .oldState(oldState.toString()).service(listenRequest.getServiceName()).build();\n \n                     try {\n+                        ApplicationMessage applicationMessage = ApplicationMessage.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4299437600afc92ce6a3258e9fa8717c12e8f088"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f7e4d490071f95e194055cacab72592033a416a", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9f7e4d490071f95e194055cacab72592033a416a", "committedDate": "2020-02-24T21:32:19Z", "message": "minor refactoring based on PR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzM4NDkx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#pullrequestreview-363738491", "createdAt": "2020-02-24T22:11:37Z", "commit": {"oid": "9f7e4d490071f95e194055cacab72592033a416a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjoxMTozN1rOFtxv0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjoxMTozN1rOFtxv0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0NTI5OA==", "bodyText": "Remember to undo this change before merging.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#discussion_r383545298", "createdAt": "2020-02-24T22:11:37Z", "author": {"login": "MikeDombo"}, "path": "pom.xml", "diffHunk": "@@ -72,7 +72,8 @@\n         <dependency>\n             <groupId>com.aws.iot</groupId>\n             <artifactId>evergreen-java-sdk</artifactId>\n-            <version>0.0.0-SNAPSHOT</version>\n+            <version>0.0.0-add_validation-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7e4d490071f95e194055cacab72592033a416a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94fbe400e8d733985bfd548aff22f1ea28597723", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/94fbe400e8d733985bfd548aff22f1ea28597723", "committedDate": "2020-02-25T17:21:41Z", "message": "Merge branch 'master' into updated-application-protocol"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0Mzg2NDg0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#pullrequestreview-364386484", "createdAt": "2020-02-25T19:26:57Z", "commit": {"oid": "94fbe400e8d733985bfd548aff22f1ea28597723"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOToyNjo1OFrOFuSKIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOToyNjo1OFrOFuSKIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3NjMyMQ==", "bodyText": "[Minor] I would put the static import here directly for easy reading...", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/67#discussion_r384076321", "createdAt": "2020-02-25T19:26:58Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/ipc/modules/ServiceDiscoveryService.java", "diffHunk": "@@ -68,49 +67,50 @@ public void postInject() {\n      */\n     public Future<Message> handleMessage(Message request, ConnectionContext context) {\n         CompletableFuture<Message> fut = new CompletableFuture<>();\n+        ApplicationMessage message = ApplicationMessage.fromBytes(request.getPayload());\n         try {\n-            GeneralRequest<Object, ServiceDiscoveryRequestTypes> obj =\n-                    IPCUtil.decode(request, new TypeReference<GeneralRequest<Object, ServiceDiscoveryRequestTypes>>() {\n-                    });\n+            //TODO: add version compatibility check\n \n-            GeneralResponse<?, ServiceDiscoveryResponseStatus> genResp = new GeneralResponse<>();\n-            switch (obj.getType()) {\n-                case lookup:\n-                    LookupResourceRequest lookup = mapper.convertValue(obj.getRequest(), LookupResourceRequest.class);\n+            ServiceDiscoveryOpCodes opCode = values()[message.getOpCode()];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94fbe400e8d733985bfd548aff22f1ea28597723"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d073232373dd82381f005bc2cecced54051f8e77", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d073232373dd82381f005bc2cecced54051f8e77", "committedDate": "2020-02-25T19:49:06Z", "message": "Merge branch 'master' into updated-application-protocol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36af360faf009a28fb0cb7855c014d88ef0a9dd8", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/36af360faf009a28fb0cb7855c014d88ef0a9dd8", "committedDate": "2020-02-25T19:59:45Z", "message": "Update pom.xml"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2255, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}