{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyODU5MDQ5", "number": 522, "title": "Auth IPC integration", "bodyText": "Issue #, if available:\nDescription of changes:\nAuth IPC integration to implement ValidateAuthorizationToken API\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-10-13T21:22:16Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522", "merged": true, "mergeCommit": {"oid": "f586ab66373529208dc8573b92f5345cfcd2c307"}, "closed": true, "closedAt": "2020-10-22T19:32:27Z", "author": {"login": "youtuyy"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSRZiSgFqTUwNzkwMjQ1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVHLqRgFqTUxNTA1MzcxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTAyNDUw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-507902450", "createdAt": "2020-10-13T23:44:09Z", "commit": {"oid": "15defe7ef9d9c5e0d994fdc244f9d7ff70251c89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzo0NDowOVrOHg9PGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzo0NDowOVrOHg9PGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxOTc2OQ==", "bodyText": "I think we should reuse previous doAuthentication method, and wrap exceptions here. Is there a reason for you to create a new one?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#discussion_r504319769", "createdAt": "2020-10-13T23:44:09Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationIPCAgent.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.authorization;\n+\n+import com.aws.greengrass.ipc.AuthenticationHandler;\n+import com.aws.greengrass.logging.api.Logger;\n+import com.aws.greengrass.logging.impl.LogManager;\n+import generated.software.amazon.awssdk.iot.greengrass.GeneratedAbstractValidateAuthorizationTokenOperationHandler;\n+import generated.software.amazon.awssdk.iot.greengrass.model.InvalidTokenError;\n+import generated.software.amazon.awssdk.iot.greengrass.model.ServiceError;\n+import generated.software.amazon.awssdk.iot.greengrass.model.UnauthorizedError;\n+import generated.software.amazon.awssdk.iot.greengrass.model.ValidateAuthorizationTokenRequest;\n+import generated.software.amazon.awssdk.iot.greengrass.model.ValidateAuthorizationTokenResponse;\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import software.amazon.eventstream.iot.EventStreamableJsonMessage;\n+import software.amazon.eventstream.iot.server.OperationContinuationHandlerContext;\n+\n+import javax.inject.Inject;\n+\n+/**\n+ * Class to handle business logic for authorization.\n+ */\n+public class AuthorizationIPCAgent {\n+\n+    private static final Logger logger = LogManager.getLogger(AuthorizationIPCAgent.class);\n+\n+    @Inject\n+    @Setter(AccessLevel.PACKAGE)\n+    private AuthenticationHandler authenticationHandler;\n+\n+    public ValidateAuthorizationTokenOperationHandler getValidateAuthorizationTokenOperationHandler(\n+            OperationContinuationHandlerContext context) {\n+        return new ValidateAuthorizationTokenOperationHandler(context);\n+    }\n+\n+    class ValidateAuthorizationTokenOperationHandler\n+            extends GeneratedAbstractValidateAuthorizationTokenOperationHandler {\n+\n+        protected ValidateAuthorizationTokenOperationHandler(OperationContinuationHandlerContext context) {\n+            super(context);\n+        }\n+\n+        @Override\n+        protected void onStreamClosed() {\n+\n+        }\n+\n+        @Override\n+        public ValidateAuthorizationTokenResponse handleRequest(ValidateAuthorizationTokenRequest request) {\n+            ValidateAuthorizationTokenResponse response = new ValidateAuthorizationTokenResponse();\n+            try {\n+                authenticationHandler.doAuthentication(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15defe7ef9d9c5e0d994fdc244f9d7ff70251c89"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NTUxMTA1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-508551105", "createdAt": "2020-10-14T17:00:22Z", "commit": {"oid": "a8d8d5aaf86153fe6d1b00172f6811e03741e712"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzowMDoyM1rOHhcmvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzowMDoyM1rOHhcmvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgzMzcyNw==", "bodyText": "Lets change the method signature to throw a different exception when input is invalid, like illegalArgument, and then catch it here. Relying on message string makes it easily breakable in future.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#discussion_r504833727", "createdAt": "2020-10-14T17:00:23Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationIPCAgent.java", "diffHunk": "@@ -53,12 +56,17 @@ protected void onStreamClosed() {\n         public ValidateAuthorizationTokenResponse handleRequest(ValidateAuthorizationTokenRequest request) {\n             ValidateAuthorizationTokenResponse response = new ValidateAuthorizationTokenResponse();\n             try {\n-                authenticationHandler.doAuthentication(request);\n+                authenticationHandler.doAuthentication(request.getToken());\n                 response.setIsValid(true);\n                 return response;\n-            } catch (InvalidTokenError | UnauthorizedError e) {\n-                logger.atError(\"authorization-error\").log(\"Unable to authorize request\");\n-                throw e;\n+            } catch (UnauthenticatedException e) {\n+                if (\"Invalid authentication token\".equals(e.getMessage())){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d8d5aaf86153fe6d1b00172f6811e03741e712"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NjY5MzE3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-508669317", "createdAt": "2020-10-14T19:39:49Z", "commit": {"oid": "e9b60dfe739bdffa01eef1f61f0d91e52f12059d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTozOTo1MFrOHhiRGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTozOTo1MFrOHhiRGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkyNjQ4OQ==", "bodyText": "remove?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#discussion_r504926489", "createdAt": "2020-10-14T19:39:50Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationIPCAgent.java", "diffHunk": "@@ -49,32 +50,28 @@ protected ValidateAuthorizationTokenOperationHandler(OperationContinuationHandle\n \n         @Override\n         protected void onStreamClosed() {\n-\n+            // NA\n         }\n \n         @Override\n         public ValidateAuthorizationTokenResponse handleRequest(ValidateAuthorizationTokenRequest request) {\n+            if (!AUTHORIZED_COMPONENTS.contains(serviceName)) {\n+                throw new UnauthorizedError(\n+                        String.format(\"%s is not authorized to perform %s\", serviceName, getOperationName()));\n+            }\n             ValidateAuthorizationTokenResponse response = new ValidateAuthorizationTokenResponse();\n             try {\n                 authenticationHandler.doAuthentication(request.getToken());\n                 response.setIsValid(true);\n                 return response;\n             } catch (UnauthenticatedException e) {\n-                if (\"Invalid authentication token\".equals(e.getMessage())){\n-                    throw new InvalidTokenError(e.getMessage());\n-                } else if (\"Authentication token not found\".equals(e.getMessage())){\n-                    throw new UnauthorizedError(e.getMessage());\n-                } else {\n-                    throw new ServiceError(e.getMessage());\n-                }\n-            } catch (Exception e) {\n-                throw new ServiceError(e.getMessage());\n+                throw new InvalidTokenError(e.getMessage());\n             }\n         }\n \n         @Override\n         public void handleStreamEvent(EventStreamableJsonMessage streamRequestEvent) {\n-\n+            // NA", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9b60dfe739bdffa01eef1f61f0d91e52f12059d"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NjY5Mzk4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-508669398", "createdAt": "2020-10-14T19:39:57Z", "commit": {"oid": "e9b60dfe739bdffa01eef1f61f0d91e52f12059d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTozOTo1N1rOHhiRZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxOTozOTo1N1rOHhiRZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkyNjU2NA==", "bodyText": "remove ?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#discussion_r504926564", "createdAt": "2020-10-14T19:39:57Z", "author": {"login": "prateek-y"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationIPCAgent.java", "diffHunk": "@@ -49,32 +50,28 @@ protected ValidateAuthorizationTokenOperationHandler(OperationContinuationHandle\n \n         @Override\n         protected void onStreamClosed() {\n-\n+            // NA", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9b60dfe739bdffa01eef1f61f0d91e52f12059d"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NzUzNTk4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-508753598", "createdAt": "2020-10-14T21:24:30Z", "commit": {"oid": "6f8cdb151a575a5a427e1dafe1d412d65b2e1b74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToyNDozMFrOHhlk6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToyNDozMFrOHhlk6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4MDcxMg==", "bodyText": "unused?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#discussion_r504980712", "createdAt": "2020-10-14T21:24:30Z", "author": {"login": "prateek-y"}, "path": "src/test/java/com/aws/greengrass/authorization/AuthorizationIPCAgentTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.authorization;\n+\n+import com.aws.greengrass.ipc.AuthenticationHandler;\n+import com.aws.greengrass.ipc.exceptions.UnauthenticatedException;\n+import com.aws.greengrass.testcommons.testutilities.GGExtension;\n+import generated.software.amazon.awssdk.iot.greengrass.model.InvalidTokenError;\n+import generated.software.amazon.awssdk.iot.greengrass.model.UnauthorizedError;\n+import generated.software.amazon.awssdk.iot.greengrass.model.ValidateAuthorizationTokenRequest;\n+import generated.software.amazon.awssdk.iot.greengrass.model.ValidateAuthorizationTokenResponse;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import software.amazon.awssdk.crt.eventstream.ServerConnectionContinuation;\n+import software.amazon.eventstream.iot.server.AuthenticationData;\n+import software.amazon.eventstream.iot.server.OperationContinuationHandlerContext;\n+\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.doThrow;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@ExtendWith({MockitoExtension.class, GGExtension.class})\n+public class AuthorizationIPCAgentTest {\n+    private static final String TEST_TOKEN = \"token\";\n+    private static final String STREAM_MANAGER = \"aws.greengrass.StreamManager\";\n+    @Mock\n+    OperationContinuationHandlerContext mockContext;\n+\n+    @Mock\n+    AuthenticationHandler authenticationHandler;\n+\n+    @Mock\n+    AuthenticationData mockAuthenticationData;\n+\n+    private AuthorizationIPCAgent authorizationIPCAgent;\n+\n+    @BeforeEach\n+    void setup() {\n+        when(mockContext.getContinuation()).thenReturn(mock(ServerConnectionContinuation.class));\n+        when(mockContext.getAuthenticationData()).thenReturn(mockAuthenticationData);\n+        authorizationIPCAgent = new AuthorizationIPCAgent();\n+        authorizationIPCAgent.setAuthenticationHandler(authenticationHandler);\n+    }\n+\n+    @Test\n+    void GIVEN_authentication_handler_WHEN_handle_request_valid_token_THEN_response() throws UnauthenticatedException {\n+        when(mockAuthenticationData.getIdentityLabel()).thenReturn(STREAM_MANAGER);\n+        ValidateAuthorizationTokenRequest request = new ValidateAuthorizationTokenRequest();\n+        request.setToken(TEST_TOKEN);\n+        ValidateAuthorizationTokenResponse response = new ValidateAuthorizationTokenResponse();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f8cdb151a575a5a427e1dafe1d412d65b2e1b74"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NzU2MDUx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-508756051", "createdAt": "2020-10-14T21:25:53Z", "commit": {"oid": "6f8cdb151a575a5a427e1dafe1d412d65b2e1b74"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NzgyODUy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-508782852", "createdAt": "2020-10-14T21:39:59Z", "commit": {"oid": "8f2e7967d8acecedc715fb2c740c5b48ee0e012a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f2e7967d8acecedc715fb2c740c5b48ee0e012a", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8f2e7967d8acecedc715fb2c740c5b48ee0e012a", "committedDate": "2020-10-14T21:28:04Z", "message": "fix test"}, "afterCommit": {"oid": "45582e5c396126fec5ad55b6ce9f403596264b4b", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/45582e5c396126fec5ad55b6ce9f403596264b4b", "committedDate": "2020-10-20T00:29:01Z", "message": "Update for sdk"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "45582e5c396126fec5ad55b6ce9f403596264b4b", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/45582e5c396126fec5ad55b6ce9f403596264b4b", "committedDate": "2020-10-20T00:29:01Z", "message": "Update for sdk"}, "afterCommit": {"oid": "daaf2e85156833650d6b52e6ec0ef14ee8b6edfa", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/daaf2e85156833650d6b52e6ec0ef14ee8b6edfa", "committedDate": "2020-10-20T00:47:13Z", "message": "Auth IPC integration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "daaf2e85156833650d6b52e6ec0ef14ee8b6edfa", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/daaf2e85156833650d6b52e6ec0ef14ee8b6edfa", "committedDate": "2020-10-20T00:47:13Z", "message": "Auth IPC integration"}, "afterCommit": {"oid": "dc4b34d3d0a64581c2c01c3018ba472ab4a8abc2", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dc4b34d3d0a64581c2c01c3018ba472ab4a8abc2", "committedDate": "2020-10-20T18:18:09Z", "message": "Auth IPC integration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc4b34d3d0a64581c2c01c3018ba472ab4a8abc2", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dc4b34d3d0a64581c2c01c3018ba472ab4a8abc2", "committedDate": "2020-10-20T18:18:09Z", "message": "Auth IPC integration"}, "afterCommit": {"oid": "02a64d0d892ad3b9525b4450bacf50a9014fa709", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/02a64d0d892ad3b9525b4450bacf50a9014fa709", "committedDate": "2020-10-21T03:56:31Z", "message": "Auth IPC integration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "036e8d1738743999ebb57db78c15eff50e3e716e", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/036e8d1738743999ebb57db78c15eff50e3e716e", "committedDate": "2020-10-21T09:19:20Z", "message": "fix test"}, "afterCommit": {"oid": "f43f13beb1f12102422e34fa0d7944ba817b42fa", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f43f13beb1f12102422e34fa0d7944ba817b42fa", "committedDate": "2020-10-21T09:45:07Z", "message": "fix test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f43f13beb1f12102422e34fa0d7944ba817b42fa", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f43f13beb1f12102422e34fa0d7944ba817b42fa", "committedDate": "2020-10-21T09:45:07Z", "message": "fix test"}, "afterCommit": {"oid": "762cc1e7d8a3d8d8ff78bfbc12a065872c51cff3", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/762cc1e7d8a3d8d8ff78bfbc12a065872c51cff3", "committedDate": "2020-10-21T10:19:31Z", "message": "fix test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "762cc1e7d8a3d8d8ff78bfbc12a065872c51cff3", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/762cc1e7d8a3d8d8ff78bfbc12a065872c51cff3", "committedDate": "2020-10-21T10:19:31Z", "message": "fix test"}, "afterCommit": {"oid": "1e982e3df8779d693e304a887af182bec9bbd7d2", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1e982e3df8779d693e304a887af182bec9bbd7d2", "committedDate": "2020-10-21T10:26:08Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzOTE2MTQ1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-513916145", "createdAt": "2020-10-21T16:36:40Z", "commit": {"oid": "1e982e3df8779d693e304a887af182bec9bbd7d2"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjozNjo0MFrOHl1eVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0MDo0NFrOHl1o5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQzNTQ3Ng==", "bodyText": "create a public const for the stream manager name. We would want to use it in lambda as well (we already have a const in lambda, but we can switch to yours if you make it public)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#discussion_r509435476", "createdAt": "2020-10-21T16:36:40Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/authorization/AuthorizationIPCAgent.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.authorization;\n+\n+import com.aws.greengrass.ipc.AuthenticationHandler;\n+import com.aws.greengrass.ipc.exceptions.UnauthenticatedException;\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import software.amazon.awssdk.aws.greengrass.GeneratedAbstractValidateAuthorizationTokenOperationHandler;\n+import software.amazon.awssdk.aws.greengrass.model.InvalidTokenError;\n+import software.amazon.awssdk.aws.greengrass.model.UnauthorizedError;\n+import software.amazon.awssdk.aws.greengrass.model.ValidateAuthorizationTokenRequest;\n+import software.amazon.awssdk.aws.greengrass.model.ValidateAuthorizationTokenResponse;\n+import software.amazon.awssdk.eventstreamrpc.OperationContinuationHandlerContext;\n+import software.amazon.awssdk.eventstreamrpc.model.EventStreamJsonMessage;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import javax.inject.Inject;\n+\n+/**\n+ * Class to handle business logic for authorization.\n+ */\n+public class AuthorizationIPCAgent {\n+\n+    // This API can be used only by stream manager now\n+    private static final List<String> AUTHORIZED_COMPONENTS = Collections.singletonList(\"aws.greengrass.StreamManager\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e982e3df8779d693e304a887af182bec9bbd7d2"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQzNzcxNA==", "bodyText": "just don't put any lifecycle", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#discussion_r509437714", "createdAt": "2020-10-21T16:40:08Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/resources/com/aws/greengrass/integrationtests/ipc/ipc.yaml", "diffHunk": "@@ -3,12 +3,21 @@ services:\n   main:\n     dependencies:\n       - mqtt\n+      - aws.greengrass.StreamManager\n       - ServiceName\n       - ServiceToBeRestarted\n       - ServiceToBeStopped\n   mqtt:\n     lifecycle:\n     version: 1.0.0\n+  aws.greengrass.StreamManager:\n+    lifecycle:\n+      run:\n+        windows:\n+          powershell -command sleep 100\n+        posix:\n+          sleep 100", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e982e3df8779d693e304a887af182bec9bbd7d2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQzNzg2MQ==", "bodyText": "use a public const", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#discussion_r509437861", "createdAt": "2020-10-21T16:40:19Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/ipc/IPCAuthorizationTest.java", "diffHunk": "@@ -42,14 +53,24 @@\n     private static Kernel kernel;\n     private IPCClient client;\n     private AuthorizationClient authorizationClient;\n+    private static EventStreamRPCConnection clientConnection;\n+    private static SocketOptions socketOptions;\n+    private static final String STREAM_MANAGER_SERVICE_NAME = \"aws.greengrass.StreamManager\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e982e3df8779d693e304a887af182bec9bbd7d2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQzODE4MA==", "bodyText": "use const", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#discussion_r509438180", "createdAt": "2020-10-21T16:40:44Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/authorization/AuthorizationIPCAgentTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.authorization;\n+\n+import com.aws.greengrass.ipc.AuthenticationHandler;\n+import com.aws.greengrass.ipc.exceptions.UnauthenticatedException;\n+import com.aws.greengrass.testcommons.testutilities.GGExtension;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import software.amazon.awssdk.aws.greengrass.model.InvalidTokenError;\n+import software.amazon.awssdk.aws.greengrass.model.UnauthorizedError;\n+import software.amazon.awssdk.aws.greengrass.model.ValidateAuthorizationTokenRequest;\n+import software.amazon.awssdk.eventstreamrpc.AuthenticationData;\n+import software.amazon.awssdk.eventstreamrpc.OperationContinuationHandlerContext;\n+\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.doThrow;\n+import static org.mockito.Mockito.when;\n+\n+@ExtendWith({MockitoExtension.class, GGExtension.class})\n+public class AuthorizationIPCAgentTest {\n+    private static final String TEST_TOKEN = \"token\";\n+    private static final String STREAM_MANAGER_SERVICE_NAME = \"aws.greengrass.StreamManager\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e982e3df8779d693e304a887af182bec9bbd7d2"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzOTkwMTkx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-513990191", "createdAt": "2020-10-21T17:16:06Z", "commit": {"oid": "1e982e3df8779d693e304a887af182bec9bbd7d2"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4005afd8de00bd8333767d975e1a7dc3f314c0a", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c4005afd8de00bd8333767d975e1a7dc3f314c0a", "committedDate": "2020-10-21T18:38:31Z", "message": "fix test"}, "afterCommit": {"oid": "7765cff010128984d0bb1d238a57221a98c65e70", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7765cff010128984d0bb1d238a57221a98c65e70", "committedDate": "2020-10-22T05:51:08Z", "message": "Auth IPC integration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7765cff010128984d0bb1d238a57221a98c65e70", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7765cff010128984d0bb1d238a57221a98c65e70", "committedDate": "2020-10-22T05:51:08Z", "message": "Auth IPC integration"}, "afterCommit": {"oid": "a198afd64c1549693862c07d6af3225a73f5f165", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a198afd64c1549693862c07d6af3225a73f5f165", "committedDate": "2020-10-22T05:53:08Z", "message": "Auth IPC integration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MzkwMjg1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-514390285", "createdAt": "2020-10-22T06:18:51Z", "commit": {"oid": "a198afd64c1549693862c07d6af3225a73f5f165"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2d743d7b17f183a4f4cc08913901d7ec2bf7f0a", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f2d743d7b17f183a4f4cc08913901d7ec2bf7f0a", "committedDate": "2020-10-22T18:44:18Z", "message": "Auth IPC integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e08c20476c6dd2ed256f1ee67f7538202b3f0400", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e08c20476c6dd2ed256f1ee67f7538202b3f0400", "committedDate": "2020-10-22T18:47:04Z", "message": "fix recipe"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "999607f63c6b12d1f3fa56ef596f80b8d8445829", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/999607f63c6b12d1f3fa56ef596f80b8d8445829", "committedDate": "2020-10-22T18:25:38Z", "message": "Merge branch 'master' into auth-ipc"}, "afterCommit": {"oid": "e08c20476c6dd2ed256f1ee67f7538202b3f0400", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e08c20476c6dd2ed256f1ee67f7538202b3f0400", "committedDate": "2020-10-22T18:47:04Z", "message": "fix recipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cca432a45aee92086fe9ca7cdd6c77440e3ea6de", "author": {"user": {"login": "youtuyy", "name": "Zhaoyan Lin"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/cca432a45aee92086fe9ca7cdd6c77440e3ea6de", "committedDate": "2020-10-22T19:09:38Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MDUwNzUx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-515050751", "createdAt": "2020-10-22T19:27:38Z", "commit": {"oid": "cca432a45aee92086fe9ca7cdd6c77440e3ea6de"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MDUzNzE1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/522#pullrequestreview-515053715", "createdAt": "2020-10-22T19:31:43Z", "commit": {"oid": "cca432a45aee92086fe9ca7cdd6c77440e3ea6de"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3143, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}