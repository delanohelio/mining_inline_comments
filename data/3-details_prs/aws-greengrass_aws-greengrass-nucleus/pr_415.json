{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMTYwOTg2", "number": 415, "title": "add beta install script for linux", "bodyText": "Updated according to:\nhttps://alpha-docs-aws.amazon.com/greengrass/v2/developerguide/getting-started.html#install-greengrass-v2\nThis script can be put in the beta release zip. Assuming user is following the above instructions:\nThis script automates step 6 (unzip and install cli), 7 (copy over HTTP jar), and 9 (unzip nucleus) of the installation.\nOptions:\n\n-r|--root to specify an install root dir instead of default (/greengrass/v2).\n-f|--fresh-install to remove previous installation if exists.\n-ld|--launch-default to launch with all defaults after installation.\n\nIssue #, if available:\nDescription of changes:\nAdd a bash script.\nWhy is this change necessary:\nAutomate some install steps\nHow was this change tested:\nPrerequisites:\nOn Ubuntu 18.04, installed openjdk-8-jdk, unzip.\nThe beta release zip is unzipped. The install script executed at the root of the unzip directory.\nScenario 1: default install\nGIVEN prerequisites satisfied\nAND default install directory (right now it's /greengrass/v2) created and has proper permissions\nWHEN execute ./install-beta.sh\nTHEN CLI installed and HTTP jar copied to default install root plugins/trusted directory\nAND user may run java -jar lib/Greengrass.jar to start Greengrass\nScenario 2: install to a customized path\nPass argument -r $INSTALL_DIR to specify alternative install directory\nThe rest is the same as scenario 1.\nScenario 3: fresh install\nPass -f flag:\nTHEN user is prompted to confirm deletion of $INSTALL_DIR\nAND $INSTALL_DIR is purged if user entered y\nScenario 4: install and launch with defaults\nGIVEN aws credentials are setup\nAND Pass -ld flag\nTHEN CLI installed and HTTP jar copied to $INSTALL_DIR/plugins/trusted directory\nAND Greengrass is provisioned in the cloud and launched with the following parameters:\n|thing|MyIotThing|\n|thing group|MyIotThingGroup|\n|IAM TES role|MyIotRoleForTes|\n|iot role alias|MyIotRoleAliasForTes|\n|iot policy|MyIotThingPolicy|\n|iot policy for TES| GreengrassTESCertificatePolicyMyIotRoleAliasForTes |\nAny additional information or context required to review the change:\nhttps://alpha-docs-aws.amazon.com/greengrass/v2/developerguide/getting-started.html\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-09-08T16:26:32Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415", "merged": true, "mergeCommit": {"oid": "673094f052bcc283a98fc5d34e3345a13e083d6b"}, "closed": true, "closedAt": "2020-10-06T20:52:24Z", "author": {"login": "tilo-chen"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG6yNZgBqjM3NDE5ODYzNjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP8KmhgH2gAyNDgyMTYwOTg2Ojg0NjA4MzAzZmQ3YjY0NmM5MThlMGRiYjg5N2VhNmRlOTQ1OTExNjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee48a7d102104d370a14c3616edaee16aef14c9f", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ee48a7d102104d370a14c3616edaee16aef14c9f", "committedDate": "2020-09-08T16:21:37Z", "message": "add beta install script for linux"}, "afterCommit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "committedDate": "2020-09-08T17:09:29Z", "message": "add beta install script for linux"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NDU1MjYw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-484455260", "createdAt": "2020-09-08T20:05:22Z", "commit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDowNToyMlrOHOsMpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDowNzo0OVrOHOsRXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NjI0NA==", "bodyText": "Why do we force AWS_SESSION_TOKEN? I think that's only required if that are assumed roles involved (ie: optional if a static key / secret is used as an IAM user)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485166244", "createdAt": "2020-09-08T20:05:22Z", "author": {"login": "philcali"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"\n+# 79011c549a3f29167fe36dc53936aa7ded8eff4a Sep 3, 2020 4:57:16 PM GMT-0400\n+CLI_DIR=\"aws-greengrass-cli-1.0-SNAPSHOT\"\n+# Sep 4, 2020 1:18:52 PM GMT-0400\n+HTTP_JAR=\"aws-greengrass-http-03d5e8465816c40259932ed3747786c5c4a3570d.jar\"\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# check credentials are set\n+if [ -z \"$AWS_ACCESS_KEY_ID\" ] || [ -z \"$AWS_SECRET_ACCESS_KEY\" ] || [ -z \"$AWS_SESSION_TOKEN\" ]; then\n+  echo \"Failed. Please set AWS credentials in your shell\"\n+  exit 1\n+fi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NjUyMg==", "bodyText": "Should these be inputs to the script or reasonable defaults?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485166522", "createdAt": "2020-09-08T20:05:55Z", "author": {"login": "philcali"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"\n+# 79011c549a3f29167fe36dc53936aa7ded8eff4a Sep 3, 2020 4:57:16 PM GMT-0400\n+CLI_DIR=\"aws-greengrass-cli-1.0-SNAPSHOT\"\n+# Sep 4, 2020 1:18:52 PM GMT-0400\n+HTTP_JAR=\"aws-greengrass-http-03d5e8465816c40259932ed3747786c5c4a3570d.jar\"\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# check credentials are set\n+if [ -z \"$AWS_ACCESS_KEY_ID\" ] || [ -z \"$AWS_SECRET_ACCESS_KEY\" ] || [ -z \"$AWS_SESSION_TOKEN\" ]; then\n+  echo \"Failed. Please set AWS credentials in your shell\"\n+  exit 1\n+fi\n+\n+# remove existing installation if exists\n+if [ -d \"$GG_ROOT_DIR\" ] ; then\n+  echo 'removing old installation'\n+  rm -rf \"$GG_ROOT_DIR\"\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  cd \"$CLI_DIR\"\n+  bash install.sh || { echo 'CLI installation failed'; exit 1; }\n+  cd \"$INSTALLER_DIR\"\n+fi\n+\n+# copy over HTTP jar\n+mkdir -p \"$HTTP_INSTALL_DIR\"\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+\n+# run Greengrass2\n+echo 'Starting Greengrass2'\n+java -Droot=\"$GG_ROOT_DIR\" -Dlog.level=ERROR -jar \"$KERNEL_DIR/lib/Greengrass.jar\" \\\n+    --provision true --aws-region us-east-1 \\\n+    --thing-name TiloTestDevice0 \\\n+    --setup-tes true -tra tiloTestRoleAlias", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NzM2MQ==", "bodyText": "Why are we including the commit hash here?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485167361", "createdAt": "2020-09-08T20:07:37Z", "author": {"login": "philcali"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"\n+# 79011c549a3f29167fe36dc53936aa7ded8eff4a Sep 3, 2020 4:57:16 PM GMT-0400\n+CLI_DIR=\"aws-greengrass-cli-1.0-SNAPSHOT\"\n+# Sep 4, 2020 1:18:52 PM GMT-0400\n+HTTP_JAR=\"aws-greengrass-http-03d5e8465816c40259932ed3747786c5c4a3570d.jar\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NzQ1Mw==", "bodyText": "Why are we including the commit hash here?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485167453", "createdAt": "2020-09-08T20:07:49Z", "author": {"login": "philcali"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NDY3OTA2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-484467906", "createdAt": "2020-09-08T20:25:21Z", "commit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDoyNToyMlrOHOsziA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDoyNToyMlrOHOsziA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3NjIwMA==", "bodyText": "should not force these at all. Credentials can also come from EC2 or from a profile file. The kernel handles all those scenarios, so I'd just allow it to complain if there's a problem", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485176200", "createdAt": "2020-09-08T20:25:22Z", "author": {"login": "MikeDombo"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"\n+# 79011c549a3f29167fe36dc53936aa7ded8eff4a Sep 3, 2020 4:57:16 PM GMT-0400\n+CLI_DIR=\"aws-greengrass-cli-1.0-SNAPSHOT\"\n+# Sep 4, 2020 1:18:52 PM GMT-0400\n+HTTP_JAR=\"aws-greengrass-http-03d5e8465816c40259932ed3747786c5c4a3570d.jar\"\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# check credentials are set\n+if [ -z \"$AWS_ACCESS_KEY_ID\" ] || [ -z \"$AWS_SECRET_ACCESS_KEY\" ] || [ -z \"$AWS_SESSION_TOKEN\" ]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1Mzk1MjU4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-485395258", "createdAt": "2020-09-09T20:53:02Z", "commit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDo1MzowMlrOHPZ6tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDo1NjozMVrOHPaB7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNTMxNw==", "bodyText": "Is it intentional to append 2?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485915317", "createdAt": "2020-09-09T20:53:02Z", "author": {"login": "hui-yang"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNTU1MQ==", "bodyText": "Can we make it work with /bin/sh?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485915551", "createdAt": "2020-09-09T20:53:28Z", "author": {"login": "hui-yang"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNzE2NA==", "bodyText": "Do we need bash? Probably should add a followup for this", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485917164", "createdAt": "2020-09-09T20:56:31Z", "author": {"login": "hui-yang"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"\n+# 79011c549a3f29167fe36dc53936aa7ded8eff4a Sep 3, 2020 4:57:16 PM GMT-0400\n+CLI_DIR=\"aws-greengrass-cli-1.0-SNAPSHOT\"\n+# Sep 4, 2020 1:18:52 PM GMT-0400\n+HTTP_JAR=\"aws-greengrass-http-03d5e8465816c40259932ed3747786c5c4a3570d.jar\"\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# check credentials are set\n+if [ -z \"$AWS_ACCESS_KEY_ID\" ] || [ -z \"$AWS_SECRET_ACCESS_KEY\" ] || [ -z \"$AWS_SESSION_TOKEN\" ]; then\n+  echo \"Failed. Please set AWS credentials in your shell\"\n+  exit 1\n+fi\n+\n+# remove existing installation if exists\n+if [ -d \"$GG_ROOT_DIR\" ] ; then\n+  echo 'removing old installation'\n+  rm -rf \"$GG_ROOT_DIR\"\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  cd \"$CLI_DIR\"\n+  bash install.sh || { echo 'CLI installation failed'; exit 1; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDQxOTUx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-490041951", "createdAt": "2020-09-16T21:44:08Z", "commit": {"oid": "903147c423b3dbc021c59b6da6addb5d5547d0d3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDQyNDY3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-490042467", "createdAt": "2020-09-16T21:45:09Z", "commit": {"oid": "6936f6713a41019568262d975435380cfb60bfce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo0NToxMFrOHTFVAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo0NToxMFrOHTFVAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MjI4OQ==", "bodyText": "why only ERROR? I'd prefer INFO, or at the very least WARN.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r489772289", "createdAt": "2020-09-16T21:45:10Z", "author": {"login": "MikeDombo"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+KERNEL_DIR=\"aws-greengrass\"\n+CLI_DIR=\"aws-greengrass-cli\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# provision name defaults\n+thing_name=\"MyIotThing\"\n+iot_policy_name=\"MyIotThingPolicy\"\n+tes_role_name=\"MyIotRoleForTes\"\n+tes_role_alias=\"MyIotRoleAliasForTes\"\n+\n+CUSTOMIZE=false\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -c|--customize)\n+    CUSTOMIZE=true\n+    shift\n+    ;;\n+    -tn|--thing-name)\n+    thing_name=$2\n+    shift\n+    ;;\n+  esac\n+done\n+\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# remove existing installation if exists\n+if [ -d \"$GG_ROOT_DIR\" ] ; then\n+  echo 'removing old installation'\n+  rm -rf \"$GG_ROOT_DIR\"\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  cd \"$CLI_DIR\"\n+  bash install.sh || { echo 'CLI installation failed'; exit 1; }\n+  cd \"$INSTALLER_DIR\"\n+else\n+  echo \"Greengrass CLI already installed\"\n+fi\n+\n+# prompt user inputs if customize is set\n+echo 'Later we will provision the device by creating required IoT/IAM roles and policies'\n+if \"$CUSTOMIZE\"; then\n+  echo 'Please provide input (press Enter to accept [default]):'\n+\n+  curr_default_val=$thing_name\n+  printf \"IoT Thing name [%s]: \" \"$curr_default_val\"\n+  read -r thing_name\n+  thing_name=${thing_name:-$curr_default_val}\n+\n+  curr_default_val=$iot_policy_name\n+  printf \"IoT policy name [%s]: \" \"$curr_default_val\"\n+  read -r iot_policy_name\n+  iot_policy_name=${iot_policy_name:-$curr_default_val}\n+\n+  curr_default_val=$tes_role_name\n+  printf \"TES IAM role name [%s]: \" $curr_default_val\n+  read -r  tes_role_name\n+  tes_role_name=${tes_role_name:-$curr_default_val}\n+\n+  curr_default_val=$tes_role_alias\n+  printf \"TES IoT role alias [%s]: \" $curr_default_val\n+  read -r tes_role_alias\n+  tes_role_alias=${tes_role_alias:-$curr_default_val}\n+else\n+  echo 'Using defaults for provisioning'\n+fi\n+\n+# copy over HTTP jar\n+mkdir -p \"$HTTP_INSTALL_DIR\"\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+\n+# run Greengrass\n+echo 'Starting Greengrass'\n+java -Droot=\"$GG_ROOT_DIR\" -Dlog.level=ERROR -jar \"$KERNEL_DIR/lib/Greengrass.jar\" \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6936f6713a41019568262d975435380cfb60bfce"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDQyOTY1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-490042965", "createdAt": "2020-09-16T21:46:06Z", "commit": {"oid": "6936f6713a41019568262d975435380cfb60bfce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo0NjowNlrOHTFWoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo0NjowNlrOHTFWoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MjcwNA==", "bodyText": "So, the customer needs to unzip the kernel zip file and put it in the proper location in order for this script to work?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r489772704", "createdAt": "2020-09-16T21:46:06Z", "author": {"login": "MikeDombo"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+KERNEL_DIR=\"aws-greengrass\"\n+CLI_DIR=\"aws-greengrass-cli\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# provision name defaults\n+thing_name=\"MyIotThing\"\n+iot_policy_name=\"MyIotThingPolicy\"\n+tes_role_name=\"MyIotRoleForTes\"\n+tes_role_alias=\"MyIotRoleAliasForTes\"\n+\n+CUSTOMIZE=false\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -c|--customize)\n+    CUSTOMIZE=true\n+    shift\n+    ;;\n+    -tn|--thing-name)\n+    thing_name=$2\n+    shift\n+    ;;\n+  esac\n+done\n+\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# remove existing installation if exists\n+if [ -d \"$GG_ROOT_DIR\" ] ; then\n+  echo 'removing old installation'\n+  rm -rf \"$GG_ROOT_DIR\"\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  cd \"$CLI_DIR\"\n+  bash install.sh || { echo 'CLI installation failed'; exit 1; }\n+  cd \"$INSTALLER_DIR\"\n+else\n+  echo \"Greengrass CLI already installed\"\n+fi\n+\n+# prompt user inputs if customize is set\n+echo 'Later we will provision the device by creating required IoT/IAM roles and policies'\n+if \"$CUSTOMIZE\"; then\n+  echo 'Please provide input (press Enter to accept [default]):'\n+\n+  curr_default_val=$thing_name\n+  printf \"IoT Thing name [%s]: \" \"$curr_default_val\"\n+  read -r thing_name\n+  thing_name=${thing_name:-$curr_default_val}\n+\n+  curr_default_val=$iot_policy_name\n+  printf \"IoT policy name [%s]: \" \"$curr_default_val\"\n+  read -r iot_policy_name\n+  iot_policy_name=${iot_policy_name:-$curr_default_val}\n+\n+  curr_default_val=$tes_role_name\n+  printf \"TES IAM role name [%s]: \" $curr_default_val\n+  read -r  tes_role_name\n+  tes_role_name=${tes_role_name:-$curr_default_val}\n+\n+  curr_default_val=$tes_role_alias\n+  printf \"TES IoT role alias [%s]: \" $curr_default_val\n+  read -r tes_role_alias\n+  tes_role_alias=${tes_role_alias:-$curr_default_val}\n+else\n+  echo 'Using defaults for provisioning'\n+fi\n+\n+# copy over HTTP jar\n+mkdir -p \"$HTTP_INSTALL_DIR\"\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+\n+# run Greengrass\n+echo 'Starting Greengrass'\n+java -Droot=\"$GG_ROOT_DIR\" -Dlog.level=ERROR -jar \"$KERNEL_DIR/lib/Greengrass.jar\" \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6936f6713a41019568262d975435380cfb60bfce"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDQzNDMy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-490043432", "createdAt": "2020-09-16T21:46:58Z", "commit": {"oid": "6936f6713a41019568262d975435380cfb60bfce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo0Njo1OFrOHTFYIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo0Njo1OFrOHTFYIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MzA4OA==", "bodyText": "not sure about this.... it will blow away everything, this is very very dangerous and I definitely would not have this be the default experience with no user input", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r489773088", "createdAt": "2020-09-16T21:46:58Z", "author": {"login": "MikeDombo"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+KERNEL_DIR=\"aws-greengrass\"\n+CLI_DIR=\"aws-greengrass-cli\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# provision name defaults\n+thing_name=\"MyIotThing\"\n+iot_policy_name=\"MyIotThingPolicy\"\n+tes_role_name=\"MyIotRoleForTes\"\n+tes_role_alias=\"MyIotRoleAliasForTes\"\n+\n+CUSTOMIZE=false\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -c|--customize)\n+    CUSTOMIZE=true\n+    shift\n+    ;;\n+    -tn|--thing-name)\n+    thing_name=$2\n+    shift\n+    ;;\n+  esac\n+done\n+\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# remove existing installation if exists\n+if [ -d \"$GG_ROOT_DIR\" ] ; then\n+  echo 'removing old installation'\n+  rm -rf \"$GG_ROOT_DIR\"\n+fi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6936f6713a41019568262d975435380cfb60bfce"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22be5a3e313501dc44848dec5eb084e37cb8507a", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/22be5a3e313501dc44848dec5eb084e37cb8507a", "committedDate": "2020-10-02T23:29:25Z", "message": "add beta install script for linux"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6936f6713a41019568262d975435380cfb60bfce", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6936f6713a41019568262d975435380cfb60bfce", "committedDate": "2020-09-16T21:44:14Z", "message": "Merge branch 'master' into beta-script-tc"}, "afterCommit": {"oid": "22be5a3e313501dc44848dec5eb084e37cb8507a", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/22be5a3e313501dc44848dec5eb084e37cb8507a", "committedDate": "2020-10-02T23:29:25Z", "message": "add beta install script for linux"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9b8f42b5db2b9b004fcdc47e1a3edaf692e5bae", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b9b8f42b5db2b9b004fcdc47e1a3edaf692e5bae", "committedDate": "2020-10-05T14:48:42Z", "message": "Merge branch 'master' into beta-script-tc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5619bd18eb19f441c5a4dceda974d6dd26c5231", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b5619bd18eb19f441c5a4dceda974d6dd26c5231", "committedDate": "2020-10-05T17:26:48Z", "message": "minor change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjczNjky", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-502273692", "createdAt": "2020-10-05T17:32:54Z", "commit": {"oid": "b5619bd18eb19f441c5a4dceda974d6dd26c5231"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzozMjo1NFrOHcm_7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzozMzo1MlrOHcnCEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2MTEzMw==", "bodyText": "use /bin/sh", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499761133", "createdAt": "2020-10-05T17:32:54Z", "author": {"login": "MikeDombo"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# make sure required file/directory exist\n+for i in $NUCLEUS_ZIP $CLI_ZIP $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Install failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -r|--root)\n+    GG_ROOT_DIR=$2\n+    HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+    shift\n+    ;;\n+    -f|--fresh-install)\n+    FRESH_INSTALL=true\n+    shift\n+    ;;\n+  esac\n+done\n+\n+# unzip\n+(unzip $CLI_ZIP && unzip $NUCLEUS_ZIP) || { echo \"Install failed. Cannot unzip\"; exit 1; }\n+\n+# remove existing installation if requested\n+if \"$FRESH_INSTALL\" && [ -d \"$GG_ROOT_DIR\" ]; then\n+  echo \"Attempting fresh install. This will delete existing directory: $GG_ROOT_DIR\"\n+  read -r -p \"Are you sure (y/n)?\" choice\n+  case \"$choice\" in\n+    y|Y ) rm -rf \"$GG_ROOT_DIR\";;\n+    n|N ) echo \"Aborted.\";;\n+  esac\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  sudo bash \"$CLI_DIR/install.sh\" || { echo 'Install failed. cannot install CLI'; exit 1; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5619bd18eb19f441c5a4dceda974d6dd26c5231"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2MTY4Mw==", "bodyText": "add an echo \"You can now start Greengrass\", since your script isn't starting it up, it may be a bit confusing.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499761683", "createdAt": "2020-10-05T17:33:52Z", "author": {"login": "MikeDombo"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# make sure required file/directory exist\n+for i in $NUCLEUS_ZIP $CLI_ZIP $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Install failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -r|--root)\n+    GG_ROOT_DIR=$2\n+    HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+    shift\n+    ;;\n+    -f|--fresh-install)\n+    FRESH_INSTALL=true\n+    shift\n+    ;;\n+  esac\n+done\n+\n+# unzip\n+(unzip $CLI_ZIP && unzip $NUCLEUS_ZIP) || { echo \"Install failed. Cannot unzip\"; exit 1; }\n+\n+# remove existing installation if requested\n+if \"$FRESH_INSTALL\" && [ -d \"$GG_ROOT_DIR\" ]; then\n+  echo \"Attempting fresh install. This will delete existing directory: $GG_ROOT_DIR\"\n+  read -r -p \"Are you sure (y/n)?\" choice\n+  case \"$choice\" in\n+    y|Y ) rm -rf \"$GG_ROOT_DIR\";;\n+    n|N ) echo \"Aborted.\";;\n+  esac\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  sudo bash \"$CLI_DIR/install.sh\" || { echo 'Install failed. cannot install CLI'; exit 1; }\n+else\n+  echo \"Greengrass CLI already installed\"\n+fi\n+\n+# copy over local dashboard jar\n+mkdir -p \"$HTTP_INSTALL_DIR\" || { echo 'Install failed. cannot create local dashboard directory'; exit 1; }\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+echo \"local dashboard installed\"\n+\n+echo \"Installation complete\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5619bd18eb19f441c5a4dceda974d6dd26c5231"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74d4350675898ecf91c61b97b7b9e38ef81aafdc", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/74d4350675898ecf91c61b97b7b9e38ef81aafdc", "committedDate": "2020-10-05T20:43:19Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5998acaf9d44139bb0a45279c24f2f130d6432c", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b5998acaf9d44139bb0a45279c24f2f130d6432c", "committedDate": "2020-10-05T20:47:23Z", "message": "Merge branch 'master' into beta-script-tc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDE4MTM0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-502418134", "createdAt": "2020-10-05T21:02:10Z", "commit": {"oid": "b5998acaf9d44139bb0a45279c24f2f130d6432c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMTowMjoxMFrOHctrug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMTowNTowNFrOHctw9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MDY1MA==", "bodyText": "Maybe want to give them the command to run or -h to display a set of options for bootstrapping.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499870650", "createdAt": "2020-10-05T21:02:10Z", "author": {"login": "philcali"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,84 @@\n+#!/bin/sh\n+# If no options provided, will unzip and install the CLI and local dashboard\n+#\n+# OPTIONS\n+# [-r|--root] <root dir>: specify Greengrass root directory for installation\n+# [-f|--fresh-install]: delete previous Greengrass installation if exists\n+# [-ld|--launch-default]: after install, launch Greengrass with default params for provision and running\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+LAUNCH_WITH_DEFAULT=false\n+AWS_REGION=\"us-east-1\"\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# make sure required file/directory exist\n+for i in $NUCLEUS_ZIP $CLI_ZIP $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Install failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -r|--root)\n+    GG_ROOT_DIR=$2\n+    HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+    shift\n+    ;;\n+    -f|--fresh-install)\n+    FRESH_INSTALL=true\n+    shift\n+    ;;\n+    -ld|--launch-default)\n+    LAUNCH_WITH_DEFAULT=true\n+    shift\n+    ;;\n+  esac\n+done\n+\n+# unzip\n+(unzip $CLI_ZIP && unzip $NUCLEUS_ZIP) || { echo \"Install failed. Cannot unzip\"; exit 1; }\n+\n+# remove existing installation if requested\n+if \"$FRESH_INSTALL\" && [ -d \"$GG_ROOT_DIR\" ]; then\n+  echo \"Attempting fresh install. This will delete the existing directory: $GG_ROOT_DIR\"\n+  echo \"Are you sure (y/n)?\"\n+  read -r choice\n+  case \"$choice\" in\n+    y|Y) rm -rf \"$GG_ROOT_DIR\";;\n+    *) echo \"Aborted.\";;\n+  esac\n+fi\n+\n+# install CLI if not already\n+if type 'greengrass-cli' > /dev/null 2>&1; then\n+  echo \"Greengrass CLI already installed\"\n+else\n+  echo \"Installing Greengrass CLI\"\n+  sudo ./\"$CLI_DIR/install.sh\" || { echo 'Install failed. cannot install CLI'; exit 1; }\n+fi\n+\n+# copy over local dashboard jar\n+mkdir -p \"$HTTP_INSTALL_DIR\" || { echo 'Install failed. cannot create local dashboard directory'; exit 1; }\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+echo \"local dashboard installed\"\n+\n+echo \"Installation complete. Installed at: $GG_ROOT_DIR\"\n+\n+if \"$LAUNCH_WITH_DEFAULT\"; then\n+  echo \"Starting Greengrass\"\n+  java -Droot=\"$GG_ROOT_DIR\" -Dlog.store=FILE -jar lib/Greengrass.jar \\\n+    --aws-region \"$AWS_REGION\" --provision true --setup-tes true\n+else\n+  echo \"You can now start Greengrass\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5998acaf9d44139bb0a45279c24f2f130d6432c"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MTk4OA==", "bodyText": "Should this be changed now to avoid a change very soon? Can we bypass this decision by looking 2 directories deep?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499871988", "createdAt": "2020-10-05T21:05:04Z", "author": {"login": "philcali"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,84 @@\n+#!/bin/sh\n+# If no options provided, will unzip and install the CLI and local dashboard\n+#\n+# OPTIONS\n+# [-r|--root] <root dir>: specify Greengrass root directory for installation\n+# [-f|--fresh-install]: delete previous Greengrass installation if exists\n+# [-ld|--launch-default]: after install, launch Greengrass with default params for provision and running\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+LAUNCH_WITH_DEFAULT=false\n+AWS_REGION=\"us-east-1\"\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5998acaf9d44139bb0a45279c24f2f130d6432c"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDc2MzEx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-502476311", "createdAt": "2020-10-05T22:57:12Z", "commit": {"oid": "b5998acaf9d44139bb0a45279c24f2f130d6432c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo1NzoxM1rOHcwctA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo1NzoxM1rOHcwctA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNTk1Ng==", "bodyText": "Should this be sudo?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499915956", "createdAt": "2020-10-05T22:57:13Z", "author": {"login": "MikeDombo"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,84 @@\n+#!/bin/sh\n+# If no options provided, will unzip and install the CLI and local dashboard\n+#\n+# OPTIONS\n+# [-r|--root] <root dir>: specify Greengrass root directory for installation\n+# [-f|--fresh-install]: delete previous Greengrass installation if exists\n+# [-ld|--launch-default]: after install, launch Greengrass with default params for provision and running\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+LAUNCH_WITH_DEFAULT=false\n+AWS_REGION=\"us-east-1\"\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# make sure required file/directory exist\n+for i in $NUCLEUS_ZIP $CLI_ZIP $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Install failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -r|--root)\n+    GG_ROOT_DIR=$2\n+    HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+    shift\n+    ;;\n+    -f|--fresh-install)\n+    FRESH_INSTALL=true\n+    shift\n+    ;;\n+    -ld|--launch-default)\n+    LAUNCH_WITH_DEFAULT=true\n+    shift\n+    ;;\n+  esac\n+done\n+\n+# unzip\n+(unzip $CLI_ZIP && unzip $NUCLEUS_ZIP) || { echo \"Install failed. Cannot unzip\"; exit 1; }\n+\n+# remove existing installation if requested\n+if \"$FRESH_INSTALL\" && [ -d \"$GG_ROOT_DIR\" ]; then\n+  echo \"Attempting fresh install. This will delete the existing directory: $GG_ROOT_DIR\"\n+  echo \"Are you sure (y/n)?\"\n+  read -r choice\n+  case \"$choice\" in\n+    y|Y) rm -rf \"$GG_ROOT_DIR\";;\n+    *) echo \"Aborted.\";;\n+  esac\n+fi\n+\n+# install CLI if not already\n+if type 'greengrass-cli' > /dev/null 2>&1; then\n+  echo \"Greengrass CLI already installed\"\n+else\n+  echo \"Installing Greengrass CLI\"\n+  sudo ./\"$CLI_DIR/install.sh\" || { echo 'Install failed. cannot install CLI'; exit 1; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5998acaf9d44139bb0a45279c24f2f130d6432c"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c597c7df806e3dd95011a4eda4c2d5f0c0d0f2c9", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c597c7df806e3dd95011a4eda4c2d5f0c0d0f2c9", "committedDate": "2020-10-05T23:57:19Z", "message": "Update install-beta.sh"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6138ca552f48dc0d1dc70a1ab7e102bcae27e3d", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f6138ca552f48dc0d1dc70a1ab7e102bcae27e3d", "committedDate": "2020-10-06T15:14:58Z", "message": "Merge branch 'master' into beta-script-tc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTY3NjYx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-503167661", "createdAt": "2020-10-06T16:49:58Z", "commit": {"oid": "f6138ca552f48dc0d1dc70a1ab7e102bcae27e3d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjo0OTo1OVrOHdQ-qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjo1MDozN1rOHdRAVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0ODkzOQ==", "bodyText": "Sure. I guess that's fine.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r500448939", "createdAt": "2020-10-06T16:49:59Z", "author": {"login": "philcali"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,84 @@\n+#!/bin/sh\n+# If no options provided, will unzip and install the CLI and local dashboard\n+#\n+# OPTIONS\n+# [-r|--root] <root dir>: specify Greengrass root directory for installation\n+# [-f|--fresh-install]: delete previous Greengrass installation if exists\n+# [-ld|--launch-default]: after install, launch Greengrass with default params for provision and running\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+LAUNCH_WITH_DEFAULT=false\n+AWS_REGION=\"us-east-1\"\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# make sure required file/directory exist\n+for i in $NUCLEUS_ZIP $CLI_ZIP $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Install failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -r|--root)\n+    GG_ROOT_DIR=$2\n+    HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+    shift\n+    ;;\n+    -f|--fresh-install)\n+    FRESH_INSTALL=true\n+    shift\n+    ;;\n+    -ld|--launch-default)\n+    LAUNCH_WITH_DEFAULT=true\n+    shift\n+    ;;\n+  esac\n+done\n+\n+# unzip\n+(unzip $CLI_ZIP && unzip $NUCLEUS_ZIP) || { echo \"Install failed. Cannot unzip\"; exit 1; }\n+\n+# remove existing installation if requested\n+if \"$FRESH_INSTALL\" && [ -d \"$GG_ROOT_DIR\" ]; then\n+  echo \"Attempting fresh install. This will delete the existing directory: $GG_ROOT_DIR\"\n+  echo \"Are you sure (y/n)?\"\n+  read -r choice\n+  case \"$choice\" in\n+    y|Y) rm -rf \"$GG_ROOT_DIR\";;\n+    *) echo \"Aborted.\";;\n+  esac\n+fi\n+\n+# install CLI if not already\n+if type 'greengrass-cli' > /dev/null 2>&1; then\n+  echo \"Greengrass CLI already installed\"\n+else\n+  echo \"Installing Greengrass CLI\"\n+  sudo ./\"$CLI_DIR/install.sh\" || { echo 'Install failed. cannot install CLI'; exit 1; }\n+fi\n+\n+# copy over local dashboard jar\n+mkdir -p \"$HTTP_INSTALL_DIR\" || { echo 'Install failed. cannot create local dashboard directory'; exit 1; }\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+echo \"local dashboard installed\"\n+\n+echo \"Installation complete. Installed at: $GG_ROOT_DIR\"\n+\n+if \"$LAUNCH_WITH_DEFAULT\"; then\n+  echo \"Starting Greengrass\"\n+  java -Droot=\"$GG_ROOT_DIR\" -Dlog.store=FILE -jar lib/Greengrass.jar \\\n+    --aws-region \"$AWS_REGION\" --provision true --setup-tes true\n+else\n+  echo \"You can now start Greengrass\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MDY1MA=="}, "originalCommit": {"oid": "b5998acaf9d44139bb0a45279c24f2f130d6432c"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0OTM2NQ==", "bodyText": "Probably not worth fixing right now since the docs will need updating as well.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r500449365", "createdAt": "2020-10-06T16:50:37Z", "author": {"login": "philcali"}, "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,84 @@\n+#!/bin/sh\n+# If no options provided, will unzip and install the CLI and local dashboard\n+#\n+# OPTIONS\n+# [-r|--root] <root dir>: specify Greengrass root directory for installation\n+# [-f|--fresh-install]: delete previous Greengrass installation if exists\n+# [-ld|--launch-default]: after install, launch Greengrass with default params for provision and running\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+LAUNCH_WITH_DEFAULT=false\n+AWS_REGION=\"us-east-1\"\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MTk4OA=="}, "originalCommit": {"oid": "b5998acaf9d44139bb0a45279c24f2f130d6432c"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTcxNjkz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#pullrequestreview-503171693", "createdAt": "2020-10-06T16:54:52Z", "commit": {"oid": "f6138ca552f48dc0d1dc70a1ab7e102bcae27e3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84608303fd7b646c918e0dbb897ea6de94591167", "author": {"user": {"login": "tilo-chen", "name": "Tiangang (Tilo) Chen"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/84608303fd7b646c918e0dbb897ea6de94591167", "committedDate": "2020-10-06T17:51:59Z", "message": "Merge branch 'master' into beta-script-tc"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3262, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}