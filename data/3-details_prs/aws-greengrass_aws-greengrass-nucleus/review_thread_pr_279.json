{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMjk3NTU5", "number": 279, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowMzo1NlrOEE1E-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDo1Mjo0MlrOEE2HlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk5Mzg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowMzo1NlrOGisrpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowMzo1NlrOGisrpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzNjgzNw==", "bodyText": "just use lombok?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439036837", "createdAt": "2020-06-11T20:03:56Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.aws.iot.evergreen.deployment.DeploymentTask;\n+import lombok.Data;\n+import lombok.NonNull;\n+\n+import java.util.concurrent.Future;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+@Data\n+public class DeploymentTaskMetadata {\n+    private DeploymentTask deploymentTask;\n+    private Future<DeploymentResult> deploymentProcess;\n+    private String deploymentId;\n+    private Deployment.DeploymentType deploymentType;\n+    private AtomicInteger deploymentAttemptCount;\n+\n+    /**\n+     * Constructor.\n+     * @param deploymentTask {@link DeploymentTask} created for the deployment\n+     * @param deploymentProcess Future returned from the executor service starting the deployment\n+     * @param deploymentId deployment identifier\n+     * @param deploymentType {@link com.aws.iot.evergreen.deployment.model.Deployment.DeploymentType}\n+     * @param deploymentAttemptCount number of times this deployment has been attempted. Deployment is attempted\n+     *                               again in case of\n+     *                      {@link com.aws.iot.evergreen.deployment.exceptions.RetryableDeploymentTaskFailureException}\n+     */\n+    public DeploymentTaskMetadata(@NonNull DeploymentTask deploymentTask,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a5d47027bea335c2ad805288e97469064247638"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAzNTAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMzo0M1rOGitFbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDozOToyMVrOGiuAIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MzQzOA==", "bodyText": "Can we make all r/w operations to currentDeploymentTaskMetadata atomic?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439043438", "createdAt": "2020-06-11T20:13:43Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -82,16 +84,7 @@\n     @Inject\n     private Kernel kernel;\n \n-    @Getter\n-    private Future<DeploymentResult> currentProcessStatus = null;\n-\n-    // This is very likely not thread safe. If the Deployment Service is split into multiple threads in a re-design\n-    // as mentioned in some other comments, this will need an update as well\n-    private String currentDeploymentId = null;\n-    private Deployment.DeploymentType currentDeploymentType = null;\n-\n-    private final AtomicInteger currentJobAttemptCount = new AtomicInteger(0);\n-    private DeploymentTask currentDeploymentTask = null;\n+    private DeploymentTaskMetadata currentDeploymentTaskMetadata = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a5d47027bea335c2ad805288e97469064247638"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0NDI3OA==", "bodyText": "Also is currentDeploymentTaskMetadata going to be persisted if deployment service or kernel restarts?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439044278", "createdAt": "2020-06-11T20:14:51Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -82,16 +84,7 @@\n     @Inject\n     private Kernel kernel;\n \n-    @Getter\n-    private Future<DeploymentResult> currentProcessStatus = null;\n-\n-    // This is very likely not thread safe. If the Deployment Service is split into multiple threads in a re-design\n-    // as mentioned in some other comments, this will need an update as well\n-    private String currentDeploymentId = null;\n-    private Deployment.DeploymentType currentDeploymentType = null;\n-\n-    private final AtomicInteger currentJobAttemptCount = new AtomicInteger(0);\n-    private DeploymentTask currentDeploymentTask = null;\n+    private DeploymentTaskMetadata currentDeploymentTaskMetadata = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MzQzOA=="}, "originalCommit": {"oid": "4a5d47027bea335c2ad805288e97469064247638"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1ODQ2NA==", "bodyText": "+1 Maybe just have an AtomicReference for the metadata variable", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439058464", "createdAt": "2020-06-11T20:39:21Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -82,16 +84,7 @@\n     @Inject\n     private Kernel kernel;\n \n-    @Getter\n-    private Future<DeploymentResult> currentProcessStatus = null;\n-\n-    // This is very likely not thread safe. If the Deployment Service is split into multiple threads in a re-design\n-    // as mentioned in some other comments, this will need an update as well\n-    private String currentDeploymentId = null;\n-    private Deployment.DeploymentType currentDeploymentType = null;\n-\n-    private final AtomicInteger currentJobAttemptCount = new AtomicInteger(0);\n-    private DeploymentTask currentDeploymentTask = null;\n+    private DeploymentTaskMetadata currentDeploymentTaskMetadata = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MzQzOA=="}, "originalCommit": {"oid": "4a5d47027bea335c2ad805288e97469064247638"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTE0MDY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDo0NDoxOVrOGiuJPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDo0NDoxOVrOGiuJPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2MDc5OA==", "bodyText": "nit- currentDeploymentTaskMetadata.getDeploymentId(deployment.getId()) will be more null safe", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439060798", "createdAt": "2020-06-11T20:44:19Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -156,26 +149,30 @@ public void startup() throws InterruptedException {\n         logger.info(\"Running deployment service\");\n \n         while (!receivedShutdown.get()) {\n-            if (currentProcessStatus != null && currentProcessStatus.isDone()) {\n+            if (currentDeploymentTaskMetadata != null && currentDeploymentTaskMetadata.getDeploymentProcess()\n+                    .isDone()) {\n                 finishCurrentDeployment();\n             }\n             //Cannot wait on queue because need to listen to queue as well as the currentProcessStatus future.\n             //One thread cannot wait on both. If we want to make this completely event driven then we need to put\n             // the waiting on currentProcessStatus in its own thread. I currently choose to not do this.\n             Deployment deployment = deploymentsQueue.peek();\n             if (deployment != null) {\n-                if (currentDeploymentType != null && !deployment.getDeploymentType().equals(currentDeploymentType)) {\n+                if (currentDeploymentTaskMetadata != null && !deployment.getDeploymentType()\n+                        .equals(currentDeploymentTaskMetadata.getDeploymentType())) {\n                     // deployment from another source, wait till the current deployment finish\n                     continue;\n                 }\n-                if (currentDeploymentId != null && currentDeploymentType != null) {\n-                    if (deployment.getId().equals(currentDeploymentId) && deployment.getDeploymentType()\n-                            .equals(currentDeploymentType)) {\n+                if (currentDeploymentTaskMetadata != null\n+                        && currentDeploymentTaskMetadata.getDeploymentType() != null) {\n+                    if (deployment.getId().equals(currentDeploymentTaskMetadata.getDeploymentId()) && deployment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a5d47027bea335c2ad805288e97469064247638"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTE1MTI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDo0ODowOVrOGiuQEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDo0ODowOVrOGiuQEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2MjU0Ng==", "bodyText": "This seems unused", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439062546", "createdAt": "2020-06-11T20:48:09Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentService.java", "diffHunk": "@@ -46,6 +47,7 @@\n public class DeploymentService extends EvergreenService {\n \n     public static final String DEPLOYMENT_SERVICE_TOPICS = \"DeploymentService\";\n+    public static final String GROUP_TO_ROOT_PACKAGES_TOPICS = \"GroupToRootPackages\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a5d47027bea335c2ad805288e97469064247638"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTE2NDM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDo1Mjo0MlrOGiuYTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDo1Mjo0MlrOGiuYTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2NDY1Mg==", "bodyText": "nit - Does this need all of @DaTa? if not it's too much generated code and I'm not sure there should be setters for things like deploymentType or deploymentId", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/279#discussion_r439064652", "createdAt": "2020-06-11T20:52:42Z", "author": {"login": "shaguptashaikh"}, "path": "src/main/java/com/aws/iot/evergreen/deployment/model/DeploymentTaskMetadata.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.aws.iot.evergreen.deployment.model;\n+\n+import com.aws.iot.evergreen.deployment.DeploymentTask;\n+import lombok.Data;\n+import lombok.NonNull;\n+\n+import java.util.concurrent.Future;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+@Data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a5d47027bea335c2ad805288e97469064247638"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4336, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}