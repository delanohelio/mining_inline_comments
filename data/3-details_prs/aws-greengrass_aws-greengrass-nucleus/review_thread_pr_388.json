{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNTU4OTQy", "number": 388, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzozNTo1OVrOEcUNjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODoyMTozOFrOEcsZbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MTI2NzMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzozNTo1OVrOHGxeJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzozNTo1OVrOHGxeJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2NDAzNw==", "bodyText": "Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.\nProblem: InterruptedException is ignored. This can delay thread shutdown and clear the thread\u2019s interrupt status. Only code that implements a thread\u2019s interruption policy can swallow an interruption request.\nFix: Rethrow the InterruptedException or reinterrupt the current thread using Thread.currentThread().interrupt() so that higher-level interrupt handlers can function correctly.\nIf you are wrapping the InterruptedException inside a RuntimeException, call Thread.currentThread().interrupt() before throwing the RuntimeException.\nLearn more about interrupts and dealing with InterruptedException", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r476864037", "createdAt": "2020-08-25T23:35:59Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java", "diffHunk": "@@ -35,7 +34,7 @@ public boolean setupSystemService(KernelAlternatives kernelAlternatives) {\n             runCommand(\"systemctl enable greengrass.service\");\n             logger.atInfo().log(\"Successfully set up systemd service\");\n             return true;\n-        } catch (IOException | InterruptedException | URISyntaxException e) {\n+        } catch (IOException | InterruptedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38d21719bd81e359f48c51554e79c67e8a4ad18c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTIyODI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelAlternatives.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODoyMTowOFrOHHYMFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTowMzo1M1rOHHZtpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5ODM5MQ==", "bodyText": "shouldn't this cause a bigger failure?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r477498391", "createdAt": "2020-08-26T18:21:08Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelAlternatives.java", "diffHunk": "@@ -65,6 +67,12 @@ public KernelAlternatives(Path kernelAltsPath) {\n         this.currentDir = kernelAltsPath.resolve(CURRENT_DIR).toAbsolutePath();\n         this.oldDir = kernelAltsPath.resolve(OLD_DIR).toAbsolutePath();\n         this.brokenDir = kernelAltsPath.resolve(BROKEN_DIR).toAbsolutePath();\n+\n+        try {\n+            setupInitLaunchDirIfAbsent();\n+        } catch (IOException e) {\n+            logger.atError().log(\"Unable to setup Kernel launch directory\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3525292c0cd615a2b1e06bc1d85b4af3972e22"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5OTI4Mg==", "bodyText": "I don't want to break all tests in this package or UATs for now. We can update the error handling later", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r477499282", "createdAt": "2020-08-26T18:22:43Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelAlternatives.java", "diffHunk": "@@ -65,6 +67,12 @@ public KernelAlternatives(Path kernelAltsPath) {\n         this.currentDir = kernelAltsPath.resolve(CURRENT_DIR).toAbsolutePath();\n         this.oldDir = kernelAltsPath.resolve(OLD_DIR).toAbsolutePath();\n         this.brokenDir = kernelAltsPath.resolve(BROKEN_DIR).toAbsolutePath();\n+\n+        try {\n+            setupInitLaunchDirIfAbsent();\n+        } catch (IOException e) {\n+            logger.atError().log(\"Unable to setup Kernel launch directory\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5ODM5MQ=="}, "originalCommit": {"oid": "9d3525292c0cd615a2b1e06bc1d85b4af3972e22"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5OTU5Mg==", "bodyText": "Besides kernel update, not other tests rely on this setup", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r477499592", "createdAt": "2020-08-26T18:23:19Z", "author": {"login": "hui-yang"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelAlternatives.java", "diffHunk": "@@ -65,6 +67,12 @@ public KernelAlternatives(Path kernelAltsPath) {\n         this.currentDir = kernelAltsPath.resolve(CURRENT_DIR).toAbsolutePath();\n         this.oldDir = kernelAltsPath.resolve(OLD_DIR).toAbsolutePath();\n         this.brokenDir = kernelAltsPath.resolve(BROKEN_DIR).toAbsolutePath();\n+\n+        try {\n+            setupInitLaunchDirIfAbsent();\n+        } catch (IOException e) {\n+            logger.atError().log(\"Unable to setup Kernel launch directory\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5ODM5MQ=="}, "originalCommit": {"oid": "9d3525292c0cd615a2b1e06bc1d85b4af3972e22"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyMzM2Ng==", "bodyText": "Just random thought, Maybe kernel can have an option to run as a daemon (when started by loader script), or run as fore-ground process. In daemon mode, file structure setup is required. In fore-ground process file structure setup isn't needed, but fg process kernel can't handle updates that needs to restart kernel.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r477523366", "createdAt": "2020-08-26T19:03:53Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelAlternatives.java", "diffHunk": "@@ -65,6 +67,12 @@ public KernelAlternatives(Path kernelAltsPath) {\n         this.currentDir = kernelAltsPath.resolve(CURRENT_DIR).toAbsolutePath();\n         this.oldDir = kernelAltsPath.resolve(OLD_DIR).toAbsolutePath();\n         this.brokenDir = kernelAltsPath.resolve(BROKEN_DIR).toAbsolutePath();\n+\n+        try {\n+            setupInitLaunchDirIfAbsent();\n+        } catch (IOException e) {\n+            logger.atError().log(\"Unable to setup Kernel launch directory\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5ODM5MQ=="}, "originalCommit": {"oid": "9d3525292c0cd615a2b1e06bc1d85b4af3972e22"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTIyOTkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelAlternatives.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODoyMTozOFrOHHYNHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODoyMTozOFrOHHYNHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5ODY1Mw==", "bodyText": "remove `", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r477498653", "createdAt": "2020-08-26T18:21:38Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelAlternatives.java", "diffHunk": "@@ -100,27 +108,43 @@ public boolean isLaunchDirSetup() {\n      * @throws IOException on I/O error\n      * @throws URISyntaxException if unable to determine source path of the Jar file\n      */\n-    public void setupInitLaunchDirIfAbsent() throws IOException, URISyntaxException {\n+    public void setupInitLaunchDirIfAbsent() throws IOException {\n         if (isLaunchDirSetup()) {\n             return;\n         }\n+        Path unpackDir;\n+        try {\n+            unpackDir = locateCurrentKernelUnpackDir();\n+        } catch (IOException | URISyntaxException e) {\n+            logger.atError().log(\"Unable to setup Kernel launch directory\", e);\n+            return;\n+        }\n         Path initialLaunchDir = altsDir.resolve(INITIAL_SETUP_DIR);\n         Utils.createPaths(initialLaunchDir);\n \n-        setupLinkToDirectory(initialLaunchDir.resolve(KERNEL_DISTRIBUTION_DIR), locateCurrentKernelUnpackDir());\n+        setupLinkToDirectory(initialLaunchDir.resolve(KERNEL_DISTRIBUTION_DIR), unpackDir);\n         setupLinkToDirectory(currentDir, initialLaunchDir);\n     }\n \n+    /**\n+     * Locate launch directory of Kernel, assuming unpack directory tree as below.\n+     * \u251c\u2500\u2500 bin\n+     * \u2502   \u251c\u2500\u2500 greengrass.service\n+     * \u2502   \u2514\u2500\u2500 loader\n+     * \u2514\u2500\u2500 lib\n+     *     \u2514\u2500\u2500 Evergreen.jar\n+     */\n+    @SuppressFBWarnings(value = \"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\", justification = \"Spotbugs false positive\")\n     private Path locateCurrentKernelUnpackDir() throws IOException, URISyntaxException {\n-        // TODO: validate file directory tree. Assuming unpackDir/lib/kernel.jar for now\n         Path parentDir = new File(KernelAlternatives.class.getProtectionDomain().getCodeSource().getLocation()\n                 .toURI()).toPath().getParent();\n-        if (parentDir == null || ! Files.exists(parentDir)) {\n+        if (parentDir == null || ! Files.exists(parentDir)\n+                || parentDir.getFileName() != null && !KERNEL_LIB_DIR.equals(parentDir.getFileName().toString())) {\n             throw new IOException(\"Unable to locate the parent directory of Kernel Jar file\");\n         }\n         Path unpackDir = parentDir.getParent();\n-        if (unpackDir == null || ! Files.exists(unpackDir)) {\n-            throw new IOException(\"Unable to locate the unpack directory of Kernel artifacts\");\n+        if (unpackDir == null || ! Files.exists(unpackDir) || !Files.isDirectory(unpackDir.resolve(KERNEL_BIN_DIR))) {\n+            throw new IOException(\"Unable to locate the unpack directory of Kernel artifacts`\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3525292c0cd615a2b1e06bc1d85b4af3972e22"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 717, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}