{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNjY4MjIw", "number": 462, "title": "Adding retry for Iot Jobs subscriptions", "bodyText": "Issue #, if available:\nhttps://sim.amazon.com/issues/P39716490\nDescription of changes:\nAdding retry when subscriptions to IotJobs timeout\nWhy is this change necessary:\nHow was this change tested:\nAny additional information or context required to review the change:\nChecklist:\n\n Updated the README if applicable\n Updated or added new unit tests\n Updated or added new integration tests\n Updated or added new end-to-end tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-09-22T03:27:11Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462", "merged": true, "mergeCommit": {"oid": "8d0cc0b2897e60dc7eed21fe9b2dcdf27188c69f"}, "closed": true, "closedAt": "2020-09-25T18:55:27Z", "author": {"login": "abanthiy"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLPaPBABqjM3OTEzMzIzNDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMaehoAH2gAyNDkwNjY4MjIwOjBkZTNjNmI0MWI1MjMyMzU3M2MzYzA5YTgzMDVmMmQ5YzQ2ZjU4M2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79f37de9713ac490fd4771863e4ba4bedb6985f5", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/79f37de9713ac490fd4771863e4ba4bedb6985f5", "committedDate": "2020-09-22T03:26:09Z", "message": "Adding retry for Iot Jobs subscriptions"}, "afterCommit": {"oid": "3bd40b83282b4854b3bb4602fe7866fe4d6054c0", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3bd40b83282b4854b3bb4602fe7866fe4d6054c0", "committedDate": "2020-09-22T03:27:27Z", "message": "Adding retry for Iot Jobs subscriptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTEwNTc0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#pullrequestreview-493110574", "createdAt": "2020-09-22T03:46:26Z", "commit": {"oid": "3bd40b83282b4854b3bb4602fe7866fe4d6054c0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMzo0NjoyNlrOHVpVqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMzo0NjoyNlrOHVpVqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ1OTQzMg==", "bodyText": "shouldn't we literally try forever as long as they have configured a cloud connection (certs)?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#discussion_r492459432", "createdAt": "2020-09-22T03:46:26Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/IotJobsHelper.java", "diffHunk": "@@ -402,15 +407,30 @@ public void requestNextPendingJobDocument() {\n      * @throws ConnectionUnavailableException When connection to cloud is not available\n      *\n      */\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     public void subscribeToJobsTopics()   {\n+        BaseRetryableAccessor retryableAccessor = new BaseRetryableAccessor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd40b83282b4854b3bb4602fe7866fe4d6054c0"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bd40b83282b4854b3bb4602fe7866fe4d6054c0", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3bd40b83282b4854b3bb4602fe7866fe4d6054c0", "committedDate": "2020-09-22T03:27:27Z", "message": "Adding retry for Iot Jobs subscriptions"}, "afterCommit": {"oid": "f1fa868c5417b01afbdf74e3b87be4403fca6488", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f1fa868c5417b01afbdf74e3b87be4403fca6488", "committedDate": "2020-09-22T21:38:31Z", "message": "Adding retry for Iot Jobs subscriptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzODkwMjA2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#pullrequestreview-493890206", "createdAt": "2020-09-22T22:29:28Z", "commit": {"oid": "f1fa868c5417b01afbdf74e3b87be4403fca6488"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjoyOToyOFrOHWOj-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjoyOToyOFrOHWOj-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2OTMwNQ==", "bodyText": "can this be package-private?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#discussion_r493069305", "createdAt": "2020-09-22T22:29:28Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/IotJobsHelper.java", "diffHunk": "@@ -129,6 +139,8 @@\n \n     private IotJobsClient iotJobsClient;\n     private MqttClientConnection connection;\n+    @Setter // For tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fa868c5417b01afbdf74e3b87be4403fca6488"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1fa868c5417b01afbdf74e3b87be4403fca6488", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f1fa868c5417b01afbdf74e3b87be4403fca6488", "committedDate": "2020-09-22T21:38:31Z", "message": "Adding retry for Iot Jobs subscriptions"}, "afterCommit": {"oid": "54c9dc0873ca8aa6ab15c8fa09f23e7b9cb8c637", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/54c9dc0873ca8aa6ab15c8fa09f23e7b9cb8c637", "committedDate": "2020-09-22T22:42:37Z", "message": "Adding retry for Iot Jobs subscriptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzODk2MDg5", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#pullrequestreview-493896089", "createdAt": "2020-09-22T22:43:18Z", "commit": {"oid": "f1fa868c5417b01afbdf74e3b87be4403fca6488"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjo0Mzo0N1rOHWO4Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjo0Mzo0N1rOHWO4Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3NDQ3NA==", "bodyText": "Can the recursive call cause stack overflow eventually in extreme cases? Let's say if the device is offline for a month, then the stack can be filled up, right?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#discussion_r493074474", "createdAt": "2020-09-22T22:43:47Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/deployment/IotJobsHelper.java", "diffHunk": "@@ -463,10 +452,41 @@ protected void subscribeToGetNextJobDescription(Consumer<DescribeJobExecutionRes\n             subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n             logger.atInfo().log(\"Subscribed to deployment job execution update.\");\n         } catch (ExecutionException e) {\n-            unwrapExecutionException(e);\n+            Throwable cause = e.getCause();\n+            if (cause instanceof MqttException || cause instanceof TimeoutException) {\n+                //TODO: If network is not available then it will throw MqttException\n+                // If there is any other problem like thingName is not specified in the request then also\n+                // it throws Mqtt exception. This can be identified based on error code. Currently error code is not\n+                // exposed. Will make required change in CRT package to expose the error code and then update this\n+                logger.atWarn().setCause(cause).log(SUBSCRIPTION_JOB_DESCRIPTION_RETRY_MESSAGE);\n+                waitAndRetrySubscribingToJobDescriptionTopic();\n+            }\n+            if (cause instanceof InterruptedException) {\n+                logger.atWarn().log(SUBSCRIPTION_JOB_DESCRIPTION_INTERRUPTED);\n+                return;\n+            }\n+        } catch (TimeoutException e) {\n+            logger.atWarn().setCause(e).log(SUBSCRIPTION_JOB_DESCRIPTION_RETRY_MESSAGE);\n+            waitAndRetrySubscribingToJobDescriptionTopic();\n+        } catch (InterruptedException e) {\n+            logger.atWarn().log(SUBSCRIPTION_JOB_DESCRIPTION_INTERRUPTED);\n         }\n     }\n \n+    private void waitAndRetrySubscribingToJobDescriptionTopic() {\n+        try {\n+            // Wait for sometime and then try to subscribe again\n+            Random jitter = new Random();\n+            Thread.sleep(waitTimeToSubscribeAgain + jitter.nextInt(10_000));\n+        } catch (InterruptedException interruptedException) {\n+            logger.atWarn().log(\"Interrupted while subscribing to Iot jobs topics\");\n+            return;\n+        }\n+        subscribeToGetNextJobDescription(describeJobExecutionResponseConsumer, rejectedError -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c9dc0873ca8aa6ab15c8fa09f23e7b9cb8c637"}, "originalPosition": 138}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54c9dc0873ca8aa6ab15c8fa09f23e7b9cb8c637", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/54c9dc0873ca8aa6ab15c8fa09f23e7b9cb8c637", "committedDate": "2020-09-22T22:42:37Z", "message": "Adding retry for Iot Jobs subscriptions"}, "afterCommit": {"oid": "c7042d1703309181ff98d5855f01d007e56056ac", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c7042d1703309181ff98d5855f01d007e56056ac", "committedDate": "2020-09-22T23:52:08Z", "message": "Adding retry for Iot Jobs subscriptions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7042d1703309181ff98d5855f01d007e56056ac", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c7042d1703309181ff98d5855f01d007e56056ac", "committedDate": "2020-09-22T23:52:08Z", "message": "Adding retry for Iot Jobs subscriptions"}, "afterCommit": {"oid": "8199d8cb3ce8396a3b27cff14302363bd13371a3", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8199d8cb3ce8396a3b27cff14302363bd13371a3", "committedDate": "2020-09-23T02:39:15Z", "message": "Adding retry for Iot Jobs subscriptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODM0NzA3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#pullrequestreview-494834707", "createdAt": "2020-09-23T16:22:09Z", "commit": {"oid": "8199d8cb3ce8396a3b27cff14302363bd13371a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjoyMjowOVrOHW2kPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjoyMjowOVrOHW2kPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcyNDczMg==", "bodyText": "sleep before retrying?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#discussion_r493724732", "createdAt": "2020-09-23T16:22:09Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/IotJobsHelper.java", "diffHunk": "@@ -445,25 +435,45 @@ public void subscribeToJobsTopics()   {\n      * @throws TimeoutException     if the operation does not complete within the given time\n      */\n     protected void subscribeToGetNextJobDescription(Consumer<DescribeJobExecutionResponse> consumerAccept,\n-                                                    Consumer<RejectedError> consumerReject)\n-            throws ExecutionException, InterruptedException, TimeoutException {\n+                                                    Consumer<RejectedError> consumerReject) {\n \n-        logger.atInfo().log(\"Subscribing to deployment job execution update.\");\n+        logger.atDebug().log(\"Subscribing to deployment job execution update.\");\n         DescribeJobExecutionSubscriptionRequest describeJobExecutionSubscriptionRequest =\n                 new DescribeJobExecutionSubscriptionRequest();\n         describeJobExecutionSubscriptionRequest.thingName = Coerce.toString(deviceConfiguration.getThingName());\n         describeJobExecutionSubscriptionRequest.jobId = \"$next\";\n-        CompletableFuture<Integer> subscribed = iotJobsClient\n-                .SubscribeToDescribeJobExecutionAccepted(describeJobExecutionSubscriptionRequest,\n-                        QualityOfService.AT_LEAST_ONCE, consumerAccept);\n-        try {\n-            subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n-            subscribed = iotJobsClient.SubscribeToDescribeJobExecutionRejected(describeJobExecutionSubscriptionRequest,\n-                    QualityOfService.AT_LEAST_ONCE, consumerReject);\n-            subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n-            logger.atInfo().log(\"Subscribed to deployment job execution update.\");\n-        } catch (ExecutionException e) {\n-            unwrapExecutionException(e);\n+\n+        while (true) {\n+            CompletableFuture<Integer> subscribed = iotJobsClient\n+                    .SubscribeToDescribeJobExecutionAccepted(describeJobExecutionSubscriptionRequest,\n+                            QualityOfService.AT_LEAST_ONCE, consumerAccept);\n+            try {\n+                subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n+                subscribed = iotJobsClient\n+                        .SubscribeToDescribeJobExecutionRejected(describeJobExecutionSubscriptionRequest,\n+                                QualityOfService.AT_LEAST_ONCE, consumerReject);\n+                subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n+                logger.atInfo().log(\"Subscribed to deployment job execution update.\");\n+                break;\n+            } catch (ExecutionException e) {\n+                Throwable cause = e.getCause();\n+                if (cause instanceof MqttException || cause instanceof TimeoutException) {\n+                    //TODO: If network is not available then it will throw MqttException\n+                    // If there is any other problem like thingName is not specified in the request then also\n+                    // it throws Mqtt exception. This can be identified based on error code. Currently error code is not\n+                    // exposed. Will make required change in CRT package to expose the error code and then update this\n+                    logger.atWarn().setCause(cause).log(SUBSCRIPTION_JOB_DESCRIPTION_RETRY_MESSAGE);\n+                }\n+                if (cause instanceof InterruptedException) {\n+                    logger.atWarn().log(SUBSCRIPTION_JOB_DESCRIPTION_INTERRUPTED);\n+                    break;\n+                }\n+            } catch (TimeoutException e) {\n+                logger.atWarn().setCause(e).log(SUBSCRIPTION_JOB_DESCRIPTION_RETRY_MESSAGE);\n+            } catch (InterruptedException e) {\n+                logger.atWarn().log(SUBSCRIPTION_JOB_DESCRIPTION_INTERRUPTED);\n+                break;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8199d8cb3ce8396a3b27cff14302363bd13371a3"}, "originalPosition": 146}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODM1MTkx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#pullrequestreview-494835191", "createdAt": "2020-09-23T16:22:42Z", "commit": {"oid": "8199d8cb3ce8396a3b27cff14302363bd13371a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjoyMjo0M1rOHW2ltw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjoyMjo0M1rOHW2ltw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcyNTExMQ==", "bodyText": "just use an atomicinteger", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#discussion_r493725111", "createdAt": "2020-09-23T16:22:43Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/greengrass/deployment/IotJobsHelperTest.java", "diffHunk": "@@ -177,6 +183,68 @@ public void GIVEN_connected_to_iot_WHEN_subscribe_to_jobs_topics_THEN_get_notifi\n                 eq(QualityOfService.AT_LEAST_ONCE));\n     }\n \n+    @Test\n+    public void GIVEN_not_connected_to_iot_WHEN_subscribe_to_eventnotifications_topic_timesout_THEN_retry(ExtensionContext context)\n+            throws Exception {\n+        ignoreExceptionOfType(context, TimeoutException.class);\n+        CompletableFuture<Integer> integerCompletableFuture = CompletableFuture.completedFuture(1);\n+        CompletableFuture<Integer> exceptionallyCompletedFuture = new CompletableFuture<>();\n+        exceptionallyCompletedFuture.completeExceptionally(new TimeoutException());\n+        final int[] count = {0};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8199d8cb3ce8396a3b27cff14302363bd13371a3"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8199d8cb3ce8396a3b27cff14302363bd13371a3", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8199d8cb3ce8396a3b27cff14302363bd13371a3", "committedDate": "2020-09-23T02:39:15Z", "message": "Adding retry for Iot Jobs subscriptions"}, "afterCommit": {"oid": "3dc3ac1c9d770a0d7ab6e4776666e42d82774f7c", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3dc3ac1c9d770a0d7ab6e4776666e42d82774f7c", "committedDate": "2020-09-23T18:14:37Z", "message": "Adding retry for Iot Jobs subscriptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db85e2947bd343c8861b9671d8e7189e9e3eeb45", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/db85e2947bd343c8861b9671d8e7189e9e3eeb45", "committedDate": "2020-09-23T19:16:40Z", "message": "Adding retry for Iot Jobs subscriptions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3dc3ac1c9d770a0d7ab6e4776666e42d82774f7c", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3dc3ac1c9d770a0d7ab6e4776666e42d82774f7c", "committedDate": "2020-09-23T18:14:37Z", "message": "Adding retry for Iot Jobs subscriptions"}, "afterCommit": {"oid": "db85e2947bd343c8861b9671d8e7189e9e3eeb45", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/db85e2947bd343c8861b9671d8e7189e9e3eeb45", "committedDate": "2020-09-23T19:16:40Z", "message": "Adding retry for Iot Jobs subscriptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTc3MjMy", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#pullrequestreview-494977232", "createdAt": "2020-09-23T19:21:46Z", "commit": {"oid": "db85e2947bd343c8861b9671d8e7189e9e3eeb45"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ce2fb505609c434a214a54acd6a0af31c671db8", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1ce2fb505609c434a214a54acd6a0af31c671db8", "committedDate": "2020-09-23T20:15:26Z", "message": "Merge branch 'master' into retrySubscriptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDE0NDEz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#pullrequestreview-495014413", "createdAt": "2020-09-23T20:15:47Z", "commit": {"oid": "1ce2fb505609c434a214a54acd6a0af31c671db8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDU4Njcx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#pullrequestreview-495058671", "createdAt": "2020-09-23T21:22:47Z", "commit": {"oid": "1ce2fb505609c434a214a54acd6a0af31c671db8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMToyMjo0N1rOHXBdpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMToyMjo0N1rOHXBdpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMzI2OQ==", "bodyText": "Will this create a lot of warn logs?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#discussion_r493903269", "createdAt": "2020-09-23T21:22:47Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/deployment/IotJobsHelper.java", "diffHunk": "@@ -445,25 +435,54 @@ public void subscribeToJobsTopics()   {\n      * @throws TimeoutException     if the operation does not complete within the given time\n      */\n     protected void subscribeToGetNextJobDescription(Consumer<DescribeJobExecutionResponse> consumerAccept,\n-                                                    Consumer<RejectedError> consumerReject)\n-            throws ExecutionException, InterruptedException, TimeoutException {\n+                                                    Consumer<RejectedError> consumerReject) {\n \n-        logger.atInfo().log(\"Subscribing to deployment job execution update.\");\n+        logger.atDebug().log(\"Subscribing to deployment job execution update.\");\n         DescribeJobExecutionSubscriptionRequest describeJobExecutionSubscriptionRequest =\n                 new DescribeJobExecutionSubscriptionRequest();\n         describeJobExecutionSubscriptionRequest.thingName = Coerce.toString(deviceConfiguration.getThingName());\n         describeJobExecutionSubscriptionRequest.jobId = \"$next\";\n-        CompletableFuture<Integer> subscribed = iotJobsClient\n-                .SubscribeToDescribeJobExecutionAccepted(describeJobExecutionSubscriptionRequest,\n-                        QualityOfService.AT_LEAST_ONCE, consumerAccept);\n-        try {\n-            subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n-            subscribed = iotJobsClient.SubscribeToDescribeJobExecutionRejected(describeJobExecutionSubscriptionRequest,\n-                    QualityOfService.AT_LEAST_ONCE, consumerReject);\n-            subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n-            logger.atInfo().log(\"Subscribed to deployment job execution update.\");\n-        } catch (ExecutionException e) {\n-            unwrapExecutionException(e);\n+\n+        while (true) {\n+            CompletableFuture<Integer> subscribed = iotJobsClient\n+                    .SubscribeToDescribeJobExecutionAccepted(describeJobExecutionSubscriptionRequest,\n+                            QualityOfService.AT_LEAST_ONCE, consumerAccept);\n+            try {\n+                subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n+                subscribed = iotJobsClient\n+                        .SubscribeToDescribeJobExecutionRejected(describeJobExecutionSubscriptionRequest,\n+                                QualityOfService.AT_LEAST_ONCE, consumerReject);\n+                subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n+                logger.atInfo().log(\"Subscribed to deployment job execution update.\");\n+                break;\n+            } catch (ExecutionException e) {\n+                Throwable cause = e.getCause();\n+                if (cause instanceof MqttException || cause instanceof TimeoutException) {\n+                    //TODO: If network is not available then it will throw MqttException\n+                    // If there is any other problem like thingName is not specified in the request then also\n+                    // it throws Mqtt exception. This can be identified based on error code. Currently error code is not\n+                    // exposed. Will make required change in CRT package to expose the error code and then update this\n+                    logger.atWarn().setCause(cause).log(SUBSCRIPTION_JOB_DESCRIPTION_RETRY_MESSAGE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ce2fb505609c434a214a54acd6a0af31c671db8"}, "originalPosition": 135}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDU4OTM2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#pullrequestreview-495058936", "createdAt": "2020-09-23T21:23:15Z", "commit": {"oid": "1ce2fb505609c434a214a54acd6a0af31c671db8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMToyMzoxNVrOHXBeZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMToyMzoxNVrOHXBeZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMzQ2Mg==", "bodyText": "Same here. will this create a lot of warn logs? Maybe change it to debug?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#discussion_r493903462", "createdAt": "2020-09-23T21:23:15Z", "author": {"login": "fengwang666"}, "path": "src/main/java/com/aws/greengrass/deployment/IotJobsHelper.java", "diffHunk": "@@ -475,19 +494,48 @@ protected void subscribeToGetNextJobDescription(Consumer<DescribeJobExecutionRes\n      * @throws InterruptedException When this thread was interrupted\n      * @throws TimeoutException     if the operation does not complete within the given time\n      */\n-    protected void subscribeToEventNotifications(Consumer<JobExecutionsChangedEvent> eventHandler)\n-            throws ExecutionException, InterruptedException, TimeoutException {\n-        logger.atInfo().log(\"Subscribing to deployment job event notifications.\");\n+    protected void subscribeToEventNotifications(Consumer<JobExecutionsChangedEvent> eventHandler) {\n+\n+        logger.atDebug().log(\"Subscribing to deployment job event notifications.\");\n         JobExecutionsChangedSubscriptionRequest request = new JobExecutionsChangedSubscriptionRequest();\n         request.thingName = Coerce.toString(deviceConfiguration.getThingName());\n-        CompletableFuture<Integer> subscribed = iotJobsClient\n-                .SubscribeToJobExecutionsChangedEvents(request, QualityOfService.AT_LEAST_ONCE, eventHandler);\n-        try {\n-            subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n-        } catch (ExecutionException e) {\n-            unwrapExecutionException(e);\n+\n+        while (true) {\n+            CompletableFuture<Integer> subscribed = iotJobsClient.SubscribeToJobExecutionsChangedEvents(request,\n+                    QualityOfService.AT_LEAST_ONCE, eventHandler);\n+            try {\n+                subscribed.get(TIMEOUT_FOR_IOT_JOBS_OPERATIONS_SECONDS, TimeUnit.SECONDS);\n+                logger.atInfo().log(\"Subscribed to deployment job event notifications.\");\n+                break;\n+            } catch (ExecutionException e) {\n+                Throwable cause = e.getCause();\n+                if (cause instanceof MqttException || cause instanceof TimeoutException) {\n+                    //TODO: If network is not available then it will throw MqttException\n+                    // If there is any other problem like thingName is not specified in the request then also\n+                    // it throws Mqtt exception. This can be identified based on error code. Currently error code is not\n+                    // exposed. Will make required change in CRT package to expose the error code and then update this\n+                    logger.atWarn().setCause(cause).log(SUBSCRIPTION_EVENT_NOTIFICATIONS_RETRY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ce2fb505609c434a214a54acd6a0af31c671db8"}, "originalPosition": 192}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MDExNzg4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/462#pullrequestreview-496011788", "createdAt": "2020-09-24T23:17:57Z", "commit": {"oid": "1ce2fb505609c434a214a54acd6a0af31c671db8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd26150125fc06c1d73a8ae0994df70dc50f13fc", "author": {"user": {"login": "abanthiy", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fd26150125fc06c1d73a8ae0994df70dc50f13fc", "committedDate": "2020-09-24T23:39:27Z", "message": "Merge branch 'master' into retrySubscriptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35a5539ad2d39de27fc54201b814d6d041b6a440", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/35a5539ad2d39de27fc54201b814d6d041b6a440", "committedDate": "2020-09-25T07:07:27Z", "message": "Merge branch 'master' into retrySubscriptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c72b6046cd5fd475289b742c28cea6f86e81c711", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c72b6046cd5fd475289b742c28cea6f86e81c711", "committedDate": "2020-09-25T16:21:58Z", "message": "Merge branch 'master' into retrySubscriptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "767744198cef2fc457f3f404a9a2a997d09701aa", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/767744198cef2fc457f3f404a9a2a997d09701aa", "committedDate": "2020-09-25T18:17:11Z", "message": "Merge branch 'master' into retrySubscriptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0de3c6b41b52323573c3c09a8305f2d9c46f583d", "author": {"user": {"login": "MikeDombo", "name": "Michael Dombrowski"}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/0de3c6b41b52323573c3c09a8305f2d9c46f583d", "committedDate": "2020-09-25T18:55:12Z", "message": "Merge branch 'master' into retrySubscriptions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2999, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}