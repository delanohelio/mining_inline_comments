{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzODU4NDIw", "number": 280, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoxNTo0MlrOEFpPuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzoyOToxMFrOEK_o3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzU0MTA1OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoxNTo0MlrOGj9X5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoxNTo0MlrOGj9X5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1ODg4Ng==", "bodyText": "I also added this dependency to get around zeroturnaround library trying to load msvcr100.dll which is not on my fresh windows server 2019.\nmsvcr100.dll seems to be a dll for older Windows too.\nhttps://github.com/aws/aws-greengrass-kernel/blob/windows_experiment/pom.xml#L167", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440358886", "createdAt": "2020-06-15T18:15:42Z", "author": {"login": "fufranci"}, "path": "pom.xml", "diffHunk": "@@ -137,7 +137,7 @@\n         <dependency>\n             <groupId>software.amazon.awssdk.iotdevicesdk</groupId>\n             <artifactId>aws-iot-device-sdk</artifactId>\n-            <version>1.1.1</version>\n+            <version>1.2.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzU0OTk3OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoxODoyM1rOGj9duA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoxODoyM1rOGj9duA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2MDM3Ng==", "bodyText": "On Windows:\n$ echo hi\nhi\n$ echo \"hi\"\n\"hi\"\nSo it depends on the actual command line. We could remove the double quote from the command line. I think that would work for both Windows and Linux.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440360376", "createdAt": "2020-06-15T18:18:23Z", "author": {"login": "fufranci"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "diffHunk": "@@ -145,7 +147,12 @@ void GIVEN_sample_deployment_doc_WHEN_submitted_to_deployment_task_THEN_services\n         Consumer<EvergreenStructuredLogMessage> listener = m -> {\n             Map<String, String> contexts = m.getContexts();\n             String messageOnStdout = contexts.get(\"stdout\");\n-            if (messageOnStdout != null && listOfExpectedMessages.contains(messageOnStdout)) {\n+            if (messageOnStdout == null) {\n+                return;\n+            }\n+            // Windows has quotes in the echo, so strip them", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzU2MDMwOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/util/ExecTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoyMToyNlrOGj9kQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoyMToyNlrOGj9kQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2MjA1MQ==", "bodyText": "the cmd command \"cd\" without any argument would also return the current directory.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440362051", "createdAt": "2020-06-15T18:21:26Z", "author": {"login": "fufranci"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/util/ExecTest.java", "diffHunk": "@@ -79,57 +79,61 @@ void GIVEN_exec_WHEN_command_outputs_THEN_output_captured() throws InterruptedEx\n         String command = \"echo \" + expectedOutput;\n         StringBuilder stdout = new StringBuilder();\n         StringBuilder stderr = new StringBuilder();\n-        Consumer<CharSequence> stdoutConsumer = c -> stdout.append(c);\n-        Consumer<CharSequence> stderrConsumer = c -> stderr.append(c);\n-        exec = exec.withShell(command).withOut(stdoutConsumer).withErr(stderrConsumer);\n+        Consumer<CharSequence> stdoutConsumer = stdout::append;\n+        Consumer<CharSequence> stderrConsumer = stderr::append;\n+        exec.withShell(command).withOut(stdoutConsumer).withErr(stderrConsumer);\n         assertTrue(exec.successful(false));\n         // new line for shell\n-        assertEquals(expectedOutput.length() + 1, stdout.length());\n+        assertEquals(expectedOutput.length() + System.lineSeparator().length(), stdout.length());\n         assertEquals(0, stderr.length());\n \n         // reinit consumers\n         stdout.setLength(0);\n         stderr.setLength(0);\n \n         String stdErrCommand = command + \" 1>&2\";\n-        exec = exec.withShell(stdErrCommand);\n+        exec.withShell(stdErrCommand);\n         assertFalse(exec.successful(false));\n         assertEquals(0, stdout.length());\n-        // new line for shell\n-        assertEquals(expectedOutput.length() + 1, stderr.length());\n+        // new line for shell and 1 more for windows because it actually includes the trailing space before the 1>&2\n+        assertEquals(expectedOutput.length() + System.lineSeparator().length() + (Exec.isWindows ? 1 : 0),\n+                stderr.length());\n         exec.close();\n     }\n \n     @Test\n     @SuppressWarnings(\"PMD.CloseResource\")\n     void GIVEN_exec_WHEN_changing_directories_THEN_success() throws InterruptedException, IOException {\n         Exec exec = new Exec();\n-        final String getWorkingDirCmd = \"pwd\";\n+        String getWorkingDirCmd = \"pwd\";\n+        if (Exec.isWindows) {\n+            getWorkingDirCmd = \"echo %cd%\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzU4ODg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoyOTo1OVrOGj92NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoyOTo1OVrOGj92NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NjY0NQ==", "bodyText": "I was looking at:\nFileAttribute\nFileAttributeView\nsetAttribute\nto see if we can add a method in the Platform interface that returns a FileAttribute object.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440366645", "createdAt": "2020-06-15T18:29:59Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelCommandLine.java", "diffHunk": "@@ -157,7 +157,9 @@ public void installCliTool(URL resource) {\n             try (InputStream is = resource.openStream()) {\n                 Files.copy(is, dest, StandardCopyOption.REPLACE_EXISTING);\n             }\n-            Files.setPosixFilePermissions(dest, PosixFilePermissions.fromString(\"r-xr-x---\"));\n+            if (!Exec.isWindows) {\n+                Files.setPosixFilePermissions(dest, PosixFilePermissions.fromString(\"r-xr-x---\"));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzU5NjczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/util/Utils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODozMjoyNVrOGj97YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODozMjoyNVrOGj97YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2Nzk2OQ==", "bodyText": "We could add a method that returns FileAttribute in the Platform interface.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440367969", "createdAt": "2020-06-15T18:32:25Z", "author": {"login": "fufranci"}, "path": "src/main/java/com/aws/iot/evergreen/util/Utils.java", "diffHunk": "@@ -567,10 +567,14 @@ public static long parseLong(CharBuffer str, int radix) {\n      */\n     public static void createPaths(Path... paths) throws IOException {\n         for (Path p: paths) {\n-            // This only supports POSIX compliant file permission right now. We will need to\n-            // change this when trying to support Evergreen in Non-POSIX OS.\n-            Files.createDirectories(p,\n-                    PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwx------\")));\n+            if (Exec.isWindows) {\n+                Files.createDirectories(p);\n+            } else {\n+                // This only supports POSIX compliant file permission right now. We will need to\n+                // change this when trying to support Evergreen in Non-POSIX OS.\n+                Files.createDirectories(p,\n+                        PosixFilePermissions.asFileAttribute(PosixFilePermissions.fromString(\"rwx------\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzYwODIwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/deployment/DeploymentTaskTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODozNTo0MFrOGj-Chg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODozNTo0MFrOGj-Chg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2OTc5OA==", "bodyText": "I remember I saw these errors too. I think it was caused by too many errors (not failures) in the tests. If you have fixed the unit tests, you may not need this anymore.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440369798", "createdAt": "2020-06-15T18:35:40Z", "author": {"login": "fufranci"}, "path": "src/test/java/com/aws/iot/evergreen/deployment/DeploymentTaskTest.java", "diffHunk": "@@ -39,13 +39,13 @@\n \n @ExtendWith({MockitoExtension.class, EGExtension.class})\n class DeploymentTaskTest {\n-    @Mock\n+    @Mock(lenient = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzYxMzkzOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/kernel/KernelCommandLineTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODozNzozMFrOGj-GOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODozNzozMFrOGj-GOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MDc0Nw==", "bodyText": "Would java.nio.file.PathMatcher help here?  It may make building the expectation easier.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r440370747", "createdAt": "2020-06-15T18:37:30Z", "author": {"login": "fufranci"}, "path": "src/test/java/com/aws/iot/evergreen/kernel/KernelCommandLineTest.java", "diffHunk": "@@ -107,11 +112,15 @@ void GIVEN_kernel_WHEN_deTilde_THEN_proper_path_is_returned() {\n \n         KernelCommandLine kcl = new KernelCommandLine(mockKernel);\n \n-        assertThat(kcl.deTilde(\"~/test\"), containsString(System.getProperty(\"user.name\")+ \"/test\"));\n-        assertThat(kcl.deTilde(\"~bin/test\"), is(tempRootDir.toString()+ \"/bin/test\"));\n-        assertThat(kcl.deTilde(\"~config/test\"), is(tempRootDir.toString()+ \"/config/test\"));\n-        assertThat(kcl.deTilde(\"~packages/test\"), is(tempRootDir.toString()+ \"/packages/test\"));\n-        assertThat(kcl.deTilde(\"~root/test\"), is(tempRootDir.toString()+ \"/root/test\"));\n+        assertThat(kcl.deTilde(\"~/test\"), containsString(System.getProperty(\"user.home\") + File.separator + \"test\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa57bc2cf6447aea11f9b1f5f18d1e02eef0598f"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODUwNDU5OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTozODo1OVrOGkuHIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDoyODozNFrOGmgdlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1NzQxMQ==", "bodyText": "Why scope to test? Don't we always want this?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r441157411", "createdAt": "2020-06-16T21:38:59Z", "author": {"login": "MikeDombo"}, "path": "pom.xml", "diffHunk": "@@ -163,6 +163,12 @@\n             <version>0.0.3</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>net.java.dev.jna</groupId>\n+            <artifactId>jna</artifactId>\n+            <version>5.5.0</version>\n+            <scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "045eb74aff4b09beaa76dd133c4757384ed40e8f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAzMDkzMg==", "bodyText": "Removed. Thanks for pointing it out.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443030932", "createdAt": "2020-06-19T20:28:34Z", "author": {"login": "fufranci"}, "path": "pom.xml", "diffHunk": "@@ -163,6 +163,12 @@\n             <version>0.0.3</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>net.java.dev.jna</groupId>\n+            <artifactId>jna</artifactId>\n+            <version>5.5.0</version>\n+            <scope>test</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1NzQxMQ=="}, "originalCommit": {"oid": "045eb74aff4b09beaa76dd133c4757384ed40e8f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTY0MDIzOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ThreadProtector.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1MDo1M1rOGmbWbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDo0MDoyMFrOGnQNlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0NzE4Mw==", "bodyText": "Serialized listener processor is the main thread in Context. Technically it shouldn't continue running after the test as the test should have closed any Context that it opens.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r442947183", "createdAt": "2020-06-19T16:50:53Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ThreadProtector.java", "diffHunk": "@@ -17,7 +17,14 @@\n \n @SuppressWarnings(\"PMD.SystemPrintln\")\n public class ThreadProtector implements AfterAllCallback {\n-    private static final Set<String> ALLOWED_THREAD_NAMES = new HashSet<>(Arrays.asList(\"main\", \"Monitor Ctrl-Break\"));\n+    private static final Set<String> ALLOWED_THREAD_NAMES = new HashSet<>(Arrays.asList(\n+            \"main\",\n+            \"Monitor Ctrl-Break\",\n+            \"surefire-forkedjvm-command-thread\",\n+            \"junit-jupiter-timeout-watcher\",\n+            \"Serialized listener processor\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f25d5b21ff14737ca0c506e31b590122ceb29ea"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAzNTMxNg==", "bodyText": "https://github.com/aws/aws-greengrass-kernel/blob/master/src/main/java/com/aws/iot/evergreen/dependency/Context.java#L61\nSo the above line should read:\nwhile (interrupted()) {\n\nSince during Context.close(), we call\npublishThread.interrupt();\n\nBut the loop is not checking the status. What do you think?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443035316", "createdAt": "2020-06-19T20:39:44Z", "author": {"login": "fufranci"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ThreadProtector.java", "diffHunk": "@@ -17,7 +17,14 @@\n \n @SuppressWarnings(\"PMD.SystemPrintln\")\n public class ThreadProtector implements AfterAllCallback {\n-    private static final Set<String> ALLOWED_THREAD_NAMES = new HashSet<>(Arrays.asList(\"main\", \"Monitor Ctrl-Break\"));\n+    private static final Set<String> ALLOWED_THREAD_NAMES = new HashSet<>(Arrays.asList(\n+            \"main\",\n+            \"Monitor Ctrl-Break\",\n+            \"surefire-forkedjvm-command-thread\",\n+            \"junit-jupiter-timeout-watcher\",\n+            \"Serialized listener processor\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0NzE4Mw=="}, "originalCommit": {"oid": "2f25d5b21ff14737ca0c506e31b590122ceb29ea"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAzNjUyMg==", "bodyText": "I think that the takeFirst should check and throw", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443036522", "createdAt": "2020-06-19T20:43:29Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ThreadProtector.java", "diffHunk": "@@ -17,7 +17,14 @@\n \n @SuppressWarnings(\"PMD.SystemPrintln\")\n public class ThreadProtector implements AfterAllCallback {\n-    private static final Set<String> ALLOWED_THREAD_NAMES = new HashSet<>(Arrays.asList(\"main\", \"Monitor Ctrl-Break\"));\n+    private static final Set<String> ALLOWED_THREAD_NAMES = new HashSet<>(Arrays.asList(\n+            \"main\",\n+            \"Monitor Ctrl-Break\",\n+            \"surefire-forkedjvm-command-thread\",\n+            \"junit-jupiter-timeout-watcher\",\n+            \"Serialized listener processor\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0NzE4Mw=="}, "originalCommit": {"oid": "2f25d5b21ff14737ca0c506e31b590122ceb29ea"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxMzI2OA==", "bodyText": "I am going to remove \"Serialized listener processor\" from the list. To investigate why the context thread is still running should be a different task.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443813268", "createdAt": "2020-06-22T20:40:20Z", "author": {"login": "fufranci"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ThreadProtector.java", "diffHunk": "@@ -17,7 +17,14 @@\n \n @SuppressWarnings(\"PMD.SystemPrintln\")\n public class ThreadProtector implements AfterAllCallback {\n-    private static final Set<String> ALLOWED_THREAD_NAMES = new HashSet<>(Arrays.asList(\"main\", \"Monitor Ctrl-Break\"));\n+    private static final Set<String> ALLOWED_THREAD_NAMES = new HashSet<>(Arrays.asList(\n+            \"main\",\n+            \"Monitor Ctrl-Break\",\n+            \"surefire-forkedjvm-command-thread\",\n+            \"junit-jupiter-timeout-watcher\",\n+            \"Serialized listener processor\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0NzE4Mw=="}, "originalCommit": {"oid": "2f25d5b21ff14737ca0c506e31b590122ceb29ea"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDQzOTU3OnYy", "diffSide": "RIGHT", "path": ".github/workflows/maven.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMzowODoxMlrOGmjExQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowOTo0NVrOGnNhKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3MzczMw==", "bodyText": "this we can do on both OS. Or if you want to just do linux, then you can remove the matrix.os in the name below", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443073733", "createdAt": "2020-06-19T23:08:12Z", "author": {"login": "MikeDombo"}, "path": ".github/workflows/maven.yml", "diffHunk": "@@ -26,22 +30,29 @@ jobs:\n         continue-on-error: true\n       - name: Build with Maven\n         run: mvn -ntp -U clean verify\n+        shell: cmd\n+        if: matrix.os == 'Windows'\n+      - name: Build with Maven\n+        run: mvn -ntp -U clean verify\n+        if: matrix.os != 'Windows'\n       - name: Upload Failed Test Report\n         uses: actions/upload-artifact@v1.0.0\n         if: failure()\n         with:\n-          name: Failed Test Report\n+          name: Failed Test Report ${{ matrix.os }}\n           path: target/surefire-reports\n       - name: Upload Coverage\n         uses: actions/upload-artifact@v1.0.0\n-        if: always()\n+        if: matrix.os == 'Linux'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc2OTEzMQ==", "bodyText": "undone.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443769131", "createdAt": "2020-06-22T19:09:45Z", "author": {"login": "fufranci"}, "path": ".github/workflows/maven.yml", "diffHunk": "@@ -26,22 +30,29 @@ jobs:\n         continue-on-error: true\n       - name: Build with Maven\n         run: mvn -ntp -U clean verify\n+        shell: cmd\n+        if: matrix.os == 'Windows'\n+      - name: Build with Maven\n+        run: mvn -ntp -U clean verify\n+        if: matrix.os != 'Windows'\n       - name: Upload Failed Test Report\n         uses: actions/upload-artifact@v1.0.0\n         if: failure()\n         with:\n-          name: Failed Test Report\n+          name: Failed Test Report ${{ matrix.os }}\n           path: target/surefire-reports\n       - name: Upload Coverage\n         uses: actions/upload-artifact@v1.0.0\n-        if: always()\n+        if: matrix.os == 'Linux'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3MzczMw=="}, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDQ0MDE1OnYy", "diffSide": "RIGHT", "path": ".github/workflows/maven.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMzowODo1NFrOGmjFHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOToxMDowOVrOGnNh_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3MzgyMA==", "bodyText": "We don't really need to build the benchmark on both systems. We're just proving that it compiles, and it won't compile any different on either OS. You can scope this down to just linux.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443073820", "createdAt": "2020-06-19T23:08:54Z", "author": {"login": "MikeDombo"}, "path": ".github/workflows/maven.yml", "diffHunk": "@@ -60,9 +71,23 @@ jobs:\n           show_class_names: true\n       - name: Build benchmark with Maven\n         # Changes can break the benchmark, so compile it now to make sure it is buildable\n-        run: mvn -ntp install -DskipTests && mvn -ntp -f src/test/evergreen-kernel-benchmark install\n+        run: |\n+          mvn -ntp install -DskipTests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc2OTM0Mg==", "bodyText": "ok sounds good. Will do on Linux only.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443769342", "createdAt": "2020-06-22T19:10:09Z", "author": {"login": "fufranci"}, "path": ".github/workflows/maven.yml", "diffHunk": "@@ -60,9 +71,23 @@ jobs:\n           show_class_names: true\n       - name: Build benchmark with Maven\n         # Changes can break the benchmark, so compile it now to make sure it is buildable\n-        run: mvn -ntp install -DskipTests && mvn -ntp -f src/test/evergreen-kernel-benchmark install\n+        run: |\n+          mvn -ntp install -DskipTests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3MzgyMA=="}, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDQ0MTQ4OnYy", "diffSide": "RIGHT", "path": ".github/workflows/maven.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMzoxMDoyNlrOGmjF6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOToxNjoxOVrOGnNtlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDAyNA==", "bodyText": "I think we need to update the other workflow files too to tell them to just run on linux, otherwise GitHub actions could pick our windows machine instead and they'll fail.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443074024", "createdAt": "2020-06-19T23:10:26Z", "author": {"login": "MikeDombo"}, "path": ".github/workflows/maven.yml", "diffHunk": "@@ -92,11 +117,11 @@ jobs:\n         uses: actions/upload-artifact@v1.0.0\n         if: failure()\n         with:\n-          name: Failed E2E Report\n+          name: Failed E2E Report ${{ matrix.os }}\n           path: target/surefire-reports\n   publish:\n     needs: build\n-    runs-on: self-hosted\n+    runs-on: [self-hosted, Linux]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc3MjMwOA==", "bodyText": "OK. Thanks for pointing it out. I will double check the rest as well.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443772308", "createdAt": "2020-06-22T19:16:19Z", "author": {"login": "fufranci"}, "path": ".github/workflows/maven.yml", "diffHunk": "@@ -92,11 +117,11 @@ jobs:\n         uses: actions/upload-artifact@v1.0.0\n         if: failure()\n         with:\n-          name: Failed E2E Report\n+          name: Failed E2E Report ${{ matrix.os }}\n           path: target/surefire-reports\n   publish:\n     needs: build\n-    runs-on: self-hosted\n+    runs-on: [self-hosted, Linux]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDAyNA=="}, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDQ0MjA3OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMzoxMTowMlrOGmjGNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOToxMzo1NlrOGnNpGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDEwMw==", "bodyText": "can we bring this back up, or did we really lose coverage?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443074103", "createdAt": "2020-06-19T23:11:02Z", "author": {"login": "MikeDombo"}, "path": "pom.xml", "diffHunk": "@@ -422,7 +431,7 @@\n                                         <limit>\n                                             <counter>INSTRUCTION</counter>\n                                             <value>COVEREDRATIO</value>\n-                                            <minimum>0.81</minimum>\n+                                            <minimum>0.79</minimum>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc3MTE2MA==", "bodyText": "We did lose coverage. I think it is because there is one test that is skipped on Windows.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443771160", "createdAt": "2020-06-22T19:13:56Z", "author": {"login": "fufranci"}, "path": "pom.xml", "diffHunk": "@@ -422,7 +431,7 @@\n                                         <limit>\n                                             <counter>INSTRUCTION</counter>\n                                             <value>COVEREDRATIO</value>\n-                                            <minimum>0.81</minimum>\n+                                            <minimum>0.79</minimum>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDEwMw=="}, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDQ0NzM4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMzoxNjoyMFrOGmjJdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNToyODo0MFrOGnuvtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg==", "bodyText": "I don't think we should ignore this exception. We need to fix whatever the cause is.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443074932", "createdAt": "2020-06-19T23:16:20Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java", "diffHunk": "@@ -129,6 +131,9 @@ public void beforeEach(ExtensionContext context) throws Exception {\n         ignoreExceptionWithMessage(context, \"Unable to load region information from any provider in the chain\");\n         ignoreExceptionWithMessageSubstring(context, \"Failed to connect to service endpoint:\");\n         ignoreExceptionWithMessageSubstring(context, \"Forbidden (Service: null; Status Code: 403;\");\n+\n+        ignoreExceptionOfType(context, RejectedExecutionException.class);\n+        ignoreExceptionOfType(context, InvalidExitValueException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc3MTc3Nw==", "bodyText": "I will remove InvalidExitValueException from this list. The 2 sec wait in ThreadProtector may help overall.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443771777", "createdAt": "2020-06-22T19:15:14Z", "author": {"login": "fufranci"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java", "diffHunk": "@@ -129,6 +131,9 @@ public void beforeEach(ExtensionContext context) throws Exception {\n         ignoreExceptionWithMessage(context, \"Unable to load region information from any provider in the chain\");\n         ignoreExceptionWithMessageSubstring(context, \"Failed to connect to service endpoint:\");\n         ignoreExceptionWithMessageSubstring(context, \"Forbidden (Service: null; Status Code: 403;\");\n+\n+        ignoreExceptionOfType(context, RejectedExecutionException.class);\n+        ignoreExceptionOfType(context, InvalidExitValueException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg=="}, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0NzE0MQ==", "bodyText": "The exception is from:\norg.zeroturnaround.exec.InvalidExitValueException: Unexpected exit value: 255, allowed exit values: [0], executed command [taskkill, /T, /F, /PID, 6932]\n\tat org.zeroturnaround.exec.WaitForProcess.checkExit(WaitForProcess.java:147)\n\tat org.zeroturnaround.exec.WaitForProcess.call(WaitForProcess.java:116)\n\tat org.zeroturnaround.exec.ProcessExecutor.executeNoTimeout(ProcessExecutor.java:818)\n\tat org.zeroturnaround.process.WindowsProcess.taskkill(WindowsProcess.java:109)\n\tat org.zeroturnaround.process.WindowsProcess.destroy(WindowsProcess.java:93)\n\tat com.aws.iot.evergreen.util.platforms.WindowsPlatform.killProcessAndChildren(WindowsPlatform.java:21)\n\tat com.aws.iot.evergreen.util.Exec.close(Exec.java:407)\n\nI think it is safe to ignore at the global level, that is here. I think we only use zeroturnaround's kill process feature.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443847141", "createdAt": "2020-06-22T21:53:08Z", "author": {"login": "fufranci"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java", "diffHunk": "@@ -129,6 +131,9 @@ public void beforeEach(ExtensionContext context) throws Exception {\n         ignoreExceptionWithMessage(context, \"Unable to load region information from any provider in the chain\");\n         ignoreExceptionWithMessageSubstring(context, \"Failed to connect to service endpoint:\");\n         ignoreExceptionWithMessageSubstring(context, \"Forbidden (Service: null; Status Code: 403;\");\n+\n+        ignoreExceptionOfType(context, RejectedExecutionException.class);\n+        ignoreExceptionOfType(context, InvalidExitValueException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg=="}, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg0NzY3NA==", "bodyText": "Yes, but this is telling us that it couldn't kill the process, or something. Whatever 255 means. This is a problem that we cannot ignore.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443847674", "createdAt": "2020-06-22T21:54:30Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java", "diffHunk": "@@ -129,6 +131,9 @@ public void beforeEach(ExtensionContext context) throws Exception {\n         ignoreExceptionWithMessage(context, \"Unable to load region information from any provider in the chain\");\n         ignoreExceptionWithMessageSubstring(context, \"Failed to connect to service endpoint:\");\n         ignoreExceptionWithMessageSubstring(context, \"Forbidden (Service: null; Status Code: 403;\");\n+\n+        ignoreExceptionOfType(context, RejectedExecutionException.class);\n+        ignoreExceptionOfType(context, InvalidExitValueException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg=="}, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg1NDU3MA==", "bodyText": "I think we should use our own process runner anyway instead of the zt runner. You can use the WindowsProcess to get the PID, then call the same command, but use our Exec. This way we can log the stdout and stderr. Maybe that will explain what is wrong.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r443854570", "createdAt": "2020-06-22T22:12:28Z", "author": {"login": "MikeDombo"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java", "diffHunk": "@@ -129,6 +131,9 @@ public void beforeEach(ExtensionContext context) throws Exception {\n         ignoreExceptionWithMessage(context, \"Unable to load region information from any provider in the chain\");\n         ignoreExceptionWithMessageSubstring(context, \"Failed to connect to service endpoint:\");\n         ignoreExceptionWithMessageSubstring(context, \"Forbidden (Service: null; Status Code: 403;\");\n+\n+        ignoreExceptionOfType(context, RejectedExecutionException.class);\n+        ignoreExceptionOfType(context, InvalidExitValueException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg=="}, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMxMzUyNg==", "bodyText": "It was quite hard to reprod.  But in one instance, we were trying to kill a process gracefully. Then waited for 2 sec and checked if the process was killed. If the process was not killed, we forcefully killed it again. The above stack was the error of a forceful kill. In this instance (maybe things were slower when debugging), the process was not there anymore the 2nd time when we tried to kill the process, resulting in an error. I made a change in WindowsPlatform.java to ignore such case.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r444313526", "createdAt": "2020-06-23T15:28:40Z", "author": {"login": "fufranci"}, "path": "src/test/java/com/aws/iot/evergreen/testcommons/testutilities/ExceptionLogProtector.java", "diffHunk": "@@ -129,6 +131,9 @@ public void beforeEach(ExtensionContext context) throws Exception {\n         ignoreExceptionWithMessage(context, \"Unable to load region information from any provider in the chain\");\n         ignoreExceptionWithMessageSubstring(context, \"Failed to connect to service endpoint:\");\n         ignoreExceptionWithMessageSubstring(context, \"Forbidden (Service: null; Status Code: 403;\");\n+\n+        ignoreExceptionOfType(context, RejectedExecutionException.class);\n+        ignoreExceptionOfType(context, InvalidExitValueException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3NDkzMg=="}, "originalCommit": {"oid": "4b336b4eabab33c35df8862f57960521f28590fc"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTMxMDQ1OnYy", "diffSide": "RIGHT", "path": "codestyle/Evergreen.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoyMDowMVrOGrGu8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzowNTowM1rOGsWQ-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MjI3NQ==", "bodyText": "It's great to check this in so that people work on this repo has same formatter...\nnit: Is this for intellij? If so let's rename the file name to indicate that so that other IDE users are clear :)", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r447852275", "createdAt": "2020-06-30T17:20:01Z", "author": {"login": "leaf94"}, "path": "codestyle/Evergreen.xml", "diffHunk": "@@ -0,0 +1,64 @@\n+<code_scheme name=\"Evergreen\" version=\"173\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aa0d1227cd83bf21533f1c2490590aaece8d82e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1NTMyMA==", "bodyText": "Changed name to IntelliJ.xml", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r449155320", "createdAt": "2020-07-02T17:05:03Z", "author": {"login": "fufranci"}, "path": "codestyle/Evergreen.xml", "diffHunk": "@@ -0,0 +1,64 @@\n+<code_scheme name=\"Evergreen\" version=\"173\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MjI3NQ=="}, "originalCommit": {"oid": "4aa0d1227cd83bf21533f1c2490590aaece8d82e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTMxMjIyOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoyMDoyOFrOGrGwBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMzo1NTo1MFrOGr8jQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MjU0OA==", "bodyText": "nice!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r447852548", "createdAt": "2020-06-30T17:20:28Z", "author": {"login": "leaf94"}, "path": "pom.xml", "diffHunk": "@@ -152,6 +152,15 @@\n             <artifactId>zt-process-killer</artifactId>\n             <version>1.10</version>\n         </dependency>\n+        <!-- zeroturnaround brings in an older version jna which tries to load msvcr100.dll. msvcr100.dll is not shipped\n+        with recent Windows/VC redist. The behavior is changed in recent jna release. By declaring direct dependency of\n+        jna, we avoid the problem of loading msvcr100.dll.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aa0d1227cd83bf21533f1c2490590aaece8d82e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODczNDAxOA==", "bodyText": "Thanks @MikeDombo for this workaround!", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r448734018", "createdAt": "2020-07-02T03:55:50Z", "author": {"login": "fufranci"}, "path": "pom.xml", "diffHunk": "@@ -152,6 +152,15 @@\n             <artifactId>zt-process-killer</artifactId>\n             <version>1.10</version>\n         </dependency>\n+        <!-- zeroturnaround brings in an older version jna which tries to load msvcr100.dll. msvcr100.dll is not shipped\n+        with recent Windows/VC redist. The behavior is changed in recent jna release. By declaring direct dependency of\n+        jna, we avoid the problem of loading msvcr100.dll.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MjU0OA=="}, "originalCommit": {"oid": "4aa0d1227cd83bf21533f1c2490590aaece8d82e"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTM2Mjg4OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/long_running_services.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzozMTozNFrOGrHOEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo1Mjo0MlrOGsXyWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg2MDI0Mw==", "bodyText": "nit - why >- vs |- ? Especially this is single line. Maybe just remove >- to avoid confusion that we need special handling for windows...\nAnd other places as well..", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r447860243", "createdAt": "2020-06-30T17:31:34Z", "author": {"login": "leaf94"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/long_running_services.yaml", "diffHunk": "@@ -2,26 +2,38 @@\n services:\n   sleeperB:\n     lifecycle:\n-      run: |-\n-        while true; do\n-        date; echo sleeperB_running; sleep 5\n-        done\n+      posix:\n+        run: |-\n+          while true; do\n+          date; echo sleeperB_running; sleep 5\n+          done\n+      windows:\n+        run: >-\n+          powershell -command \"& { while(1) { echo sleeperB_running; sleep 5 } }\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aa0d1227cd83bf21533f1c2490590aaece8d82e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODczNzM0Mg==", "bodyText": "I think the reason was: we use powershell -command and pass a string to powershell. Using >- establish the pattern of concat multiple lines into one string. If in the future we need to extend this command into longer string, the >- is there so we are less likely to make mistake.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r448737342", "createdAt": "2020-07-02T04:09:30Z", "author": {"login": "fufranci"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/long_running_services.yaml", "diffHunk": "@@ -2,26 +2,38 @@\n services:\n   sleeperB:\n     lifecycle:\n-      run: |-\n-        while true; do\n-        date; echo sleeperB_running; sleep 5\n-        done\n+      posix:\n+        run: |-\n+          while true; do\n+          date; echo sleeperB_running; sleep 5\n+          done\n+      windows:\n+        run: >-\n+          powershell -command \"& { while(1) { echo sleeperB_running; sleep 5 } }\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg2MDI0Mw=="}, "originalCommit": {"oid": "4aa0d1227cd83bf21533f1c2490590aaece8d82e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4MDI1MQ==", "bodyText": "Got it. Make sense", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r449180251", "createdAt": "2020-07-02T17:52:42Z", "author": {"login": "leaf94"}, "path": "src/integrationtests/resources/com/aws/iot/evergreen/integrationtests/deployment/long_running_services.yaml", "diffHunk": "@@ -2,26 +2,38 @@\n services:\n   sleeperB:\n     lifecycle:\n-      run: |-\n-        while true; do\n-        date; echo sleeperB_running; sleep 5\n-        done\n+      posix:\n+        run: |-\n+          while true; do\n+          date; echo sleeperB_running; sleep 5\n+          done\n+      windows:\n+        run: >-\n+          powershell -command \"& { while(1) { echo sleeperB_running; sleep 5 } }\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg2MDI0Mw=="}, "originalCommit": {"oid": "4aa0d1227cd83bf21533f1c2490590aaece8d82e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTM4MzI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzozNjoxNFrOGrHaJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzozNjoxNFrOGrHaJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg2MzMzNQ==", "bodyText": "Nice abstraction. Like it a lot.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r447863335", "createdAt": "2020-06-30T17:36:14Z", "author": {"login": "leaf94"}, "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "diffHunk": "@@ -283,7 +286,7 @@ public Exec withExec(String... c) {\n     }\n \n     public Exec withShell(String s) {\n-        return withExec(\"sh\", \"-c\", s);\n+        return withExec(Platform.getInstance().getShellForCommand(s));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aa0d1227cd83bf21533f1c2490590aaece8d82e"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTYzMzUwOnYy", "diffSide": "RIGHT", "path": ".github/workflows/maven.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzoyNzozMFrOGsXArg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzoyNzozMFrOGsXArg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2NzUzNA==", "bodyText": "Nit - Could add the os name in the step name, currently the workflow shows two steps for 'Build with maven'. Not a big deal though", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r449167534", "createdAt": "2020-07-02T17:27:30Z", "author": {"login": "shaguptashaikh"}, "path": ".github/workflows/maven.yml", "diffHunk": "@@ -26,22 +30,29 @@ jobs:\n         continue-on-error: true\n       - name: Build with Maven", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "165ada26ba9a5555df135372e32962f130137ca8"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTYzODcwOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceDependencyLifecycleTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzoyOToxMFrOGsXD1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzo1NjowN1rOGu9Dqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2ODM0MA==", "bodyText": "Can this be removed now? or will it be back after rebasing with Fahad's fix?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r449168340", "createdAt": "2020-07-02T17:29:10Z", "author": {"login": "shaguptashaikh"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceDependencyLifecycleTest.java", "diffHunk": "@@ -52,6 +53,10 @@\n     private static final String SoftDependency = \"SoftDependency\";\n     private static final Logger logger = LogManager.getLogger(ServiceDependencyLifecycleTest.class);\n \n+    private static final int TEST_ROUTINE_SHORT_TIMEOUT = 15;\n+    private static final int TEST_ROUTINE_MEDIUM_TIMEOUT = 20;\n+    //private static final int TEST_ROUTINE_LONG_TIMEOUT = 30;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "165ada26ba9a5555df135372e32962f130137ca8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4ODA0Mw==", "bodyText": "Could you remove this unused constant?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/280#discussion_r451888043", "createdAt": "2020-07-08T23:56:07Z", "author": {"login": "shaguptashaikh"}, "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceDependencyLifecycleTest.java", "diffHunk": "@@ -52,6 +53,10 @@\n     private static final String SoftDependency = \"SoftDependency\";\n     private static final Logger logger = LogManager.getLogger(ServiceDependencyLifecycleTest.class);\n \n+    private static final int TEST_ROUTINE_SHORT_TIMEOUT = 15;\n+    private static final int TEST_ROUTINE_MEDIUM_TIMEOUT = 20;\n+    //private static final int TEST_ROUTINE_LONG_TIMEOUT = 30;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2ODM0MA=="}, "originalCommit": {"oid": "165ada26ba9a5555df135372e32962f130137ca8"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4339, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}