{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMzMxNjEw", "number": 248, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDozMzowOVrOD99kqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDozMzowOVrOD99kqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mjk4NTM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDozMzowOVrOGXxjEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDozNjoyN1rOGXxp3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MjIyNw==", "bodyText": "We should prevent EvergreenService from accessing this method.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/248#discussion_r427582227", "createdAt": "2020-05-19T20:33:09Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -358,6 +352,16 @@ private void startStateTransition() throws InterruptedException {\n         }\n     }\n \n+    protected void setState(State current, State newState) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77b000b61a664dffa78c73b7995478e7b92b96d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4Mzk2NQ==", "bodyText": "We can't do that and also unit test it in this way. I think we just need to enforce it through PRs. I'll add a big javadoc comment to it at least.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/248#discussion_r427583965", "createdAt": "2020-05-19T20:36:27Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Lifecycle.java", "diffHunk": "@@ -358,6 +352,16 @@ private void startStateTransition() throws InterruptedException {\n         }\n     }\n \n+    protected void setState(State current, State newState) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MjIyNw=="}, "originalCommit": {"oid": "b77b000b61a664dffa78c73b7995478e7b92b96d"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4724, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}