{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NDc1NzU4", "number": 143, "title": "Updated kernel shutdown logic", "bodyText": "Description of changes:\n\nKernel shutdown will rely on Future returned by close() to wait for all services to exit.\nMoved all tests calling shutdownNow() to use shutdown() to allow services to shutdown properly. This will remove the service shutdown timeout exceptions from tests that are not related to kernelshutdown.\n\nWhy is this change necessary:\nCurrent shutdown behavior rely on state transition to verify if a service is closed. This logic can trigger when a service is restarting and lead to threadpools being shutdown before all the services exit.\nHow was this change tested:\nUnit tests.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-03-26T23:38:18Z", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/143", "merged": true, "mergeCommit": {"oid": "acc63e7e97c22f13e63a6a37579a0dea670f7105"}, "closed": true, "closedAt": "2020-03-27T00:25:22Z", "author": {"login": "fahadmohammed01"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRku5WAH2gAyMzk0NDc1NzU4OjRkMTk5ZTBlOGVhZjA4YTNlODMxMmZhNjc0NDMwZmQ1NGJiZDZhYWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRlQRFgFqTM4MjUwMTk2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4d199e0e8eaf08a3e8312fa674430fd54bbd6aac", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4d199e0e8eaf08a3e8312fa674430fd54bbd6aac", "committedDate": "2020-03-26T23:30:36Z", "message": "Updated shutdown method to wait on the future from close() than look at state transitions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDkyMzM1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/143#pullrequestreview-382492335", "createdAt": "2020-03-26T23:39:04Z", "commit": {"oid": "4d199e0e8eaf08a3e8312fa674430fd54bbd6aac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzozOTowNFrOF8eRfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzozOTowNFrOF8eRfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1NDg3Nw==", "bodyText": "return the interface. Why change this?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/143#discussion_r398954877", "createdAt": "2020-03-26T23:39:04Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -692,7 +692,7 @@ protected void shutdown() throws InterruptedException {\n      *\n      * @return future completes when the lifecycle thread shuts down.\n      */\n-    public Future<Void> close() {\n+    public CompletableFuture<Void> close() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d199e0e8eaf08a3e8312fa674430fd54bbd6aac"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDkyNTY1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/143#pullrequestreview-382492565", "createdAt": "2020-03-26T23:39:42Z", "commit": {"oid": "4d199e0e8eaf08a3e8312fa674430fd54bbd6aac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzozOTo0MlrOF8eSRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzozOTo0MlrOF8eSRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1NTA3OQ==", "bodyText": "don't catch throwable", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/143#discussion_r398955079", "createdAt": "2020-03-26T23:39:42Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -484,23 +482,35 @@ public void shutdown(int timeoutSeconds) {\n         try {\n             logger.atInfo().setEventType(\"system-shutdown\").addKeyValue(\"main\", getMain()).log();\n             EvergreenService[] d = orderedDependencies().toArray(new EvergreenService[0]);\n-            CountDownLatch allServicesExitedLatch = new CountDownLatch(d.length);\n \n+            CompletableFuture[] arr = new CompletableFuture[d.length];\n             for (int i = d.length; --i >= 0; ) { // shutdown in reverse order\n+                String serviceName = d[i].getName();\n                 try {\n-                    d[i].close();\n-                    d[i].getStateTopic().subscribe((WhatHappened what, Topic t) -> {\n-                        if (((State) t.getOnce()).isClosable()) {\n-                            allServicesExitedLatch.countDown();\n+                    arr[i] = d[i].close();\n+                    arr[i].whenComplete((v, t) -> {\n+                        if (t != null) {\n+                            logger.atError().setEventType(\"service-shutdown-error\")\n+                                    .addKeyValue(\"serviceName\", serviceName)\n+                                    .setCause((Throwable) t).log();\n                         }\n+\n                     });\n                 } catch (Throwable t) {\n-                    logger.atError().setEventType(\"service-shutdown-error\").addKeyValue(\"serviceName\", d[i].getName())\n+                    logger.atError().setEventType(\"service-shutdown-error\")\n+                            .addKeyValue(\"serviceName\", serviceName)\n                             .setCause(t).log();\n+                    arr[i] = CompletableFuture.completedFuture(Optional.empty());\n                 }\n             }\n \n-            allServicesExitedLatch.await(timeoutSeconds, TimeUnit.SECONDS);\n+            try {\n+                CompletableFuture<Void> combinedFuture = CompletableFuture.allOf(arr);\n+                combinedFuture.get(timeoutSeconds, TimeUnit.SECONDS);\n+            } catch (Throwable t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d199e0e8eaf08a3e8312fa674430fd54bbd6aac"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDkyOTg3", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/143#pullrequestreview-382492987", "createdAt": "2020-03-26T23:40:56Z", "commit": {"oid": "4d199e0e8eaf08a3e8312fa674430fd54bbd6aac"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDkyNTM0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/143#pullrequestreview-382492534", "createdAt": "2020-03-26T23:39:38Z", "commit": {"oid": "4d199e0e8eaf08a3e8312fa674430fd54bbd6aac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzozOTozOFrOF8eSKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzozOTozOFrOF8eSKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1NTA0OQ==", "bodyText": "Use if (t instanceof Throwable)  , null check isn't needed https://stackoverflow.com/questions/2950319/is-null-check-needed-before-calling-instanceof", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/143#discussion_r398955049", "createdAt": "2020-03-26T23:39:38Z", "author": {"login": "ShirleyZheng92"}, "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -484,23 +482,35 @@ public void shutdown(int timeoutSeconds) {\n         try {\n             logger.atInfo().setEventType(\"system-shutdown\").addKeyValue(\"main\", getMain()).log();\n             EvergreenService[] d = orderedDependencies().toArray(new EvergreenService[0]);\n-            CountDownLatch allServicesExitedLatch = new CountDownLatch(d.length);\n \n+            CompletableFuture[] arr = new CompletableFuture[d.length];\n             for (int i = d.length; --i >= 0; ) { // shutdown in reverse order\n+                String serviceName = d[i].getName();\n                 try {\n-                    d[i].close();\n-                    d[i].getStateTopic().subscribe((WhatHappened what, Topic t) -> {\n-                        if (((State) t.getOnce()).isClosable()) {\n-                            allServicesExitedLatch.countDown();\n+                    arr[i] = d[i].close();\n+                    arr[i].whenComplete((v, t) -> {\n+                        if (t != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d199e0e8eaf08a3e8312fa674430fd54bbd6aac"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70e0a219c3b860d2a9beff6f3157bfec84d8ee08", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/70e0a219c3b860d2a9beff6f3157bfec84d8ee08", "committedDate": "2020-03-26T23:53:23Z", "message": "addressed minor comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7ed433dd70a50cc89368f210c90cda6430b8698", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f7ed433dd70a50cc89368f210c90cda6430b8698", "committedDate": "2020-03-26T23:57:53Z", "message": "renamed variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3211d45e7513422545080f82e4ab57aacd45e4e2", "author": {"user": {"login": "fahadmohammed01", "name": null}}, "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/3211d45e7513422545080f82e4ab57aacd45e4e2", "committedDate": "2020-03-27T00:00:46Z", "message": "Merge branch 'master' into updated-shutdown"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTAwMDgx", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/143#pullrequestreview-382500081", "createdAt": "2020-03-27T00:01:18Z", "commit": {"oid": "3211d45e7513422545080f82e4ab57aacd45e4e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTAxOTYz", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/143#pullrequestreview-382501963", "createdAt": "2020-03-27T00:07:03Z", "commit": {"oid": "3211d45e7513422545080f82e4ab57aacd45e4e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2391, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}