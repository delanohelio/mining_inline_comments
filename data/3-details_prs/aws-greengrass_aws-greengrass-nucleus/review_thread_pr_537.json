{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NjQ4NDM0", "number": 537, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzowMzo0MlrOEunQyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzo0MDo1MlrOEvB4fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzEzMjI2OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzowMzo0MlrOHjIyMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzowMzo0MlrOHjIyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYwNjEyOA==", "bodyText": "use a try-finally to remove the listener at the end.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506606128", "createdAt": "2020-10-16T17:03:42Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/deployment/DeploymentTaskIntegrationTest.java", "diffHunk": "@@ -724,6 +731,68 @@ void GIVEN_services_running_WHEN_service_added_and_deleted_THEN_add_remove_servi\n         assertThrows(ServiceLoadException.class, () -> kernel.locate(\"Mosquitto\"));\n         assertThrows(ServiceLoadException.class, () -> kernel.locate(\"GreenSignal\"));\n     }\n+    /**\n+     * Start a service running with a user, then deploy an update to change the user and ensure the correct user\n+     * stops the process and starts the new one.\n+     */\n+    @Test\n+    @Order(5) // deploy before tests that break services\n+    @EnabledOnOs(OS.LINUX)\n+    void GIVEN_a_deployment_with_runwith_config_WHEN_submitted_THEN_runwith_updated() throws Exception {\n+        ((Map) kernel.getContext().getvIfExists(Kernel.SERVICE_TYPE_TO_CLASS_MAP_KEY).get()).put(\"plugin\",\n+                GreengrassService.class.getName());\n+\n+        assumeCanSudoShell(kernel);\n+\n+        countDownLatch = new CountDownLatch(2);\n+        // Set up stdout listener to capture stdout for verifying users\n+        List<String> stdouts = new CopyOnWriteArrayList<>();\n+        Consumer<GreengrassLogMessage> listener = m -> {\n+            Map<String, String> contexts = m.getContexts();\n+            String messageOnStdout = contexts.get(\"stdout\");\n+            if (messageOnStdout != null && messageOnStdout.contains(\"with user\")) {\n+                stdouts.add(messageOnStdout);\n+                countDownLatch.countDown();\n+            }\n+        };\n+        Slf4jLogAdapter.addGlobalListener(listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzEzODE2OnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzowNToyM1rOHjI1sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzowNToyM1rOHjI1sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYwNzAyNA==", "bodyText": "[nit]\nYou could use a parameterized test for these", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506607024", "createdAt": "2020-10-16T17:05:23Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "diffHunk": "@@ -297,4 +299,50 @@ void GIVEN_bootstrap_command_WHEN_runs_longer_than_5_sec_THEN_timeout_exception_\n         // this runs 5 seconds\n         assertThrows(TimeoutException.class, serviceWithJustBootstrapAndShouldTimeout::bootstrap);\n     }\n+\n+    @EnabledOnOs(OS.LINUX)\n+    @Test\n+    void GIVEN_linux_default_user_WHEN_runs_THEN_runs_with_default_user() throws Exception {\n+        runPosixUserShellTest(\"config_run_with_user.yaml\", \"123456\");\n+\n+    }\n+\n+    @EnabledOnOs(OS.LINUX)\n+    @Test\n+    void GIVEN_linux_default_shell_WHEN_runs_THEN_runs_with_default_shell() throws Exception {\n+        runPosixUserShellTest(\"config_run_with_user_shell.yaml\", \"123456\");\n+    }\n+\n+    @EnabledOnOs(OS.LINUX)\n+    @Test\n+    void GIVEN_linux_requires_privilege_WHEN_runs_THEN_runs_with_root() throws Exception {\n+        runPosixUserShellTest(\"config_run_with_privilege.yaml\", \"0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzE2MDA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoxMTo0OVrOHjJDdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxODoxNzozOVrOHjLUQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxMDU1MQ==", "bodyText": "windows shell too? powershell vs. cmd?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506610551", "createdAt": "2020-10-16T17:11:49Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -135,6 +139,26 @@ private Validator getRegionValidator() {\n         };\n     }\n \n+    public Topics getRunWithTopic() {\n+        return getTopics(RUN_WITH_TOPIC);\n+    }\n+\n+    public Topic getRunWithDefaultPosixUser() {\n+        return getRunWithTopic().lookup(RUN_WITH_DEFAULT_POSIX_USER);\n+    }\n+\n+    public Topic getRunWithDefaultPosixGroup() {\n+        return getRunWithTopic().lookup(RUN_WITH_DEFAULT_POSIX_GROUP);\n+    }\n+\n+    public Topic getRunWithDefaultPosixShell() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY0NzYxOA==", "bodyText": "so this makes it interesting - with linux shells, they all take a \"-c\" arg to pass a command to run\nPowerShell is a completely different beast to cmd.exe and it takes a  \"-Command\" option rather than \"/C\", and has a ton of other parameters that customers may want to use\nI'd prefer to attack this in a follow-on as there may be some powershell capabilities we wish to use - it supports a more straightforward way of running as a different user (although still requiring credentials)\nIt may be the case that for windows we require them to specify \"cmd\" or \"powershell\" as an enumeration and we figure out what to do based on that.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506647618", "createdAt": "2020-10-16T18:17:39Z", "author": {"login": "rbattle"}, "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -135,6 +139,26 @@ private Validator getRegionValidator() {\n         };\n     }\n \n+    public Topics getRunWithTopic() {\n+        return getTopics(RUN_WITH_TOPIC);\n+    }\n+\n+    public Topic getRunWithDefaultPosixUser() {\n+        return getRunWithTopic().lookup(RUN_WITH_DEFAULT_POSIX_USER);\n+    }\n+\n+    public Topic getRunWithDefaultPosixGroup() {\n+        return getRunWithTopic().lookup(RUN_WITH_DEFAULT_POSIX_GROUP);\n+    }\n+\n+    public Topic getRunWithDefaultPosixShell() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxMDU1MQ=="}, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzE2NjkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/deployment/model/RunWith.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoxMzo0NFrOHjJH3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoxMzo0NFrOHjJH3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxMTY3OA==", "bodyText": "not needed", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506611678", "createdAt": "2020-10-16T17:13:44Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/deployment/model/RunWith.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/* Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0 */\n+\n+package com.aws.greengrass.deployment.model;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+\n+/**\n+ * Class to represent info about how the kernel should run lifecycle commands.\n+ */\n+@Getter\n+@Builder\n+@JsonDeserialize\n+@JsonSerialize", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzE3OTk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GenericExternalService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoxNzoyM1rOHjJP8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoxNzoyM1rOHjJP8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxMzc0Nw==", "bodyText": "why save to local vars and then the fields? Why not just write to the fields?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506613747", "createdAt": "2020-10-16T17:17:23Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GenericExternalService.java", "diffHunk": "@@ -324,6 +347,31 @@ public void handleError() throws InterruptedException {\n         run(\"recover\", null, lifecycleProcesses);\n     }\n \n+    /**\n+     * Store user, group, and shell that will be used to run the service. This should be used throughout the lifecycle.\n+     * This information can change with a deployment, but service *must* execute the lifecycle steps with the same\n+     * user/group/shell that was configured when it started.\n+     */\n+    protected void storeInitialRunWithConfiguration() {\n+        String user = null;\n+        String group = null;\n+        String shell = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzE4MTE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GenericExternalService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoxNzo0MlrOHjJQzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoxNzo0MlrOHjJQzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxMzk2Nw==", "bodyText": "maybe just use if (!Exec.isWindows())", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506613967", "createdAt": "2020-10-16T17:17:42Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GenericExternalService.java", "diffHunk": "@@ -324,6 +347,31 @@ public void handleError() throws InterruptedException {\n         run(\"recover\", null, lifecycleProcesses);\n     }\n \n+    /**\n+     * Store user, group, and shell that will be used to run the service. This should be used throughout the lifecycle.\n+     * This information can change with a deployment, but service *must* execute the lifecycle steps with the same\n+     * user/group/shell that was configured when it started.\n+     */\n+    protected void storeInitialRunWithConfiguration() {\n+        String user = null;\n+        String group = null;\n+        String shell = null;\n+\n+        // TODO: Add support for Windows\n+        if (PlatformResolver.RANKS.get().containsKey(\"posix\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzE4Mzg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GenericExternalService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoxODoyMFrOHjJSgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoxODoyMFrOHjJSgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNDQwMQ==", "bodyText": "use protected?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506614401", "createdAt": "2020-10-16T17:18:20Z", "author": {"login": "MikeDombo"}, "path": "src/main/java/com/aws/greengrass/lifecyclemanager/GenericExternalService.java", "diffHunk": "@@ -443,4 +495,66 @@ protected void addEnv(Exec exec, Topics src) {\n             });\n         }\n     }\n+\n+    Exec addUserGroup(Exec exec) {\n+        return addUserGroup(exec, runWithUser, runWithGroup);\n+    }\n+\n+    private Exec addUserGroup(Exec exec, String user, String group) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 191}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzE5NDAzOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzoyMToyMVrOHjJY0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOToxMzo0M1rOHjM6Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNjAxOQ==", "bodyText": "why only linux? Why not mac?", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506616019", "createdAt": "2020-10-16T17:21:21Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "diffHunk": "@@ -297,4 +299,50 @@ void GIVEN_bootstrap_command_WHEN_runs_longer_than_5_sec_THEN_timeout_exception_\n         // this runs 5 seconds\n         assertThrows(TimeoutException.class, serviceWithJustBootstrapAndShouldTimeout::bootstrap);\n     }\n+\n+    @EnabledOnOs(OS.LINUX)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYyNzQ1NA==", "bodyText": "These won't work unless your mac allows unknown users - which ours by default don't - and I don't want to require everyone to have to set up a test user in order to pass these tests.\nI could make these enabled on mac and have them skip like I do in other tests by checking a similar sudo command", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506627454", "createdAt": "2020-10-16T17:40:53Z", "author": {"login": "rbattle"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "diffHunk": "@@ -297,4 +299,50 @@ void GIVEN_bootstrap_command_WHEN_runs_longer_than_5_sec_THEN_timeout_exception_\n         // this runs 5 seconds\n         assertThrows(TimeoutException.class, serviceWithJustBootstrapAndShouldTimeout::bootstrap);\n     }\n+\n+    @EnabledOnOs(OS.LINUX)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNjAxOQ=="}, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1MzE4MQ==", "bodyText": "I've enabled the tests on mac - they'll skip on our laptops though", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506653181", "createdAt": "2020-10-16T18:29:20Z", "author": {"login": "rbattle"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "diffHunk": "@@ -297,4 +299,50 @@ void GIVEN_bootstrap_command_WHEN_runs_longer_than_5_sec_THEN_timeout_exception_\n         // this runs 5 seconds\n         assertThrows(TimeoutException.class, serviceWithJustBootstrapAndShouldTimeout::bootstrap);\n     }\n+\n+    @EnabledOnOs(OS.LINUX)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNjAxOQ=="}, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1NTgwNw==", "bodyText": "Why would it skip for us if you've enabled it", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506655807", "createdAt": "2020-10-16T18:35:06Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "diffHunk": "@@ -297,4 +299,50 @@ void GIVEN_bootstrap_command_WHEN_runs_longer_than_5_sec_THEN_timeout_exception_\n         // this runs 5 seconds\n         assertThrows(TimeoutException.class, serviceWithJustBootstrapAndShouldTimeout::bootstrap);\n     }\n+\n+    @EnabledOnOs(OS.LINUX)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNjAxOQ=="}, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY2NzA1OQ==", "bodyText": "because we can't sudo to an unknown user - the assumeCanSudoShell method checks that we can execute sudo on a shell as a user 123456. If it cannot, the assumption fails, and the test is skipped.\nOn our provided mac laptops, we cannot execute sudo -u \\#123456 - it will fail with sudo: unknown user: #123456\nHowever - I just discovered that the userid -2 is predefined on macs as an \"unprivileged user\". I'll update this test to use that user instead so that it will run as expected", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506667059", "createdAt": "2020-10-16T18:58:51Z", "author": {"login": "rbattle"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "diffHunk": "@@ -297,4 +299,50 @@ void GIVEN_bootstrap_command_WHEN_runs_longer_than_5_sec_THEN_timeout_exception_\n         // this runs 5 seconds\n         assertThrows(TimeoutException.class, serviceWithJustBootstrapAndShouldTimeout::bootstrap);\n     }\n+\n+    @EnabledOnOs(OS.LINUX)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNjAxOQ=="}, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3Mzc0Nw==", "bodyText": "nevermind - it still won't work - it requires the user to enter the password for sudo as non-root user in the same session that the test is run in.", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r506673747", "createdAt": "2020-10-16T19:13:43Z", "author": {"login": "rbattle"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "diffHunk": "@@ -297,4 +299,50 @@ void GIVEN_bootstrap_command_WHEN_runs_longer_than_5_sec_THEN_timeout_exception_\n         // this runs 5 seconds\n         assertThrows(TimeoutException.class, serviceWithJustBootstrapAndShouldTimeout::bootstrap);\n     }\n+\n+    @EnabledOnOs(OS.LINUX)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNjAxOQ=="}, "originalCommit": {"oid": "eb143854e4f381772d4e84643d7f95d6715cc5d6"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzQ5MzcyOnYy", "diffSide": "RIGHT", "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzo0MDo1MlrOHjwicg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzo0MDo1MlrOHjwicg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NzQ1OA==", "bodyText": "[nit]\nClose reader", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/537#discussion_r507257458", "createdAt": "2020-10-18T23:40:52Z", "author": {"login": "MikeDombo"}, "path": "src/integrationtests/java/com/aws/greengrass/integrationtests/lifecyclemanager/GenericExternalServiceTest.java", "diffHunk": "@@ -297,4 +304,43 @@ void GIVEN_bootstrap_command_WHEN_runs_longer_than_5_sec_THEN_timeout_exception_\n         // this runs 5 seconds\n         assertThrows(TimeoutException.class, serviceWithJustBootstrapAndShouldTimeout::bootstrap);\n     }\n+\n+    @EnabledOnOs({OS.LINUX, OS.MAC})\n+    @ParameterizedTest\n+    @MethodSource(\"posixTestUserConfig\")\n+    void GIVEN_posix_default_user_WHEN_runs_THEN_runs_with_default_user(String file, String expectedUid)\n+            throws Exception {\n+        kernel.parseArgs(\"-i\", getClass().getResource(file).toString());\n+\n+        // skip when running as a user that cannot sudo to shell\n+        assumeCanSudoShell(kernel);\n+\n+        // create file for test to write UID into\n+        File testFile = File.createTempFile(\"user-test\", \".txt\");\n+        testFile.deleteOnExit();\n+        assertTrue(testFile.setWritable(true, false), \"could not set test file to be writable\");\n+        GenericExternalService service = (GenericExternalService) kernel.locate(\"echo_service\");\n+        service.getServiceConfig().find(SETENV_CONFIG_NAMESPACE, \"output_path\").withValue(testFile.getAbsolutePath());\n+\n+        CountDownLatch main = new CountDownLatch(1);\n+        kernel.getContext().addGlobalStateChangeListener((s, oldState, newState) -> {\n+            if (s.getName().equals(\"main\") && newState.equals(State.FINISHED)) {\n+                main.countDown();\n+            }\n+        });\n+        kernel.launch();\n+\n+        assertTrue(main.await(10, TimeUnit.SECONDS));\n+\n+        String user = Files.newBufferedReader(testFile.toPath()).readLine();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6676d929eecaa87673a28e096e07ead78e0ae52b"}, "originalPosition": 159}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 685, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}