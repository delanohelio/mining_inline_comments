{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzY2NDk5", "number": 7042, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDo0OTowNFrOEpxY3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzozOToxM1rOEt1xfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjM2MjUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/utils/FileUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDo0OTowNFrOHbpTJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMToyMzowN1rOHbqFvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1MDI0NQ==", "bodyText": "I am unsure if this handles all special cases correctly.\nnew File(path).getName() will work, though I have no idea if needed or if there is a performance drawback", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r498750245", "createdAt": "2020-10-02T10:49:04Z", "author": {"login": "tobiasKaminsky"}, "path": "src/main/java/com/owncloud/android/utils/FileUtil.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Andy Scherzinger\n+ * Copyright (C) 2020 Andy Scherzinger\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.utils;\n+\n+import com.owncloud.android.lib.resources.files.FileUtils;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+public final class FileUtil {\n+\n+    private FileUtil() {\n+        // utility class -> private constructor\n+    }\n+\n+    public static @NonNull String getFilenameFromPathString(@Nullable String filePath) {\n+        if (filePath != null) {\n+            return filePath.substring(filePath.lastIndexOf(FileUtils.PATH_SEPARATOR) + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "413477e03c3d48bed84bce8ab3f235130f5e667c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc2MzE5Nw==", "bodyText": "yeah, also not sure, so let's try new file variant", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r498763197", "createdAt": "2020-10-02T11:23:07Z", "author": {"login": "AndyScherzinger"}, "path": "src/main/java/com/owncloud/android/utils/FileUtil.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Andy Scherzinger\n+ * Copyright (C) 2020 Andy Scherzinger\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.utils;\n+\n+import com.owncloud.android.lib.resources.files.FileUtils;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+public final class FileUtil {\n+\n+    private FileUtil() {\n+        // utility class -> private constructor\n+    }\n+\n+    public static @NonNull String getFilenameFromPathString(@Nullable String filePath) {\n+        if (filePath != null) {\n+            return filePath.substring(filePath.lastIndexOf(FileUtils.PATH_SEPARATOR) + 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1MDI0NQ=="}, "originalCommit": {"oid": "413477e03c3d48bed84bce8ab3f235130f5e667c"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzI1MzMzOnYy", "diffSide": "RIGHT", "path": "src/androidTest/java/com/owncloud/android/utils/FileUtilTest.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNToyOToxMFrOHbyC-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjowMTowOVrOHbzIQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5MzU2Mw==", "bodyText": "The string printed in case of assertion error is a bit misleading, or?\nI think you can just remove it, as in all these cases it is direct understandable what should be tested", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r498893563", "createdAt": "2020-10-02T15:29:10Z", "author": {"login": "tobiasKaminsky"}, "path": "src/androidTest/java/com/owncloud/android/utils/FileUtilTest.kt", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Andy Scherzinger\n+ * Copyright (C) 2020 Andy Scherzinger\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+package com.owncloud.android.utils\n+\n+import com.owncloud.android.AbstractIT\n+import org.junit.Assert\n+import org.junit.Test\n+import java.io.File\n+\n+class FileUtilTest : AbstractIT() {\n+    @Test\n+    fun assertNullInput() {\n+        Assert.assertEquals(\"text returned when searchText was not empty\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e9d16f627d6c2b356d3939b9eaf19867efe0d74"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxMTI5OA==", "bodyText": "yeah c&p issue, I'll remove it, just didn't get the test to run locally so I tried a push top see if CI can work with it, many more test to come tough for the other utility stuff.", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r498911298", "createdAt": "2020-10-02T16:01:09Z", "author": {"login": "AndyScherzinger"}, "path": "src/androidTest/java/com/owncloud/android/utils/FileUtilTest.kt", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Andy Scherzinger\n+ * Copyright (C) 2020 Andy Scherzinger\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+package com.owncloud.android.utils\n+\n+import com.owncloud.android.AbstractIT\n+import org.junit.Assert\n+import org.junit.Test\n+import java.io.File\n+\n+class FileUtilTest : AbstractIT() {\n+    @Test\n+    fun assertNullInput() {\n+        Assert.assertEquals(\"text returned when searchText was not empty\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5MzU2Mw=="}, "originalCommit": {"oid": "9e9d16f627d6c2b356d3939b9eaf19867efe0d74"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzI1NzU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/utils/FileUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNTozMDoyMFrOHbyFjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjowMToyM1rOHbzItQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5NDIyMg==", "bodyText": "Can you add \"in case of null or path is a a folder it returns \"\" \"", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r498894222", "createdAt": "2020-10-02T15:30:20Z", "author": {"login": "tobiasKaminsky"}, "path": "src/main/java/com/owncloud/android/utils/FileUtil.java", "diffHunk": "@@ -34,7 +34,12 @@ private FileUtil() {\n \n     public static @NonNull String getFilenameFromPathString(@Nullable String filePath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e9d16f627d6c2b356d3939b9eaf19867efe0d74"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxMTQxMw==", "bodyText": "sure thing!", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r498911413", "createdAt": "2020-10-02T16:01:23Z", "author": {"login": "AndyScherzinger"}, "path": "src/main/java/com/owncloud/android/utils/FileUtil.java", "diffHunk": "@@ -34,7 +34,12 @@ private FileUtil() {\n \n     public static @NonNull String getFilenameFromPathString(@Nullable String filePath) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5NDIyMg=="}, "originalCommit": {"oid": "9e9d16f627d6c2b356d3939b9eaf19867efe0d74"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjQ5ODg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/utils/SyncedFolderUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0NTowOFrOHdHVtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjoyNzo0M1rOHdwz3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MDk5Nw==", "bodyText": "Can we have also tests for this class? \ud83d\udc99\ud83d\udc99\ud83d\udc99", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r500290997", "createdAt": "2020-10-06T13:45:08Z", "author": {"login": "tobiasKaminsky"}, "path": "src/main/java/com/owncloud/android/utils/SyncedFolderUtils.java", "diffHunk": "@@ -0,0 +1,202 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Andy Scherzinger\n+ * Copyright (C) 2020 Andy Scherzinger\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.owncloud.android.utils;\n+\n+import com.owncloud.android.datamodel.MediaFolder;\n+import com.owncloud.android.datamodel.MediaFolderType;\n+import com.owncloud.android.datamodel.SyncedFolder;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Set;\n+\n+import androidx.annotation.Nullable;\n+\n+/**\n+ * Utility class with methods for processing synced folders.\n+ */\n+public final class SyncedFolderUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27a2e37624a87f397dd6094f4f2639deb56f609"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3MDQ2MQ==", "bodyText": "DONE \ud83d\udc4d", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r500970461", "createdAt": "2020-10-07T12:27:43Z", "author": {"login": "AndyScherzinger"}, "path": "src/main/java/com/owncloud/android/utils/SyncedFolderUtils.java", "diffHunk": "@@ -0,0 +1,202 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Andy Scherzinger\n+ * Copyright (C) 2020 Andy Scherzinger\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.owncloud.android.utils;\n+\n+import com.owncloud.android.datamodel.MediaFolder;\n+import com.owncloud.android.datamodel.MediaFolderType;\n+import com.owncloud.android.datamodel.SyncedFolder;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Set;\n+\n+import androidx.annotation.Nullable;\n+\n+/**\n+ * Utility class with methods for processing synced folders.\n+ */\n+public final class SyncedFolderUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MDk5Nw=="}, "originalCommit": {"oid": "b27a2e37624a87f397dd6094f4f2639deb56f609"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTAwNTc3OnYy", "diffSide": "RIGHT", "path": "src/androidTest/java/com/owncloud/android/utils/SyncedFolderUtilsTest.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzozNjozNlrOHh3dHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoxMTozM1rOHh6Dow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI3MzYyOA==", "bodyText": "What is this?", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r505273628", "createdAt": "2020-10-15T07:36:36Z", "author": {"login": "tobiasKaminsky"}, "path": "src/androidTest/java/com/owncloud/android/utils/SyncedFolderUtilsTest.kt", "diffHunk": "@@ -0,0 +1,242 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Andy Scherzinger\n+ * Copyright (C) 2020 Andy Scherzinger\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.utils\n+\n+import com.owncloud.android.AbstractIT\n+import com.owncloud.android.datamodel.MediaFolder\n+import com.owncloud.android.datamodel.MediaFolderType\n+import com.owncloud.android.datamodel.SyncedFolder\n+import org.apache.commons.io.FileUtils\n+import org.junit.AfterClass\n+import org.junit.Assert\n+import org.junit.BeforeClass\n+import org.junit.Test\n+import java.io.File\n+import java.util.Arrays\n+\n+class SyncedFolderUtilsTest : AbstractIT() {\n+    @Test\n+    fun assertCoverFilenameUnqualified() {\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(COVER))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"cover.JPG\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"cover.jpeg\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"cover.JPEG\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"COVER.jpg\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(FOLDER))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"Folder.jpeg\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"FOLDER.jpg\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(THUMBDATA_FILE))\n+        THUMBDATA_FILE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7d61a0d83d18edf15274ab7dfdb3c7d0898d71"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMxNjI1OQ==", "bodyText": "Whoops, will be removed with next commit \ud83d\udc4d", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r505316259", "createdAt": "2020-10-15T08:11:33Z", "author": {"login": "AndyScherzinger"}, "path": "src/androidTest/java/com/owncloud/android/utils/SyncedFolderUtilsTest.kt", "diffHunk": "@@ -0,0 +1,242 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Andy Scherzinger\n+ * Copyright (C) 2020 Andy Scherzinger\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.utils\n+\n+import com.owncloud.android.AbstractIT\n+import com.owncloud.android.datamodel.MediaFolder\n+import com.owncloud.android.datamodel.MediaFolderType\n+import com.owncloud.android.datamodel.SyncedFolder\n+import org.apache.commons.io.FileUtils\n+import org.junit.AfterClass\n+import org.junit.Assert\n+import org.junit.BeforeClass\n+import org.junit.Test\n+import java.io.File\n+import java.util.Arrays\n+\n+class SyncedFolderUtilsTest : AbstractIT() {\n+    @Test\n+    fun assertCoverFilenameUnqualified() {\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(COVER))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"cover.JPG\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"cover.jpeg\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"cover.JPEG\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"COVER.jpg\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(FOLDER))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"Folder.jpeg\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(\"FOLDER.jpg\"))\n+        Assert.assertFalse(SyncedFolderUtils.isFileNameQualifiedForAutoUpload(THUMBDATA_FILE))\n+        THUMBDATA_FILE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI3MzYyOA=="}, "originalCommit": {"oid": "ba7d61a0d83d18edf15274ab7dfdb3c7d0898d71"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTAyMzk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/utils/FileUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzozOToxM1rOHh3pzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoxNzozNFrOHh6enQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI3Njg3Ng==", "bodyText": "You can use TextUtils.isEmpty(), which checks for null and empty\n(it requires then tests to be run in androidTest )", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r505276876", "createdAt": "2020-10-15T07:39:13Z", "author": {"login": "tobiasKaminsky"}, "path": "src/main/java/com/owncloud/android/utils/FileUtil.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Andy Scherzinger\n+ * Copyright (C) 2020 Andy Scherzinger\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.utils;\n+\n+import java.io.File;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+public final class FileUtil {\n+    private static final int EMPTY_LENGTH = 0;\n+\n+    private FileUtil() {\n+        // utility class -> private constructor\n+    }\n+\n+    /**\n+     * returns the file name of a given path.\n+     *\n+     * @param filePath (absolute) file path\n+     * @return the filename including its file extension, <code>empty String</code> for invalid input values\n+     */\n+    public static @NonNull\n+    String getFilenameFromPathString(@Nullable String filePath) {\n+        if (filePath != null && filePath.length() > EMPTY_LENGTH) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7d61a0d83d18edf15274ab7dfdb3c7d0898d71"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMyMzE2NQ==", "bodyText": "Changed it, the tests already run in androidTest \ud83d\udc4d", "url": "https://github.com/nextcloud/android/pull/7042#discussion_r505323165", "createdAt": "2020-10-15T08:17:34Z", "author": {"login": "AndyScherzinger"}, "path": "src/main/java/com/owncloud/android/utils/FileUtil.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Andy Scherzinger\n+ * Copyright (C) 2020 Andy Scherzinger\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.utils;\n+\n+import java.io.File;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+public final class FileUtil {\n+    private static final int EMPTY_LENGTH = 0;\n+\n+    private FileUtil() {\n+        // utility class -> private constructor\n+    }\n+\n+    /**\n+     * returns the file name of a given path.\n+     *\n+     * @param filePath (absolute) file path\n+     * @return the filename including its file extension, <code>empty String</code> for invalid input values\n+     */\n+    public static @NonNull\n+    String getFilenameFromPathString(@Nullable String filePath) {\n+        if (filePath != null && filePath.length() > EMPTY_LENGTH) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI3Njg3Ng=="}, "originalCommit": {"oid": "ba7d61a0d83d18edf15274ab7dfdb3c7d0898d71"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3242, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}