{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMzc1NTc0", "number": 5447, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOTo1Njo1NFrODf1cSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxMTo1MVrODf1vXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzA4MDQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/jobs/AccountRemovalJob.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOTo1Njo1NFrOFpxJ9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNjoyODozMFrOFqR9Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0MTMwMQ==", "bodyText": "I know that this was used before, so I am totally fine to re-use this.\nBut as our approach as to get rid of 3rd party libs, we should think about removing EventBus and evernote Job scheduling, but rely on WorkManager and\n[https://developer.android.com/topic/libraries/architecture/workmanager/how-to/states-and-observation#observing](observing your work)\nBut let us do this in a following PR, please :-)", "url": "https://github.com/nextcloud/android/pull/5447#discussion_r379341301", "createdAt": "2020-02-14T09:56:54Z", "author": {"login": "tobiasKaminsky"}, "path": "src/main/java/com/owncloud/android/jobs/AccountRemovalJob.java", "diffHunk": "@@ -75,100 +76,121 @@\n /**\n  * Removes account and all local files\n  */\n-public class AccountRemovalJob extends Job implements AccountManagerCallback<Boolean> {\n+public class AccountRemovalJob extends Job {\n     public static final String TAG = \"AccountRemovalJob\";\n     public static final String ACCOUNT = \"account\";\n     public static final String REMOTE_WIPE = \"remote_wipe\";\n \n     private final UploadsStorageManager uploadsStorageManager;\n     private final UserAccountManager userAccountManager;\n     private final Clock clock;\n+    private final EventBus eventBus;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afc2645c437dfd63b706945127971536c0e9e5d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0MjA3NQ==", "bodyText": "I understand the evernote thing, but why is it that we hate eventbus these days? It's a relatively established and long-living project that won't disappear tomorrow.", "url": "https://github.com/nextcloud/android/pull/5447#discussion_r379342075", "createdAt": "2020-02-14T09:58:22Z", "author": {"login": "mario"}, "path": "src/main/java/com/owncloud/android/jobs/AccountRemovalJob.java", "diffHunk": "@@ -75,100 +76,121 @@\n /**\n  * Removes account and all local files\n  */\n-public class AccountRemovalJob extends Job implements AccountManagerCallback<Boolean> {\n+public class AccountRemovalJob extends Job {\n     public static final String TAG = \"AccountRemovalJob\";\n     public static final String ACCOUNT = \"account\";\n     public static final String REMOTE_WIPE = \"remote_wipe\";\n \n     private final UploadsStorageManager uploadsStorageManager;\n     private final UserAccountManager userAccountManager;\n     private final Clock clock;\n+    private final EventBus eventBus;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0MTMwMQ=="}, "originalCommit": {"oid": "0afc2645c437dfd63b706945127971536c0e9e5d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1OTkzNA==", "bodyText": "@tobiasKaminsky I didn't add it - I just extracted a dependency that was explicitly created in a job constructor.\n@mario Good question!\nEventBus is not a bad piece of engineering in itself. However, how it's being used in practice is another story and mileage will vary.\nI wouldn't say I personally hate it. Event bus design pattern has it's place. I think that - as usual with engineering concepts - some people observed abuses and spoke loud about them. Some were more mature at verbalizing the issues, some - maybe pursuing social maedia traction - just vented out anger calling ppl names.\nIf we ask ourselves \"why\" in a serious manner, I can find few issues with event bus pattern in general, in no relation to Nextcloud app:\n\nit's very temping to inroduce hidden tight coupling between componets (no direct source-level dependency, but dependencies caused by complex event patterns)\ncascade of event posts makes callstack analysis challenging; it becomes very tricky if events are sent bi-directionally between many actors; this is what makes contribues seriously to microservices debugging difficulty and market is raging with fancy distributed-log-as-a-service solutions\nevent storms :-)\nupredictable and untraceable code paths - your component can be called from many places\n\nThose issues don't necessarily make event bus an anti-pattern, but migh influence a decision of using it or not. It can surely save you some typing, but typing is not a bottleneck in more complex systems. Also, at certain level of complexity, team/company social considerations cannot be dismissed lightly and more involving patterns, but requiring less engineering discipline might be preferred over more convenient ones, but requiring more informed or governed approach.\nBTW, we have LocalBroadcastManager that can serve this role as well. The drawback of LMB is that it requires Android platform in tests, so I wouldn't be so sure at all that we are anxious to remove EventBus. :-)", "url": "https://github.com/nextcloud/android/pull/5447#discussion_r379559934", "createdAt": "2020-02-14T17:42:20Z", "author": {"login": "ezaquarii"}, "path": "src/main/java/com/owncloud/android/jobs/AccountRemovalJob.java", "diffHunk": "@@ -75,100 +76,121 @@\n /**\n  * Removes account and all local files\n  */\n-public class AccountRemovalJob extends Job implements AccountManagerCallback<Boolean> {\n+public class AccountRemovalJob extends Job {\n     public static final String TAG = \"AccountRemovalJob\";\n     public static final String ACCOUNT = \"account\";\n     public static final String REMOTE_WIPE = \"remote_wipe\";\n \n     private final UploadsStorageManager uploadsStorageManager;\n     private final UserAccountManager userAccountManager;\n     private final Clock clock;\n+    private final EventBus eventBus;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0MTMwMQ=="}, "originalCommit": {"oid": "0afc2645c437dfd63b706945127971536c0e9e5d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODcyNw==", "bodyText": "I am aware of \"people\" complaining and the bad patterns surrounding EventBus, some of which are also inside Nextcloud (not the least, some written by me). Nevertheless, I really appreciate you taking the time to explain your thoughts in detail. Thank you once again for being awesome!", "url": "https://github.com/nextcloud/android/pull/5447#discussion_r379878727", "createdAt": "2020-02-16T06:28:30Z", "author": {"login": "mario"}, "path": "src/main/java/com/owncloud/android/jobs/AccountRemovalJob.java", "diffHunk": "@@ -75,100 +76,121 @@\n /**\n  * Removes account and all local files\n  */\n-public class AccountRemovalJob extends Job implements AccountManagerCallback<Boolean> {\n+public class AccountRemovalJob extends Job {\n     public static final String TAG = \"AccountRemovalJob\";\n     public static final String ACCOUNT = \"account\";\n     public static final String REMOTE_WIPE = \"remote_wipe\";\n \n     private final UploadsStorageManager uploadsStorageManager;\n     private final UserAccountManager userAccountManager;\n     private final Clock clock;\n+    private final EventBus eventBus;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0MTMwMQ=="}, "originalCommit": {"oid": "0afc2645c437dfd63b706945127971536c0e9e5d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzEyOTAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/jobs/OfflineSyncJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxMTo0OFrOFpxnLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxMTo0OFrOFpxnLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0ODc4Mg==", "bodyText": "Issue found: Avoid instantiating new objects inside loops", "url": "https://github.com/nextcloud/android/pull/5447#discussion_r379348782", "createdAt": "2020-02-14T10:11:48Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/jobs/OfflineSyncJob.java", "diffHunk": "@@ -89,10 +90,10 @@ protected Result onRunJob(@NonNull Params params) {\n                 }\n             }\n \n-            Account[] accounts = userAccountManager.getAccounts();\n+            List<User> users = userAccountManager.getAllUsers();\n \n-            for (Account account : accounts) {\n-                FileDataStorageManager storageManager = new FileDataStorageManager(account,\n+            for (User user : users) {\n+                FileDataStorageManager storageManager = new FileDataStorageManager(user.toPlatformAccount(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b4e1b82e3b48756f75f135451825fe25e43838d"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzEyOTA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/jobs/OfflineSyncJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxMTo0OVrOFpxnOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxMTo0OVrOFpxnOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0ODc5Mg==", "bodyText": "Issue found: Avoid instantiating new objects inside loops", "url": "https://github.com/nextcloud/android/pull/5447#discussion_r379348792", "createdAt": "2020-02-14T10:11:49Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/jobs/OfflineSyncJob.java", "diffHunk": "@@ -101,7 +102,7 @@ protected Result onRunJob(@NonNull Params params) {\n                     break;\n                 }\n \n-                recursive(new File(ocRoot.getStoragePath()), storageManager, account);\n+                recursive(new File(ocRoot.getStoragePath()), storageManager, user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b4e1b82e3b48756f75f135451825fe25e43838d"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzEyOTE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/jobs/MediaFoldersDetectionJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxMTo1MFrOFpxnQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxMTo1MFrOFpxnQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0ODgwMg==", "bodyText": "Issue found: Deeply nested if..then statements are hard to read", "url": "https://github.com/nextcloud/android/pull/5447#discussion_r379348802", "createdAt": "2020-02-14T10:11:50Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/jobs/MediaFoldersDetectionJob.java", "diffHunk": "@@ -138,32 +138,41 @@ protected Result onRunJob(@NonNull Params params) {\n                 videoMediaFolderPaths.removeAll(mediaFoldersModel.getVideoMediaFolders());\n \n                 if (!imageMediaFolderPaths.isEmpty() || !videoMediaFolderPaths.isEmpty()) {\n-                    Account[] accounts = userAccountManager.getAccounts();\n-                    List<Account> accountList = new ArrayList<>();\n-                    for (Account account : accounts) {\n-                        if (!arbitraryDataProvider.getBooleanValue(account, ManageAccountsActivity.PENDING_FOR_REMOVAL)) {\n-                            accountList.add(account);\n+                    List<User> allUsers = userAccountManager.getAllUsers();\n+                    List<User> activeUsers = new ArrayList<>();\n+                    for (User account : allUsers) {\n+                        if (!arbitraryDataProvider.getBooleanValue(account.toPlatformAccount(),\n+                                                                   ManageAccountsActivity.PENDING_FOR_REMOVAL)) {\n+                            activeUsers.add(account);\n                         }\n                     }\n \n-                    for (Account account : accountList) {\n+                    for (User user : activeUsers) {\n                         for (String imageMediaFolder : imageMediaFolderPaths) {\n-                            if (syncedFolderProvider.findByLocalPathAndAccount(imageMediaFolder, account) == null) {\n-                                sendNotification(String.format(context.getString(R.string.new_media_folder_detected),\n-                                    context.getString(R.string.new_media_folder_photos)),\n-                                    imageMediaFolder.substring(imageMediaFolder.lastIndexOf('/') + 1\n-                                    ),\n-                                    account, imageMediaFolder, 1);\n+                            final SyncedFolder folder = syncedFolderProvider.findByLocalPathAndAccount(imageMediaFolder,\n+                                                                                                       user.toPlatformAccount());\n+                            if (folder == null) {\n+                                String contentTitle = String.format(context.getString(R.string.new_media_folder_detected),\n+                                                                    context.getString(R.string.new_media_folder_photos));\n+                                sendNotification(contentTitle,\n+                                                imageMediaFolder.substring(imageMediaFolder.lastIndexOf('/') + 1),\n+                                                user,\n+                                                imageMediaFolder,\n+                                                 1);\n                             }\n                         }\n \n                         for (String videoMediaFolder : videoMediaFolderPaths) {\n-                            if (syncedFolderProvider.findByLocalPathAndAccount(videoMediaFolder, account) == null) {\n-                                sendNotification(String.format(context.getString(R.string.new_media_folder_detected),\n-                                    context.getString(R.string.new_media_folder_videos)),\n-                                    videoMediaFolder.substring(videoMediaFolder.lastIndexOf('/') + 1\n-                                    ),\n-                                    account, videoMediaFolder, 2);\n+                            final SyncedFolder folder = syncedFolderProvider.findByLocalPathAndAccount(videoMediaFolder,\n+                                                                                                       user.toPlatformAccount());\n+                            if (folder == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b4e1b82e3b48756f75f135451825fe25e43838d"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzEyOTI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/jobs/MediaFoldersDetectionJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxMTo1MVrOFpxnUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxMTo1MVrOFpxnUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0ODgxOQ==", "bodyText": "Issue found: Deeply nested if..then statements are hard to read", "url": "https://github.com/nextcloud/android/pull/5447#discussion_r379348819", "createdAt": "2020-02-14T10:11:51Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/jobs/MediaFoldersDetectionJob.java", "diffHunk": "@@ -138,32 +138,41 @@ protected Result onRunJob(@NonNull Params params) {\n                 videoMediaFolderPaths.removeAll(mediaFoldersModel.getVideoMediaFolders());\n \n                 if (!imageMediaFolderPaths.isEmpty() || !videoMediaFolderPaths.isEmpty()) {\n-                    Account[] accounts = userAccountManager.getAccounts();\n-                    List<Account> accountList = new ArrayList<>();\n-                    for (Account account : accounts) {\n-                        if (!arbitraryDataProvider.getBooleanValue(account, ManageAccountsActivity.PENDING_FOR_REMOVAL)) {\n-                            accountList.add(account);\n+                    List<User> allUsers = userAccountManager.getAllUsers();\n+                    List<User> activeUsers = new ArrayList<>();\n+                    for (User account : allUsers) {\n+                        if (!arbitraryDataProvider.getBooleanValue(account.toPlatformAccount(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b4e1b82e3b48756f75f135451825fe25e43838d"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3170, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}