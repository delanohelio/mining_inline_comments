{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMjkxMjY1", "number": 6107, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo1MTo1MlrOD97e9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo1Mjo0NFrOD97gGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjY0MzEwOnYy", "diffSide": "RIGHT", "path": "src/androidTest/java/com/owncloud/android/UploadIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo1MTo1MlrOGXuJpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzozMDo0N1rOGYLwpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNjU2NA==", "bodyText": "what if that fails? can the test be repeated again?", "url": "https://github.com/nextcloud/android/pull/6107#discussion_r427526564", "createdAt": "2020-05-19T18:51:52Z", "author": {"login": "ezaquarii"}, "path": "src/androidTest/java/com/owncloud/android/UploadIT.java", "diffHunk": "@@ -183,4 +184,151 @@ public void testUploadInNonExistingFolder() {\n         // cleanup\n         new RemoveFileOperation(\"/testUpload/\", false, account, false, targetContext).execute(client, getStorageManager());\n     }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyButNotCharging() {\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/notCharging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(\n+            storageManager,\n+            connectivityServiceMock,\n+            powerManagementServiceMock,\n+            account,\n+            null,\n+            ocUpload,\n+            FileUploader.NameCollisionPolicy.DEFAULT,\n+            FileUploader.LOCAL_BEHAVIOUR_COPY,\n+            targetContext,\n+            false,\n+            true\n+        );\n+        newUpload.setRemoteFolderToBeCreated();\n+        newUpload.addRenameUploadListener(() -> {\n+            // dummy\n+        });\n+\n+        RemoteOperationResult result = newUpload.execute(client, getStorageManager());\n+        assertFalse(result.toString(), result.isSuccess());\n+    }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyAndCharging() {\n+        PowerManagementService powerManagementServiceMock = new PowerManagementService() {\n+            @Override\n+            public boolean isPowerSavingEnabled() {\n+                return false;\n+            }\n+\n+            @Override\n+            public boolean isPowerSavingExclusionAvailable() {\n+                return false;\n+            }\n+\n+            @NotNull\n+            @Override\n+            public BatteryStatus getBattery() {\n+                return new BatteryStatus(true, 100);\n+            }\n+        };\n+\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/charging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(\n+            storageManager,\n+            connectivityServiceMock,\n+            powerManagementServiceMock,\n+            account,\n+            null,\n+            ocUpload,\n+            FileUploader.NameCollisionPolicy.DEFAULT,\n+            FileUploader.LOCAL_BEHAVIOUR_COPY,\n+            targetContext,\n+            false,\n+            true\n+        );\n+        newUpload.setRemoteFolderToBeCreated();\n+        newUpload.addRenameUploadListener(() -> {\n+            // dummy\n+        });\n+\n+        RemoteOperationResult result = newUpload.execute(client, getStorageManager());\n+        assertTrue(result.toString(), result.isSuccess());\n+\n+        // cleanup\n+        new RemoveFileOperation(\"/testUpload/\", false, account, false, targetContext).execute(client, getStorageManager());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867d83d98ee1791b212ddb61f2b88524a8c0341a"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAxMTY4Ng==", "bodyText": "If this fails something is seriously broken and then I think it is ok that this (or any following) test fails.", "url": "https://github.com/nextcloud/android/pull/6107#discussion_r428011686", "createdAt": "2020-05-20T13:30:47Z", "author": {"login": "tobiasKaminsky"}, "path": "src/androidTest/java/com/owncloud/android/UploadIT.java", "diffHunk": "@@ -183,4 +184,151 @@ public void testUploadInNonExistingFolder() {\n         // cleanup\n         new RemoveFileOperation(\"/testUpload/\", false, account, false, targetContext).execute(client, getStorageManager());\n     }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyButNotCharging() {\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/notCharging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(\n+            storageManager,\n+            connectivityServiceMock,\n+            powerManagementServiceMock,\n+            account,\n+            null,\n+            ocUpload,\n+            FileUploader.NameCollisionPolicy.DEFAULT,\n+            FileUploader.LOCAL_BEHAVIOUR_COPY,\n+            targetContext,\n+            false,\n+            true\n+        );\n+        newUpload.setRemoteFolderToBeCreated();\n+        newUpload.addRenameUploadListener(() -> {\n+            // dummy\n+        });\n+\n+        RemoteOperationResult result = newUpload.execute(client, getStorageManager());\n+        assertFalse(result.toString(), result.isSuccess());\n+    }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyAndCharging() {\n+        PowerManagementService powerManagementServiceMock = new PowerManagementService() {\n+            @Override\n+            public boolean isPowerSavingEnabled() {\n+                return false;\n+            }\n+\n+            @Override\n+            public boolean isPowerSavingExclusionAvailable() {\n+                return false;\n+            }\n+\n+            @NotNull\n+            @Override\n+            public BatteryStatus getBattery() {\n+                return new BatteryStatus(true, 100);\n+            }\n+        };\n+\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/charging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(\n+            storageManager,\n+            connectivityServiceMock,\n+            powerManagementServiceMock,\n+            account,\n+            null,\n+            ocUpload,\n+            FileUploader.NameCollisionPolicy.DEFAULT,\n+            FileUploader.LOCAL_BEHAVIOUR_COPY,\n+            targetContext,\n+            false,\n+            true\n+        );\n+        newUpload.setRemoteFolderToBeCreated();\n+        newUpload.addRenameUploadListener(() -> {\n+            // dummy\n+        });\n+\n+        RemoteOperationResult result = newUpload.execute(client, getStorageManager());\n+        assertTrue(result.toString(), result.isSuccess());\n+\n+        // cleanup\n+        new RemoveFileOperation(\"/testUpload/\", false, account, false, targetContext).execute(client, getStorageManager());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNjU2NA=="}, "originalCommit": {"oid": "867d83d98ee1791b212ddb61f2b88524a8c0341a"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjY0NjAxOnYy", "diffSide": "RIGHT", "path": "src/androidTest/java/com/owncloud/android/UploadIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo1Mjo0NFrOGXuLbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzozNDozM1rOGYL72g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNzAyMw==", "bodyText": "This setup seems to be repetive. We could do it in:\n@Before\nvoid setUp() { ... }", "url": "https://github.com/nextcloud/android/pull/6107#discussion_r427527023", "createdAt": "2020-05-19T18:52:44Z", "author": {"login": "ezaquarii"}, "path": "src/androidTest/java/com/owncloud/android/UploadIT.java", "diffHunk": "@@ -183,4 +184,151 @@ public void testUploadInNonExistingFolder() {\n         // cleanup\n         new RemoveFileOperation(\"/testUpload/\", false, account, false, targetContext).execute(client, getStorageManager());\n     }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyButNotCharging() {\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/notCharging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(\n+            storageManager,\n+            connectivityServiceMock,\n+            powerManagementServiceMock,\n+            account,\n+            null,\n+            ocUpload,\n+            FileUploader.NameCollisionPolicy.DEFAULT,\n+            FileUploader.LOCAL_BEHAVIOUR_COPY,\n+            targetContext,\n+            false,\n+            true\n+        );\n+        newUpload.setRemoteFolderToBeCreated();\n+        newUpload.addRenameUploadListener(() -> {\n+            // dummy\n+        });\n+\n+        RemoteOperationResult result = newUpload.execute(client, getStorageManager());\n+        assertFalse(result.toString(), result.isSuccess());\n+    }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyAndCharging() {\n+        PowerManagementService powerManagementServiceMock = new PowerManagementService() {\n+            @Override\n+            public boolean isPowerSavingEnabled() {\n+                return false;\n+            }\n+\n+            @Override\n+            public boolean isPowerSavingExclusionAvailable() {\n+                return false;\n+            }\n+\n+            @NotNull\n+            @Override\n+            public BatteryStatus getBattery() {\n+                return new BatteryStatus(true, 100);\n+            }\n+        };\n+\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/charging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867d83d98ee1791b212ddb61f2b88524a8c0341a"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAxNDU1NA==", "bodyText": "It is, and for unmodified uploads I have \"testUpload(\u2026)\".\nBut the 4 new added tests have slightly modifications:\n\nuse special connectivtyServiceMock / powerManagementServiceMock\nuse different values for onWifiOnly/whileChargingOnly\n\nSo for better readability I would keep it this way.", "url": "https://github.com/nextcloud/android/pull/6107#discussion_r428014554", "createdAt": "2020-05-20T13:34:33Z", "author": {"login": "tobiasKaminsky"}, "path": "src/androidTest/java/com/owncloud/android/UploadIT.java", "diffHunk": "@@ -183,4 +184,151 @@ public void testUploadInNonExistingFolder() {\n         // cleanup\n         new RemoveFileOperation(\"/testUpload/\", false, account, false, targetContext).execute(client, getStorageManager());\n     }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyButNotCharging() {\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/notCharging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(\n+            storageManager,\n+            connectivityServiceMock,\n+            powerManagementServiceMock,\n+            account,\n+            null,\n+            ocUpload,\n+            FileUploader.NameCollisionPolicy.DEFAULT,\n+            FileUploader.LOCAL_BEHAVIOUR_COPY,\n+            targetContext,\n+            false,\n+            true\n+        );\n+        newUpload.setRemoteFolderToBeCreated();\n+        newUpload.addRenameUploadListener(() -> {\n+            // dummy\n+        });\n+\n+        RemoteOperationResult result = newUpload.execute(client, getStorageManager());\n+        assertFalse(result.toString(), result.isSuccess());\n+    }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyAndCharging() {\n+        PowerManagementService powerManagementServiceMock = new PowerManagementService() {\n+            @Override\n+            public boolean isPowerSavingEnabled() {\n+                return false;\n+            }\n+\n+            @Override\n+            public boolean isPowerSavingExclusionAvailable() {\n+                return false;\n+            }\n+\n+            @NotNull\n+            @Override\n+            public BatteryStatus getBattery() {\n+                return new BatteryStatus(true, 100);\n+            }\n+        };\n+\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/charging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNzAyMw=="}, "originalCommit": {"oid": "867d83d98ee1791b212ddb61f2b88524a8c0341a"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3026, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}