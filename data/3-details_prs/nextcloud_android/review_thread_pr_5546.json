{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNjQ3ODMx", "number": 5546, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMjoyNjozNlrODlZzhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMjoyNjozNlrODlZzhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTQ2NjkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/nextcloud/client/migrations/Migrations.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMjoyNjozNlrOFyRmag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMTowNToxN1rOFykH7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI2MTQ4Mg==", "bodyText": "typo: account", "url": "https://github.com/nextcloud/android/pull/5546#discussion_r388261482", "createdAt": "2020-03-05T12:26:36Z", "author": {"login": "tobiasKaminsky"}, "path": "src/main/java/com/nextcloud/client/migrations/Migrations.kt", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Chris Narkiewicz\n+ * Copyright (C) 2020 Chris Narkiewicz <hello@ezaquarii.com>\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.nextcloud.client.migrations\n+\n+import com.nextcloud.client.account.UserAccountManager\n+import javax.inject.Inject\n+import kotlin.IllegalStateException\n+\n+/**\n+ * This class collects all migration steps and provides API to supply those\n+ * steps to [MigrationsManager] for execution.\n+ *\n+ * Note to maintainers: put all migration routines here and export collection of\n+ * opaque [Runnable]s via steps property.\n+ */\n+class Migrations @Inject constructor(\n+    private val userAccountManager: UserAccountManager\n+) {\n+\n+    /**\n+     * @param id Step id; id must be unique\n+     * @param description Human readable migration step description\n+     * @param function Migration runnable object\n+     * @param mandatory If true, failing migration will cause an exception; if false, it will be skipped and repeated\n+     *                  again on next startup\n+     */\n+    data class Step(val id: Int, val description: String, val function: Runnable, val mandatory: Boolean = true)\n+\n+    /**\n+     * List of migration steps. Those steps will be loaded and run by [MigrationsManager]\n+     */\n+    val steps: List<Step> = listOf(\n+        Step(0, \"migrate user id\", Runnable { migrateUserId() }, false)\n+    ).sortedBy { it.id }\n+\n+    fun migrateUserId() {\n+        val allAccuntsHaveUserId = userAccountManager.migrateUserId()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22c9c7a1b6317ecac730147c17d4aaa1537b23a8"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU2NDk3Mg==", "bodyText": "fixed the typo", "url": "https://github.com/nextcloud/android/pull/5546#discussion_r388564972", "createdAt": "2020-03-05T21:05:17Z", "author": {"login": "ezaquarii"}, "path": "src/main/java/com/nextcloud/client/migrations/Migrations.kt", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Chris Narkiewicz\n+ * Copyright (C) 2020 Chris Narkiewicz <hello@ezaquarii.com>\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package com.nextcloud.client.migrations\n+\n+import com.nextcloud.client.account.UserAccountManager\n+import javax.inject.Inject\n+import kotlin.IllegalStateException\n+\n+/**\n+ * This class collects all migration steps and provides API to supply those\n+ * steps to [MigrationsManager] for execution.\n+ *\n+ * Note to maintainers: put all migration routines here and export collection of\n+ * opaque [Runnable]s via steps property.\n+ */\n+class Migrations @Inject constructor(\n+    private val userAccountManager: UserAccountManager\n+) {\n+\n+    /**\n+     * @param id Step id; id must be unique\n+     * @param description Human readable migration step description\n+     * @param function Migration runnable object\n+     * @param mandatory If true, failing migration will cause an exception; if false, it will be skipped and repeated\n+     *                  again on next startup\n+     */\n+    data class Step(val id: Int, val description: String, val function: Runnable, val mandatory: Boolean = true)\n+\n+    /**\n+     * List of migration steps. Those steps will be loaded and run by [MigrationsManager]\n+     */\n+    val steps: List<Step> = listOf(\n+        Step(0, \"migrate user id\", Runnable { migrateUserId() }, false)\n+    ).sortedBy { it.id }\n+\n+    fun migrateUserId() {\n+        val allAccuntsHaveUserId = userAccountManager.migrateUserId()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI2MTQ4Mg=="}, "originalCommit": {"oid": "22c9c7a1b6317ecac730147c17d4aaa1537b23a8"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3117, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}