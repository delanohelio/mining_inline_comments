{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MzM0ODg0", "number": 6338, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMTo0NDowMlrOEH7m9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMTo0NjozOVrOEH7qfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzUyMTE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMTo0NDowMlrOGnlZyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMTo0NDowMlrOGnlZyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE2MDQ1Ng==", "bodyText": "should be extracted to strings.xml", "url": "https://github.com/nextcloud/android/pull/6338#discussion_r444160456", "createdAt": "2020-06-23T11:44:02Z", "author": {"login": "AndyScherzinger"}, "path": "src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java", "diffHunk": "@@ -529,39 +449,19 @@ private void parseAndLoginFromWebView(String dataString) {\n         String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n         LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, dataString);\n \n-        if (loginUrlInfo != null) {\n-            try {\n-                if (mHostUrlInput != null) {\n-                    mHostUrlInput.setText(\"\");\n-                }\n-                mServerInfo.mBaseUrl = AuthenticatorUrlUtils.normalizeUrlSuffix(loginUrlInfo.serverAddress);\n-                webViewUser = loginUrlInfo.username;\n-                webViewPassword = loginUrlInfo.password;\n-            } catch (Exception e) {\n-                mServerStatusIcon = R.drawable.ic_alert;\n-                mServerStatusText = \"QR Code could not be read!\";\n-                showServerStatus();\n-            }\n-            checkOcServer();\n-        }\n-    }\n-\n-    private void populateLoginFields(String dataString) throws IllegalArgumentException {\n-        // check if it is cloud://login/\n-        if (dataString.startsWith(getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\")) {\n-            String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n-            LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, dataString);\n-\n-            if (loginUrlInfo != null) {\n-                mHostUrlInput.setText(loginUrlInfo.serverAddress);\n-                mUsernameInput.setText(loginUrlInfo.username);\n-                mPasswordInput.setText(loginUrlInfo.password);\n-\n-                if (loginUrlInfo.serverAddress != null && !mServerIsChecked) {\n-                    onUrlInputFocusLost();\n-                }\n+        try {\n+            if (mHostUrlInput != null) {\n+                mHostUrlInput.setText(\"\");\n             }\n+            mServerInfo.mBaseUrl = AuthenticatorUrlUtils.normalizeUrlSuffix(loginUrlInfo.serverAddress);\n+            webViewUser = loginUrlInfo.username;\n+            webViewPassword = loginUrlInfo.password;\n+        } catch (Exception e) {\n+            mServerStatusIcon = R.drawable.ic_alert;\n+            mServerStatusText = \"QR Code could not be read!\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9876c0f75bc96d620f1b01dae9a8afec3af476"}, "originalPosition": 303}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzUzMDIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMTo0NjozOVrOGnlfIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMTo0NjozOVrOGnlfIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE2MTgyNw==", "bodyText": "like mentioned above, should be extracted to strings.xml", "url": "https://github.com/nextcloud/android/pull/6338#discussion_r444161827", "createdAt": "2020-06-23T11:46:39Z", "author": {"login": "AndyScherzinger"}, "path": "src/main/java/com/owncloud/android/authentication/AuthenticatorActivity.java", "diffHunk": "@@ -2017,17 +1393,15 @@ public void onServiceConnected(ComponentName component, IBinder service) {\n                     String prefix = getString(R.string.login_data_own_scheme) + PROTOCOL_SUFFIX + \"login/\";\n                     LoginUrlInfo loginUrlInfo = parseLoginDataUrl(prefix, data.toString());\n \n-                    if (loginUrlInfo != null) {\n-                        try {\n-                            mServerInfo.mBaseUrl = AuthenticatorUrlUtils.normalizeUrlSuffix(loginUrlInfo.serverAddress);\n-                            webViewUser = loginUrlInfo.username;\n-                            webViewPassword = loginUrlInfo.password;\n-                            doOnResumeAndBound();\n-                        } catch (Exception e) {\n-                            mServerStatusIcon = R.drawable.ic_alert;\n-                            mServerStatusText = \"QR Code could not be read!\";\n-                            showServerStatus();\n-                        }\n+                    try {\n+                        mServerInfo.mBaseUrl = AuthenticatorUrlUtils.normalizeUrlSuffix(loginUrlInfo.serverAddress);\n+                        webViewUser = loginUrlInfo.username;\n+                        webViewPassword = loginUrlInfo.password;\n+                        doOnResumeAndBound();\n+                    } catch (Exception e) {\n+                        mServerStatusIcon = R.drawable.ic_alert;\n+                        mServerStatusText = \"QR Code could not be read!\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9876c0f75bc96d620f1b01dae9a8afec3af476"}, "originalPosition": 1375}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3349, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}