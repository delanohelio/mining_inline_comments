{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMDQ3OTYx", "number": 6917, "title": "DocumentsStorageProvider: prevent opening stale file contents", "bodyText": "Replace SynchronizeFileOperation by ReadFileRemoteOperation to prevent opening stale file contents\nfix #6883\nSigned-off-by: Jens Mueller tschenser@gmx.de", "createdAt": "2020-09-09T18:41:05Z", "url": "https://github.com/nextcloud/android/pull/6917", "merged": true, "mergeCommit": {"oid": "d782da2fe978124fd65e2dd13c55be935caf7036"}, "closed": true, "closedAt": "2020-09-30T09:35:52Z", "author": {"login": "jmue"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHQfqNAH2gAyNDgzMDQ3OTYxOmUxNWY4ZmJjNmMwMjUxYjgyYTdjNGVjOWFmOGZhNWE1YTlmY2ZkYmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdN5eJVAFqTQ5OTI1MjQ1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e15f8fbc6c0251b82a7c4ec9af8fa5a5a9fcfdbf", "author": {"user": {"login": "jmue", "name": null}}, "url": "https://github.com/nextcloud/android/commit/e15f8fbc6c0251b82a7c4ec9af8fa5a5a9fcfdbf", "committedDate": "2020-09-09T18:27:46Z", "message": "DocumentsStorageProvider: prevent opening stale file contents\nfix #6883\n\nSigned-off-by: Jens Mueller <tschenser@gmx.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cae0e77267989d5177ede1624c0a217e70888658", "author": {"user": {"login": "jmue", "name": null}}, "url": "https://github.com/nextcloud/android/commit/cae0e77267989d5177ede1624c0a217e70888658", "committedDate": "2020-09-10T19:12:03Z", "message": "fix codacy comments\n\nSigned-off-by: Jens Mueller <tschenser@gmx.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjYyMTgx", "url": "https://github.com/nextcloud/android/pull/6917#pullrequestreview-486262181", "createdAt": "2020-09-10T19:52:30Z", "commit": {"oid": "cae0e77267989d5177ede1624c0a217e70888658"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTo1MjozMFrOHQDeLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTo1Njo1MlrOHQDmtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU5NjE0Mg==", "bodyText": "What if the result was not a success, but had a different error than this one? Are we just silently ignoring it?", "url": "https://github.com/nextcloud/android/pull/6917#discussion_r486596142", "createdAt": "2020-09-10T19:52:30Z", "author": {"login": "grote"}, "path": "src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java", "diffHunk": "@@ -196,27 +198,32 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell\n \n         OCFile ocFile = document.getFile();\n         Account account = document.getAccount();\n-        final User user = accountManager.getUser(account.name).orElseThrow(RuntimeException::new); // should exist\n \n-        if (ocFile.isDown()) {\n-            RemoteOperationResult result;\n-            try {\n-                result = new SynchronizeFileOperation(ocFile, null, user, true, context)\n-                    .execute(document.getClient(), document.getStorageManager());\n-            } catch (Exception e) {\n-                throw getFileNotFoundExceptionWithCause(\"Error synchronizing file: \" + ocFile.getFileName(), e);\n-            }\n-            if (result.getCode() == RemoteOperationResult.ResultCode.SYNC_CONFLICT) {\n-                // TODO show a conflict notification with a pending intent that shows a ConflictResolveDialog\n-                Log_OC.w(TAG, \"Conflict found: \" + result);\n-            } else if (!result.isSuccess()) {\n+        int accessMode = ParcelFileDescriptor.parseMode(mode);\n+\n+        boolean needsDownload = accessMode != ParcelFileDescriptor.MODE_WRITE_ONLY;\n+        if (needsDownload && ocFile.isDown()) {\n+            RemoteOperationResult result = new ReadFileRemoteOperation(ocFile.getRemotePath())\n+                .execute(document.getClient());\n+            if (result.isSuccess()) {\n+                OCFile serverFile = FileStorageUtils.fillOCFile((RemoteFile) result.getData().get(0));\n+                boolean serverChanged = !serverFile.getEtag().equals(ocFile.getEtag());\n+                boolean localChanged = ocFile.getLocalModificationTimestamp() > ocFile.getLastSyncDateForData();\n+                if (localChanged && serverChanged) {\n+                    // TODO show a conflict notification with a pending intent that shows a ConflictResolveDialog\n+                    Log_OC.w(TAG, \"Conflict found: \" + result);\n+                    // open local version for now\n+                    needsDownload = false;\n+                } else {\n+                    needsDownload = serverChanged;\n+                }\n+            } else if (result.getCode() == RemoteOperationResult.ResultCode.FILE_NOT_FOUND) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae0e77267989d5177ede1624c0a217e70888658"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU5Njg1OA==", "bodyText": "Do we always need to do that? Is there another way to find out if the local file can be considered up-to-date?", "url": "https://github.com/nextcloud/android/pull/6917#discussion_r486596858", "createdAt": "2020-09-10T19:53:58Z", "author": {"login": "grote"}, "path": "src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java", "diffHunk": "@@ -196,27 +198,32 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell\n \n         OCFile ocFile = document.getFile();\n         Account account = document.getAccount();\n-        final User user = accountManager.getUser(account.name).orElseThrow(RuntimeException::new); // should exist\n \n-        if (ocFile.isDown()) {\n-            RemoteOperationResult result;\n-            try {\n-                result = new SynchronizeFileOperation(ocFile, null, user, true, context)\n-                    .execute(document.getClient(), document.getStorageManager());\n-            } catch (Exception e) {\n-                throw getFileNotFoundExceptionWithCause(\"Error synchronizing file: \" + ocFile.getFileName(), e);\n-            }\n-            if (result.getCode() == RemoteOperationResult.ResultCode.SYNC_CONFLICT) {\n-                // TODO show a conflict notification with a pending intent that shows a ConflictResolveDialog\n-                Log_OC.w(TAG, \"Conflict found: \" + result);\n-            } else if (!result.isSuccess()) {\n+        int accessMode = ParcelFileDescriptor.parseMode(mode);\n+\n+        boolean needsDownload = accessMode != ParcelFileDescriptor.MODE_WRITE_ONLY;\n+        if (needsDownload && ocFile.isDown()) {\n+            RemoteOperationResult result = new ReadFileRemoteOperation(ocFile.getRemotePath())\n+                .execute(document.getClient());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae0e77267989d5177ede1624c0a217e70888658"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU5ODAxNg==", "bodyText": "This is a logic change. Before, we were always downloading the file when it was not down (available locally I guess). Now, we only do this when want to read the file which sounds plausible. I am just flagging this, because it changes the behavior.", "url": "https://github.com/nextcloud/android/pull/6917#discussion_r486598016", "createdAt": "2020-09-10T19:56:16Z", "author": {"login": "grote"}, "path": "src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java", "diffHunk": "@@ -196,27 +198,32 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell\n \n         OCFile ocFile = document.getFile();\n         Account account = document.getAccount();\n-        final User user = accountManager.getUser(account.name).orElseThrow(RuntimeException::new); // should exist\n \n-        if (ocFile.isDown()) {\n-            RemoteOperationResult result;\n-            try {\n-                result = new SynchronizeFileOperation(ocFile, null, user, true, context)\n-                    .execute(document.getClient(), document.getStorageManager());\n-            } catch (Exception e) {\n-                throw getFileNotFoundExceptionWithCause(\"Error synchronizing file: \" + ocFile.getFileName(), e);\n-            }\n-            if (result.getCode() == RemoteOperationResult.ResultCode.SYNC_CONFLICT) {\n-                // TODO show a conflict notification with a pending intent that shows a ConflictResolveDialog\n-                Log_OC.w(TAG, \"Conflict found: \" + result);\n-            } else if (!result.isSuccess()) {\n+        int accessMode = ParcelFileDescriptor.parseMode(mode);\n+\n+        boolean needsDownload = accessMode != ParcelFileDescriptor.MODE_WRITE_ONLY;\n+        if (needsDownload && ocFile.isDown()) {\n+            RemoteOperationResult result = new ReadFileRemoteOperation(ocFile.getRemotePath())\n+                .execute(document.getClient());\n+            if (result.isSuccess()) {\n+                OCFile serverFile = FileStorageUtils.fillOCFile((RemoteFile) result.getData().get(0));\n+                boolean serverChanged = !serverFile.getEtag().equals(ocFile.getEtag());\n+                boolean localChanged = ocFile.getLocalModificationTimestamp() > ocFile.getLastSyncDateForData();\n+                if (localChanged && serverChanged) {\n+                    // TODO show a conflict notification with a pending intent that shows a ConflictResolveDialog\n+                    Log_OC.w(TAG, \"Conflict found: \" + result);\n+                    // open local version for now\n+                    needsDownload = false;\n+                } else {\n+                    needsDownload = serverChanged;\n+                }\n+            } else if (result.getCode() == RemoteOperationResult.ResultCode.FILE_NOT_FOUND) {\n                 Log_OC.e(TAG, result.toString());\n                 throw new FileNotFoundException(\"Error synchronizing file: \" + ocFile.getFileName());\n             }\n-            // TODO test if this needed here\n-            // block thread until file is saved\n-            FileStorageUtils.checkIfFileFinishedSaving(ocFile);\n-        } else {\n+        }\n+\n+        if (needsDownload) {\n             DownloadFileOperation downloadFileOperation = new DownloadFileOperation(account, ocFile, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae0e77267989d5177ede1624c0a217e70888658"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU5ODMyNw==", "bodyText": "Did you test/check/verify that this is not needed anymore when using the ReadFileRemoteOperation and FileStorageUtils.fillOCFile()?", "url": "https://github.com/nextcloud/android/pull/6917#discussion_r486598327", "createdAt": "2020-09-10T19:56:52Z", "author": {"login": "grote"}, "path": "src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java", "diffHunk": "@@ -196,27 +198,32 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell\n \n         OCFile ocFile = document.getFile();\n         Account account = document.getAccount();\n-        final User user = accountManager.getUser(account.name).orElseThrow(RuntimeException::new); // should exist\n \n-        if (ocFile.isDown()) {\n-            RemoteOperationResult result;\n-            try {\n-                result = new SynchronizeFileOperation(ocFile, null, user, true, context)\n-                    .execute(document.getClient(), document.getStorageManager());\n-            } catch (Exception e) {\n-                throw getFileNotFoundExceptionWithCause(\"Error synchronizing file: \" + ocFile.getFileName(), e);\n-            }\n-            if (result.getCode() == RemoteOperationResult.ResultCode.SYNC_CONFLICT) {\n-                // TODO show a conflict notification with a pending intent that shows a ConflictResolveDialog\n-                Log_OC.w(TAG, \"Conflict found: \" + result);\n-            } else if (!result.isSuccess()) {\n+        int accessMode = ParcelFileDescriptor.parseMode(mode);\n+\n+        boolean needsDownload = accessMode != ParcelFileDescriptor.MODE_WRITE_ONLY;\n+        if (needsDownload && ocFile.isDown()) {\n+            RemoteOperationResult result = new ReadFileRemoteOperation(ocFile.getRemotePath())\n+                .execute(document.getClient());\n+            if (result.isSuccess()) {\n+                OCFile serverFile = FileStorageUtils.fillOCFile((RemoteFile) result.getData().get(0));\n+                boolean serverChanged = !serverFile.getEtag().equals(ocFile.getEtag());\n+                boolean localChanged = ocFile.getLocalModificationTimestamp() > ocFile.getLastSyncDateForData();\n+                if (localChanged && serverChanged) {\n+                    // TODO show a conflict notification with a pending intent that shows a ConflictResolveDialog\n+                    Log_OC.w(TAG, \"Conflict found: \" + result);\n+                    // open local version for now\n+                    needsDownload = false;\n+                } else {\n+                    needsDownload = serverChanged;\n+                }\n+            } else if (result.getCode() == RemoteOperationResult.ResultCode.FILE_NOT_FOUND) {\n                 Log_OC.e(TAG, result.toString());\n                 throw new FileNotFoundException(\"Error synchronizing file: \" + ocFile.getFileName());\n             }\n-            // TODO test if this needed here\n-            // block thread until file is saved\n-            FileStorageUtils.checkIfFileFinishedSaving(ocFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae0e77267989d5177ede1624c0a217e70888658"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjExNTkz", "url": "https://github.com/nextcloud/android/pull/6917#pullrequestreview-486611593", "createdAt": "2020-09-11T08:44:49Z", "commit": {"oid": "cae0e77267989d5177ede1624c0a217e70888658"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODo0NDo1MFrOHQT_jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODo0NDo1MFrOHQT_jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2NjgzMQ==", "bodyText": "If this is open with write_only and file is downloaded, then it should also be checked for changed content/eTag, or?", "url": "https://github.com/nextcloud/android/pull/6917#discussion_r486866831", "createdAt": "2020-09-11T08:44:50Z", "author": {"login": "tobiasKaminsky"}, "path": "src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java", "diffHunk": "@@ -196,27 +198,32 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell\n \n         OCFile ocFile = document.getFile();\n         Account account = document.getAccount();\n-        final User user = accountManager.getUser(account.name).orElseThrow(RuntimeException::new); // should exist\n \n-        if (ocFile.isDown()) {\n-            RemoteOperationResult result;\n-            try {\n-                result = new SynchronizeFileOperation(ocFile, null, user, true, context)\n-                    .execute(document.getClient(), document.getStorageManager());\n-            } catch (Exception e) {\n-                throw getFileNotFoundExceptionWithCause(\"Error synchronizing file: \" + ocFile.getFileName(), e);\n-            }\n-            if (result.getCode() == RemoteOperationResult.ResultCode.SYNC_CONFLICT) {\n-                // TODO show a conflict notification with a pending intent that shows a ConflictResolveDialog\n-                Log_OC.w(TAG, \"Conflict found: \" + result);\n-            } else if (!result.isSuccess()) {\n+        int accessMode = ParcelFileDescriptor.parseMode(mode);\n+\n+        boolean needsDownload = accessMode != ParcelFileDescriptor.MODE_WRITE_ONLY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae0e77267989d5177ede1624c0a217e70888658"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c00e7b3dbb4c75e7183307073d5d2310d84635d1", "author": {"user": {"login": "jmue", "name": null}}, "url": "https://github.com/nextcloud/android/commit/c00e7b3dbb4c75e7183307073d5d2310d84635d1", "committedDate": "2020-09-11T22:02:49Z", "message": "fix review comments\n\nSigned-off-by: Jens Mueller <tschenser@gmx.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9a82f9ed95ba83ff346f35812df54e5fe18608e", "author": {"user": {"login": "jmue", "name": null}}, "url": "https://github.com/nextcloud/android/commit/f9a82f9ed95ba83ff346f35812df54e5fe18608e", "committedDate": "2020-09-11T22:09:51Z", "message": "add integration test\n\nSigned-off-by: Jens Mueller <tschenser@gmx.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NjczMTcy", "url": "https://github.com/nextcloud/android/pull/6917#pullrequestreview-487673172", "createdAt": "2020-09-14T11:47:49Z", "commit": {"oid": "c00e7b3dbb4c75e7183307073d5d2310d84635d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTo0Nzo0OVrOHRQA8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTo0Nzo0OVrOHRQA8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1MDIyNw==", "bodyText": "We could also pass in the document here, since it has OCFile and Account.", "url": "https://github.com/nextcloud/android/pull/6917#discussion_r487850227", "createdAt": "2020-09-14T11:47:49Z", "author": {"login": "grote"}, "path": "src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java", "diffHunk": "@@ -268,6 +249,22 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell\n         }\n     }\n \n+    private boolean hasServerChange(OCFile ocFile, Account account) throws FileNotFoundException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c00e7b3dbb4c75e7183307073d5d2310d84635d1"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4b0e29d80d05a3ff3051cfe19bdc68ed69759c5", "author": {"user": {"login": "jmue", "name": null}}, "url": "https://github.com/nextcloud/android/commit/a4b0e29d80d05a3ff3051cfe19bdc68ed69759c5", "committedDate": "2020-09-14T18:35:20Z", "message": "fix review comments\n\nSigned-off-by: Jens Mueller <tschenser@gmx.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e57e61a6cceb29b810f9cb78890d259e54a4d8a9", "author": {"user": {"login": "jmue", "name": null}}, "url": "https://github.com/nextcloud/android/commit/e57e61a6cceb29b810f9cb78890d259e54a4d8a9", "committedDate": "2020-09-14T18:15:34Z", "message": "fix review comments\n\nSigned-off-by: Jens Mueller <tschenser@gmx.de>"}, "afterCommit": {"oid": "a4b0e29d80d05a3ff3051cfe19bdc68ed69759c5", "author": {"user": {"login": "jmue", "name": null}}, "url": "https://github.com/nextcloud/android/commit/a4b0e29d80d05a3ff3051cfe19bdc68ed69759c5", "committedDate": "2020-09-14T18:35:20Z", "message": "fix review comments\n\nSigned-off-by: Jens Mueller <tschenser@gmx.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69f3f804e29efe9fcb008ed96e54e13b2a6b09ee", "author": {"user": {"login": "jmue", "name": null}}, "url": "https://github.com/nextcloud/android/commit/69f3f804e29efe9fcb008ed96e54e13b2a6b09ee", "committedDate": "2020-09-15T03:36:32Z", "message": "fix ktlint\n\nSigned-off-by: Jens Mueller <tschenser@gmx.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDIyODA1", "url": "https://github.com/nextcloud/android/pull/6917#pullrequestreview-489022805", "createdAt": "2020-09-15T19:54:55Z", "commit": {"oid": "69f3f804e29efe9fcb008ed96e54e13b2a6b09ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo1NDo1NVrOHSSRuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo1NDo1NVrOHSSRuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzNTg2NA==", "bodyText": "What happens if we read/write a file again that was not yet uploaded to the server. Does this return FILE_NOT_FOUND here and thus throws?\nDo all other tests from DocumentsStorageProviderIT still pass?", "url": "https://github.com/nextcloud/android/pull/6917#discussion_r488935864", "createdAt": "2020-09-15T19:54:55Z", "author": {"login": "grote"}, "path": "src/main/java/com/owncloud/android/providers/DocumentsStorageProvider.java", "diffHunk": "@@ -263,6 +248,23 @@ public ParcelFileDescriptor openDocument(String documentId, String mode, Cancell\n         }\n     }\n \n+    private boolean hasServerChange(Document document) throws FileNotFoundException {\n+        Context context = getNonNullContext();\n+        OCFile ocFile = document.getFile();\n+        RemoteOperationResult result = new CheckEtagRemoteOperation(ocFile.getRemotePath(), ocFile.getEtag())\n+            .execute(document.getAccount(), context);\n+        switch (result.getCode()) {\n+            case ETAG_CHANGED:\n+                return true;\n+            case ETAG_UNCHANGED:\n+                return false;\n+            case FILE_NOT_FOUND:\n+            default:\n+                Log_OC.e(TAG, result.toString());\n+                throw new FileNotFoundException(\"Error synchronizing file: \" + ocFile.getFileName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f3f804e29efe9fcb008ed96e54e13b2a6b09ee"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MjUyNDUw", "url": "https://github.com/nextcloud/android/pull/6917#pullrequestreview-499252450", "createdAt": "2020-09-30T09:35:46Z", "commit": {"oid": "69f3f804e29efe9fcb008ed96e54e13b2a6b09ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4477, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}