{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMjkxMjY1", "number": 6107, "title": "Fix upload and wrote tests", "bodyText": "This is only in dev/master, so no backport needed.\n\ud83d\udc4d  for using dev myself and suffering from it ;-)\nSigned-off-by: tobiasKaminsky tobias@kaminsky.me\nTesting\nWriting tests is very important. Please try to write some tests for your PR.\nIf you need help, please do not hesitate to ask in this PR for help.\nunit tests\ninstrumented tests\nUI tests\n\n Tests written, or not not needed", "createdAt": "2020-05-19T18:30:25Z", "url": "https://github.com/nextcloud/android/pull/6107", "merged": true, "mergeCommit": {"oid": "f0da2f41e1741718d7eabbe8a3630a3f65a1a8ea"}, "closed": true, "closedAt": "2020-05-20T15:11:37Z", "author": {"login": "tobiasKaminsky"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci5JPDgFqTQxNDczMjE4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjKKrqgBqjMzNTY4MjIxNTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NzMyMTg1", "url": "https://github.com/nextcloud/android/pull/6107#pullrequestreview-414732185", "createdAt": "2020-05-19T18:51:52Z", "commit": {"oid": "867d83d98ee1791b212ddb61f2b88524a8c0341a"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo1MTo1MlrOGXuJpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo1Mjo0NFrOGXuLbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNjU2NA==", "bodyText": "what if that fails? can the test be repeated again?", "url": "https://github.com/nextcloud/android/pull/6107#discussion_r427526564", "createdAt": "2020-05-19T18:51:52Z", "author": {"login": "ezaquarii"}, "path": "src/androidTest/java/com/owncloud/android/UploadIT.java", "diffHunk": "@@ -183,4 +184,151 @@ public void testUploadInNonExistingFolder() {\n         // cleanup\n         new RemoveFileOperation(\"/testUpload/\", false, account, false, targetContext).execute(client, getStorageManager());\n     }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyButNotCharging() {\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/notCharging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(\n+            storageManager,\n+            connectivityServiceMock,\n+            powerManagementServiceMock,\n+            account,\n+            null,\n+            ocUpload,\n+            FileUploader.NameCollisionPolicy.DEFAULT,\n+            FileUploader.LOCAL_BEHAVIOUR_COPY,\n+            targetContext,\n+            false,\n+            true\n+        );\n+        newUpload.setRemoteFolderToBeCreated();\n+        newUpload.addRenameUploadListener(() -> {\n+            // dummy\n+        });\n+\n+        RemoteOperationResult result = newUpload.execute(client, getStorageManager());\n+        assertFalse(result.toString(), result.isSuccess());\n+    }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyAndCharging() {\n+        PowerManagementService powerManagementServiceMock = new PowerManagementService() {\n+            @Override\n+            public boolean isPowerSavingEnabled() {\n+                return false;\n+            }\n+\n+            @Override\n+            public boolean isPowerSavingExclusionAvailable() {\n+                return false;\n+            }\n+\n+            @NotNull\n+            @Override\n+            public BatteryStatus getBattery() {\n+                return new BatteryStatus(true, 100);\n+            }\n+        };\n+\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/charging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(\n+            storageManager,\n+            connectivityServiceMock,\n+            powerManagementServiceMock,\n+            account,\n+            null,\n+            ocUpload,\n+            FileUploader.NameCollisionPolicy.DEFAULT,\n+            FileUploader.LOCAL_BEHAVIOUR_COPY,\n+            targetContext,\n+            false,\n+            true\n+        );\n+        newUpload.setRemoteFolderToBeCreated();\n+        newUpload.addRenameUploadListener(() -> {\n+            // dummy\n+        });\n+\n+        RemoteOperationResult result = newUpload.execute(client, getStorageManager());\n+        assertTrue(result.toString(), result.isSuccess());\n+\n+        // cleanup\n+        new RemoveFileOperation(\"/testUpload/\", false, account, false, targetContext).execute(client, getStorageManager());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867d83d98ee1791b212ddb61f2b88524a8c0341a"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNzAyMw==", "bodyText": "This setup seems to be repetive. We could do it in:\n@Before\nvoid setUp() { ... }", "url": "https://github.com/nextcloud/android/pull/6107#discussion_r427527023", "createdAt": "2020-05-19T18:52:44Z", "author": {"login": "ezaquarii"}, "path": "src/androidTest/java/com/owncloud/android/UploadIT.java", "diffHunk": "@@ -183,4 +184,151 @@ public void testUploadInNonExistingFolder() {\n         // cleanup\n         new RemoveFileOperation(\"/testUpload/\", false, account, false, targetContext).execute(client, getStorageManager());\n     }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyButNotCharging() {\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/notCharging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(\n+            storageManager,\n+            connectivityServiceMock,\n+            powerManagementServiceMock,\n+            account,\n+            null,\n+            ocUpload,\n+            FileUploader.NameCollisionPolicy.DEFAULT,\n+            FileUploader.LOCAL_BEHAVIOUR_COPY,\n+            targetContext,\n+            false,\n+            true\n+        );\n+        newUpload.setRemoteFolderToBeCreated();\n+        newUpload.addRenameUploadListener(() -> {\n+            // dummy\n+        });\n+\n+        RemoteOperationResult result = newUpload.execute(client, getStorageManager());\n+        assertFalse(result.toString(), result.isSuccess());\n+    }\n+\n+    @Test\n+    public void testUploadOnChargingOnlyAndCharging() {\n+        PowerManagementService powerManagementServiceMock = new PowerManagementService() {\n+            @Override\n+            public boolean isPowerSavingEnabled() {\n+                return false;\n+            }\n+\n+            @Override\n+            public boolean isPowerSavingExclusionAvailable() {\n+                return false;\n+            }\n+\n+            @NotNull\n+            @Override\n+            public BatteryStatus getBattery() {\n+                return new BatteryStatus(true, 100);\n+            }\n+        };\n+\n+        OCUpload ocUpload = new OCUpload(FileStorageUtils.getSavePath(account.name) + \"/empty.txt\",\n+                                         \"/testUpload/charging.txt\", account.name);\n+        ocUpload.setWhileChargingOnly(true);\n+\n+        UploadFileOperation newUpload = new UploadFileOperation(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867d83d98ee1791b212ddb61f2b88524a8c0341a"}, "originalPosition": 74}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "867d83d98ee1791b212ddb61f2b88524a8c0341a", "author": {"user": {"login": "tobiasKaminsky", "name": "Tobias Kaminsky"}}, "url": "https://github.com/nextcloud/android/commit/867d83d98ee1791b212ddb61f2b88524a8c0341a", "committedDate": "2020-05-19T18:17:59Z", "message": "Fix upload and wrote tests\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>"}, "afterCommit": {"oid": "20d04d6fa52b051de9773822fd713329a1ed02d2", "author": {"user": {"login": "tobiasKaminsky", "name": "Tobias Kaminsky"}}, "url": "https://github.com/nextcloud/android/commit/20d04d6fa52b051de9773822fd713329a1ed02d2", "committedDate": "2020-05-20T13:47:34Z", "message": "Fix upload and wrote tests\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c9838442f72977a41948d4e21aa3f232f174ae", "author": {"user": {"login": "tobiasKaminsky", "name": "Tobias Kaminsky"}}, "url": "https://github.com/nextcloud/android/commit/89c9838442f72977a41948d4e21aa3f232f174ae", "committedDate": "2020-05-20T13:49:07Z", "message": "Fix upload and wrote tests\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a4be987d978136f03b6d1c2a02ec0bbac205932", "author": {"user": {"login": "tobiasKaminsky", "name": "Tobias Kaminsky"}}, "url": "https://github.com/nextcloud/android/commit/1a4be987d978136f03b6d1c2a02ec0bbac205932", "committedDate": "2020-05-20T14:43:59Z", "message": "Fix upload and wrote tests\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20d04d6fa52b051de9773822fd713329a1ed02d2", "author": {"user": {"login": "tobiasKaminsky", "name": "Tobias Kaminsky"}}, "url": "https://github.com/nextcloud/android/commit/20d04d6fa52b051de9773822fd713329a1ed02d2", "committedDate": "2020-05-20T13:47:34Z", "message": "Fix upload and wrote tests\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>"}, "afterCommit": {"oid": "1a4be987d978136f03b6d1c2a02ec0bbac205932", "author": {"user": {"login": "tobiasKaminsky", "name": "Tobias Kaminsky"}}, "url": "https://github.com/nextcloud/android/commit/1a4be987d978136f03b6d1c2a02ec0bbac205932", "committedDate": "2020-05-20T14:43:59Z", "message": "Fix upload and wrote tests\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4630, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}