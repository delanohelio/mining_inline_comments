{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNjY0NjE3", "number": 6400, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzo0NTowM1rOEKhGYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzo0NTo1N1rOEKhH_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDYzNTIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/utils/ThemeUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzo0NTowM1rOGrmjYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNTowNTowNlrOGrp5gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MzYwMQ==", "bodyText": "Is this obeying dark mode?", "url": "https://github.com/nextcloud/android/pull/6400#discussion_r448373601", "createdAt": "2020-07-01T13:45:03Z", "author": {"login": "tobiasKaminsky"}, "path": "src/main/java/com/owncloud/android/utils/ThemeUtils.java", "diffHunk": "@@ -712,6 +706,28 @@ public static void colorFloatingActionButton(FloatingActionButton button, int ba\n         button.setRippleColor(rippleColor);\n     }\n \n+    public static void colorIconImageViewWithBackground(ImageView imageView, Context context) {\n+        int primaryColor = ThemeUtils.primaryColor(null, true, false, context);\n+\n+        imageView.getBackground().setColorFilter(primaryColor, PorterDuff.Mode.SRC_IN);\n+        imageView.getDrawable().mutate().setColorFilter(getColorForPrimary(primaryColor), PorterDuff.Mode.SRC_IN);\n+    }\n+\n+    /**\n+     * returns a primary color matching color for texts/icons on top of a primary-colored element (like buttons).\n+     *\n+     * @param primaryColor the primary color\n+     */\n+    private getColorForPrimary(int primaryColor) {\n+        if (Color.BLACK == primaryColor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b09bd98be267a7f8c30fb0b985174467c3f6019c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyODQxOQ==", "bodyText": "Not at this very moment, we just do this based on the primary color for edge cases and else use the server's text-color value. See also my other comment.", "url": "https://github.com/nextcloud/android/pull/6400#discussion_r448428419", "createdAt": "2020-07-01T15:05:06Z", "author": {"login": "AndyScherzinger"}, "path": "src/main/java/com/owncloud/android/utils/ThemeUtils.java", "diffHunk": "@@ -712,6 +706,28 @@ public static void colorFloatingActionButton(FloatingActionButton button, int ba\n         button.setRippleColor(rippleColor);\n     }\n \n+    public static void colorIconImageViewWithBackground(ImageView imageView, Context context) {\n+        int primaryColor = ThemeUtils.primaryColor(null, true, false, context);\n+\n+        imageView.getBackground().setColorFilter(primaryColor, PorterDuff.Mode.SRC_IN);\n+        imageView.getDrawable().mutate().setColorFilter(getColorForPrimary(primaryColor), PorterDuff.Mode.SRC_IN);\n+    }\n+\n+    /**\n+     * returns a primary color matching color for texts/icons on top of a primary-colored element (like buttons).\n+     *\n+     * @param primaryColor the primary color\n+     */\n+    private getColorForPrimary(int primaryColor) {\n+        if (Color.BLACK == primaryColor) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MzYwMQ=="}, "originalCommit": {"oid": "b09bd98be267a7f8c30fb0b985174467c3f6019c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDYzOTM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/utils/ThemeUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzo0NTo1N1rOGrml8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMTo1NDoyOFrOGsJiyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3NDI1OA==", "bodyText": "Isn't this also a good idea to have this computed on server? font-color-light and font-color dark?", "url": "https://github.com/nextcloud/android/pull/6400#discussion_r448374258", "createdAt": "2020-07-01T13:45:57Z", "author": {"login": "tobiasKaminsky"}, "path": "src/main/java/com/owncloud/android/utils/ThemeUtils.java", "diffHunk": "@@ -712,6 +706,28 @@ public static void colorFloatingActionButton(FloatingActionButton button, int ba\n         button.setRippleColor(rippleColor);\n     }\n \n+    public static void colorIconImageViewWithBackground(ImageView imageView, Context context) {\n+        int primaryColor = ThemeUtils.primaryColor(null, true, false, context);\n+\n+        imageView.getBackground().setColorFilter(primaryColor, PorterDuff.Mode.SRC_IN);\n+        imageView.getDrawable().mutate().setColorFilter(getColorForPrimary(primaryColor), PorterDuff.Mode.SRC_IN);\n+    }\n+\n+    /**\n+     * returns a primary color matching color for texts/icons on top of a primary-colored element (like buttons).\n+     *\n+     * @param primaryColor the primary color\n+     */\n+    private getColorForPrimary(int primaryColor) {\n+        if (Color.BLACK == primaryColor) {\n+            return Color.WHITE;\n+        } else if (Color.WHITE == primaryColor) {\n+            return Color.BLACK;\n+        } else {\n+            return ThemeUtils.fontColor(context, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b09bd98be267a7f8c30fb0b985174467c3f6019c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyNzgzOA==", "bodyText": "Don't know, but @nickvergessen might be able to shed some light on the font-color calculations. I'd hope that with a fallback-ing background color working for dark/light the text-color of a button doesn't have any contrast issues anymore. So we would rather have to discuss if primary button texts would have to be white/black or if we just use white in both theme variants.\nSo also pinging @jancborchardt about this. ATM we don't have text-color variant from the server (also with element-color reference)", "url": "https://github.com/nextcloud/android/pull/6400#discussion_r448427838", "createdAt": "2020-07-01T15:04:12Z", "author": {"login": "AndyScherzinger"}, "path": "src/main/java/com/owncloud/android/utils/ThemeUtils.java", "diffHunk": "@@ -712,6 +706,28 @@ public static void colorFloatingActionButton(FloatingActionButton button, int ba\n         button.setRippleColor(rippleColor);\n     }\n \n+    public static void colorIconImageViewWithBackground(ImageView imageView, Context context) {\n+        int primaryColor = ThemeUtils.primaryColor(null, true, false, context);\n+\n+        imageView.getBackground().setColorFilter(primaryColor, PorterDuff.Mode.SRC_IN);\n+        imageView.getDrawable().mutate().setColorFilter(getColorForPrimary(primaryColor), PorterDuff.Mode.SRC_IN);\n+    }\n+\n+    /**\n+     * returns a primary color matching color for texts/icons on top of a primary-colored element (like buttons).\n+     *\n+     * @param primaryColor the primary color\n+     */\n+    private getColorForPrimary(int primaryColor) {\n+        if (Color.BLACK == primaryColor) {\n+            return Color.WHITE;\n+        } else if (Color.WHITE == primaryColor) {\n+            return Color.BLACK;\n+        } else {\n+            return ThemeUtils.fontColor(context, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3NDI1OA=="}, "originalCommit": {"oid": "b09bd98be267a7f8c30fb0b985174467c3f6019c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk0Njg4OA==", "bodyText": "Fine for me to have this in next PR \ud83d\udc4d", "url": "https://github.com/nextcloud/android/pull/6400#discussion_r448946888", "createdAt": "2020-07-02T11:54:28Z", "author": {"login": "tobiasKaminsky"}, "path": "src/main/java/com/owncloud/android/utils/ThemeUtils.java", "diffHunk": "@@ -712,6 +706,28 @@ public static void colorFloatingActionButton(FloatingActionButton button, int ba\n         button.setRippleColor(rippleColor);\n     }\n \n+    public static void colorIconImageViewWithBackground(ImageView imageView, Context context) {\n+        int primaryColor = ThemeUtils.primaryColor(null, true, false, context);\n+\n+        imageView.getBackground().setColorFilter(primaryColor, PorterDuff.Mode.SRC_IN);\n+        imageView.getDrawable().mutate().setColorFilter(getColorForPrimary(primaryColor), PorterDuff.Mode.SRC_IN);\n+    }\n+\n+    /**\n+     * returns a primary color matching color for texts/icons on top of a primary-colored element (like buttons).\n+     *\n+     * @param primaryColor the primary color\n+     */\n+    private getColorForPrimary(int primaryColor) {\n+        if (Color.BLACK == primaryColor) {\n+            return Color.WHITE;\n+        } else if (Color.WHITE == primaryColor) {\n+            return Color.BLACK;\n+        } else {\n+            return ThemeUtils.fontColor(context, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3NDI1OA=="}, "originalCommit": {"oid": "b09bd98be267a7f8c30fb0b985174467c3f6019c"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3307, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}