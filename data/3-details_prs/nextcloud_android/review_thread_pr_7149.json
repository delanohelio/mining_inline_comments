{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNjA1MTM5", "number": 7149, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxMlrOEzQu_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoyMVrOEzQvKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTg3MDA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/ui/asynctasks/RetrieveStatusAsyncTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxMlrOHqYJMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxMlrOHqYJMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NzgwOQ==", "bodyText": "Codacy found an issue: Unnecessary use of fully qualified name 'com.owncloud.android.lib.resources.users.Status' due to existing import 'com.owncloud.android.lib.resources.users.Status'", "url": "https://github.com/nextcloud/android/pull/7149#discussion_r514197809", "createdAt": "2020-10-29T11:48:12Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/ui/asynctasks/RetrieveStatusAsyncTask.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Tobias Kaminsky\n+ * Copyright (C) 2020 Tobias Kaminsky\n+ * Copyright (C) 2020 Nextcloud GmbH\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.ui.asynctasks;\n+\n+import android.os.AsyncTask;\n+\n+import com.nextcloud.client.account.User;\n+import com.nextcloud.client.network.ClientFactory;\n+import com.nextcloud.common.NextcloudClient;\n+import com.nextcloud.ui.ChooseAccountDialogFragment;\n+import com.owncloud.android.lib.common.operations.RemoteOperationResult;\n+import com.owncloud.android.lib.resources.users.GetStatusRemoteOperation;\n+import com.owncloud.android.lib.resources.users.Status;\n+import com.owncloud.android.lib.resources.users.StatusType;\n+\n+import java.lang.ref.WeakReference;\n+\n+public class RetrieveStatusAsyncTask extends AsyncTask<Void, Void, Status> {\n+    private final User user;\n+    private final WeakReference<ChooseAccountDialogFragment> chooseAccountDialogFragment;\n+    private final ClientFactory clientFactory;\n+\n+    public RetrieveStatusAsyncTask(User user,\n+                                   ChooseAccountDialogFragment chooseAccountDialogFragment,\n+                                   ClientFactory clientFactory) {\n+        this.user = user;\n+        this.chooseAccountDialogFragment = new WeakReference<>(chooseAccountDialogFragment);\n+        this.clientFactory = clientFactory;\n+    }\n+\n+    @Override\n+    protected com.owncloud.android.lib.resources.users.Status doInBackground(Void... voids) {\n+        try {\n+            NextcloudClient client = clientFactory.createNextcloudClient(user);\n+            RemoteOperationResult result = new GetStatusRemoteOperation().execute(client);\n+\n+            return (com.owncloud.android.lib.resources.users.Status) result.getSingleData();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d71b46d39548b3865c987dcd1498ea0e8ef4eb"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTg3MDE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/ui/StatusDrawable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxM1rOHqYJQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxM1rOHqYJQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NzgyNA==", "bodyText": "Codacy found an issue: Assigning an Object to null is a code smell.  Consider refactoring.", "url": "https://github.com/nextcloud/android/pull/7149#discussion_r514197824", "createdAt": "2020-10-29T11:48:13Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/ui/StatusDrawable.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Tobias Kaminsky\n+ * Copyright (C) 2020 Tobias Kaminsky\n+ * Copyright (C) 2020 Nextcloud GmbH\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.ui;\n+\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.Color;\n+import android.graphics.ColorFilter;\n+import android.graphics.Paint;\n+import android.graphics.PixelFormat;\n+import android.graphics.drawable.Drawable;\n+import android.text.TextUtils;\n+\n+import com.owncloud.android.R;\n+import com.owncloud.android.lib.resources.users.Status;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.NonNull;\n+import androidx.core.content.res.ResourcesCompat;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+/**\n+ * A Drawable object that draws a status\n+ */\n+@SuppressFBWarnings(\"PME_POOR_MANS_ENUM\")\n+public class StatusDrawable extends Drawable {\n+    private String text;\n+    private @DrawableRes int icon = -1;\n+    private Paint textPaint;\n+    private Paint backgroundPaint;\n+    private final float radius;\n+    private Context context;\n+    private final static int whiteBackground = Color.argb(200, 255, 255, 255);\n+    private final static int onlineStatus = Color.argb(255, 73, 179, 130);\n+\n+    public StatusDrawable(Status status, float statusSize, Context context) {\n+        backgroundPaint = new Paint();\n+        backgroundPaint.setStyle(Paint.Style.FILL);\n+        backgroundPaint.setAntiAlias(true);\n+\n+        radius = statusSize;\n+\n+        if (TextUtils.isEmpty(status.getIcon())) {\n+            switch (status.getStatus()) {\n+                case DND:\n+                    icon = R.drawable.ic_user_status_dnd;\n+                    backgroundPaint.setColor(whiteBackground);\n+                    this.context = context;\n+                    break;\n+\n+                case ONLINE:\n+                    backgroundPaint.setColor(onlineStatus);\n+                    break;\n+\n+                case AWAY:\n+                    icon = R.drawable.ic_user_status_away;\n+                    backgroundPaint.setColor(whiteBackground);\n+                    this.context = context;\n+                    break;\n+\n+                default:\n+                    // do not show\n+                    backgroundPaint = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d71b46d39548b3865c987dcd1498ea0e8ef4eb"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTg3MDIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxNFrOHqYJSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxNFrOHqYJSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NzgzMw==", "bodyText": "Codacy found an issue: Avoid instantiating new objects inside loops", "url": "https://github.com/nextcloud/android/pull/7149#discussion_r514197833", "createdAt": "2020-10-29T11:48:14Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "diffHunk": "@@ -229,21 +243,35 @@ private Cursor searchForUsersOrGroups(Uri uri) {\n                 Iterator<JSONObject> namesIt = names.iterator();\n                 JSONObject item;\n                 String displayName;\n-                int icon = 0;\n+                String subline = null;\n+                Object icon = 0;\n                 Uri dataUri;\n                 int count = 0;\n                 while (namesIt.hasNext()) {\n                     item = namesIt.next();\n                     dataUri = null;\n                     displayName = null;\n                     String userName = item.getString(GetShareesRemoteOperation.PROPERTY_LABEL);\n+                    String name = item.isNull(\"name\") ? \"\" : item.getString(\"name\");\n                     JSONObject value = item.getJSONObject(GetShareesRemoteOperation.NODE_VALUE);\n                     ShareType type = ShareType.fromValue(value.getInt(GetShareesRemoteOperation.PROPERTY_SHARE_TYPE));\n                     String shareWith = value.getString(GetShareesRemoteOperation.PROPERTY_SHARE_WITH);\n \n+                    Status status;\n+                    JSONObject statusObject = item.optJSONObject(\"status\");\n+\n+                    if (statusObject != null) {\n+                        status = new Status(StatusType.valueOf(statusObject.getString(\"status\")),\n+                                            statusObject.isNull(\"message\") ? \"\" : statusObject.getString(\"message\"),\n+                                            statusObject.isNull(\"icon\") ? \"\" : statusObject.getString(\"icon\"),\n+                                            statusObject.isNull(\"clearAt\") ? -1 : statusObject.getLong(\"clearAt\"));\n+                    } else {\n+                        status = new Status(StatusType.OFFLINE, \"\", \"\", -1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d71b46d39548b3865c987dcd1498ea0e8ef4eb"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTg3MDI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxNVrOHqYJUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxNVrOHqYJUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5Nzg0Mg==", "bodyText": "Codacy found an issue: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter", "url": "https://github.com/nextcloud/android/pull/7149#discussion_r514197842", "createdAt": "2020-10-29T11:48:15Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "diffHunk": "@@ -324,6 +370,59 @@ public int update(@NonNull Uri uri, ContentValues values, String selection, Stri\n         return 0;\n     }\n \n+    @Nullable\n+    @Override\n+    @SuppressFBWarnings(\"IOI_USE_OF_FILE_STREAM_CONSTRUCTORS\") // TODO remove with API26\n+    public ParcelFileDescriptor openFile(@NonNull Uri uri, @NonNull String mode) throws FileNotFoundException {\n+        ArbitraryDataProvider arbitraryDataProvider = new ArbitraryDataProvider(getContext().getContentResolver());\n+\n+        String userId = uri.getQueryParameter(\"shareWith\");\n+        String displayName = uri.getQueryParameter(\"displayName\");\n+        String accountName = accountManager.getUser().getAccountName();\n+        String serverName = accountName.substring(accountName.lastIndexOf('@') + 1);\n+\n+        String eTag = arbitraryDataProvider.getValue(userId + \"@\" + serverName, ThumbnailsCacheManager.AVATAR);\n+        String avatarKey = \"a_\" + userId + \"_\" + serverName + \"_\" + eTag;\n+\n+        StatusType status = StatusType.valueOf(uri.getQueryParameter(\"status\"));\n+        String icon = uri.getQueryParameter(\"icon\");\n+\n+        Bitmap avatarBitmap = ThumbnailsCacheManager.getBitmapFromDiskCache(avatarKey);\n+\n+        if (avatarBitmap == null) {\n+            float avatarRadius = getContext().getResources().getDimension(R.dimen.list_item_avatar_icon_radius);\n+            avatarBitmap = BitmapUtils.drawableToBitmap(TextDrawable.createNamedAvatar(displayName, avatarRadius));\n+        }\n+\n+        Bitmap avatar = BitmapUtils.createAvatarWithStatus(avatarBitmap, status, icon, getContext());\n+\n+        // create a file to write bitmap data\n+        File f = new File(getContext().getCacheDir(), \"test\");\n+        try {\n+            if (!f.createNewFile()) {\n+                throw new IllegalStateException(\"File could not be created!\");\n+            }\n+\n+            //Convert bitmap to byte array\n+            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+\n+            avatar.compress(Bitmap.CompressFormat.PNG, 90, bos);\n+            byte[] bitmapData = bos.toByteArray();\n+\n+            //write the bytes in file\n+            try (FileOutputStream fos = new FileOutputStream(f)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d71b46d39548b3865c987dcd1498ea0e8ef4eb"}, "originalPosition": 192}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTg3MDMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxNlrOHqYJXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxNlrOHqYJXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5Nzg1Mw==", "bodyText": "Codacy found an issue: Assigning an Object to null is a code smell.  Consider refactoring.", "url": "https://github.com/nextcloud/android/pull/7149#discussion_r514197853", "createdAt": "2020-10-29T11:48:16Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "diffHunk": "@@ -254,30 +282,47 @@ private Cursor searchForUsersOrGroups(Uri uri) {\n                                 dataUri = Uri.withAppendedPath(remoteBaseUri, shareWith);\n \n                                 if (userName.equals(shareWith)) {\n-                                    displayName = getContext().getString(R.string.share_remote_clarification, userName);\n+                                    displayName = name;\n+                                    subline = getContext().getString(R.string.remote);\n                                 } else {\n                                     String[] uriSplitted = shareWith.split(\"@\");\n-                                    displayName = getContext().getString(R.string.share_known_remote_clarification,\n-                                                                         userName, uriSplitted[uriSplitted.length - 1]);\n+                                    displayName = name;\n+                                    subline = getContext().getString(R.string.share_known_remote_on_clarification,\n+                                                                     uriSplitted[uriSplitted.length - 1]);\n                                 }\n                             }\n                             break;\n \n                         case USER:\n                             displayName = userName;\n-                            icon = R.drawable.ic_user;\n+                            subline = status.getMessage().isEmpty() ? null : status.getMessage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d71b46d39548b3865c987dcd1498ea0e8ef4eb"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTg3MDM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/ui/TextDrawable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxN1rOHqYJaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxN1rOHqYJaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5Nzg2NQ==", "bodyText": "Codacy found an issue: Avoid using redundant field initializer for 'bigText'", "url": "https://github.com/nextcloud/android/pull/7149#discussion_r514197865", "createdAt": "2020-10-29T11:48:17Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/ui/TextDrawable.java", "diffHunk": "@@ -65,6 +64,8 @@\n      */\n     private float mRadius;\n \n+    private boolean bigText = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d71b46d39548b3865c987dcd1498ea0e8ef4eb"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTg3MDM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/ui/asynctasks/RetrieveStatusAsyncTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxOFrOHqYJbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxOFrOHqYJbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5Nzg3MA==", "bodyText": "Codacy found an issue: Unnecessary use of fully qualified name 'com.owncloud.android.lib.resources.users.Status' due to existing import 'com.owncloud.android.lib.resources.users.Status'", "url": "https://github.com/nextcloud/android/pull/7149#discussion_r514197870", "createdAt": "2020-10-29T11:48:18Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/ui/asynctasks/RetrieveStatusAsyncTask.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Tobias Kaminsky\n+ * Copyright (C) 2020 Tobias Kaminsky\n+ * Copyright (C) 2020 Nextcloud GmbH\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.ui.asynctasks;\n+\n+import android.os.AsyncTask;\n+\n+import com.nextcloud.client.account.User;\n+import com.nextcloud.client.network.ClientFactory;\n+import com.nextcloud.common.NextcloudClient;\n+import com.nextcloud.ui.ChooseAccountDialogFragment;\n+import com.owncloud.android.lib.common.operations.RemoteOperationResult;\n+import com.owncloud.android.lib.resources.users.GetStatusRemoteOperation;\n+import com.owncloud.android.lib.resources.users.Status;\n+import com.owncloud.android.lib.resources.users.StatusType;\n+\n+import java.lang.ref.WeakReference;\n+\n+public class RetrieveStatusAsyncTask extends AsyncTask<Void, Void, Status> {\n+    private final User user;\n+    private final WeakReference<ChooseAccountDialogFragment> chooseAccountDialogFragment;\n+    private final ClientFactory clientFactory;\n+\n+    public RetrieveStatusAsyncTask(User user,\n+                                   ChooseAccountDialogFragment chooseAccountDialogFragment,\n+                                   ClientFactory clientFactory) {\n+        this.user = user;\n+        this.chooseAccountDialogFragment = new WeakReference<>(chooseAccountDialogFragment);\n+        this.clientFactory = clientFactory;\n+    }\n+\n+    @Override\n+    protected com.owncloud.android.lib.resources.users.Status doInBackground(Void... voids) {\n+        try {\n+            NextcloudClient client = clientFactory.createNextcloudClient(user);\n+            RemoteOperationResult result = new GetStatusRemoteOperation().execute(client);\n+\n+            return (com.owncloud.android.lib.resources.users.Status) result.getSingleData();\n+\n+        } catch (ClientFactory.CreationException e) {\n+            return new com.owncloud.android.lib.resources.users.Status(StatusType.OFFLINE, \"\", \"\", -1);\n+        }\n+    }\n+\n+    @Override\n+    protected void onPostExecute(com.owncloud.android.lib.resources.users.Status status) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d71b46d39548b3865c987dcd1498ea0e8ef4eb"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTg3MDQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxOVrOHqYJdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoxOVrOHqYJdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5Nzg3Ng==", "bodyText": "Codacy found an issue: Avoid instantiating new objects inside loops", "url": "https://github.com/nextcloud/android/pull/7149#discussion_r514197876", "createdAt": "2020-10-29T11:48:19Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "diffHunk": "@@ -229,21 +243,35 @@ private Cursor searchForUsersOrGroups(Uri uri) {\n                 Iterator<JSONObject> namesIt = names.iterator();\n                 JSONObject item;\n                 String displayName;\n-                int icon = 0;\n+                String subline = null;\n+                Object icon = 0;\n                 Uri dataUri;\n                 int count = 0;\n                 while (namesIt.hasNext()) {\n                     item = namesIt.next();\n                     dataUri = null;\n                     displayName = null;\n                     String userName = item.getString(GetShareesRemoteOperation.PROPERTY_LABEL);\n+                    String name = item.isNull(\"name\") ? \"\" : item.getString(\"name\");\n                     JSONObject value = item.getJSONObject(GetShareesRemoteOperation.NODE_VALUE);\n                     ShareType type = ShareType.fromValue(value.getInt(GetShareesRemoteOperation.PROPERTY_SHARE_TYPE));\n                     String shareWith = value.getString(GetShareesRemoteOperation.PROPERTY_SHARE_WITH);\n \n+                    Status status;\n+                    JSONObject statusObject = item.optJSONObject(\"status\");\n+\n+                    if (statusObject != null) {\n+                        status = new Status(StatusType.valueOf(statusObject.getString(\"status\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d71b46d39548b3865c987dcd1498ea0e8ef4eb"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTg3MDQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/ui/asynctasks/RetrieveStatusAsyncTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoyMFrOHqYJeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoyMFrOHqYJeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5Nzg4MQ==", "bodyText": "Codacy found an issue: Unnecessary use of fully qualified name 'com.owncloud.android.lib.resources.users.Status' due to existing import 'com.owncloud.android.lib.resources.users.Status'", "url": "https://github.com/nextcloud/android/pull/7149#discussion_r514197881", "createdAt": "2020-10-29T11:48:20Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/ui/asynctasks/RetrieveStatusAsyncTask.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Tobias Kaminsky\n+ * Copyright (C) 2020 Tobias Kaminsky\n+ * Copyright (C) 2020 Nextcloud GmbH\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.ui.asynctasks;\n+\n+import android.os.AsyncTask;\n+\n+import com.nextcloud.client.account.User;\n+import com.nextcloud.client.network.ClientFactory;\n+import com.nextcloud.common.NextcloudClient;\n+import com.nextcloud.ui.ChooseAccountDialogFragment;\n+import com.owncloud.android.lib.common.operations.RemoteOperationResult;\n+import com.owncloud.android.lib.resources.users.GetStatusRemoteOperation;\n+import com.owncloud.android.lib.resources.users.Status;\n+import com.owncloud.android.lib.resources.users.StatusType;\n+\n+import java.lang.ref.WeakReference;\n+\n+public class RetrieveStatusAsyncTask extends AsyncTask<Void, Void, Status> {\n+    private final User user;\n+    private final WeakReference<ChooseAccountDialogFragment> chooseAccountDialogFragment;\n+    private final ClientFactory clientFactory;\n+\n+    public RetrieveStatusAsyncTask(User user,\n+                                   ChooseAccountDialogFragment chooseAccountDialogFragment,\n+                                   ClientFactory clientFactory) {\n+        this.user = user;\n+        this.chooseAccountDialogFragment = new WeakReference<>(chooseAccountDialogFragment);\n+        this.clientFactory = clientFactory;\n+    }\n+\n+    @Override\n+    protected com.owncloud.android.lib.resources.users.Status doInBackground(Void... voids) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d71b46d39548b3865c987dcd1498ea0e8ef4eb"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTg3MDUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/owncloud/android/ui/asynctasks/RetrieveStatusAsyncTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoyMVrOHqYJgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo0ODoyMVrOHqYJgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5Nzg5MA==", "bodyText": "Codacy found an issue: Unnecessary use of fully qualified name 'com.owncloud.android.lib.resources.users.Status' due to existing import 'com.owncloud.android.lib.resources.users.Status'", "url": "https://github.com/nextcloud/android/pull/7149#discussion_r514197890", "createdAt": "2020-10-29T11:48:21Z", "author": {"login": "nextcloud-android-bot"}, "path": "src/main/java/com/owncloud/android/ui/asynctasks/RetrieveStatusAsyncTask.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Nextcloud Android client application\n+ *\n+ * @author Tobias Kaminsky\n+ * Copyright (C) 2020 Tobias Kaminsky\n+ * Copyright (C) 2020 Nextcloud GmbH\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.ui.asynctasks;\n+\n+import android.os.AsyncTask;\n+\n+import com.nextcloud.client.account.User;\n+import com.nextcloud.client.network.ClientFactory;\n+import com.nextcloud.common.NextcloudClient;\n+import com.nextcloud.ui.ChooseAccountDialogFragment;\n+import com.owncloud.android.lib.common.operations.RemoteOperationResult;\n+import com.owncloud.android.lib.resources.users.GetStatusRemoteOperation;\n+import com.owncloud.android.lib.resources.users.Status;\n+import com.owncloud.android.lib.resources.users.StatusType;\n+\n+import java.lang.ref.WeakReference;\n+\n+public class RetrieveStatusAsyncTask extends AsyncTask<Void, Void, Status> {\n+    private final User user;\n+    private final WeakReference<ChooseAccountDialogFragment> chooseAccountDialogFragment;\n+    private final ClientFactory clientFactory;\n+\n+    public RetrieveStatusAsyncTask(User user,\n+                                   ChooseAccountDialogFragment chooseAccountDialogFragment,\n+                                   ClientFactory clientFactory) {\n+        this.user = user;\n+        this.chooseAccountDialogFragment = new WeakReference<>(chooseAccountDialogFragment);\n+        this.clientFactory = clientFactory;\n+    }\n+\n+    @Override\n+    protected com.owncloud.android.lib.resources.users.Status doInBackground(Void... voids) {\n+        try {\n+            NextcloudClient client = clientFactory.createNextcloudClient(user);\n+            RemoteOperationResult result = new GetStatusRemoteOperation().execute(client);\n+\n+            return (com.owncloud.android.lib.resources.users.Status) result.getSingleData();\n+\n+        } catch (ClientFactory.CreationException e) {\n+            return new com.owncloud.android.lib.resources.users.Status(StatusType.OFFLINE, \"\", \"\", -1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75d71b46d39548b3865c987dcd1498ea0e8ef4eb"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3262, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}