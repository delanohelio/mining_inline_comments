{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MDgxNzg2", "number": 8356, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDozODozNVrOEQp48w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNzowNToxNVrOEgdu1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODk4OTk1OnYy", "diffSide": "RIGHT", "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/services/GradingService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDozODozNVrOG07LfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoxMzozN1rOG2AbLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE0ODczMw==", "bodyText": "I know this was n't added by you but this number looks strange?", "url": "https://github.com/sakaiproject/sakai/pull/8356#discussion_r458148733", "createdAt": "2020-07-21T14:38:35Z", "author": {"login": "ern"}, "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/services/GradingService.java", "diffHunk": "@@ -1003,9 +1030,19 @@ public int compare(ItemGradingData o1, ItemGradingData o2) {\n         \t\t}\n         \t}\n         }\n-        if ((TypeIfc.IMAGEMAP_QUESTION.equals(itemType))&&(NeededAllOk)&&((autoScore==-123456789)||!imageMapAllOk)){\n-        \tautoScore=0;\n-        \timageMapAllOk=false;\n+        \n+        if (TypeIfc.IMAGEMAP_QUESTION.equals(itemType) && neededAllOk){\n+        \tif(!imageMapAlreadyOk) {\n+        \t\tautoScore = 0;\n+        \t}else if(autoScore == -123456789){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a436ffee702e9003da5a8d1e67d0ff09f0b5543"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI4MzI0Nw==", "bodyText": "it's just like a mark that we need all right answers and the actual answer is not right. I replaced it by a constant now.", "url": "https://github.com/sakaiproject/sakai/pull/8356#discussion_r459283247", "createdAt": "2020-07-23T08:13:37Z", "author": {"login": "feralvarez95"}, "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/services/GradingService.java", "diffHunk": "@@ -1003,9 +1030,19 @@ public int compare(ItemGradingData o1, ItemGradingData o2) {\n         \t\t}\n         \t}\n         }\n-        if ((TypeIfc.IMAGEMAP_QUESTION.equals(itemType))&&(NeededAllOk)&&((autoScore==-123456789)||!imageMapAllOk)){\n-        \tautoScore=0;\n-        \timageMapAllOk=false;\n+        \n+        if (TypeIfc.IMAGEMAP_QUESTION.equals(itemType) && neededAllOk){\n+        \tif(!imageMapAlreadyOk) {\n+        \t\tautoScore = 0;\n+        \t}else if(autoScore == -123456789){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE0ODczMw=="}, "originalCommit": {"oid": "7a436ffee702e9003da5a8d1e67d0ff09f0b5543"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODk5Nzk2OnYy", "diffSide": "RIGHT", "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/services/GradingService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDo0MDoxNVrOG07Qqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODo1NjozNlrOG2B3vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1MDA1OQ==", "bodyText": "Update this with a newer style loop (for, foreach, lambda)", "url": "https://github.com/sakaiproject/sakai/pull/8356#discussion_r458150059", "createdAt": "2020-07-21T14:40:15Z", "author": {"login": "ern"}, "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/services/GradingService.java", "diffHunk": "@@ -3391,6 +3428,26 @@ private boolean isCalcQuestion(List tempItemGradinglist, Map publishedItemHash)\n \t  }\n \t  return false;\n   }\n+  \n+  /**\n+   * IMAGE_MAP QUESTION\n+   * Simple to check to see if this is a calculated question. It's used in storeGrades() to see if the sort is necessary.\n+   */\n+  private boolean isImageMapQuestion(List tempItemGradinglist, Map publishedItemHash) {\n+\t  if (tempItemGradinglist == null) return false;\n+\t  if (tempItemGradinglist.isEmpty()) return false;\n+\t  \n+\t  Iterator iter = tempItemGradinglist.iterator();\n+\t  while(iter.hasNext()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a436ffee702e9003da5a8d1e67d0ff09f0b5543"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMwNjk0MA==", "bodyText": "done!", "url": "https://github.com/sakaiproject/sakai/pull/8356#discussion_r459306940", "createdAt": "2020-07-23T08:56:36Z", "author": {"login": "feralvarez95"}, "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/services/GradingService.java", "diffHunk": "@@ -3391,6 +3428,26 @@ private boolean isCalcQuestion(List tempItemGradinglist, Map publishedItemHash)\n \t  }\n \t  return false;\n   }\n+  \n+  /**\n+   * IMAGE_MAP QUESTION\n+   * Simple to check to see if this is a calculated question. It's used in storeGrades() to see if the sort is necessary.\n+   */\n+  private boolean isImageMapQuestion(List tempItemGradinglist, Map publishedItemHash) {\n+\t  if (tempItemGradinglist == null) return false;\n+\t  if (tempItemGradinglist.isEmpty()) return false;\n+\t  \n+\t  Iterator iter = tempItemGradinglist.iterator();\n+\t  while(iter.hasNext()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1MDA1OQ=="}, "originalCommit": {"oid": "7a436ffee702e9003da5a8d1e67d0ff09f0b5543"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTAyMDg1OnYy", "diffSide": "RIGHT", "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/services/GradingService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDo0NDo1M1rOG07e8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwOTowNDo0NlrOG2CJTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1MzcxMg==", "bodyText": "It would be ideal to externalize this comparator so that in can be unit tested.\nAlso see springs NullSafeComparator or use java's newer lambda comparator which deals with nulls in a better way either is fine.\nExample org.sakaiproject.util.comparator.UserSortNameComparator or https://www.baeldung.com/java-8-comparator-comparing", "url": "https://github.com/sakaiproject/sakai/pull/8356#discussion_r458153712", "createdAt": "2020-07-21T14:44:53Z", "author": {"login": "ern"}, "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/services/GradingService.java", "diffHunk": "@@ -912,6 +909,23 @@ public int compare(ItemGradingData o1, ItemGradingData o2) {\n \t      });\n       }\n       \n+    //IMAGEMAP_QUESTION - order by itemGradingId if it is an imageMap question\n+      if (isImageMapQuestion(tempItemGradinglist, publishedItemHash)) {\n+\t      Collections.sort(tempItemGradinglist, new Comparator<ItemGradingData>(){\n+\t    \t  public int compare(ItemGradingData o1, ItemGradingData o2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a436ffee702e9003da5a8d1e67d0ff09f0b5543"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxMTQzOA==", "bodyText": "I created a class, but we need compare Longs, so I just moved it to a file. How do you see it?", "url": "https://github.com/sakaiproject/sakai/pull/8356#discussion_r459311438", "createdAt": "2020-07-23T09:04:46Z", "author": {"login": "feralvarez95"}, "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/services/GradingService.java", "diffHunk": "@@ -912,6 +909,23 @@ public int compare(ItemGradingData o1, ItemGradingData o2) {\n \t      });\n       }\n       \n+    //IMAGEMAP_QUESTION - order by itemGradingId if it is an imageMap question\n+      if (isImageMapQuestion(tempItemGradinglist, publishedItemHash)) {\n+\t      Collections.sort(tempItemGradinglist, new Comparator<ItemGradingData>(){\n+\t    \t  public int compare(ItemGradingData o1, ItemGradingData o2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1MzcxMg=="}, "originalCommit": {"oid": "7a436ffee702e9003da5a8d1e67d0ff09f0b5543"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNDc3MDE0OnYy", "diffSide": "RIGHT", "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/util/comparator/ImageMapGradingItemComparator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNzowNToxNVrOHNVyMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToxODozN1rOHVLGSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDQ1MA==", "bodyText": "This comparator should have a unit test and I would also look at using:\norg.springframework.util.comparator.NullSafeComparator\nas it's accounts for nulls already.", "url": "https://github.com/sakaiproject/sakai/pull/8356#discussion_r483750450", "createdAt": "2020-09-04T17:05:15Z", "author": {"login": "ern"}, "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/util/comparator/ImageMapGradingItemComparator.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.sakaiproject.tool.assessment.util.comparator;\r\n+\r\n+import java.util.Comparator;\r\n+import org.sakaiproject.tool.assessment.data.dao.grading.ItemGradingData;\r\n+\r\n+/**\r\n+ * This sorts ItemGrading items by itemGradingId.\r\n+ */\r\n+\r\n+public class ImageMapGradingItemComparator implements Comparator<ItemGradingData> {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3af5bb3257ac42ff58da049fdff914af9ff4aed"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE2NjQ0Ng==", "bodyText": "Done!", "url": "https://github.com/sakaiproject/sakai/pull/8356#discussion_r486166446", "createdAt": "2020-09-10T08:39:32Z", "author": {"login": "feralvarez95"}, "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/util/comparator/ImageMapGradingItemComparator.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.sakaiproject.tool.assessment.util.comparator;\r\n+\r\n+import java.util.Comparator;\r\n+import org.sakaiproject.tool.assessment.data.dao.grading.ItemGradingData;\r\n+\r\n+/**\r\n+ * This sorts ItemGrading items by itemGradingId.\r\n+ */\r\n+\r\n+public class ImageMapGradingItemComparator implements Comparator<ItemGradingData> {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDQ1MA=="}, "originalCommit": {"oid": "c3af5bb3257ac42ff58da049fdff914af9ff4aed"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2Mzk3OA==", "bodyText": "@ern All changes has been done. Please merge", "url": "https://github.com/sakaiproject/sakai/pull/8356#discussion_r491963978", "createdAt": "2020-09-21T11:18:37Z", "author": {"login": "jesusmmp"}, "path": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/util/comparator/ImageMapGradingItemComparator.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.sakaiproject.tool.assessment.util.comparator;\r\n+\r\n+import java.util.Comparator;\r\n+import org.sakaiproject.tool.assessment.data.dao.grading.ItemGradingData;\r\n+\r\n+/**\r\n+ * This sorts ItemGrading items by itemGradingId.\r\n+ */\r\n+\r\n+public class ImageMapGradingItemComparator implements Comparator<ItemGradingData> {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDQ1MA=="}, "originalCommit": {"oid": "c3af5bb3257ac42ff58da049fdff914af9ff4aed"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2766, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}