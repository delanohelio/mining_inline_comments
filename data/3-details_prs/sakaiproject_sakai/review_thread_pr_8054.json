{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMzgwMzE3", "number": 8054, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODozMDo0NVrODpyOOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0NDozMFrODp34YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTQxMDUwOnYy", "diffSide": "RIGHT", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/BeginDeliveryActionListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODozMDo0NVrOF5LANQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODozMDo0NVrOF5LANQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5MzQyOQ==", "bodyText": "StringUtils.equalsAny, I know this pattern is already used in the file but equalsAny is more desirable.", "url": "https://github.com/sakaiproject/sakai/pull/8054#discussion_r395493429", "createdAt": "2020-03-20T08:30:45Z", "author": {"login": "mpellicer"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/BeginDeliveryActionListener.java", "diffHunk": "@@ -101,11 +101,12 @@ public void processAction(ActionEvent ae) throws\n       // e.g. take assessment via url, actionString is set by LoginServlet.\n       // preview and take assessment is set by the parameter in the jsp pages\n       delivery.setActionString(actionString);\n-      if (\"reviewAssessment\".equals(actionString) || \"takeAssessment\".equals(actionString)) {\n-        delivery.setRbcsToken(rubricsService.generateJsonWebToken(RubricsConstants.RBCS_TOOL_SAMIGO));\n-      }\n     }\n-    \n+\n+    if (\"reviewAssessment\".equals(delivery.getActionString()) || \"takeAssessment\".equals(delivery.getActionString()) || \"takeAssessmentViaUrl\".equals(delivery.getActionString())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "233a179a5dff49faf0f8152c9657f3cfd59e981f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTQxMTA3OnYy", "diffSide": "RIGHT", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/bean/delivery/DeliveryBean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODozMDo1OFrOF5LAkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODozMDo1OFrOF5LAkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5MzUyMA==", "bodyText": "StringUtils.isNotBlank", "url": "https://github.com/sakaiproject/sakai/pull/8054#discussion_r395493520", "createdAt": "2020-03-20T08:30:58Z", "author": {"login": "mpellicer"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/bean/delivery/DeliveryBean.java", "diffHunk": "@@ -1685,11 +1685,16 @@ public ItemGradingData getItemGradingData(String publishedItemId) {\n   }\n \n   public String getSiteId() {\n-    siteId = null;\n-    Placement currentPlacement = ToolManager.getCurrentPlacement();\n-    if(currentPlacement != null)\n-      siteId = currentPlacement.getContext();\n-    return siteId;\n+\n+    if (siteId != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "233a179a5dff49faf0f8152c9657f3cfd59e981f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTQxMjI5OnYy", "diffSide": "RIGHT", "path": "rubrics/impl/src/main/java/org/sakaiproject/rubrics/logic/RubricsServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODozMTozMlrOF5LBWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODozMTozMlrOF5LBWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5MzcyMQ==", "bodyText": "StringUtils.isBlank", "url": "https://github.com/sakaiproject/sakai/pull/8054#discussion_r395493721", "createdAt": "2020-03-20T08:31:32Z", "author": {"login": "mpellicer"}, "path": "rubrics/impl/src/main/java/org/sakaiproject/rubrics/logic/RubricsServiceImpl.java", "diffHunk": "@@ -192,11 +192,15 @@ private String getCurrentSiteId(String method){\n     }\n \n     public String generateJsonWebToken(String tool) {\n-        return generateJsonWebToken(tool, getCurrentSiteId(\"generateJsonWebToken\"));\n+        return generateJsonWebToken(tool, null);\n     }\n \n     public String generateJsonWebToken(String tool, String siteId) {\n \n+        if (siteId == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "233a179a5dff49faf0f8152c9657f3cfd59e981f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjMzNzYxOnYy", "diffSide": "RIGHT", "path": "rubrics/impl/src/main/java/org/sakaiproject/rubrics/logic/RubricsServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0NDozMFrOF5UPxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0NDozMFrOF5UPxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0NDg2OQ==", "bodyText": "duplicate logic a few lines down", "url": "https://github.com/sakaiproject/sakai/pull/8054#discussion_r395644869", "createdAt": "2020-03-20T13:44:30Z", "author": {"login": "ern"}, "path": "rubrics/impl/src/main/java/org/sakaiproject/rubrics/logic/RubricsServiceImpl.java", "diffHunk": "@@ -192,11 +192,15 @@ private String getCurrentSiteId(String method){\n     }\n \n     public String generateJsonWebToken(String tool) {\n-        return generateJsonWebToken(tool, getCurrentSiteId(\"generateJsonWebToken\"));\n+        return generateJsonWebToken(tool, null);\n     }\n \n     public String generateJsonWebToken(String tool, String siteId) {\n \n+        if (StringUtils.isBlank(siteId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f10055eba3de9c7d0fcf1495096fd44e25b5d4c0"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2292, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}