{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MDU1NDIx", "number": 8785, "title": "SAK-43838: SAMIGO - Error when editing Matching questions", "bodyText": "", "createdAt": "2020-11-05T13:19:46Z", "url": "https://github.com/sakaiproject/sakai/pull/8785", "merged": true, "mergeCommit": {"oid": "2d3b8d6fc16ca19691daefd15ddc0b32eca44fd7"}, "closed": true, "closedAt": "2020-12-01T08:51:07Z", "author": {"login": "feralvarez95"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZj6eCgFqTUyNDM2NDY1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh1_dQgFqTU0MTY2NzM3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MzY0NjUx", "url": "https://github.com/sakaiproject/sakai/pull/8785#pullrequestreview-524364651", "createdAt": "2020-11-05T15:15:53Z", "commit": {"oid": "40ed9b5449c32f4d85fc90068c4594efa1be5449"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NDI3NzQ1", "url": "https://github.com/sakaiproject/sakai/pull/8785#pullrequestreview-525427745", "createdAt": "2020-11-06T19:19:41Z", "commit": {"oid": "40ed9b5449c32f4d85fc90068c4594efa1be5449"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxOToxOTo0MlrOHu6few==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxOToxOTo0MlrOHu6few==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk1NDg3NQ==", "bodyText": "Do these comments make any sense, now. If not, just remove them", "url": "https://github.com/sakaiproject/sakai/pull/8785#discussion_r518954875", "createdAt": "2020-11-06T19:19:42Z", "author": {"login": "adrianfish"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/author/ItemAddListener.java", "diffHunk": "@@ -1123,26 +1123,27 @@ else if (itemauthor.getTarget() != null && (itemauthor.getTarget().equals(\"samba\n         \tdelegate.saveFavoriteColumnChoices(favorite);\n         }\n \n-        QuestionPoolService qpdelegate = new QuestionPoolService();\n-\t// removed the old pool-item mappings\n-          if ( (bean.getOrigPool() != null) && (!bean.getOrigPool().equals(\"\"))) {\n-            qpdelegate.removeQuestionFromPool(item.getItemId(),\n-            \t\tLong.valueOf(bean.getOrigPool()));\n-          }\n-\n-        // if assign to pool, add the item to the pool\n-        if ( (bean.getSelectedPool() != null) && !bean.getSelectedPool().equals(\"\")) {\n-        \t// if the item is already in the pool then do not add.\n-          // This is a scenario where the item might already be in the pool:\n-          // create an item in an assessemnt and assign it to p1\n-          // copy item from p1 to p2. \n-          // now the item is already in p2. and if you want to edit the original item in the assessment, and reassign it to p2, you will get a duplicate error. \n-\n-          if (!qpdelegate.hasItem(item.getItemIdString(),\n-                                 Long.valueOf(bean.getSelectedPool()))) {\n-            qpdelegate.addItemToPool(item.getItemId(),\n-            \t\t\t\t\tLong.valueOf(bean.getSelectedPool()));\n-          }\n+        if(assessmentBean.getAssessment() instanceof AssessmentFacade) {\n+\t        QuestionPoolService qpdelegate = new QuestionPoolService();\n+\t\t// removed the old pool-item mappings\n+\t        if (StringUtils.isNotEmpty(bean.getOrigPool())\n+\t                && StringUtils.isNotEmpty(bean.getSelectedPool())\n+\t                && !bean.getSelectedPool().equals(bean.getOrigPool())\n+\t                && qpdelegate.hasItem(item.getItemIdString(), Long.valueOf(bean.getOrigPool()))) {\n+\t            qpdelegate.removeQuestionFromPool(item.getItemId(), Long.valueOf(bean.getOrigPool()));\n+\t        }\n+\t\n+\t        // if assign to pool, add the item to the pool\n+\t        if (StringUtils.isNotEmpty(bean.getSelectedPool())\n+\t                && !qpdelegate.hasItem(item.getItemIdString(), Long.valueOf(bean.getSelectedPool()))) {\n+\t          // if the item is already in the pool then do not add.\n+\t          // This is a scenario where the item might already be in the pool:\n+\t          // create an item in an assessemnt and assign it to p1\n+\t          // copy item from p1 to p2. \n+\t          // now the item is already in p2. and if you want to edit the original item in the assessment, and reassign it to p2, you will get a duplicate error. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40ed9b5449c32f4d85fc90068c4594efa1be5449"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "629d6c70781dc3e19d9b9a94e44e2e93c075e4c3", "author": {"user": null}, "url": "https://github.com/sakaiproject/sakai/commit/629d6c70781dc3e19d9b9a94e44e2e93c075e4c3", "committedDate": "2020-11-07T08:18:48Z", "message": "SAK-43838: SAMIGO - Error when editing Matching questions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40ed9b5449c32f4d85fc90068c4594efa1be5449", "author": {"user": null}, "url": "https://github.com/sakaiproject/sakai/commit/40ed9b5449c32f4d85fc90068c4594efa1be5449", "committedDate": "2020-11-05T13:18:41Z", "message": "SAK-43848: SAMIGO - Error when editing Matching questions"}, "afterCommit": {"oid": "629d6c70781dc3e19d9b9a94e44e2e93c075e4c3", "author": {"user": null}, "url": "https://github.com/sakaiproject/sakai/commit/629d6c70781dc3e19d9b9a94e44e2e93c075e4c3", "committedDate": "2020-11-07T08:18:48Z", "message": "SAK-43838: SAMIGO - Error when editing Matching questions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNjY3Mzcy", "url": "https://github.com/sakaiproject/sakai/pull/8785#pullrequestreview-541667372", "createdAt": "2020-12-01T08:51:01Z", "commit": {"oid": "629d6c70781dc3e19d9b9a94e44e2e93c075e4c3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2439, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}