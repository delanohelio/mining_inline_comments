{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNjg4MTgy", "number": 8826, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMzo0MTozM1rOE7DydQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNjowNTowM1rOFGyEtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzYzNTA5OnYy", "diffSide": "RIGHT", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMzo0MTozM1rOH2fH0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMzo0MTozM1rOH2fH0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NTA1Nw==", "bodyText": "This is a little redundant. Just return the result of the check:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return window.matchMedia('(prefers-color-scheme: dark)').matches;", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526895057", "createdAt": "2020-11-19T13:41:33Z", "author": {"login": "bjones86"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzYzNzM1OnYy", "diffSide": "RIGHT", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMzo0MjowOVrOH2fJOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMzoyNzo1NFrOIAQ_CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NTQxOA==", "bodyText": "Same here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (portal.user.id) {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return portal.user.id;", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526895418", "createdAt": "2020-11-19T13:42:09Z", "author": {"login": "bjones86"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isLoggedIn() {\n+        if (portal.user.id) {\n+            return true;\n+        } else {\n+            return false;\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0OTE5Mg==", "bodyText": "Won't that return the user id instead of a boolean?", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537149192", "createdAt": "2020-12-06T23:27:54Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isLoggedIn() {\n+        if (portal.user.id) {\n+            return true;\n+        } else {\n+            return false;\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NTQxOA=="}, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzY0MjA4OnYy", "diffSide": "RIGHT", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMzo0MzoyMFrOH2fMUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMzoyODoxNlrOIAQ_OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NjIwOA==", "bodyText": "Same here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (portal.themeUserPref === \"-1\") {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return portal.themeUserPref === \"-1\";", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526896208", "createdAt": "2020-11-19T13:43:20Z", "author": {"login": "bjones86"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isLoggedIn() {\n+        if (portal.user.id) {\n+            return true;\n+        } else {\n+            return false;\n         }\n-        // Set to light mode\n-        else {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"true\");\n-            document.firstElementChild.classList.remove('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'light')\n+    }\n+\n+    function isPortalThemeUserPrefNull() {\n+        if (portal.themeUserPref === \"-1\") {\n+            return true;\n+        } else {\n+            return false;\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0OTI0MQ==", "bodyText": "Yes, this was just temporary; I'm planning to replace this.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537149241", "createdAt": "2020-12-06T23:28:16Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isLoggedIn() {\n+        if (portal.user.id) {\n+            return true;\n+        } else {\n+            return false;\n         }\n-        // Set to light mode\n-        else {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"true\");\n-            document.firstElementChild.classList.remove('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'light')\n+    }\n+\n+    function isPortalThemeUserPrefNull() {\n+        if (portal.themeUserPref === \"-1\") {\n+            return true;\n+        } else {\n+            return false;\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NjIwOA=="}, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzY1MjUwOnYy", "diffSide": "RIGHT", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMzo0NTozNVrOH2fSng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMzo0NTozNVrOH2fSng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NzgyMg==", "bodyText": "Shorten this with a ternary:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n          \n          \n            \n                                                    themeUserPref = 1;\n          \n          \n            \n                                                } else {\n          \n          \n            \n                                                    themeUserPref = 0;\n          \n          \n            \n                                                }\n          \n          \n            \n                                                themePrefs.getBooleanProperty(\"darkTheme\") ? themeUserPref = 1 : themeUserPref = 0;", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526897822", "createdAt": "2020-11-19T13:45:35Z", "author": {"login": "bjones86"}, "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzY1NjU3OnYy", "diffSide": "RIGHT", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMzo0NjozOFrOH2fVRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMzo0NjozOFrOH2fVRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5ODUwMA==", "bodyText": "Boolean.valueOf() not necessary here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));\n          \n          \n            \n                                        rcontext.put(\"darkTheme\", darkTheme);", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526898500", "createdAt": "2020-11-19T13:46:38Z", "author": {"login": "bjones86"}, "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }\n+                            }\n+                            catch (Exception any) { \n+                                    // We'll default to light theme\n+                            }\n+                            \n+                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDE0NzA4OnYy", "diffSide": "RIGHT", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNToyNjo1N1rOH2kCfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMzoyNjozNFrOIAQ97Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NTYxNA==", "bodyText": "themeSwitcher && themeSwitcher.addEventListener('click', toggleDarkTheme, false);", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526975614", "createdAt": "2020-11-19T15:26:57Z", "author": {"login": "adrianfish"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0ODkwOQ==", "bodyText": "Will that do the null check?", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537148909", "createdAt": "2020-12-06T23:26:34Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NTYxNA=="}, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDE1NjMxOnYy", "diffSide": "RIGHT", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNToyODo1MlrOH2kIHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMzoyNjo1N1rOIAQ-VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NzA1Mw==", "bodyText": "should this be darkThemeClass?", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526977053", "createdAt": "2020-11-19T15:28:52Z", "author": {"login": "adrianfish"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0OTAxMw==", "bodyText": "Good catch. Yes.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537149013", "createdAt": "2020-12-06T23:26:57Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NzA1Mw=="}, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDE2MDE1OnYy", "diffSide": "RIGHT", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNToyOTozOVrOH2kKjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMzoyNjo0N1rOIAQ-Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NzY3OQ==", "bodyText": "I'd keep my formatting consistent here. So ..\nif (isPortalThemeUserPrefNull()) {", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526977679", "createdAt": "2020-11-19T15:29:39Z", "author": {"login": "adrianfish"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0ODk2Mw==", "bodyText": "Good catch.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537148963", "createdAt": "2020-12-06T23:26:47Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NzY3OQ=="}, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDE3MjgyOnYy", "diffSide": "RIGHT", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNTozMjoxMVrOH2kSoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMzoyNzozM1rOIAQ-yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3OTc0NQ==", "bodyText": "I'd just replace the function entirely, one line:\nif (portal.user.id) {\nstuff ...\n}", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526979745", "createdAt": "2020-11-19T15:32:11Z", "author": {"login": "adrianfish"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isLoggedIn() {\n+        if (portal.user.id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0OTEzMA==", "bodyText": "I was just trying to make it easier to remember how to do that.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537149130", "createdAt": "2020-12-06T23:27:33Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isLoggedIn() {\n+        if (portal.user.id) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3OTc0NQ=="}, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDI1OTAzOnYy", "diffSide": "RIGHT", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNTo0OToxNFrOH2lHYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozOToxMVrOH2up7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk5MzI1MA==", "bodyText": "Or just one line rcontext.put(\"darkTheme\", themePrefs.getBooleanProperty(\"darkTheme\"));", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526993250", "createdAt": "2020-11-19T15:49:14Z", "author": {"login": "adrianfish"}, "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }\n+                            }\n+                            catch (Exception any) { \n+                                    // We'll default to light theme\n+                            }\n+                            \n+                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA5MDE5Mg==", "bodyText": "Doesn't it need to be wrapped in the try-catch? And if I move it to the try block, then the default won't get put in the context.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r527090192", "createdAt": "2020-11-19T18:01:47Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }\n+                            }\n+                            catch (Exception any) { \n+                                    // We'll default to light theme\n+                            }\n+                            \n+                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk5MzI1MA=="}, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0OTU0OQ==", "bodyText": "Yes, you still need the try/catch. Anyway, you want a string now, don't you?", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r527149549", "createdAt": "2020-11-19T19:39:11Z", "author": {"login": "adrianfish"}, "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }\n+                            }\n+                            catch (Exception any) { \n+                                    // We'll default to light theme\n+                            }\n+                            \n+                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk5MzI1MA=="}, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDMxOTYzOnYy", "diffSide": "RIGHT", "path": "portal/portal-render-engine-impl/impl/src/webapp/vm/morpheus/includeStandardHead.vm", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjowMDo1NVrOH2lsuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjowMDo1NVrOH2lsuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAwMjgwOA==", "bodyText": "Change this to a Sakai generic theme class.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r527002808", "createdAt": "2020-11-19T16:00:55Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-render-engine-impl/impl/src/webapp/vm/morpheus/includeStandardHead.vm", "diffHunk": "@@ -2,7 +2,7 @@\n ## Don't put anything before the <!DOCTYPE or it breaks IE9\n ## DOCTYPE detection and puts it in quirks mode.\n <!DOCTYPE html>\n-<html lang=\"$!{locale}\" dir=\"$!{dir}\" class=\"Mrphs-html\">\n+<html lang=\"$!{locale}\" dir=\"$!{dir}\" class=\"Mrphs-html #if ( $!{darkTheme} ) sakai-dark-theme #end\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjUwNzY5OnYy", "diffSide": "RIGHT", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNTo1NDoyNFrOIH8T-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMToxMzozMVrOIK2GUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE5OTA5Ng==", "bodyText": "const isPortalThemeUserPrefUnset = () => !portal.userTheme;", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r545199096", "createdAt": "2020-12-17T15:54:24Z", "author": {"login": "adrianfish"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,97 @@\n-function themeSwitcher(){\n+function sakaiThemeSwitcher(){\n \n-    let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    let darkThemeSwitcher = document.getElementById(\"sakai-darkThemeSwitcher\");\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    const defaultThemeClass = 'sakaiUserTheme-notSet';\n+    const lightThemeClass = 'sakaiUserTheme-light';\n+    const darkThemeClass = 'sakaiUserTheme-dark';\n \n-    if(themeSwitcher != null) {\n+    init();\n+    \n+    function init() {\n+        // attach listener to dark theme toggle switch\n+        darkThemeSwitcher && darkThemeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+\n+        if(isLoggedIn()) {\n+            // only check for unset theme preference because light and dark themes are already set by Java\n+            if(isPortalThemeUserPrefUnset()) {\n+                if(isOsDarkThemeSet()) {\n+                    enableDarkTheme();\n+                } else {\n+                    // to define a user preference:\n+                    setPortalThemeUserPref(lightThemeClass);\n+                }\n+            }\n+        } else if(isOsDarkThemeSet()) {\n+            addCssClassToMarkup(darkThemeClass);\n+        }\n         \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+        if (document.documentElement.classList.contains(darkThemeClass)) {\n+            // the dark theme switch toggle is off by default, so toggle to on if dark theme is enabled\n+            setDarkThemeSwitcherToggle(true);\n+        }\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addCssClassToMarkup(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeCssClassFromMarkup(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        return window.matchMedia('(prefers-color-scheme: dark)').matches;\n+    }\n+\n+    function isLoggedIn() {\n+        return portal.user.id;\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isPortalThemeUserPrefUnset() {\n+        if (portal.userTheme === \"\") {\n+            return true;\n+        } else {\n+            return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "993b310a1e7f44c03369f27bf11ee635eadebbb9"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI0MzAyNQ==", "bodyText": "This doesn't seem as readable to me, so I'm going to skip.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r548243025", "createdAt": "2020-12-23T21:13:31Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,97 @@\n-function themeSwitcher(){\n+function sakaiThemeSwitcher(){\n \n-    let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    let darkThemeSwitcher = document.getElementById(\"sakai-darkThemeSwitcher\");\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    const defaultThemeClass = 'sakaiUserTheme-notSet';\n+    const lightThemeClass = 'sakaiUserTheme-light';\n+    const darkThemeClass = 'sakaiUserTheme-dark';\n \n-    if(themeSwitcher != null) {\n+    init();\n+    \n+    function init() {\n+        // attach listener to dark theme toggle switch\n+        darkThemeSwitcher && darkThemeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+\n+        if(isLoggedIn()) {\n+            // only check for unset theme preference because light and dark themes are already set by Java\n+            if(isPortalThemeUserPrefUnset()) {\n+                if(isOsDarkThemeSet()) {\n+                    enableDarkTheme();\n+                } else {\n+                    // to define a user preference:\n+                    setPortalThemeUserPref(lightThemeClass);\n+                }\n+            }\n+        } else if(isOsDarkThemeSet()) {\n+            addCssClassToMarkup(darkThemeClass);\n+        }\n         \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+        if (document.documentElement.classList.contains(darkThemeClass)) {\n+            // the dark theme switch toggle is off by default, so toggle to on if dark theme is enabled\n+            setDarkThemeSwitcherToggle(true);\n+        }\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addCssClassToMarkup(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeCssClassFromMarkup(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        return window.matchMedia('(prefers-color-scheme: dark)').matches;\n+    }\n+\n+    function isLoggedIn() {\n+        return portal.user.id;\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isPortalThemeUserPrefUnset() {\n+        if (portal.userTheme === \"\") {\n+            return true;\n+        } else {\n+            return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE5OTA5Ng=="}, "originalCommit": {"oid": "993b310a1e7f44c03369f27bf11ee635eadebbb9"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjUyNTE0OnYy", "diffSide": "RIGHT", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNTo1NzozNFrOIH8eJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMToxNDoxOVrOIK2IKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwMTcwMg==", "bodyText": "darkThemeSwitcher.getAttribute(\"aria-checked\") === \"false\" ? enableDarkTheme() : enableLightTheme();", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r545201702", "createdAt": "2020-12-17T15:57:34Z", "author": {"login": "adrianfish"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,97 @@\n-function themeSwitcher(){\n+function sakaiThemeSwitcher(){\n \n-    let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    let darkThemeSwitcher = document.getElementById(\"sakai-darkThemeSwitcher\");\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    const defaultThemeClass = 'sakaiUserTheme-notSet';\n+    const lightThemeClass = 'sakaiUserTheme-light';\n+    const darkThemeClass = 'sakaiUserTheme-dark';\n \n-    if(themeSwitcher != null) {\n+    init();\n+    \n+    function init() {\n+        // attach listener to dark theme toggle switch\n+        darkThemeSwitcher && darkThemeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+\n+        if(isLoggedIn()) {\n+            // only check for unset theme preference because light and dark themes are already set by Java\n+            if(isPortalThemeUserPrefUnset()) {\n+                if(isOsDarkThemeSet()) {\n+                    enableDarkTheme();\n+                } else {\n+                    // to define a user preference:\n+                    setPortalThemeUserPref(lightThemeClass);\n+                }\n+            }\n+        } else if(isOsDarkThemeSet()) {\n+            addCssClassToMarkup(darkThemeClass);\n+        }\n         \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+        if (document.documentElement.classList.contains(darkThemeClass)) {\n+            // the dark theme switch toggle is off by default, so toggle to on if dark theme is enabled\n+            setDarkThemeSwitcherToggle(true);\n+        }\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addCssClassToMarkup(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeCssClassFromMarkup(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        return window.matchMedia('(prefers-color-scheme: dark)').matches;\n+    }\n+\n+    function isLoggedIn() {\n+        return portal.user.id;\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isPortalThemeUserPrefUnset() {\n+        if (portal.userTheme === \"\") {\n+            return true;\n+        } else {\n+            return false;\n         }\n-        // Set to light mode\n-        else {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"true\");\n-            document.firstElementChild.classList.remove('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'light')\n+    }\n+\n+    function setDarkThemeSwitcherToggle(onOff) {\n+        darkThemeSwitcher.setAttribute(\"aria-checked\", onOff);\n+    }\n+\n+    function setPortalThemeUserPref(theme) {\n+        var url = '/direct/userPrefs/updateKey/' + portal.user.id + '/sakai:portal:theme?theme=' + theme;\n+        var ajaxRequest = new XMLHttpRequest();\n+        ajaxRequest.open(\"PUT\", url);\n+        ajaxRequest.send();\n+    }\n+\n+    function toggleDarkTheme() {\n+        // Set to dark theme\n+        if (darkThemeSwitcher.getAttribute(\"aria-checked\") === \"false\") {\n+            enableDarkTheme();\n+        } else {\n+            // Set to light theme\n+            enableLightTheme();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "993b310a1e7f44c03369f27bf11ee635eadebbb9"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI0MzQ5OA==", "bodyText": "Thanks for the suggestion. I've updated this line now.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r548243498", "createdAt": "2020-12-23T21:14:19Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,97 @@\n-function themeSwitcher(){\n+function sakaiThemeSwitcher(){\n \n-    let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    let darkThemeSwitcher = document.getElementById(\"sakai-darkThemeSwitcher\");\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    const defaultThemeClass = 'sakaiUserTheme-notSet';\n+    const lightThemeClass = 'sakaiUserTheme-light';\n+    const darkThemeClass = 'sakaiUserTheme-dark';\n \n-    if(themeSwitcher != null) {\n+    init();\n+    \n+    function init() {\n+        // attach listener to dark theme toggle switch\n+        darkThemeSwitcher && darkThemeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+\n+        if(isLoggedIn()) {\n+            // only check for unset theme preference because light and dark themes are already set by Java\n+            if(isPortalThemeUserPrefUnset()) {\n+                if(isOsDarkThemeSet()) {\n+                    enableDarkTheme();\n+                } else {\n+                    // to define a user preference:\n+                    setPortalThemeUserPref(lightThemeClass);\n+                }\n+            }\n+        } else if(isOsDarkThemeSet()) {\n+            addCssClassToMarkup(darkThemeClass);\n+        }\n         \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+        if (document.documentElement.classList.contains(darkThemeClass)) {\n+            // the dark theme switch toggle is off by default, so toggle to on if dark theme is enabled\n+            setDarkThemeSwitcherToggle(true);\n+        }\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addCssClassToMarkup(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeCssClassFromMarkup(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        return window.matchMedia('(prefers-color-scheme: dark)').matches;\n+    }\n+\n+    function isLoggedIn() {\n+        return portal.user.id;\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isPortalThemeUserPrefUnset() {\n+        if (portal.userTheme === \"\") {\n+            return true;\n+        } else {\n+            return false;\n         }\n-        // Set to light mode\n-        else {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"true\");\n-            document.firstElementChild.classList.remove('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'light')\n+    }\n+\n+    function setDarkThemeSwitcherToggle(onOff) {\n+        darkThemeSwitcher.setAttribute(\"aria-checked\", onOff);\n+    }\n+\n+    function setPortalThemeUserPref(theme) {\n+        var url = '/direct/userPrefs/updateKey/' + portal.user.id + '/sakai:portal:theme?theme=' + theme;\n+        var ajaxRequest = new XMLHttpRequest();\n+        ajaxRequest.open(\"PUT\", url);\n+        ajaxRequest.send();\n+    }\n+\n+    function toggleDarkTheme() {\n+        // Set to dark theme\n+        if (darkThemeSwitcher.getAttribute(\"aria-checked\") === \"false\") {\n+            enableDarkTheme();\n+        } else {\n+            // Set to light theme\n+            enableLightTheme();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwMTcwMg=="}, "originalCommit": {"oid": "993b310a1e7f44c03369f27bf11ee635eadebbb9"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjUzMzE2OnYy", "diffSide": "RIGHT", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNTo1OToxMFrOIH8jEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMToxMjo1MlrOIK2EUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwMjk2Mw==", "bodyText": "PEDANT ALERT: I like a single space after the if. You've done that in some places.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r545202963", "createdAt": "2020-12-17T15:59:10Z", "author": {"login": "adrianfish"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,97 @@\n-function themeSwitcher(){\n+function sakaiThemeSwitcher(){\n \n-    let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    let darkThemeSwitcher = document.getElementById(\"sakai-darkThemeSwitcher\");\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    const defaultThemeClass = 'sakaiUserTheme-notSet';\n+    const lightThemeClass = 'sakaiUserTheme-light';\n+    const darkThemeClass = 'sakaiUserTheme-dark';\n \n-    if(themeSwitcher != null) {\n+    init();\n+    \n+    function init() {\n+        // attach listener to dark theme toggle switch\n+        darkThemeSwitcher && darkThemeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+\n+        if(isLoggedIn()) {\n+            // only check for unset theme preference because light and dark themes are already set by Java\n+            if(isPortalThemeUserPrefUnset()) {\n+                if(isOsDarkThemeSet()) {\n+                    enableDarkTheme();\n+                } else {\n+                    // to define a user preference:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "993b310a1e7f44c03369f27bf11ee635eadebbb9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI0MjUxMw==", "bodyText": "Good catch. Thanks.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r548242513", "createdAt": "2020-12-23T21:12:52Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,97 @@\n-function themeSwitcher(){\n+function sakaiThemeSwitcher(){\n \n-    let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    let darkThemeSwitcher = document.getElementById(\"sakai-darkThemeSwitcher\");\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    const defaultThemeClass = 'sakaiUserTheme-notSet';\n+    const lightThemeClass = 'sakaiUserTheme-light';\n+    const darkThemeClass = 'sakaiUserTheme-dark';\n \n-    if(themeSwitcher != null) {\n+    init();\n+    \n+    function init() {\n+        // attach listener to dark theme toggle switch\n+        darkThemeSwitcher && darkThemeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+\n+        if(isLoggedIn()) {\n+            // only check for unset theme preference because light and dark themes are already set by Java\n+            if(isPortalThemeUserPrefUnset()) {\n+                if(isOsDarkThemeSet()) {\n+                    enableDarkTheme();\n+                } else {\n+                    // to define a user preference:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwMjk2Mw=="}, "originalCommit": {"oid": "993b310a1e7f44c03369f27bf11ee635eadebbb9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjU2MTgzOnYy", "diffSide": "RIGHT", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNjowNTowM1rOIH80kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMTozNDoxMlrOIK3BHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwNzQ0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        String userTheme = \"sakaiUserTheme-notSet\";\n          \n          \n            \n                                        \n          \n          \n            \n                                        //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n          \n          \n            \n                                        userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n          \n          \n            \n                                        String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r545207440", "createdAt": "2020-12-17T16:05:03Z", "author": {"login": "ern"}, "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1735,13 +1735,18 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+                            \n+                            String userTheme = \"sakaiUserTheme-notSet\";\n+                            \n+                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "993b310a1e7f44c03369f27bf11ee635eadebbb9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI1ODA3Nw==", "bodyText": "Thanks for the suggestion. I've made this change.", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r548258077", "createdAt": "2020-12-23T21:34:12Z", "author": {"login": "fostersdesign"}, "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1735,13 +1735,18 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+                            \n+                            String userTheme = \"sakaiUserTheme-notSet\";\n+                            \n+                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwNzQ0MA=="}, "originalCommit": {"oid": "993b310a1e7f44c03369f27bf11ee635eadebbb9"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2555, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}