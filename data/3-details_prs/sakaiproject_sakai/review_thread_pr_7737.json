{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MDY3NTAz", "number": 7737, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjozODozNFrODWBccw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjozODozNFrODWBccw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NDE4OTMxOnYy", "diffSide": "RIGHT", "path": "kernel/api/src/main/java/org/sakaiproject/time/api/UserTimeService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjozODozNFrOFaipgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzo1Mzo0NFrOFbBAOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3NDk3Nw==", "bodyText": "Does it make sense to add another param that depicts the requested format of\n{short, medium, long}\nThis prevents api from increasing every time another option is needed.\nHave a look at the enum java.time.temporal.ChronoUnit to get an idea of how this could be done.\nessentially you would have:\nenum FormatUnit {\n\tSHORT(\"Short\", 0),\n\tMEDIUM(\"Medium\", 1),\n\tLONG(\"Long\", 2),\n}\n\nThis would allow for simpler concise methods:\npublic String timeFormat(Date date, Locale locale, FormatUnit format);\npublic String dateFormat(Date date, Locale locale, FormatUnit format);\npublic String dateTimeFormat(Date date, Locale locale, FormatUnit format);", "url": "https://github.com/sakaiproject/sakai/pull/7737#discussion_r363374977", "createdAt": "2020-01-06T16:38:34Z", "author": {"login": "ern"}, "path": "kernel/api/src/main/java/org/sakaiproject/time/api/UserTimeService.java", "diffHunk": "@@ -34,17 +34,89 @@\n      * @return true if successful\n      */\n     boolean clearLocalTimeZone(String userId);\n-    \n+\n+    /**\n+     * Gets the time formatter with the given formatting style in the user's locale and preferred timezone.\n+     * @param date\n+     * @param locale\n+     * @return\n+     */\n+    public String  timeFormatShort(Date date, Locale locale);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dbf06cd001bcf636bb66cfe1e9940a51eafac54"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3ODk1MQ==", "bodyText": "For sure it's cleaner to have a single method, but then you need to change lots of tool code buried in JSPs and do lots of regression testing. I added new methods to avoid massive tool changes.", "url": "https://github.com/sakaiproject/sakai/pull/7737#discussion_r363378951", "createdAt": "2020-01-06T16:47:02Z", "author": {"login": "ottenhoff"}, "path": "kernel/api/src/main/java/org/sakaiproject/time/api/UserTimeService.java", "diffHunk": "@@ -34,17 +34,89 @@\n      * @return true if successful\n      */\n     boolean clearLocalTimeZone(String userId);\n-    \n+\n+    /**\n+     * Gets the time formatter with the given formatting style in the user's locale and preferred timezone.\n+     * @param date\n+     * @param locale\n+     * @return\n+     */\n+    public String  timeFormatShort(Date date, Locale locale);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3NDk3Nw=="}, "originalCommit": {"oid": "4dbf06cd001bcf636bb66cfe1e9940a51eafac54"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU4NjUyOQ==", "bodyText": "If you want to keep the existing methods working (to avoid massive tool changes) then forward the older methods to the newer ones and mark them as deprecated. Also if you worried about regressions unit tests will eliminate those concerns as well.", "url": "https://github.com/sakaiproject/sakai/pull/7737#discussion_r363586529", "createdAt": "2020-01-07T04:23:08Z", "author": {"login": "ern"}, "path": "kernel/api/src/main/java/org/sakaiproject/time/api/UserTimeService.java", "diffHunk": "@@ -34,17 +34,89 @@\n      * @return true if successful\n      */\n     boolean clearLocalTimeZone(String userId);\n-    \n+\n+    /**\n+     * Gets the time formatter with the given formatting style in the user's locale and preferred timezone.\n+     * @param date\n+     * @param locale\n+     * @return\n+     */\n+    public String  timeFormatShort(Date date, Locale locale);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3NDk3Nw=="}, "originalCommit": {"oid": "4dbf06cd001bcf636bb66cfe1e9940a51eafac54"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MjMxMw==", "bodyText": "Tool changes are way less than I thought. Will update this PR shortly with changes.", "url": "https://github.com/sakaiproject/sakai/pull/7737#discussion_r363872313", "createdAt": "2020-01-07T17:53:44Z", "author": {"login": "ottenhoff"}, "path": "kernel/api/src/main/java/org/sakaiproject/time/api/UserTimeService.java", "diffHunk": "@@ -34,17 +34,89 @@\n      * @return true if successful\n      */\n     boolean clearLocalTimeZone(String userId);\n-    \n+\n+    /**\n+     * Gets the time formatter with the given formatting style in the user's locale and preferred timezone.\n+     * @param date\n+     * @param locale\n+     * @return\n+     */\n+    public String  timeFormatShort(Date date, Locale locale);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3NDk3Nw=="}, "originalCommit": {"oid": "4dbf06cd001bcf636bb66cfe1e9940a51eafac54"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2837, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}