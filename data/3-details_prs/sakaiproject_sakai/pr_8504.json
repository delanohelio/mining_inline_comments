{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NDgxOTc4", "number": 8504, "title": "SAK-44195 - Use Ignite to move key pairs around the cluster", "bodyText": "", "createdAt": "2020-09-02T01:02:51Z", "url": "https://github.com/sakaiproject/sakai/pull/8504", "merged": true, "mergeCommit": {"oid": "72d3c9bb2a4001fa4084e2292569da3d62092760"}, "closed": true, "closedAt": "2020-09-02T18:16:43Z", "author": {"login": "csev"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdExVwvgH2gAyNDc3NDgxOTc4OjE2Y2IzMDgyNDg4MWE0MTMzMzQzZWVmN2U3OGU0MjBmZDQyNzg1NWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdE8YkGAFqTQ4MDg0MzIxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "16cb30824881a4133343eef7e78e420fd427855f", "author": {"user": {"login": "csev", "name": "Charles Severance"}}, "url": "https://github.com/sakaiproject/sakai/commit/16cb30824881a4133343eef7e78e420fd427855f", "committedDate": "2020-09-02T01:02:03Z", "message": "SAK-44195 - Use Ignite to move key pairs around the cluster"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODQzMjE3", "url": "https://github.com/sakaiproject/sakai/pull/8504#pullrequestreview-480843217", "createdAt": "2020-09-02T13:53:57Z", "commit": {"oid": "16cb30824881a4133343eef7e78e420fd427855f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo1Mzo1N1rOHLwQPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo1Mzo1N1rOHLwQPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA4Njk3Mw==", "bodyText": "Instead of getting the underlying Cache implementation its best to use the spring Cache Manager:\norg.sakaiproject.ignite.SakaiCacheManager\nThis Cache Manager is already enabled so all you really to do in your tool is just turn on scanning with:\n<cache:annotation-driven cache-manager=\"org.sakaiproject.ignite.SakaiCacheManager\"/>\nAnd use the annotations like:\n@CachePut\n@CacheEvict\nSee this guide:\nhttps://www.baeldung.com/spring-cache-tutorial", "url": "https://github.com/sakaiproject/sakai/pull/8504#discussion_r482086973", "createdAt": "2020-09-02T13:53:57Z", "author": {"login": "ern"}, "path": "basiclti/basiclti-blis/src/java/org/sakaiproject/lti13/LTI13Servlet.java", "diffHunk": "@@ -117,13 +120,25 @@\n \t// TODO: Rotate these after a while\n \tprivate KeyPair tokenKeyPair = null;\n \n+    protected static Ignite ignite = null;\n+    protected static IgniteCache<String, String> igniteCache = null;\n+\n+\tprivate static final String CACHE_NAME = LTI13Servlet.class.getName() + \"_cache\";\n+\tprivate static final String CACHE_PUBLIC = \"key::public\";\n+\tprivate static final String CACHE_PRIVATE = \"key::private\";\n+\n \t@Override\n \tpublic void init(ServletConfig config) throws ServletException {\n \t\tsuper.init(config);\n \t\tif (ltiService == null) {\n \t\t\tltiService = (LTIService) ComponentManager.get(\"org.sakaiproject.lti.api.LTIService\");\n \t\t}\n \n+        if (igniteCache == null) {\n+            Ignite ignite = (Ignite) ComponentManager.get(\"org.sakaiproject.ignite.SakaiIgnite\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16cb30824881a4133343eef7e78e420fd427855f"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2779, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}