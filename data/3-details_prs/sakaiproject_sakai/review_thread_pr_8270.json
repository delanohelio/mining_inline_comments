{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MDk3NjA0", "number": 8270, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNToyNjoyM1rOED8GKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNjoyNTowMFrOE80Wnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTY1ODAxOnYy", "diffSide": "RIGHT", "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNToyNjoyM1rOGhQGxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMjoyMzo1N1rOGheffw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyMDA3MQ==", "bodyText": "Use newer logging lingo (slf4j) log.debug", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r437520071", "createdAt": "2020-06-09T15:26:23Z", "author": {"login": "ern"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -243,6 +257,29 @@ public String getEntityPrefix() {\n \t\t\tlog.debug(\"announcements.size(): {}\", announcements.size());\n \t\t}\n \t\t\n+\t\tif (AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder)) {\n+\t\t\ttry {\n+\t\t\t\tList<AnnouncementWrapper> messageList = new ArrayList<>();\n+\t\t\t\tAnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n+\t\t\t\tfor (Message msg : announcements) {\n+\t\t\t\t\tAnnouncementChannel curChannel = (AnnouncementChannel) announcementService.getChannel(msg.getReference().replace(\"msg\", \"channel\").replaceAll(\"main/(.*)\", \"main\"));\n+\t\t\t\t\tmessageList.add(new AnnouncementWrapper((AnnouncementMessage) msg, curChannel, defaultChannel, null, null));\n+\t\t\t\t}\n+\t\t\t\tSortedIterator<AnnouncementWrapper> rvSorted = new SortedIterator<>(messageList.iterator(), new AnnouncementWrapperComparator(sortCurrentOrder, announcementSortAsc));\n+\t\t\t\t\n+\t\t\t\tList<Message> subrv = new ArrayList();\n+\t\t\t\tfor (int index = 0; index < announcements.size(); index++) {\n+\t\t\t\t\tsubrv.add(rvSorted.next());\n+\t\t\t\t}\n+\t\t\t\tannouncements = subrv;\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tif(log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944c49c2b0d044a08b1fbac35c0629af1f709476"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc1NTc3NQ==", "bodyText": "there are many places in this class using log.isDebugEnabled().  I'd guess we'd want to keep it similar to how the rest of the file checks if debug is enabled?  or did you mean change log.warn() to log.debug()?", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r437755775", "createdAt": "2020-06-09T22:23:57Z", "author": {"login": "austin48"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -243,6 +257,29 @@ public String getEntityPrefix() {\n \t\t\tlog.debug(\"announcements.size(): {}\", announcements.size());\n \t\t}\n \t\t\n+\t\tif (AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder)) {\n+\t\t\ttry {\n+\t\t\t\tList<AnnouncementWrapper> messageList = new ArrayList<>();\n+\t\t\t\tAnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n+\t\t\t\tfor (Message msg : announcements) {\n+\t\t\t\t\tAnnouncementChannel curChannel = (AnnouncementChannel) announcementService.getChannel(msg.getReference().replace(\"msg\", \"channel\").replaceAll(\"main/(.*)\", \"main\"));\n+\t\t\t\t\tmessageList.add(new AnnouncementWrapper((AnnouncementMessage) msg, curChannel, defaultChannel, null, null));\n+\t\t\t\t}\n+\t\t\t\tSortedIterator<AnnouncementWrapper> rvSorted = new SortedIterator<>(messageList.iterator(), new AnnouncementWrapperComparator(sortCurrentOrder, announcementSortAsc));\n+\t\t\t\t\n+\t\t\t\tList<Message> subrv = new ArrayList();\n+\t\t\t\tfor (int index = 0; index < announcements.size(); index++) {\n+\t\t\t\t\tsubrv.add(rvSorted.next());\n+\t\t\t\t}\n+\t\t\t\tannouncements = subrv;\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tif(log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyMDA3MQ=="}, "originalCommit": {"oid": "944c49c2b0d044a08b1fbac35c0629af1f709476"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTY2MDI1OnYy", "diffSide": "RIGHT", "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNToyNjo1OVrOGhQIYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMjoyMDo1MVrOGhebAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyMDQ4Mw==", "bodyText": "No need to loop here just use Collections.addAll", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r437520483", "createdAt": "2020-06-09T15:26:59Z", "author": {"login": "ern"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -243,6 +257,29 @@ public String getEntityPrefix() {\n \t\t\tlog.debug(\"announcements.size(): {}\", announcements.size());\n \t\t}\n \t\t\n+\t\tif (AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder)) {\n+\t\t\ttry {\n+\t\t\t\tList<AnnouncementWrapper> messageList = new ArrayList<>();\n+\t\t\t\tAnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n+\t\t\t\tfor (Message msg : announcements) {\n+\t\t\t\t\tAnnouncementChannel curChannel = (AnnouncementChannel) announcementService.getChannel(msg.getReference().replace(\"msg\", \"channel\").replaceAll(\"main/(.*)\", \"main\"));\n+\t\t\t\t\tmessageList.add(new AnnouncementWrapper((AnnouncementMessage) msg, curChannel, defaultChannel, null, null));\n+\t\t\t\t}\n+\t\t\t\tSortedIterator<AnnouncementWrapper> rvSorted = new SortedIterator<>(messageList.iterator(), new AnnouncementWrapperComparator(sortCurrentOrder, announcementSortAsc));\n+\t\t\t\t\n+\t\t\t\tList<Message> subrv = new ArrayList();\n+\t\t\t\tfor (int index = 0; index < announcements.size(); index++) {\n+\t\t\t\t\tsubrv.add(rvSorted.next());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944c49c2b0d044a08b1fbac35c0629af1f709476"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc1NDYyNA==", "bodyText": "I believe I can only add a collection to another collection.  Plus, I needed to sort messageList, thus the SortedIterator rvSorted... which is similar logic that I copied from elsewhere in AnnouncementAction.java", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r437754624", "createdAt": "2020-06-09T22:20:51Z", "author": {"login": "austin48"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -243,6 +257,29 @@ public String getEntityPrefix() {\n \t\t\tlog.debug(\"announcements.size(): {}\", announcements.size());\n \t\t}\n \t\t\n+\t\tif (AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder)) {\n+\t\t\ttry {\n+\t\t\t\tList<AnnouncementWrapper> messageList = new ArrayList<>();\n+\t\t\t\tAnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n+\t\t\t\tfor (Message msg : announcements) {\n+\t\t\t\t\tAnnouncementChannel curChannel = (AnnouncementChannel) announcementService.getChannel(msg.getReference().replace(\"msg\", \"channel\").replaceAll(\"main/(.*)\", \"main\"));\n+\t\t\t\t\tmessageList.add(new AnnouncementWrapper((AnnouncementMessage) msg, curChannel, defaultChannel, null, null));\n+\t\t\t\t}\n+\t\t\t\tSortedIterator<AnnouncementWrapper> rvSorted = new SortedIterator<>(messageList.iterator(), new AnnouncementWrapperComparator(sortCurrentOrder, announcementSortAsc));\n+\t\t\t\t\n+\t\t\t\tList<Message> subrv = new ArrayList();\n+\t\t\t\tfor (int index = 0; index < announcements.size(); index++) {\n+\t\t\t\t\tsubrv.add(rvSorted.next());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyMDQ4Mw=="}, "originalCommit": {"oid": "944c49c2b0d044a08b1fbac35c0629af1f709476"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTY3MTEwOnYy", "diffSide": "RIGHT", "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNToyOTozM1rOGhQPXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMjoxNjo0MlrOGheVBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyMjI3MQ==", "bodyText": "BooleanUtils maybe more appropriate here", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r437522271", "createdAt": "2020-06-09T15:29:33Z", "author": {"login": "ern"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -130,6 +135,7 @@ public String getEntityPrefix() {\n \t\t//we use this zero value to determine if we need to look up from the tool config, or use the defaults if still not set.\n \t\tint numberOfAnnouncements = NumberUtils.toInt((String)params.get(\"n\"), 0);\n \t\tint numberOfDaysInThePast = NumberUtils.toInt((String)params.get(\"d\"), 0);\n+\t\tboolean announcementSortAsc = NumberUtils.toInt((String)params.get(\"a\"), 0) == 1 ? true:false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944c49c2b0d044a08b1fbac35c0629af1f709476"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc1MzA5NA==", "bodyText": "Do you mean something like this:\nboolean announcementSortAsc = BooleanUtils.toBoolean(NumberUtils.toInt((String)params.get(\"a\"), 0));\nHowever, the issue I have with that is values greater than 1 will also evaluate to true.  I looked at other methods in BooleanUtils, but I couldn't find anything else that didn't require catching exceptions or checking for null afterwards.", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r437753094", "createdAt": "2020-06-09T22:16:42Z", "author": {"login": "austin48"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -130,6 +135,7 @@ public String getEntityPrefix() {\n \t\t//we use this zero value to determine if we need to look up from the tool config, or use the defaults if still not set.\n \t\tint numberOfAnnouncements = NumberUtils.toInt((String)params.get(\"n\"), 0);\n \t\tint numberOfDaysInThePast = NumberUtils.toInt((String)params.get(\"d\"), 0);\n+\t\tboolean announcementSortAsc = NumberUtils.toInt((String)params.get(\"a\"), 0) == 1 ? true:false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyMjI3MQ=="}, "originalCommit": {"oid": "944c49c2b0d044a08b1fbac35c0629af1f709476"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTU2ODUwOnYy", "diffSide": "RIGHT", "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMToyMDoyNFrOHeK0Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMDo0ODo1OVrOHfb0WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5NjU1OQ==", "bodyText": "the announcements list is always empty here because the else block below used to be above this sort block and always populated the list first.", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r501396559", "createdAt": "2020-10-08T01:20:24Z", "author": {"login": "austin48"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -227,59 +230,51 @@ public String getEntityPrefix() {\n \t\t//get the announcements for each channel\n \t\tList<Message> announcements = new ArrayList<Message>();\n \t\t\n-\t\tboolean enableReorder = ComponentManager.get(ServerConfigurationService.class).getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n+\t\tboolean enableReorder = serverConfigurationService.getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n \t\tString sortCurrentOrder = AnnouncementAction.SORT_DATE;\n \t\tif (enableReorder){\n \t\t\tsortCurrentOrder = AnnouncementAction.SORT_MESSAGE_ORDER;\n \t\t}\n-\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null:new ViewableFilter(null, t, numberOfAnnouncements);\n-\t\t\n-\t\t//for each channel\n-\t\tfor(String channel: channels) {\n-\t\t\ttry {\n-\t\t\t\tannouncements.addAll(announcementService.getMessages(channel, msgFilter, announcementSortAsc, false));\n-\t\t\t} catch (PermissionException | IdUnusedException | NullPointerException ex) {\n-\t\t\t\t//user may not have access to view the channel but get all public messages in this channel\n-\t\t\t\tAnnouncementChannel announcementChannel = (AnnouncementChannel)announcementService.getChannelPublic(channel);\n-\t\t\t\tif(announcementChannel != null){\n-\t\t\t\t\tList<Message> publicMessages = announcementChannel.getMessagesPublic(null, true);\n-\t\t\t\t\tfor(Message message : publicMessages){\n-\t\t\t\t\t\t//Add message only if it is within the time range\n-\t\t\t\t\t\tif(isMessageWithinPastNDays(message, numberOfDaysInThePast) && announcementService.isMessageViewable((AnnouncementMessage) message)){\n-\t\t\t\t\t\t\tannouncements.add(message);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tif(log.isDebugEnabled()) {\n-\t\t\tlog.debug(\"announcements.size(): {}\", announcements.size());\n-\t\t}\n+\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null : new ViewableFilter(null, t, numberOfAnnouncements);\n \t\t\n \t\tif (AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder)) {\n \t\t\ttry {\n \t\t\t\tList<AnnouncementWrapper> messageList = new ArrayList<>();\n-\t\t\t\tAnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n+\t\t\t\tfinal AnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n \t\t\t\tfor (Message msg : announcements) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d52786f88ce1f81e5b73ecb4a8597159bb4258a9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk5Njc2MQ==", "bodyText": "i don't follow. announcements is always empty on line 244?", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r501996761", "createdAt": "2020-10-08T20:35:44Z", "author": {"login": "ottenhoff"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -227,59 +230,51 @@ public String getEntityPrefix() {\n \t\t//get the announcements for each channel\n \t\tList<Message> announcements = new ArrayList<Message>();\n \t\t\n-\t\tboolean enableReorder = ComponentManager.get(ServerConfigurationService.class).getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n+\t\tboolean enableReorder = serverConfigurationService.getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n \t\tString sortCurrentOrder = AnnouncementAction.SORT_DATE;\n \t\tif (enableReorder){\n \t\t\tsortCurrentOrder = AnnouncementAction.SORT_MESSAGE_ORDER;\n \t\t}\n-\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null:new ViewableFilter(null, t, numberOfAnnouncements);\n-\t\t\n-\t\t//for each channel\n-\t\tfor(String channel: channels) {\n-\t\t\ttry {\n-\t\t\t\tannouncements.addAll(announcementService.getMessages(channel, msgFilter, announcementSortAsc, false));\n-\t\t\t} catch (PermissionException | IdUnusedException | NullPointerException ex) {\n-\t\t\t\t//user may not have access to view the channel but get all public messages in this channel\n-\t\t\t\tAnnouncementChannel announcementChannel = (AnnouncementChannel)announcementService.getChannelPublic(channel);\n-\t\t\t\tif(announcementChannel != null){\n-\t\t\t\t\tList<Message> publicMessages = announcementChannel.getMessagesPublic(null, true);\n-\t\t\t\t\tfor(Message message : publicMessages){\n-\t\t\t\t\t\t//Add message only if it is within the time range\n-\t\t\t\t\t\tif(isMessageWithinPastNDays(message, numberOfDaysInThePast) && announcementService.isMessageViewable((AnnouncementMessage) message)){\n-\t\t\t\t\t\t\tannouncements.add(message);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tif(log.isDebugEnabled()) {\n-\t\t\tlog.debug(\"announcements.size(): {}\", announcements.size());\n-\t\t}\n+\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null : new ViewableFilter(null, t, numberOfAnnouncements);\n \t\t\n \t\tif (AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder)) {\n \t\t\ttry {\n \t\t\t\tList<AnnouncementWrapper> messageList = new ArrayList<>();\n-\t\t\t\tAnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n+\t\t\t\tfinal AnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n \t\t\t\tfor (Message msg : announcements) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5NjU1OQ=="}, "originalCommit": {"oid": "d52786f88ce1f81e5b73ecb4a8597159bb4258a9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAwMzk4NQ==", "bodyText": "yes on line 244\nfor (Message msg : announcements) {\ndue to Earle's change, when the code gets to line 244, announcements haven't been added to the announcements list yet.  Because the block that used to set it got moved into an else block.", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r502003985", "createdAt": "2020-10-08T20:49:19Z", "author": {"login": "austin48"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -227,59 +230,51 @@ public String getEntityPrefix() {\n \t\t//get the announcements for each channel\n \t\tList<Message> announcements = new ArrayList<Message>();\n \t\t\n-\t\tboolean enableReorder = ComponentManager.get(ServerConfigurationService.class).getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n+\t\tboolean enableReorder = serverConfigurationService.getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n \t\tString sortCurrentOrder = AnnouncementAction.SORT_DATE;\n \t\tif (enableReorder){\n \t\t\tsortCurrentOrder = AnnouncementAction.SORT_MESSAGE_ORDER;\n \t\t}\n-\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null:new ViewableFilter(null, t, numberOfAnnouncements);\n-\t\t\n-\t\t//for each channel\n-\t\tfor(String channel: channels) {\n-\t\t\ttry {\n-\t\t\t\tannouncements.addAll(announcementService.getMessages(channel, msgFilter, announcementSortAsc, false));\n-\t\t\t} catch (PermissionException | IdUnusedException | NullPointerException ex) {\n-\t\t\t\t//user may not have access to view the channel but get all public messages in this channel\n-\t\t\t\tAnnouncementChannel announcementChannel = (AnnouncementChannel)announcementService.getChannelPublic(channel);\n-\t\t\t\tif(announcementChannel != null){\n-\t\t\t\t\tList<Message> publicMessages = announcementChannel.getMessagesPublic(null, true);\n-\t\t\t\t\tfor(Message message : publicMessages){\n-\t\t\t\t\t\t//Add message only if it is within the time range\n-\t\t\t\t\t\tif(isMessageWithinPastNDays(message, numberOfDaysInThePast) && announcementService.isMessageViewable((AnnouncementMessage) message)){\n-\t\t\t\t\t\t\tannouncements.add(message);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tif(log.isDebugEnabled()) {\n-\t\t\tlog.debug(\"announcements.size(): {}\", announcements.size());\n-\t\t}\n+\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null : new ViewableFilter(null, t, numberOfAnnouncements);\n \t\t\n \t\tif (AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder)) {\n \t\t\ttry {\n \t\t\t\tList<AnnouncementWrapper> messageList = new ArrayList<>();\n-\t\t\t\tAnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n+\t\t\t\tfinal AnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n \t\t\t\tfor (Message msg : announcements) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5NjU1OQ=="}, "originalCommit": {"oid": "d52786f88ce1f81e5b73ecb4a8597159bb4258a9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAwNzMxNA==", "bodyText": "okay can you make the change to fix it ?", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r502007314", "createdAt": "2020-10-08T20:55:58Z", "author": {"login": "ottenhoff"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -227,59 +230,51 @@ public String getEntityPrefix() {\n \t\t//get the announcements for each channel\n \t\tList<Message> announcements = new ArrayList<Message>();\n \t\t\n-\t\tboolean enableReorder = ComponentManager.get(ServerConfigurationService.class).getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n+\t\tboolean enableReorder = serverConfigurationService.getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n \t\tString sortCurrentOrder = AnnouncementAction.SORT_DATE;\n \t\tif (enableReorder){\n \t\t\tsortCurrentOrder = AnnouncementAction.SORT_MESSAGE_ORDER;\n \t\t}\n-\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null:new ViewableFilter(null, t, numberOfAnnouncements);\n-\t\t\n-\t\t//for each channel\n-\t\tfor(String channel: channels) {\n-\t\t\ttry {\n-\t\t\t\tannouncements.addAll(announcementService.getMessages(channel, msgFilter, announcementSortAsc, false));\n-\t\t\t} catch (PermissionException | IdUnusedException | NullPointerException ex) {\n-\t\t\t\t//user may not have access to view the channel but get all public messages in this channel\n-\t\t\t\tAnnouncementChannel announcementChannel = (AnnouncementChannel)announcementService.getChannelPublic(channel);\n-\t\t\t\tif(announcementChannel != null){\n-\t\t\t\t\tList<Message> publicMessages = announcementChannel.getMessagesPublic(null, true);\n-\t\t\t\t\tfor(Message message : publicMessages){\n-\t\t\t\t\t\t//Add message only if it is within the time range\n-\t\t\t\t\t\tif(isMessageWithinPastNDays(message, numberOfDaysInThePast) && announcementService.isMessageViewable((AnnouncementMessage) message)){\n-\t\t\t\t\t\t\tannouncements.add(message);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tif(log.isDebugEnabled()) {\n-\t\t\tlog.debug(\"announcements.size(): {}\", announcements.size());\n-\t\t}\n+\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null : new ViewableFilter(null, t, numberOfAnnouncements);\n \t\t\n \t\tif (AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder)) {\n \t\t\ttry {\n \t\t\t\tList<AnnouncementWrapper> messageList = new ArrayList<>();\n-\t\t\t\tAnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n+\t\t\t\tfinal AnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n \t\t\t\tfor (Message msg : announcements) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5NjU1OQ=="}, "originalCommit": {"oid": "d52786f88ce1f81e5b73ecb4a8597159bb4258a9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAxMzg2MQ==", "bodyText": "ok, will do", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r502013861", "createdAt": "2020-10-08T21:09:21Z", "author": {"login": "austin48"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -227,59 +230,51 @@ public String getEntityPrefix() {\n \t\t//get the announcements for each channel\n \t\tList<Message> announcements = new ArrayList<Message>();\n \t\t\n-\t\tboolean enableReorder = ComponentManager.get(ServerConfigurationService.class).getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n+\t\tboolean enableReorder = serverConfigurationService.getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n \t\tString sortCurrentOrder = AnnouncementAction.SORT_DATE;\n \t\tif (enableReorder){\n \t\t\tsortCurrentOrder = AnnouncementAction.SORT_MESSAGE_ORDER;\n \t\t}\n-\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null:new ViewableFilter(null, t, numberOfAnnouncements);\n-\t\t\n-\t\t//for each channel\n-\t\tfor(String channel: channels) {\n-\t\t\ttry {\n-\t\t\t\tannouncements.addAll(announcementService.getMessages(channel, msgFilter, announcementSortAsc, false));\n-\t\t\t} catch (PermissionException | IdUnusedException | NullPointerException ex) {\n-\t\t\t\t//user may not have access to view the channel but get all public messages in this channel\n-\t\t\t\tAnnouncementChannel announcementChannel = (AnnouncementChannel)announcementService.getChannelPublic(channel);\n-\t\t\t\tif(announcementChannel != null){\n-\t\t\t\t\tList<Message> publicMessages = announcementChannel.getMessagesPublic(null, true);\n-\t\t\t\t\tfor(Message message : publicMessages){\n-\t\t\t\t\t\t//Add message only if it is within the time range\n-\t\t\t\t\t\tif(isMessageWithinPastNDays(message, numberOfDaysInThePast) && announcementService.isMessageViewable((AnnouncementMessage) message)){\n-\t\t\t\t\t\t\tannouncements.add(message);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tif(log.isDebugEnabled()) {\n-\t\t\tlog.debug(\"announcements.size(): {}\", announcements.size());\n-\t\t}\n+\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null : new ViewableFilter(null, t, numberOfAnnouncements);\n \t\t\n \t\tif (AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder)) {\n \t\t\ttry {\n \t\t\t\tList<AnnouncementWrapper> messageList = new ArrayList<>();\n-\t\t\t\tAnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n+\t\t\t\tfinal AnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n \t\t\t\tfor (Message msg : announcements) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5NjU1OQ=="}, "originalCommit": {"oid": "d52786f88ce1f81e5b73ecb4a8597159bb4258a9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcyMzY3Mg==", "bodyText": "committed latest fix\nbut i'm not totally sure about these lines\nannouncements.removeAll(announcements);\nannouncements.addAll(messageList);\n\nit works, but I'm not sure if that's the best way to \"replace\" the contents of announcements", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r502723672", "createdAt": "2020-10-10T00:48:59Z", "author": {"login": "austin48"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -227,59 +230,51 @@ public String getEntityPrefix() {\n \t\t//get the announcements for each channel\n \t\tList<Message> announcements = new ArrayList<Message>();\n \t\t\n-\t\tboolean enableReorder = ComponentManager.get(ServerConfigurationService.class).getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n+\t\tboolean enableReorder = serverConfigurationService.getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n \t\tString sortCurrentOrder = AnnouncementAction.SORT_DATE;\n \t\tif (enableReorder){\n \t\t\tsortCurrentOrder = AnnouncementAction.SORT_MESSAGE_ORDER;\n \t\t}\n-\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null:new ViewableFilter(null, t, numberOfAnnouncements);\n-\t\t\n-\t\t//for each channel\n-\t\tfor(String channel: channels) {\n-\t\t\ttry {\n-\t\t\t\tannouncements.addAll(announcementService.getMessages(channel, msgFilter, announcementSortAsc, false));\n-\t\t\t} catch (PermissionException | IdUnusedException | NullPointerException ex) {\n-\t\t\t\t//user may not have access to view the channel but get all public messages in this channel\n-\t\t\t\tAnnouncementChannel announcementChannel = (AnnouncementChannel)announcementService.getChannelPublic(channel);\n-\t\t\t\tif(announcementChannel != null){\n-\t\t\t\t\tList<Message> publicMessages = announcementChannel.getMessagesPublic(null, true);\n-\t\t\t\t\tfor(Message message : publicMessages){\n-\t\t\t\t\t\t//Add message only if it is within the time range\n-\t\t\t\t\t\tif(isMessageWithinPastNDays(message, numberOfDaysInThePast) && announcementService.isMessageViewable((AnnouncementMessage) message)){\n-\t\t\t\t\t\t\tannouncements.add(message);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tif(log.isDebugEnabled()) {\n-\t\t\tlog.debug(\"announcements.size(): {}\", announcements.size());\n-\t\t}\n+\t\tViewableFilter msgFilter = AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder) ? null : new ViewableFilter(null, t, numberOfAnnouncements);\n \t\t\n \t\tif (AnnouncementAction.SORT_MESSAGE_ORDER.equals(sortCurrentOrder)) {\n \t\t\ttry {\n \t\t\t\tList<AnnouncementWrapper> messageList = new ArrayList<>();\n-\t\t\t\tAnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n+\t\t\t\tfinal AnnouncementChannel defaultChannel = (AnnouncementChannel) announcementService.getChannel(\"/announcement/channel/\" + siteId + \"/main\");\n \t\t\t\tfor (Message msg : announcements) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5NjU1OQ=="}, "originalCommit": {"oid": "d52786f88ce1f81e5b73ecb4a8597159bb4258a9"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjA3Nzc1OnYy", "diffSide": "RIGHT", "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNjoyNTowMFrOH5K0PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNjoyNTowMFrOH5K0PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTcwODA5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tString sortCurrentOrder = AnnouncementAction.SORT_DATE;\n          \n          \n            \n            \t\tif (enableReorder){\n          \n          \n            \n            \t\t\tsortCurrentOrder = AnnouncementAction.SORT_MESSAGE_ORDER;\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tfinal String sortCurrentOrder = enableReorder ? AnnouncementAction.SORT_MESSAGE_ORDER : AnnouncementAction.SORT_DATE;", "url": "https://github.com/sakaiproject/sakai/pull/8270#discussion_r529708092", "createdAt": "2020-11-24T16:25:00Z", "author": {"login": "adrianfish"}, "path": "announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/entityprovider/AnnouncementEntityProviderImpl.java", "diffHunk": "@@ -213,36 +222,60 @@ public String getEntityPrefix() {\n \n \t\tlog.debug(\"numberOfAnnouncements: {}\", numberOfAnnouncements);\n \t\tlog.debug(\"numberOfDaysInThePast: {}\", numberOfDaysInThePast);\n+\t\tlog.debug(\"announcementSortAsc: {}\", announcementSortAsc);\n \t\t\n \t\t//get the Sakai Time for the given java Date\n \t\tTime t = timeService.newTime(getTimeForDaysInPast(numberOfDaysInThePast).getTime());\n \t\t\n \t\t//get the announcements for each channel\n \t\tList<Message> announcements = new ArrayList<Message>();\n \t\t\n+\t\tboolean enableReorder = serverConfigurationService.getBoolean(AnnouncementAction.SAK_PROP_ANNC_REORDER, AnnouncementAction.SAK_PROP_ANNC_REORDER_DEFAULT);\n+\t\tString sortCurrentOrder = AnnouncementAction.SORT_DATE;\n+\t\tif (enableReorder){\n+\t\t\tsortCurrentOrder = AnnouncementAction.SORT_MESSAGE_ORDER;\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ab7c095b9e191b0cc99a946129d3323c9891b9"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2202, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}