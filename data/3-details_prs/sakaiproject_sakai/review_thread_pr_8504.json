{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NDgxOTc4", "number": 8504, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo1Mzo1N1rOEfdzXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo1Mzo1N1rOEfdzXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDI5NTk3OnYy", "diffSide": "RIGHT", "path": "basiclti/basiclti-blis/src/java/org/sakaiproject/lti13/LTI13Servlet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo1Mzo1N1rOHLwQPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo1Mzo1N1rOHLwQPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA4Njk3Mw==", "bodyText": "Instead of getting the underlying Cache implementation its best to use the spring Cache Manager:\norg.sakaiproject.ignite.SakaiCacheManager\nThis Cache Manager is already enabled so all you really to do in your tool is just turn on scanning with:\n<cache:annotation-driven cache-manager=\"org.sakaiproject.ignite.SakaiCacheManager\"/>\nAnd use the annotations like:\n@CachePut\n@CacheEvict\nSee this guide:\nhttps://www.baeldung.com/spring-cache-tutorial", "url": "https://github.com/sakaiproject/sakai/pull/8504#discussion_r482086973", "createdAt": "2020-09-02T13:53:57Z", "author": {"login": "ern"}, "path": "basiclti/basiclti-blis/src/java/org/sakaiproject/lti13/LTI13Servlet.java", "diffHunk": "@@ -117,13 +120,25 @@\n \t// TODO: Rotate these after a while\n \tprivate KeyPair tokenKeyPair = null;\n \n+    protected static Ignite ignite = null;\n+    protected static IgniteCache<String, String> igniteCache = null;\n+\n+\tprivate static final String CACHE_NAME = LTI13Servlet.class.getName() + \"_cache\";\n+\tprivate static final String CACHE_PUBLIC = \"key::public\";\n+\tprivate static final String CACHE_PRIVATE = \"key::private\";\n+\n \t@Override\n \tpublic void init(ServletConfig config) throws ServletException {\n \t\tsuper.init(config);\n \t\tif (ltiService == null) {\n \t\t\tltiService = (LTIService) ComponentManager.get(\"org.sakaiproject.lti.api.LTIService\");\n \t\t}\n \n+        if (igniteCache == null) {\n+            Ignite ignite = (Ignite) ComponentManager.get(\"org.sakaiproject.ignite.SakaiIgnite\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16cb30824881a4133343eef7e78e420fd427855f"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2739, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}