{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NDkyMDM3", "number": 8452, "title": "SAK-44097 - Add simple configuration URL to avoid mis-typing LTI 1.3 \u2026", "bodyText": "\u2026info", "createdAt": "2020-08-12T03:59:59Z", "url": "https://github.com/sakaiproject/sakai/pull/8452", "merged": true, "mergeCommit": {"oid": "08fcb0ec0208007520561936d82ef69562211b27"}, "closed": true, "closedAt": "2020-08-17T04:23:00Z", "author": {"login": "csev"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-N-xbgFqTQ2NjA3OTcyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_qtKNgFqTQ2ODE1NzQ3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDc5NzI2", "url": "https://github.com/sakaiproject/sakai/pull/8452#pullrequestreview-466079726", "createdAt": "2020-08-12T16:26:42Z", "commit": {"oid": "731c6164ad868c5f5a70fdc1e52a21447e729ac9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyNjo0M1rOG_pFtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyNjo0M1rOG_pFtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4NjY3Ng==", "bodyText": "these 4 lines seem like defaults ?  why explicitly set them ?", "url": "https://github.com/sakaiproject/sakai/pull/8452#discussion_r469386676", "createdAt": "2020-08-12T16:26:43Z", "author": {"login": "ottenhoff"}, "path": "basiclti/basiclti-blis/src/java/org/sakaiproject/lti13/LTI13Servlet.java", "diffHunk": "@@ -295,6 +301,60 @@ protected void doPost(HttpServletRequest request, HttpServletResponse response)\n \n \t}\n \n+\t// A very locked down proxy - JSON Only\n+\tprotected void handleProxy(HttpServletRequest request, HttpServletResponse response) {\n+\t\tString proxyUrl = request.getParameter(\"proxyUrl\");\n+\t\tif ( proxyUrl == null ) {\n+\t\t\tLTI13Util.return400(response, \"Missing proxyUrl\");\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tSession sess = SessionManager.getCurrentSession();\n+\t\tif ( sess == null || sess.getUserId() == null ) {\n+\t\t\tLTI13Util.return400(response, \"Must be logged in\");\n+\t\t\treturn;\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tjava.net.URL url = new java.net.URL(proxyUrl);\n+\t\t\tjava.net.HttpURLConnection con = (java.net.HttpURLConnection) url.openConnection();\n+\t\t\tcon.setRequestMethod(\"GET\");\n+\t\t\tcon.setConnectTimeout(3000);\n+\t\t\tcon.setReadTimeout(3000);\n+\t\t\tcon.setInstanceFollowRedirects(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731c6164ad868c5f5a70fdc1e52a21447e729ac9"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDgwMDE4", "url": "https://github.com/sakaiproject/sakai/pull/8452#pullrequestreview-466080018", "createdAt": "2020-08-12T16:27:06Z", "commit": {"oid": "731c6164ad868c5f5a70fdc1e52a21447e729ac9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyNzowNlrOG_pGqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyNzowNlrOG_pGqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4NjkyMA==", "bodyText": "better to close() in a finally block", "url": "https://github.com/sakaiproject/sakai/pull/8452#discussion_r469386920", "createdAt": "2020-08-12T16:27:06Z", "author": {"login": "ottenhoff"}, "path": "basiclti/basiclti-blis/src/java/org/sakaiproject/lti13/LTI13Servlet.java", "diffHunk": "@@ -295,6 +301,60 @@ protected void doPost(HttpServletRequest request, HttpServletResponse response)\n \n \t}\n \n+\t// A very locked down proxy - JSON Only\n+\tprotected void handleProxy(HttpServletRequest request, HttpServletResponse response) {\n+\t\tString proxyUrl = request.getParameter(\"proxyUrl\");\n+\t\tif ( proxyUrl == null ) {\n+\t\t\tLTI13Util.return400(response, \"Missing proxyUrl\");\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tSession sess = SessionManager.getCurrentSession();\n+\t\tif ( sess == null || sess.getUserId() == null ) {\n+\t\t\tLTI13Util.return400(response, \"Must be logged in\");\n+\t\t\treturn;\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tjava.net.URL url = new java.net.URL(proxyUrl);\n+\t\t\tjava.net.HttpURLConnection con = (java.net.HttpURLConnection) url.openConnection();\n+\t\t\tcon.setRequestMethod(\"GET\");\n+\t\t\tcon.setConnectTimeout(3000);\n+\t\t\tcon.setReadTimeout(3000);\n+\t\t\tcon.setInstanceFollowRedirects(true);\n+\n+\t\t\tjava.io.BufferedReader in = new java.io.BufferedReader(\n+\t\t\t\tnew java.io.InputStreamReader(con.getInputStream()));\n+\t\t\tString inputLine;\n+\t\t\tStringBuffer content = new StringBuffer();\n+\t\t\twhile ((inputLine = in.readLine()) != null) {\n+\t\t\t\tcontent.append(inputLine);\n+\t\t\t}\n+\t\t\tif ( content.length() > 10000 ) {\n+\t\t\t\tin.close();\n+\t\t\t\tLTI13Util.return400(response, \"Content too long\");\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\tin.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731c6164ad868c5f5a70fdc1e52a21447e729ac9"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b356bd162de91af9dd41f3502b504c546030b91", "author": {"user": {"login": "csev", "name": "Charles Severance"}}, "url": "https://github.com/sakaiproject/sakai/commit/2b356bd162de91af9dd41f3502b504c546030b91", "committedDate": "2020-08-14T03:12:59Z", "message": "SAK-44097 - Add simple configuration URL to avoid mis-typing LTI 1.3 info"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2a798638e137426a93b0064486ade12c88033ec", "author": {"user": {"login": "csev", "name": "Charles Severance"}}, "url": "https://github.com/sakaiproject/sakai/commit/a2a798638e137426a93b0064486ade12c88033ec", "committedDate": "2020-08-14T03:12:59Z", "message": "SAK-44097 - Fix Codacy complaint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "337869db1b8e31da2fed61c439e90c2a0beb6656", "author": {"user": {"login": "csev", "name": "Charles Severance"}}, "url": "https://github.com/sakaiproject/sakai/commit/337869db1b8e31da2fed61c439e90c2a0beb6656", "committedDate": "2020-08-14T03:12:59Z", "message": "SAK-44097 - Suppoert the deepLinkUrl return - nice."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4db8a4a81481e99dcc7bea58160a12b44ebe3f4a", "author": {"user": {"login": "csev", "name": "Charles Severance"}}, "url": "https://github.com/sakaiproject/sakai/commit/4db8a4a81481e99dcc7bea58160a12b44ebe3f4a", "committedDate": "2020-08-14T03:12:59Z", "message": "SAK-44097 - Make the try/except structure more hip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "76b81fd30facaa1e07ed1ae56127ab21ca9d47b0", "author": {"user": {"login": "csev", "name": "Charles Severance"}}, "url": "https://github.com/sakaiproject/sakai/commit/76b81fd30facaa1e07ed1ae56127ab21ca9d47b0", "committedDate": "2020-08-13T21:32:41Z", "message": "SAK-44097 - Make the try/except structure more hip"}, "afterCommit": {"oid": "4db8a4a81481e99dcc7bea58160a12b44ebe3f4a", "author": {"user": {"login": "csev", "name": "Charles Severance"}}, "url": "https://github.com/sakaiproject/sakai/commit/4db8a4a81481e99dcc7bea58160a12b44ebe3f4a", "committedDate": "2020-08-14T03:12:59Z", "message": "SAK-44097 - Make the try/except structure more hip"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTU3NDcz", "url": "https://github.com/sakaiproject/sakai/pull/8452#pullrequestreview-468157473", "createdAt": "2020-08-17T04:28:39Z", "commit": {"oid": "4db8a4a81481e99dcc7bea58160a12b44ebe3f4a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNDoyODozOVrOHBZVTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNDoyODozOVrOHBZVTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIyNTY3OA==", "bodyText": "I believe there's potential for a DoS attack here if the input just keeps coming. It would never make it to the check after. You'd either need to use a size limited BufferedReader or a org.apache.commons.io.input.BoundedInputStream.\nThis suggests\nhttps://stackoverflow.com/a/17142341/3708872\nBufferedReader bufferedReader = new BufferedReader(\n  new InputStreamReader(\n    new BoundedInputStream(inputStream, <no-of-bytes>)\n  )\n);", "url": "https://github.com/sakaiproject/sakai/pull/8452#discussion_r471225678", "createdAt": "2020-08-17T04:28:39Z", "author": {"login": "jonespm"}, "path": "basiclti/basiclti-blis/src/java/org/sakaiproject/lti13/LTI13Servlet.java", "diffHunk": "@@ -295,6 +301,62 @@ protected void doPost(HttpServletRequest request, HttpServletResponse response)\n \n \t}\n \n+\t// A very locked down proxy - JSON Only\n+\tprotected void handleProxy(HttpServletRequest request, HttpServletResponse response) {\n+\t\tString proxyUrl = request.getParameter(\"proxyUrl\");\n+\t\tif ( proxyUrl == null ) {\n+\t\t\tLTI13Util.return400(response, \"Missing proxyUrl\");\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tSession sess = SessionManager.getCurrentSession();\n+\t\tif ( sess == null || sess.getUserId() == null ) {\n+\t\t\tLTI13Util.return400(response, \"Must be logged in\");\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t// https://stackoverflow.com/a/43708457/1994792\n+\t\ttry {\n+\t\t\tjava.net.URL url = new java.net.URL(proxyUrl);\n+\t\t\tjava.net.HttpURLConnection con = (java.net.HttpURLConnection) url.openConnection();\n+\t\t\tcon.setRequestMethod(\"GET\");\n+\t\t\tcon.setConnectTimeout(3000);\n+\t\t\tcon.setReadTimeout(3000);\n+\t\t\tcon.setInstanceFollowRedirects(true);\n+\n+\t\t\ttry ( java.io.BufferedReader in = new java.io.BufferedReader(\n+\t\t\t\tnew java.io.InputStreamReader(con.getInputStream())) )\n+\t\t\t{\n+\t\t\t\tString inputLine;\n+\t\t\t\tStringBuffer content = new StringBuffer();\n+\t\t\t\twhile ((inputLine = in.readLine()) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4db8a4a81481e99dcc7bea58160a12b44ebe3f4a"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2731, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}