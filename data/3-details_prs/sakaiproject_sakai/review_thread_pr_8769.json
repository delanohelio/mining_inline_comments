{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NDE5ODk0", "number": 8769, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMjowMzoxNlrOE-3ArQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDoxMDoxM1rOE_3U7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzQ4NDYxOnYy", "diffSide": "RIGHT", "path": "msgcntr/messageforums-app/src/java/org/sakaiproject/tool/messageforums/DiscussionForumTool.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMjowMzoxNlrOH8Po_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDo1MzoxOVrOH8T0Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzMjg2Mw==", "bodyText": "Use the newer log pattern please!", "url": "https://github.com/sakaiproject/sakai/pull/8769#discussion_r532932863", "createdAt": "2020-11-30T22:03:16Z", "author": {"login": "ern"}, "path": "msgcntr/messageforums-app/src/java/org/sakaiproject/tool/messageforums/DiscussionForumTool.java", "diffHunk": "@@ -7375,13 +7376,16 @@ public void  sendEmailNotification(Message reply, DiscussionMessageBean currthre\n \t\twhile (iter.hasNext()){\n \t\t\tDiscussionMessageBean decoMessage = (DiscussionMessageBean) iter.next();\n \t\t\tString threadauthor = decoMessage.getMessage().getCreatedBy();\n-\t\t\tEmailNotification authorNotificationLevel = emailNotificationManager.getEmailNotification(threadauthor);\n-\t\t\t// only add level 1 users , since we've already got level2 users. \n-\t\t\tif (EmailNotification.EMAIL_REPLY_TO_MY_MESSAGE.equalsIgnoreCase(authorNotificationLevel.getNotificationLevel())){\n-\t\t\t\tif (log.isDebugEnabled()){\n-\t\t\t\t\tlog.debug(\"The author: \" + threadauthor + \" wants to be notified\");\n+\t\t\t// don't include the reply author\n+\t\t\tif (!threadauthor.equals(reply.getCreatedBy())) {\n+\t\t\t\tEmailNotification authorNotificationLevel = emailNotificationManager.getEmailNotification(threadauthor);\n+\t\t\t\t// only add level 1 users , since we've already got level2 users.\n+\t\t\t\tif (EmailNotification.EMAIL_REPLY_TO_MY_MESSAGE.equalsIgnoreCase(authorNotificationLevel.getNotificationLevel())){\n+\t\t\t\t\tif (log.isDebugEnabled()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df42a5b8d0a92406af72dbe1c2f08bae546f92da"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMTI1NQ==", "bodyText": "done", "url": "https://github.com/sakaiproject/sakai/pull/8769#discussion_r533001255", "createdAt": "2020-12-01T00:53:19Z", "author": {"login": "austin48"}, "path": "msgcntr/messageforums-app/src/java/org/sakaiproject/tool/messageforums/DiscussionForumTool.java", "diffHunk": "@@ -7375,13 +7376,16 @@ public void  sendEmailNotification(Message reply, DiscussionMessageBean currthre\n \t\twhile (iter.hasNext()){\n \t\t\tDiscussionMessageBean decoMessage = (DiscussionMessageBean) iter.next();\n \t\t\tString threadauthor = decoMessage.getMessage().getCreatedBy();\n-\t\t\tEmailNotification authorNotificationLevel = emailNotificationManager.getEmailNotification(threadauthor);\n-\t\t\t// only add level 1 users , since we've already got level2 users. \n-\t\t\tif (EmailNotification.EMAIL_REPLY_TO_MY_MESSAGE.equalsIgnoreCase(authorNotificationLevel.getNotificationLevel())){\n-\t\t\t\tif (log.isDebugEnabled()){\n-\t\t\t\t\tlog.debug(\"The author: \" + threadauthor + \" wants to be notified\");\n+\t\t\t// don't include the reply author\n+\t\t\tif (!threadauthor.equals(reply.getCreatedBy())) {\n+\t\t\t\tEmailNotification authorNotificationLevel = emailNotificationManager.getEmailNotification(threadauthor);\n+\t\t\t\t// only add level 1 users , since we've already got level2 users.\n+\t\t\t\tif (EmailNotification.EMAIL_REPLY_TO_MY_MESSAGE.equalsIgnoreCase(authorNotificationLevel.getNotificationLevel())){\n+\t\t\t\t\tif (log.isDebugEnabled()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzMjg2Mw=="}, "originalCommit": {"oid": "df42a5b8d0a92406af72dbe1c2f08bae546f92da"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NDAyMjIyOnYy", "diffSide": "RIGHT", "path": "msgcntr/messageforums-app/src/java/org/sakaiproject/tool/messageforums/DiscussionForumTool.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDoxMDoxM1rOH9zd1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDoxMDoxM1rOH9zd1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2ODQwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tif (log.isDebugEnabled()){\n          \n          \n            \n            \t\t\t\t\t\tlog.debug(\"The author: {} wants to be notified\", threadauthor);\n          \n          \n            \n            \t\t\t\t\t}\n          \n          \n            \n            \t\t\t\t\tlog.debug(\"The author: {} wants to be notified\", threadauthor);", "url": "https://github.com/sakaiproject/sakai/pull/8769#discussion_r534568404", "createdAt": "2020-12-03T00:10:13Z", "author": {"login": "ern"}, "path": "msgcntr/messageforums-app/src/java/org/sakaiproject/tool/messageforums/DiscussionForumTool.java", "diffHunk": "@@ -7375,13 +7376,16 @@ public void  sendEmailNotification(Message reply, DiscussionMessageBean currthre\n \t\twhile (iter.hasNext()){\n \t\t\tDiscussionMessageBean decoMessage = (DiscussionMessageBean) iter.next();\n \t\t\tString threadauthor = decoMessage.getMessage().getCreatedBy();\n-\t\t\tEmailNotification authorNotificationLevel = emailNotificationManager.getEmailNotification(threadauthor);\n-\t\t\t// only add level 1 users , since we've already got level2 users. \n-\t\t\tif (EmailNotification.EMAIL_REPLY_TO_MY_MESSAGE.equalsIgnoreCase(authorNotificationLevel.getNotificationLevel())){\n-\t\t\t\tif (log.isDebugEnabled()){\n-\t\t\t\t\tlog.debug(\"The author: \" + threadauthor + \" wants to be notified\");\n+\t\t\t// don't include the reply author\n+\t\t\tif (!threadauthor.equals(reply.getCreatedBy())) {\n+\t\t\t\tEmailNotification authorNotificationLevel = emailNotificationManager.getEmailNotification(threadauthor);\n+\t\t\t\t// only add level 1 users , since we've already got level2 users.\n+\t\t\t\tif (EmailNotification.EMAIL_REPLY_TO_MY_MESSAGE.equalsIgnoreCase(authorNotificationLevel.getNotificationLevel())){\n+\t\t\t\t\tif (log.isDebugEnabled()){\n+\t\t\t\t\t\tlog.debug(\"The author: {} wants to be notified\", threadauthor);\n+\t\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b47b856013d17f51b827f4639a5c13e6040615a"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2494, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}