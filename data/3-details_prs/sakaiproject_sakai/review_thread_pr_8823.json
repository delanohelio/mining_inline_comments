{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMjY5NjU5", "number": 8823, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzowNjo1NVrOE6qvrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzowNjo1NVrOE6qvrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTUzMTk2OnYy", "diffSide": "RIGHT", "path": "textarea/elfinder-sakai/src/java/org/sakaiproject/elfinder/controller/executors/SakaiTmbCommandExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzowNjo1NlrOH14I2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzowNzo1NFrOH14LeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI1NjM0NQ==", "bodyText": "FY I didn't opt to creating a config option for this as it is simply a reasonable upper limit and injecting the services into these classes is not trivial due to the way they are instantiated.", "url": "https://github.com/sakaiproject/sakai/pull/8823#discussion_r526256345", "createdAt": "2020-11-18T17:06:56Z", "author": {"login": "ern"}, "path": "textarea/elfinder-sakai/src/java/org/sakaiproject/elfinder/controller/executors/SakaiTmbCommandExecutor.java", "diffHunk": "@@ -29,12 +29,14 @@\n     public void execute(FsService fsService, HttpServletRequest request, HttpServletResponse response, ServletContext servletContext) throws Exception {\n         String target = request.getParameter(\"target\");\n         FsItemEx fsi = super.findItem(fsService, target);\n-        int width = fsService.getServiceConfig().getTmbWidth();\n-        try (InputStream is = fsi.openInputStream()) {\n-            ByteArrayOutputStream baos = resize(is, width);\n-            response.setHeader(HttpHeaders.LAST_MODIFIED, DateTimeFormatter.RFC_1123_DATE_TIME.format(ZonedDateTime.now().withZoneSameInstant(ZoneId.of(\"GMT\"))));\n-            response.setHeader(HttpHeaders.EXPIRES, DateTimeFormatter.RFC_1123_DATE_TIME.format(ZonedDateTime.now().withZoneSameInstant(ZoneId.of(\"GMT\")).plus(2, ChronoUnit.YEARS)));\n-            response.getOutputStream().write(baos.toByteArray());\n+        if (fsi.getSize() < 20971520) { // image must be less than 20MB", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fde4e77e60fced79899556febb2888cde6d7274"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI1NzAxNw==", "bodyText": "Okay, can we make this a constant at least?", "url": "https://github.com/sakaiproject/sakai/pull/8823#discussion_r526257017", "createdAt": "2020-11-18T17:07:54Z", "author": {"login": "bjones86"}, "path": "textarea/elfinder-sakai/src/java/org/sakaiproject/elfinder/controller/executors/SakaiTmbCommandExecutor.java", "diffHunk": "@@ -29,12 +29,14 @@\n     public void execute(FsService fsService, HttpServletRequest request, HttpServletResponse response, ServletContext servletContext) throws Exception {\n         String target = request.getParameter(\"target\");\n         FsItemEx fsi = super.findItem(fsService, target);\n-        int width = fsService.getServiceConfig().getTmbWidth();\n-        try (InputStream is = fsi.openInputStream()) {\n-            ByteArrayOutputStream baos = resize(is, width);\n-            response.setHeader(HttpHeaders.LAST_MODIFIED, DateTimeFormatter.RFC_1123_DATE_TIME.format(ZonedDateTime.now().withZoneSameInstant(ZoneId.of(\"GMT\"))));\n-            response.setHeader(HttpHeaders.EXPIRES, DateTimeFormatter.RFC_1123_DATE_TIME.format(ZonedDateTime.now().withZoneSameInstant(ZoneId.of(\"GMT\")).plus(2, ChronoUnit.YEARS)));\n-            response.getOutputStream().write(baos.toByteArray());\n+        if (fsi.getSize() < 20971520) { // image must be less than 20MB", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI1NjM0NQ=="}, "originalCommit": {"oid": "2fde4e77e60fced79899556febb2888cde6d7274"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2548, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}