{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MTQ4Nzky", "number": 8477, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDowNDoxM1rOEdJrWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDoxODoxOVrOEdJ_SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDAyNzE1OnYy", "diffSide": "RIGHT", "path": "lessonbuilder/tool/src/java/org/sakaiproject/lessonbuildertool/service/LessonBuilderEntityProducer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDowNDoxM1rOHIJWCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDowNDoxM1rOHIJWCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwMzc1Mw==", "bodyText": "I'd just use for (String part : parts) { here. Clearer, unless you need to test the index.", "url": "https://github.com/sakaiproject/sakai/pull/8477#discussion_r478303753", "createdAt": "2020-08-27T10:04:13Z", "author": {"login": "adrianfish"}, "path": "lessonbuilder/tool/src/java/org/sakaiproject/lessonbuildertool/service/LessonBuilderEntityProducer.java", "diffHunk": "@@ -1006,31 +1033,41 @@ else if (type == SimplePageItem.ASSESSMENT)\n        return needFix;\n     }\n \n-    String mergeGroups(Element itemElement, String attr, Collection<Group> siteGroups) {\n+    String mergeGroups(Element itemElement, String attr, Collection<Group> siteGroups, String fromSiteId) {\n \n \t// not currently doing this, although the code has been tested.\n \t// The problem is that other tools don't do it. Since much of our group\n \t// awareness comes from the other tools, enabling this produces\n \t// inconsistent results\n \n-\tNodeList groups = itemElement.getElementsByTagName(attr);\n+\tString groups = itemElement.getAttribute(attr);\n \tString groupString = null;\n-\t\n-\t// translate groups from title to ID\n-\tif (groups != null && siteGroups != null) {\n-\t    for (int n = 0; n < groups.getLength(); n ++) {\n-\t\tElement group = (Element)groups.item(n);\n-\t\tString title = group.getAttribute(\"title\");\n-\t\tif (title != null && !title.equals(\"\")) {\n-\t\t    for (Group g: siteGroups) {\n-\t\t\tif (title.equals(g.getTitle())) {\n-\t\t\t    if (groupString == null)\n-\t\t\t\tgroupString = g.getId();\n-\t\t\t    else\n-\t\t\t\tgroupString = groupString + \",\" + g.getId();\n+\tSite oldSite = null;\n+\ttry {\n+\t\toldSite = siteService.getSite(fromSiteId);\n+\t} catch (Exception e) {\n+\t\tlog.debug(\"site \" + fromSiteId + \" not found.\", e);\n+\t}\n+\t// For each old group, get the corresponding new group id\n+\tif (!groups.isEmpty() && siteGroups != null && oldSite != null) {\n+\t\tfinal String[] parts = groups.split(\",\");\n+\t\tfor (int n = 0; n < parts.length; n ++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f250f5594d4fb5ee1a2540ec6d2b4492145a980"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDA3ODE2OnYy", "diffSide": "RIGHT", "path": "lessonbuilder/tool/src/java/org/sakaiproject/lessonbuildertool/service/LessonBuilderEntityProducer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDoxODoxOVrOHIJ1CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDoxODoxOVrOHIJ1CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMxMTY4OA==", "bodyText": "Why not use j2ee JsonObject here, instead? I know simplepagebean uses Google's lib, but the j2ee version is a very similar api, with perhaps better builder patterns.", "url": "https://github.com/sakaiproject/sakai/pull/8477#discussion_r478311688", "createdAt": "2020-08-27T10:18:19Z", "author": {"login": "adrianfish"}, "path": "lessonbuilder/tool/src/java/org/sakaiproject/lessonbuildertool/service/LessonBuilderEntityProducer.java", "diffHunk": "@@ -510,6 +515,28 @@ else if (item.getType() == SimplePageItem.ASSESSMENT)\n \t\t    addAttr(doc, itemElement, \"samewindow\", item.isSameWindow() ? \"true\" : \"false\");\n \t\t\n \t\tString attrString = item.getAttributeString(); //json encoded attributes\n+\n+\t\tfinal JSONParser jsonParser = new JSONParser(); // JSON parser used to parse the attribute string into a JSON object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f250f5594d4fb5ee1a2540ec6d2b4492145a980"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2712, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}