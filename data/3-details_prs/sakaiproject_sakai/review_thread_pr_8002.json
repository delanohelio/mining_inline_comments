{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MDk2OTIw", "number": 8002, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjoyMzozM1rODmp_WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjoyMzozM1rODmp_WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODYwNDQxOnYy", "diffSide": "RIGHT", "path": "kernel/kernel-util/src/main/java/org/sakaiproject/util/comparator/AliasCreatedTimeComparator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjoyMzozM1rOF0MjCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjozMTozMlrOF0MyCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3NTg1MA==", "bodyText": "Spacing", "url": "https://github.com/sakaiproject/sakai/pull/8002#discussion_r390275850", "createdAt": "2020-03-10T12:23:33Z", "author": {"login": "jesusmmp"}, "path": "kernel/kernel-util/src/main/java/org/sakaiproject/util/comparator/AliasCreatedTimeComparator.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/***********************************************************************************\n+* Copyright (c) 2020 Apereo Foundation\n+\n+* Licensed under the Educational Community License, Version 2.0 (the \"License\");\n+* you may not use this file except in compliance with the License.\n+* You may obtain a copy of the License at\n+* \n+             http://opensource.org/licenses/ecl2\n+* \n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+ **********************************************************************************/\n+\n+package org.sakaiproject.util.comparator;\n+\n+import java.util.Comparator;\n+\n+import org.sakaiproject.alias.api.Alias;\n+\n+public class AliasCreatedTimeComparator implements Comparator<Alias> {\n+    public int compare(Alias lhs, Alias rhs) {\n+    // Sort by date, then by ID to assure consistent order.\n+    return lhs.getCreatedTime().compareTo(rhs.getCreatedTime()) * 10 + lhs.getId().compareTo(rhs.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89179ac2f50882a453b6ebeaa56aac73c87b004e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3OTY5MA==", "bodyText": "Fixed. thanks", "url": "https://github.com/sakaiproject/sakai/pull/8002#discussion_r390279690", "createdAt": "2020-03-10T12:31:32Z", "author": {"login": "mpellicer"}, "path": "kernel/kernel-util/src/main/java/org/sakaiproject/util/comparator/AliasCreatedTimeComparator.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/***********************************************************************************\n+* Copyright (c) 2020 Apereo Foundation\n+\n+* Licensed under the Educational Community License, Version 2.0 (the \"License\");\n+* you may not use this file except in compliance with the License.\n+* You may obtain a copy of the License at\n+* \n+             http://opensource.org/licenses/ecl2\n+* \n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+ **********************************************************************************/\n+\n+package org.sakaiproject.util.comparator;\n+\n+import java.util.Comparator;\n+\n+import org.sakaiproject.alias.api.Alias;\n+\n+public class AliasCreatedTimeComparator implements Comparator<Alias> {\n+    public int compare(Alias lhs, Alias rhs) {\n+    // Sort by date, then by ID to assure consistent order.\n+    return lhs.getCreatedTime().compareTo(rhs.getCreatedTime()) * 10 + lhs.getId().compareTo(rhs.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3NTg1MA=="}, "originalCommit": {"oid": "89179ac2f50882a453b6ebeaa56aac73c87b004e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2401, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}