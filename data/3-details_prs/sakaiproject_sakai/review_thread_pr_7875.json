{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjUxMzky", "number": 7875, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDowNTo1OVrODe0K9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDowNTo1OVrODe0K9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjM4NjQ3OnYy", "diffSide": "RIGHT", "path": "signup/tool/src/java/org/sakaiproject/signup/tool/jsf/UserLocale.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDowNTo1OVrOFoKKVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMDoyMzo1MVrOFopF_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1Mzg0NQ==", "bodyText": "a custom format doesn't seem right to me...... why doesn't the DateFormat above work?", "url": "https://github.com/sakaiproject/sakai/pull/7875#discussion_r377653845", "createdAt": "2020-02-11T14:05:59Z", "author": {"login": "ottenhoff"}, "path": "signup/tool/src/java/org/sakaiproject/signup/tool/jsf/UserLocale.java", "diffHunk": "@@ -34,39 +39,49 @@\n  * @author Peter Liu\n  */\n \n+@Slf4j\n public class UserLocale {\n \n \tprivate ResourceLoader rb = new ResourceLoader(\"messages\");\n-\tprivate SakaiFacade sakaiFacade;\n+\n+\t@Getter @Setter private SakaiFacade sakaiFacade;\n \n \tpublic String getLocale() {\n \t\treturn (String) this.rb.getLocale().toString();\n \t}\n-\n-\tpublic SakaiFacade getSakaiFacade() {\n-\t\treturn sakaiFacade;\n-\t}\n-\n-\tpublic void setSakaiFacade(SakaiFacade sakaiFacade) {\n-\t\tthis.sakaiFacade = sakaiFacade;\n-\t}\n \t\n \t/**\n \t * Get the date format from the locale\n \t * @return\n \t */\n \tpublic String getDateFormat() {\n-\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, (new ResourceLoader()).getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = new ResourceLoader().getLocale();\n+\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\treturn ((SimpleDateFormat)df).toPattern();\n+\t\t} catch (ClassCastException cce) {\n+\t\t\tlog.warn(\"Failed to cast DateFormat into SimpleDateFormat for locale {}\", locale.toString());\n+\t\t\treturn new SimpleDateFormat().toPattern();\n+\t\t}\n \t}\n \n \t/**\n-\t * Get the date format from the locale with short timezone at end\n+\t * Get the date format from the locale\n \t * @return String representing a SimpleDateFormat for use with JSF convertDateTime\n \t */\n \tpublic String getFullDateTimeFormat() {\n-\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, this.rb.getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = this.rb.getLocale();\n+\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\tSimpleDateFormat sdf = (SimpleDateFormat) df;\n+\t\t\tsdf.applyLocalizedPattern(\"MMMM d, yyyy h:mm a\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338a04fef82489784cee170fef5ba6215e3375e5"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1ODk1NA==", "bodyText": "It ships the default full format, with timezone. And you can't merge pattern changes.", "url": "https://github.com/sakaiproject/sakai/pull/7875#discussion_r377658954", "createdAt": "2020-02-11T14:14:45Z", "author": {"login": "adrianfish"}, "path": "signup/tool/src/java/org/sakaiproject/signup/tool/jsf/UserLocale.java", "diffHunk": "@@ -34,39 +39,49 @@\n  * @author Peter Liu\n  */\n \n+@Slf4j\n public class UserLocale {\n \n \tprivate ResourceLoader rb = new ResourceLoader(\"messages\");\n-\tprivate SakaiFacade sakaiFacade;\n+\n+\t@Getter @Setter private SakaiFacade sakaiFacade;\n \n \tpublic String getLocale() {\n \t\treturn (String) this.rb.getLocale().toString();\n \t}\n-\n-\tpublic SakaiFacade getSakaiFacade() {\n-\t\treturn sakaiFacade;\n-\t}\n-\n-\tpublic void setSakaiFacade(SakaiFacade sakaiFacade) {\n-\t\tthis.sakaiFacade = sakaiFacade;\n-\t}\n \t\n \t/**\n \t * Get the date format from the locale\n \t * @return\n \t */\n \tpublic String getDateFormat() {\n-\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, (new ResourceLoader()).getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = new ResourceLoader().getLocale();\n+\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\treturn ((SimpleDateFormat)df).toPattern();\n+\t\t} catch (ClassCastException cce) {\n+\t\t\tlog.warn(\"Failed to cast DateFormat into SimpleDateFormat for locale {}\", locale.toString());\n+\t\t\treturn new SimpleDateFormat().toPattern();\n+\t\t}\n \t}\n \n \t/**\n-\t * Get the date format from the locale with short timezone at end\n+\t * Get the date format from the locale\n \t * @return String representing a SimpleDateFormat for use with JSF convertDateTime\n \t */\n \tpublic String getFullDateTimeFormat() {\n-\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, this.rb.getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = this.rb.getLocale();\n+\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\tSimpleDateFormat sdf = (SimpleDateFormat) df;\n+\t\t\tsdf.applyLocalizedPattern(\"MMMM d, yyyy h:mm a\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1Mzg0NQ=="}, "originalCommit": {"oid": "338a04fef82489784cee170fef5ba6215e3375e5"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1OTc4Ng==", "bodyText": "If you look at the docs for DateFormat, it explains that if you want to change the default, you have to cast to a SimpleDateFormat and customise.", "url": "https://github.com/sakaiproject/sakai/pull/7875#discussion_r377659786", "createdAt": "2020-02-11T14:16:11Z", "author": {"login": "adrianfish"}, "path": "signup/tool/src/java/org/sakaiproject/signup/tool/jsf/UserLocale.java", "diffHunk": "@@ -34,39 +39,49 @@\n  * @author Peter Liu\n  */\n \n+@Slf4j\n public class UserLocale {\n \n \tprivate ResourceLoader rb = new ResourceLoader(\"messages\");\n-\tprivate SakaiFacade sakaiFacade;\n+\n+\t@Getter @Setter private SakaiFacade sakaiFacade;\n \n \tpublic String getLocale() {\n \t\treturn (String) this.rb.getLocale().toString();\n \t}\n-\n-\tpublic SakaiFacade getSakaiFacade() {\n-\t\treturn sakaiFacade;\n-\t}\n-\n-\tpublic void setSakaiFacade(SakaiFacade sakaiFacade) {\n-\t\tthis.sakaiFacade = sakaiFacade;\n-\t}\n \t\n \t/**\n \t * Get the date format from the locale\n \t * @return\n \t */\n \tpublic String getDateFormat() {\n-\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, (new ResourceLoader()).getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = new ResourceLoader().getLocale();\n+\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\treturn ((SimpleDateFormat)df).toPattern();\n+\t\t} catch (ClassCastException cce) {\n+\t\t\tlog.warn(\"Failed to cast DateFormat into SimpleDateFormat for locale {}\", locale.toString());\n+\t\t\treturn new SimpleDateFormat().toPattern();\n+\t\t}\n \t}\n \n \t/**\n-\t * Get the date format from the locale with short timezone at end\n+\t * Get the date format from the locale\n \t * @return String representing a SimpleDateFormat for use with JSF convertDateTime\n \t */\n \tpublic String getFullDateTimeFormat() {\n-\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, this.rb.getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = this.rb.getLocale();\n+\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\tSimpleDateFormat sdf = (SimpleDateFormat) df;\n+\t\t\tsdf.applyLocalizedPattern(\"MMMM d, yyyy h:mm a\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1Mzg0NQ=="}, "originalCommit": {"oid": "338a04fef82489784cee170fef5ba6215e3375e5"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY2MDQ3MA==", "bodyText": "You can tune DateFormat to a degree, by using SHORT, MEDIUM, LONG etc, but that's all.", "url": "https://github.com/sakaiproject/sakai/pull/7875#discussion_r377660470", "createdAt": "2020-02-11T14:17:14Z", "author": {"login": "adrianfish"}, "path": "signup/tool/src/java/org/sakaiproject/signup/tool/jsf/UserLocale.java", "diffHunk": "@@ -34,39 +39,49 @@\n  * @author Peter Liu\n  */\n \n+@Slf4j\n public class UserLocale {\n \n \tprivate ResourceLoader rb = new ResourceLoader(\"messages\");\n-\tprivate SakaiFacade sakaiFacade;\n+\n+\t@Getter @Setter private SakaiFacade sakaiFacade;\n \n \tpublic String getLocale() {\n \t\treturn (String) this.rb.getLocale().toString();\n \t}\n-\n-\tpublic SakaiFacade getSakaiFacade() {\n-\t\treturn sakaiFacade;\n-\t}\n-\n-\tpublic void setSakaiFacade(SakaiFacade sakaiFacade) {\n-\t\tthis.sakaiFacade = sakaiFacade;\n-\t}\n \t\n \t/**\n \t * Get the date format from the locale\n \t * @return\n \t */\n \tpublic String getDateFormat() {\n-\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, (new ResourceLoader()).getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = new ResourceLoader().getLocale();\n+\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\treturn ((SimpleDateFormat)df).toPattern();\n+\t\t} catch (ClassCastException cce) {\n+\t\t\tlog.warn(\"Failed to cast DateFormat into SimpleDateFormat for locale {}\", locale.toString());\n+\t\t\treturn new SimpleDateFormat().toPattern();\n+\t\t}\n \t}\n \n \t/**\n-\t * Get the date format from the locale with short timezone at end\n+\t * Get the date format from the locale\n \t * @return String representing a SimpleDateFormat for use with JSF convertDateTime\n \t */\n \tpublic String getFullDateTimeFormat() {\n-\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, this.rb.getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = this.rb.getLocale();\n+\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\tSimpleDateFormat sdf = (SimpleDateFormat) df;\n+\t\t\tsdf.applyLocalizedPattern(\"MMMM d, yyyy h:mm a\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1Mzg0NQ=="}, "originalCommit": {"oid": "338a04fef82489784cee170fef5ba6215e3375e5"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY2NTg1Ng==", "bodyText": "Still just seems more preferable to use a pre-defined format. For example, in your format, \"a\" means am/pm, right?\nSo let's just use MEDIUM instead of LONG to avoid timezone", "url": "https://github.com/sakaiproject/sakai/pull/7875#discussion_r377665856", "createdAt": "2020-02-11T14:26:00Z", "author": {"login": "ottenhoff"}, "path": "signup/tool/src/java/org/sakaiproject/signup/tool/jsf/UserLocale.java", "diffHunk": "@@ -34,39 +39,49 @@\n  * @author Peter Liu\n  */\n \n+@Slf4j\n public class UserLocale {\n \n \tprivate ResourceLoader rb = new ResourceLoader(\"messages\");\n-\tprivate SakaiFacade sakaiFacade;\n+\n+\t@Getter @Setter private SakaiFacade sakaiFacade;\n \n \tpublic String getLocale() {\n \t\treturn (String) this.rb.getLocale().toString();\n \t}\n-\n-\tpublic SakaiFacade getSakaiFacade() {\n-\t\treturn sakaiFacade;\n-\t}\n-\n-\tpublic void setSakaiFacade(SakaiFacade sakaiFacade) {\n-\t\tthis.sakaiFacade = sakaiFacade;\n-\t}\n \t\n \t/**\n \t * Get the date format from the locale\n \t * @return\n \t */\n \tpublic String getDateFormat() {\n-\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, (new ResourceLoader()).getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = new ResourceLoader().getLocale();\n+\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\treturn ((SimpleDateFormat)df).toPattern();\n+\t\t} catch (ClassCastException cce) {\n+\t\t\tlog.warn(\"Failed to cast DateFormat into SimpleDateFormat for locale {}\", locale.toString());\n+\t\t\treturn new SimpleDateFormat().toPattern();\n+\t\t}\n \t}\n \n \t/**\n-\t * Get the date format from the locale with short timezone at end\n+\t * Get the date format from the locale\n \t * @return String representing a SimpleDateFormat for use with JSF convertDateTime\n \t */\n \tpublic String getFullDateTimeFormat() {\n-\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, this.rb.getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = this.rb.getLocale();\n+\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\tSimpleDateFormat sdf = (SimpleDateFormat) df;\n+\t\t\tsdf.applyLocalizedPattern(\"MMMM d, yyyy h:mm a\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1Mzg0NQ=="}, "originalCommit": {"oid": "338a04fef82489784cee170fef5ba6215e3375e5"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MjMyNw==", "bodyText": "Then you lose am pm", "url": "https://github.com/sakaiproject/sakai/pull/7875#discussion_r377782327", "createdAt": "2020-02-11T17:23:02Z", "author": {"login": "adrianfish"}, "path": "signup/tool/src/java/org/sakaiproject/signup/tool/jsf/UserLocale.java", "diffHunk": "@@ -34,39 +39,49 @@\n  * @author Peter Liu\n  */\n \n+@Slf4j\n public class UserLocale {\n \n \tprivate ResourceLoader rb = new ResourceLoader(\"messages\");\n-\tprivate SakaiFacade sakaiFacade;\n+\n+\t@Getter @Setter private SakaiFacade sakaiFacade;\n \n \tpublic String getLocale() {\n \t\treturn (String) this.rb.getLocale().toString();\n \t}\n-\n-\tpublic SakaiFacade getSakaiFacade() {\n-\t\treturn sakaiFacade;\n-\t}\n-\n-\tpublic void setSakaiFacade(SakaiFacade sakaiFacade) {\n-\t\tthis.sakaiFacade = sakaiFacade;\n-\t}\n \t\n \t/**\n \t * Get the date format from the locale\n \t * @return\n \t */\n \tpublic String getDateFormat() {\n-\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, (new ResourceLoader()).getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = new ResourceLoader().getLocale();\n+\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\treturn ((SimpleDateFormat)df).toPattern();\n+\t\t} catch (ClassCastException cce) {\n+\t\t\tlog.warn(\"Failed to cast DateFormat into SimpleDateFormat for locale {}\", locale.toString());\n+\t\t\treturn new SimpleDateFormat().toPattern();\n+\t\t}\n \t}\n \n \t/**\n-\t * Get the date format from the locale with short timezone at end\n+\t * Get the date format from the locale\n \t * @return String representing a SimpleDateFormat for use with JSF convertDateTime\n \t */\n \tpublic String getFullDateTimeFormat() {\n-\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, this.rb.getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = this.rb.getLocale();\n+\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\tSimpleDateFormat sdf = (SimpleDateFormat) df;\n+\t\t\tsdf.applyLocalizedPattern(\"MMMM d, yyyy h:mm a\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1Mzg0NQ=="}, "originalCommit": {"oid": "338a04fef82489784cee170fef5ba6215e3375e5"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MjY4Mw==", "bodyText": "I thought you'd be able to merge formats, like, just merge am pm into MEDIUM", "url": "https://github.com/sakaiproject/sakai/pull/7875#discussion_r377782683", "createdAt": "2020-02-11T17:23:36Z", "author": {"login": "adrianfish"}, "path": "signup/tool/src/java/org/sakaiproject/signup/tool/jsf/UserLocale.java", "diffHunk": "@@ -34,39 +39,49 @@\n  * @author Peter Liu\n  */\n \n+@Slf4j\n public class UserLocale {\n \n \tprivate ResourceLoader rb = new ResourceLoader(\"messages\");\n-\tprivate SakaiFacade sakaiFacade;\n+\n+\t@Getter @Setter private SakaiFacade sakaiFacade;\n \n \tpublic String getLocale() {\n \t\treturn (String) this.rb.getLocale().toString();\n \t}\n-\n-\tpublic SakaiFacade getSakaiFacade() {\n-\t\treturn sakaiFacade;\n-\t}\n-\n-\tpublic void setSakaiFacade(SakaiFacade sakaiFacade) {\n-\t\tthis.sakaiFacade = sakaiFacade;\n-\t}\n \t\n \t/**\n \t * Get the date format from the locale\n \t * @return\n \t */\n \tpublic String getDateFormat() {\n-\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, (new ResourceLoader()).getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = new ResourceLoader().getLocale();\n+\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\treturn ((SimpleDateFormat)df).toPattern();\n+\t\t} catch (ClassCastException cce) {\n+\t\t\tlog.warn(\"Failed to cast DateFormat into SimpleDateFormat for locale {}\", locale.toString());\n+\t\t\treturn new SimpleDateFormat().toPattern();\n+\t\t}\n \t}\n \n \t/**\n-\t * Get the date format from the locale with short timezone at end\n+\t * Get the date format from the locale\n \t * @return String representing a SimpleDateFormat for use with JSF convertDateTime\n \t */\n \tpublic String getFullDateTimeFormat() {\n-\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, this.rb.getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = this.rb.getLocale();\n+\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\tSimpleDateFormat sdf = (SimpleDateFormat) df;\n+\t\t\tsdf.applyLocalizedPattern(\"MMMM d, yyyy h:mm a\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1Mzg0NQ=="}, "originalCommit": {"oid": "338a04fef82489784cee170fef5ba6215e3375e5"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4NDEwNw==", "bodyText": "Sweden doesn't want am/pm. They want 24 hr time", "url": "https://github.com/sakaiproject/sakai/pull/7875#discussion_r377784107", "createdAt": "2020-02-11T17:25:58Z", "author": {"login": "ottenhoff"}, "path": "signup/tool/src/java/org/sakaiproject/signup/tool/jsf/UserLocale.java", "diffHunk": "@@ -34,39 +39,49 @@\n  * @author Peter Liu\n  */\n \n+@Slf4j\n public class UserLocale {\n \n \tprivate ResourceLoader rb = new ResourceLoader(\"messages\");\n-\tprivate SakaiFacade sakaiFacade;\n+\n+\t@Getter @Setter private SakaiFacade sakaiFacade;\n \n \tpublic String getLocale() {\n \t\treturn (String) this.rb.getLocale().toString();\n \t}\n-\n-\tpublic SakaiFacade getSakaiFacade() {\n-\t\treturn sakaiFacade;\n-\t}\n-\n-\tpublic void setSakaiFacade(SakaiFacade sakaiFacade) {\n-\t\tthis.sakaiFacade = sakaiFacade;\n-\t}\n \t\n \t/**\n \t * Get the date format from the locale\n \t * @return\n \t */\n \tpublic String getDateFormat() {\n-\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, (new ResourceLoader()).getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = new ResourceLoader().getLocale();\n+\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\treturn ((SimpleDateFormat)df).toPattern();\n+\t\t} catch (ClassCastException cce) {\n+\t\t\tlog.warn(\"Failed to cast DateFormat into SimpleDateFormat for locale {}\", locale.toString());\n+\t\t\treturn new SimpleDateFormat().toPattern();\n+\t\t}\n \t}\n \n \t/**\n-\t * Get the date format from the locale with short timezone at end\n+\t * Get the date format from the locale\n \t * @return String representing a SimpleDateFormat for use with JSF convertDateTime\n \t */\n \tpublic String getFullDateTimeFormat() {\n-\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, this.rb.getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = this.rb.getLocale();\n+\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\tSimpleDateFormat sdf = (SimpleDateFormat) df;\n+\t\t\tsdf.applyLocalizedPattern(\"MMMM d, yyyy h:mm a\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1Mzg0NQ=="}, "originalCommit": {"oid": "338a04fef82489784cee170fef5ba6215e3375e5"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE2MDYzNg==", "bodyText": "SHORT was actually the one to go for, for the time component. I've tested in Swedish, and PST, and this PR fixes that bunch of Signup timezone tickets.", "url": "https://github.com/sakaiproject/sakai/pull/7875#discussion_r378160636", "createdAt": "2020-02-12T10:23:51Z", "author": {"login": "adrianfish"}, "path": "signup/tool/src/java/org/sakaiproject/signup/tool/jsf/UserLocale.java", "diffHunk": "@@ -34,39 +39,49 @@\n  * @author Peter Liu\n  */\n \n+@Slf4j\n public class UserLocale {\n \n \tprivate ResourceLoader rb = new ResourceLoader(\"messages\");\n-\tprivate SakaiFacade sakaiFacade;\n+\n+\t@Getter @Setter private SakaiFacade sakaiFacade;\n \n \tpublic String getLocale() {\n \t\treturn (String) this.rb.getLocale().toString();\n \t}\n-\n-\tpublic SakaiFacade getSakaiFacade() {\n-\t\treturn sakaiFacade;\n-\t}\n-\n-\tpublic void setSakaiFacade(SakaiFacade sakaiFacade) {\n-\t\tthis.sakaiFacade = sakaiFacade;\n-\t}\n \t\n \t/**\n \t * Get the date format from the locale\n \t * @return\n \t */\n \tpublic String getDateFormat() {\n-\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, (new ResourceLoader()).getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = new ResourceLoader().getLocale();\n+\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\treturn ((SimpleDateFormat)df).toPattern();\n+\t\t} catch (ClassCastException cce) {\n+\t\t\tlog.warn(\"Failed to cast DateFormat into SimpleDateFormat for locale {}\", locale.toString());\n+\t\t\treturn new SimpleDateFormat().toPattern();\n+\t\t}\n \t}\n \n \t/**\n-\t * Get the date format from the locale with short timezone at end\n+\t * Get the date format from the locale\n \t * @return String representing a SimpleDateFormat for use with JSF convertDateTime\n \t */\n \tpublic String getFullDateTimeFormat() {\n-\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, this.rb.getLocale());\n-\t\treturn ((SimpleDateFormat)df).toPattern();\n+\n+\t\tLocale locale = this.rb.getLocale();\n+\t\tDateFormat df = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.SHORT, locale);\n+\t\ttry {\n+\t\t\tSimpleDateFormat sdf = (SimpleDateFormat) df;\n+\t\t\tsdf.applyLocalizedPattern(\"MMMM d, yyyy h:mm a\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1Mzg0NQ=="}, "originalCommit": {"oid": "338a04fef82489784cee170fef5ba6215e3375e5"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2434, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}