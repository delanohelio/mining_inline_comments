{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MjU5NzU3", "number": 8555, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjo1OToyNFrOEintrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjo1OToyNFrOEintrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzM3NzA5OnYy", "diffSide": "RIGHT", "path": "assignment/tool/src/java/org/sakaiproject/assignment/entityproviders/AssignmentEntityProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjo1OToyNFrOHQmqQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNzo1MDozMVrOHQoPkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3MjY3Mg==", "bodyText": "make this a batch call up above instead;\nuserDirectoryService.getUsers( Set or List) and that will return only valid users\nthis will make one call to institutional LDAP instead of XX individual calls", "url": "https://github.com/sakaiproject/sakai/pull/8555#discussion_r487172672", "createdAt": "2020-09-11T16:59:24Z", "author": {"login": "ottenhoff"}, "path": "assignment/tool/src/java/org/sakaiproject/assignment/entityproviders/AssignmentEntityProvider.java", "diffHunk": "@@ -566,12 +566,12 @@ public ActionReturn getGrades(Map<String, Object> params) {\n         }));\n \n         Map<String, GraderUser> students = new HashMap<>();\n-        try {\n-            for (String studentId : site.getUsersIsAllowed(SECURE_ADD_ASSIGNMENT_SUBMISSION)) {\n+        for (String studentId : site.getUsersIsAllowed(SECURE_ADD_ASSIGNMENT_SUBMISSION)) {\n+            try {\n                 students.put(studentId, new GraderUser(userDirectoryService.getUser(studentId)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4911b6df5ff3d65a0818cacc5c8f7c9867f5926"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3NDU1NA==", "bodyText": "Cool, will do.", "url": "https://github.com/sakaiproject/sakai/pull/8555#discussion_r487174554", "createdAt": "2020-09-11T17:02:57Z", "author": {"login": "adrianfish"}, "path": "assignment/tool/src/java/org/sakaiproject/assignment/entityproviders/AssignmentEntityProvider.java", "diffHunk": "@@ -566,12 +566,12 @@ public ActionReturn getGrades(Map<String, Object> params) {\n         }));\n \n         Map<String, GraderUser> students = new HashMap<>();\n-        try {\n-            for (String studentId : site.getUsersIsAllowed(SECURE_ADD_ASSIGNMENT_SUBMISSION)) {\n+        for (String studentId : site.getUsersIsAllowed(SECURE_ADD_ASSIGNMENT_SUBMISSION)) {\n+            try {\n                 students.put(studentId, new GraderUser(userDirectoryService.getUser(studentId)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3MjY3Mg=="}, "originalCommit": {"oid": "b4911b6df5ff3d65a0818cacc5c8f7c9867f5926"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE5ODYxMA==", "bodyText": "Done.", "url": "https://github.com/sakaiproject/sakai/pull/8555#discussion_r487198610", "createdAt": "2020-09-11T17:50:31Z", "author": {"login": "adrianfish"}, "path": "assignment/tool/src/java/org/sakaiproject/assignment/entityproviders/AssignmentEntityProvider.java", "diffHunk": "@@ -566,12 +566,12 @@ public ActionReturn getGrades(Map<String, Object> params) {\n         }));\n \n         Map<String, GraderUser> students = new HashMap<>();\n-        try {\n-            for (String studentId : site.getUsersIsAllowed(SECURE_ADD_ASSIGNMENT_SUBMISSION)) {\n+        for (String studentId : site.getUsersIsAllowed(SECURE_ADD_ASSIGNMENT_SUBMISSION)) {\n+            try {\n                 students.put(studentId, new GraderUser(userDirectoryService.getUser(studentId)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3MjY3Mg=="}, "originalCommit": {"oid": "b4911b6df5ff3d65a0818cacc5c8f7c9867f5926"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2630, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}