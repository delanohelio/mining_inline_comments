{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNTA3Mzk1", "number": 8249, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMzoyODo0MlrOD_4Scg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMzoyOTo0M1rOD_4TJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzA5MTA2OnYy", "diffSide": "RIGHT", "path": "basiclti/basiclti-common/src/java/org/sakaiproject/basiclti/util/SakaiBLTIUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMzoyODo0MlrOGazn5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNDozMzozNFrOGblTLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2MTk1Ng==", "bodyText": "just delete this code?", "url": "https://github.com/sakaiproject/sakai/pull/8249#discussion_r430761956", "createdAt": "2020-05-26T23:28:42Z", "author": {"login": "ottenhoff"}, "path": "basiclti/basiclti-common/src/java/org/sakaiproject/basiclti/util/SakaiBLTIUtil.java", "diffHunk": "@@ -1092,16 +1133,20 @@ public static DeepLinkResponse getDeepLinkFromToken(Map<String, Object> tool, St\n \t\t\tif (lti_errorlog != null) {\n \t\t\t\tlog.warn(lti_errorlog);\n \t\t\t}\n-\n+/*\n+\t\t\t// TODO: Remove this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f43db92e7cba43745144a929a1981216fccdefb6"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NTg1NA==", "bodyText": "Yup - It was my intent to delete", "url": "https://github.com/sakaiproject/sakai/pull/8249#discussion_r431575854", "createdAt": "2020-05-28T04:33:34Z", "author": {"login": "csev"}, "path": "basiclti/basiclti-common/src/java/org/sakaiproject/basiclti/util/SakaiBLTIUtil.java", "diffHunk": "@@ -1092,16 +1133,20 @@ public static DeepLinkResponse getDeepLinkFromToken(Map<String, Object> tool, St\n \t\t\tif (lti_errorlog != null) {\n \t\t\t\tlog.warn(lti_errorlog);\n \t\t\t}\n-\n+/*\n+\t\t\t// TODO: Remove this", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2MTk1Ng=="}, "originalCommit": {"oid": "f43db92e7cba43745144a929a1981216fccdefb6"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzA5MTQ4OnYy", "diffSide": "RIGHT", "path": "basiclti/basiclti-common/src/java/org/sakaiproject/basiclti/util/SakaiBLTIUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMzoyODo1N1rOGazoMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNDozNTo0NFrOGblU9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2MjAzMg==", "bodyText": "indentation looks odd here", "url": "https://github.com/sakaiproject/sakai/pull/8249#discussion_r430762032", "createdAt": "2020-05-26T23:28:57Z", "author": {"login": "ottenhoff"}, "path": "basiclti/basiclti-common/src/java/org/sakaiproject/basiclti/util/SakaiBLTIUtil.java", "diffHunk": "@@ -1092,16 +1133,20 @@ public static DeepLinkResponse getDeepLinkFromToken(Map<String, Object> tool, St\n \t\t\tif (lti_errorlog != null) {\n \t\t\t\tlog.warn(lti_errorlog);\n \t\t\t}\n-\n+/*\n+\t\t\t// TODO: Remove this\n \t\t\tString publicKeyStr = (String) tool.get(LTIService.LTI13_TOOL_PUBLIC);\n \t\t\tif (publicKeyStr == null) {\n \t\t\t\tthrow new RuntimeException(\"Could not find tool public key\");\n \t\t\t}\n \n-\t\t\tKey publicKey = LTI13Util.string2PublicKey(publicKeyStr);\n+\t\t\tKey publicKey = string2PublicKey(publicKeyStr);\n \t\t\tif (publicKey == null) {\n \t\t\t\tthrow new RuntimeException(\"Could not deserialize tool public key\");\n \t\t\t}\n+*/\n+\t\t\t// May throw a RunTimeException on our behalf :)\n+\t\t    Key publicKey = SakaiBLTIUtil.getPublicKey(tool, id_token);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f43db92e7cba43745144a929a1981216fccdefb6"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NjMxMA==", "bodyText": "Yup", "url": "https://github.com/sakaiproject/sakai/pull/8249#discussion_r431576310", "createdAt": "2020-05-28T04:35:44Z", "author": {"login": "csev"}, "path": "basiclti/basiclti-common/src/java/org/sakaiproject/basiclti/util/SakaiBLTIUtil.java", "diffHunk": "@@ -1092,16 +1133,20 @@ public static DeepLinkResponse getDeepLinkFromToken(Map<String, Object> tool, St\n \t\t\tif (lti_errorlog != null) {\n \t\t\t\tlog.warn(lti_errorlog);\n \t\t\t}\n-\n+/*\n+\t\t\t// TODO: Remove this\n \t\t\tString publicKeyStr = (String) tool.get(LTIService.LTI13_TOOL_PUBLIC);\n \t\t\tif (publicKeyStr == null) {\n \t\t\t\tthrow new RuntimeException(\"Could not find tool public key\");\n \t\t\t}\n \n-\t\t\tKey publicKey = LTI13Util.string2PublicKey(publicKeyStr);\n+\t\t\tKey publicKey = string2PublicKey(publicKeyStr);\n \t\t\tif (publicKey == null) {\n \t\t\t\tthrow new RuntimeException(\"Could not deserialize tool public key\");\n \t\t\t}\n+*/\n+\t\t\t// May throw a RunTimeException on our behalf :)\n+\t\t    Key publicKey = SakaiBLTIUtil.getPublicKey(tool, id_token);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2MjAzMg=="}, "originalCommit": {"oid": "f43db92e7cba43745144a929a1981216fccdefb6"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzA5Mjg3OnYy", "diffSide": "RIGHT", "path": "basiclti/tsugi-util/src/java/org/tsugi/lti13/LTI13KeySetUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMzoyOTo0M1rOGazpFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMzoyOTo0M1rOGazpFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2MjI2Mg==", "bodyText": "tabs/spaces", "url": "https://github.com/sakaiproject/sakai/pull/8249#discussion_r430762262", "createdAt": "2020-05-26T23:29:43Z", "author": {"login": "ottenhoff"}, "path": "basiclti/tsugi-util/src/java/org/tsugi/lti13/LTI13KeySetUtil.java", "diffHunk": "@@ -75,4 +77,29 @@ public static String getKeySetJSON(RSAPublicKey key)\n \t\treturn getKeySetJSON(keys);\n \t}\n \n+\tpublic static RSAPublicKey getKeyFromKeySet(String kid, String url) \n+\t\tthrows java.text.ParseException, com.nimbusds.jose.JOSEException, java.net.MalformedURLException, java.io.IOException\n+\t{\n+\t\tcom.nimbusds.jose.jwk.JWKSet localKeys = com.nimbusds.jose.jwk.JWKSet.load(new java.net.URL(url));\n+\n+        com.nimbusds.jose.jwk.RSAKey nimbusPublic = (com.nimbusds.jose.jwk.RSAKey) localKeys.getKeyByKeyId(kid);\n+\n+        RSAPublicKey publicKey = nimbusPublic.toRSAPublicKey();\n+        java.security.interfaces.RSAKey rsaPublicKey = (java.security.interfaces.RSAKey) publicKey;\n+\n+\t\treturn publicKey;\n+\t}\n+\n+\tpublic static RSAPublicKey getKeyFromKeySetString(String kid, String json) \n+\t\tthrows java.text.ParseException, com.nimbusds.jose.JOSEException\n+\t{\n+\t\tcom.nimbusds.jose.jwk.JWKSet localKeys = com.nimbusds.jose.jwk.JWKSet.parse(json);\n+\n+        com.nimbusds.jose.jwk.RSAKey nimbusPublic = (com.nimbusds.jose.jwk.RSAKey) localKeys.getKeyByKeyId(kid);\n+\n+        RSAPublicKey publicKey = nimbusPublic.toRSAPublicKey();\n+        java.security.interfaces.RSAKey rsaPublicKey = (java.security.interfaces.RSAKey) publicKey;\n+\n+\t\treturn publicKey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f43db92e7cba43745144a929a1981216fccdefb6"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2191, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}