{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTk2OTIx", "number": 8206, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTozOToxM1rOD6AYkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTo0MToxOFrOD6Aa4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTUwMjkxOnYy", "diffSide": "RIGHT", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTozOToxNFrOGRma-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTowODo1NFrOGbdN4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODQ3NQ==", "bodyText": "can you choose a better variable name here? what is the purpose of the variable?", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r421108475", "createdAt": "2020-05-06T21:39:14Z", "author": {"login": "ottenhoff"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MzQyNQ==", "bodyText": "changed to fakitemgrading", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r431443425", "createdAt": "2020-05-27T21:08:54Z", "author": {"login": "rmengod"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODQ3NQ=="}, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTUwNDM1OnYy", "diffSide": "RIGHT", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTozOTo0MlrOGRmb3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTowOToxMVrOGbdOfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODcwMQ==", "bodyText": "why the brackets around this? can you also space it out like the other code?", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r421108701", "createdAt": "2020-05-06T21:39:42Z", "author": {"login": "ottenhoff"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MzU4MQ==", "bodyText": "sorry I forgot to delete", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r431443581", "createdAt": "2020-05-27T21:09:11Z", "author": {"login": "rmengod"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODcwMQ=="}, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTUwNjAxOnYy", "diffSide": "RIGHT", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTo0MDoyMlrOGRmc4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTowOToyOVrOGbdPCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODk2Mg==", "bodyText": "can you make sure the tabs/spaces line up ?", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r421108962", "createdAt": "2020-05-06T21:40:22Z", "author": {"login": "ottenhoff"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t \n+\t\t\t\t     } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MzcyMw==", "bodyText": "reviewed", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r431443723", "createdAt": "2020-05-27T21:09:29Z", "author": {"login": "rmengod"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t \n+\t\t\t\t     } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODk2Mg=="}, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTUwNzgzOnYy", "diffSide": "RIGHT", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTo0MDo1OVrOGRmd9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTowOTo0MVrOGbdPdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwOTIzNg==", "bodyText": "can you make this a better debug message? What does s mean?\nAlso, please use debug substitution:\nlog.debug(\"xxxxx yyyyyy zzzz: {}\", s)", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r421109236", "createdAt": "2020-05-06T21:40:59Z", "author": {"login": "ottenhoff"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t \n+\t\t\t\t     } else {\n+\t\t\t\t\t\t log.debug(\"s = \" + s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MzgyOQ==", "bodyText": "changed", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r431443829", "createdAt": "2020-05-27T21:09:41Z", "author": {"login": "rmengod"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t \n+\t\t\t\t     } else {\n+\t\t\t\t\t\t log.debug(\"s = \" + s);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwOTIzNg=="}, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTUwODgwOnYy", "diffSide": "RIGHT", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTo0MToxOFrOGRmehQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo0ODoyMlrOGisPEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwOTM4MQ==", "bodyText": "If StringUtils is available here, it's preferable", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r421109381", "createdAt": "2020-05-06T21:41:18Z", "author": {"login": "ottenhoff"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t \n+\t\t\t\t     } else {\n+\t\t\t\t\t\t log.debug(\"s = \" + s);\n+\t\t\t\t\t\t // Change to allow student submissions in rich-text [SAK-17021]\n+\t\t\t\t\t\t itemgrading.setAnswerText(s);\n+\t\t\t\t\t\t adds.add(itemgrading);\n+\t\t\t\t     }\t\n+\t\t\t\t}\n+\t\t\t\telse if (s != null && !s.equals(\"\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NDAwNQ==", "bodyText": "changed and use in 2 placed in the modified code", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r431444005", "createdAt": "2020-05-27T21:09:59Z", "author": {"login": "rmengod"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t \n+\t\t\t\t     } else {\n+\t\t\t\t\t\t log.debug(\"s = \" + s);\n+\t\t\t\t\t\t // Change to allow student submissions in rich-text [SAK-17021]\n+\t\t\t\t\t\t itemgrading.setAnswerText(s);\n+\t\t\t\t\t\t adds.add(itemgrading);\n+\t\t\t\t     }\t\n+\t\t\t\t}\n+\t\t\t\telse if (s != null && !s.equals(\"\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwOTM4MQ=="}, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAyOTUyMg==", "bodyText": "thanks", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r439029522", "createdAt": "2020-06-11T19:48:22Z", "author": {"login": "ottenhoff"}, "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t \n+\t\t\t\t     } else {\n+\t\t\t\t\t\t log.debug(\"s = \" + s);\n+\t\t\t\t\t\t // Change to allow student submissions in rich-text [SAK-17021]\n+\t\t\t\t\t\t itemgrading.setAnswerText(s);\n+\t\t\t\t\t\t adds.add(itemgrading);\n+\t\t\t\t     }\t\n+\t\t\t\t}\n+\t\t\t\telse if (s != null && !s.equals(\"\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwOTM4MQ=="}, "originalCommit": {"oid": "55d2ee433325cb268d3db6d920e267800003aca3"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2273, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}