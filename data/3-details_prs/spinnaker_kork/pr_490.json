{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NzMyMjE4", "number": 490, "title": "feat(auth): expand AuthenticatedRequest API", "bodyText": "Quality of life change that adds nice getters and setters in AuthenticatedRequest. With this change, the MDC updates and lookups are encapsulated in AuthenticatedRequest and don't leak out in AuthenticatedRequestFilter or any other caller.\nAlso factor out AuthenticatedRequest::clear() to reduce some duplication.", "createdAt": "2020-01-27T22:17:53Z", "url": "https://github.com/spinnaker/kork/pull/490", "merged": true, "mergeCommit": {"oid": "4a2f9d79fdafe0bb9a769f52110611e7f171b509"}, "closed": true, "closedAt": "2020-01-27T22:54:59Z", "author": {"login": "dreynaud"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-kOqhAH2gAyMzY3NzMyMjE4OjA0ZTE4NGRkZTVlZmZiNWE1ZWFkNWU5ZDhmMjlhODdkYmYxNjExNTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-ktYVgH2gAyMzY3NzMyMjE4OjFiZDliZTkzOTU1OTM0MTY2NjhjYmI4NzdhN2FjNjA3MWQ2YjM4NWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "04e184dde5effb5a5ead5e9d8f29a87dbf161157", "author": {"user": {"login": "dreynaud", "name": "Daniel Reynaud"}}, "url": "https://github.com/spinnaker/kork/commit/04e184dde5effb5a5ead5e9d8f29a87dbf161157", "committedDate": "2020-01-27T22:10:50Z", "message": "feat(auth): expand AuthenticatedRequest API\n\nQuality of life change that adds nice getters and setters in AuthenticatedRequest. With this change, the MDC updates and lookups are encapsulated in AuthenticatedRequest and don't leak out in AuthenticatedRequestFilter or any other caller.\n\nAlso factor out AuthenticatedRequest::clear() to reduce some duplication."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDIzMTI2", "url": "https://github.com/spinnaker/kork/pull/490#pullrequestreview-349023126", "createdAt": "2020-01-27T22:33:45Z", "commit": {"oid": "04e184dde5effb5a5ead5e9d8f29a87dbf161157"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjozMzo0NlrOFiT0zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjozMzo0NlrOFiT0zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUyMDcxOA==", "bodyText": "will .toString() result in same as .getHeader()", "url": "https://github.com/spinnaker/kork/pull/490#discussion_r371520718", "createdAt": "2020-01-27T22:33:46Z", "author": {"login": "marchello2000"}, "path": "kork-security/src/main/java/com/netflix/spinnaker/security/AuthenticatedRequest.java", "diffHunk": "@@ -217,23 +196,74 @@ private static void setOrRemoveMdc(String key, String value) {\n    */\n   public static Optional<String> getSpinnakerRequestId() {\n     return Optional.of(\n-        Optional.ofNullable(MDC.get(Header.REQUEST_ID.getHeader()))\n+        get(Header.REQUEST_ID)\n             .orElse(\n                 getSpinnakerExecutionId()\n                     .map(id -> format(\"%s:%s\", id, UUID.randomUUID().toString()))\n                     .orElse(UUID.randomUUID().toString())));\n   }\n \n   public static Optional<String> getSpinnakerUserOrigin() {\n-    return Optional.ofNullable(MDC.get(Header.USER_ORIGIN.getHeader()));\n+    return get(Header.USER_ORIGIN);\n   }\n \n   public static Optional<String> getSpinnakerExecutionId() {\n-    return Optional.ofNullable(MDC.get(Header.EXECUTION_ID.getHeader()));\n+    return get(Header.EXECUTION_ID);\n   }\n \n   public static Optional<String> getSpinnakerApplication() {\n-    return Optional.ofNullable(MDC.get(Header.APPLICATION.getHeader()));\n+    return get(Header.APPLICATION);\n+  }\n+\n+  public static Optional<String> get(Header header) {\n+    return Optional.ofNullable(MDC.get(header.getHeader()));\n+  }\n+\n+  public static void setAccounts(String accounts) {\n+    set(Header.ACCOUNTS, accounts);\n+  }\n+\n+  public static void setUser(String user) {\n+    set(Header.USER, user);\n+  }\n+\n+  public static void setUserOrigin(String value) {\n+    set(Header.USER_ORIGIN, value);\n+  }\n+\n+  public static void setRequestId(String value) {\n+    set(Header.REQUEST_ID, value);\n+  }\n+\n+  public static void setExecutionId(String value) {\n+    set(Header.EXECUTION_ID, value);\n+  }\n+\n+  public static void setApplication(String value) {\n+    set(Header.APPLICATION, value);\n+  }\n+\n+  public static void set(Header header, String value) {\n+    set(header.toString(), value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04e184dde5effb5a5ead5e9d8f29a87dbf161157"}, "originalPosition": 130}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDIzNDMz", "url": "https://github.com/spinnaker/kork/pull/490#pullrequestreview-349023433", "createdAt": "2020-01-27T22:34:21Z", "commit": {"oid": "04e184dde5effb5a5ead5e9d8f29a87dbf161157"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bd9be9395593416668cbb877a7ac6071d6b385d", "author": {"user": {"login": "dreynaud", "name": "Daniel Reynaud"}}, "url": "https://github.com/spinnaker/kork/commit/1bd9be9395593416668cbb877a7ac6071d6b385d", "committedDate": "2020-01-27T22:44:23Z", "message": "fix(auth): Header::getHeader is not Header::toString"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1632, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}