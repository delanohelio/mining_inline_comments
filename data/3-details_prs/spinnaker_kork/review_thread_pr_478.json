{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTQ5MDQ5", "number": 478, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxODo1OTozMVrODZTMLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODoyMjoxNlrODa-f9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODU1NDA3OnYy", "diffSide": "RIGHT", "path": "kork-secrets-aws/src/main/java/com/netflix/spinnaker/kork/secrets/engines/S3Configuration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxODo1OTozMVrOFfnEmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMDo0MTowNVrOFgNdag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY5MDMyOA==", "bodyText": "Logger isn't used anywhere in this class - remove.", "url": "https://github.com/spinnaker/kork/pull/478#discussion_r368690328", "createdAt": "2020-01-20T18:59:31Z", "author": {"login": "robzienert"}, "path": "kork-secrets-aws/src/main/java/com/netflix/spinnaker/kork/secrets/engines/S3Configuration.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Armory, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.secrets.engines;\n+\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+@Getter\n+@Component\n+@Configuration\n+@ConditionalOnProperty(\"secrets.s3.enabled\")\n+@Slf4j", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75ff4d41a95b2cfb60b0c76571a5c5a4a77dfff1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMxOTI3NA==", "bodyText": "removed", "url": "https://github.com/spinnaker/kork/pull/478#discussion_r369319274", "createdAt": "2020-01-22T00:41:05Z", "author": {"login": "jorgebee65"}, "path": "kork-secrets-aws/src/main/java/com/netflix/spinnaker/kork/secrets/engines/S3Configuration.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Armory, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.secrets.engines;\n+\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+@Getter\n+@Component\n+@Configuration\n+@ConditionalOnProperty(\"secrets.s3.enabled\")\n+@Slf4j", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY5MDMyOA=="}, "originalCommit": {"oid": "75ff4d41a95b2cfb60b0c76571a5c5a4a77dfff1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODU1NjYxOnYy", "diffSide": "RIGHT", "path": "kork-secrets-aws/src/main/java/com/netflix/spinnaker/kork/secrets/engines/S3Configuration.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxOTowMDo1MVrOFfnGKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDoxMzo0NVrOFizBNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY5MDczMA==", "bodyText": "This class is odd: It's acting like a @ConfigurationProperties, but it isn't one.\nWe prefer to avoid the use of @Value annotations in favor of @ConfigurationProperties classes that get injected where they need to go. Would recommend refactoring to fall in line with this pattern.", "url": "https://github.com/spinnaker/kork/pull/478#discussion_r368690730", "createdAt": "2020-01-20T19:00:51Z", "author": {"login": "robzienert"}, "path": "kork-secrets-aws/src/main/java/com/netflix/spinnaker/kork/secrets/engines/S3Configuration.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Armory, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.secrets.engines;\n+\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+@Getter\n+@Component\n+@Configuration\n+@ConditionalOnProperty(\"secrets.s3.enabled\")\n+@Slf4j\n+public class S3Configuration {\n+\n+  private String endpointUrl;\n+  private boolean pathStyleAccessEnabled;\n+\n+  @Autowired\n+  public S3Configuration(\n+      @Value(\"${secrets.s3.endpoint-url}\") String endpointUrl,\n+      @Value(\"${secrets.s3.path-style-access-enabled}\") boolean pathStyleAccessEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75ff4d41a95b2cfb60b0c76571a5c5a4a77dfff1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY5MTE5OA==", "bodyText": "I'm also worried (having not looked at the whole module) that you have a @ConditionalOnProperty annotation here, but then use it directly in S3SecretEngine's constructor, but have it typed as a required object. Depending on how the rest of the module is wired up, this could cause a runtime exception during startup.", "url": "https://github.com/spinnaker/kork/pull/478#discussion_r368691198", "createdAt": "2020-01-20T19:02:28Z", "author": {"login": "robzienert"}, "path": "kork-secrets-aws/src/main/java/com/netflix/spinnaker/kork/secrets/engines/S3Configuration.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Armory, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.secrets.engines;\n+\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+@Getter\n+@Component\n+@Configuration\n+@ConditionalOnProperty(\"secrets.s3.enabled\")\n+@Slf4j\n+public class S3Configuration {\n+\n+  private String endpointUrl;\n+  private boolean pathStyleAccessEnabled;\n+\n+  @Autowired\n+  public S3Configuration(\n+      @Value(\"${secrets.s3.endpoint-url}\") String endpointUrl,\n+      @Value(\"${secrets.s3.path-style-access-enabled}\") boolean pathStyleAccessEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY5MDczMA=="}, "originalCommit": {"oid": "75ff4d41a95b2cfb60b0c76571a5c5a4a77dfff1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMyMDA3NQ==", "bodyText": "S3Configuration changed according to the pattern.\nS3SecretEngine: change the initialization from the constructor to an Autowired (not required) attribute.", "url": "https://github.com/spinnaker/kork/pull/478#discussion_r369320075", "createdAt": "2020-01-22T00:44:06Z", "author": {"login": "jorgebee65"}, "path": "kork-secrets-aws/src/main/java/com/netflix/spinnaker/kork/secrets/engines/S3Configuration.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Armory, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.secrets.engines;\n+\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+@Getter\n+@Component\n+@Configuration\n+@ConditionalOnProperty(\"secrets.s3.enabled\")\n+@Slf4j\n+public class S3Configuration {\n+\n+  private String endpointUrl;\n+  private boolean pathStyleAccessEnabled;\n+\n+  @Autowired\n+  public S3Configuration(\n+      @Value(\"${secrets.s3.endpoint-url}\") String endpointUrl,\n+      @Value(\"${secrets.s3.path-style-access-enabled}\") boolean pathStyleAccessEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY5MDczMA=="}, "originalCommit": {"oid": "75ff4d41a95b2cfb60b0c76571a5c5a4a77dfff1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwNTI5MQ==", "bodyText": "Do not use property injection. If the property is not required, you can still use constructor injection, but you have to wrap the optional properties in Optional:\nclass Foo {\n  private final Optional<MyDep> myDep;\n\n  Foo(Optional<MyDep> myDep) {\n    this.myDep = myDep;\n  }\n}", "url": "https://github.com/spinnaker/kork/pull/478#discussion_r371405291", "createdAt": "2020-01-27T18:24:36Z", "author": {"login": "robzienert"}, "path": "kork-secrets-aws/src/main/java/com/netflix/spinnaker/kork/secrets/engines/S3Configuration.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Armory, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.secrets.engines;\n+\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+@Getter\n+@Component\n+@Configuration\n+@ConditionalOnProperty(\"secrets.s3.enabled\")\n+@Slf4j\n+public class S3Configuration {\n+\n+  private String endpointUrl;\n+  private boolean pathStyleAccessEnabled;\n+\n+  @Autowired\n+  public S3Configuration(\n+      @Value(\"${secrets.s3.endpoint-url}\") String endpointUrl,\n+      @Value(\"${secrets.s3.path-style-access-enabled}\") boolean pathStyleAccessEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY5MDczMA=="}, "originalCommit": {"oid": "75ff4d41a95b2cfb60b0c76571a5c5a4a77dfff1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAzMTc5Nw==", "bodyText": "changed following the instructions.", "url": "https://github.com/spinnaker/kork/pull/478#discussion_r372031797", "createdAt": "2020-01-28T20:13:45Z", "author": {"login": "jorgebee65"}, "path": "kork-secrets-aws/src/main/java/com/netflix/spinnaker/kork/secrets/engines/S3Configuration.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Armory, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.secrets.engines;\n+\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+@Getter\n+@Component\n+@Configuration\n+@ConditionalOnProperty(\"secrets.s3.enabled\")\n+@Slf4j\n+public class S3Configuration {\n+\n+  private String endpointUrl;\n+  private boolean pathStyleAccessEnabled;\n+\n+  @Autowired\n+  public S3Configuration(\n+      @Value(\"${secrets.s3.endpoint-url}\") String endpointUrl,\n+      @Value(\"${secrets.s3.path-style-access-enabled}\") boolean pathStyleAccessEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY5MDczMA=="}, "originalCommit": {"oid": "75ff4d41a95b2cfb60b0c76571a5c5a4a77dfff1"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjEzNTU5OnYy", "diffSide": "RIGHT", "path": "kork-secrets-aws/kork-secrets-aws.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODoyMjoxNlrOFiMtpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDoxNjoxNFrOFizFkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwNDE5Nw==", "bodyText": "Just do org.projectlombok:lombok so that kork-bom takes care of the lombok version.", "url": "https://github.com/spinnaker/kork/pull/478#discussion_r371404197", "createdAt": "2020-01-27T18:22:16Z", "author": {"login": "robzienert"}, "path": "kork-secrets-aws/kork-secrets-aws.gradle", "diffHunk": "@@ -6,4 +6,8 @@ dependencies {\n   api project(':kork-secrets')\n \n   implementation \"com.amazonaws:aws-java-sdk-s3\"\n+\n+  compileOnly 'org.projectlombok:lombok:+'\n+\n+  annotationProcessor 'org.projectlombok:lombok:+'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67255da32918ac61421910e22cdb0a4a5a60ce00"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAzMjkxMg==", "bodyText": "I just remove these lines and add: \"$rootDir/gradle/lombok.gradle\"", "url": "https://github.com/spinnaker/kork/pull/478#discussion_r372032912", "createdAt": "2020-01-28T20:16:14Z", "author": {"login": "jorgebee65"}, "path": "kork-secrets-aws/kork-secrets-aws.gradle", "diffHunk": "@@ -6,4 +6,8 @@ dependencies {\n   api project(':kork-secrets')\n \n   implementation \"com.amazonaws:aws-java-sdk-s3\"\n+\n+  compileOnly 'org.projectlombok:lombok:+'\n+\n+  annotationProcessor 'org.projectlombok:lombok:+'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwNDE5Nw=="}, "originalCommit": {"oid": "67255da32918ac61421910e22cdb0a4a5a60ce00"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3670, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}