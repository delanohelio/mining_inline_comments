{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDEwNjM4", "number": 525, "title": "feat(plugins): Adding Front50 FileDownloader", "bodyText": "Allows services to download plugins from Front50's proxy.", "createdAt": "2020-02-20T22:38:57Z", "url": "https://github.com/spinnaker/kork/pull/525", "merged": true, "mergeCommit": {"oid": "3ee938624233083df2c8adf4d0bdf9f07aa53a29"}, "closed": true, "closedAt": "2020-02-24T21:02:45Z", "author": {"login": "robzienert"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGTDwyAFqTM2MjI4NzQxMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHj9AiAH2gAyMzc4MDEwNjM4OjczZWY1NjIxNzQ2NGM1Nzg5ZmQ1MWI4NDdhMGNlNDk3MmUxNjViOTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMjg3NDEw", "url": "https://github.com/spinnaker/kork/pull/525#pullrequestreview-362287410", "createdAt": "2020-02-20T22:41:55Z", "commit": {"oid": "95c27252dbbfe5b8dcb71b51b10747b4c1acb24b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjo0MTo1NVrOFslt6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjo0MTo1NVrOFslt6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5OTYyNQ==", "bodyText": "This isn't really a good, long-term solution. I imagine some people will want to use Front50 for plugin info without necessarily downloading binaries from Front50 as well. This seemed like a bigger topic to bite off than what this PR is for. Do we add a CompositeFileDownloader class that lets FileDownloaders to inspect a URL and see if it's something they should be downloading? Seems like this might be the only path forward...?", "url": "https://github.com/spinnaker/kork/pull/525#discussion_r382299625", "createdAt": "2020-02-20T22:41:55Z", "author": {"login": "robzienert"}, "path": "kork-plugins/src/main/java/com/netflix/spinnaker/config/Front50PluginsConfiguration.java", "diffHunk": "@@ -58,28 +57,33 @@ public static UpdateRepository pluginFront50UpdateRepository(\n                         \"Unable to bind ok-http-client property to \"\n                             + OkHttpClientConfigurationProperties.class.getSimpleName()));\n \n-    PluginRepositoryProperties front50RepositoryProps =\n-        pluginRepositoriesConfig.get(PluginsConfigurationProperties.FRONT5O_REPOSITORY);\n-\n-    // We are a bit inconsistent with how we configure service URLs, so we proceed in this order:\n-    // 1) front.base-url\n-    // 2) service.front50.base-url\n-    // 3) spinnaker.extensibility.repositories.front50.url\n-    URL front50Url =\n-        Binder.get(environment)\n-            .bind(\"front50.base-url\", Bindable.of(URL.class))\n-            .orElseGet(\n-                () ->\n-                    Binder.get(environment)\n-                        .bind(\"services.front50.base-url\", Bindable.of(URL.class))\n-                        .orElseGet(front50RepositoryProps::getUrl));\n-\n     OkHttpClient okHttpClient =\n         new OkHttp3ClientConfiguration(okHttpClientProperties)\n             .create()\n             .retryOnConnectionFailure(okHttpClientProperties.isRetryOnConnectionFailure())\n             .build();\n \n+    return new PluginOkHttpClientProvider(okHttpClient);\n+  }\n+\n+  @Bean\n+  public static Front50FileDownloader front50FileDownloader(\n+      PluginOkHttpClientProvider pluginsOkHttpClientProvider) {\n+    return new Front50FileDownloader(pluginsOkHttpClientProvider.getOkHttpClient());\n+  }\n+\n+  @Bean\n+  public static UpdateRepository pluginFront50UpdateRepository(\n+      Environment environment,\n+      PluginOkHttpClientProvider pluginsOkHttpClientProvider,\n+      Map<String, PluginRepositoryProperties> pluginRepositoriesConfig,\n+      Front50FileDownloader front50FileDownloader) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c27252dbbfe5b8dcb71b51b10747b4c1acb24b"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMjk3NzA1", "url": "https://github.com/spinnaker/kork/pull/525#pullrequestreview-362297705", "createdAt": "2020-02-20T23:03:26Z", "commit": {"oid": "95c27252dbbfe5b8dcb71b51b10747b4c1acb24b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzowMzoyNlrOFsmOrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzowNjozN1rOFsmSsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwODAxNQ==", "bodyText": "With this we will loose the ability to download from github ? Correct.?", "url": "https://github.com/spinnaker/kork/pull/525#discussion_r382308015", "createdAt": "2020-02-20T23:03:26Z", "author": {"login": "srekapalli"}, "path": "kork-plugins/src/main/java/com/netflix/spinnaker/config/Front50PluginsConfiguration.java", "diffHunk": "@@ -58,28 +57,33 @@ public static UpdateRepository pluginFront50UpdateRepository(\n                         \"Unable to bind ok-http-client property to \"\n                             + OkHttpClientConfigurationProperties.class.getSimpleName()));\n \n-    PluginRepositoryProperties front50RepositoryProps =\n-        pluginRepositoriesConfig.get(PluginsConfigurationProperties.FRONT5O_REPOSITORY);\n-\n-    // We are a bit inconsistent with how we configure service URLs, so we proceed in this order:\n-    // 1) front.base-url\n-    // 2) service.front50.base-url\n-    // 3) spinnaker.extensibility.repositories.front50.url\n-    URL front50Url =\n-        Binder.get(environment)\n-            .bind(\"front50.base-url\", Bindable.of(URL.class))\n-            .orElseGet(\n-                () ->\n-                    Binder.get(environment)\n-                        .bind(\"services.front50.base-url\", Bindable.of(URL.class))\n-                        .orElseGet(front50RepositoryProps::getUrl));\n-\n     OkHttpClient okHttpClient =\n         new OkHttp3ClientConfiguration(okHttpClientProperties)\n             .create()\n             .retryOnConnectionFailure(okHttpClientProperties.isRetryOnConnectionFailure())\n             .build();\n \n+    return new PluginOkHttpClientProvider(okHttpClient);\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c27252dbbfe5b8dcb71b51b10747b4c1acb24b"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwODgxNQ==", "bodyText": "What if we assign a  type of Downloader to a Plugin. ?  So when we register a plugin.. assign the Downloader type to it. That way we can dynamically swtich and allow us to be flexible.", "url": "https://github.com/spinnaker/kork/pull/525#discussion_r382308815", "createdAt": "2020-02-20T23:05:56Z", "author": {"login": "srekapalli"}, "path": "kork-plugins/src/main/java/com/netflix/spinnaker/config/Front50PluginsConfiguration.java", "diffHunk": "@@ -58,28 +57,33 @@ public static UpdateRepository pluginFront50UpdateRepository(\n                         \"Unable to bind ok-http-client property to \"\n                             + OkHttpClientConfigurationProperties.class.getSimpleName()));\n \n-    PluginRepositoryProperties front50RepositoryProps =\n-        pluginRepositoriesConfig.get(PluginsConfigurationProperties.FRONT5O_REPOSITORY);\n-\n-    // We are a bit inconsistent with how we configure service URLs, so we proceed in this order:\n-    // 1) front.base-url\n-    // 2) service.front50.base-url\n-    // 3) spinnaker.extensibility.repositories.front50.url\n-    URL front50Url =\n-        Binder.get(environment)\n-            .bind(\"front50.base-url\", Bindable.of(URL.class))\n-            .orElseGet(\n-                () ->\n-                    Binder.get(environment)\n-                        .bind(\"services.front50.base-url\", Bindable.of(URL.class))\n-                        .orElseGet(front50RepositoryProps::getUrl));\n-\n     OkHttpClient okHttpClient =\n         new OkHttp3ClientConfiguration(okHttpClientProperties)\n             .create()\n             .retryOnConnectionFailure(okHttpClientProperties.isRetryOnConnectionFailure())\n             .build();\n \n+    return new PluginOkHttpClientProvider(okHttpClient);\n+  }\n+\n+  @Bean\n+  public static Front50FileDownloader front50FileDownloader(\n+      PluginOkHttpClientProvider pluginsOkHttpClientProvider) {\n+    return new Front50FileDownloader(pluginsOkHttpClientProvider.getOkHttpClient());\n+  }\n+\n+  @Bean\n+  public static UpdateRepository pluginFront50UpdateRepository(\n+      Environment environment,\n+      PluginOkHttpClientProvider pluginsOkHttpClientProvider,\n+      Map<String, PluginRepositoryProperties> pluginRepositoriesConfig,\n+      Front50FileDownloader front50FileDownloader) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5OTYyNQ=="}, "originalCommit": {"oid": "95c27252dbbfe5b8dcb71b51b10747b4c1acb24b"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwOTA0MA==", "bodyText": "You are correct. We don't need to address this issue immdtly.", "url": "https://github.com/spinnaker/kork/pull/525#discussion_r382309040", "createdAt": "2020-02-20T23:06:37Z", "author": {"login": "srekapalli"}, "path": "kork-plugins/src/main/java/com/netflix/spinnaker/config/Front50PluginsConfiguration.java", "diffHunk": "@@ -58,28 +57,33 @@ public static UpdateRepository pluginFront50UpdateRepository(\n                         \"Unable to bind ok-http-client property to \"\n                             + OkHttpClientConfigurationProperties.class.getSimpleName()));\n \n-    PluginRepositoryProperties front50RepositoryProps =\n-        pluginRepositoriesConfig.get(PluginsConfigurationProperties.FRONT5O_REPOSITORY);\n-\n-    // We are a bit inconsistent with how we configure service URLs, so we proceed in this order:\n-    // 1) front.base-url\n-    // 2) service.front50.base-url\n-    // 3) spinnaker.extensibility.repositories.front50.url\n-    URL front50Url =\n-        Binder.get(environment)\n-            .bind(\"front50.base-url\", Bindable.of(URL.class))\n-            .orElseGet(\n-                () ->\n-                    Binder.get(environment)\n-                        .bind(\"services.front50.base-url\", Bindable.of(URL.class))\n-                        .orElseGet(front50RepositoryProps::getUrl));\n-\n     OkHttpClient okHttpClient =\n         new OkHttp3ClientConfiguration(okHttpClientProperties)\n             .create()\n             .retryOnConnectionFailure(okHttpClientProperties.isRetryOnConnectionFailure())\n             .build();\n \n+    return new PluginOkHttpClientProvider(okHttpClient);\n+  }\n+\n+  @Bean\n+  public static Front50FileDownloader front50FileDownloader(\n+      PluginOkHttpClientProvider pluginsOkHttpClientProvider) {\n+    return new Front50FileDownloader(pluginsOkHttpClientProvider.getOkHttpClient());\n+  }\n+\n+  @Bean\n+  public static UpdateRepository pluginFront50UpdateRepository(\n+      Environment environment,\n+      PluginOkHttpClientProvider pluginsOkHttpClientProvider,\n+      Map<String, PluginRepositoryProperties> pluginRepositoriesConfig,\n+      Front50FileDownloader front50FileDownloader) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5OTYyNQ=="}, "originalCommit": {"oid": "95c27252dbbfe5b8dcb71b51b10747b4c1acb24b"}, "originalPosition": 71}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95c27252dbbfe5b8dcb71b51b10747b4c1acb24b", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/95c27252dbbfe5b8dcb71b51b10747b4c1acb24b", "committedDate": "2020-02-20T22:36:55Z", "message": "feat(plugins): Adding Front50 FileDownloader"}, "afterCommit": {"oid": "4c22e912d9b7dd3b0c5558d64a28c9661856c81b", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/4c22e912d9b7dd3b0c5558d64a28c9661856c81b", "committedDate": "2020-02-21T18:46:16Z", "message": "feat(plugins): Adding Front50 FileDownloader"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c22e912d9b7dd3b0c5558d64a28c9661856c81b", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/4c22e912d9b7dd3b0c5558d64a28c9661856c81b", "committedDate": "2020-02-21T18:46:16Z", "message": "feat(plugins): Adding Front50 FileDownloader"}, "afterCommit": {"oid": "2a7910c0ddcc885977754cc1a2597cff296a79a2", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/2a7910c0ddcc885977754cc1a2597cff296a79a2", "committedDate": "2020-02-21T18:53:53Z", "message": "feat(plugins): Adding Front50 FileDownloader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78843aebf30aeb44db759f7b9b5e9bb550c1c922", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/78843aebf30aeb44db759f7b9b5e9bb550c1c922", "committedDate": "2020-02-21T19:02:13Z", "message": "feat(plugins): Adding Front50 FileDownloader"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a7910c0ddcc885977754cc1a2597cff296a79a2", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/2a7910c0ddcc885977754cc1a2597cff296a79a2", "committedDate": "2020-02-21T18:53:53Z", "message": "feat(plugins): Adding Front50 FileDownloader"}, "afterCommit": {"oid": "78843aebf30aeb44db759f7b9b5e9bb550c1c922", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/78843aebf30aeb44db759f7b9b5e9bb550c1c922", "committedDate": "2020-02-21T19:02:13Z", "message": "feat(plugins): Adding Front50 FileDownloader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODgwMDg3", "url": "https://github.com/spinnaker/kork/pull/525#pullrequestreview-362880087", "createdAt": "2020-02-21T19:56:18Z", "commit": {"oid": "78843aebf30aeb44db759f7b9b5e9bb550c1c922"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo1NjoxOFrOFtC3rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo1NjoxOFrOFtC3rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3NzI2Mw==", "bodyText": "neat!!", "url": "https://github.com/spinnaker/kork/pull/525#discussion_r382777263", "createdAt": "2020-02-21T19:56:18Z", "author": {"login": "srekapalli"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/update/downloader/Front50FileDownloader.kt", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.netflix.spinnaker.kork.plugins.update.downloader\n+\n+import com.netflix.spinnaker.kork.web.exceptions.NotFoundException\n+import io.github.resilience4j.retry.Retry\n+import okhttp3.OkHttpClient\n+import okhttp3.Request\n+import java.net.URL\n+import java.nio.file.Files\n+import java.nio.file.Path\n+import java.nio.file.Paths\n+\n+/**\n+ * Downloads plugin binaries from Front50.\n+ */\n+class Front50FileDownloader(\n+  private val okHttpClient: OkHttpClient,\n+  private val front50BaseUrl: URL\n+) : SupportingFileDownloader {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78843aebf30aeb44db759f7b9b5e9bb550c1c922"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODk1MjEz", "url": "https://github.com/spinnaker/kork/pull/525#pullrequestreview-362895213", "createdAt": "2020-02-21T20:24:24Z", "commit": {"oid": "78843aebf30aeb44db759f7b9b5e9bb550c1c922"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDoyNDoyNFrOFtDlPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDoyNDoyNFrOFtDlPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4ODkyNw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/spinnaker/kork/pull/525#discussion_r382788927", "createdAt": "2020-02-21T20:24:24Z", "author": {"login": "jonsie"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/update/internal/Front50Service.kt", "diffHunk": "@@ -12,10 +12,9 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *\n  */\n \n-package com.netflix.spinnaker.kork.plugins.update.front50\n+package com.netflix.spinnaker.kork.plugins.update.internal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78843aebf30aeb44db759f7b9b5e9bb550c1c922"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODk2NTIw", "url": "https://github.com/spinnaker/kork/pull/525#pullrequestreview-362896520", "createdAt": "2020-02-21T20:26:51Z", "commit": {"oid": "78843aebf30aeb44db759f7b9b5e9bb550c1c922"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73ef56217464c5789fd51b847a0ce4972e165b95", "author": {"user": {"login": "mergify[bot]", "name": null}}, "url": "https://github.com/spinnaker/kork/commit/73ef56217464c5789fd51b847a0ce4972e165b95", "committedDate": "2020-02-24T20:56:52Z", "message": "Merge branch 'master' into front50-filedownloader"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1560, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}