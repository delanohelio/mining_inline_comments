{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNzE0NTI1", "number": 633, "title": "feat(plugins): Add Meter annotation, limit metering extension invocation to methods annotated with @Meter", "bodyText": "", "createdAt": "2020-05-04T02:53:12Z", "url": "https://github.com/spinnaker/kork/pull/633", "merged": true, "mergeCommit": {"oid": "5265d164a7362767ddeb68d74f7e754733c37432"}, "closed": true, "closedAt": "2020-05-04T17:50:49Z", "author": {"login": "jonsie"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd2eldABqjMyOTgxNTA4Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceDJxeABqjMzMDA5ODc2NTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fbab3de3e02189439441cc240383214ae4eea64", "author": {"user": {"login": "jonsie", "name": "Chris Smalley"}}, "url": "https://github.com/spinnaker/kork/commit/8fbab3de3e02189439441cc240383214ae4eea64", "committedDate": "2020-05-04T02:52:49Z", "message": "feat(plugins): Add Meter annotation, limit metering extension invocation to methods annotated with @Meter"}, "afterCommit": {"oid": "43c0a71ad6e2e293b9009c0b5c083443aa953136", "author": {"user": {"login": "jonsie", "name": "Chris Smalley"}}, "url": "https://github.com/spinnaker/kork/commit/43c0a71ad6e2e293b9009c0b5c083443aa953136", "committedDate": "2020-05-04T02:57:50Z", "message": "feat(plugins): Add Meter annotation, limit metering extension invocation to methods annotated with @Meter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MTM0NDA2", "url": "https://github.com/spinnaker/kork/pull/633#pullrequestreview-405134406", "createdAt": "2020-05-04T16:10:15Z", "commit": {"oid": "43c0a71ad6e2e293b9009c0b5c083443aa953136"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjoxMDoxNVrOGQHakQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjoxMDoxNVrOGQHakQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU1MTg4OQ==", "bodyText": "I think you implicitly get invocation counts already from a timer metric (it keeps track of total time recorded and the count)", "url": "https://github.com/spinnaker/kork/pull/633#discussion_r419551889", "createdAt": "2020-05-04T16:10:15Z", "author": {"login": "cfieber"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/proxy/aspects/MetricInvocationAspect.kt", "diffHunk": "@@ -123,36 +125,41 @@ class MetricInvocationAspect(\n       return null\n     } else {\n       return this.get(method) { m ->\n-        val metricIds = MetricIds(\n-          timingId = registry.createId(toMetricId(m, descriptor.pluginId, TIMING), mapOf(\n-            Pair(\"pluginVersion\", descriptor.version),\n-            Pair(\"pluginExtension\", target.javaClass.simpleName.toString())\n-          )),\n-          invocationId = registry.createId(toMetricId(m, descriptor.pluginId, INVOCATIONS), mapOf(\n-            Pair(\"pluginVersion\", descriptor.version),\n-            Pair(\"pluginExtension\", target.javaClass.simpleName.toString())\n-          ))\n-        )\n-\n-        for (mutableEntry in this.asMap()) {\n-          if (mutableEntry.value.invocationId.name() == metricIds.invocationId.name()) {\n-            throw MetricNameCollisionException(target, mutableEntry.key, m)\n+        m.declaredAnnotations\n+          .find { it is Meter }\n+          .let { meterAnnotation ->\n+            (meterAnnotation as Meter)\n+\n+            val metricIds = MetricIds(\n+              timingId = registry.createId(toMetricId(m, descriptor.pluginId, meterAnnotation.id, TIMING), mapOf(\n+                Pair(\"pluginVersion\", descriptor.version),\n+                Pair(\"pluginExtension\", target.javaClass.simpleName.toString())\n+              )),\n+              invocationId = registry.createId(toMetricId(m, descriptor.pluginId, meterAnnotation.id, INVOCATIONS), mapOf(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43c0a71ad6e2e293b9009c0b5c083443aa953136"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MTM1NDE1", "url": "https://github.com/spinnaker/kork/pull/633#pullrequestreview-405135415", "createdAt": "2020-05-04T16:11:27Z", "commit": {"oid": "43c0a71ad6e2e293b9009c0b5c083443aa953136"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MTg0OTM0", "url": "https://github.com/spinnaker/kork/pull/633#pullrequestreview-405184934", "createdAt": "2020-05-04T17:14:10Z", "commit": {"oid": "43c0a71ad6e2e293b9009c0b5c083443aa953136"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "473670f86fb84b6267d671274444b397ebb71b1b", "author": {"user": {"login": "jonsie", "name": "Chris Smalley"}}, "url": "https://github.com/spinnaker/kork/commit/473670f86fb84b6267d671274444b397ebb71b1b", "committedDate": "2020-05-04T17:43:57Z", "message": "feat(plugins): Add Meter annotation, limit metering extension invocation to methods annotated with @Meter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43c0a71ad6e2e293b9009c0b5c083443aa953136", "author": {"user": {"login": "jonsie", "name": "Chris Smalley"}}, "url": "https://github.com/spinnaker/kork/commit/43c0a71ad6e2e293b9009c0b5c083443aa953136", "committedDate": "2020-05-04T02:57:50Z", "message": "feat(plugins): Add Meter annotation, limit metering extension invocation to methods annotated with @Meter"}, "afterCommit": {"oid": "473670f86fb84b6267d671274444b397ebb71b1b", "author": {"user": {"login": "jonsie", "name": "Chris Smalley"}}, "url": "https://github.com/spinnaker/kork/commit/473670f86fb84b6267d671274444b397ebb71b1b", "committedDate": "2020-05-04T17:43:57Z", "message": "feat(plugins): Add Meter annotation, limit metering extension invocation to methods annotated with @Meter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1509, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}