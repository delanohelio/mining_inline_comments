{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDQ1NDMw", "number": 710, "title": " refactor(eureka): Move Eureka out of kork-core into kork-eureka", "bodyText": "Moves Eureka code and dependencies from kork-core into kork-eureka; importing into kork-runtime.\nDecouples Eureka from RemoteStatusChangedEvent; opening the door for other service discovery techs to be used with Spinnaker.\nRefactors existing kork-eureka code to use new discovery abstraction.\n\nThis PR will require modifications to downstream services.", "createdAt": "2020-07-08T19:39:54Z", "url": "https://github.com/spinnaker/kork/pull/710", "merged": true, "mergeCommit": {"oid": "dfbb4b395547ead4fc006caa793ec5f7e8471119"}, "closed": true, "closedAt": "2020-07-09T18:14:51Z", "author": {"login": "robzienert"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczAVteAFqTQ0NTA5OTM3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABczTDrZABqjM1MzA4NzIzMTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MDk5Mzc3", "url": "https://github.com/spinnaker/kork/pull/710#pullrequestreview-445099377", "createdAt": "2020-07-08T20:19:55Z", "commit": {"oid": "a9c0f1d09244d75ecc3ba0266bcbc9374d987958"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDoxOTo1NVrOGu30cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDoxOTo1NVrOGu30cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwMjIyNQ==", "bodyText": "I think the only reason that we have archaius config in here is to bridge spring configuration to the legacy eureka client - I think this should move along into the kork-eureka module", "url": "https://github.com/spinnaker/kork/pull/710#discussion_r451802225", "createdAt": "2020-07-08T20:19:55Z", "author": {"login": "cfieber"}, "path": "kork-core/kork-core.gradle", "diffHunk": "@@ -11,15 +11,13 @@ dependencies {\n   api \"org.springframework.boot:spring-boot-autoconfigure\"\n   api \"org.springframework.boot:spring-boot-starter-aop\"\n   api \"org.springframework.boot:spring-boot-starter-actuator\"\n-  api \"com.netflix.eureka:eureka-client\"\n   api \"com.netflix.spectator:spectator-api\"\n   api \"com.google.code.findbugs:jsr305\"\n   api \"io.github.resilience4j:resilience4j-annotations\"\n   api \"io.github.resilience4j:resilience4j-retry\"\n   api \"io.github.resilience4j:resilience4j-spring-boot2\"\n   api \"javax.inject:javax.inject:1\"\n \n-  implementation \"com.netflix.netflix-commons:netflix-eventbus\"\n   implementation \"com.netflix.archaius:archaius-core\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9c0f1d09244d75ecc3ba0266bcbc9374d987958"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTA2MjI0", "url": "https://github.com/spinnaker/kork/pull/710#pullrequestreview-445106224", "createdAt": "2020-07-08T20:30:31Z", "commit": {"oid": "a9c0f1d09244d75ecc3ba0266bcbc9374d987958"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDozMDozMVrOGu4KBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDozNDo1NFrOGu4SDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwNzc0OA==", "bodyText": "I think there should be a spring.factories in here referencing this config, and I also think that PlatformComponents in kork-core needs to remove this from its Import but I don't see that change in here", "url": "https://github.com/spinnaker/kork/pull/710#discussion_r451807748", "createdAt": "2020-07-08T20:30:31Z", "author": {"login": "cfieber"}, "path": "kork-eureka/src/main/java/com/netflix/spinnaker/kork/eureka/EurekaComponents.java", "diffHunk": "@@ -16,6 +16,8 @@\n \n package com.netflix.spinnaker.kork.eureka;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9c0f1d09244d75ecc3ba0266bcbc9374d987958"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwOTIzMQ==", "bodyText": "I think it might be worth adding another autoconfiguration class here conditional on eureka.enabled=false that publishes a Status UP event (I know something similar exists in orca and others that try to control polling activity based on in-service status for the case where there is no discovery service):\nhttps://github.com/spinnaker/orca/blob/master/orca-eureka/src/main/java/com/netflix/spinnaker/orca/eureka/NoDiscoveryApplicationStatusPublisher.java", "url": "https://github.com/spinnaker/kork/pull/710#discussion_r451809231", "createdAt": "2020-07-08T20:33:40Z", "author": {"login": "cfieber"}, "path": "kork-eureka/src/main/java/com/netflix/spinnaker/kork/eureka/EurekaComponents.java", "diffHunk": "@@ -16,6 +16,8 @@\n \n package com.netflix.spinnaker.kork.eureka;\n \n+import static com.netflix.spinnaker.kork.eureka.InstanceStatusBridge.fromEureka;\n+\n import com.netflix.appinfo.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9c0f1d09244d75ecc3ba0266bcbc9374d987958"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwOTgwNA==", "bodyText": "alternatively there could be an autoconfiguration in kork-core that supplies that ConditionalOnMissingBean, and this configuration could be flagged to AutoConfigureBefore that configuration so the conditional stuff actually works", "url": "https://github.com/spinnaker/kork/pull/710#discussion_r451809804", "createdAt": "2020-07-08T20:34:54Z", "author": {"login": "cfieber"}, "path": "kork-eureka/src/main/java/com/netflix/spinnaker/kork/eureka/EurekaComponents.java", "diffHunk": "@@ -16,6 +16,8 @@\n \n package com.netflix.spinnaker.kork.eureka;\n \n+import static com.netflix.spinnaker.kork.eureka.InstanceStatusBridge.fromEureka;\n+\n import com.netflix.appinfo.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwOTIzMQ=="}, "originalCommit": {"oid": "a9c0f1d09244d75ecc3ba0266bcbc9374d987958"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9c0f1d09244d75ecc3ba0266bcbc9374d987958", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/a9c0f1d09244d75ecc3ba0266bcbc9374d987958", "committedDate": "2020-07-08T19:34:12Z", "message": "refactor(core): Introduce new service discovery abstraction; refactor kork-eureka to implement"}, "afterCommit": {"oid": "d284942b3f683e3f17a0a4d5b6a499da9709cc4c", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/d284942b3f683e3f17a0a4d5b6a499da9709cc4c", "committedDate": "2020-07-09T17:06:21Z", "message": "refactor(eureka): Move Eureka out of kork-core into kork-eureka"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d284942b3f683e3f17a0a4d5b6a499da9709cc4c", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/d284942b3f683e3f17a0a4d5b6a499da9709cc4c", "committedDate": "2020-07-09T17:06:21Z", "message": "refactor(eureka): Move Eureka out of kork-core into kork-eureka"}, "afterCommit": {"oid": "0130f6ca189f4ba556484f972d2bf04a6a90cb40", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/0130f6ca189f4ba556484f972d2bf04a6a90cb40", "committedDate": "2020-07-09T17:06:37Z", "message": "refactor(eureka): Move Eureka out of kork-core into kork-eureka"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0130f6ca189f4ba556484f972d2bf04a6a90cb40", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/0130f6ca189f4ba556484f972d2bf04a6a90cb40", "committedDate": "2020-07-09T17:06:37Z", "message": "refactor(eureka): Move Eureka out of kork-core into kork-eureka"}, "afterCommit": {"oid": "0d77525f5933a0e402110cf1b5f42625bf0a7a72", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/0d77525f5933a0e402110cf1b5f42625bf0a7a72", "committedDate": "2020-07-09T17:09:32Z", "message": "refactor(eureka): Move Eureka out of kork-core into kork-eureka"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d77525f5933a0e402110cf1b5f42625bf0a7a72", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/0d77525f5933a0e402110cf1b5f42625bf0a7a72", "committedDate": "2020-07-09T17:09:32Z", "message": "refactor(eureka): Move Eureka out of kork-core into kork-eureka"}, "afterCommit": {"oid": "077b42ea9e8b2c18e047847ecf09b0a67d4c93cd", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/077b42ea9e8b2c18e047847ecf09b0a67d4c93cd", "committedDate": "2020-07-09T17:10:10Z", "message": "refactor(eureka): Move Eureka out of kork-core into kork-eureka"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODQzODA4", "url": "https://github.com/spinnaker/kork/pull/710#pullrequestreview-445843808", "createdAt": "2020-07-09T17:56:02Z", "commit": {"oid": "077b42ea9e8b2c18e047847ecf09b0a67d4c93cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1NjowMlrOGvb2cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1NjowMlrOGvb2cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MjU2MA==", "bodyText": "nice addition, thanks!", "url": "https://github.com/spinnaker/kork/pull/710#discussion_r452392560", "createdAt": "2020-07-09T17:56:02Z", "author": {"login": "cfieber"}, "path": "kork-eureka/src/test/kotlin/com/netflix/spinnaker/kork/EurekaSystemTest.kt", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package com.netflix.spinnaker.kork\n+\n+import com.netflix.spinnaker.kork.discovery.DiscoveryStatusPublisher\n+import com.netflix.spinnaker.kork.discovery.NoDiscoveryStatusPublisher\n+import com.netflix.spinnaker.kork.eureka.EurekaStatusSubscriber\n+import dev.minutest.junit.JUnit5Minutests\n+import dev.minutest.rootContext\n+import io.micrometer.core.instrument.MeterRegistry\n+import io.micrometer.core.instrument.logging.LoggingMeterRegistry\n+import org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration\n+import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration\n+import org.springframework.boot.autoconfigure.AutoConfigurations\n+import org.springframework.boot.test.context.assertj.AssertableApplicationContext\n+import org.springframework.boot.test.context.runner.ApplicationContextRunner\n+import org.springframework.context.annotation.Bean\n+import org.springframework.context.annotation.Configuration\n+import org.springframework.context.annotation.Import\n+import strikt.api.expect\n+import strikt.assertions.isA\n+import strikt.assertions.isEqualTo\n+\n+class EurekaSystemTest : JUnit5Minutests {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077b42ea9e8b2c18e047847ecf09b0a67d4c93cd"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODQ0NTk5", "url": "https://github.com/spinnaker/kork/pull/710#pullrequestreview-445844599", "createdAt": "2020-07-09T17:57:08Z", "commit": {"oid": "077b42ea9e8b2c18e047847ecf09b0a67d4c93cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1NzowOVrOGvb4ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1NzowOVrOGvb4ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MzEyMw==", "bodyText": "does this still need to be transitive=false? (I had only flipped it that way to try and figure out what dependencies might have been confusing the groovy compiler)", "url": "https://github.com/spinnaker/kork/pull/710#discussion_r452393123", "createdAt": "2020-07-09T17:57:09Z", "author": {"login": "cfieber"}, "path": "kork-security/kork-security.gradle", "diffHunk": "@@ -5,14 +5,17 @@ apply from: \"$rootDir/gradle/lombok.gradle\"\n dependencies {\n   api(platform(project(\":spinnaker-dependencies\")))\n \n-  api project(\":kork-core\")\n+  implementation(project(\":kork-core\")) { transitive = false }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077b42ea9e8b2c18e047847ecf09b0a67d4c93cd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODQ0ODg0", "url": "https://github.com/spinnaker/kork/pull/710#pullrequestreview-445844884", "createdAt": "2020-07-09T17:57:31Z", "commit": {"oid": "077b42ea9e8b2c18e047847ecf09b0a67d4c93cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6365b6016a6f1c63d097688a3070c9196dd4d6fc", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/6365b6016a6f1c63d097688a3070c9196dd4d6fc", "committedDate": "2020-07-09T18:08:20Z", "message": "refactor(eureka): Move Eureka out of kork-core into kork-eureka"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "077b42ea9e8b2c18e047847ecf09b0a67d4c93cd", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/077b42ea9e8b2c18e047847ecf09b0a67d4c93cd", "committedDate": "2020-07-09T17:10:10Z", "message": "refactor(eureka): Move Eureka out of kork-core into kork-eureka"}, "afterCommit": {"oid": "6365b6016a6f1c63d097688a3070c9196dd4d6fc", "author": {"user": {"login": "robzienert", "name": "Rob Zienert"}}, "url": "https://github.com/spinnaker/kork/commit/6365b6016a6f1c63d097688a3070c9196dd4d6fc", "committedDate": "2020-07-09T18:08:20Z", "message": "refactor(eureka): Move Eureka out of kork-core into kork-eureka"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1437, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}