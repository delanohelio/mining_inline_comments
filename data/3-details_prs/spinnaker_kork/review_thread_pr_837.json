{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNzAwOTIx", "number": 837, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODoyOTo1NlrOFHTHrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMDo0MzoyMVrOFN8CHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTk3NjE1OnYy", "diffSide": "RIGHT", "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODoyOTo1NlrOIIuBPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODoyOTo1NlrOIIuBPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxMzUwMw==", "bodyText": "Better to change NotFoundException to always set retryable to false?", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r546013503", "createdAt": "2020-12-18T18:29:56Z", "author": {"login": "dbyron0"}, "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "diffHunk": "@@ -52,9 +52,14 @@ public Throwable handleError(RetrofitError e) {\n     switch (e.getKind()) {\n       case HTTP:\n         if (e.getResponse().getStatus() == HttpStatus.NOT_FOUND.value()) {\n-          return new NotFoundException(e);\n+          return new NotFoundException(e).setRetryable(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52daf62fc82f1435268908546e6f6e94c7a065a5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMTU5MzkwOnYy", "diffSide": "RIGHT", "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMDo0MzoyMVrOISbGYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwNzo0MzoxM1rOITTz0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4OTI4Mg==", "bodyText": "How much testing has been done with this outside of kork?  At a glance Series.CLIENT_ERROR is any 4xx, including 429 which could be retryable.\nThis does seem like a long drawn out fix for something that could have just been done in rosco? Sorry the holiday period made the cycle time on this quite long.\nResponse response =\n        retrySupport.retry(\n            () ->\n                AuthenticatedRequest.allowAnonymous(\n                    () -> clouddriverService.fetchArtifact(artifact)),\n            5,\n            1000,\n            true);\n\nWhy can't we just wrap clouddriverService.fetchArtifact(artifact)) in a try/catch that checks the status code?", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r556189282", "createdAt": "2021-01-13T00:43:21Z", "author": {"login": "ajordens"}, "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "diffHunk": "@@ -52,9 +52,14 @@ public Throwable handleError(RetrofitError e) {\n     switch (e.getKind()) {\n       case HTTP:\n         if (e.getResponse().getStatus() == HttpStatus.NOT_FOUND.value()) {\n-          return new NotFoundException(e);\n+          return new NotFoundException(e).setRetryable(false);\n         }\n-        return new SpinnakerHttpException(e);\n+        SpinnakerHttpException retval = new SpinnakerHttpException(e);\n+        if (HttpStatus.Series.resolve(e.getResponse().getStatus())\n+            == HttpStatus.Series.CLIENT_ERROR) {\n+          retval.setRetryable(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cebcebe306123b74719bf08c52834ad570f987b6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgxNzU0Nw==", "bodyText": "I haven't tested this outside of kork, and you're right about not handling 429 properly.\nYou're also right that adding the try/catch block to rosco is the most direct/simplest way forward.  It does seem like the kind of thing to handle centrally though.  I haven't come across other places that would benefit from it yet, but I bet they exist.\nWhat do you think of keeping the change here, but limiting it to 400/bad request?", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r556817547", "createdAt": "2021-01-13T20:46:24Z", "author": {"login": "dbyron0"}, "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "diffHunk": "@@ -52,9 +52,14 @@ public Throwable handleError(RetrofitError e) {\n     switch (e.getKind()) {\n       case HTTP:\n         if (e.getResponse().getStatus() == HttpStatus.NOT_FOUND.value()) {\n-          return new NotFoundException(e);\n+          return new NotFoundException(e).setRetryable(false);\n         }\n-        return new SpinnakerHttpException(e);\n+        SpinnakerHttpException retval = new SpinnakerHttpException(e);\n+        if (HttpStatus.Series.resolve(e.getResponse().getStatus())\n+            == HttpStatus.Series.CLIENT_ERROR) {\n+          retval.setRetryable(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4OTI4Mg=="}, "originalCommit": {"oid": "cebcebe306123b74719bf08c52834ad570f987b6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgyNjc5MA==", "bodyText": "Like this: 11a5ff9", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r556826790", "createdAt": "2021-01-13T21:03:48Z", "author": {"login": "dbyron0"}, "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "diffHunk": "@@ -52,9 +52,14 @@ public Throwable handleError(RetrofitError e) {\n     switch (e.getKind()) {\n       case HTTP:\n         if (e.getResponse().getStatus() == HttpStatus.NOT_FOUND.value()) {\n-          return new NotFoundException(e);\n+          return new NotFoundException(e).setRetryable(false);\n         }\n-        return new SpinnakerHttpException(e);\n+        SpinnakerHttpException retval = new SpinnakerHttpException(e);\n+        if (HttpStatus.Series.resolve(e.getResponse().getStatus())\n+            == HttpStatus.Series.CLIENT_ERROR) {\n+          retval.setRetryable(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4OTI4Mg=="}, "originalCommit": {"oid": "cebcebe306123b74719bf08c52834ad570f987b6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzExODQxNg==", "bodyText": "That looks more reasonable to me. I'll set a reminder to take one last look before merging tomorrow.", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r557118416", "createdAt": "2021-01-14T07:43:13Z", "author": {"login": "ajordens"}, "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "diffHunk": "@@ -52,9 +52,14 @@ public Throwable handleError(RetrofitError e) {\n     switch (e.getKind()) {\n       case HTTP:\n         if (e.getResponse().getStatus() == HttpStatus.NOT_FOUND.value()) {\n-          return new NotFoundException(e);\n+          return new NotFoundException(e).setRetryable(false);\n         }\n-        return new SpinnakerHttpException(e);\n+        SpinnakerHttpException retval = new SpinnakerHttpException(e);\n+        if (HttpStatus.Series.resolve(e.getResponse().getStatus())\n+            == HttpStatus.Series.CLIENT_ERROR) {\n+          retval.setRetryable(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4OTI4Mg=="}, "originalCommit": {"oid": "cebcebe306123b74719bf08c52834ad570f987b6"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3437, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}