{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNzAwOTIx", "number": 837, "title": "fix(retrofit): Explicitly mark BAD_REQUEST and NOT_FOUND errors as not retryable", "bodyText": "cc: @ajordens .. an attempt to address spinnaker/spinnaker#6237", "createdAt": "2020-12-18T18:17:10Z", "url": "https://github.com/spinnaker/kork/pull/837", "merged": true, "mergeCommit": {"oid": "96d584683d9e11c7e6ee7c67e7a9b6e049eabf17"}, "closed": true, "closedAt": "2021-01-15T00:41:50Z", "author": {"login": "dbyron0"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdncXBPABqjQxMzA5NTYxMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdv2LYjgH2gAyNTQyNzAwOTIxOjExYTVmZjkzNjM4MjRkNDI3ZmY5OWVmYzlhYjY4ZjBkNzY4MTVmODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21a5e84ace3bafb9e685c0ac04411a7d141bbde5", "author": {"user": null}, "url": "https://github.com/spinnaker/kork/commit/21a5e84ace3bafb9e685c0ac04411a7d141bbde5", "committedDate": "2020-12-18T18:03:04Z", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change."}, "afterCommit": {"oid": "52daf62fc82f1435268908546e6f6e94c7a065a5", "author": {"user": null}, "url": "https://github.com/spinnaker/kork/commit/52daf62fc82f1435268908546e6f6e94c7a065a5", "committedDate": "2020-12-18T18:21:43Z", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NzE4NTgx", "url": "https://github.com/spinnaker/kork/pull/837#pullrequestreview-555718581", "createdAt": "2020-12-18T18:29:56Z", "commit": {"oid": "52daf62fc82f1435268908546e6f6e94c7a065a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODoyOTo1NlrOIIuBPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODoyOTo1NlrOIIuBPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxMzUwMw==", "bodyText": "Better to change NotFoundException to always set retryable to false?", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r546013503", "createdAt": "2020-12-18T18:29:56Z", "author": {"login": "dbyron0"}, "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "diffHunk": "@@ -52,9 +52,14 @@ public Throwable handleError(RetrofitError e) {\n     switch (e.getKind()) {\n       case HTTP:\n         if (e.getResponse().getStatus() == HttpStatus.NOT_FOUND.value()) {\n-          return new NotFoundException(e);\n+          return new NotFoundException(e).setRetryable(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52daf62fc82f1435268908546e6f6e94c7a065a5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MzEwMTAz", "url": "https://github.com/spinnaker/kork/pull/837#pullrequestreview-557310103", "createdAt": "2020-12-22T19:17:38Z", "commit": {"oid": "52daf62fc82f1435268908546e6f6e94c7a065a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52daf62fc82f1435268908546e6f6e94c7a065a5", "author": {"user": null}, "url": "https://github.com/spinnaker/kork/commit/52daf62fc82f1435268908546e6f6e94c7a065a5", "committedDate": "2020-12-18T18:21:43Z", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change."}, "afterCommit": {"oid": "a321905108ecdbe1a7d2ba51b43c866c293f0dcd", "author": {"user": null}, "url": "https://github.com/spinnaker/kork/commit/a321905108ecdbe1a7d2ba51b43c866c293f0dcd", "committedDate": "2021-01-05T18:13:35Z", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f336f565143259e7789743ec3508d4ed1382cf9b", "author": {"user": null}, "url": "https://github.com/spinnaker/kork/commit/f336f565143259e7789743ec3508d4ed1382cf9b", "committedDate": "2021-01-12T18:15:54Z", "message": "test(retrofit): demonstrate current behavior of SpinnakerRetrofitErrorHandler regarding retryable-or-not SpinnakerExceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cebcebe306123b74719bf08c52834ad570f987b6", "author": {"user": null}, "url": "https://github.com/spinnaker/kork/commit/cebcebe306123b74719bf08c52834ad570f987b6", "committedDate": "2021-01-12T18:15:54Z", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a321905108ecdbe1a7d2ba51b43c866c293f0dcd", "author": {"user": null}, "url": "https://github.com/spinnaker/kork/commit/a321905108ecdbe1a7d2ba51b43c866c293f0dcd", "committedDate": "2021-01-05T18:13:35Z", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change."}, "afterCommit": {"oid": "cebcebe306123b74719bf08c52834ad570f987b6", "author": {"user": null}, "url": "https://github.com/spinnaker/kork/commit/cebcebe306123b74719bf08c52834ad570f987b6", "committedDate": "2021-01-12T18:15:54Z", "message": "feat(retrofit): change SpinnakerRetrofitErrorHandler to throw non-retryable exceptions on http client errors\n\non the assumption that subsequent attempts would continue to fail in the same way.\n\nRetrySupport in kork-exceptions looks at the retryable attribute of SpinnakerException so\nit no longer retries on client errors with this change."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2ODEzMDQ2", "url": "https://github.com/spinnaker/kork/pull/837#pullrequestreview-566813046", "createdAt": "2021-01-13T00:43:20Z", "commit": {"oid": "cebcebe306123b74719bf08c52834ad570f987b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMDo0MzoyMVrOISbGYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMDo0MzoyMVrOISbGYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4OTI4Mg==", "bodyText": "How much testing has been done with this outside of kork?  At a glance Series.CLIENT_ERROR is any 4xx, including 429 which could be retryable.\nThis does seem like a long drawn out fix for something that could have just been done in rosco? Sorry the holiday period made the cycle time on this quite long.\nResponse response =\n        retrySupport.retry(\n            () ->\n                AuthenticatedRequest.allowAnonymous(\n                    () -> clouddriverService.fetchArtifact(artifact)),\n            5,\n            1000,\n            true);\n\nWhy can't we just wrap clouddriverService.fetchArtifact(artifact)) in a try/catch that checks the status code?", "url": "https://github.com/spinnaker/kork/pull/837#discussion_r556189282", "createdAt": "2021-01-13T00:43:21Z", "author": {"login": "ajordens"}, "path": "kork-retrofit/src/main/java/com/netflix/spinnaker/kork/retrofit/exceptions/SpinnakerRetrofitErrorHandler.java", "diffHunk": "@@ -52,9 +52,14 @@ public Throwable handleError(RetrofitError e) {\n     switch (e.getKind()) {\n       case HTTP:\n         if (e.getResponse().getStatus() == HttpStatus.NOT_FOUND.value()) {\n-          return new NotFoundException(e);\n+          return new NotFoundException(e).setRetryable(false);\n         }\n-        return new SpinnakerHttpException(e);\n+        SpinnakerHttpException retval = new SpinnakerHttpException(e);\n+        if (HttpStatus.Series.resolve(e.getResponse().getStatus())\n+            == HttpStatus.Series.CLIENT_ERROR) {\n+          retval.setRetryable(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cebcebe306123b74719bf08c52834ad570f987b6"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11a5ff9363824d427ff99efc9ab68f0d76815f80", "author": {"user": null}, "url": "https://github.com/spinnaker/kork/commit/11a5ff9363824d427ff99efc9ab68f0d76815f80", "committedDate": "2021-01-13T20:58:59Z", "message": "only setRetryable(false) on BAD_REQUEST"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1433, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}