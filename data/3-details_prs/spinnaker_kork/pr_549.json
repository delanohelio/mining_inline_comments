{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MjMwMjI3", "number": 549, "title": "feat(plugins): Util/sdk to load YML resources from plugin source zips", "bodyText": "This change allows us to load job configurations defined in yml resources from with in the plugin jar/zip.\nCan be used for other usecases where we declare any resource in Yml structures easily.", "createdAt": "2020-03-10T16:14:53Z", "url": "https://github.com/spinnaker/kork/pull/549", "merged": true, "mergeCommit": {"oid": "81e45a8e8a9d46224d9eccacc144a4c036671cb6"}, "closed": true, "closedAt": "2020-03-10T17:58:56Z", "author": {"login": "srekapalli"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMMPfKgH2gAyMzg2MjMwMjI3OjNmNTk0OGUyNGRjNmI2NjA4ZTRlMTZkMDY2ZWJlNDNiNzliMjQ0Yzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMWNMpAH2gAyMzg2MjMwMjI3Ojg1YjYxMjJmMGJjMjM2MWM3OGY3MjdhNmYzNDQ0N2M1OTgzMzI5N2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3f5948e24dc6b6608e4e16d066ebe43b79b244c7", "author": {"user": {"login": "srekapalli", "name": "Sairam Rekapalli"}}, "url": "https://github.com/spinnaker/kork/commit/3f5948e24dc6b6608e4e16d066ebe43b79b244c7", "committedDate": "2020-03-10T06:08:57Z", "message": "feat(plugins): Util/sdk to load YML resources from plugin source zips"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTUwOTgy", "url": "https://github.com/spinnaker/kork/pull/549#pullrequestreview-372150982", "createdAt": "2020-03-10T17:05:51Z", "commit": {"oid": "3f5948e24dc6b6608e4e16d066ebe43b79b244c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzowNTo1MlrOF0YfBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzowNTo1MlrOF0YfBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3MTQyOQ==", "bodyText": "I think mapper should be a member field of YamlResourceLoaderService so we're not creating an object mapper on each loadResource call.", "url": "https://github.com/spinnaker/kork/pull/549#discussion_r390471429", "createdAt": "2020-03-10T17:05:52Z", "author": {"login": "jonsie"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/sdk/yaml/YamlResourceLoaderService.kt", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.plugins.sdk.yaml\n+\n+import com.fasterxml.jackson.databind.DeserializationFeature\n+import com.fasterxml.jackson.databind.ObjectMapper\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory\n+import com.netflix.spinnaker.kork.plugins.api.yaml.YamlResourceLoader\n+\n+class YamlResourceLoaderService(private val extensionClass: Class<*>) : YamlResourceLoader {\n+\n+  override fun <T : Any?> loadResource(resourceName: String, toValueType: Class<T>): T? {\n+\n+    val mapper = ObjectMapper(YAMLFactory()).disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5948e24dc6b6608e4e16d066ebe43b79b244c7"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTUxNjI3", "url": "https://github.com/spinnaker/kork/pull/549#pullrequestreview-372151627", "createdAt": "2020-03-10T17:06:37Z", "commit": {"oid": "3f5948e24dc6b6608e4e16d066ebe43b79b244c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzowNjozN1rOF0YhOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzowNjozN1rOF0YhOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3MTk5Mw==", "bodyText": "Include the extension class name in this error.", "url": "https://github.com/spinnaker/kork/pull/549#discussion_r390471993", "createdAt": "2020-03-10T17:06:37Z", "author": {"login": "jonsie"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/sdk/yaml/YamlResourceLoaderService.kt", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.plugins.sdk.yaml\n+\n+import com.fasterxml.jackson.databind.DeserializationFeature\n+import com.fasterxml.jackson.databind.ObjectMapper\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory\n+import com.netflix.spinnaker.kork.plugins.api.yaml.YamlResourceLoader\n+\n+class YamlResourceLoaderService(private val extensionClass: Class<*>) : YamlResourceLoader {\n+\n+  override fun <T : Any?> loadResource(resourceName: String, toValueType: Class<T>): T? {\n+\n+    val mapper = ObjectMapper(YAMLFactory()).disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)\n+\n+    this.extensionClass.classLoader.getResourceAsStream(resourceName).use { inputStream ->\n+      if (inputStream != null) {\n+        return mapper.readValue(inputStream, toValueType)\n+      }\n+      throw IllegalArgumentException(\"Cannot load specified resource: $resourceName\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5948e24dc6b6608e4e16d066ebe43b79b244c7"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTY1MDcz", "url": "https://github.com/spinnaker/kork/pull/549#pullrequestreview-372165073", "createdAt": "2020-03-10T17:22:43Z", "commit": {"oid": "3f5948e24dc6b6608e4e16d066ebe43b79b244c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoyMjo0M1rOF0ZLmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoyMjo0M1rOF0ZLmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4Mjg0Mg==", "bodyText": "Nitpick - I would probably name this something more like JacksonYamlResourceLoader since it's really more about the implementation (using Jackson for deserialization) and not really a \"service\" if that makes sense.", "url": "https://github.com/spinnaker/kork/pull/549#discussion_r390482842", "createdAt": "2020-03-10T17:22:43Z", "author": {"login": "jonsie"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/sdk/yaml/YamlResourceLoaderService.kt", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.plugins.sdk.yaml\n+\n+import com.fasterxml.jackson.databind.DeserializationFeature\n+import com.fasterxml.jackson.databind.ObjectMapper\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory\n+import com.netflix.spinnaker.kork.plugins.api.yaml.YamlResourceLoader\n+\n+class YamlResourceLoaderService(private val extensionClass: Class<*>) : YamlResourceLoader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5948e24dc6b6608e4e16d066ebe43b79b244c7"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTY1MzMw", "url": "https://github.com/spinnaker/kork/pull/549#pullrequestreview-372165330", "createdAt": "2020-03-10T17:23:00Z", "commit": {"oid": "3f5948e24dc6b6608e4e16d066ebe43b79b244c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85b6122f0bc2361c78f727a6f34447c59833297e", "author": {"user": {"login": "srekapalli", "name": "Sairam Rekapalli"}}, "url": "https://github.com/spinnaker/kork/commit/85b6122f0bc2361c78f727a6f34447c59833297e", "committedDate": "2020-03-10T17:45:30Z", "message": "feat(plugins): Rename and log extension name when fails to load a resource"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1579, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}