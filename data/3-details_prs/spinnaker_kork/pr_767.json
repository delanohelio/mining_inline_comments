{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2ODI1OTMy", "number": 767, "title": "fix(client): add provider for insecure okhttp client", "bodyText": "Adding a new provider impl to create insecure client.\nThis will allow us to move to ok3 clients in all the places where we create ok2 clients that call external endpoints.", "createdAt": "2020-09-01T05:42:55Z", "url": "https://github.com/spinnaker/kork/pull/767", "merged": true, "mergeCommit": {"oid": "cd060392abc530f43b71ed8e90930f3d31477b2a"}, "closed": true, "closedAt": "2020-09-04T20:16:00Z", "author": {"login": "srekapalli"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEgnsXgH2gAyNDc2ODI1OTMyOmYyMjE0MGYyZDVkYTYwODEwYmE1Mjk3ZTk3YzRlNGQyOWFjYjJmMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFq-8KgH2gAyNDc2ODI1OTMyOjIzMjVhMGExN2I4MzRlZTcxMDc5MDFkMDk1NzQwMzVkNmIxZGRjZTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f22140f2d5da60810ba5297e97c4e4d29acb2f19", "author": {"user": {"login": "srekapalli", "name": "Sairam Rekapalli"}}, "url": "https://github.com/spinnaker/kork/commit/f22140f2d5da60810ba5297e97c4e4d29acb2f19", "committedDate": "2020-09-01T05:33:15Z", "message": "fix(client): add provider for insecure okhttp client"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDYzNTE1", "url": "https://github.com/spinnaker/kork/pull/767#pullrequestreview-480063515", "createdAt": "2020-09-01T19:45:53Z", "commit": {"oid": "f22140f2d5da60810ba5297e97c4e4d29acb2f19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo0NTo1M1rOHLFtQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo0NTo1M1rOHLFtQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4OTg4OQ==", "bodyText": "Let's set the defaults isSecure and config on the class fields instead of in the constructors.", "url": "https://github.com/spinnaker/kork/pull/767#discussion_r481389889", "createdAt": "2020-09-01T19:45:53Z", "author": {"login": "jonsie"}, "path": "kork-web/src/main/java/com/netflix/spinnaker/config/DefaultServiceEndpoint.java", "diffHunk": "@@ -31,12 +31,24 @@\n   /** Base API url */\n   @Nonnull private final String baseUrl;\n \n+  /** Indicates whether the certificate/host verification is desired or not */\n+  @Nonnull private final Boolean isSecure;\n+\n   /** Misc. config necessary for the service client. */\n   @Nonnull private final Map<String, Object> config;\n \n   public DefaultServiceEndpoint(@Nonnull String name, @Nonnull String baseUrl) {\n     this.name = Objects.requireNonNull(name);\n     this.baseUrl = Objects.requireNonNull(baseUrl);\n+    this.isSecure = true;\n+    this.config = new HashMap<>();\n+  }\n+\n+  public DefaultServiceEndpoint(\n+      @Nonnull String name, @Nonnull String baseUrl, @Nonnull Boolean isSecure) {\n+    this.name = Objects.requireNonNull(name);\n+    this.baseUrl = Objects.requireNonNull(baseUrl);\n+    this.isSecure = Objects.requireNonNull(isSecure);\n     this.config = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f22140f2d5da60810ba5297e97c4e4d29acb2f19"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDY2MTEz", "url": "https://github.com/spinnaker/kork/pull/767#pullrequestreview-480066113", "createdAt": "2020-09-01T19:49:54Z", "commit": {"oid": "f22140f2d5da60810ba5297e97c4e4d29acb2f19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo0OTo1NVrOHLF1fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTo0OTo1NVrOHLF1fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5MTk5OQ==", "bodyText": "Seems like the operators should be lined up?", "url": "https://github.com/spinnaker/kork/pull/767#discussion_r481391999", "createdAt": "2020-09-01T19:49:55Z", "author": {"login": "jonsie"}, "path": "kork-web/src/main/java/com/netflix/spinnaker/config/okhttp3/OkHttpClientBuilderProvider.java", "diffHunk": "@@ -33,8 +33,9 @@\n    * @return true if supports the url given\n    */\n   default Boolean supports(ServiceEndpoint service) {\n-    return service.getBaseUrl().startsWith(\"http://\")\n-        || service.getBaseUrl().startsWith(\"https://\");\n+    return ((service.getBaseUrl().startsWith(\"http://\")\n+            || service.getBaseUrl().startsWith(\"https://\"))\n+        && service.isSecure());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f22140f2d5da60810ba5297e97c4e4d29acb2f19"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODg5MTAy", "url": "https://github.com/spinnaker/kork/pull/767#pullrequestreview-480889102", "createdAt": "2020-09-02T14:38:35Z", "commit": {"oid": "f22140f2d5da60810ba5297e97c4e4d29acb2f19"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDozODozNVrOHLyWaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDo0MDoyMlrOHLybkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEyMTMyMQ==", "bodyText": "Just make isSecure an un-boxed primitive and then you can avoid @Nonnull and this Objects.requireNonNull check.", "url": "https://github.com/spinnaker/kork/pull/767#discussion_r482121321", "createdAt": "2020-09-02T14:38:35Z", "author": {"login": "robzienert"}, "path": "kork-web/src/main/java/com/netflix/spinnaker/config/DefaultServiceEndpoint.java", "diffHunk": "@@ -31,12 +31,24 @@\n   /** Base API url */\n   @Nonnull private final String baseUrl;\n \n+  /** Indicates whether the certificate/host verification is desired or not */\n+  @Nonnull private final Boolean isSecure;\n+\n   /** Misc. config necessary for the service client. */\n   @Nonnull private final Map<String, Object> config;\n \n   public DefaultServiceEndpoint(@Nonnull String name, @Nonnull String baseUrl) {\n     this.name = Objects.requireNonNull(name);\n     this.baseUrl = Objects.requireNonNull(baseUrl);\n+    this.isSecure = true;\n+    this.config = new HashMap<>();\n+  }\n+\n+  public DefaultServiceEndpoint(\n+      @Nonnull String name, @Nonnull String baseUrl, @Nonnull Boolean isSecure) {\n+    this.name = Objects.requireNonNull(name);\n+    this.baseUrl = Objects.requireNonNull(baseUrl);\n+    this.isSecure = Objects.requireNonNull(isSecure);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f22140f2d5da60810ba5297e97c4e4d29acb2f19"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEyMTUzOQ==", "bodyText": "Don't believe you need to have Objects.requireNonNull if you're defining the fields as @Nonnull.", "url": "https://github.com/spinnaker/kork/pull/767#discussion_r482121539", "createdAt": "2020-09-02T14:38:54Z", "author": {"login": "robzienert"}, "path": "kork-web/src/main/java/com/netflix/spinnaker/config/DefaultServiceEndpoint.java", "diffHunk": "@@ -31,12 +31,24 @@\n   /** Base API url */\n   @Nonnull private final String baseUrl;\n \n+  /** Indicates whether the certificate/host verification is desired or not */\n+  @Nonnull private final Boolean isSecure;\n+\n   /** Misc. config necessary for the service client. */\n   @Nonnull private final Map<String, Object> config;\n \n   public DefaultServiceEndpoint(@Nonnull String name, @Nonnull String baseUrl) {\n     this.name = Objects.requireNonNull(name);\n     this.baseUrl = Objects.requireNonNull(baseUrl);\n+    this.isSecure = true;\n+    this.config = new HashMap<>();\n+  }\n+\n+  public DefaultServiceEndpoint(\n+      @Nonnull String name, @Nonnull String baseUrl, @Nonnull Boolean isSecure) {\n+    this.name = Objects.requireNonNull(name);\n+    this.baseUrl = Objects.requireNonNull(baseUrl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f22140f2d5da60810ba5297e97c4e4d29acb2f19"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEyMjY0MA==", "bodyText": "Spotless handles formatting.", "url": "https://github.com/spinnaker/kork/pull/767#discussion_r482122640", "createdAt": "2020-09-02T14:40:22Z", "author": {"login": "robzienert"}, "path": "kork-web/src/main/java/com/netflix/spinnaker/config/okhttp3/OkHttpClientBuilderProvider.java", "diffHunk": "@@ -33,8 +33,9 @@\n    * @return true if supports the url given\n    */\n   default Boolean supports(ServiceEndpoint service) {\n-    return service.getBaseUrl().startsWith(\"http://\")\n-        || service.getBaseUrl().startsWith(\"https://\");\n+    return ((service.getBaseUrl().startsWith(\"http://\")\n+            || service.getBaseUrl().startsWith(\"https://\"))\n+        && service.isSecure());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5MTk5OQ=="}, "originalCommit": {"oid": "f22140f2d5da60810ba5297e97c4e4d29acb2f19"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fda9ccaba67db90e99e1247c64da82eb8b2dc3cd", "author": {"user": {"login": "srekapalli", "name": "Sairam Rekapalli"}}, "url": "https://github.com/spinnaker/kork/commit/fda9ccaba67db90e99e1247c64da82eb8b2dc3cd", "committedDate": "2020-09-02T21:54:45Z", "message": "fix(misc): set default vals in constructors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNDEzNjI4", "url": "https://github.com/spinnaker/kork/pull/767#pullrequestreview-481413628", "createdAt": "2020-09-03T01:00:43Z", "commit": {"oid": "fda9ccaba67db90e99e1247c64da82eb8b2dc3cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2325a0a17b834ee7107901d09574035d6b1ddce4", "author": {"user": {"login": "mergify[bot]", "name": null}}, "url": "https://github.com/spinnaker/kork/commit/2325a0a17b834ee7107901d09574035d6b1ddce4", "committedDate": "2020-09-04T20:11:37Z", "message": "Merge branch 'master' into insecure_okc"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1478, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}