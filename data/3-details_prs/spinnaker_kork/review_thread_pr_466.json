{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyODkxNDA5", "number": 466, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMzo1MDo0OFrODYBk5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxOTowNDo0OVrODYR8IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTE4MjQ1OnYy", "diffSide": "LEFT", "path": "kork-plugins/src/test/kotlin/com/netflix/spinnaker/kork/plugins/loaders/SpinnakerPluginLoaderTests.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMzo1MDo0OFrOFdpgUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMzo1MDo0OFrOFdpgUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYzMzA0Mg==", "bodyText": "this feels like a rebase error, will investigate", "url": "https://github.com/spinnaker/kork/pull/466#discussion_r366633042", "createdAt": "2020-01-14T23:50:48Z", "author": {"login": "cfieber"}, "path": "kork-plugins/src/test/kotlin/com/netflix/spinnaker/kork/plugins/loaders/SpinnakerPluginLoaderTests.kt", "diffHunk": "@@ -1,106 +0,0 @@\n-/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "add4ad8d98018090245789dd31716ef21b78e1df"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTIyOTMxOnYy", "diffSide": "RIGHT", "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/SpinnakerPluginManager.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMDoxODo0MlrOFdp9DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOToxODo0OVrOFekrIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY0MDM5Nw==", "bodyText": "Maybe instead we pass in the RuntimeMode like so SpinnakerPluginDescriptorFinder(runtimeMode).\nThen in SpinnakerPluginDescriptorFinder we check that runtime mode equals RuntimeMode.DEVELOPMENT.  This way we're not passing around the PluginManager, we have the option to key off other runtime modes in SpinnakerPluginDescriptorFinder, and we still get to use the DefaultPluginManager implementation of getRuntimeMode.", "url": "https://github.com/spinnaker/kork/pull/466#discussion_r366640397", "createdAt": "2020-01-15T00:18:42Z", "author": {"login": "jonsie"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/SpinnakerPluginManager.kt", "diffHunk": "@@ -64,14 +68,19 @@ open class SpinnakerPluginManager(\n \n   override fun createPluginLoader(): PluginLoader =\n     CompoundPluginLoader()\n+      .add(PluginRefPluginLoader(this), this::isDevelopment)\n       .add(SpinnakerDevelopmentPluginLoader(this), this::isDevelopment)\n       .add(SpinnakerDefaultPluginLoader(this))\n       .add(SpinnakerJarPluginLoader(this))\n \n   override fun createPluginDescriptorFinder(): PluginDescriptorFinder =\n-    SpinnakerPluginDescriptorFinder()\n+    SpinnakerPluginDescriptorFinder(this)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "add4ad8d98018090245789dd31716ef21b78e1df"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwMjQ2NQ==", "bodyText": "that makes a lot more sense, will look at that", "url": "https://github.com/spinnaker/kork/pull/466#discussion_r367602465", "createdAt": "2020-01-16T19:18:49Z", "author": {"login": "cfieber"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/SpinnakerPluginManager.kt", "diffHunk": "@@ -64,14 +68,19 @@ open class SpinnakerPluginManager(\n \n   override fun createPluginLoader(): PluginLoader =\n     CompoundPluginLoader()\n+      .add(PluginRefPluginLoader(this), this::isDevelopment)\n       .add(SpinnakerDevelopmentPluginLoader(this), this::isDevelopment)\n       .add(SpinnakerDefaultPluginLoader(this))\n       .add(SpinnakerJarPluginLoader(this))\n \n   override fun createPluginDescriptorFinder(): PluginDescriptorFinder =\n-    SpinnakerPluginDescriptorFinder()\n+    SpinnakerPluginDescriptorFinder(this)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY0MDM5Nw=="}, "originalCommit": {"oid": "add4ad8d98018090245789dd31716ef21b78e1df"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2Nzg2MzM3OnYy", "diffSide": "RIGHT", "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/loaders/PluginRefPluginLoader.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxOTowNDo0OVrOFeDI0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMToxNzo1NVrOFen2og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA1MzAxMA==", "bodyText": "Why open?", "url": "https://github.com/spinnaker/kork/pull/466#discussion_r367053010", "createdAt": "2020-01-15T19:04:49Z", "author": {"login": "robzienert"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/loaders/PluginRefPluginLoader.kt", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.plugins.loaders\n+\n+import com.netflix.spinnaker.kork.plugins.SpinnakerPluginDescriptor\n+import com.netflix.spinnaker.kork.plugins.pluginref.PluginRef\n+import org.pf4j.BasePluginLoader\n+import org.pf4j.PluginClasspath\n+import org.pf4j.PluginDescriptor\n+import org.pf4j.PluginLoader\n+import org.pf4j.PluginManager\n+import java.nio.file.Path\n+\n+open class PluginRefPluginLoader(val pluginManager: PluginManager) : PluginLoader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "add4ad8d98018090245789dd31716ef21b78e1df"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA1MzE5MA==", "bodyText": "Would also like to see class-level docs on this, similar to the description you have in the commit.", "url": "https://github.com/spinnaker/kork/pull/466#discussion_r367053190", "createdAt": "2020-01-15T19:05:16Z", "author": {"login": "robzienert"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/loaders/PluginRefPluginLoader.kt", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.plugins.loaders\n+\n+import com.netflix.spinnaker.kork.plugins.SpinnakerPluginDescriptor\n+import com.netflix.spinnaker.kork.plugins.pluginref.PluginRef\n+import org.pf4j.BasePluginLoader\n+import org.pf4j.PluginClasspath\n+import org.pf4j.PluginDescriptor\n+import org.pf4j.PluginLoader\n+import org.pf4j.PluginManager\n+import java.nio.file.Path\n+\n+open class PluginRefPluginLoader(val pluginManager: PluginManager) : PluginLoader {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA1MzAxMA=="}, "originalCommit": {"oid": "add4ad8d98018090245789dd31716ef21b78e1df"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1NDU2Mg==", "bodyText": "why open indeed?! (fixed)\nalso javadoc'd up the swath of things I had to extend to make PluginRef happen.", "url": "https://github.com/spinnaker/kork/pull/466#discussion_r367654562", "createdAt": "2020-01-16T21:17:55Z", "author": {"login": "cfieber"}, "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/loaders/PluginRefPluginLoader.kt", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.spinnaker.kork.plugins.loaders\n+\n+import com.netflix.spinnaker.kork.plugins.SpinnakerPluginDescriptor\n+import com.netflix.spinnaker.kork.plugins.pluginref.PluginRef\n+import org.pf4j.BasePluginLoader\n+import org.pf4j.PluginClasspath\n+import org.pf4j.PluginDescriptor\n+import org.pf4j.PluginLoader\n+import org.pf4j.PluginManager\n+import java.nio.file.Path\n+\n+open class PluginRefPluginLoader(val pluginManager: PluginManager) : PluginLoader {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA1MzAxMA=="}, "originalCommit": {"oid": "add4ad8d98018090245789dd31716ef21b78e1df"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3661, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}