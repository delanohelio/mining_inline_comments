{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NTM4MTA1", "number": 743, "title": "Move tomcat connector customizations into separate module", "bodyText": "Converted to Java.\nRemoved references to OkHttpClientConfigurationProperties which we are using to set SSL cipher etc, instead use TomcatConfigurationProperties and avoid dependency on kork-web.\nNeed to fix gate where we have direct references to TomcatConfigurationProperties.", "createdAt": "2020-08-12T06:02:39Z", "url": "https://github.com/spinnaker/kork/pull/743", "merged": true, "mergeCommit": {"oid": "3d7bf95090a380be2e8d6860b51b25348f2ffc0e"}, "closed": true, "closedAt": "2020-08-21T23:14:08Z", "author": {"login": "srekapalli"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-TufnAH2gAyNDY2NTM4MTA1OjhhYTk0MWM5MzhlOWY5MTRhZWFjNDdhZGMxYmNjMGEyNWRkNDZmYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBNHRUAH2gAyNDY2NTM4MTA1OmMxMDg3MjE3MDhkYWFhMmFhMmNhYjUwY2Q3NjdhNGU5MjhiY2VkNGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8aa941c938e9f914aeac47adc1bcc0a25dd46fa5", "author": {"user": {"login": "srekapalli", "name": "Sairam Rekapalli"}}, "url": "https://github.com/spinnaker/kork/commit/8aa941c938e9f914aeac47adc1bcc0a25dd46fa5", "committedDate": "2020-08-12T23:08:22Z", "message": "fix(misc): Move tomcat connector customizations into separate module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1ffc01a9066f46d48c0fb4e606ccb37ca56d49b", "author": {"user": {"login": "srekapalli", "name": "Sairam Rekapalli"}}, "url": "https://github.com/spinnaker/kork/commit/a1ffc01a9066f46d48c0fb4e606ccb37ca56d49b", "committedDate": "2020-08-12T05:56:56Z", "message": "fix(misc): Move tomcat connector customizations into separate module"}, "afterCommit": {"oid": "8aa941c938e9f914aeac47adc1bcc0a25dd46fa5", "author": {"user": {"login": "srekapalli", "name": "Sairam Rekapalli"}}, "url": "https://github.com/spinnaker/kork/commit/8aa941c938e9f914aeac47adc1bcc0a25dd46fa5", "committedDate": "2020-08-12T23:08:22Z", "message": "fix(misc): Move tomcat connector customizations into separate module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2OTI2NzMz", "url": "https://github.com/spinnaker/kork/pull/743#pullrequestreview-466926733", "createdAt": "2020-08-13T16:30:58Z", "commit": {"oid": "8aa941c938e9f914aeac47adc1bcc0a25dd46fa5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNzcwNzMz", "url": "https://github.com/spinnaker/kork/pull/743#pullrequestreview-472770733", "createdAt": "2020-08-21T19:31:32Z", "commit": {"oid": "8aa941c938e9f914aeac47adc1bcc0a25dd46fa5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTozMTozMlrOHE5SAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTozMTozMlrOHE5SAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg5NDg1MQ==", "bodyText": "I like the part where you fixed the multi-year typo! \ud83d\udcaf", "url": "https://github.com/spinnaker/kork/pull/743#discussion_r474894851", "createdAt": "2020-08-21T19:31:32Z", "author": {"login": "robzienert"}, "path": "kork-tomcat/src/main/java/com/netflix/spinnaker/kork/tomcat/TomcatConfiguration.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package com.netflix.spinnaker.kork.tomcat;\n+\n+import org.apache.catalina.connector.Connector;\n+import org.apache.coyote.http11.Http11NioProtocol;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer;\n+import org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;\n+import org.springframework.boot.web.server.Ssl;\n+import org.springframework.boot.web.server.WebServerFactory;\n+import org.springframework.boot.web.server.WebServerFactoryCustomizer;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+@EnableConfigurationProperties({TomcatConfigurationProperties.class})\n+class TomcatConfiguration {\n+\n+  private final Logger log = LoggerFactory.getLogger(getClass());\n+\n+  @Bean\n+  TomcatConnectorCustomizer defaultTomcatConnectorCustomizer(\n+      TomcatConfigurationProperties tomcatConfigurationProperties) {\n+    return new DefaultTomcatConnectorCustomizer(tomcatConfigurationProperties);\n+  }\n+\n+  /**\n+   * Setup multiple connectors: - an https connector requiring client auth that will service API\n+   * requests - an http connector that will service legacy non-https requests\n+   */\n+  @Bean\n+  @ConditionalOnExpression(\"${server.ssl.enabled:false}\")\n+  WebServerFactoryCustomizer containerCustomizer(\n+      DefaultTomcatConnectorCustomizer defaultTomcatConnectorCustomizer,\n+      TomcatConfigurationProperties tomcatConfigurationProperties) {\n+    System.setProperty(\"jdk.tls.rejectClientInitiatedRenegotiation\", \"true\");\n+    System.setProperty(\"jdk.tls.ephemeralDHKeySize\", \"2048\");\n+\n+    return new WebServerFactoryCustomizer() {\n+      @Override\n+      public void customize(WebServerFactory factory) {\n+        TomcatServletWebServerFactory tomcat = (TomcatServletWebServerFactory) factory;\n+\n+        // This will only handle the case where SSL is enabled on the main Tomcat connector\n+        tomcat.addConnectorCustomizers(defaultTomcatConnectorCustomizer);\n+\n+        if (tomcatConfigurationProperties.getLegacyServerPort() > 0) {\n+          log.info(\n+              \"Creating legacy connector on port {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aa941c938e9f914aeac47adc1bcc0a25dd46fa5"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNzcwNzgz", "url": "https://github.com/spinnaker/kork/pull/743#pullrequestreview-472770783", "createdAt": "2020-08-21T19:31:36Z", "commit": {"oid": "8aa941c938e9f914aeac47adc1bcc0a25dd46fa5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c108721708daaa2aa2cab50cd767a4e928bced4a", "author": {"user": {"login": "mergify[bot]", "name": null}}, "url": "https://github.com/spinnaker/kork/commit/c108721708daaa2aa2cab50cd767a4e928bced4a", "committedDate": "2020-08-21T23:07:52Z", "message": "Merge branch 'master' into kork-tc"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1458, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}