{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5ODc3NDIy", "number": 1854, "title": "Testsuite - salt parser json exception catch", "bodyText": "What does this PR change?\nThis PR adds exception to catch improper JSON item to input.\nMore complex solution of this issue will follow.\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_lint_checkstyle\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"ruby_rubocop\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\"\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-02-01T09:22:43Z", "url": "https://github.com/uyuni-project/uyuni/pull/1854", "merged": true, "mergeCommit": {"oid": "2126d0f4d3a4cadc7a4bd9b234ea7bac1d74af68"}, "closed": true, "closedAt": "2020-02-03T09:13:04Z", "author": {"login": "lkotek"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAFq3tAFqTM1MTg4OTk2Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcApOF9gBqjMwMDEzMjU5NTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODg5OTYz", "url": "https://github.com/uyuni-project/uyuni/pull/1854#pullrequestreview-351889963", "createdAt": "2020-02-01T15:42:25Z", "commit": {"oid": "07a14ce0c27ca790525d158fb6176dcc31cb3d60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxNTo0MjoyNlrOFkeGdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxNTo0MjoyNlrOFkeGdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4NjIyOQ==", "bodyText": "If we want to perform a continue in the iteration, I'd move the except block a line after, as following code is also using j content:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                except ValueError as e:\n          \n          \n            \n                try:\n          \n          \n            \n                    j = json.loads(\"\".join(error))\n          \n          \n            \n                    if not \"return\" in j:\n          \n          \n            \n                        break\n          \n          \n            \n                except ValueError as e:\n          \n          \n            \n                    print(\"JSON cannot be parsed due {0}\".format(e))\n          \n          \n            \n                    continue\n          \n          \n            \n                for k in j[\"return\"]:\n          \n          \n            \n                    if not j[\"return\"][k][\"result\"]:\n          \n          \n            \n                        failure_count += 1\n          \n          \n            \n                        print(\"\\n# Failure\", failure_count, \", _stamp:\", j['_stamp'], json.dumps(j[\"return\"][k], sort_keys=True, indent=4))\n          \n      \n    \n    \n  \n\nAlso, we can let it as it is, but making sure on next steps that we check if j has content to process.", "url": "https://github.com/uyuni-project/uyuni/pull/1854#discussion_r373786229", "createdAt": "2020-02-01T15:42:26Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/upload_files/salt_event_parser.py", "diffHunk": "@@ -5,21 +5,25 @@\n \n # open salt event log and create correct json from it\n errors = []\n-item = [] \n+item = []\n f = open('/var/log/rhn/salt-event.log', \"r\")\n for line in f.readlines():\n     item.append(line)\n     if re.search(r\"^\\}\", line):\n         if '\\\"result\\\": false' in \"\".join(item):\n             item[0] = \"{\"\n             errors.append(item)\n-        item = [] \n+        item = []\n f.close()\n \n # parse json and find results ending as failed\n failure_count = 0\n for error in errors:\n-    j = json.loads(\"\".join(error))\n+    try:\n+        j = json.loads(\"\".join(error))\n+    except ValueError as e:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07a14ce0c27ca790525d158fb6176dcc31cb3d60"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDkyMTIx", "url": "https://github.com/uyuni-project/uyuni/pull/1854#pullrequestreview-352092121", "createdAt": "2020-02-03T08:47:06Z", "commit": {"oid": "07a14ce0c27ca790525d158fb6176dcc31cb3d60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODo0NzowN1rOFkp0Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODo0NzowN1rOFkp0Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk3ODE1MA==", "bodyText": "due to", "url": "https://github.com/uyuni-project/uyuni/pull/1854#discussion_r373978150", "createdAt": "2020-02-03T08:47:07Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/upload_files/salt_event_parser.py", "diffHunk": "@@ -5,21 +5,25 @@\n \n # open salt event log and create correct json from it\n errors = []\n-item = [] \n+item = []\n f = open('/var/log/rhn/salt-event.log', \"r\")\n for line in f.readlines():\n     item.append(line)\n     if re.search(r\"^\\}\", line):\n         if '\\\"result\\\": false' in \"\".join(item):\n             item[0] = \"{\"\n             errors.append(item)\n-        item = [] \n+        item = []\n f.close()\n \n # parse json and find results ending as failed\n failure_count = 0\n for error in errors:\n-    j = json.loads(\"\".join(error))\n+    try:\n+        j = json.loads(\"\".join(error))\n+    except ValueError as e:\n+        print(\"JSON cannot be parsed due {0}\".format(e))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07a14ce0c27ca790525d158fb6176dcc31cb3d60"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDkyMzgx", "url": "https://github.com/uyuni-project/uyuni/pull/1854#pullrequestreview-352092381", "createdAt": "2020-02-03T08:47:36Z", "commit": {"oid": "07a14ce0c27ca790525d158fb6176dcc31cb3d60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6c0e8c498bda0ef64cf51f980bb6df4c8c6710c", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/a6c0e8c498bda0ef64cf51f980bb6df4c8c6710c", "committedDate": "2020-02-03T09:07:14Z", "message": "salt parser json exception catch"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27dcc032c801926dce1edc385cfd8152bb2ca9e1", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/27dcc032c801926dce1edc385cfd8152bb2ca9e1", "committedDate": "2020-02-03T08:53:01Z", "message": "extend try block\n\nCo-Authored-By: Oscar Barrios <obarrios@suse.com>"}, "afterCommit": {"oid": "a6c0e8c498bda0ef64cf51f980bb6df4c8c6710c", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/a6c0e8c498bda0ef64cf51f980bb6df4c8c6710c", "committedDate": "2020-02-03T09:07:14Z", "message": "salt parser json exception catch"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1769, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}