{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTY1OTU2", "number": 2237, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzowNDozNFrOD-T6sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjozMFrOD-UFVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY0NjI3OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/maintenance/test/MaintenanceManagerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzowNDozNVrOGYVf2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDozNDoyM1rOGZ8y-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3MTIyNA==", "bodyText": "Could you either delete this line, or create an assertion, that the depending actions are in fact not in the result?", "url": "https://github.com/uyuni-project/uyuni/pull/2237#discussion_r428171224", "createdAt": "2020-05-20T17:04:35Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/maintenance/test/MaintenanceManagerTest.java", "diffHunk": "@@ -494,8 +494,22 @@ public void testScheduleChangeMultiWithActionChain() throws Exception {\n         assertContains(coreActionsAfter, coreAction3);\n         assertContains(coreActionsAfter, coreAction4);\n         assertEquals(2, coreActionsAfter.size()); // First chain should be canceled, second stay\n-    }\n \n+        assertEquals(2, upResult.size());\n+        for (RescheduleResult r : upResult) {\n+            if (r.getScheduleName().equals(\"SAP Maintenance Window\")) {\n+                assertEquals(\"Cancel\", r.getStrategy());\n+                assertContains(r.getActionsServers().get(sapAction3), sapServer);\n+                // depending actions from a chain are not part of the result\n+                //assertContains(r.getActionsServers().get(sapAction4), sapServer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5618f2e66b898353ea7f16443430ab9dd56ae039"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MzY3Mw==", "bodyText": "I remove that line, but the comment will stay to prevent questions in the future.", "url": "https://github.com/uyuni-project/uyuni/pull/2237#discussion_r429863673", "createdAt": "2020-05-25T10:34:23Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/maintenance/test/MaintenanceManagerTest.java", "diffHunk": "@@ -494,8 +494,22 @@ public void testScheduleChangeMultiWithActionChain() throws Exception {\n         assertContains(coreActionsAfter, coreAction3);\n         assertContains(coreActionsAfter, coreAction4);\n         assertEquals(2, coreActionsAfter.size()); // First chain should be canceled, second stay\n-    }\n \n+        assertEquals(2, upResult.size());\n+        for (RescheduleResult r : upResult) {\n+            if (r.getScheduleName().equals(\"SAP Maintenance Window\")) {\n+                assertEquals(\"Cancel\", r.getStrategy());\n+                assertContains(r.getActionsServers().get(sapAction3), sapServer);\n+                // depending actions from a chain are not part of the result\n+                //assertContains(r.getActionsServers().get(sapAction4), sapServer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3MTIyNA=="}, "originalCommit": {"oid": "5618f2e66b898353ea7f16443430ab9dd56ae039"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY0NjY0OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/maintenance/test/MaintenanceManagerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzowNDo0MlrOGYVgFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDozNDozMlrOGZ8zQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3MTI4NQ==", "bodyText": "Same as above.", "url": "https://github.com/uyuni-project/uyuni/pull/2237#discussion_r428171285", "createdAt": "2020-05-20T17:04:42Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/maintenance/test/MaintenanceManagerTest.java", "diffHunk": "@@ -494,8 +494,22 @@ public void testScheduleChangeMultiWithActionChain() throws Exception {\n         assertContains(coreActionsAfter, coreAction3);\n         assertContains(coreActionsAfter, coreAction4);\n         assertEquals(2, coreActionsAfter.size()); // First chain should be canceled, second stay\n-    }\n \n+        assertEquals(2, upResult.size());\n+        for (RescheduleResult r : upResult) {\n+            if (r.getScheduleName().equals(\"SAP Maintenance Window\")) {\n+                assertEquals(\"Cancel\", r.getStrategy());\n+                assertContains(r.getActionsServers().get(sapAction3), sapServer);\n+                // depending actions from a chain are not part of the result\n+                //assertContains(r.getActionsServers().get(sapAction4), sapServer);\n+            }\n+            else if (r.getScheduleName().equals(\"Core Server Window\")) {\n+                assertEquals(\"Cancel\", r.getStrategy());\n+                assertContains(r.getActionsServers().get(coreAction1), coreServer);\n+                // depending actions from a chain are not part of the result\n+                //assertContains(r.getActionsServers().get(coreAction2), coreServer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5618f2e66b898353ea7f16443430ab9dd56ae039"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2Mzc0NA==", "bodyText": "same as above", "url": "https://github.com/uyuni-project/uyuni/pull/2237#discussion_r429863744", "createdAt": "2020-05-25T10:34:32Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/maintenance/test/MaintenanceManagerTest.java", "diffHunk": "@@ -494,8 +494,22 @@ public void testScheduleChangeMultiWithActionChain() throws Exception {\n         assertContains(coreActionsAfter, coreAction3);\n         assertContains(coreActionsAfter, coreAction4);\n         assertEquals(2, coreActionsAfter.size()); // First chain should be canceled, second stay\n-    }\n \n+        assertEquals(2, upResult.size());\n+        for (RescheduleResult r : upResult) {\n+            if (r.getScheduleName().equals(\"SAP Maintenance Window\")) {\n+                assertEquals(\"Cancel\", r.getStrategy());\n+                assertContains(r.getActionsServers().get(sapAction3), sapServer);\n+                // depending actions from a chain are not part of the result\n+                //assertContains(r.getActionsServers().get(sapAction4), sapServer);\n+            }\n+            else if (r.getScheduleName().equals(\"Core Server Window\")) {\n+                assertEquals(\"Cancel\", r.getStrategy());\n+                assertContains(r.getActionsServers().get(coreAction1), coreServer);\n+                // depending actions from a chain are not part of the result\n+                //assertContains(r.getActionsServers().get(coreAction2), coreServer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3MTI4NQ=="}, "originalCommit": {"oid": "5618f2e66b898353ea7f16443430ab9dd56ae039"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY3MzUwOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/xmlrpc/DownloadFaultException.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjozMFrOGYVx2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDo0NDozMlrOGZ9CSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NTgzNA==", "bodyText": "Nit: 1060-1099 belongs to \"System exceptions\", maybe \"Action exceptions\", \"Misc exceptions\" or \"SUSE exceptions\" would be more suitable.", "url": "https://github.com/uyuni-project/uyuni/pull/2237#discussion_r428175834", "createdAt": "2020-05-20T17:12:30Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/xmlrpc/DownloadFaultException.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.xmlrpc;\n+\n+import com.redhat.rhn.FaultException;\n+\n+\n+@SuppressWarnings(\"serial\")\n+public class DownloadFaultException extends FaultException {\n+\n+    /**\n+     * Constructor\n+     *\n+     * @param d exception\n+     */\n+    public DownloadFaultException(Throwable d) {\n+        super(1074, \"downloadError\", \"Download failed\", d);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "360b7f6cd46a6e4d1843015a7e62dce1772b7494"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2NzU5NQ==", "bodyText": "Well, I added it there because there is already another \"download\" exception.\npublic class CrashFileDownloadException ...\n...\n    super(1073, \"crashFileDownload\", ....\n\nBut maybe misc exceptions would be better. I will move it", "url": "https://github.com/uyuni-project/uyuni/pull/2237#discussion_r429867595", "createdAt": "2020-05-25T10:44:32Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/xmlrpc/DownloadFaultException.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.xmlrpc;\n+\n+import com.redhat.rhn.FaultException;\n+\n+\n+@SuppressWarnings(\"serial\")\n+public class DownloadFaultException extends FaultException {\n+\n+    /**\n+     * Constructor\n+     *\n+     * @param d exception\n+     */\n+    public DownloadFaultException(Throwable d) {\n+        super(1074, \"downloadError\", \"Download failed\", d);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NTgzNA=="}, "originalCommit": {"oid": "360b7f6cd46a6e4d1843015a7e62dce1772b7494"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4255, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}