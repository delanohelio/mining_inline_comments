{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MjA5ODUz", "number": 2665, "title": "Virt boot using ISO and Cobbler", "bodyText": "What does this PR change?\nAllows creating a VM on a Salt minion from a DVD iso or an Auto-installation profile.\nGUI diff\nBefore:\n\nAfter:\n\n\n DONE\n\nDocumentation\n\n\nDocumentation issue was created: uyuni-project/uyuni-docs#620\n\n\n DONE\n\n\nTest coverage\n\n\nUnit tests were added\n\n\nCucumber tests were added\n\n\n DONE\n\n\nLinks\nRequires uyuni-project/sumaform#788\nFixes SUSE/spacewalk#8317\nTestsuite fix #2763\n\n DONE\n\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_lint_checkstyle\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\"\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-09-28T14:58:30Z", "url": "https://github.com/uyuni-project/uyuni/pull/2665", "merged": true, "mergeCommit": {"oid": "a25d3792b018ca40a1d4dd744ab3c8acd01c028f"}, "closed": true, "closedAt": "2020-10-22T16:46:16Z", "author": {"login": "cbosdo"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdN98XsABqjM4MjQ5MTg3MjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVEsBegBqjM5MTAwNzM2MDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b4a0f2936ebb932e6d08d52d1b4bb7a84d866dc3", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/b4a0f2936ebb932e6d08d52d1b4bb7a84d866dc3", "committedDate": "2020-09-28T14:55:24Z", "message": "Create VMs on Salt minions using auto-installation profile"}, "afterCommit": {"oid": "1840c6d5fb0f69877c43fe3d127890c71b8ff86f", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/1840c6d5fb0f69877c43fe3d127890c71b8ff86f", "committedDate": "2020-09-30T14:47:41Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1840c6d5fb0f69877c43fe3d127890c71b8ff86f", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/1840c6d5fb0f69877c43fe3d127890c71b8ff86f", "committedDate": "2020-09-30T14:47:41Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}, "afterCommit": {"oid": "e2e47968c733b8c3978c17200c0173bce90106d2", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/e2e47968c733b8c3978c17200c0173bce90106d2", "committedDate": "2020-10-01T13:01:18Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2e47968c733b8c3978c17200c0173bce90106d2", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/e2e47968c733b8c3978c17200c0173bce90106d2", "committedDate": "2020-10-01T13:01:18Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}, "afterCommit": {"oid": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7", "committedDate": "2020-10-01T14:57:33Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMDAwNjM3", "url": "https://github.com/uyuni-project/uyuni/pull/2665#pullrequestreview-503000637", "createdAt": "2020-10-06T14:05:12Z", "commit": {"oid": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDowNToxMlrOHdIhVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDowNToxMlrOHdIhVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMDM1OA==", "bodyText": "I wonder if we should make these names more general as they are now also used for installing a new instance.\nBut maybe not in this PR.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r500310358", "createdAt": "2020-10-06T14:05:12Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/webui/services/SaltServerActionService.java", "diffHunk": "@@ -1715,12 +1731,26 @@ else if (state.equals(\"rebooted\") && ((VirtualizationRebootGuestAction)action).i\n         KickstartableTree tree = KickstartFactory.lookupKickstartTreeByLabel(nameParts.get(0),\n                 OrgFactory.lookupById(Long.valueOf(nameParts.get(1))));\n         tree.createOrUpdateSaltFS();\n-        String kOpts = buildKernelOptions(system, profile, dist, host);\n-        Map<String, Object> pillar = new HashMap<>();\n+        String kOpts = buildKernelOptions(system, profile, dist, kickstartHost);\n+        Map<String, String> pillar = new HashMap<>();\n         pillar.put(\"uyuni-reinstall-kernel\", saltFSKernel);\n         pillar.put(\"uyuni-reinstall-initrd\", saltFSInitrd);\n         pillar.put(\"uyuni-reinstall-kopts\", kOpts);\n+\n+        return pillar;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTIxMDEy", "url": "https://github.com/uyuni-project/uyuni/pull/2665#pullrequestreview-503121012", "createdAt": "2020-10-06T15:57:00Z", "commit": {"oid": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTo1NzowMFrOHdO16w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowOToyOFrOHdp4Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxMzkzMQ==", "bodyText": "i'm not really sure about this the methods in here seem to only serve this one purpose and its kind of an ugly implementation detail that we have to do this anyway. My suggestion would be to move the tracking into the\nLibvirtEngineDomainLifecycleMessageAction.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r500413931", "createdAt": "2020-10-06T15:57:00Z", "author": {"login": "lucidd"}, "path": "java/code/src/com/suse/manager/virtualization/VirtualMachineRestarterSalt.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.virtualization;\n+\n+import com.suse.manager.webui.services.iface.VirtManager;\n+import com.suse.manager.webui.services.iface.VirtualMachineRestarter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Salt implementation for the VM restart handler\n+ */\n+public class VirtualMachineRestarterSalt implements VirtualMachineRestarter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1Njg3OA==", "bodyText": "you can just lock use the ArrayList object as lock and don't need a separate object.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r500856878", "createdAt": "2020-10-07T09:09:28Z", "author": {"login": "lucidd"}, "path": "java/code/src/com/suse/manager/virtualization/VirtualMachineRestarterSalt.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.virtualization;\n+\n+import com.suse.manager.webui.services.iface.VirtManager;\n+import com.suse.manager.webui.services.iface.VirtualMachineRestarter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Salt implementation for the VM restart handler\n+ */\n+public class VirtualMachineRestarterSalt implements VirtualMachineRestarter {\n+\n+    private static VirtualMachineRestarterSalt instance;\n+\n+    private final VirtManager virtManager;\n+    private final Object lock = new Object();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/f5bf17c0f994fd0312bcb3ffe6bff1684b2156b7", "committedDate": "2020-10-01T14:57:33Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}, "afterCommit": {"oid": "60afd666593ed71f97a8f7ae4603c86fbc2d1c09", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/60afd666593ed71f97a8f7ae4603c86fbc2d1c09", "committedDate": "2020-10-07T15:19:49Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60afd666593ed71f97a8f7ae4603c86fbc2d1c09", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/60afd666593ed71f97a8f7ae4603c86fbc2d1c09", "committedDate": "2020-10-07T15:19:49Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}, "afterCommit": {"oid": "8fe24ef697491f4bbabe807907c0952b2aac5a52", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/8fe24ef697491f4bbabe807907c0952b2aac5a52", "committedDate": "2020-10-08T07:11:18Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fe24ef697491f4bbabe807907c0952b2aac5a52", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/8fe24ef697491f4bbabe807907c0952b2aac5a52", "committedDate": "2020-10-08T07:11:18Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}, "afterCommit": {"oid": "fc7516f409b3c6537110c50bf2a54cc7e057fa6f", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/fc7516f409b3c6537110c50bf2a54cc7e057fa6f", "committedDate": "2020-10-09T13:21:19Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b72060f7941b28fda01c335ba957a5aa60b11b7", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/2b72060f7941b28fda01c335ba957a5aa60b11b7", "committedDate": "2020-10-15T08:39:52Z", "message": "testsuite: test VM provisioning on salt"}, "afterCommit": {"oid": "551ec325c83b0acdef828a21fb4a0e72608c9342", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/551ec325c83b0acdef828a21fb4a0e72608c9342", "committedDate": "2020-10-16T07:08:18Z", "message": "testsuite: test VM provisioning on salt"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "551ec325c83b0acdef828a21fb4a0e72608c9342", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/551ec325c83b0acdef828a21fb4a0e72608c9342", "committedDate": "2020-10-16T07:08:18Z", "message": "testsuite: test VM provisioning on salt"}, "afterCommit": {"oid": "4344eecc4850ad58d3f5146ef5218417230d3cfe", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4344eecc4850ad58d3f5146ef5218417230d3cfe", "committedDate": "2020-10-19T13:31:58Z", "message": "testsuite: test VM provisioning on salt"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4344eecc4850ad58d3f5146ef5218417230d3cfe", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4344eecc4850ad58d3f5146ef5218417230d3cfe", "committedDate": "2020-10-19T13:31:58Z", "message": "testsuite: test VM provisioning on salt"}, "afterCommit": {"oid": "9fa7f6fa68d518ec0bcc6e485362ba5194210252", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/9fa7f6fa68d518ec0bcc6e485362ba5194210252", "committedDate": "2020-10-19T14:32:35Z", "message": "testsuite: test VM provisioning on salt"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9fa7f6fa68d518ec0bcc6e485362ba5194210252", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/9fa7f6fa68d518ec0bcc6e485362ba5194210252", "committedDate": "2020-10-19T14:32:35Z", "message": "testsuite: test VM provisioning on salt"}, "afterCommit": {"oid": "4edb92c8b36a3d4c4e58d65b6e25666d065d4c23", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4edb92c8b36a3d4c4e58d65b6e25666d065d4c23", "committedDate": "2020-10-19T15:21:04Z", "message": "testsuite: test VM provisioning on salt"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4edb92c8b36a3d4c4e58d65b6e25666d065d4c23", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4edb92c8b36a3d4c4e58d65b6e25666d065d4c23", "committedDate": "2020-10-19T15:21:04Z", "message": "testsuite: test VM provisioning on salt"}, "afterCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/dfa3f09f073239840386a3410631a43dcbee9043", "committedDate": "2020-10-19T16:24:19Z", "message": "testsuite: test VM provisioning on salt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDA1OTYx", "url": "https://github.com/uyuni-project/uyuni/pull/2665#pullrequestreview-512405961", "createdAt": "2020-10-20T07:28:47Z", "commit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyODo0N1rOHkuUZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo1NTo0M1rOHkvU3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2OTY2OA==", "bodyText": "What makes the difference in this scenario to need the special tag of long_test, comparing with the other scenarios?\nI would say we don't need it here.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508269668", "createdAt": "2020-10-20T07:28:47Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/reposync/srv_sync_products.feature", "diffHunk": "@@ -57,3 +57,21 @@ Feature: Synchronize products in the products page of the Setup Wizard\n     And I click the Add Product button\n     And I wait until I see \"SUSE Linux Enterprise Server 15 x86_64\" product has been added\n     Then the SLE15 products should be added\n+\n+@long_test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3MTQzNA==", "bodyText": "If we need it, it might be interesting to have a step here waiting for that channel to be fully synched \ud83e\udd14\nBetter than just guess than it had enough time to synch.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508271434", "createdAt": "2020-10-20T07:31:41Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/secondary/minkvm_guests.feature", "diffHunk": "@@ -342,6 +342,95 @@ Feature: Be able to manage KVM virtual machines via the GUI\n     Then I wait until I do not see \"test-net1\" text\n     And I should not see a \"test-net1\" virtual network on \"kvm_server\"\n \n+# Start provisioning scenarios\n+\n+# This scenario needs the 15-SP2 base system channel to be synchronized", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3MjA5Nw==", "bodyText": "I'm not sure we need this step Given I am on the Systems page to navigate to Distributions.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508272097", "createdAt": "2020-10-20T07:32:44Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/secondary/minkvm_guests.feature", "diffHunk": "@@ -342,6 +342,95 @@ Feature: Be able to manage KVM virtual machines via the GUI\n     Then I wait until I do not see \"test-net1\" text\n     And I should not see a \"test-net1\" virtual network on \"kvm_server\"\n \n+# Start provisioning scenarios\n+\n+# This scenario needs the 15-SP2 base system channel to be synchronized\n+@long_test\n+@virthost_kvm\n+@scc_credentials\n+  Scenario: Create auto installation distribution\n+    Given I am on the Systems page", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3MzU4OA==", "bodyText": "Instead of a comment, if we really want to advise about what it's doing here, I would prefer a new Scenario, with a title of \"Test the VM boot params\"", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508273588", "createdAt": "2020-10-20T07:35:20Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/secondary/minkvm_guests.feature", "diffHunk": "@@ -342,6 +342,95 @@ Feature: Be able to manage KVM virtual machines via the GUI\n     Then I wait until I do not see \"test-net1\" text\n     And I should not see a \"test-net1\" virtual network on \"kvm_server\"\n \n+# Start provisioning scenarios\n+\n+# This scenario needs the 15-SP2 base system channel to be synchronized\n+@long_test\n+@virthost_kvm\n+@scc_credentials\n+  Scenario: Create auto installation distribution\n+    Given I am on the Systems page\n+    When I follow the left menu \"Systems > Autoinstallation > Distributions\"\n+    And I follow \"Create Distribution\"\n+    And I enter \"SLE-15-SP2-TFTP\" as \"label\"\n+    And I enter \"/usr/share/tftpboot-installation/SLE-15-SP2-x86_64\" as \"basepath\"\n+    And I select \"SLE-Product-SLES15-SP2-Pool for x86_64\" from \"channelid\"\n+    And I select \"SUSE Linux Enterprise 15\" from \"installtype\"\n+    And I enter \"useonlinerepo insecure=1\" as \"kernelopts\"\n+    And I click on \"Create Autoinstallable Distribution\"\n+    Then I should see a \"Autoinstallable Distributions\" text\n+    And I should see a \"SLE-15-SP2-TFTP\" link\n+\n+@long_test\n+@virthost_kvm\n+@scc_credentials\n+  Scenario: Create auto installation profile\n+    Given I am on the Systems page\n+    And I follow the left menu \"Systems > Autoinstallation > Profiles\"\n+    And I follow \"Upload Kickstart/Autoyast File\"\n+    When I enter \"15-sp2-kvm\" as \"kickstartLabel\"\n+    And I select \"SLE-15-SP2-TFTP\" from \"kstreeId\"\n+    And I select \"KVM Virtualized Guest\" from \"virtualizationTypeLabel\"\n+    And I attach the file \"/sle-15-sp2-autoyast.xml\" to \"fileUpload\"\n+    And I click on \"Create\"\n+    Then I should see a \"Autoinstallation: 15-sp2-kvm\" text\n+    And I should see a \"Autoinstallation Details\" text\n+    When I enter \"self_update=0\" as \"kernel_options\"\n+    And I click on \"Update\"\n+    And I follow \"Variables\"\n+    And I enter \"distrotree=SLE-15-SP2-TFTP\\nregistration_key=1-SUSE-PKG-x86_64\" as \"variables\" text area\n+    And I click on \"Update Variables\"\n+    And I follow \"Autoinstallation File\"\n+    Then I should see a \"SLE-15-SP2-TFTP\" text\n+\n+@long_test\n+@virthost_kvm\n+@scc_credentials\n+  Scenario: Create an auto installing KVM virtual machine\n+    Given I am on the \"Virtualization\" page of this \"kvm_server\"\n+    When I follow \"Create Guest\"\n+    And I wait until I see \"General\" text\n+    And I enter \"test-vm2\" as \"name\"\n+    And I select \"15-sp2-kvm\" from \"cobbler_profile\"\n+    And I click on \"Create\"\n+    Then I should see a \"Hosted Virtual Systems\" text\n+    When I wait until I see \"test-vm2\" text\n+    And I wait until table row for \"test-vm2\" contains button \"Stop\"\n+    # Test the VM boot params", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3NDc0OA==", "bodyText": "Well... as you have the info already... why not offer the valures of those booleans into the raised message?", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508274748", "createdAt": "2020-10-20T07:37:23Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -1201,6 +1201,38 @@\n   end\n end\n \n+Then(/^\"([^\"]*)\" virtual machine on \"([^\"]*)\" should boot using autoyast$/) do |vm, host|\n+  node = get_target(host)\n+  output, _code = node.run(\"virsh dumpxml #{vm}\")\n+  tree = Nokogiri::XML(output)\n+  has_kernel = tree.xpath(\"//os/kernel\").size == 1\n+  has_initrd = tree.xpath(\"//os/initrd\").size == 1\n+  has_autoyast = tree.xpath(\"//os/cmdline\")[0].to_s.include? ' autoyast='\n+  raise 'Wrong kernel/initrd/cmdline configuration' unless has_kernel && \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3NTMxNA==", "bodyText": "Use single quotes if there is nothing to escape or a variable involved.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508275314", "createdAt": "2020-10-20T07:38:22Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -1201,6 +1201,38 @@\n   end\n end\n \n+Then(/^\"([^\"]*)\" virtual machine on \"([^\"]*)\" should boot using autoyast$/) do |vm, host|\n+  node = get_target(host)\n+  output, _code = node.run(\"virsh dumpxml #{vm}\")\n+  tree = Nokogiri::XML(output)\n+  has_kernel = tree.xpath(\"//os/kernel\").size == 1\n+  has_initrd = tree.xpath(\"//os/initrd\").size == 1\n+  has_autoyast = tree.xpath(\"//os/cmdline\")[0].to_s.include? ' autoyast='\n+  raise 'Wrong kernel/initrd/cmdline configuration' unless has_kernel && \\\n+                                                           has_initrd && has_autoyast\n+end\n+\n+Then(/^\"([^\"]*)\" virtual machine on \"([^\"]*)\" should boot on hard disk at next start$/) do |vm, host|\n+  node = get_target(host)\n+  output, _code = node.run(\"virsh dumpxml --inactive #{vm}\")\n+  tree = Nokogiri::XML(output)\n+  has_kernel = tree.xpath(\"//os/kernel\").size == 1\n+  has_initrd = tree.xpath(\"//os/initrd\").size == 1\n+  has_cmdline = tree.xpath(\"//os/cmdline\").size == 1\n+  raise 'Virtual machine will not boot on hard disk at next start' unless !has_kernel && \\\n+                                                                          !has_initrd && !has_cmdline\n+end\n+\n+Then(/^\"([^\"]*)\" virtual machine on \"([^\"]*)\" should (not stop|stop) on reboot((?: at next start)?)$/) do |vm, host, stop, next_start|\n+  node = get_target(host)\n+  inactive = next_start == \" at next start\" ? \"--inactive\" : \"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3NjM0Ng==", "bodyText": "Same here, we have information to provide the users to better understand why we raised that error, let's offer on_reboot value.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508276346", "createdAt": "2020-10-20T07:40:10Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -1201,6 +1201,38 @@\n   end\n end\n \n+Then(/^\"([^\"]*)\" virtual machine on \"([^\"]*)\" should boot using autoyast$/) do |vm, host|\n+  node = get_target(host)\n+  output, _code = node.run(\"virsh dumpxml #{vm}\")\n+  tree = Nokogiri::XML(output)\n+  has_kernel = tree.xpath(\"//os/kernel\").size == 1\n+  has_initrd = tree.xpath(\"//os/initrd\").size == 1\n+  has_autoyast = tree.xpath(\"//os/cmdline\")[0].to_s.include? ' autoyast='\n+  raise 'Wrong kernel/initrd/cmdline configuration' unless has_kernel && \\\n+                                                           has_initrd && has_autoyast\n+end\n+\n+Then(/^\"([^\"]*)\" virtual machine on \"([^\"]*)\" should boot on hard disk at next start$/) do |vm, host|\n+  node = get_target(host)\n+  output, _code = node.run(\"virsh dumpxml --inactive #{vm}\")\n+  tree = Nokogiri::XML(output)\n+  has_kernel = tree.xpath(\"//os/kernel\").size == 1\n+  has_initrd = tree.xpath(\"//os/initrd\").size == 1\n+  has_cmdline = tree.xpath(\"//os/cmdline\").size == 1\n+  raise 'Virtual machine will not boot on hard disk at next start' unless !has_kernel && \\\n+                                                                          !has_initrd && !has_cmdline\n+end\n+\n+Then(/^\"([^\"]*)\" virtual machine on \"([^\"]*)\" should (not stop|stop) on reboot((?: at next start)?)$/) do |vm, host, stop, next_start|\n+  node = get_target(host)\n+  inactive = next_start == \" at next start\" ? \"--inactive\" : \"\"\n+  output, _code = node.run(\"virsh dumpxml #{inactive} #{vm}\")\n+  tree = Nokogiri::XML(output)\n+  on_reboot = tree.xpath(\"//on_reboot\")[0].to_s\n+  raise \"Invalid reboot configuration #{next_start}\" unless />destroy</.match(on_reboot) && stop == \"stop\" || \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3NjYzNQ==", "bodyText": "very nice thanks :)", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508276635", "createdAt": "2020-10-20T07:40:39Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -456,10 +456,10 @@\n   find(css).set(PACKAGE_BY_CLIENT[client])\n end\n \n-When(/^I select \"([^\\\"]*)\" as a product$/) do |product|\n+When(/^I (deselect|select) \"([^\\\"]*)\" as a product$/) do |select, product|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MDA2Ng==", "bodyText": "I'm not very happy with this way of checking added channels, but... not for this PR.\nI would instead have a unique step definition, with a product name variable, then a map, where the product is the key and the list of channels are the value, and we just iterate on them.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508280066", "createdAt": "2020-10-20T07:46:06Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -546,6 +546,14 @@\n   raise unless output[:stdout].include? '[I] SLE-Module-Server-Applications15-Pool for x86_64 Server Applications Module 15 x86_64 [sle-module-server-applications15-pool-x86_64]'\n end\n \n+Then(/^the SLE15SP2 base products should be added$/) do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MjI4Mg==", "bodyText": "Take into account it will the default timeout on this find. Probably good, but just saying.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508282282", "createdAt": "2020-10-20T07:49:40Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/navigation_steps.rb", "diffHunk": "@@ -112,12 +112,23 @@\n \n Then(/^I wait until I see the (VNC|spice) graphical console$/) do |type|\n   repeat_until_timeout(message: \"The #{type} graphical console didn't load\") do\n-    break unless has_xpath?('.//canvas')\n+    break if find(:xpath, '//canvas')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MzMxOA==", "bodyText": "#{Failed to connect} very strange. What's that? A variable?", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508283318", "createdAt": "2020-10-20T07:51:17Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/navigation_steps.rb", "diffHunk": "@@ -112,12 +112,23 @@\n \n Then(/^I wait until I see the (VNC|spice) graphical console$/) do |type|\n   repeat_until_timeout(message: \"The #{type} graphical console didn't load\") do\n-    break unless has_xpath?('.//canvas')\n+    break if find(:xpath, '//canvas')\n+\n+    # If the connection failed try reloading since the VM may not have been ready\n+    if find(:xpath, \"//*[contains(@class, \\\"modal-title\\\") and text() = '#{Failed to connect}']\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4NTEwOQ==", "bodyText": "I discourage the use of direct URI, if there is a way to navigate through the menus, better use it, if not then fine.", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508285109", "createdAt": "2020-10-20T07:53:59Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/navigation_steps.rb", "diffHunk": "@@ -549,6 +564,10 @@\n   visit(\"https://#{$server.full_hostname}/rhn/kickstart/KickstartOverview.do\")\n end\n \n+When(/^I am on Autoinstallation Distributions page$/) do\n+  visit(\"https://#{$server.full_hostname}/rhn/kickstart/ViewTrees.do\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4NjE3Mg==", "bodyText": "Many thanks! :)", "url": "https://github.com/uyuni-project/uyuni/pull/2665#discussion_r508286172", "createdAt": "2020-10-20T07:55:43Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/support/twopence_init.rb", "diffHunk": "@@ -129,6 +129,9 @@ def get_target(host)\n # * for the PXE booted clients, it is derived from the branch name, the hardware type,\n #   and a fingerprint, e.g. example.Intel-Genuine-None-d6df84cca6f478cdafe824e35bbb6e3b\n def get_system_name(host)\n+  # If the system is not known, just return the parameter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dfa3f09f073239840386a3410631a43dcbee9043", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/dfa3f09f073239840386a3410631a43dcbee9043", "committedDate": "2020-10-19T16:24:19Z", "message": "testsuite: test VM provisioning on salt"}, "afterCommit": {"oid": "98c66da1a514a2d3159c22cb635bd367b7ad35e9", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/98c66da1a514a2d3159c22cb635bd367b7ad35e9", "committedDate": "2020-10-22T14:27:18Z", "message": "Better VM changes notifications in VirtualInstanceManager\n\nSo far VM refresh events where sent only when the plan was applied in\nVirtualInstanceManager. Send the refresh event in the functions actually\nadding / deleting / updating the VM in the database."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98c66da1a514a2d3159c22cb635bd367b7ad35e9", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/98c66da1a514a2d3159c22cb635bd367b7ad35e9", "committedDate": "2020-10-22T14:27:18Z", "message": "Better VM changes notifications in VirtualInstanceManager\n\nSo far VM refresh events where sent only when the plan was applied in\nVirtualInstanceManager. Send the refresh event in the functions actually\nadding / deleting / updating the VM in the database."}, "afterCommit": {"oid": "34b03d8c7a09f08d8461cd761932cbcbccce6121", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/34b03d8c7a09f08d8461cd761932cbcbccce6121", "committedDate": "2020-10-22T14:34:28Z", "message": "testsuite: test VM provisioning on salt"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34b03d8c7a09f08d8461cd761932cbcbccce6121", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/34b03d8c7a09f08d8461cd761932cbcbccce6121", "committedDate": "2020-10-22T14:34:28Z", "message": "testsuite: test VM provisioning on salt"}, "afterCommit": {"oid": "95e21563fa7d72295df816dd004d6ba0efe16607", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/95e21563fa7d72295df816dd004d6ba0efe16607", "committedDate": "2020-10-22T15:21:12Z", "message": "testsuite: test VM provisioning on salt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0ODU2MDg4", "url": "https://github.com/uyuni-project/uyuni/pull/2665#pullrequestreview-514856088", "createdAt": "2020-10-22T15:30:25Z", "commit": {"oid": "95e21563fa7d72295df816dd004d6ba0efe16607"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ecd66d5d9065e73d3d2520cc9a8612917ca1136", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/5ecd66d5d9065e73d3d2520cc9a8612917ca1136", "committedDate": "2020-10-22T16:36:09Z", "message": "Allow creating cobbler system profiles without an associated action\n\nWhen provisioning a virtual machine on a Salt minion, there will be no\nkickstart action associated with the CobblerVirtualSystemCommand object.\n\nIn such a case we don't need to set the VM hardware settings in the\nprofile since that will be handled by a Salt state rather than by the\ncobbler/koan pair."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "351ae7c853a4ff957e13343db6a6b4008ca365fc", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/351ae7c853a4ff957e13343db6a6b4008ca365fc", "committedDate": "2020-10-22T16:36:09Z", "message": "Extract reusable code from SaltServerActionService.autoinstallInitAction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d93d40132845f60b5560ea1dd43e4c2330a896c1", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d93d40132845f60b5560ea1dd43e4c2330a896c1", "committedDate": "2020-10-22T16:36:48Z", "message": "Allow backend to create VM using cobbler on Salt minions\n\nEnhance the VirtualizationCreateGuestAction to handle the creation of\nVMs using a cobbler profile.\n\nAlso improve the Salt state to force the VM to stop at the first reboot\nin order to avoid running the automated installation for ever.\n\nNote: this commit requires Salt minion to have the on_reboot parameter\non the virt.running state."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff6a9d2e5f2ba66ce28908607a0beac190e04b92", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ff6a9d2e5f2ba66ce28908607a0beac190e04b92", "committedDate": "2020-10-22T16:37:04Z", "message": "Enhance VM creation UI to boot using a cobbler profile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e3465bf93f9326ce05b0e41933065a12bb89dc6", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4e3465bf93f9326ce05b0e41933065a12bb89dc6", "committedDate": "2020-10-22T16:37:05Z", "message": "Guess VM boot devices\n\nIn order to boot from a CDROM ISO or using PXE, guess the boot devices order to set on the VM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c33fa5061179433ba0ff8d2434b10b2433869ce0", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c33fa5061179433ba0ff8d2434b10b2433869ce0", "committedDate": "2020-10-22T16:37:05Z", "message": "Watch for VM first reboot\n\nWhen creating a new VM using a CDROM ISO or a cobbler profile, we have\nto force the VM to shutdown at the first reboot. This is done using\nlibvirt's <on_reboot>destroy</on_reboot> configuration on the VM.\nHowever after this, the user would have to manually start the VM again.\n\nIn order to avoid the user to care about the manual restart, in the slt\nreactor we are detecting VMs defined with the on_reboot set to destroy,\nand then add those to a list of VMs to be watched. When the stopped\nevent is trapped we can then start it again."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f572cb92524ca612be0374cfe7e2270dccc8e0a4", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/f572cb92524ca612be0374cfe7e2270dccc8e0a4", "committedDate": "2020-10-22T16:37:05Z", "message": "testsuite: handle unknown twopence nodes in get_system_name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e22d506bc2fea4f31e960f8fe77dc0f65dc4612", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4e22d506bc2fea4f31e960f8fe77dc0f65dc4612", "committedDate": "2020-10-22T16:37:05Z", "message": "testsuite: fix compute_list_to_leave_running os_version tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9822ab63caaf8a50177a7395621c7962e1ebf38", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/e9822ab63caaf8a50177a7395621c7962e1ebf38", "committedDate": "2020-10-22T16:37:05Z", "message": "testsuite: add step to deselect a product"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "877288070e1f36b7b2ae343b9db93bd2b22c64a6", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/877288070e1f36b7b2ae343b9db93bd2b22c64a6", "committedDate": "2020-10-22T16:37:05Z", "message": "testsuite: fix graphical console tests\n\nThe graphical console tests were inverted, and thus not testing the\nfeature itself."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a9595065d8440f6ee8d3e00fe9c8e8c9dc341fb", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/9a9595065d8440f6ee8d3e00fe9c8e8c9dc341fb", "committedDate": "2020-10-22T16:37:06Z", "message": "remove non-virt related feature from virtualization run_set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6c20bdf6158016b9c92c41f0abde27a203045a7", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/e6c20bdf6158016b9c92c41f0abde27a203045a7", "committedDate": "2020-10-22T16:37:06Z", "message": "testsuite: add step entering text with newlines in text area\n\nIn order to be able to set a text in a field with a new line character,\nwe need to use Javascript. Since this is normally only done in text\nareas, add a text area related step for this. This also avoids\npotentially breaking the other uses of the existing step."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "561845118815451fda43677f205e1219706c13ac", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/561845118815451fda43677f205e1219706c13ac", "committedDate": "2020-10-22T16:37:06Z", "message": "testsuite: add @long_test flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9774cf5d723f54d41931dbbcc46991ca1f151b7", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/b9774cf5d723f54d41931dbbcc46991ca1f151b7", "committedDate": "2020-10-22T16:37:06Z", "message": "testsuite: reposync the sle 15-sp2 minimal products\n\nIn order to test the provisioning of VMs which will use the TFTP image\ninstalled on the server, we need the basesystem and manager tool repos\nmatching this OS version to be synced."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a58a3c4f7f66eaec9c928d99bb8af11d894ea8ef", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/a58a3c4f7f66eaec9c928d99bb8af11d894ea8ef", "committedDate": "2020-10-22T16:37:06Z", "message": "testsuite: test VM provisioning on salt"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95e21563fa7d72295df816dd004d6ba0efe16607", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/95e21563fa7d72295df816dd004d6ba0efe16607", "committedDate": "2020-10-22T15:21:12Z", "message": "testsuite: test VM provisioning on salt"}, "afterCommit": {"oid": "a58a3c4f7f66eaec9c928d99bb8af11d894ea8ef", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/a58a3c4f7f66eaec9c928d99bb8af11d894ea8ef", "committedDate": "2020-10-22T16:37:06Z", "message": "testsuite: test VM provisioning on salt"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1018, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}