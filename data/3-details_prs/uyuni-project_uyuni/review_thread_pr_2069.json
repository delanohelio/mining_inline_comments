{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NzQyODYx", "number": 2069, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODoxNTozMFrODs_ung==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODo1NTozNVrODtAp4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTA4MDYyOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/services/impl/SaltSSHService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODoxNTozMFrOF-KQsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOToxNjo1MVrOF-Mk2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyNDE0Ng==", "bodyText": "To be on the safe side, Ithe call to callSyncSSHInternal could be wrapped in a try { ... } finally { ... } block and the cleanup of the key moved inside finally { ... }.", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400724146", "createdAt": "2020-03-31T08:15:30Z", "author": {"login": "mateiw"}, "path": "java/code/src/com/suse/manager/webui/services/impl/SaltSSHService.java", "diffHunk": "@@ -559,9 +568,23 @@ private boolean addSaltSSHMinionsFromDb(SaltRoster roster) {\n                         roster,\n                         parameters.isIgnoreHostKeys(),\n                         isSudoUser(parameters.getUser()));\n+        tmpKeyFileAbsolutePath.ifPresent(path -> cleanUpTempKeyFile(path));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MjA3NQ==", "bodyText": "Great catch, fixed!", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400762075", "createdAt": "2020-03-31T09:16:51Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/services/impl/SaltSSHService.java", "diffHunk": "@@ -559,9 +568,23 @@ private boolean addSaltSSHMinionsFromDb(SaltRoster roster) {\n                         roster,\n                         parameters.isIgnoreHostKeys(),\n                         isSudoUser(parameters.getUser()));\n+        tmpKeyFileAbsolutePath.ifPresent(path -> cleanUpTempKeyFile(path));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyNDE0Ng=="}, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTEzMzg3OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/utils/gson/BootstrapHostsJson.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODoyOToxOFrOF-KypQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOToxNzowNlrOF-MlkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczMjgzNw==", "bodyText": "Nitpick: instead of new ArrayList<>() one could use Collections.emptyList().", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400732837", "createdAt": "2020-03-31T08:29:18Z", "author": {"login": "mateiw"}, "path": "java/code/src/com/suse/manager/webui/utils/gson/BootstrapHostsJson.java", "diffHunk": "@@ -57,8 +61,30 @@ public BootstrapHostsJson(String hostIn, Integer portIn, String userIn,\n         port = String.valueOf(portIn);\n         user = userIn;\n         password = passwordIn;\n-        activationKeys = StringUtils.isEmpty(activationKey) ?\n-                new ArrayList<>() : Arrays.asList(activationKey);\n+        activationKeys = StringUtils.isEmpty(activationKey) ? new ArrayList<>() : Arrays.asList(activationKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MjI1Nw==", "bodyText": "Good point. Changed.", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400762257", "createdAt": "2020-03-31T09:17:06Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/utils/gson/BootstrapHostsJson.java", "diffHunk": "@@ -57,8 +61,30 @@ public BootstrapHostsJson(String hostIn, Integer portIn, String userIn,\n         port = String.valueOf(portIn);\n         user = userIn;\n         password = passwordIn;\n-        activationKeys = StringUtils.isEmpty(activationKey) ?\n-                new ArrayList<>() : Arrays.asList(activationKey);\n+        activationKeys = StringUtils.isEmpty(activationKey) ? new ArrayList<>() : Arrays.asList(activationKey);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczMjgzNw=="}, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTEzNDg2OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/utils/gson/BootstrapHostsJson.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODoyOTozNlrOF-KzdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODoyOTozNlrOF-KzdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczMzA0NA==", "bodyText": "See nitpick above.", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400733044", "createdAt": "2020-03-31T08:29:36Z", "author": {"login": "mateiw"}, "path": "java/code/src/com/suse/manager/webui/utils/gson/BootstrapHostsJson.java", "diffHunk": "@@ -57,8 +61,30 @@ public BootstrapHostsJson(String hostIn, Integer portIn, String userIn,\n         port = String.valueOf(portIn);\n         user = userIn;\n         password = passwordIn;\n-        activationKeys = StringUtils.isEmpty(activationKey) ?\n-                new ArrayList<>() : Arrays.asList(activationKey);\n+        activationKeys = StringUtils.isEmpty(activationKey) ? new ArrayList<>() : Arrays.asList(activationKey);\n+        proxy = proxyIn;\n+        ignoreHostKeys = true;\n+    }\n+\n+    /**\n+     * Constructor to be used for bootstrapping systems with SSH private key via API.\n+     *\n+     * @param hostIn target host\n+     * @param portIn SSH port\n+     * @param userIn SSH user\n+     * @param privKeyIn SSH private key in PEM format\n+     * @param privKeyPwdIn SSH private key passphrase (empty/null string = no passphrase)\n+     * @param activationKey activation key\n+     * @param proxyIn system ID of proxy server to use\n+     */\n+    public BootstrapHostsJson(String hostIn, Integer portIn, String userIn,\n+            String privKeyIn, String privKeyPwdIn, String activationKey, Long proxyIn) {\n+        host = hostIn;\n+        port = String.valueOf(portIn);\n+        user = userIn;\n+        privKey = Optional.of(privKeyIn);\n+        privKeyPwd = StringUtils.isEmpty(privKeyPwdIn) ? empty() : Optional.of(privKeyPwdIn);\n+        activationKeys = StringUtils.isEmpty(activationKey) ? new ArrayList<>() : Arrays.asList(activationKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTIzMjM1OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/services/impl/runner/MgrUtilRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODo1NTozNVrOF-Lx2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOToxNzoxNVrOF-Ml9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc0OTAxOA==", "bodyText": "MgrUtilRunner is a wrapper for our custom mgrutil runner. Since these methods don't actually call a function from the runner I think they belong somewhere else, maybe in SaltService.", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400749018", "createdAt": "2020-03-31T08:55:35Z", "author": {"login": "mateiw"}, "path": "java/code/src/com/suse/manager/webui/services/impl/runner/MgrUtilRunner.java", "diffHunk": "@@ -160,4 +160,51 @@ public static ExecResult success() {\n         return call;\n     }\n \n+    /**\n+     * {@link RunnerCall} for writing into a text file.\n+     * The result of the call is a text description with how many lines were written.\n+     *\n+     * @param absolutePath the file path\n+     * @param contents the file text contents\n+     * @return the runner call\n+     */\n+    public static RunnerCall<String> writeTextFile(String absolutePath, String contents) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MjM1OA==", "bodyText": "I see. I got confused by the class javadoc. The methods should be definitely moved, but I think I'll put the calls to a separate class.", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400762358", "createdAt": "2020-03-31T09:17:15Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/services/impl/runner/MgrUtilRunner.java", "diffHunk": "@@ -160,4 +160,51 @@ public static ExecResult success() {\n         return call;\n     }\n \n+    /**\n+     * {@link RunnerCall} for writing into a text file.\n+     * The result of the call is a text description with how many lines were written.\n+     *\n+     * @param absolutePath the file path\n+     * @param contents the file text contents\n+     * @return the runner call\n+     */\n+    public static RunnerCall<String> writeTextFile(String absolutePath, String contents) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc0OTAxOA=="}, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 52, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}