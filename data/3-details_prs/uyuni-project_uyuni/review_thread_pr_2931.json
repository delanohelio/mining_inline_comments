{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NDQyNTg2", "number": 2931, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTo1MToxOVrOE_N8mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTo1MToxOVrOE_N8mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzI0MjUxOnYy", "diffSide": "RIGHT", "path": "web/html/src/components/table/Table.test.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTo1MToxOVrOH8zd7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTo1MToxOVrOH8zd7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUxOTg1NA==", "bodyText": "Realistically this is redundant with the waitForElementToBeRemoved, but I think it's completely fine to be verbose here with the intention. Looks good to me. \ud83d\udc4d\nIn the long run, I would hope a smoother abstraction around loading will emerge as we write more tests for the table, but time will tell.", "url": "https://github.com/uyuni-project/uyuni/pull/2931#discussion_r533519854", "createdAt": "2020-12-01T15:51:19Z", "author": {"login": "Etheryte"}, "path": "web/html/src/components/table/Table.test.js", "diffHunk": "@@ -117,4 +117,28 @@ describe(\"Table component\", () => {\n       })\n     ).not.toBe(null);\n   });\n+\n+  test(\"loading indicator for tables using SimpleDataProvider\", async () => {\n+    const data = [{value: \"Value 0\"}];\n+\n+    const { rerender } = render(\n+      <Table {...baseProps} loading={true} />\n+    );\n+\n+    // Check if loading indicator appears\n+    expect(screen.queryByText(baseProps.loadingText)).not.toBe(null);\n+\n+    rerender(\n+      <Table {...baseProps} data={data} loading={false} >\n+        <Column columnKey=\"value\" cell={item => item.value} />\n+      </Table>\n+    );\n+    await waitForElementToBeRemoved(() =>\n+      screen.queryByText(baseProps.loadingText)\n+    );\n+\n+    // Check if loading indicator disappears and data is displayed\n+    expect(screen.queryByText(baseProps.loadingText)).toBe(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9497fe9838e7dc6de5c8012da2445f98ea0e6cca"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3831, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}