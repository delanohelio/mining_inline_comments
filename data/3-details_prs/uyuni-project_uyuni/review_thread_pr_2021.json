{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MzUzMzMw", "number": 2021, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxNDowMVrODotwaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxNjoyNlrODotz8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDE5MzA1OnYy", "diffSide": "RIGHT", "path": "backend/server/importlib/headerSource.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxNDowMVrOF3bn2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozNDo1OFrOF3ceXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2ODU3MQ==", "bodyText": "I think this is only initialized in case of a rpmBinaryPackage. When this is a rpmSourcePackage extra_tags is not part of the tagMap.\nI would suggest to do a similar thing as build_time which is available in both tagMaps.\nJust add extra_tags to rpmSourcePackage tagMap.\nclass rpmSourcePackage(SourcePackage, rpmPackage):\n    tagMap = rpmPackage.tagMap.copy()\n    tagMap.update({\n        'package_group': 'group',\n        'rpm_version': 'rpmversion',\n        'payload_size': 'archivesize',\n        'build_host': 'buildhost',\n        'build_time': 'buildtime',\n        'source_rpm': 'sourcerpm',\n        # Arrays: require a different mapping\n        # We set them differently\n        'package_size': None,\n        'org_id': None,\n        'md5sum': None,\n        'path': None,\n        # Unsupported\n        'payload_format': None,\n        'channels': None,\n        'package_id': None,\n    })", "url": "https://github.com/uyuni-project/uyuni/pull/2021#discussion_r393668571", "createdAt": "2020-03-17T13:14:01Z", "author": {"login": "mcalmer"}, "path": "backend/server/importlib/headerSource.py", "diffHunk": "@@ -98,8 +98,21 @@ def populate(self, header, size, checksum_type, checksum, path=None, org_id=None\n             self['payload_format'] = 'cpio'\n         if self['payload_size'] is None:\n             self['payload_size'] = 0\n+        # Extra tags\n+        self._populateExtraTags(header)\n+\n         return self\n \n+    def _populateExtraTags(self, header):\n+        \"\"\"\n+        Populate extra tags. Currently only \"modularitylabel\".\n+        \"\"\"\n+        mlabel = header.modularity_label()\n+        if mlabel is not None:\n+            self[\"extra_tags\"] = [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d33ce78f3b2bdd083bbb73d5ad7329462c4db3fa"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4MjUyNQ==", "bodyText": "@mcalmer Well, to be honest I am not sure why this is at all done that way. Normally, populator should either add stuff or not at all. And so the importer should .get(\"extra_tags, []) instead of checking \"if it is None? and if it is non-empty?\" and trying to iterate over e.g. int or float mistakenly put there and thus crash. \ud83d\ude09 Anyway, this is something to cleanup in a future.\nFor now I've added \"extra_tags\": None, similar as it is implemented for Debian, but I think this is a wrong approach.", "url": "https://github.com/uyuni-project/uyuni/pull/2021#discussion_r393682525", "createdAt": "2020-03-17T13:34:58Z", "author": {"login": "isbm"}, "path": "backend/server/importlib/headerSource.py", "diffHunk": "@@ -98,8 +98,21 @@ def populate(self, header, size, checksum_type, checksum, path=None, org_id=None\n             self['payload_format'] = 'cpio'\n         if self['payload_size'] is None:\n             self['payload_size'] = 0\n+        # Extra tags\n+        self._populateExtraTags(header)\n+\n         return self\n \n+    def _populateExtraTags(self, header):\n+        \"\"\"\n+        Populate extra tags. Currently only \"modularitylabel\".\n+        \"\"\"\n+        mlabel = header.modularity_label()\n+        if mlabel is not None:\n+            self[\"extra_tags\"] = [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2ODU3MQ=="}, "originalCommit": {"oid": "d33ce78f3b2bdd083bbb73d5ad7329462c4db3fa"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDIwMDQ5OnYy", "diffSide": "RIGHT", "path": "uyuni/common-libs/common/rhn_rpm.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxNjowMlrOF3bslg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoyMTo0NVrOF3b7Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2OTc4Mg==", "bodyText": "You are missing an entry at uyuni-common-libs.changes", "url": "https://github.com/uyuni-project/uyuni/pull/2021#discussion_r393669782", "createdAt": "2020-03-17T13:16:02Z", "author": {"login": "juliogonzalez"}, "path": "uyuni/common-libs/common/rhn_rpm.py", "diffHunk": "@@ -47,6 +47,7 @@\n \n # need this for rpm-pyhon < 4.6 (e.g. on RHEL5)\n rpm.RPMTAG_FILEDIGESTALGO = 5011\n+rpm.RPMTAG_MODULARITYLABEL = 5096", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d33ce78f3b2bdd083bbb73d5ad7329462c4db3fa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3Mjk3MQ==", "bodyText": "ah, different packages, right.", "url": "https://github.com/uyuni-project/uyuni/pull/2021#discussion_r393672971", "createdAt": "2020-03-17T13:20:51Z", "author": {"login": "isbm"}, "path": "uyuni/common-libs/common/rhn_rpm.py", "diffHunk": "@@ -47,6 +47,7 @@\n \n # need this for rpm-pyhon < 4.6 (e.g. on RHEL5)\n rpm.RPMTAG_FILEDIGESTALGO = 5011\n+rpm.RPMTAG_MODULARITYLABEL = 5096", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2OTc4Mg=="}, "originalCommit": {"oid": "d33ce78f3b2bdd083bbb73d5ad7329462c4db3fa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3MzU3MQ==", "bodyText": "done", "url": "https://github.com/uyuni-project/uyuni/pull/2021#discussion_r393673571", "createdAt": "2020-03-17T13:21:45Z", "author": {"login": "isbm"}, "path": "uyuni/common-libs/common/rhn_rpm.py", "diffHunk": "@@ -47,6 +47,7 @@\n \n # need this for rpm-pyhon < 4.6 (e.g. on RHEL5)\n rpm.RPMTAG_FILEDIGESTALGO = 5011\n+rpm.RPMTAG_MODULARITYLABEL = 5096", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2OTc4Mg=="}, "originalCommit": {"oid": "d33ce78f3b2bdd083bbb73d5ad7329462c4db3fa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDIwMjA4OnYy", "diffSide": "RIGHT", "path": "backend/spacewalk-backend.changes", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxNjoyNlrOF3btlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxNjoyNlrOF3btlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3MDAzOA==", "bodyText": "We need also a changelog entry for uyuni-common-libs", "url": "https://github.com/uyuni-project/uyuni/pull/2021#discussion_r393670038", "createdAt": "2020-03-17T13:16:26Z", "author": {"login": "mcalmer"}, "path": "backend/spacewalk-backend.changes", "diffHunk": "@@ -1,3 +1,5 @@\n+- Read MODULARITYLABEL tag from RPM packages", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d33ce78f3b2bdd083bbb73d5ad7329462c4db3fa"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 15, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}