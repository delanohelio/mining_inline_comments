{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4OTcyODQ5", "number": 2224, "reviewThreads": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMToyNjozNFrOD9wTAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDoxODoxMVrOEf7KDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDgxMDI2OnYy", "diffSide": "RIGHT", "path": "testsuite/features/core/srv_docker.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMToyNjozNFrOGXb6KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowMjoxNFrOGZYPaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyNzY4OQ==", "bodyText": "English, not computese, please \ud83d\ude38\nAnd I enter the registry's URI as \"uri\"", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427227689", "createdAt": "2020-05-19T11:26:34Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/core/srv_docker.feature", "diffHunk": "@@ -40,7 +40,7 @@ Feature: Prepare server for using Docker\n     When I follow the left menu \"Images > Stores\"\n     And I follow \"Create\"\n     And I enter \"galaxy-registry\" as \"label\"\n-    And I enter \"registry.mgr.suse.de\" as \"uri\"\n+    And I enter the registry_uri as \"uri\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2NDc0NA==", "bodyText": "resolved", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r429264744", "createdAt": "2020-05-22T14:02:14Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/core/srv_docker.feature", "diffHunk": "@@ -40,7 +40,7 @@ Feature: Prepare server for using Docker\n     When I follow the left menu \"Images > Stores\"\n     And I follow \"Create\"\n     And I enter \"galaxy-registry\" as \"label\"\n-    And I enter \"registry.mgr.suse.de\" as \"uri\"\n+    And I enter the registry_uri as \"uri\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyNzY4OQ=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDgzMDc3OnYy", "diffSide": "RIGHT", "path": "testsuite/features/profiles/mgr.suse.de/Docker/authprofile/Dockerfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTozMjozNlrOGXcG1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowNToyMFrOGZYXSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzMDkzNA==", "bodyText": "What about making that filename independant of real host's hostname?\nPossible solution:\ntestsuite/features/profiles/Docker/internal_nue/authprofile/Dockerfile\nThat way, if it moves e.g. to docker.mgr.suse.de or docker.qa.suse.de or whatever else, we don't need to fix the test suite.", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427230934", "createdAt": "2020-05-19T11:32:36Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/profiles/mgr.suse.de/Docker/authprofile/Dockerfile", "diffHunk": "@@ -0,0 +1,20 @@\n+# Container used to test Content Management feature", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2Njc2MQ==", "bodyText": "Well, mgr.suse.de and prv.suse.net are not the hostnames. They describe already an area where they run. Using \"internal_nue\", \"internal_prv\" and \"external_aws\" ... would be another way.\nI think about the suggestion from @juliogonzalez to configure a common hostname in /etc/hosts and use everywhere the same hostname.\nI will try this first", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r429266761", "createdAt": "2020-05-22T14:05:20Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/profiles/mgr.suse.de/Docker/authprofile/Dockerfile", "diffHunk": "@@ -0,0 +1,20 @@\n+# Container used to test Content Management feature", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzMDkzNA=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDgzNzk1OnYy", "diffSide": "RIGHT", "path": "testsuite/features/profiles/mgr.suse.de/Kiwi/POS_Image-JeOS6_32/config.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTozNDozNVrOGXcLJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwOTo1NzoyMlrOHUGXoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzMjAzNg==", "bodyText": "Same suggestion:\nmake mgr.suse.de something less implementation-dependant, for example internal_nue", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427232036", "createdAt": "2020-05-19T11:34:35Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/profiles/mgr.suse.de/Kiwi/POS_Image-JeOS6_32/config.sh", "diffHunk": "@@ -0,0 +1,142 @@\n+#!/bin/bash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNzkyMQ==", "bodyText": "done", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r490837921", "createdAt": "2020-09-18T09:57:22Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/profiles/mgr.suse.de/Kiwi/POS_Image-JeOS6_32/config.sh", "diffHunk": "@@ -0,0 +1,142 @@\n+#!/bin/bash", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzMjAzNg=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDg2Njg2OnYy", "diffSide": "RIGHT", "path": "testsuite/features/profiles/prv.suse.net/Docker/Dockerfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo0Mjo0N1rOGXcc4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwOTo1ODoyMlrOHUGZdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzNjU3Nw==", "bodyText": "... and those ones would be internal_prv instead of prv.suse.net\n(or external_prv? not sure how this will be open to uyuni contributors)", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427236577", "createdAt": "2020-05-19T11:42:47Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/profiles/prv.suse.net/Docker/Dockerfile", "diffHunk": "@@ -0,0 +1,16 @@\n+FROM minima-mirror.prv.suse.net/toaster-sles12sp3-products", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzODM5MA==", "bodyText": "prv is still internal SUSE network. so it is internal_prv", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r490838390", "createdAt": "2020-09-18T09:58:22Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/profiles/prv.suse.net/Docker/Dockerfile", "diffHunk": "@@ -0,0 +1,16 @@\n+FROM minima-mirror.prv.suse.net/toaster-sles12sp3-products", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzNjU3Nw=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDg3NjQ4OnYy", "diffSide": "RIGHT", "path": "testsuite/features/secondary/srv_docker_advanced_content_management.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo0NTo0N1rOGXci9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowMTo1OFrOGZYO2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzODEzNA==", "bodyText": "English: the registry's URI", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427238134", "createdAt": "2020-05-19T11:45:47Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/secondary/srv_docker_advanced_content_management.feature", "diffHunk": "@@ -8,7 +8,7 @@ Feature: Advanced content management\n     When I follow the left menu \"Images > Stores\"\n     And I follow \"Create\"\n     And I enter \"docker_admin\" as \"label\"\n-    And I enter \"registry.mgr.suse.de\" as \"uri\"\n+    And I enter the registry_uri as \"uri\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2NDYwMQ==", "bodyText": "resolved", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r429264601", "createdAt": "2020-05-22T14:01:58Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/secondary/srv_docker_advanced_content_management.feature", "diffHunk": "@@ -8,7 +8,7 @@ Feature: Advanced content management\n     When I follow the left menu \"Images > Stores\"\n     And I follow \"Create\"\n     And I enter \"docker_admin\" as \"label\"\n-    And I enter \"registry.mgr.suse.de\" as \"uri\"\n+    And I enter the registry_uri as \"uri\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzODEzNA=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDg4MTAxOnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo0NzoxNlrOGXcluw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowMDo0NlrOGZYMNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzODg0Mw==", "bodyText": "See my remarks on sumaform PR: an alternative would be to make this server non-mandatory. In that case, that variable could be empty, and those whole tests would be skipped.", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427238843", "createdAt": "2020-05-19T11:47:16Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -56,7 +56,8 @@\n     # TODO: move that internal resource to some other external location\n     STDERR.puts 'Sanity check not implemented, move resource to external network first'\n   else\n-    url = 'https://portus.mgr.suse.de:5000'\n+    portus_uri = ENV['PORTUS_URI']", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2MzkyNw==", "bodyText": "I made both registries now optional. I added tags to exclude the tests.", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r429263927", "createdAt": "2020-05-22T14:00:46Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -56,7 +56,8 @@\n     # TODO: move that internal resource to some other external location\n     STDERR.puts 'Sanity check not implemented, move resource to external network first'\n   else\n-    url = 'https://portus.mgr.suse.de:5000'\n+    portus_uri = ENV['PORTUS_URI']", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzODg0Mw=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDg4Nzg1OnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo0OTowMlrOGXcpmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowMTowMFrOGZYM0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzOTgzNQ==", "bodyText": "That's what I suggested during standup: if we get a server in the Uyuni case,then this is not \"not implemented anymore\". In that case, just remove those lines (the whole \"uyuni\" case).", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427239835", "createdAt": "2020-05-19T11:49:02Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -56,7 +56,8 @@\n     # TODO: move that internal resource to some other external location\n     STDERR.puts 'Sanity check not implemented, move resource to external network first'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2NDA4Mw==", "bodyText": "done", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r429264083", "createdAt": "2020-05-22T14:01:00Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -56,7 +56,8 @@\n     # TODO: move that internal resource to some other external location\n     STDERR.puts 'Sanity check not implemented, move resource to external network first'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzOTgzNQ=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDg5MTY2OnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo1MDoxMFrOGXcsDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowMToxMlrOGZYNPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0MDQ2Mg==", "bodyText": "Same remark: isn't that done now? If so, please remove this error message (the whole \"Uyuni\" case).", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427240462", "createdAt": "2020-05-19T11:50:10Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -66,7 +67,8 @@\n     # TODO: move that internal resource to some other external location\n     STDERR.puts 'Sanity check not implemented, move resource to external network first'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2NDE5MA==", "bodyText": "resolved", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r429264190", "createdAt": "2020-05-22T14:01:12Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -66,7 +67,8 @@\n     # TODO: move that internal resource to some other external location\n     STDERR.puts 'Sanity check not implemented, move resource to external network first'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0MDQ2Mg=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDg5NjA3OnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo1MToyNFrOGXcu3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowMToyM1rOGZYNow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0MTE4MA==", "bodyText": "Same remark: if we make it non-mandatory in sumaform, then it's possible this variable is just empty. If that's the case, we just skip the tests implying a registry.", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427241180", "createdAt": "2020-05-19T11:51:24Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -66,7 +67,8 @@\n     # TODO: move that internal resource to some other external location\n     STDERR.puts 'Sanity check not implemented, move resource to external network first'\n   else\n-    url = 'https://registry.mgr.suse.de:443'\n+    registry_uri = ENV['REGISTRY_URI']", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2NDI5MQ==", "bodyText": "resolved", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r429264291", "createdAt": "2020-05-22T14:01:23Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -66,7 +67,8 @@\n     # TODO: move that internal resource to some other external location\n     STDERR.puts 'Sanity check not implemented, move resource to external network first'\n   else\n-    url = 'https://registry.mgr.suse.de:443'\n+    registry_uri = ENV['REGISTRY_URI']", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0MTE4MA=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDg5ODE5OnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo1MTo1OVrOGXcwKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyODoxOVrOGZXDcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0MTUxNA==", "bodyText": "why not make https:// part of the variable's content?", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427241514", "createdAt": "2020-05-19T11:51:59Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -66,7 +67,8 @@\n     # TODO: move that internal resource to some other external location\n     STDERR.puts 'Sanity check not implemented, move resource to external network first'\n   else\n-    url = 'https://registry.mgr.suse.de:443'\n+    registry_uri = ENV['REGISTRY_URI']\n+    url = \"https://#{registry_uri}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0NTI5OA==", "bodyText": "It does not work in docker. That part is used directly for tagging and things like that.\nhttps:// would break it.", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r429245298", "createdAt": "2020-05-22T13:28:19Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -66,7 +67,8 @@\n     # TODO: move that internal resource to some other external location\n     STDERR.puts 'Sanity check not implemented, move resource to external network first'\n   else\n-    url = 'https://registry.mgr.suse.de:443'\n+    registry_uri = ENV['REGISTRY_URI']\n+    url = \"https://#{registry_uri}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0MTUxNA=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDg5OTUwOnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/navigation_steps.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo1MjoxNlrOGXcw4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowMTo0MVrOGZYOSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0MTY5Nw==", "bodyText": "No technicalities in cucumber text :-) registry's URI", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r427241697", "createdAt": "2020-05-19T11:52:16Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/navigation_steps.rb", "diffHunk": "@@ -163,6 +163,11 @@\n   end\n end\n \n+When(/^I enter the registry_uri as \"([^\"]*)\"$/) do |arg1|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2NDQ1OQ==", "bodyText": "resolved", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r429264459", "createdAt": "2020-05-22T14:01:41Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/step_definitions/navigation_steps.rb", "diffHunk": "@@ -163,6 +163,11 @@\n   end\n end\n \n+When(/^I enter the registry_uri as \"([^\"]*)\"$/) do |arg1|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0MTY5Nw=="}, "originalCommit": {"oid": "5d0dd700224ad069a2ea2548a14f1393b6a05c14"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTc3MjQzOnYy", "diffSide": "RIGHT", "path": "testsuite/features/core/allcli_sanity.feature", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNDowNVrOG4OKow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNDowNVrOG4OKow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwNTUzOQ==", "bodyText": "When I configure, upper case \"I\"", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r461605539", "createdAt": "2020-07-28T14:04:05Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/core/allcli_sanity.feature", "diffHunk": "@@ -56,5 +56,13 @@ Feature: Sanity checks\n     And it should be possible to reach the build sources\n     And it should be possible to reach the container profiles\n     And it should be possible to reach the test suite profiles\n-    And it should be possible to reach the portus registry\n-    And it should be possible to reach the other registry\n+\n+@auth_registry\n+  Scenario: The registry with authentication is healthy\n+    When i configure the global portus registry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTc3MzUzOnYy", "diffSide": "RIGHT", "path": "testsuite/features/core/allcli_sanity.feature", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNDoyMVrOG4OLXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNDoyMVrOG4OLXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwNTcyNA==", "bodyText": "Upper case \"I\", please", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r461605724", "createdAt": "2020-07-28T14:04:21Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/core/allcli_sanity.feature", "diffHunk": "@@ -56,5 +56,13 @@ Feature: Sanity checks\n     And it should be possible to reach the build sources\n     And it should be possible to reach the container profiles\n     And it should be possible to reach the test suite profiles\n-    And it should be possible to reach the portus registry\n-    And it should be possible to reach the other registry\n+\n+@auth_registry\n+  Scenario: The registry with authentication is healthy\n+    When i configure the global portus registry\n+    Then it should be possible to reach the portus registry\n+\n+@noauth_registry\n+  Scenario: The registry without authentication is healthy\n+    When i configure the global registry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTc3NTUwOnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNDo0NVrOG4OMlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNDo0NVrOG4OMlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwNjAzOQ==", "bodyText": "Upper case \"I\"", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r461606039", "createdAt": "2020-07-28T14:04:45Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -51,24 +51,44 @@\n   $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n end\n \n-Then(/^it should be possible to reach the portus registry$/) do\n-  if $product == 'Uyuni'\n-    # TODO: move that internal resource to some other external location\n-    STDERR.puts 'Sanity check not implemented, move resource to external network first'\n-  else\n-    url = 'https://portus.mgr.suse.de:5000'\n-    $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n+When(/^i configure the global portus registry$/) do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTc3NjM3OnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNDo1NlrOG4ONIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNDo1NlrOG4ONIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwNjE3OQ==", "bodyText": "same", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r461606179", "createdAt": "2020-07-28T14:04:56Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -51,24 +51,44 @@\n   $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n end\n \n-Then(/^it should be possible to reach the portus registry$/) do\n-  if $product == 'Uyuni'\n-    # TODO: move that internal resource to some other external location\n-    STDERR.puts 'Sanity check not implemented, move resource to external network first'\n-  else\n-    url = 'https://portus.mgr.suse.de:5000'\n-    $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n+When(/^i configure the global portus registry$/) do\n+  registry, _extra = $auth_registry.split(/[:\\/]/, 2)\n+  step %(i configure the \"#{registry}\" as \"portus.localnet\" registry)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTc3NzI3OnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNToxMFrOG4ONvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNToxMFrOG4ONvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwNjMzMw==", "bodyText": "same", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r461606333", "createdAt": "2020-07-28T14:05:10Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -51,24 +51,44 @@\n   $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n end\n \n-Then(/^it should be possible to reach the portus registry$/) do\n-  if $product == 'Uyuni'\n-    # TODO: move that internal resource to some other external location\n-    STDERR.puts 'Sanity check not implemented, move resource to external network first'\n-  else\n-    url = 'https://portus.mgr.suse.de:5000'\n-    $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n+When(/^i configure the global portus registry$/) do\n+  registry, _extra = $auth_registry.split(/[:\\/]/, 2)\n+  step %(i configure the \"#{registry}\" as \"portus.localnet\" registry)\n+  $auth_registry = $auth_registry.sub(registry.to_s, \"portus.localnet\")\n+end\n+\n+When(/^i configure the global registry$/) do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTc3Nzg1OnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNToxOFrOG4OOGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNToxOFrOG4OOGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwNjQyNA==", "bodyText": "same", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r461606424", "createdAt": "2020-07-28T14:05:18Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -51,24 +51,44 @@\n   $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n end\n \n-Then(/^it should be possible to reach the portus registry$/) do\n-  if $product == 'Uyuni'\n-    # TODO: move that internal resource to some other external location\n-    STDERR.puts 'Sanity check not implemented, move resource to external network first'\n-  else\n-    url = 'https://portus.mgr.suse.de:5000'\n-    $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n+When(/^i configure the global portus registry$/) do\n+  registry, _extra = $auth_registry.split(/[:\\/]/, 2)\n+  step %(i configure the \"#{registry}\" as \"portus.localnet\" registry)\n+  $auth_registry = $auth_registry.sub(registry.to_s, \"portus.localnet\")\n+end\n+\n+When(/^i configure the global registry$/) do\n+  registry, _extra = $noauth_registry.split(/[:\\/]/, 2)\n+  step %(i configure the \"#{registry}\" as \"registry.localnet\" registry)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTc4NTMyOnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNjo1NlrOG4OSww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNjo1NlrOG4OSww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwNzYxOQ==", "bodyText": "same", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r461607619", "createdAt": "2020-07-28T14:06:56Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -51,24 +51,44 @@\n   $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n end\n \n-Then(/^it should be possible to reach the portus registry$/) do\n-  if $product == 'Uyuni'\n-    # TODO: move that internal resource to some other external location\n-    STDERR.puts 'Sanity check not implemented, move resource to external network first'\n-  else\n-    url = 'https://portus.mgr.suse.de:5000'\n-    $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n+When(/^i configure the global portus registry$/) do\n+  registry, _extra = $auth_registry.split(/[:\\/]/, 2)\n+  step %(i configure the \"#{registry}\" as \"portus.localnet\" registry)\n+  $auth_registry = $auth_registry.sub(registry.to_s, \"portus.localnet\")\n+end\n+\n+When(/^i configure the global registry$/) do\n+  registry, _extra = $noauth_registry.split(/[:\\/]/, 2)\n+  step %(i configure the \"#{registry}\" as \"registry.localnet\" registry)\n+  $noauth_registry = $noauth_registry.sub(registry.to_s, \"registry.localnet\")\n+end\n+\n+When(/^i configure the \"([^\"]*)\" as \"([^\"]*)\" registry$/) do |registry, newname|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTc4ODcwOnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/command_steps.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNzo0MVrOG4OVCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowNzo0MVrOG4OVCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwODIwMA==", "bodyText": "ok", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r461608200", "createdAt": "2020-07-28T14:07:41Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -51,24 +51,44 @@\n   $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n end\n \n-Then(/^it should be possible to reach the portus registry$/) do\n-  if $product == 'Uyuni'\n-    # TODO: move that internal resource to some other external location\n-    STDERR.puts 'Sanity check not implemented, move resource to external network first'\n-  else\n-    url = 'https://portus.mgr.suse.de:5000'\n-    $server.run(\"curl --insecure --location #{url} --output /dev/null\")\n+When(/^i configure the global portus registry$/) do\n+  registry, _extra = $auth_registry.split(/[:\\/]/, 2)\n+  step %(i configure the \"#{registry}\" as \"portus.localnet\" registry)\n+  $auth_registry = $auth_registry.sub(registry.to_s, \"portus.localnet\")\n+end\n+\n+When(/^i configure the global registry$/) do\n+  registry, _extra = $noauth_registry.split(/[:\\/]/, 2)\n+  step %(i configure the \"#{registry}\" as \"registry.localnet\" registry)\n+  $noauth_registry = $noauth_registry.sub(registry.to_s, \"registry.localnet\")\n+end\n+\n+When(/^i configure the \"([^\"]*)\" as \"([^\"]*)\" registry$/) do |registry, newname|\n+  out = `host #{registry}`.split(\"\\n\")\n+  out.each do |line|\n+    match = line.match(\"#{registry} has address (.*)\")\n+    if match && match[1]\n+      ipv4 = match[1]\n+      if not File.foreach(\"/etc/hosts\").grep(/#{ipv4} #{newname}/).any?\n+        open('/etc/hosts', 'a') { |f|\n+          f.puts \"#{ipv4} #{newname}\"\n+        }\n+      end\n+      $minion.run(\"grep '#{ipv4} #{newname}' /etc/hosts || echo '#{ipv4} #{newname}' >> /etc/hosts\")\n+      $server.run(\"grep '#{ipv4} #{newname}' /etc/hosts || echo '#{ipv4} #{newname}' >> /etc/hosts\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTc5OTQyOnYy", "diffSide": "RIGHT", "path": "testsuite/features/support/twopence_init.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDoxMDowMVrOG4OcJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMjo0MDozNlrOHULbDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMDAyMA==", "bodyText": "We could consider renaming PORTUS_URI and REGISTER_URI variables accordingly (to AUTH_REGISTERY and NOAUTH_REGISTERY), but that would mean changes in sumaform", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r461610020", "createdAt": "2020-07-28T14:10:01Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/support/twopence_init.rb", "diffHunk": "@@ -189,6 +189,8 @@ def file_inject(node, local_file, remote_file)\n $private_net = ENV['PRIVATENET'] if ENV['PRIVATENET']\n $mirror = ENV['MIRROR']\n $server_http_proxy = ENV['SERVER_HTTP_PROXY'] if ENV['SERVER_HTTP_PROXY']\n+$noauth_registry = ENV['REGISTRY_URI'] if ENV['REGISTRY_URI']\n+$auth_registry = ENV['PORTUS_URI'] if ENV['PORTUS_URI']", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkyMDcxNg==", "bodyText": "Done", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r490920716", "createdAt": "2020-09-18T12:40:36Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/support/twopence_init.rb", "diffHunk": "@@ -189,6 +189,8 @@ def file_inject(node, local_file, remote_file)\n $private_net = ENV['PRIVATENET'] if ENV['PRIVATENET']\n $mirror = ENV['MIRROR']\n $server_http_proxy = ENV['SERVER_HTTP_PROXY'] if ENV['SERVER_HTTP_PROXY']\n+$noauth_registry = ENV['REGISTRY_URI'] if ENV['REGISTRY_URI']\n+$auth_registry = ENV['PORTUS_URI'] if ENV['PORTUS_URI']", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMDAyMA=="}, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTA4NDQ5OnYy", "diffSide": "RIGHT", "path": "testsuite/features/profiles/mgr.suse.de/Docker/Dockerfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDoxMjozMFrOHMf1yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTowMDozNVrOHROk0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2NjYzMg==", "bodyText": "Warning just in case, apparently we use sles12sp3 image, but then in the line number 13, we add sles12sp4 repo, all right?", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r482866632", "createdAt": "2020-09-03T10:12:30Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/profiles/mgr.suse.de/Docker/Dockerfile", "diffHunk": "@@ -0,0 +1,16 @@\n+FROM registry.mgr.suse.de/toaster-sles12sp3-products", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyNjY0Mw==", "bodyText": "yes, all this is fake. We just want to see if we can build a container. We do not care if it is running.\nWhen there is time for refactoring, we can think about creating special containers for this test and special repos.\nI do not like so much, that we use toaster images.", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r487826643", "createdAt": "2020-09-14T11:00:35Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/profiles/mgr.suse.de/Docker/Dockerfile", "diffHunk": "@@ -0,0 +1,16 @@\n+FROM registry.mgr.suse.de/toaster-sles12sp3-products", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2NjYzMg=="}, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTEwNTQwOnYy", "diffSide": "RIGHT", "path": "testsuite/features/support/env.rb", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDoxODoxMVrOHMgCCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMjoxMTo0MlrOHUKizw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2OTc2OQ==", "bodyText": "Can I ask to use no_auth_registry instead?\nFrom my point of view, either we separate all the words with a _  either we don't separate them.", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r482869769", "createdAt": "2020-09-03T10:18:11Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/support/env.rb", "diffHunk": "@@ -254,6 +254,16 @@ def enable_assertions\n   skip_this_scenario unless $server_http_proxy\n end\n \n+# do test only if the registry is available\n+Before('@noauth_registry') do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3Mjc1NQ==", "bodyText": "+1", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r482872755", "createdAt": "2020-09-03T10:23:56Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/support/env.rb", "diffHunk": "@@ -254,6 +254,16 @@ def enable_assertions\n   skip_this_scenario unless $server_http_proxy\n end\n \n+# do test only if the registry is available\n+Before('@noauth_registry') do", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2OTc2OQ=="}, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkwNjMxOQ==", "bodyText": "done", "url": "https://github.com/uyuni-project/uyuni/pull/2224#discussion_r490906319", "createdAt": "2020-09-18T12:11:42Z", "author": {"login": "mcalmer"}, "path": "testsuite/features/support/env.rb", "diffHunk": "@@ -254,6 +254,16 @@ def enable_assertions\n   skip_this_scenario unless $server_http_proxy\n end\n \n+# do test only if the registry is available\n+Before('@noauth_registry') do", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2OTc2OQ=="}, "originalCommit": {"oid": "12dfbd3bef1ee9d9b95e6628b6bc92f264d66a52"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4412, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}