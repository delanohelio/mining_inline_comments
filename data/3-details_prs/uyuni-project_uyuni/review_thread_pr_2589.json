{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzODU3MTE0", "number": 2589, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMzo1NDoyOFrOEiIVRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMzo1NDoyOFrOEiIVRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MjIzNTU2OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMzo1NDoyOFrOHP1LiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxNToyOFrOHQVqTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM2MTk5Mg==", "bodyText": "I think we might need to do some recursive lookup here, as the original can also be a clone \ud83d\ude04\n(You can test, that it fails using 2 environments in the CLM project we discussed).\nMaybe there is even some helper method somewhere in the code, I'll try to check that.", "url": "https://github.com/uyuni-project/uyuni/pull/2589#discussion_r486361992", "createdAt": "2020-09-10T13:54:28Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -521,7 +521,10 @@ private String populateRequestFromAction(HttpServletRequest request, RequestCont\n         List<Long> channelIds = channels.stream().map(Channel::getId).collect(Collectors.toList());\n         List<EssentialChannelDto> childChannels = getChannelDTOs(ctx, baseChannel, channelIds);\n \n-        SUSEProduct baseProduct = SUSEProductFactory.lookupByChannelName(baseChannel.getName()).get(0).getRootProduct();\n+        // Get name of original base channel if channel is cloned\n+        String origBaseChannelName = (baseChannel.isCloned() ? baseChannel.getOriginal() : baseChannel).getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b868840cdd85bf5ecf8b057a46815c976fffaab"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM3NzUwNg==", "bodyText": "You can give the ChannelManager.getOriginalChannela shot!", "url": "https://github.com/uyuni-project/uyuni/pull/2589#discussion_r486377506", "createdAt": "2020-09-10T14:13:34Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -521,7 +521,10 @@ private String populateRequestFromAction(HttpServletRequest request, RequestCont\n         List<Long> channelIds = channels.stream().map(Channel::getId).collect(Collectors.toList());\n         List<EssentialChannelDto> childChannels = getChannelDTOs(ctx, baseChannel, channelIds);\n \n-        SUSEProduct baseProduct = SUSEProductFactory.lookupByChannelName(baseChannel.getName()).get(0).getRootProduct();\n+        // Get name of original base channel if channel is cloned\n+        String origBaseChannelName = (baseChannel.isCloned() ? baseChannel.getOriginal() : baseChannel).getName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM2MTk5Mg=="}, "originalCommit": {"oid": "0b868840cdd85bf5ecf8b057a46815c976fffaab"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5NDE1Ng==", "bodyText": "Indeed you were right. Channel.getOriginal only returns the direct predecessor.\nChannelManager.getOriginalChannel returns the original even in case of nested cloning.\nTYVM for pointing this out. This problem did not come to my mind.", "url": "https://github.com/uyuni-project/uyuni/pull/2589#discussion_r486894156", "createdAt": "2020-09-11T09:15:28Z", "author": {"login": "parlt91"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -521,7 +521,10 @@ private String populateRequestFromAction(HttpServletRequest request, RequestCont\n         List<Long> channelIds = channels.stream().map(Channel::getId).collect(Collectors.toList());\n         List<EssentialChannelDto> childChannels = getChannelDTOs(ctx, baseChannel, channelIds);\n \n-        SUSEProduct baseProduct = SUSEProductFactory.lookupByChannelName(baseChannel.getName()).get(0).getRootProduct();\n+        // Get name of original base channel if channel is cloned\n+        String origBaseChannelName = (baseChannel.isCloned() ? baseChannel.getOriginal() : baseChannel).getName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM2MTk5Mg=="}, "originalCommit": {"oid": "0b868840cdd85bf5ecf8b057a46815c976fffaab"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4022, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}