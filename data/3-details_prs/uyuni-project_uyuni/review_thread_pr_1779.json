{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNDQ0NDUx", "number": 1779, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToxNzoxMlrODXdJUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTowMzowNVrODbf0Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTIxMzYxOnYy", "diffSide": "RIGHT", "path": "schema/spacewalk/common/tables/rhnVirtualInstance.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToxNzoxMlrOFcwl9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToxNzoxMlrOFcwl9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMDU5Nw==", "bodyText": "Hmm, as for now we never used \"BOOLEAN\" in the DB. We always used CHAR(1) with 'Y' and 'N' value.\nThis was for oracle compatibility which is not needed anymore. But we use it everywhere. I would like to keep it for now and make an official discussion about what we want to do in future.\nAnd for backporting it is needed anyway.", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365700597", "createdAt": "2020-01-13T09:17:12Z", "author": {"login": "mcalmer"}, "path": "schema/spacewalk/common/tables/rhnVirtualInstance.sql", "diffHunk": "@@ -28,6 +28,7 @@ CREATE TABLE rhnVirtualInstance\n     uuid               VARCHAR2(128),\n     confirmed          NUMBER(1)\n                            DEFAULT (1) NOT NULL,\n+    payg               BOOLEAN,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b7d44c9ac77107d495014efb6b6666d0a4c7ee"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTIxNTEyOnYy", "diffSide": "RIGHT", "path": "schema/spacewalk/upgrade/susemanager-schema-4.1.1-to-susemanager-schema-4.1.2/100-add-payg-to-virtualinstance.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToxNzo1MVrOFcwm2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToxNzo1MVrOFcwm2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMDgyNw==", "bodyText": "See above - use CHAR(1) please", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365700827", "createdAt": "2020-01-13T09:17:51Z", "author": {"login": "mcalmer"}, "path": "schema/spacewalk/upgrade/susemanager-schema-4.1.1-to-susemanager-schema-4.1.2/100-add-payg-to-virtualinstance.sql", "diffHunk": "@@ -0,0 +1,3 @@\n+ALTER TABLE rhnVirtualInstance\n+    ADD COLUMN IF NOT EXISTS payg BOOLEAN", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b7d44c9ac77107d495014efb6b6666d0a4c7ee"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTIyNDE3OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/domain/server/VirtualInstance.hbm.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToyMToyN1rOFcwsVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToyMToyN1rOFcwsVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMjIzMA==", "bodyText": "Until now we never used real boolean. We used CHAR(1) and the schema say:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    <property name=\"payg\" column=\"PAYG\" type=\"boolean\"/>\n          \n          \n            \n                    <property name=\"payg\" type=\"yes_no\" column=\"PAYG\" />", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365702230", "createdAt": "2020-01-13T09:21:27Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/redhat/rhn/domain/server/VirtualInstance.hbm.xml", "diffHunk": "@@ -16,6 +16,7 @@ PUBLIC \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"\n \n         <property name=\"uuid\" column=\"UUID\" type=\"string\" length=\"128\"/>\n         <property name=\"confirmed\" column=\"CONFIRMED\" type=\"long\"/>\n+        <property name=\"payg\" column=\"PAYG\" type=\"boolean\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b7d44c9ac77107d495014efb6b6666d0a4c7ee"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTIzMTQ0OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/matcher/MatcherJsonIO.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToyNDoxOVrOFcwwoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjoxNDo0NlrOFiIjFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMzMyOQ==", "bodyText": "Hmm, We need to check if a PAYG subscription really obsolete all subscriptions.\nI could imagin that we do not need a SLES subscription, but what about a SUSE Manager Lifecycle Subscription?\n@joesusecom ?", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365703329", "createdAt": "2020-01-13T09:24:19Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/matcher/MatcherJsonIO.java", "diffHunk": "@@ -181,6 +182,7 @@ public MatcherJsonIO() {\n     private static Set<Long> getVirtualGuests(Server system) {\n         return system.getGuests().stream()\n             .filter(vi -> vi.getGuestSystem() != null)\n+            .filter(vi -> !vi.getPayg())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b7d44c9ac77107d495014efb6b6666d0a4c7ee"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM0MzQ0MA==", "bodyText": "CC @hustodemon @moio\nI talked to @BLandorff and this is a problem. None of the Payg instances has SUSE Manager Lifecycle Subscription included. If we would just remove them from the list we would do something wrong.\nI think we should list the system, but without \"product ids\". When we prepare the Json for the matcher we just add the Lifecycle product ids.\nCould this work?", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r367343440", "createdAt": "2020-01-16T10:32:49Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/matcher/MatcherJsonIO.java", "diffHunk": "@@ -181,6 +182,7 @@ public MatcherJsonIO() {\n     private static Set<Long> getVirtualGuests(Server system) {\n         return system.getGuests().stream()\n             .filter(vi -> vi.getGuestSystem() != null)\n+            .filter(vi -> !vi.getPayg())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMzMyOQ=="}, "originalCommit": {"oid": "e3b7d44c9ac77107d495014efb6b6666d0a4c7ee"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMzNTk1Ng==", "bodyText": "I've pushed the changes needed here.", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r371335956", "createdAt": "2020-01-27T16:14:46Z", "author": {"login": "meaksh"}, "path": "java/code/src/com/suse/manager/matcher/MatcherJsonIO.java", "diffHunk": "@@ -181,6 +182,7 @@ public MatcherJsonIO() {\n     private static Set<Long> getVirtualGuests(Server system) {\n         return system.getGuests().stream()\n             .filter(vi -> vi.getGuestSystem() != null)\n+            .filter(vi -> !vi.getPayg())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMzMyOQ=="}, "originalCommit": {"oid": "e3b7d44c9ac77107d495014efb6b6666d0a4c7ee"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTIzODcwOnYy", "diffSide": "RIGHT", "path": "susemanager-utils/susemanager-sls/src/grains/public_cloud.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToyNjo0MVrOFcw0yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDozNDozMVrOFcyqMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwNDM5Mg==", "bodyText": "Is the existance of this file sufficient to detect a PAYG instance? Does it work for all clouds?", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365704392", "createdAt": "2020-01-13T09:26:41Z", "author": {"login": "mcalmer"}, "path": "susemanager-utils/susemanager-sls/src/grains/public_cloud.py", "diffHunk": "@@ -111,3 +111,9 @@ def instance_id():\n     if INSTANCE_ID:\n         ret['instance_id'] = INSTANCE_ID\n     return ret\n+\n+def is_payg_instance():\n+    ret = {}\n+    if os.path.isfile('/usr/sbin/registercloudguest'):\n+        ret['is_payg_instance'] = True", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b7d44c9ac77107d495014efb6b6666d0a4c7ee"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxNTc5OQ==", "bodyText": "This is actually what \"SUSEConnect\" is currently doing to differentiate between BYOS and PAYG instances: SUSE/connect@6f26802#diff-ce4a8c41d114461bdba2a49aef6b34a2R55", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365715799", "createdAt": "2020-01-13T09:52:21Z", "author": {"login": "meaksh"}, "path": "susemanager-utils/susemanager-sls/src/grains/public_cloud.py", "diffHunk": "@@ -111,3 +111,9 @@ def instance_id():\n     if INSTANCE_ID:\n         ret['instance_id'] = INSTANCE_ID\n     return ret\n+\n+def is_payg_instance():\n+    ret = {}\n+    if os.path.isfile('/usr/sbin/registercloudguest'):\n+        ret['is_payg_instance'] = True", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwNDM5Mg=="}, "originalCommit": {"oid": "e3b7d44c9ac77107d495014efb6b6666d0a4c7ee"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNDQ1MQ==", "bodyText": "ok", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365734451", "createdAt": "2020-01-13T10:34:31Z", "author": {"login": "mcalmer"}, "path": "susemanager-utils/susemanager-sls/src/grains/public_cloud.py", "diffHunk": "@@ -111,3 +111,9 @@ def instance_id():\n     if INSTANCE_ID:\n         ret['instance_id'] = INSTANCE_ID\n     return ret\n+\n+def is_payg_instance():\n+    ret = {}\n+    if os.path.isfile('/usr/sbin/registercloudguest'):\n+        ret['is_payg_instance'] = True", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwNDM5Mg=="}, "originalCommit": {"oid": "e3b7d44c9ac77107d495014efb6b6666d0a4c7ee"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTc4ODIxOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/domain/server/VirtualInstance.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjo1Mzo0OFrOFc16Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjo1Mzo0OFrOFc16Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc4NzY5MQ==", "bodyText": "Nit: this null-check could be avoided if you used a primitive boolean attribute on L42 (not the boxed Boolean).", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365787691", "createdAt": "2020-01-13T12:53:48Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/domain/server/VirtualInstance.java", "diffHunk": "@@ -100,6 +101,26 @@ public void setConfirmed(Long isConfirmed) {\n         confirmed = isConfirmed;\n     }\n \n+    /**\n+     *\n+     * @return payg\n+     */\n+    public Boolean getPayg() {\n+        if (payg == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c19baa5bc6fb14ac4ce2fa61e634ed7b0b1bcb2"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTg3NTczOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/manager/system/VirtualInstanceManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzoyNDo0MFrOFc2teQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjoyODo0MVrOFiJD0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMDgyNQ==", "bodyText": "This method is called for each guest on a salt-based virtualization host, when the virtualization beacon fires. Doesn't this \"truncate\" payg flags  of all hosts to false?", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r365800825", "createdAt": "2020-01-13T13:24:40Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/manager/system/VirtualInstanceManager.java", "diffHunk": "@@ -317,6 +374,27 @@ public static void updateGuestVirtualInstance(VirtualInstance virtualInstance,\n     public static void updateGuestVirtualInstance(VirtualInstance virtualInstance,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c19baa5bc6fb14ac4ce2fa61e634ed7b0b1bcb2"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM0NDMzOQ==", "bodyText": "The PAYG attribute could only be true for Public Cloud instances (which can be PAYG or BYOS).\nIn case of a private cloud, all instances should be BYOS, therefore payg is set to false.", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r371344339", "createdAt": "2020-01-27T16:28:41Z", "author": {"login": "meaksh"}, "path": "java/code/src/com/redhat/rhn/manager/system/VirtualInstanceManager.java", "diffHunk": "@@ -317,6 +374,27 @@ public static void updateGuestVirtualInstance(VirtualInstance virtualInstance,\n     public static void updateGuestVirtualInstance(VirtualInstance virtualInstance,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMDgyNQ=="}, "originalCommit": {"oid": "0c19baa5bc6fb14ac4ce2fa61e634ed7b0b1bcb2"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzU4OTQwOnYy", "diffSide": "RIGHT", "path": "schema/spacewalk/common/tables/rhnVirtualInstance.sql", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNjo0Nzo0NFrOFiamHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozNTo1NlrOFih2fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYzMTY0Nw==", "bodyText": "As Joe has pointed out, AWS offers bare-metal PAYG instances as well, so this bit should not be in rhnVirtualInstance. I wonder if it makes sense to have a completely separate table (say rhnServerPAYG, with just a server_id column) or just add a column to rhnServer.", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r371631647", "createdAt": "2020-01-28T06:47:44Z", "author": {"login": "moio"}, "path": "schema/spacewalk/common/tables/rhnVirtualInstance.sql", "diffHunk": "@@ -28,6 +28,7 @@ CREATE TABLE rhnVirtualInstance\n     uuid               VARCHAR2(128),\n     confirmed          NUMBER(1)\n                            DEFAULT (1) NOT NULL,\n+    payg               CHAR(1) DEFAULT ('N') NOT NULL,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192cc3cc0aad98f2292e1bf0499b445a76b66a70"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3ODQ1MA==", "bodyText": "Hmm, if there are bare-metal instances it might make sense to add this to rhnServer directly.", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r371678450", "createdAt": "2020-01-28T09:07:28Z", "author": {"login": "mcalmer"}, "path": "schema/spacewalk/common/tables/rhnVirtualInstance.sql", "diffHunk": "@@ -28,6 +28,7 @@ CREATE TABLE rhnVirtualInstance\n     uuid               VARCHAR2(128),\n     confirmed          NUMBER(1)\n                            DEFAULT (1) NOT NULL,\n+    payg               CHAR(1) DEFAULT ('N') NOT NULL,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYzMTY0Nw=="}, "originalCommit": {"oid": "192cc3cc0aad98f2292e1bf0499b445a76b66a70"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4MjM5Mg==", "bodyText": "IIUC even for those bare-metal instances, there would be also an entry on rhnVirtualInstance table for this particular server (as we use that entry to match with their possible virtual guests). This table is not actually storing only \"virtual instances\" but it also contains entries for the \"virtualization hosts\". So the current design will still work even with bare-metal instances.\nBut, as you mentioned, it may make more sense to add this attribute directly in rhnServer table.\nIn any case, I don't think it's worth to create a complete new table just for storing this new attribute.", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r371682392", "createdAt": "2020-01-28T09:15:40Z", "author": {"login": "meaksh"}, "path": "schema/spacewalk/common/tables/rhnVirtualInstance.sql", "diffHunk": "@@ -28,6 +28,7 @@ CREATE TABLE rhnVirtualInstance\n     uuid               VARCHAR2(128),\n     confirmed          NUMBER(1)\n                            DEFAULT (1) NOT NULL,\n+    payg               CHAR(1) DEFAULT ('N') NOT NULL,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYzMTY0Nw=="}, "originalCommit": {"oid": "192cc3cc0aad98f2292e1bf0499b445a76b66a70"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4ODkxOQ==", "bodyText": "There would be other possible tables, but I am not sure if they are better or not.\nrhnServerInfo - has the checkin counter and date.\nsuseServer - maybe not a good idea. It is an enhancement of rhnServer for easier schema merging with upstream. Long term I plan to remove it an merge the needed values with rhnServer.\nSo I see two options: either rhnServer or rhnServerInfo", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r371688919", "createdAt": "2020-01-28T09:28:37Z", "author": {"login": "mcalmer"}, "path": "schema/spacewalk/common/tables/rhnVirtualInstance.sql", "diffHunk": "@@ -28,6 +28,7 @@ CREATE TABLE rhnVirtualInstance\n     uuid               VARCHAR2(128),\n     confirmed          NUMBER(1)\n                            DEFAULT (1) NOT NULL,\n+    payg               CHAR(1) DEFAULT ('N') NOT NULL,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYzMTY0Nw=="}, "originalCommit": {"oid": "192cc3cc0aad98f2292e1bf0499b445a76b66a70"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1MDUyNw==", "bodyText": "Ok, I've pushed the change to make the payg attribute part of the rhnServer table instead of rhnVirtualInstance.", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r371750527", "createdAt": "2020-01-28T11:35:56Z", "author": {"login": "meaksh"}, "path": "schema/spacewalk/common/tables/rhnVirtualInstance.sql", "diffHunk": "@@ -28,6 +28,7 @@ CREATE TABLE rhnVirtualInstance\n     uuid               VARCHAR2(128),\n     confirmed          NUMBER(1)\n                            DEFAULT (1) NOT NULL,\n+    payg               CHAR(1) DEFAULT ('N') NOT NULL,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYzMTY0Nw=="}, "originalCommit": {"oid": "192cc3cc0aad98f2292e1bf0499b445a76b66a70"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Nzg5Mzg1OnYy", "diffSide": "RIGHT", "path": "java/spacewalk-java.changes", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwOTowNjozMFrOFidbjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwOTowNjozMFrOFidbjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3ODA5Mg==", "bodyText": "This is not 100% true anymore as we do not fully exclude them. Maybe something like\nExclude products from PAYG ...", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r371678092", "createdAt": "2020-01-28T09:06:30Z", "author": {"login": "mcalmer"}, "path": "java/spacewalk-java.changes", "diffHunk": "@@ -1,3 +1,4 @@\n+- Exclude PAYG (Pay-As-You-Go) instances when doing subscription matching", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192cc3cc0aad98f2292e1bf0499b445a76b66a70"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTU4NzA3OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/domain/server/Server.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTowMDo0MFrOFjA3Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTowMDo0MFrOFjA3Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1ODYzMA==", "bodyText": "Nitpick:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setPayg(boolean isPAYG) {\n          \n          \n            \n                public void setPayg(boolean paygIn) {", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r372258630", "createdAt": "2020-01-29T09:00:40Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/domain/server/Server.java", "diffHunk": "@@ -2132,4 +2133,20 @@ public void setFqdns(Set<ServerFQDN> fqdnsIn) {\n     public boolean doesOsSupportsMonitoring() {\n         return false;\n     }\n+\n+    /**\n+     *\n+     * @return payg\n+     */\n+    public boolean isPayg() {\n+        return payg;\n+    }\n+\n+    /**\n+     *\n+     * @param isPAYG boolean\n+     */\n+    public void setPayg(boolean isPAYG) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1da87fb41bca450cbd9703aea9bbd90b4b3e9e5f"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTU5MjM5OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/matcher/MatcherJsonIO.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTowMjozMlrOFjA6kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOTowNToxM1rOFkqSlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1OTQ3Mg==", "bodyText": "@hustodemon this means that those systems will get no product rather than free products from the matcher's POV. Are you explicitly OK with that?", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r372259472", "createdAt": "2020-01-29T09:02:32Z", "author": {"login": "moio"}, "path": "java/code/src/com/suse/manager/matcher/MatcherJsonIO.java", "diffHunk": "@@ -350,7 +351,7 @@ public String generateMatcherInput(boolean includeSelf, String arch, boolean sel\n \n         // add SUSE Manager entitlements\n         return concat(\n-                products.stream().map(SUSEProduct::getProductId),\n+                server.isPayg() ? Stream.empty() : products.stream().map(SUSEProduct::getProductId),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1da87fb41bca450cbd9703aea9bbd90b4b3e9e5f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4MjE2OA==", "bodyText": "We had a discussion the other day together with @mcalmer and @hustodemon, and the conclusion was: for PAYG instances we only want to report the \"SUMA Lifecycle\" subscription and also the \"Monitoring\" one if that's the case. We're excluding all base installed products.", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r372282168", "createdAt": "2020-01-29T09:49:34Z", "author": {"login": "meaksh"}, "path": "java/code/src/com/suse/manager/matcher/MatcherJsonIO.java", "diffHunk": "@@ -350,7 +351,7 @@ public String generateMatcherInput(boolean includeSelf, String arch, boolean sel\n \n         // add SUSE Manager entitlements\n         return concat(\n-                products.stream().map(SUSEProduct::getProductId),\n+                server.isPayg() ? Stream.empty() : products.stream().map(SUSEProduct::getProductId),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1OTQ3Mg=="}, "originalCommit": {"oid": "1da87fb41bca450cbd9703aea9bbd90b4b3e9e5f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4NTk0Mg==", "bodyText": "Exactly, only the manager-related subscriptions (lifecycle + monitoring). That should be the goal.", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r373985942", "createdAt": "2020-02-03T09:05:13Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/matcher/MatcherJsonIO.java", "diffHunk": "@@ -350,7 +351,7 @@ public String generateMatcherInput(boolean includeSelf, String arch, boolean sel\n \n         // add SUSE Manager entitlements\n         return concat(\n-                products.stream().map(SUSEProduct::getProductId),\n+                server.isPayg() ? Stream.empty() : products.stream().map(SUSEProduct::getProductId),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1OTQ3Mg=="}, "originalCommit": {"oid": "1da87fb41bca450cbd9703aea9bbd90b4b3e9e5f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTU5Mzc5OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/reactor/hardware/HardwareMapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTowMzowNVrOFjA7dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTowMzowNVrOFjA7dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1OTcwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *", "url": "https://github.com/uyuni-project/uyuni/pull/1779#discussion_r372259703", "createdAt": "2020-01-29T09:03:05Z", "author": {"login": "moio"}, "path": "java/code/src/com/suse/manager/reactor/hardware/HardwareMapper.java", "diffHunk": "@@ -533,6 +533,14 @@ private boolean isVirtualGuest(String virtTypeLowerCase, String virtSubtype) {\n         return false;\n     }\n \n+    /**\n+     * Map PAYG information for the server to the database.\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1da87fb41bca450cbd9703aea9bbd90b4b3e9e5f"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 203, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}