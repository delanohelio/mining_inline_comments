{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NDMzNzI0", "number": 2218, "title": "Check for maintenance windows when scheduling actions", "bodyText": "What does this PR change?\nBefore scheduling an Action on a system, SUMA now performs a check, if the\nscheduling date/time is within maintenance windows. The check is only done for\nsystems that have some maint. schedule assigned and for actions that undergo\nmaintenance mode (e.g. salt states apply, not HW refresh).\nReview commit-by-commit is suggested.\nBehavior in the XMLRPC:\nA fault 13334 is thrown, offending schedules are reported\nBehavior in the UI\nInternal server error. This is expected, since in the (near) future, user will\nonly be able to schedule an action inside a maint. window, therefore\nout-of-maint-window situations are not expected in the UI.\nIf we need a graceful handling after all, I have some WIP code that handles\nthis in a sane way (both for Struts and React).\nGUI diff\nNo difference.\n\n DONE\n\nDocumentation\n\n\nDocumentation issue was created: Link for SUSE Manager contributors, Link for community contributors.\n\n\n(OPTIONAL) Documentation PR\n\n\n DONE\n\n\nTest coverage\n\n\nUnit tests were added\n\n\n DONE\n\n\nLinks\nTracks SUSE/spacewalk#11273\n\n DONE\n\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\" (Test skipped, there are no changes to test)\n Re-run test \"java_lint_checkstyle\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"ruby_rubocop\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\" (Test skipped, there are no changes to test)\n Re-run test \"javascript_lint\" (Test skipped, there are no changes to test)\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-05-15T07:51:15Z", "url": "https://github.com/uyuni-project/uyuni/pull/2218", "merged": true, "mergeCommit": {"oid": "62bbc6f6e9861acd7c0a8464f66823a173b5b4c0"}, "closed": true, "closedAt": "2020-05-19T11:29:59Z", "author": {"login": "hustodemon"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchd9c0gFqTQxMjQ0NjYwOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABciukASAH2gAyNDE4NDMzNzI0OmY5MzIzYTlmMzYzMDQyNzkxNWUxZGViOWJkZGU1ZjNhMDRiOWI5NWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNDQ2NjA5", "url": "https://github.com/uyuni-project/uyuni/pull/2218#pullrequestreview-412446609", "createdAt": "2020-05-15T08:26:53Z", "commit": {"oid": "8ac95299f92b76e04f50b67b93a5e82a8ef4afee"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwODoyNjo1NFrOGV7WhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwODozNTo1MVrOGV7prA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY0NTcwMA==", "bodyText": "See com/redhat/rhn/frontend/xmlrpc/exception_ranges.txt and enhace it please.\nWe could choose now also smaller numbers, but there was a \"SUSE Exceptions\" rage.\nNot sure if it would be better to take a number from there.", "url": "https://github.com/uyuni-project/uyuni/pull/2218#discussion_r425645700", "createdAt": "2020-05-15T08:26:54Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/maintenance/NotInMaintenanceModeException.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.suse.manager.maintenance;\n+\n+import com.redhat.rhn.FaultException;\n+\n+import com.suse.manager.model.maintenance.MaintenanceSchedule;\n+\n+import java.util.Date;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An {@link RuntimeException} bearing a set of {@link MaintenanceSchedule}s.\n+ *\n+ * Typically thrown, when scheduling an action at the date that doesn't fit to Maintenance window of\n+ * some systems.\n+ *\n+ * This exception also serves as a XMLRPC Fault\n+ */\n+public class NotInMaintenanceModeException extends FaultException {\n+\n+    /**\n+     * Standard constructor\n+     *\n+     * @param schedules the {@link MaintenanceSchedule}s\n+     * @param date the scheduling date\n+     */\n+    public NotInMaintenanceModeException(Set<MaintenanceSchedule> schedules, Date date) {\n+        super(1334,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ac95299f92b76e04f50b67b93a5e82a8ef4afee"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY0NjM4MQ==", "bodyText": "Seems all fault exceptions use \"camel case\". Please do the same.", "url": "https://github.com/uyuni-project/uyuni/pull/2218#discussion_r425646381", "createdAt": "2020-05-15T08:28:08Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/maintenance/NotInMaintenanceModeException.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.suse.manager.maintenance;\n+\n+import com.redhat.rhn.FaultException;\n+\n+import com.suse.manager.model.maintenance.MaintenanceSchedule;\n+\n+import java.util.Date;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An {@link RuntimeException} bearing a set of {@link MaintenanceSchedule}s.\n+ *\n+ * Typically thrown, when scheduling an action at the date that doesn't fit to Maintenance window of\n+ * some systems.\n+ *\n+ * This exception also serves as a XMLRPC Fault\n+ */\n+public class NotInMaintenanceModeException extends FaultException {\n+\n+    /**\n+     * Standard constructor\n+     *\n+     * @param schedules the {@link MaintenanceSchedule}s\n+     * @param date the scheduling date\n+     */\n+    public NotInMaintenanceModeException(Set<MaintenanceSchedule> schedules, Date date) {\n+        super(1334,\n+                \"not_in_maintenance\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ac95299f92b76e04f50b67b93a5e82a8ef4afee"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY0ODA1Mg==", "bodyText": "In most cases \"Fault\" exceptions are only thrown from inside of XMLRPC Handler classes. There are a few\nexceptions, but it seems some where from \"us\" and others have a special case where \"Command\" classes which may be used everywhere throw such exceptions.\nOn the other hand I do not see a big benefit in writing 2 Exceptions and convert one into the other.\nMaybe we need to discuss it with the team?", "url": "https://github.com/uyuni-project/uyuni/pull/2218#discussion_r425648052", "createdAt": "2020-05-15T08:31:06Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/maintenance/MaintenanceManager.java", "diffHunk": "@@ -93,6 +97,66 @@ public static MaintenanceManager instance() {\n         return instance;\n     }\n \n+    /**\n+     * Check if an action of given type can be scheduled at given date for given systems.\n+     * If some systems have a {@link MaintenanceSchedule} and are outside of their maintenance windows,\n+     * throw the {@link NotInMaintenanceModeException} that bears the offending schedules.\n+     *\n+     * @param systemIds the system IDs to check\n+     * @param date the schedule date of the action\n+     * @param actionType the type of action\n+     * @throws NotInMaintenanceModeException when some systems are outside of maintenance window\n+     */\n+    public void checkMaintenanceWindows(Set<Long> systemIds, Date date, ActionType actionType) {\n+        if (actionType.isMaintenancemodeOnly()) {\n+            Set<MaintenanceSchedule> offendingSchedules = listSystemSchedulesNotMachingDate(systemIds, date);\n+            if (!offendingSchedules.isEmpty()) {\n+                throw new NotInMaintenanceModeException(offendingSchedules, date);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ac95299f92b76e04f50b67b93a5e82a8ef4afee"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY1MDYwNA==", "bodyText": "I think the message is hard to understand. Not optimal, but maybe better:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String.format(\"Schedules '%s' are not matching date %s \",\n          \n          \n            \n                                    scheduleNames(schedules), date));\n          \n          \n            \n                            String.format(\"Systems assigned to these schedules (%s) do not have a maintenance window at %s\" ,\n          \n          \n            \n                                    scheduleNames(schedules), date));", "url": "https://github.com/uyuni-project/uyuni/pull/2218#discussion_r425650604", "createdAt": "2020-05-15T08:35:51Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/maintenance/NotInMaintenanceModeException.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.suse.manager.maintenance;\n+\n+import com.redhat.rhn.FaultException;\n+\n+import com.suse.manager.model.maintenance.MaintenanceSchedule;\n+\n+import java.util.Date;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An {@link RuntimeException} bearing a set of {@link MaintenanceSchedule}s.\n+ *\n+ * Typically thrown, when scheduling an action at the date that doesn't fit to Maintenance window of\n+ * some systems.\n+ *\n+ * This exception also serves as a XMLRPC Fault\n+ */\n+public class NotInMaintenanceModeException extends FaultException {\n+\n+    /**\n+     * Standard constructor\n+     *\n+     * @param schedules the {@link MaintenanceSchedule}s\n+     * @param date the scheduling date\n+     */\n+    public NotInMaintenanceModeException(Set<MaintenanceSchedule> schedules, Date date) {\n+        super(1334,\n+                \"not_in_maintenance\",\n+                String.format(\"Schedules '%s' are not matching date %s \",\n+                        scheduleNames(schedules), date));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ac95299f92b76e04f50b67b93a5e82a8ef4afee"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "029f9276462f4f78e5ea78a52156c52bdc601022", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/029f9276462f4f78e5ea78a52156c52bdc601022", "committedDate": "2020-05-18T07:50:59Z", "message": "Refactor: Extract exception-to-fault translation to a separate class"}, "afterCommit": {"oid": "300b7f658a4137e0f502fd43444a29adee5145d7", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/300b7f658a4137e0f502fd43444a29adee5145d7", "committedDate": "2020-05-18T08:32:00Z", "message": "Refactor: Extract exception-to-fault translation to a separate class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c936021117784e4654562cb76aeaf81fabc51039", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c936021117784e4654562cb76aeaf81fabc51039", "committedDate": "2020-05-18T08:39:08Z", "message": "Fix Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd90e9fd835a178302d7cb8febd64064e6bf79c6", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/cd90e9fd835a178302d7cb8febd64064e6bf79c6", "committedDate": "2020-05-18T08:39:08Z", "message": "Extract function for getting events at given time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7aec05c69a35761505a7dc29ea7cac308c850948", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/7aec05c69a35761505a7dc29ea7cac308c850948", "committedDate": "2020-05-18T08:39:08Z", "message": "Extract function for parsing calendar from string"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "423315d7bd4df3c5371b8933f6c73690e01ad5ab", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/423315d7bd4df3c5371b8933f6c73690e01ad5ab", "committedDate": "2020-05-18T08:39:09Z", "message": "Support checking for maintenance windows when scheduling actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "058824c167c149861602cb39c6c538a75fb06659", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/058824c167c149861602cb39c6c538a75fb06659", "committedDate": "2020-05-18T08:39:09Z", "message": "Check for maintenance windows when scheduling actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e31b14ddcf67e30ef0129b01ed7fc203669957e9", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/e31b14ddcf67e30ef0129b01ed7fc203669957e9", "committedDate": "2020-05-18T08:39:09Z", "message": "Test checking for maintenance windows when scheduling actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3aeb8780bdc0beaf7a27688ec4cad737d42939ac", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/3aeb8780bdc0beaf7a27688ec4cad737d42939ac", "committedDate": "2020-05-18T08:39:09Z", "message": "Minor: Rename function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4899e84edf5715648dea032d9a13cd7781d2c397", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4899e84edf5715648dea032d9a13cd7781d2c397", "committedDate": "2020-05-18T08:39:09Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1a6108d653c88e6a9479be2ab6dc3fe4d50bda2", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/e1a6108d653c88e6a9479be2ab6dc3fe4d50bda2", "committedDate": "2020-05-18T08:39:09Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ce3b51a69c7d82772f2bed000e194b16b31ae90", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/2ce3b51a69c7d82772f2bed000e194b16b31ae90", "committedDate": "2020-05-18T08:39:09Z", "message": "Don't make backend dependant on XMLRPC, handle the exception translation on XMLRPC side"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c414df748ea3a098fd29d3dff76349c2e15b117", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/5c414df748ea3a098fd29d3dff76349c2e15b117", "committedDate": "2020-05-18T08:39:10Z", "message": "Refactor: Extract exception-to-fault translation to a separate class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1e16b73be508b677fff5d8fa781e0545eab5bb4", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/b1e16b73be508b677fff5d8fa781e0545eab5bb4", "committedDate": "2020-05-18T08:37:43Z", "message": "Fix merge error"}, "afterCommit": {"oid": "5c414df748ea3a098fd29d3dff76349c2e15b117", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/5c414df748ea3a098fd29d3dff76349c2e15b117", "committedDate": "2020-05-18T08:39:10Z", "message": "Refactor: Extract exception-to-fault translation to a separate class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1153ad770395ea6d2a4372f02dd23ab6591284ed", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/1153ad770395ea6d2a4372f02dd23ab6591284ed", "committedDate": "2020-05-18T13:44:24Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88e8077bb44bdbcafaf64bfb2fd4c849e712a7f2", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/88e8077bb44bdbcafaf64bfb2fd4c849e712a7f2", "committedDate": "2020-05-18T13:47:46Z", "message": "Only check actions with no pre-requisites when checking for maintenance mode\n\n(i.e. don't check dependent actions in action chains)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eab730a219a22d431532ffa74e7a71d513663c96", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/eab730a219a22d431532ffa74e7a71d513663c96", "committedDate": "2020-05-18T13:46:39Z", "message": "Only check actions with no pre-requisites when checking for maintenance mode\n\n(i.e. don't check dependent actions in action chains)"}, "afterCommit": {"oid": "88e8077bb44bdbcafaf64bfb2fd4c849e712a7f2", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/88e8077bb44bdbcafaf64bfb2fd4c849e712a7f2", "committedDate": "2020-05-18T13:47:46Z", "message": "Only check actions with no pre-requisites when checking for maintenance mode\n\n(i.e. don't check dependent actions in action chains)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjQ2MDE5", "url": "https://github.com/uyuni-project/uyuni/pull/2218#pullrequestreview-413646019", "createdAt": "2020-05-18T14:25:39Z", "commit": {"oid": "88e8077bb44bdbcafaf64bfb2fd4c849e712a7f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoyNTozOVrOGW5mtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoyNTozOVrOGW5mtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2NTY1NA==", "bodyText": "It is now impossible to create actions in the wrong window. So we can ignore this test.", "url": "https://github.com/uyuni-project/uyuni/pull/2218#discussion_r426665654", "createdAt": "2020-05-18T14:25:39Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/maintenance/test/MaintenanceManagerTest.java", "diffHunk": "@@ -381,17 +381,15 @@ public void testScheduleChangeMultiWithCancel() throws Exception {\n         Action sapAction1 = createActionForServerAt(ActionFactory.TYPE_ERRATA, sapServer, \"2020-04-13T08:15:00+02:00\"); //moved\n         Action sapActionEx = createActionForServerAt(ActionFactory.TYPE_VIRTUALIZATION_START, sapServer, \"2020-04-13T08:15:00+02:00\"); //moved\n         Action sapAction2 = createActionForServerAt(ActionFactory.TYPE_ERRATA, sapServer, \"2020-04-27T08:15:00+02:00\"); //stay\n-        Action sapAction3 = createActionForServerAt(ActionFactory.TYPE_ERRATA, sapServer, \"2020-04-30T09:15:00+02:00\"); //wrong window (Core)\n         Action coreAction1 = createActionForServerAt(ActionFactory.TYPE_ERRATA, coreServer, \"2020-04-30T09:15:00+02:00\"); //stay\n         Action coreActionEx = createActionForServerAt(ActionFactory.TYPE_VIRTUALIZATION_START, coreServer, \"2020-05-21T09:15:00+02:00\"); //moved\n         Action coreAction2 = createActionForServerAt(ActionFactory.TYPE_ERRATA, coreServer, \"2020-05-21T09:15:00+02:00\"); //moved\n-        Action coreAction3 = createActionForServerAt(ActionFactory.TYPE_ERRATA, coreServer, \"2020-04-27T08:15:00+02:00\"); //wrong window (SAP)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e8077bb44bdbcafaf64bfb2fd4c849e712a7f2"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjQ2ODQ4", "url": "https://github.com/uyuni-project/uyuni/pull/2218#pullrequestreview-413646848", "createdAt": "2020-05-18T14:26:31Z", "commit": {"oid": "88e8077bb44bdbcafaf64bfb2fd4c849e712a7f2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9323a9f3630427915e1deb9bdde5f3a04b9b95d", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/f9323a9f3630427915e1deb9bdde5f3a04b9b95d", "committedDate": "2020-05-19T06:34:28Z", "message": "Fix tests\n\nThe ServerActionTest was failing because the \"mocked\" actions weren't\nsufficiently populated for maintenance windows checking."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1456, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}