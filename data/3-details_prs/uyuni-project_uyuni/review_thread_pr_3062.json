{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2OTk4MDUz", "number": 3062, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwOTozMzoyMFrOFK0elQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoxNzo0NFrOFLQkDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2ODg5ODc3OnYy", "diffSide": "RIGHT", "path": "web/html/src/components/input/Select.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwOTozMzoyMFrOINqyKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzoxNzoyOVrOIN6CCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwMzM2OA==", "bodyText": "Would recommend import ReactSelect from 'react-select'; instead unless there's a specific reason for importing this way here?", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551203368", "createdAt": "2021-01-04T09:33:20Z", "author": {"login": "Etheryte"}, "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -1,12 +1,23 @@\n // @flow\n \n import * as React from 'react';\n+import { default as ReactSelect } from 'react-select';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5f920c40c2a40be25aacc3fa82686115795a8f5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwOTMyMQ==", "bodyText": "The real thing to import is named Select and that would conflict with the name of the component that is exported in this JS module... The regular import is import Select from 'react-select'; but maybe I'm overlooking something.", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551209321", "createdAt": "2021-01-04T09:44:33Z", "author": {"login": "cbosdo"}, "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -1,12 +1,23 @@\n // @flow\n \n import * as React from 'react';\n+import { default as ReactSelect } from 'react-select';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwMzM2OA=="}, "originalCommit": {"oid": "a5f920c40c2a40be25aacc3fa82686115795a8f5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxNDE1Ng==", "bodyText": "Unless we have a linter rule that disallows it, importing the default export is already an alias, even without as. To shortly elaborate, all of these should be equivalent:\nimport Foo from 'somewhere';\nconst Bar = Foo;\n\nimport { default as Bar } from 'somewhere';\n\nimport Bar from 'somewhere';\nThe main benefit of aliasing imports with as is when you want to rename named exports:\nimport { tea as coffee } from 'somewhere';", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551214156", "createdAt": "2021-01-04T09:53:52Z", "author": {"login": "Etheryte"}, "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -1,12 +1,23 @@\n // @flow\n \n import * as React from 'react';\n+import { default as ReactSelect } from 'react-select';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwMzM2OA=="}, "originalCommit": {"oid": "a5f920c40c2a40be25aacc3fa82686115795a8f5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ1MzE5NA==", "bodyText": "addressed", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551453194", "createdAt": "2021-01-04T17:17:29Z", "author": {"login": "cbosdo"}, "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -1,12 +1,23 @@\n // @flow\n \n import * as React from 'react';\n+import { default as ReactSelect } from 'react-select';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwMzM2OA=="}, "originalCommit": {"oid": "a5f920c40c2a40be25aacc3fa82686115795a8f5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2ODkyMzc3OnYy", "diffSide": "RIGHT", "path": "web/html/src/components/input/Select.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwOTozOTo0NlrOINq_5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzoxNzo1M1rOIN6C2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNjg4Nw==", "bodyText": "I think this could be simplified a bit, right now we loop over options twice. Perhaps something along these lines?\nconst convertedOptions = (options || []).map(item => typeof item === 'string' ? { label: item, value: item } : item);\nUnless there's an additional edge case I missed here and options can also be something that isn't an array at all?", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551206887", "createdAt": "2021-01-04T09:39:46Z", "author": {"login": "Etheryte"}, "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -36,32 +47,49 @@ type Props = {\n export function Select(props: Props) {\n   const {\n     inputClass,\n-    children,\n+    options,\n+    getOptionLabel,\n+    getOptionValue,\n+    formatOptionLabel,\n+    placeholder,\n+    isClearable,\n     ...propsToPass\n   } = props;\n   const formContext = React.useContext(FormContext);\n+  const convertedOptions = options instanceof Array && options.every(item => !(item instanceof Object)) ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5f920c40c2a40be25aacc3fa82686115795a8f5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxMDM1MA==", "bodyText": "indeed", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551210350", "createdAt": "2021-01-04T09:46:24Z", "author": {"login": "cbosdo"}, "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -36,32 +47,49 @@ type Props = {\n export function Select(props: Props) {\n   const {\n     inputClass,\n-    children,\n+    options,\n+    getOptionLabel,\n+    getOptionValue,\n+    formatOptionLabel,\n+    placeholder,\n+    isClearable,\n     ...propsToPass\n   } = props;\n   const formContext = React.useContext(FormContext);\n+  const convertedOptions = options instanceof Array && options.every(item => !(item instanceof Object)) ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNjg4Nw=="}, "originalCommit": {"oid": "a5f920c40c2a40be25aacc3fa82686115795a8f5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ1MzQwMQ==", "bodyText": "done", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551453401", "createdAt": "2021-01-04T17:17:53Z", "author": {"login": "cbosdo"}, "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -36,32 +47,49 @@ type Props = {\n export function Select(props: Props) {\n   const {\n     inputClass,\n-    children,\n+    options,\n+    getOptionLabel,\n+    getOptionValue,\n+    formatOptionLabel,\n+    placeholder,\n+    isClearable,\n     ...propsToPass\n   } = props;\n   const formContext = React.useContext(FormContext);\n+  const convertedOptions = options instanceof Array && options.every(item => !(item instanceof Object)) ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNjg4Nw=="}, "originalCommit": {"oid": "a5f920c40c2a40be25aacc3fa82686115795a8f5"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2ODkyOTc4OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/content-management/shared/components/panels/environment-lifecycle/environment-form.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwOTo0MToxOVrOINrDIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzoxNzo0MFrOIN6Cbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNzcxMg==", "bodyText": "I suspect nullable options would be a common use case (correct me if I'm wrong here?), in which case it could be useful to move this into the select component and handle it centrally there.", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551207712", "createdAt": "2021-01-04T09:41:19Z", "author": {"login": "Etheryte"}, "path": "web/html/src/manager/content-management/shared/components/panels/environment-lifecycle/environment-form.js", "diffHunk": "@@ -54,17 +54,12 @@ const EnvironmentForm = (props: Props) =>\n             name=\"predecessorLabel\"\n             label={t(\"Insert before\")}\n             labelClass=\"col-md-3\"\n-            divClass=\"col-md-8\">\n-            <option\n-              key={\"predecessorLabelEmpty\"}/>\n-            {props.environments && props.environments.map(env =>\n-              <option\n-                key={env.label}\n-                value={env.label}>\n-                {env.name}\n-              </option>\n-            )}\n-          </Select>\n+            divClass=\"col-md-8\"\n+            isClearable\n+            options={props.environments}\n+            getOptionValue={option => option != null ? option.label : null}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5f920c40c2a40be25aacc3fa82686115795a8f5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxMDU0MQ==", "bodyText": "I'll have a look at that then, thanks for the suggestion", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551210541", "createdAt": "2021-01-04T09:46:45Z", "author": {"login": "cbosdo"}, "path": "web/html/src/manager/content-management/shared/components/panels/environment-lifecycle/environment-form.js", "diffHunk": "@@ -54,17 +54,12 @@ const EnvironmentForm = (props: Props) =>\n             name=\"predecessorLabel\"\n             label={t(\"Insert before\")}\n             labelClass=\"col-md-3\"\n-            divClass=\"col-md-8\">\n-            <option\n-              key={\"predecessorLabelEmpty\"}/>\n-            {props.environments && props.environments.map(env =>\n-              <option\n-                key={env.label}\n-                value={env.label}>\n-                {env.name}\n-              </option>\n-            )}\n-          </Select>\n+            divClass=\"col-md-8\"\n+            isClearable\n+            options={props.environments}\n+            getOptionValue={option => option != null ? option.label : null}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNzcxMg=="}, "originalCommit": {"oid": "a5f920c40c2a40be25aacc3fa82686115795a8f5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ1MzI5NA==", "bodyText": "done", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551453294", "createdAt": "2021-01-04T17:17:40Z", "author": {"login": "cbosdo"}, "path": "web/html/src/manager/content-management/shared/components/panels/environment-lifecycle/environment-form.js", "diffHunk": "@@ -54,17 +54,12 @@ const EnvironmentForm = (props: Props) =>\n             name=\"predecessorLabel\"\n             label={t(\"Insert before\")}\n             labelClass=\"col-md-3\"\n-            divClass=\"col-md-8\">\n-            <option\n-              key={\"predecessorLabelEmpty\"}/>\n-            {props.environments && props.environments.map(env =>\n-              <option\n-                key={env.label}\n-                value={env.label}>\n-                {env.name}\n-              </option>\n-            )}\n-          </Select>\n+            divClass=\"col-md-8\"\n+            isClearable\n+            options={props.environments}\n+            getOptionValue={option => option != null ? option.label : null}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNzcxMg=="}, "originalCommit": {"oid": "a5f920c40c2a40be25aacc3fa82686115795a8f5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzQ4MTUwOnYy", "diffSide": "RIGHT", "path": "web/html/src/components/input/Select.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoxMTozNFrOIOU8Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNDozNTo0NFrOIPEOIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5NDEwMg==", "bodyText": "IIUC, it's allowed to have strings in options. Maybe define it as something like:\ntype OptionType = {\n  value: number | string,\n  label: string\n}\n\nand then in type Props:\noptions: Array<OptionType | string>", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551894102", "createdAt": "2021-01-05T12:11:34Z", "author": {"login": "cbbayburt"}, "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -1,12 +1,23 @@\n // @flow\n \n import * as React from 'react';\n+import ReactSelect from 'react-select';\n import { InputBase } from './InputBase';\n import { FormContext } from './Form';\n \n type Props = {\n-  /** <option> elements to display */\n-  children: React.Node,\n+  /** Select options */\n+  options: Array<Object>,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1311f79459bb6efbd45f0f71485f9c76f6a8a521"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY2ODcwNg==", "bodyText": "well, OptionType wouldn't fly since you can have any object as long as you set the getOptionValue and getOptionLabel properties. but options: Array<Object | string> yes", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r552668706", "createdAt": "2021-01-06T14:35:44Z", "author": {"login": "cbosdo"}, "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -1,12 +1,23 @@\n // @flow\n \n import * as React from 'react';\n+import ReactSelect from 'react-select';\n import { InputBase } from './InputBase';\n import { FormContext } from './Form';\n \n type Props = {\n-  /** <option> elements to display */\n-  children: React.Node,\n+  /** Select options */\n+  options: Array<Object>,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5NDEwMg=="}, "originalCommit": {"oid": "1311f79459bb6efbd45f0f71485f9c76f6a8a521"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzUwMDMwOnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/images/image-profile-edit.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoxNzo0NVrOIOVHQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo1Nzo0N1rOIOc1cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5Njg5Nw==", "bodyText": "When used directly, this won't have the added styling. Would this be a problem?", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551896897", "createdAt": "2021-01-05T12:17:45Z", "author": {"login": "cbbayburt"}, "path": "web/html/src/manager/images/image-profile-edit.js", "diffHunk": "@@ -351,15 +341,12 @@ class CreateImageProfile extends React.Component {\n     const select = <FormGroup>\n       <Label className=\"col-md-3\" name={t(\"Custom Info Values\")}/>\n       <div className=\"col-md-6\">\n-        <select value=\"\" onChange={(e) => this.addCustomData(e.target.value)}\n-          className=\"form-control\">\n-          <option key=\"0\" value=\"\" disabled=\"disabled\">{t(\"Select a custom info key\")}</option>\n-          {\n+        <ReactSelect value=\"\" onChange={({value}) => this.addCustomData(value)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1311f79459bb6efbd45f0f71485f9c76f6a8a521"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0MjI4Ng==", "bodyText": "what do you mean? the added zIndex style on the menu? would be impacting only in some cases depending on the components that are right below the Select. I had to add the zIndex to higher than 2 otherwise the menu could be hidden by a date picker.", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551942286", "createdAt": "2021-01-05T13:49:01Z", "author": {"login": "cbosdo"}, "path": "web/html/src/manager/images/image-profile-edit.js", "diffHunk": "@@ -351,15 +341,12 @@ class CreateImageProfile extends React.Component {\n     const select = <FormGroup>\n       <Label className=\"col-md-3\" name={t(\"Custom Info Values\")}/>\n       <div className=\"col-md-6\">\n-        <select value=\"\" onChange={(e) => this.addCustomData(e.target.value)}\n-          className=\"form-control\">\n-          <option key=\"0\" value=\"\" disabled=\"disabled\">{t(\"Select a custom info key\")}</option>\n-          {\n+        <ReactSelect value=\"\" onChange={({value}) => this.addCustomData(value)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5Njg5Nw=="}, "originalCommit": {"oid": "1311f79459bb6efbd45f0f71485f9c76f6a8a521"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAyMjAwMA==", "bodyText": "Yes, that one, and maybe more stuff in the future. IIUC, you use it directly to avoid the model handling, am I right?", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r552022000", "createdAt": "2021-01-05T15:55:41Z", "author": {"login": "cbbayburt"}, "path": "web/html/src/manager/images/image-profile-edit.js", "diffHunk": "@@ -351,15 +341,12 @@ class CreateImageProfile extends React.Component {\n     const select = <FormGroup>\n       <Label className=\"col-md-3\" name={t(\"Custom Info Values\")}/>\n       <div className=\"col-md-6\">\n-        <select value=\"\" onChange={(e) => this.addCustomData(e.target.value)}\n-          className=\"form-control\">\n-          <option key=\"0\" value=\"\" disabled=\"disabled\">{t(\"Select a custom info key\")}</option>\n-          {\n+        <ReactSelect value=\"\" onChange={({value}) => this.addCustomData(value)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5Njg5Nw=="}, "originalCommit": {"oid": "1311f79459bb6efbd45f0f71485f9c76f6a8a521"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAyMzQxMA==", "bodyText": "yes, and because that one replaces a standard <select>, not our component", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r552023410", "createdAt": "2021-01-05T15:57:47Z", "author": {"login": "cbosdo"}, "path": "web/html/src/manager/images/image-profile-edit.js", "diffHunk": "@@ -351,15 +341,12 @@ class CreateImageProfile extends React.Component {\n     const select = <FormGroup>\n       <Label className=\"col-md-3\" name={t(\"Custom Info Values\")}/>\n       <div className=\"col-md-6\">\n-        <select value=\"\" onChange={(e) => this.addCustomData(e.target.value)}\n-          className=\"form-control\">\n-          <option key=\"0\" value=\"\" disabled=\"disabled\">{t(\"Select a custom info key\")}</option>\n-          {\n+        <ReactSelect value=\"\" onChange={({value}) => this.addCustomData(value)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5Njg5Nw=="}, "originalCommit": {"oid": "1311f79459bb6efbd45f0f71485f9c76f6a8a521"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3829, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}