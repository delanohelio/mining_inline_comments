{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NDc1Njgw", "number": 2296, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo1NzoyM1rOEC_TuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODo1NToyN1rOEDWupw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTY5ODQ4OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/action/errata/test/NotifySetupActionTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo1NzoyM1rOGfx_lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxMjo1NTozNVrOGgJVJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3ODEzNQ==", "bodyText": "seems you have this line now 2 times", "url": "https://github.com/uyuni-project/uyuni/pull/2296#discussion_r435978135", "createdAt": "2020-06-05T14:57:23Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/redhat/rhn/frontend/action/errata/test/NotifySetupActionTest.java", "diffHunk": "@@ -52,22 +51,10 @@ public void testExecute() throws Exception {\n         User user = requestContext.getCurrentUser();\n         Errata published = ErrataFactoryTest\n                 .createTestPublishedErrata(user.getOrg().getId());\n-        Errata unpublished = ErrataFactoryTest\n-                .createTestUnpublishedErrata(user.getOrg().getId());\n-\n-        //test bad parameter exception\n-        request.setupAddParameter(\"eid\", unpublished.getId().toString());\n-        try {\n-            action.execute(mapping, form, request, response);\n-            fail();\n-        }\n-        catch (BadParameterException e) {\n-            //Success!!!\n-        }\n \n         //test default case\n         request.setupAddParameter(\"eid\", published.getId().toString());\n-        request.setupAddParameter(\"eid\", unpublished.getId().toString());\n+        request.setupAddParameter(\"eid\", published.getId().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d95f9845e1f15efe141db10c3749e4e3e86c1cf"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyODgzNg==", "bodyText": "One really needs two in this case, as request is a mock object and the number of times the parameter is read counts!", "url": "https://github.com/uyuni-project/uyuni/pull/2296#discussion_r436028836", "createdAt": "2020-06-05T16:23:16Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/frontend/action/errata/test/NotifySetupActionTest.java", "diffHunk": "@@ -52,22 +51,10 @@ public void testExecute() throws Exception {\n         User user = requestContext.getCurrentUser();\n         Errata published = ErrataFactoryTest\n                 .createTestPublishedErrata(user.getOrg().getId());\n-        Errata unpublished = ErrataFactoryTest\n-                .createTestUnpublishedErrata(user.getOrg().getId());\n-\n-        //test bad parameter exception\n-        request.setupAddParameter(\"eid\", unpublished.getId().toString());\n-        try {\n-            action.execute(mapping, form, request, response);\n-            fail();\n-        }\n-        catch (BadParameterException e) {\n-            //Success!!!\n-        }\n \n         //test default case\n         request.setupAddParameter(\"eid\", published.getId().toString());\n-        request.setupAddParameter(\"eid\", unpublished.getId().toString());\n+        request.setupAddParameter(\"eid\", published.getId().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3ODEzNQ=="}, "originalCommit": {"oid": "2d95f9845e1f15efe141db10c3749e4e3e86c1cf"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM2MDQ4Ng==", "bodyText": "ok", "url": "https://github.com/uyuni-project/uyuni/pull/2296#discussion_r436360486", "createdAt": "2020-06-07T12:55:35Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/redhat/rhn/frontend/action/errata/test/NotifySetupActionTest.java", "diffHunk": "@@ -52,22 +51,10 @@ public void testExecute() throws Exception {\n         User user = requestContext.getCurrentUser();\n         Errata published = ErrataFactoryTest\n                 .createTestPublishedErrata(user.getOrg().getId());\n-        Errata unpublished = ErrataFactoryTest\n-                .createTestUnpublishedErrata(user.getOrg().getId());\n-\n-        //test bad parameter exception\n-        request.setupAddParameter(\"eid\", unpublished.getId().toString());\n-        try {\n-            action.execute(mapping, form, request, response);\n-            fail();\n-        }\n-        catch (BadParameterException e) {\n-            //Success!!!\n-        }\n \n         //test default case\n         request.setupAddParameter(\"eid\", published.getId().toString());\n-        request.setupAddParameter(\"eid\", unpublished.getId().toString());\n+        request.setupAddParameter(\"eid\", published.getId().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3ODEzNQ=="}, "originalCommit": {"oid": "2d95f9845e1f15efe141db10c3749e4e3e86c1cf"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTUzMjc3OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/errata/ErrataHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODo1NDo0MVrOGgUv1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjoxMTo1MVrOGga05Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0NzU0Mg==", "bodyText": "do we still need this method? shouldn't it be removed entirely?", "url": "https://github.com/uyuni-project/uyuni/pull/2296#discussion_r436547542", "createdAt": "2020-06-08T08:54:41Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/errata/ErrataHandler.java", "diffHunk": "@@ -1324,15 +1324,15 @@ public Errata publish(User loggedInUser, String advisory, List<String> channelLa\n     }\n \n     /**\n-     * Publishes an existing (unpublished) cloned errata to a set of cloned channels\n+     * Publishes an existing cloned errata to a set of cloned channels\n      * according to its original erratum\n      * @param loggedInUser The current user\n      * @param advisory The advisory Name of the errata to publish\n      * @param channelLabels List of channels to publish the errata to\n      * @throws InvalidChannelRoleException if the user perms are incorrect\n      * @return the published errata\n      *\n-     * @xmlrpc.doc Publishes an existing (unpublished) cloned errata to a set of cloned\n+     * @xmlrpc.doc Publishes an existing cloned errata to a set of cloned", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1df855337efafdba4a654ad9c11e736f194d4408"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY0NzE0MQ==", "bodyText": "See https://github.com/uyuni-project/uyuni/pull/2296/files#r436646780", "url": "https://github.com/uyuni-project/uyuni/pull/2296#discussion_r436647141", "createdAt": "2020-06-08T12:11:51Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/errata/ErrataHandler.java", "diffHunk": "@@ -1324,15 +1324,15 @@ public Errata publish(User loggedInUser, String advisory, List<String> channelLa\n     }\n \n     /**\n-     * Publishes an existing (unpublished) cloned errata to a set of cloned channels\n+     * Publishes an existing cloned errata to a set of cloned channels\n      * according to its original erratum\n      * @param loggedInUser The current user\n      * @param advisory The advisory Name of the errata to publish\n      * @param channelLabels List of channels to publish the errata to\n      * @throws InvalidChannelRoleException if the user perms are incorrect\n      * @return the published errata\n      *\n-     * @xmlrpc.doc Publishes an existing (unpublished) cloned errata to a set of cloned\n+     * @xmlrpc.doc Publishes an existing cloned errata to a set of cloned", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0NzU0Mg=="}, "originalCommit": {"oid": "1df855337efafdba4a654ad9c11e736f194d4408"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTUzNTc1OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/errata/ErrataHandler.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODo1NToyN1rOGgUxoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoxOToxMFrOGgqd-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0ODAwMQ==", "bodyText": "do we still need this method? shouldn't it be removed entirely?", "url": "https://github.com/uyuni-project/uyuni/pull/2296#discussion_r436548001", "createdAt": "2020-06-08T08:55:27Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/errata/ErrataHandler.java", "diffHunk": "@@ -1303,13 +1303,13 @@ public Integer delete(User loggedInUser, String advisoryName)\n     }\n \n     /**\n-     * Publishes an existing (unpublished) errata to a set of channels\n+     * Publishes an existing errata to a set of channels\n      * @param loggedInUser The current user\n      * @param advisory The advisory Name of the errata to publish\n      * @param channelLabels List of channels to publish the errata to\n      * @return the published errata\n      *\n-     * @xmlrpc.doc Publish an existing (unpublished) errata to a set of channels.\n+     * @xmlrpc.doc Publish an existing errata to a set of channels.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1df855337efafdba4a654ad9c11e736f194d4408"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY0Njc4MA==", "bodyText": "Not really.\nPublishing a patch to a channel can happen either when the patch has never been published before (unpublished, the case we are removing with this PR and its sister #2280) or when the errata was already published - just in a different channel. The second use case is not expected to go away - and it's actually essential to CLM, for example, when promoting content from a channel (say \"test\") to another (say \"production\").\nWe could come up with another word, but I think publish still makes sense, and in so doing we don't break existing scripts, documentation, etc.", "url": "https://github.com/uyuni-project/uyuni/pull/2296#discussion_r436646780", "createdAt": "2020-06-08T12:11:09Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/errata/ErrataHandler.java", "diffHunk": "@@ -1303,13 +1303,13 @@ public Integer delete(User loggedInUser, String advisoryName)\n     }\n \n     /**\n-     * Publishes an existing (unpublished) errata to a set of channels\n+     * Publishes an existing errata to a set of channels\n      * @param loggedInUser The current user\n      * @param advisory The advisory Name of the errata to publish\n      * @param channelLabels List of channels to publish the errata to\n      * @return the published errata\n      *\n-     * @xmlrpc.doc Publish an existing (unpublished) errata to a set of channels.\n+     * @xmlrpc.doc Publish an existing errata to a set of channels.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0ODAwMQ=="}, "originalCommit": {"oid": "1df855337efafdba4a654ad9c11e736f194d4408"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4MzYzOQ==", "bodyText": "I understand that. The thing is not clear to me is: it seems this method was used (AFAIK) only to published \"unpublished\" erratas. We don't have \"unpublished\" erratas anymore.\nSo, either this method should go away now, or this method was also used before to also publish \"published\" erratas.", "url": "https://github.com/uyuni-project/uyuni/pull/2296#discussion_r436783639", "createdAt": "2020-06-08T15:11:15Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/errata/ErrataHandler.java", "diffHunk": "@@ -1303,13 +1303,13 @@ public Integer delete(User loggedInUser, String advisoryName)\n     }\n \n     /**\n-     * Publishes an existing (unpublished) errata to a set of channels\n+     * Publishes an existing errata to a set of channels\n      * @param loggedInUser The current user\n      * @param advisory The advisory Name of the errata to publish\n      * @param channelLabels List of channels to publish the errata to\n      * @return the published errata\n      *\n-     * @xmlrpc.doc Publish an existing (unpublished) errata to a set of channels.\n+     * @xmlrpc.doc Publish an existing errata to a set of channels.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0ODAwMQ=="}, "originalCommit": {"oid": "1df855337efafdba4a654ad9c11e736f194d4408"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5MDUxOA==", "bodyText": "This is an XMLRPC method, used by spacecmd among others. So already before this PR spacecmd happily passed in published errata IDs, and those worked fine.\nBasically here I corrected the docs because code below did work and was already actively used for published errata as well. It was only documentation being out-of-date - maybe initially this method really only worked / was intended for unpublished errata. That's just not the case today.\nDoes this clarify?", "url": "https://github.com/uyuni-project/uyuni/pull/2296#discussion_r436790518", "createdAt": "2020-06-08T15:20:59Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/errata/ErrataHandler.java", "diffHunk": "@@ -1303,13 +1303,13 @@ public Integer delete(User loggedInUser, String advisoryName)\n     }\n \n     /**\n-     * Publishes an existing (unpublished) errata to a set of channels\n+     * Publishes an existing errata to a set of channels\n      * @param loggedInUser The current user\n      * @param advisory The advisory Name of the errata to publish\n      * @param channelLabels List of channels to publish the errata to\n      * @return the published errata\n      *\n-     * @xmlrpc.doc Publish an existing (unpublished) errata to a set of channels.\n+     * @xmlrpc.doc Publish an existing errata to a set of channels.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0ODAwMQ=="}, "originalCommit": {"oid": "1df855337efafdba4a654ad9c11e736f194d4408"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwMzQxOA==", "bodyText": "Perfect, understood.Thanks", "url": "https://github.com/uyuni-project/uyuni/pull/2296#discussion_r436903418", "createdAt": "2020-06-08T18:19:10Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/errata/ErrataHandler.java", "diffHunk": "@@ -1303,13 +1303,13 @@ public Integer delete(User loggedInUser, String advisoryName)\n     }\n \n     /**\n-     * Publishes an existing (unpublished) errata to a set of channels\n+     * Publishes an existing errata to a set of channels\n      * @param loggedInUser The current user\n      * @param advisory The advisory Name of the errata to publish\n      * @param channelLabels List of channels to publish the errata to\n      * @return the published errata\n      *\n-     * @xmlrpc.doc Publish an existing (unpublished) errata to a set of channels.\n+     * @xmlrpc.doc Publish an existing errata to a set of channels.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0ODAwMQ=="}, "originalCommit": {"oid": "1df855337efafdba4a654ad9c11e736f194d4408"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4294, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}