{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3Njc2ODA4", "number": 2093, "title": "Servicepack Migration: Remember Settings", "bodyText": "What does this PR change?\nRemember ServigePack migration settings after performing a dry run.\nGUI diff\nRun migration button added\nButton is shown in the event log after successful SPMigration dryrun\n\nWarning and Dry run button removed after redirect from Run migration button\n\n\n DONE\n\nDocumentation\n\n\ndoc-susemanager PR or issue was created (GitHub automatic link expected below)\nSUSE/spacewalk#11162\n\n\n DONE\n\n\nTest coverage\n\n\nNo tests: Cucumber testing reposync not possible\n\n\n DONE\n\n\nLinks\nTracks SUSE/spacewalk#2574\n\n DONE\n\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_lint_checkstyle\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"ruby_rubocop\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\"\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-04-02T16:12:54Z", "url": "https://github.com/uyuni-project/uyuni/pull/2093", "merged": true, "mergeCommit": {"oid": "1e7ac8b56613e91b7e39b42c66e45842f7b6a075"}, "closed": true, "closedAt": "2020-04-23T08:17:20Z", "author": {"login": "parlt91"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcU6ZNmABqjMyMDQyMDI5NTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaX7e3ABqjMyNjM3OTY4MTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "756782bd7fba89316101d9819e951175f574b4d9", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/756782bd7fba89316101d9819e951175f574b4d9", "committedDate": "2020-04-02T16:06:49Z", "message": "Servicepack Migration: Remember Settings\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}, "afterCommit": {"oid": "ef597e5f5cae1760b39d2bc97b762bac8c33047c", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ef597e5f5cae1760b39d2bc97b762bac8c33047c", "committedDate": "2020-04-06T08:25:52Z", "message": "Add changelog\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef597e5f5cae1760b39d2bc97b762bac8c33047c", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ef597e5f5cae1760b39d2bc97b762bac8c33047c", "committedDate": "2020-04-06T08:25:52Z", "message": "Add changelog\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}, "afterCommit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/cb3093edb8b024ccb0b98f97f12a9b02f2a54a62", "committedDate": "2020-04-06T08:34:33Z", "message": "Add changelog\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4ODY4MzMy", "url": "https://github.com/uyuni-project/uyuni/pull/2093#pullrequestreview-388868332", "createdAt": "2020-04-07T07:52:28Z", "commit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo1MjoyOVrOGB3Szg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzo1MzozNFrOGCjM8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwNzY5NA==", "bodyText": "I'd choose a better-fitting name for this method. It's not a \"read-only\" get, I think its intent is to populate the request based on given action, so maybe populateRequestFromAction, setupRequestFromAction, ... would be better.\n\n\nThe logic is non-trivial and the reader should get some idea, what's going on, when the aid has been passed (which happens, when we're forwarding from the action page, IIUC). That's why I'd suggest:\n\na comment in that if block from which this method is called\na javadoc for this method\nboth", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r404607694", "createdAt": "2020-04-07T07:52:29Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -444,4 +459,39 @@ private SUSEProductSet createProductSet(Long baseProduct, Long[] addonProducts)\n         }\n         return channelIDs;\n     }\n+\n+    private String getActionDetails(HttpServletRequest request, RequestContext ctx) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxNzE2Mg==", "bodyText": "Nit: you could use a shortcut here: Channel.isBaseChannel().", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r404617162", "createdAt": "2020-04-07T08:08:35Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -444,4 +459,39 @@ private SUSEProductSet createProductSet(Long baseProduct, Long[] addonProducts)\n         }\n         return channelIDs;\n     }\n+\n+    private String getActionDetails(HttpServletRequest request, RequestContext ctx) {\n+        Long aid = ctx.getParamAsLong(\"aid\");\n+\n+        DistUpgradeAction action = (DistUpgradeAction) ActionFactory.lookupById(aid);\n+        DistUpgradeActionDetails details = action.getDetails();\n+        List<Channel> channels = details.getChannelTasks().stream()\n+                .filter(channel -> channel.getTask() == DistUpgradeChannelTask.SUBSCRIBE)\n+                .map(DistUpgradeChannelTask::getChannel)\n+                .collect(Collectors.toList());\n+\n+        Set<Channel> baseChannelSet = channels.stream()\n+                .map(Channel::getParentChannel)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYyMTM0Nw==", "bodyText": "IIUC, the addon products of this product set will always be empty, which means empty list will be passed to the request on line 490. Is this intention?", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r404621347", "createdAt": "2020-04-07T08:15:08Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -444,4 +459,39 @@ private SUSEProductSet createProductSet(Long baseProduct, Long[] addonProducts)\n         }\n         return channelIDs;\n     }\n+\n+    private String getActionDetails(HttpServletRequest request, RequestContext ctx) {\n+        Long aid = ctx.getParamAsLong(\"aid\");\n+\n+        DistUpgradeAction action = (DistUpgradeAction) ActionFactory.lookupById(aid);\n+        DistUpgradeActionDetails details = action.getDetails();\n+        List<Channel> channels = details.getChannelTasks().stream()\n+                .filter(channel -> channel.getTask() == DistUpgradeChannelTask.SUBSCRIBE)\n+                .map(DistUpgradeChannelTask::getChannel)\n+                .collect(Collectors.toList());\n+\n+        Set<Channel> baseChannelSet = channels.stream()\n+                .map(Channel::getParentChannel)\n+                .filter(Objects::nonNull)\n+                .collect(Collectors.toSet());\n+\n+        if (baseChannelSet.size() != 1) {\n+            return TARGET;\n+        }\n+\n+        Channel baseChannel = baseChannelSet.iterator().next();\n+        List<Long> channelIds = channels.stream().map(Channel::getId).collect(Collectors.toList());\n+        List<EssentialChannelDto> childChannels = getChannelDTOs(ctx, baseChannel, channelIds);\n+        SUSEProduct baseProduct = SUSEProductFactory.lookupByChannelName(baseChannel.getName()).get(0).getRootProduct();\n+        SUSEProductSet targetProductSet = createProductSet(baseProduct.getId(), new Long[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYyMzgxNw==", "bodyText": "Nit: I think camelCase would be more readable.", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r404623817", "createdAt": "2020-04-07T08:18:57Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/sdc/SystemHistoryEventAction.java", "diffHunk": "@@ -93,13 +94,21 @@ public ActionForward execute(ActionMapping mapping,\n                 serverAction.getStatus().equals(ActionFactory.STATUS_FAILED));\n         request.setAttribute(\"pickedup\",\n                 serverAction.getStatus().equals(ActionFactory.STATUS_PICKEDUP));\n+        request.setAttribute(\"completed\",\n+                serverAction.getStatus().equals(ActionFactory.STATUS_COMPLETED));\n+        request.setAttribute(\"typedistupgradedryrun\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYyOTEyMA==", "bodyText": "Nit: I think the comparison to true is not needed, just requestScope.completed && requestScope.typedistupgradedryrun  should do fine.", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r404629120", "createdAt": "2020-04-07T08:27:17Z", "author": {"login": "hustodemon"}, "path": "java/code/webapp/WEB-INF/pages/systems/sdc/history_event.jsp", "diffHunk": "@@ -91,7 +91,17 @@\n   </div>\n </c:if>\n \n-<rhn:icon type=\"nav-up\" title=\"system.event.returnIcon\"/><a href=\"${referrerLink}?sid=${system.id}\"><bean:message key=\"${linkLabel}\" arg0=\"${fn:escapeXml(system.name)}\" /></a>\n+  <c:if test=\"${requestScope.completed == true && requestScope.typedistupgradedryrun == true}\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMyMzkzMg==", "bodyText": "The confirm sounds very general given its task (forwarding to SPMigration). I'd be favor in a specific name (spmigration).", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r405323932", "createdAt": "2020-04-08T07:48:09Z", "author": {"login": "hustodemon"}, "path": "java/code/webapp/WEB-INF/struts-config.xml", "diffHunk": "@@ -3232,6 +3232,8 @@\n                  path=\"/WEB-INF/pages/systems/sdc/history_event.jsp\"/>\n         <forward name=\"continue\"\n                  path=\"/systems/details/history/History.do\"/>\n+        <forward name=\"confirm\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMyNTA5Ng==", "bodyText": "Would it be possible to check for STATUS_COMPLETED && typedistupgradedryrun to restrict the forward to SP Migration only to the cases when the action is completed and we deal with dry run?", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r405325096", "createdAt": "2020-04-08T07:50:11Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/sdc/SystemHistoryEventAction.java", "diffHunk": "@@ -93,13 +94,21 @@ public ActionForward execute(ActionMapping mapping,\n                 serverAction.getStatus().equals(ActionFactory.STATUS_FAILED));\n         request.setAttribute(\"pickedup\",\n                 serverAction.getStatus().equals(ActionFactory.STATUS_PICKEDUP));\n+        request.setAttribute(\"completed\",\n+                serverAction.getStatus().equals(ActionFactory.STATUS_COMPLETED));\n+        request.setAttribute(\"typedistupgradedryrun\",\n+                action.getActionType().equals(ActionFactory.TYPE_DIST_UPGRADE) &&\n+                        ((DistUpgradeAction) action).getDetails().isDryRun());\n         if (!serverAction.getStatus().equals(ActionFactory.STATUS_COMPLETED) &&\n                 !serverAction.getStatus().equals(ActionFactory.STATUS_FAILED)) {\n             request.setAttribute(\"referrerLink\", \"Pending.do\");\n             request.setAttribute(\"linkLabel\", \"system.event.pendingReturn\");\n             request.setAttribute(\"headerLabel\", \"system.event.pendingHeader\");\n         }\n         if (isSubmitted((DynaActionForm)formIn)) {\n+            if (serverAction.getStatus().equals(ActionFactory.STATUS_COMPLETED)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMyNzAyNg==", "bodyText": "Could this condition be simplified? ${!requestScope.completed}.", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r405327026", "createdAt": "2020-04-08T07:53:29Z", "author": {"login": "hustodemon"}, "path": "java/code/webapp/WEB-INF/pages/systems/spmigration/spmigration-confirm.jsp", "diffHunk": "@@ -60,20 +60,24 @@\n       </div>\n     </div>\n     <hr />\n-    <div class=\"alert alert-danger\">\n-      <rhn:icon type=\"system-crit\" />\n-      <bean:message key=\"spmigration.jsp.confirm.note\" />\n-    </div>\n+    <c:if test=\"${!requestScope.completed == true}\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMyNzA4OA==", "bodyText": "Same here.", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r405327088", "createdAt": "2020-04-08T07:53:34Z", "author": {"login": "hustodemon"}, "path": "java/code/webapp/WEB-INF/pages/systems/spmigration/spmigration-confirm.jsp", "diffHunk": "@@ -60,20 +60,24 @@\n       </div>\n     </div>\n     <hr />\n-    <div class=\"alert alert-danger\">\n-      <rhn:icon type=\"system-crit\" />\n-      <bean:message key=\"spmigration.jsp.confirm.note\" />\n-    </div>\n+    <c:if test=\"${!requestScope.completed == true}\">\n+      <div class=\"alert alert-danger\">\n+        <rhn:icon type=\"system-crit\" />\n+        <bean:message key=\"spmigration.jsp.confirm.note\" />\n+      </div>\n+    </c:if>\n     <div>\n       <div class=\"pull-left\">\n         <html:submit styleClass=\"btn btn-default\" property=\"dispatch\">\n           <bean:message key=\"spmigration.jsp.confirm.back\" />\n         </html:submit>\n       </div>\n       <div class=\"pull-right\">\n-        <html:submit styleClass=\"btn btn-success\" property=\"dispatch\">\n-          <bean:message key=\"spmigration.jsp.confirm.submit.dry-run\" />\n-        </html:submit>\n+        <c:if test=\"${!requestScope.completed == true}\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3093edb8b024ccb0b98f97f12a9b02f2a54a62"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1bb32ee256a2eff13188c314d068c4f89ed21955", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/1bb32ee256a2eff13188c314d068c4f89ed21955", "committedDate": "2020-04-08T11:21:32Z", "message": "Add suggested changes\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}, "afterCommit": {"oid": "315a75e976cf08e0b5b18c8a476502d54170fc80", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/315a75e976cf08e0b5b18c8a476502d54170fc80", "committedDate": "2020-04-09T14:55:15Z", "message": "Add suggested changes\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "315a75e976cf08e0b5b18c8a476502d54170fc80", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/315a75e976cf08e0b5b18c8a476502d54170fc80", "committedDate": "2020-04-09T14:55:15Z", "message": "Add suggested changes\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}, "afterCommit": {"oid": "ee1778d3e0d62c5c764cae85f187ee22e7cc3d5a", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ee1778d3e0d62c5c764cae85f187ee22e7cc3d5a", "committedDate": "2020-04-14T08:00:34Z", "message": "Add suggested changes\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDA4MDQz", "url": "https://github.com/uyuni-project/uyuni/pull/2093#pullrequestreview-393008043", "createdAt": "2020-04-14T14:53:22Z", "commit": {"oid": "ee1778d3e0d62c5c764cae85f187ee22e7cc3d5a"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDo1MzoyM1rOGFSmFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTowODoxN1rOGFTWNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMDcyNQ==", "bodyText": "The getMigrationTargets evokes something that doesn't have side-effects. I think that at least a comment in javadoc about populating that MISSING_SUCCESSOR_EXTENSIONS attribute would be good.", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r408200725", "createdAt": "2020-04-14T14:53:23Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -469,7 +460,38 @@ private SUSEProductSet createProductSet(Long baseProduct, Long[] addonProducts)\n         return channelIDs;\n     }\n \n-    private String getActionDetails(HttpServletRequest request, RequestContext ctx) {\n+    /**\n+     * Gets list of available migration targets for given ProductSet\n+     *\n+     * @param request\n+     * @param ctx\n+     * @param server\n+     * @param installedProducts\n+     * @return\n+     */\n+    private List<SUSEProductSet> getMigrationTargets(HttpServletRequest request, RequestContext ctx, Server server,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1778d3e0d62c5c764cae85f187ee22e7cc3d5a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMzUxNg==", "bodyText": "I'd suggest being more specific in the method arguments:\n\ninstead of ctx you can pass the user directly,\ninstead of the server, you can pass channelArch directly.\n\nPassing more specific params makes their purpose more clear here.", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r408203516", "createdAt": "2020-04-14T14:56:31Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -469,7 +460,38 @@ private SUSEProductSet createProductSet(Long baseProduct, Long[] addonProducts)\n         return channelIDs;\n     }\n \n-    private String getActionDetails(HttpServletRequest request, RequestContext ctx) {\n+    /**\n+     * Gets list of available migration targets for given ProductSet\n+     *\n+     * @param request\n+     * @param ctx\n+     * @param server\n+     * @param installedProducts\n+     * @return\n+     */\n+    private List<SUSEProductSet> getMigrationTargets(HttpServletRequest request, RequestContext ctx, Server server,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1778d3e0d62c5c764cae85f187ee22e7cc3d5a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMzYzMg==", "bodyText": "One last thing: it'd be nice to mention that the installedProducts parameter is \"OUT\" (see removeIncompatibleTargets).", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r408203632", "createdAt": "2020-04-14T14:56:39Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -469,7 +460,38 @@ private SUSEProductSet createProductSet(Long baseProduct, Long[] addonProducts)\n         return channelIDs;\n     }\n \n-    private String getActionDetails(HttpServletRequest request, RequestContext ctx) {\n+    /**\n+     * Gets list of available migration targets for given ProductSet\n+     *\n+     * @param request\n+     * @param ctx\n+     * @param server\n+     * @param installedProducts\n+     * @return\n+     */\n+    private List<SUSEProductSet> getMigrationTargets(HttpServletRequest request, RequestContext ctx, Server server,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1778d3e0d62c5c764cae85f187ee22e7cc3d5a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwNDk1NQ==", "bodyText": "Please complete the javadoc.", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r408204955", "createdAt": "2020-04-14T14:58:14Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -469,7 +460,38 @@ private SUSEProductSet createProductSet(Long baseProduct, Long[] addonProducts)\n         return channelIDs;\n     }\n \n-    private String getActionDetails(HttpServletRequest request, RequestContext ctx) {\n+    /**\n+     * Gets list of available migration targets for given ProductSet\n+     *\n+     * @param request\n+     * @param ctx\n+     * @param server\n+     * @param installedProducts\n+     * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1778d3e0d62c5c764cae85f187ee22e7cc3d5a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIxMzA0NQ==", "bodyText": "Can it be that there are multiple valid migration target with the same base product? Is selecting the first one the right thing to do?", "url": "https://github.com/uyuni-project/uyuni/pull/2093#discussion_r408213045", "createdAt": "2020-04-14T15:08:17Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/systems/SPMigrationAction.java", "diffHunk": "@@ -454,4 +459,78 @@ private SUSEProductSet createProductSet(Long baseProduct, Long[] addonProducts)\n         }\n         return channelIDs;\n     }\n+\n+    /**\n+     * Gets list of available migration targets for given ProductSet\n+     *\n+     * @param request\n+     * @param ctx\n+     * @param server\n+     * @param installedProducts\n+     * @return\n+     */\n+    private List<SUSEProductSet> getMigrationTargets(HttpServletRequest request, RequestContext ctx, Server server,\n+                                                     Optional<SUSEProductSet> installedProducts) {\n+        List<SUSEProductSet> allMigrationTargets = DistUpgradeManager.\n+                getTargetProductSets(installedProducts,\n+                        server.getServerArch().getCompatibleChannelArch(),\n+                        ctx.getCurrentUser());\n+\n+        Optional<Set<String>> missingSuccessorExtensions = Optional.of(new HashSet<String>());\n+        List<SUSEProductSet> migrationTargets = DistUpgradeManager.removeIncompatibleTargets(installedProducts,\n+                allMigrationTargets, missingSuccessorExtensions);\n+        request.setAttribute(MISSING_SUCCESSOR_EXTENSIONS,\n+                missingSuccessorExtensions.orElse(new HashSet<String>()));\n+        return migrationTargets;\n+    }\n+\n+    /**\n+     * Populate the request attributes from a given action\n+     *\n+     * @param request the HttpServletRequest\n+     * @param ctx the RequestContext\n+     * @return String containing the ActionForward target\n+     */\n+    private String populateRequestFromAction(HttpServletRequest request, RequestContext ctx) {\n+        Long aid = ctx.getParamAsLong(\"aid\");\n+\n+        DistUpgradeAction action = (DistUpgradeAction) ActionFactory.lookupById(aid);\n+        DistUpgradeActionDetails details = action.getDetails();\n+        List<Channel> channels = details.getChannelTasks().stream()\n+                .filter(channel -> channel.getTask() == DistUpgradeChannelTask.SUBSCRIBE)\n+                .map(DistUpgradeChannelTask::getChannel)\n+                .collect(Collectors.toList());\n+\n+        Set<Channel> baseChannelSet = channels.stream()\n+                .filter(Channel::isBaseChannel)\n+                .collect(Collectors.toSet());\n+\n+        if (baseChannelSet.size() != 1) {\n+            return TARGET;\n+        }\n+\n+        Channel baseChannel = baseChannelSet.iterator().next();\n+        List<Long> channelIds = channels.stream().map(Channel::getId).collect(Collectors.toList());\n+        List<EssentialChannelDto> childChannels = getChannelDTOs(ctx, baseChannel, channelIds);\n+\n+        SUSEProduct baseProduct = SUSEProductFactory.lookupByChannelName(baseChannel.getName()).get(0).getRootProduct();\n+\n+        Server server = ctx.lookupAndBindServer();\n+        Optional<SUSEProductSet> installedProducts = server.getInstalledProductSet();\n+        Optional<SUSEProductSet> targetProductSet = getMigrationTargets(request, ctx, server, installedProducts)\n+                .stream().filter(productSet -> productSet.getBaseProduct().equals(baseProduct)).findFirst();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1778d3e0d62c5c764cae85f187ee22e7cc3d5a"}, "originalPosition": 141}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee1778d3e0d62c5c764cae85f187ee22e7cc3d5a", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ee1778d3e0d62c5c764cae85f187ee22e7cc3d5a", "committedDate": "2020-04-14T08:00:34Z", "message": "Add suggested changes\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}, "afterCommit": {"oid": "ef59a8153ca5e430d770e239afba6b2a508fbc0b", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ef59a8153ca5e430d770e239afba6b2a508fbc0b", "committedDate": "2020-04-17T09:16:20Z", "message": "Add suggested changes\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef59a8153ca5e430d770e239afba6b2a508fbc0b", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ef59a8153ca5e430d770e239afba6b2a508fbc0b", "committedDate": "2020-04-17T09:16:20Z", "message": "Add suggested changes\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}, "afterCommit": {"oid": "5c7ab4fba1519ef03d8ebda00c4b77600b1736e1", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/5c7ab4fba1519ef03d8ebda00c4b77600b1736e1", "committedDate": "2020-04-22T10:38:46Z", "message": "Add logging output\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDk4NzMw", "url": "https://github.com/uyuni-project/uyuni/pull/2093#pullrequestreview-398098730", "createdAt": "2020-04-22T11:33:33Z", "commit": {"oid": "5c7ab4fba1519ef03d8ebda00c4b77600b1736e1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c7ab4fba1519ef03d8ebda00c4b77600b1736e1", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/5c7ab4fba1519ef03d8ebda00c4b77600b1736e1", "committedDate": "2020-04-22T10:38:46Z", "message": "Add logging output\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}, "afterCommit": {"oid": "f4c5146041e186def762add74174ac05f8c4c8f8", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/f4c5146041e186def762add74174ac05f8c4c8f8", "committedDate": "2020-04-22T15:28:11Z", "message": "Add logging output\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42e8f509e69b375d37ccdb9c186b2229999b6590", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/42e8f509e69b375d37ccdb9c186b2229999b6590", "committedDate": "2020-04-23T07:40:37Z", "message": "Servicepack Migration: Remember Settings\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4717fd3a677c43988da8b7f0f34ade287bb7f8e", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/e4717fd3a677c43988da8b7f0f34ade287bb7f8e", "committedDate": "2020-04-23T07:40:37Z", "message": "Add changelog\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51a442d54f4666bfa1025ab6863b297498390f26", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/51a442d54f4666bfa1025ab6863b297498390f26", "committedDate": "2020-04-23T07:40:37Z", "message": "Add suggested changes\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "470e1bade2e1852edd8c7c350b71c0c7a5de3745", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/470e1bade2e1852edd8c7c350b71c0c7a5de3745", "committedDate": "2020-04-23T07:40:37Z", "message": "Add logging output\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4c5146041e186def762add74174ac05f8c4c8f8", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/f4c5146041e186def762add74174ac05f8c4c8f8", "committedDate": "2020-04-22T15:28:11Z", "message": "Add logging output\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}, "afterCommit": {"oid": "470e1bade2e1852edd8c7c350b71c0c7a5de3745", "author": {"user": {"login": "parlt91", "name": "Pascal Arlt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/470e1bade2e1852edd8c7c350b71c0c7a5de3745", "committedDate": "2020-04-23T07:40:37Z", "message": "Add logging output\n\nSigned-off-by: Pascal Arlt <parlt@suse.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1579, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}