{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MzI5OTIx", "number": 2201, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo1NzowM1rOD83Ecw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzoxNTo0OVrOD83ewA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTQzNDExOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/manager/errata/cache/ErrataCacheManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo1NzowM1rOGWDtew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo1MjoxMVrOGWFxWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc4MjY1MQ==", "bodyText": "Nit tip: Set.of(errataId)", "url": "https://github.com/uyuni-project/uyuni/pull/2201#discussion_r425782651", "createdAt": "2020-05-15T12:57:03Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/manager/errata/cache/ErrataCacheManager.java", "diffHunk": "@@ -269,6 +271,7 @@ public static void insertCacheForChannelErrataAsync(List<Long> channelIdsToUpdat\n      */\n     public static void insertCacheForChannelErrata(Collection<Long> channelIdsToUpdate, Long errataId) {\n         for (Long cid : channelIdsToUpdate) {\n+            ChannelFactory.addErrataToChannel(new HashSet<Long>() {{ add(errataId); }}, cid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b21afbe6dc08926ac37c27e9d2add33ce4d2d7a1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNjQxMA==", "bodyText": "\ud83d\ude2e", "url": "https://github.com/uyuni-project/uyuni/pull/2201#discussion_r425816410", "createdAt": "2020-05-15T13:52:11Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/manager/errata/cache/ErrataCacheManager.java", "diffHunk": "@@ -269,6 +271,7 @@ public static void insertCacheForChannelErrataAsync(List<Long> channelIdsToUpdat\n      */\n     public static void insertCacheForChannelErrata(Collection<Long> channelIdsToUpdate, Long errataId) {\n         for (Long cid : channelIdsToUpdate) {\n+            ChannelFactory.addErrataToChannel(new HashSet<Long>() {{ add(errataId); }}, cid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc4MjY1MQ=="}, "originalCommit": {"oid": "b21afbe6dc08926ac37c27e9d2add33ce4d2d7a1"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTUwMTQ0OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/manager/errata/ErrataManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzoxNTo0OVrOGWEYWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo1NzoyM1rOGWF_Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc5MzYyNA==", "bodyText": "call ErrataFactory.publish(), but that is a noop if the errata is\nalready published, which is always the case here\n\nIs this true in general (outside CLM context)? This method is also used for general errata cloning via XMLRPC (ChannelSoftwareHandler.mergeErrata).", "url": "https://github.com/uyuni-project/uyuni/pull/2201#discussion_r425793624", "createdAt": "2020-05-15T13:15:49Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/manager/errata/ErrataManager.java", "diffHunk": "@@ -2300,7 +2293,11 @@ public static void cloneErrata(Long channelId, Collection<Long> errataToClone, b\n                 }\n                 else {\n                     log.debug(\"Re-publishing clone\");\n-                    publish(clones.get(0), cids, user);\n+                    Errata firstClone = clones.get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed0743459b6c1c42d721d88a7ae2fc845826b2d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxOTk5NQ==", "bodyText": "It's not true in general, for example the Struts action PackagePushAction calls publish exclusively on unpublished erratas - and for those the behavior is definitely not no-op.", "url": "https://github.com/uyuni-project/uyuni/pull/2201#discussion_r425819995", "createdAt": "2020-05-15T13:57:23Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/manager/errata/ErrataManager.java", "diffHunk": "@@ -2300,7 +2293,11 @@ public static void cloneErrata(Long channelId, Collection<Long> errataToClone, b\n                 }\n                 else {\n                     log.debug(\"Re-publishing clone\");\n-                    publish(clones.get(0), cids, user);\n+                    Errata firstClone = clones.get(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc5MzYyNA=="}, "originalCommit": {"oid": "7ed0743459b6c1c42d721d88a7ae2fc845826b2d"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4386, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}