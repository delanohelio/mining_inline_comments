{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1Mzc2MTIy", "number": 2671, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTozNzo1NVrOEqza1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoyMzoyN1rOErgFBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzE4MTAzOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/domain/user/User.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTozNzo1NVrOHdN9Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo0Mzo1MVrOHdxcVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5OTM3NQ==", "bodyText": "Why can't we reuse the preferredLocale? Would it make any sense for users to set locale to X and documentation to Y?", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500399375", "createdAt": "2020-10-06T15:37:55Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/domain/user/User.java", "diffHunk": "@@ -505,6 +505,18 @@\n      */\n     void setPreferredLocale(String locale);\n \n+    /**\n+     * Returns the user's preferred documentation locale\n+     * @return String docsLocale\n+     */\n+    String getPreferredDocsLocale();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4ded4db166edd95ada88be6175d44fb5c47374"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk1NTM3Ng==", "bodyText": "That was one of the requests Pau had. That they can be set individually. (The set of languages do not necessarily match). See the issue linked", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500955376", "createdAt": "2020-10-07T12:02:42Z", "author": {"login": "parlt91"}, "path": "java/code/src/com/redhat/rhn/domain/user/User.java", "diffHunk": "@@ -505,6 +505,18 @@\n      */\n     void setPreferredLocale(String locale);\n \n+    /**\n+     * Returns the user's preferred documentation locale\n+     * @return String docsLocale\n+     */\n+    String getPreferredDocsLocale();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5OTM3NQ=="}, "originalCommit": {"oid": "8a4ded4db166edd95ada88be6175d44fb5c47374"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MDgyMg==", "bodyText": "Ok, thanks for explaining. That's resolved for me.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500980822", "createdAt": "2020-10-07T12:43:51Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/domain/user/User.java", "diffHunk": "@@ -505,6 +505,18 @@\n      */\n     void setPreferredLocale(String locale);\n \n+    /**\n+     * Returns the user's preferred documentation locale\n+     * @return String docsLocale\n+     */\n+    String getPreferredDocsLocale();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5OTM3NQ=="}, "originalCommit": {"oid": "8a4ded4db166edd95ada88be6175d44fb5c47374"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzIyOTQ1OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/admin/config/monitoring-admin.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTo0NzozNlrOHdObBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNzowNTo1NlrOHd9MAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwNzA0Nw==", "bodyText": "Hmm, could we write a component that would deal with the concatenation internally? Something like:\n<DocLink doc=\"suse-manager/administration/monitoring.html\">...", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500407047", "createdAt": "2020-10-06T15:47:36Z", "author": {"login": "hustodemon"}, "path": "web/html/src/manager/admin/config/monitoring-admin.js", "diffHunk": "@@ -109,7 +109,7 @@ const HelpPanel = (props) => {\n         {t(\"The server uses \")}<a href=\"https://prometheus.io\" target=\"_blank\" rel=\"noopener noreferrer\">{t(\"Prometheus\")}</a>{t(\" exporters to expose metrics about your environment.\")}\n       </p>\n       <p>\n-        {t(\"Refer to the \")}<a href=\"/docs/suse-manager/administration/monitoring.html\" target=\"_blank\">{t(\"documentation\")}</a>{t(\" to learn how to to consume these metrics.\")}\n+        {t(\"Refer to the \")}<a href={\"/docs/\" + window.docsLocale + \"/suse-manager/administration/monitoring.html\"} target=\"_blank\">{t(\"documentation\")}</a>{t(\" to learn how to to consume these metrics.\")}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25e1cc243e8d44447cd69e5ce2b360175b2ed91a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3MDAwNw==", "bodyText": "This one here is actually the only occurrence that does not use either <HelpLink url=...> or <TopPanel helpUrl=...> so I would not create a new component for just a single case. I can although look into adapting those two components so that they just take the e.g. /reference/admin/task-engine-status.html part.\nWith the downside that this would make greping for /docs/ to find all of the docs links not work anymore.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500970007", "createdAt": "2020-10-07T12:27:00Z", "author": {"login": "parlt91"}, "path": "web/html/src/manager/admin/config/monitoring-admin.js", "diffHunk": "@@ -109,7 +109,7 @@ const HelpPanel = (props) => {\n         {t(\"The server uses \")}<a href=\"https://prometheus.io\" target=\"_blank\" rel=\"noopener noreferrer\">{t(\"Prometheus\")}</a>{t(\" exporters to expose metrics about your environment.\")}\n       </p>\n       <p>\n-        {t(\"Refer to the \")}<a href=\"/docs/suse-manager/administration/monitoring.html\" target=\"_blank\">{t(\"documentation\")}</a>{t(\" to learn how to to consume these metrics.\")}\n+        {t(\"Refer to the \")}<a href={\"/docs/\" + window.docsLocale + \"/suse-manager/administration/monitoring.html\"} target=\"_blank\">{t(\"documentation\")}</a>{t(\" to learn how to to consume these metrics.\")}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwNzA0Nw=="}, "originalCommit": {"oid": "25e1cc243e8d44447cd69e5ce2b360175b2ed91a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE3MzI1MA==", "bodyText": "I changed the <HelpLInk> component as I said above. The only remaining case is the one you pointed out.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r501173250", "createdAt": "2020-10-07T17:05:56Z", "author": {"login": "parlt91"}, "path": "web/html/src/manager/admin/config/monitoring-admin.js", "diffHunk": "@@ -109,7 +109,7 @@ const HelpPanel = (props) => {\n         {t(\"The server uses \")}<a href=\"https://prometheus.io\" target=\"_blank\" rel=\"noopener noreferrer\">{t(\"Prometheus\")}</a>{t(\" exporters to expose metrics about your environment.\")}\n       </p>\n       <p>\n-        {t(\"Refer to the \")}<a href=\"/docs/suse-manager/administration/monitoring.html\" target=\"_blank\">{t(\"documentation\")}</a>{t(\" to learn how to to consume these metrics.\")}\n+        {t(\"Refer to the \")}<a href={\"/docs/\" + window.docsLocale + \"/suse-manager/administration/monitoring.html\"} target=\"_blank\">{t(\"documentation\")}</a>{t(\" to learn how to to consume these metrics.\")}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwNzA0Nw=="}, "originalCommit": {"oid": "25e1cc243e8d44447cd69e5ce2b360175b2ed91a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTg5NTIwOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/action/user/BaseUserSetupAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODowOToxOVrOHdnhmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODoxMToyNVrOHdnmTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxODMyOQ==", "bodyText": "Please use type args for the involved variables/return value.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500818329", "createdAt": "2020-10-07T08:09:19Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/user/BaseUserSetupAction.java", "diffHunk": "@@ -86,6 +118,24 @@ public Map buildImageMap() {\n         return retval;\n     }\n \n+    /**\n+     * Builds Map of configured locales and locale image uris for the documentation\n+     * @return Map of configured documentation locales and locale image uris\n+     */\n+    public Map buildDocsImageMap() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a08f5dacefe92b79b25e6d7e04dfc047a64ec37"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxOTUzNQ==", "bodyText": "Extracting the common code with buildImageMap would be nice: these methods do the same thing, the only difference is the list of locales, which could be passed as an arg.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500819535", "createdAt": "2020-10-07T08:11:25Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/user/BaseUserSetupAction.java", "diffHunk": "@@ -86,6 +118,24 @@ public Map buildImageMap() {\n         return retval;\n     }\n \n+    /**\n+     * Builds Map of configured locales and locale image uris for the documentation\n+     * @return Map of configured documentation locales and locale image uris\n+     */\n+    public Map buildDocsImageMap() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxODMyOQ=="}, "originalCommit": {"oid": "3a08f5dacefe92b79b25e6d7e04dfc047a64ec37"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjE2MjU0OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/menu/MenuTree.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOToxNToxM1rOHdqGpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxNDo1MFrOHe_tHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg2MDU4Mw==", "bodyText": "Nit: similarly, we could write a method here that would do the concatenation, which would slightly improve the readability. No big deal though.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500860583", "createdAt": "2020-10-07T09:15:13Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/menu/MenuTree.java", "diffHunk": "@@ -392,13 +395,13 @@ public  MenuTree(AclFactory aclFactoryIn) {\n             // Help\n             nodes.add(new MenuItem(\"Help\").withIcon(\"fa-book\").withTarget(\"_blank\")\n                 .addChild(new MenuItem(\"Documentation_version\", ConfigDefaults.get().getProductVersion())\n-                    .withPrimaryUrl(\"/docs/index.html\").withTarget(\"_blank\"))\n+                    .withPrimaryUrl(\"/docs/\" + docsLocale + \"/index.html\").withTarget(\"_blank\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c500bbfc2d6a976d6b6bb81758edb936033eec74"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2MzA3MQ==", "bodyText": "The new version is even nicer, than what I got in mind. Thanks!", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r502263071", "createdAt": "2020-10-09T08:14:50Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/menu/MenuTree.java", "diffHunk": "@@ -392,13 +395,13 @@ public  MenuTree(AclFactory aclFactoryIn) {\n             // Help\n             nodes.add(new MenuItem(\"Help\").withIcon(\"fa-book\").withTarget(\"_blank\")\n                 .addChild(new MenuItem(\"Documentation_version\", ConfigDefaults.get().getProductVersion())\n-                    .withPrimaryUrl(\"/docs/index.html\").withTarget(\"_blank\"))\n+                    .withPrimaryUrl(\"/docs/\" + docsLocale + \"/index.html\").withTarget(\"_blank\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg2MDU4Mw=="}, "originalCommit": {"oid": "c500bbfc2d6a976d6b6bb81758edb936033eec74"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjY1MTE0OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/controllers/FormulaController.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMTozMDoxMFrOHdu1Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxNjowOVrOHe_wGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzNzk5MQ==", "bodyText": "Just a suggestion for improvement: Alternatively to the approach in this commit (\"Localize jade file documentation links\"), we could think of the following alteratives:\n\ninstead of withUser, create withDocsLocale helper, that would inject the locale to the model (data.put(\"docsLocale\"... could be skipped in the individual handlers\nor we could inject the docsLocale into the shared variables (SparkApplicationHelper), but I think this would be a bit more complicated (we couldn't inject just the value, since the setup method is only called once. instead of that, we would need to inject a method for computing that stuff). so maybe not :)\n\nUsing one of these would get rid of manual filling of the docsLocale model parameter. I'm up for a discussion about this!", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500937991", "createdAt": "2020-10-07T11:30:10Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/controllers/FormulaController.java", "diffHunk": "@@ -113,7 +113,7 @@ public void initRoutes(JadeTemplateEngine jade) {\n                 withCsrfToken(withUser(this::serverGroupFormula)),\n                 jade);\n         get(\"/manager/systems/details/formula/:formula_id\",\n-                withCsrfToken(this::minionFormula),\n+                withCsrfToken(withUser(this::minionFormula)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f5d4d91e7aad3d4ad82af3a24b3691a14fde0d8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE3NTk3OA==", "bodyText": "There is only one concern I have with this approach. When writing a controller method that has a jade file that uses docsLocale, you would have to add the user (to get the users docsLocale) to the method signature although the method itself might not need to use the user. This is somewhat counter intuitive.\nBut I agree, that it would make the code cleaner. So no strong opinion against it.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r501175978", "createdAt": "2020-10-07T17:10:32Z", "author": {"login": "parlt91"}, "path": "java/code/src/com/suse/manager/webui/controllers/FormulaController.java", "diffHunk": "@@ -113,7 +113,7 @@ public void initRoutes(JadeTemplateEngine jade) {\n                 withCsrfToken(withUser(this::serverGroupFormula)),\n                 jade);\n         get(\"/manager/systems/details/formula/:formula_id\",\n-                withCsrfToken(this::minionFormula),\n+                withCsrfToken(withUser(this::minionFormula)),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzNzk5MQ=="}, "originalCommit": {"oid": "9f5d4d91e7aad3d4ad82af3a24b3691a14fde0d8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5MTY4Ng==", "bodyText": "Actually forget my last comment. It worked out differently than I thought it would. I didn't need to add the user to the methods signatures. Just check out the result and resolve if you're satisfied.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r501591686", "createdAt": "2020-10-08T09:51:39Z", "author": {"login": "parlt91"}, "path": "java/code/src/com/suse/manager/webui/controllers/FormulaController.java", "diffHunk": "@@ -113,7 +113,7 @@ public void initRoutes(JadeTemplateEngine jade) {\n                 withCsrfToken(withUser(this::serverGroupFormula)),\n                 jade);\n         get(\"/manager/systems/details/formula/:formula_id\",\n-                withCsrfToken(this::minionFormula),\n+                withCsrfToken(withUser(this::minionFormula)),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzNzk5MQ=="}, "originalCommit": {"oid": "9f5d4d91e7aad3d4ad82af3a24b3691a14fde0d8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2MzgzNQ==", "bodyText": "LGTM! Thanks \ud83d\udc4d", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r502263835", "createdAt": "2020-10-09T08:16:09Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/controllers/FormulaController.java", "diffHunk": "@@ -113,7 +113,7 @@ public void initRoutes(JadeTemplateEngine jade) {\n                 withCsrfToken(withUser(this::serverGroupFormula)),\n                 jade);\n         get(\"/manager/systems/details/formula/:formula_id\",\n-                withCsrfToken(this::minionFormula),\n+                withCsrfToken(withUser(this::minionFormula)),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzNzk5MQ=="}, "originalCommit": {"oid": "9f5d4d91e7aad3d4ad82af3a24b3691a14fde0d8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjY3MjQzOnYy", "diffSide": "LEFT", "path": "java/code/webapp/WEB-INF/pages/activationkeys/create.jsp", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMTozNjozMlrOHdvCCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTowMjozNVrOHfBXDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk0MTMyMQ==", "bodyText": "I wonder, would it be possible to use the docsLocale variable set in the layout_head.jsp?", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500941321", "createdAt": "2020-10-07T11:36:32Z", "author": {"login": "hustodemon"}, "path": "java/code/webapp/WEB-INF/pages/activationkeys/create.jsp", "diffHunk": "@@ -6,7 +6,7 @@\n     <body>\n         <rhn:toolbar base=\"h1\" icon=\"header-activation-key\"\n                      imgAlt=\"activation-keys.common.alt\"\n-                     helpUrl=\"/docs/reference/systems/activation-keys.html\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004cff07586d16fa3ea99a536f3efee283219b4e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk1NTIwNg==", "bodyText": "I thought about that one. But I couldn't figure out a way to make that work.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500955206", "createdAt": "2020-10-07T12:02:23Z", "author": {"login": "parlt91"}, "path": "java/code/webapp/WEB-INF/pages/activationkeys/create.jsp", "diffHunk": "@@ -6,7 +6,7 @@\n     <body>\n         <rhn:toolbar base=\"h1\" icon=\"header-activation-key\"\n                      imgAlt=\"activation-keys.common.alt\"\n-                     helpUrl=\"/docs/reference/systems/activation-keys.html\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk0MTMyMQ=="}, "originalCommit": {"oid": "004cff07586d16fa3ea99a536f3efee283219b4e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3MjA0MA==", "bodyText": "@ncounter Do you know if it is possible?", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r500972040", "createdAt": "2020-10-07T12:30:11Z", "author": {"login": "parlt91"}, "path": "java/code/webapp/WEB-INF/pages/activationkeys/create.jsp", "diffHunk": "@@ -6,7 +6,7 @@\n     <body>\n         <rhn:toolbar base=\"h1\" icon=\"header-activation-key\"\n                      imgAlt=\"activation-keys.common.alt\"\n-                     helpUrl=\"/docs/reference/systems/activation-keys.html\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk0MTMyMQ=="}, "originalCommit": {"oid": "004cff07586d16fa3ea99a536f3efee283219b4e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI5MDE4OA==", "bodyText": "I think I missed this comment/question?\nWouldn't it be the same as https://github.com/uyuni-project/uyuni/blob/master/java/code/webapp/WEB-INF/decorators/layout_head.jsp#L66 ?", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r502290188", "createdAt": "2020-10-09T09:02:35Z", "author": {"login": "ncounter"}, "path": "java/code/webapp/WEB-INF/pages/activationkeys/create.jsp", "diffHunk": "@@ -6,7 +6,7 @@\n     <body>\n         <rhn:toolbar base=\"h1\" icon=\"header-activation-key\"\n                      imgAlt=\"activation-keys.common.alt\"\n-                     helpUrl=\"/docs/reference/systems/activation-keys.html\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk0MTMyMQ=="}, "originalCommit": {"oid": "004cff07586d16fa3ea99a536f3efee283219b4e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDQyNzgyOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/action/user/BaseUserSetupAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODowNToxNFrOHeSotg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToxNzoyM1rOHeZuWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUyNDY2Mg==", "bodyText": "Maybe using Optionals you could get rid of this if/else condition and do everything in one line. Just an improvement suggestion though.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r501524662", "createdAt": "2020-10-08T08:05:14Z", "author": {"login": "ncounter"}, "path": "java/code/src/com/redhat/rhn/frontend/action/user/BaseUserSetupAction.java", "diffHunk": "@@ -68,14 +67,31 @@ public void setCurrentLocale(RequestContext ctx, User user) {\n         }\n     }\n \n+    /**\n+     * Sets the locale to be used for the documentation to the provided request context\n+     * @param ctx RequestContext\n+     * @param user User\n+     */\n+    public void setDocsLocale(RequestContext ctx, User user) {\n+        String docsLocale = user.getPreferredDocsLocale();\n+\n+        // If user has locale set, then just use that\n+        if (docsLocale != null) {\n+            ctx.getRequest().setAttribute(\"currentDocsLocale\", docsLocale);\n+        }\n+        else {\n+            ctx.getRequest().setAttribute(\"currentDocsLocale\", \"default\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1bdf6faa9b6216c580448101c98a08c10f03a96"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0MDc5NQ==", "bodyText": "I used a different approach since I couldn't fit the optional thing in one line: using ifPresentOrElse().\nJust have another look", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r501640795", "createdAt": "2020-10-08T11:17:23Z", "author": {"login": "parlt91"}, "path": "java/code/src/com/redhat/rhn/frontend/action/user/BaseUserSetupAction.java", "diffHunk": "@@ -68,14 +67,31 @@ public void setCurrentLocale(RequestContext ctx, User user) {\n         }\n     }\n \n+    /**\n+     * Sets the locale to be used for the documentation to the provided request context\n+     * @param ctx RequestContext\n+     * @param user User\n+     */\n+    public void setDocsLocale(RequestContext ctx, User user) {\n+        String docsLocale = user.getPreferredDocsLocale();\n+\n+        // If user has locale set, then just use that\n+        if (docsLocale != null) {\n+            ctx.getRequest().setAttribute(\"currentDocsLocale\", docsLocale);\n+        }\n+        else {\n+            ctx.getRequest().setAttribute(\"currentDocsLocale\", \"default\");\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUyNDY2Mg=="}, "originalCommit": {"oid": "e1bdf6faa9b6216c580448101c98a08c10f03a96"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDQ5Nzk2OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/action/user/CreateUserAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoyMzoyN1rOHeTTig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMTowMjoxM1rOHeZPTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzNTYyNg==", "bodyText": "Wow, the logic here is a bit tricky:\nif A is not null and it is equals to something, then you set the initial A to null\nWhy not  just comparing default string to the possible null one instead? Something like \"default\".equals(preferredDocsLocale) should not throw errors in case it is null and you can handle everything in one line then. Something like user.setPreferredDocsLocale(\"default\".equals(preferredDocsLocale) ? null : preferredDocsLocale), or even better using Optionals while fetching the form.getString(\"preferredDocsLocale\"). I'm just suggesting though.", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r501535626", "createdAt": "2020-10-08T08:23:27Z", "author": {"login": "ncounter"}, "path": "java/code/src/com/redhat/rhn/frontend/action/user/CreateUserAction.java", "diffHunk": "@@ -167,7 +167,12 @@ public ActionForward execute(ActionMapping mapping,\n         if (preferredLocale != null && preferredLocale.equals(\"default\")) {\n             preferredLocale = null;\n         }\n+        String preferredDocsLocale = form.getString(\"preferredDocsLocale\");\n+        if (preferredDocsLocale != null && preferredDocsLocale.equals(\"default\")) {\n+            preferredDocsLocale = null;\n+        }\n         user.setPreferredLocale(preferredLocale);\n+        user.setPreferredDocsLocale(preferredDocsLocale);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1bdf6faa9b6216c580448101c98a08c10f03a96"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYzMjg0Ng==", "bodyText": "I like your first option. It's really short. But IMO it is much harder to understand whats going on than using the if(...) syntax. Still going for your proposal (I like cryptic code after all \ud83d\ude04)", "url": "https://github.com/uyuni-project/uyuni/pull/2671#discussion_r501632846", "createdAt": "2020-10-08T11:02:13Z", "author": {"login": "parlt91"}, "path": "java/code/src/com/redhat/rhn/frontend/action/user/CreateUserAction.java", "diffHunk": "@@ -167,7 +167,12 @@ public ActionForward execute(ActionMapping mapping,\n         if (preferredLocale != null && preferredLocale.equals(\"default\")) {\n             preferredLocale = null;\n         }\n+        String preferredDocsLocale = form.getString(\"preferredDocsLocale\");\n+        if (preferredDocsLocale != null && preferredDocsLocale.equals(\"default\")) {\n+            preferredDocsLocale = null;\n+        }\n         user.setPreferredLocale(preferredLocale);\n+        user.setPreferredDocsLocale(preferredDocsLocale);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzNTYyNg=="}, "originalCommit": {"oid": "e1bdf6faa9b6216c580448101c98a08c10f03a96"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4072, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}