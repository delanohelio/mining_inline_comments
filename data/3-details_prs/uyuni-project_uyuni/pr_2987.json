{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NDE2MDIx", "number": 2987, "title": "Add API call to get all formula data", "bodyText": "What does this PR change?\nAdd API method\nlistEndpoints(User, List<Long>)\nto list all available application and Prometheus exporters endpoints for the systems whose IDs\nmatch with the passed systems IDs.\nRequires SUSE/salt-formulas#102\nGUI diff\nNo difference.\n\n DONE\n\nDocumentation\n\n\nNo documentation needed: change only to XMLRPC API with automatically generated reference documentation.\n\n\n DONE\n\n\nTest coverage\n\n\nUnit tests were added\n\n\n DONE\n\n\nLinks\nFixes #\nTracks SUSE/spacewalk#12777\n\n DONE\n\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\" (Test skipped, there are no changes to test)\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-12-08T12:25:59Z", "url": "https://github.com/uyuni-project/uyuni/pull/2987", "merged": true, "mergeCommit": {"oid": "d4f1a991ff495950b7df701441817e06f6e741e3"}, "closed": true, "closedAt": "2021-08-16T09:06:56Z", "author": {"login": "witekest"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkavYyAFqTU0Nzk1Mjk1Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABe04hBQABqjUxNjE3MzM0Mjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTUyOTU2", "url": "https://github.com/uyuni-project/uyuni/pull/2987#pullrequestreview-547952956", "createdAt": "2020-12-09T08:43:17Z", "commit": {"oid": "84e519de8625eda1587e24d54e005248bda47d7b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODo0MzoxN1rOICI2VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODo0NzozNFrOICJBXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTExMzA0NQ==", "bodyText": "Would it make sense to pass a flag to this method to optionally get only the monitoring formulas?", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r539113045", "createdAt": "2020-12-09T08:43:17Z", "author": {"login": "cavalheiro"}, "path": "java/code/src/com/redhat/rhn/manager/formula/FormulaManager.java", "diffHunk": "@@ -348,6 +348,15 @@ public void enableFormula(String minionId, String formulaName) throws IOExceptio\n                 .collect(Collectors.toList());\n     }\n \n+    public List<Map<String, FormulaData>> getCombinedFormulaDataForSystems(User user, List<Integer> systemIDs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84e519de8625eda1587e24d54e005248bda47d7b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTExNTg3MA==", "bodyText": "Is this call expected to perform well on large setups?", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r539115870", "createdAt": "2020-12-09T08:47:34Z", "author": {"login": "cavalheiro"}, "path": "java/code/src/com/redhat/rhn/manager/formula/FormulaManager.java", "diffHunk": "@@ -348,6 +348,15 @@ public void enableFormula(String minionId, String formulaName) throws IOExceptio\n                 .collect(Collectors.toList());\n     }\n \n+    public List<Map<String, FormulaData>> getCombinedFormulaDataForSystems(User user, List<Integer> systemIDs) {\n+        return systemIDs.stream()\n+                .map(Integer::longValue)\n+                .map(sID -> FormulaFactory.getCombinedFormulasByServerId(sID).stream()\n+                .collect(Collectors.toMap(formula -> formula,\n+                        formula -> getCombinedFormulaDataForSystems(user, List.of(sID), formula).get(0))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84e519de8625eda1587e24d54e005248bda47d7b"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb4650ae2868dc8ab19c980c08238d32e7d4cb08", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/eb4650ae2868dc8ab19c980c08238d32e7d4cb08", "committedDate": "2020-12-09T15:54:27Z", "message": "Add new API method to list all endpoints\n\nThe new method returns a list of object containing all relevant\ninformation about application or Prometheus exporters endpoints."}, "afterCommit": {"oid": "bd85e0802d0b584e2fffd1811ed392f725774140", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/bd85e0802d0b584e2fffd1811ed392f725774140", "committedDate": "2021-01-08T09:39:29Z", "message": "Move 'listEndpoints' API call to 'formula' namespace"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwNDczMDY1", "url": "https://github.com/uyuni-project/uyuni/pull/2987#pullrequestreview-570473065", "createdAt": "2021-01-18T13:06:55Z", "commit": {"oid": "832ccd68596027c13af84eecac7cc32141c37de8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMzowNjo1NlrOIVoerQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMzoxMzowM1rOIVor9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTU1NDIyMQ==", "bodyText": "This doesn't seem to be used anymore, should also appear in the checkstyle results.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r559554221", "createdAt": "2021-01-18T13:06:56Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/system/SystemHandler.java", "diffHunk": "@@ -169,6 +170,7 @@\n \n import com.suse.manager.webui.utils.gson.BootstrapParameters;\n \n+import org.apache.commons.lang3.NotImplementedException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "832ccd68596027c13af84eecac7cc32141c37de8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTU1NTQyNA==", "bodyText": "This change doesn't seem to be needed as it only breaks the line earlier?", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r559555424", "createdAt": "2021-01-18T13:08:51Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/manager/formula/FormulaManager.java", "diffHunk": "@@ -344,13 +345,13 @@ public void enableFormula(String minionId, String formulaName) throws IOExceptio\n         Map<Long, Map<String, Object>> groupsFormulaData = getGroupsFormulaData(groupIDs, formulaName);\n \n         return minionIDs.stream().map(mID -> getCombinedFormulaDataForSystem(mID,\n-                Optional.ofNullable(managedGroupsPerServer.get(mID.getServerId())), groupsFormulaData, formulaName))\n-                .collect(Collectors.toList());\n+                Optional.ofNullable(managedGroupsPerServer.get(mID.getServerId())), groupsFormulaData,\n+                formulaName)).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "832ccd68596027c13af84eecac7cc32141c37de8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTU1NjE5OA==", "bodyText": "This change doesn't seem to be needed, or is there a reason for adding more indentation?", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r559556198", "createdAt": "2021-01-18T13:10:15Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/manager/formula/FormulaManager.java", "diffHunk": "@@ -344,13 +345,13 @@ public void enableFormula(String minionId, String formulaName) throws IOExceptio\n         Map<Long, Map<String, Object>> groupsFormulaData = getGroupsFormulaData(groupIDs, formulaName);\n \n         return minionIDs.stream().map(mID -> getCombinedFormulaDataForSystem(mID,\n-                Optional.ofNullable(managedGroupsPerServer.get(mID.getServerId())), groupsFormulaData, formulaName))\n-                .collect(Collectors.toList());\n+                Optional.ofNullable(managedGroupsPerServer.get(mID.getServerId())), groupsFormulaData,\n+                formulaName)).collect(Collectors.toList());\n     }\n \n     private FormulaData getCombinedFormulaDataForSystem(MinionIds minionID,\n-            Optional<List<SystemGroupID>> managedSystemGroups, Map<Long, Map<String, Object>> groupsFormulaData,\n-            String formulaName) {\n+                Optional<List<SystemGroupID>> managedSystemGroups, Map<Long, Map<String, Object>> groupsFormulaData,\n+                String formulaName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "832ccd68596027c13af84eecac7cc32141c37de8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTU1NzM5Mg==", "bodyText": "This class is still missing the copyright header.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r559557392", "createdAt": "2021-01-18T13:12:33Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/domain/formula/ExporterConfig.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.redhat.rhn.domain.formula;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "832ccd68596027c13af84eecac7cc32141c37de8"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTU1NzYyMg==", "bodyText": "This should be changed to 2021 by now.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r559557622", "createdAt": "2021-01-18T13:13:03Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/domain/dto/EndpointInfo.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+  Copyright (c) 2020 SUSE LLC", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "832ccd68596027c13af84eecac7cc32141c37de8"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2NTQwMzU1", "url": "https://github.com/uyuni-project/uyuni/pull/2987#pullrequestreview-586540355", "createdAt": "2021-02-09T13:26:39Z", "commit": {"oid": "3793dc53469d40fbc65d17e20e22286f93f03ec5"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOVQxMzoyNjozOVrOIiV5zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOVQxMzo0MDozNVrOIiWgVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjg4MTM1OQ==", "bodyText": "Did you try this endpoint (eg. from a Python script)?\nI was under the impression that in order to return a custom type one really had to add a custom Serializer class (see for example com.redhat.rhn.frontend.xmlrpc.serializer.SystemOverviewSerializer).\nIf that is wrong then I'll be happy to learn that plain beans are also completely OK to return!", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r572881359", "createdAt": "2021-02-09T13:26:39Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/system/monitoring/SystemMonitoringHandler.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ *\n+ * Copyright (c) 2021 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.redhat.rhn.frontend.xmlrpc.system.monitoring;\n+\n+import com.redhat.rhn.domain.dto.EndpointInfo;\n+import com.redhat.rhn.domain.user.User;\n+import com.redhat.rhn.frontend.xmlrpc.BaseHandler;\n+import com.redhat.rhn.manager.formula.FormulaManager;\n+\n+import java.util.List;\n+\n+/**\n+ * ServerMonitoringHandler\n+ * @xmlrpc.namespace system.monitoring\n+ * @xmlrpc.doc Provides methods to access information about managed systems, applications and formulas which can be\n+ * relevant for Prometheus monitoring\n+ */\n+public class SystemMonitoringHandler extends BaseHandler {\n+\n+    private final FormulaManager formulaManager;\n+\n+    /**\n+     * Instantiates a new system handler for system.monitoring namespace\n+     * @param formulaManagerIn instance of formula manager object\n+     */\n+    public SystemMonitoringHandler(FormulaManager formulaManagerIn) {\n+        this.formulaManager = formulaManagerIn;\n+    }\n+\n+    /**\n+     * Get the endpoint details for all Prometheus exporters installed on the systems whose IDs match\n+     * with the passed systems IDs and all of the groups those systems are member of.\n+     *\n+     * @param loggedInUser The current user\n+     * @param systemIDs The system IDs\n+     * @return a list containing endpoint details for all Prometheus exporters on the passed system IDs.\n+     *\n+     * @xmlrpc.param #session_key()\n+     * @xmlrpc.param #array_single(\"int\", \"systemID\")\n+     * @xmlrpc.returntype\n+     *   #array_begin()\n+     *     $EndpointInfo\n+     *   #array_end()\n+     */\n+    public List<EndpointInfo> listEndpoints(User loggedInUser, List<Long> systemIDs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3793dc53469d40fbc65d17e20e22286f93f03ec5"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjg4Mjg5MQ==", "bodyText": "What if an endpoint is an application endpoint, ie. it does not originate from an exporter? Would the name be null in that case?", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r572882891", "createdAt": "2021-02-09T13:28:41Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/domain/dto/EndpointInfo.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/**\n+ *\n+ * Copyright (c) 2021 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.redhat.rhn.domain.dto;\n+\n+/**\n+ * Class for representing the endpoint information of applications or Prometheus exporters of a minion system\n+ */\n+public class EndpointInfo {\n+\n+    private Long systemID;\n+    private String endpointName;\n+    private Integer port;\n+    private String path;\n+    private String module;\n+    private String exporterName;\n+\n+    /**\n+     * Instantiates a new endpoint information\n+     * @param systemIDIn server ID\n+     * @param endpointNameIn endpoint name\n+     */\n+    public EndpointInfo(Long systemIDIn, String endpointNameIn) {\n+        this.systemID = systemIDIn;\n+        this.endpointName = endpointNameIn;\n+    }\n+\n+    public Long getSystemID() {\n+        return systemID;\n+    }\n+\n+    public String getEndpointName() {\n+        return endpointName;\n+    }\n+\n+    public Integer getPort() {\n+        return port;\n+    }\n+\n+    public void setPort(Integer portIn) {\n+        this.port = portIn;\n+    }\n+\n+    public String getPath() {\n+        return path;\n+    }\n+\n+    public void setPath(String pathIn) {\n+        this.path = pathIn;\n+    }\n+\n+    public String getModule() {\n+        return module;\n+    }\n+\n+    public void setModule(String moduleIn) {\n+        this.module = moduleIn;\n+    }\n+\n+    public String getExporterName() {\n+        return exporterName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3793dc53469d40fbc65d17e20e22286f93f03ec5"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjg4MzkwOA==", "bodyText": "I would remove this method as of today, and add it only when we will actually support application endpoints.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r572883908", "createdAt": "2021-02-09T13:30:06Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/domain/formula/FormulaFactory.java", "diffHunk": "@@ -1107,4 +1109,75 @@ public static String getClusterPillarDir() {\n         return dataDir + PILLAR_DIR;\n     }\n \n+    /**\n+     * Find endpoint information from given formula data\n+     * @param formulaName name of the formula to examine\n+     * @param formulaData formula data to extract information from\n+     * @return list of endpoint information objects\n+     */\n+    public static List<EndpointInfo> getEndpointsFromFormulaData(String formulaName, FormulaData formulaData) {\n+        List<EndpointInfo> endpointInfos = new ArrayList<>();\n+        endpointInfos.addAll(getExportersEndpoints(formulaData));\n+        endpointInfos.addAll(getApplicationEndpoints(formulaName, formulaData));\n+        return endpointInfos;\n+    }\n+\n+    private static List<EndpointInfo> getApplicationEndpoints(String formulaName, FormulaData formulaData) {\n+        // TODO\n+        return Collections.emptyList();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3793dc53469d40fbc65d17e20e22286f93f03ec5"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjg5MTIyMg==", "bodyText": "It would be cool if this algorithm could be refactored with streams, so that EndpointInfo could be turned into a read-only-after-construction class.\nIn general, we prefer creating collections via streams rather than modifying methods such as put, add and so on. Would that be possible here?", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r572891222", "createdAt": "2021-02-09T13:40:35Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/domain/formula/FormulaFactory.java", "diffHunk": "@@ -1107,4 +1109,75 @@ public static String getClusterPillarDir() {\n         return dataDir + PILLAR_DIR;\n     }\n \n+    /**\n+     * Find endpoint information from given formula data\n+     * @param formulaName name of the formula to examine\n+     * @param formulaData formula data to extract information from\n+     * @return list of endpoint information objects\n+     */\n+    public static List<EndpointInfo> getEndpointsFromFormulaData(String formulaName, FormulaData formulaData) {\n+        List<EndpointInfo> endpointInfos = new ArrayList<>();\n+        endpointInfos.addAll(getExportersEndpoints(formulaData));\n+        endpointInfos.addAll(getApplicationEndpoints(formulaName, formulaData));\n+        return endpointInfos;\n+    }\n+\n+    private static List<EndpointInfo> getApplicationEndpoints(String formulaName, FormulaData formulaData) {\n+        // TODO\n+        return Collections.emptyList();\n+    }\n+\n+    private static List<EndpointInfo> getExportersEndpoints(FormulaData formulaData) {\n+        List<EndpointInfo> endpointInfos = new ArrayList<>();\n+        Map<String, Object> formulaValues = formulaData.getFormulaValues();\n+        if (formulaValues.containsKey(\"exporters\")) {\n+            Optional<Boolean> proxyEnabled = getValueByPath(formulaValues, \"proxy_enabled\")\n+                    .filter(Boolean.class::isInstance)\n+                    .map(Boolean.class::cast);\n+            Optional<Integer> proxyPort = Optional.empty();\n+            if (proxyEnabled.isPresent() && proxyEnabled.get()) {\n+                proxyPort = getValueByPath(formulaValues, \"proxy_port\")\n+                        .filter(Number.class::isInstance)\n+                        .map(Number.class::cast)\n+                        .map(Number::intValue);\n+            }\n+\n+            Map<String, Object> exportersMap = getValueByPath(formulaValues, \"exporters\")\n+                    .filter(Map.class::isInstance)\n+                    .map(Map.class::cast).get();\n+\n+            for (Map.Entry<String, Object> exporterEntry : exportersMap.entrySet()) {\n+                Map<String, Object> exporterConfigMap = Optional.ofNullable(exporterEntry.getValue())\n+                        .filter(Map.class::isInstance)\n+                        .map(Map.class::cast).get();\n+                Boolean exporterEnabled = Optional.ofNullable(exporterConfigMap.getOrDefault(\"enabled\", false))\n+                        .filter(Boolean.class::isInstance)\n+                        .map(Boolean.class::cast).get();\n+                if (exporterEnabled) {\n+                    ExporterConfig exporterConfig = new ExporterConfig(\n+                            exporterEntry.getKey(),\n+                            Optional.ofNullable(exporterConfigMap.getOrDefault(\"address\", null))\n+                                    .filter(String.class::isInstance).map(String.class::cast).get(),\n+                            Optional.ofNullable(exporterConfigMap.getOrDefault(\"args\", null))\n+                                    .filter(String.class::isInstance).map(String.class::cast).get());\n+                    EndpointInfo endpointInfo = new EndpointInfo(\n+                            formulaData.getSystemID(),\n+                            Optional.ofNullable(exporterConfigMap.getOrDefault(\"name\", exporterConfig.getName()))\n+                                    .filter(String.class::isInstance).map(String.class::cast).get());\n+                    endpointInfo.setExporterName(endpointInfo.getEndpointName());\n+                    endpointInfo.setPort(proxyPort.orElse(exporterConfig.getPort()));\n+                    if (proxyEnabled.isPresent() && proxyEnabled.get()) {\n+                        endpointInfo.setModule(Optional.ofNullable(\n+                                exporterConfigMap.getOrDefault(\"proxy_module\", endpointInfo.getEndpointName()))\n+                                .filter(String.class::isInstance).map(String.class::cast).get());\n+                        endpointInfo.setPath(\"/proxy\");\n+                    }\n+\n+                    endpointInfos.add(endpointInfo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3793dc53469d40fbc65d17e20e22286f93f03ec5"}, "originalPosition": 116}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3793dc53469d40fbc65d17e20e22286f93f03ec5", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/3793dc53469d40fbc65d17e20e22286f93f03ec5", "committedDate": "2021-01-20T17:17:29Z", "message": "Add empty comment line to please RegexpHeader"}, "afterCommit": {"oid": "3bfdaba2e5a4fd41a666f17437e4eb1292e21243", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/3bfdaba2e5a4fd41a666f17437e4eb1292e21243", "committedDate": "2021-03-16T11:27:34Z", "message": "Add EndpointInfoSerializer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bfdaba2e5a4fd41a666f17437e4eb1292e21243", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/3bfdaba2e5a4fd41a666f17437e4eb1292e21243", "committedDate": "2021-03-16T11:27:34Z", "message": "Add EndpointInfoSerializer"}, "afterCommit": {"oid": "4b75ea8c6356336492e1e98f7bf7585d0af21062", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4b75ea8c6356336492e1e98f7bf7585d0af21062", "committedDate": "2021-07-14T15:44:41Z", "message": "Add TLS support and use streams"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEwMjk1NDIw", "url": "https://github.com/uyuni-project/uyuni/pull/2987#pullrequestreview-710295420", "createdAt": "2021-07-20T08:09:22Z", "commit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0yMFQwODowOToyMlrOKBuvFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0yMFQwODo0MjoyOFrOKBwMhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjkwMjkzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * ServerMonitoringHandler\n          \n          \n            \n             * SystemMonitoringHandler\n          \n      \n    \n    \n  \n\nThis comment does not match the actual class name.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672902934", "createdAt": "2021-07-20T08:09:22Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/system/monitoring/SystemMonitoringHandler.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.redhat.rhn.frontend.xmlrpc.system.monitoring;\n+\n+import com.redhat.rhn.domain.dto.EndpointInfo;\n+import com.redhat.rhn.domain.user.User;\n+import com.redhat.rhn.frontend.xmlrpc.BaseHandler;\n+import com.redhat.rhn.manager.formula.FormulaManager;\n+\n+import java.util.List;\n+\n+/**\n+ * ServerMonitoringHandler", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjkxMDE0NA==", "bodyText": "This change seems unrelated to the patch and could probably be omitted (= 1 file less that is changed).", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672910144", "createdAt": "2021-07-20T08:19:37Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/system/SystemHandler.java", "diffHunk": "@@ -7787,5 +7787,4 @@ public TaskomaticApi getTaskomaticApi() {\n     private static List<String> maybeActivationKeys(String activationKey) {\n         return StringUtils.isEmpty(activationKey) ? Collections.emptyList() : List.of(activationKey);\n     }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjkxNDg2OQ==", "bodyText": "At least for this method it would be great to implement some unit tests.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672914869", "createdAt": "2021-07-20T08:26:06Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/manager/formula/FormulaManager.java", "diffHunk": "@@ -381,6 +408,32 @@ private FormulaData getCombinedFormulaDataForSystem(MinionIds minionID,\n     public Optional<Map<String, Object>> getClusterFormulaData(Cluster cluster, String formulaKey) {\n         Optional<String> formulaName = FormulaFactory.getClusterProviderFormulaName(cluster.getProvider(), formulaKey);\n         return formulaName\n-                .flatMap(name -> getGroupFormulaValuesByNameAndGroupId(name, cluster.getGroup().getId()));\n+                .flatMap(name -> FormulaFactory.getGroupFormulaValuesByNameAndGroupId(name,\n+                        cluster.getGroup().getId()));\n+    }\n+\n+    /**\n+     * Gets all endpoints details for given systems\n+     * @param systemIDs list of system IDs\n+     * @return list of endpoint information objects\n+     */\n+    public List<EndpointInfo> listEndpoints(List<Long> systemIDs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjkxNzc5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *\n          \n          \n            \n             * Copyright (c) 2021 SUSE LLC\n          \n          \n            \n             *\n          \n      \n    \n    \n  \n\nThe copyright header is missing for all new classes in this patch, wouldn't checkstyle usually remind us about that?", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672917799", "createdAt": "2021-07-20T08:30:11Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/domain/dto/EndpointInfo.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjkyMDg0MQ==", "bodyText": "Not sure how big is the risk here, but could calling get() result in a NPE here (or on the previous assignment)?", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672920841", "createdAt": "2021-07-20T08:34:25Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/domain/formula/FormulaFactory.java", "diffHunk": "@@ -1108,4 +1109,54 @@ public static String getClusterPillarDir() {\n         return dataDir + PILLAR_DIR;\n     }\n \n+    /**\n+     * Find endpoint information from given formula data\n+     * @param formulaName name of the formula to examine\n+     * @param formulaData formula data to extract information from\n+     * @return list of endpoint information objects\n+     */\n+    public static List<EndpointInfo> getEndpointsFromFormulaData(String formulaName, FormulaData formulaData) {\n+        return getExportersEndpoints(formulaData);\n+    }\n+\n+    private static List<EndpointInfo> getExportersEndpoints(FormulaData formulaData) {\n+        Map<String, Object> formulaValues = formulaData.getFormulaValues();\n+        if (formulaValues.containsKey(\"exporters\")) {\n+            Boolean proxyEnabled = getValueByPath(formulaValues, \"proxy_enabled\")\n+                    .filter(Boolean.class::isInstance)\n+                    .map(Boolean.class::cast)\n+                    .orElse(false);\n+            Optional<Integer> proxyPort = proxyEnabled ? getValueByPath(formulaValues, \"proxy_port\")\n+                    .filter(Number.class::isInstance)\n+                    .map(Number.class::cast)\n+                    .map(Number::intValue) : Optional.empty();\n+            String proxyPath = proxyEnabled ? \"/proxy\" : null;\n+            Boolean tlsEnabled = getValueByPath(formulaValues, \"tls:enabled\")\n+                    .filter(Boolean.class::isInstance)\n+                    .map(Boolean.class::cast)\n+                    .orElse(false);\n+\n+            Map<String, Object> exportersMap = getValueByPath(formulaValues, \"exporters\")\n+                    .filter(Map.class::isInstance)\n+                    .map(Map.class::cast).get();\n+\n+            return exportersMap.entrySet().stream()\n+                    .map(exporterEntry -> new ExporterConfig(exporterEntry.getKey(),\n+                            Optional.ofNullable(exporterEntry.getValue())\n+                                    .filter(Map.class::isInstance).map(Map.class::cast).get()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjkyNjg1NQ==", "bodyText": "I understand that we would only return monitoring endpoints in the meantime.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672926855", "createdAt": "2021-07-20T08:42:28Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/domain/dto/EndpointInfo.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/**\n+ *\n+ * Copyright (c) 2021 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.redhat.rhn.domain.dto;\n+\n+/**\n+ * Class for representing the endpoint information of applications or Prometheus exporters of a minion system\n+ */\n+public class EndpointInfo {\n+\n+    private Long systemID;\n+    private String endpointName;\n+    private Integer port;\n+    private String path;\n+    private String module;\n+    private String exporterName;\n+\n+    /**\n+     * Instantiates a new endpoint information\n+     * @param systemIDIn server ID\n+     * @param endpointNameIn endpoint name\n+     */\n+    public EndpointInfo(Long systemIDIn, String endpointNameIn) {\n+        this.systemID = systemIDIn;\n+        this.endpointName = endpointNameIn;\n+    }\n+\n+    public Long getSystemID() {\n+        return systemID;\n+    }\n+\n+    public String getEndpointName() {\n+        return endpointName;\n+    }\n+\n+    public Integer getPort() {\n+        return port;\n+    }\n+\n+    public void setPort(Integer portIn) {\n+        this.port = portIn;\n+    }\n+\n+    public String getPath() {\n+        return path;\n+    }\n+\n+    public void setPath(String pathIn) {\n+        this.path = pathIn;\n+    }\n+\n+    public String getModule() {\n+        return module;\n+    }\n+\n+    public void setModule(String moduleIn) {\n+        this.module = moduleIn;\n+    }\n+\n+    public String getExporterName() {\n+        return exporterName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjg4Mjg5MQ=="}, "originalCommit": {"oid": "3793dc53469d40fbc65d17e20e22286f93f03ec5"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEwMzg4Njcz", "url": "https://github.com/uyuni-project/uyuni/pull/2987#pullrequestreview-710388673", "createdAt": "2021-07-20T09:48:41Z", "commit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0yMFQwOTo0ODo0MVrOKBzJIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0yMFQwOTo1OTo0NlrOKBzn_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3Mjk3NTEzNg==", "bodyText": "@renner, do you mean only exporters'?\nIf so, I am fine with this. Otherwise, I might suggest wrapping this String into an Optional for added clarity.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672975136", "createdAt": "2021-07-20T09:48:41Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/domain/dto/EndpointInfo.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/**\n+ *\n+ * Copyright (c) 2021 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.redhat.rhn.domain.dto;\n+\n+/**\n+ * Class for representing the endpoint information of applications or Prometheus exporters of a minion system\n+ */\n+public class EndpointInfo {\n+\n+    private Long systemID;\n+    private String endpointName;\n+    private Integer port;\n+    private String path;\n+    private String module;\n+    private String exporterName;\n+\n+    /**\n+     * Instantiates a new endpoint information\n+     * @param systemIDIn server ID\n+     * @param endpointNameIn endpoint name\n+     */\n+    public EndpointInfo(Long systemIDIn, String endpointNameIn) {\n+        this.systemID = systemIDIn;\n+        this.endpointName = endpointNameIn;\n+    }\n+\n+    public Long getSystemID() {\n+        return systemID;\n+    }\n+\n+    public String getEndpointName() {\n+        return endpointName;\n+    }\n+\n+    public Integer getPort() {\n+        return port;\n+    }\n+\n+    public void setPort(Integer portIn) {\n+        this.port = portIn;\n+    }\n+\n+    public String getPath() {\n+        return path;\n+    }\n+\n+    public void setPath(String pathIn) {\n+        this.path = pathIn;\n+    }\n+\n+    public String getModule() {\n+        return module;\n+    }\n+\n+    public void setModule(String moduleIn) {\n+        this.module = moduleIn;\n+    }\n+\n+    public String getExporterName() {\n+        return exporterName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjg4Mjg5MQ=="}, "originalCommit": {"oid": "3793dc53469d40fbc65d17e20e22286f93f03ec5"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3Mjk3ODUwNw==", "bodyText": "Does it make sense at all to have a config with null name, or address, proxy_module, etc?\nIf so (which is what I think I understand from the code), I'd suggest wrapping those into an Optional - so that we make explicit what might not be there - and always assume non-null otherwise.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672978507", "createdAt": "2021-07-20T09:53:12Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/domain/formula/ExporterConfig.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/**\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.redhat.rhn.domain.formula;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class ExporterConfig {\n+\n+    private static final String PORT_ARG_REGEX = \"--(?:telemetry\\\\.address|web\\\\.listen-address)=[\\\"']?:([0-9]*)[\\\"']?\";\n+    private static final String PORT_ADDRESS_REGEX = \":([0-9]*)$\";\n+\n+    private final Boolean enabled;\n+    private final String name;\n+    private final String endpointName;\n+    private final String address;\n+    private final String args;\n+    private final String proxyModule;\n+\n+    /**\n+     * Instantiates new exporter configuration object\n+     * @param enabledIn flag enabling the exporter\n+     * @param exporterNameIn exporter name\n+     * @param endpointNameIn endpoint name\n+     * @param addressIn the address of the endpoint where metrics are exposed\n+     * @param argsIn the string with command line arguments\n+     * @param proxyModuleIn module name for exporter exporter\n+     */\n+    public ExporterConfig(String exporterNameIn, Boolean enabledIn, String endpointNameIn, String addressIn,\n+                          String argsIn, String proxyModuleIn) {\n+        this.enabled = enabledIn;\n+        this.name = exporterNameIn;\n+        this.endpointName = endpointNameIn;\n+        this.address = addressIn;\n+        this.args = argsIn;\n+        this.proxyModule = proxyModuleIn;\n+    }\n+\n+    /**\n+    * Instantiate new exporter using name and configuration map\n+    * @param exporterName exporter name\n+    * @param exporterConfigMap map with configuration values\n+    */\n+    public ExporterConfig(String exporterName, Map<String, Object> exporterConfigMap) {\n+        this(\n+                exporterName,\n+                Optional.ofNullable(exporterConfigMap.getOrDefault(\"enabled\", false))\n+                        .filter(Boolean.class::isInstance).map(Boolean.class::cast).orElse(false),\n+                Optional.ofNullable(exporterConfigMap.getOrDefault(\"name\", null))\n+                        .filter(String.class::isInstance).map(String.class::cast).orElse(null),\n+                Optional.ofNullable(exporterConfigMap.getOrDefault(\"address\", null))\n+                        .filter(String.class::isInstance).map(String.class::cast).orElse(null),\n+                Optional.ofNullable(exporterConfigMap.getOrDefault(\"args\", null))\n+                        .filter(String.class::isInstance).map(String.class::cast).orElse(null),\n+                Optional.ofNullable(exporterConfigMap.getOrDefault(\"proxy_module\", null))\n+                        .filter(String.class::isInstance).map(String.class::cast).orElse(null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3Mjk3OTgwOA==", "bodyText": "Similarly to the above comment - here I guess you could just return port, and have the caller decide what to do in case the Optional is empty. That way we do not risk the caller tripping on a NullPointerException inadvertently.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672979808", "createdAt": "2021-07-20T09:54:59Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/domain/formula/ExporterConfig.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/**\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.redhat.rhn.domain.formula;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class ExporterConfig {\n+\n+    private static final String PORT_ARG_REGEX = \"--(?:telemetry\\\\.address|web\\\\.listen-address)=[\\\"']?:([0-9]*)[\\\"']?\";\n+    private static final String PORT_ADDRESS_REGEX = \":([0-9]*)$\";\n+\n+    private final Boolean enabled;\n+    private final String name;\n+    private final String endpointName;\n+    private final String address;\n+    private final String args;\n+    private final String proxyModule;\n+\n+    /**\n+     * Instantiates new exporter configuration object\n+     * @param enabledIn flag enabling the exporter\n+     * @param exporterNameIn exporter name\n+     * @param endpointNameIn endpoint name\n+     * @param addressIn the address of the endpoint where metrics are exposed\n+     * @param argsIn the string with command line arguments\n+     * @param proxyModuleIn module name for exporter exporter\n+     */\n+    public ExporterConfig(String exporterNameIn, Boolean enabledIn, String endpointNameIn, String addressIn,\n+                          String argsIn, String proxyModuleIn) {\n+        this.enabled = enabledIn;\n+        this.name = exporterNameIn;\n+        this.endpointName = endpointNameIn;\n+        this.address = addressIn;\n+        this.args = argsIn;\n+        this.proxyModule = proxyModuleIn;\n+    }\n+\n+    /**\n+    * Instantiate new exporter using name and configuration map\n+    * @param exporterName exporter name\n+    * @param exporterConfigMap map with configuration values\n+    */\n+    public ExporterConfig(String exporterName, Map<String, Object> exporterConfigMap) {\n+        this(\n+                exporterName,\n+                Optional.ofNullable(exporterConfigMap.getOrDefault(\"enabled\", false))\n+                        .filter(Boolean.class::isInstance).map(Boolean.class::cast).orElse(false),\n+                Optional.ofNullable(exporterConfigMap.getOrDefault(\"name\", null))\n+                        .filter(String.class::isInstance).map(String.class::cast).orElse(null),\n+                Optional.ofNullable(exporterConfigMap.getOrDefault(\"address\", null))\n+                        .filter(String.class::isInstance).map(String.class::cast).orElse(null),\n+                Optional.ofNullable(exporterConfigMap.getOrDefault(\"args\", null))\n+                        .filter(String.class::isInstance).map(String.class::cast).orElse(null),\n+                Optional.ofNullable(exporterConfigMap.getOrDefault(\"proxy_module\", null))\n+                        .filter(String.class::isInstance).map(String.class::cast).orElse(null)\n+        );\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getAddress() {\n+        return address;\n+    }\n+\n+    public String getArgs() {\n+        return args;\n+    }\n+\n+    public String getEndpointName() {\n+        return endpointName != null ? endpointName : getName();\n+    }\n+\n+    public String getProxyModule() {\n+        return proxyModule != null ? proxyModule : getEndpointName();\n+    }\n+\n+    public Boolean isEnabled() {\n+        return enabled;\n+    }\n+\n+    /**\n+     * Get port number at which metrics are exposed\n+     * @return port number\n+     */\n+    public Integer getPort() {\n+        Optional<Integer> port = getPatternMatchGroupAsInteger(PORT_ARG_REGEX, args);\n+        if (port.isEmpty()) {\n+            port = getPatternMatchGroupAsInteger(PORT_ADDRESS_REGEX, address);\n+        }\n+        return port.orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3Mjk4MTE5OQ==", "bodyText": "It seems like this method is exclusively called from two lines above - if it's indeed not used elsewhere, I'd suggest inlining it.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672981199", "createdAt": "2021-07-20T09:57:03Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/domain/formula/FormulaFactory.java", "diffHunk": "@@ -1108,4 +1109,54 @@ public static String getClusterPillarDir() {\n         return dataDir + PILLAR_DIR;\n     }\n \n+    /**\n+     * Find endpoint information from given formula data\n+     * @param formulaName name of the formula to examine\n+     * @param formulaData formula data to extract information from\n+     * @return list of endpoint information objects\n+     */\n+    public static List<EndpointInfo> getEndpointsFromFormulaData(String formulaName, FormulaData formulaData) {\n+        return getExportersEndpoints(formulaData);\n+    }\n+\n+    private static List<EndpointInfo> getExportersEndpoints(FormulaData formulaData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3Mjk4MzAzNg==", "bodyText": "I think at least this method deserves a jUnit test.", "url": "https://github.com/uyuni-project/uyuni/pull/2987#discussion_r672983036", "createdAt": "2021-07-20T09:59:46Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/system/monitoring/SystemMonitoringHandler.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.redhat.rhn.frontend.xmlrpc.system.monitoring;\n+\n+import com.redhat.rhn.domain.dto.EndpointInfo;\n+import com.redhat.rhn.domain.user.User;\n+import com.redhat.rhn.frontend.xmlrpc.BaseHandler;\n+import com.redhat.rhn.manager.formula.FormulaManager;\n+\n+import java.util.List;\n+\n+/**\n+ * ServerMonitoringHandler\n+ * @xmlrpc.namespace system.monitoring\n+ * @xmlrpc.doc Provides methods to access information about managed systems, applications and formulas which can be\n+ * relevant for Prometheus monitoring\n+ */\n+public class SystemMonitoringHandler extends BaseHandler {\n+\n+    private final FormulaManager formulaManager;\n+\n+    /**\n+     * Instantiates a new system handler for system.monitoring namespace\n+     * @param formulaManagerIn instance of formula manager object\n+     */\n+    public SystemMonitoringHandler(FormulaManager formulaManagerIn) {\n+        this.formulaManager = formulaManagerIn;\n+    }\n+\n+    /**\n+     * Get the endpoint details for all Prometheus exporters installed on the systems whose IDs match\n+     * with the passed systems IDs and all of the groups those systems are member of.\n+     *\n+     * @param loggedInUser The current user\n+     * @param systemIDs The system IDs\n+     * @return a list containing endpoint details for all Prometheus exporters on the passed system IDs.\n+     *\n+     * @xmlrpc.param #session_key()\n+     * @xmlrpc.param #array_single(\"int\", \"systemID\")\n+     * @xmlrpc.returntype\n+     *   #array_begin()\n+     *     $EndpointInfo\n+     *   #array_end()\n+     */\n+    public List<EndpointInfo> listEndpoints(User loggedInUser, List<Long> systemIDs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee2b8b204005956db9272392e0808f5fe724f30"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9435fcc61ade61b9804705dcb6f8119e0e795e36", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/9435fcc61ade61b9804705dcb6f8119e0e795e36", "committedDate": "2021-07-29T14:43:59Z", "message": "Add changelog entry"}, "afterCommit": {"oid": "c09f9c57e2d412b575185986db9a270925086d17", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c09f9c57e2d412b575185986db9a270925086d17", "committedDate": "2021-07-29T14:47:34Z", "message": "Add changelog entry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8e0b3810f36932ed83bdcf4e5f80d23e40e3809", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d8e0b3810f36932ed83bdcf4e5f80d23e40e3809", "committedDate": "2021-07-30T08:37:03Z", "message": "Catch empty exporters section case"}, "afterCommit": {"oid": "afe333e5e4833ef38debe67e1ef8485a96bd859f", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/afe333e5e4833ef38debe67e1ef8485a96bd859f", "committedDate": "2021-07-30T08:49:53Z", "message": "Catch empty exporters section case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "afe333e5e4833ef38debe67e1ef8485a96bd859f", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/afe333e5e4833ef38debe67e1ef8485a96bd859f", "committedDate": "2021-07-30T08:49:53Z", "message": "Catch empty exporters section case"}, "afterCommit": {"oid": "9598c9dd5ff96ae6d30f34db1d89d18e3453d098", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/9598c9dd5ff96ae6d30f34db1d89d18e3453d098", "committedDate": "2021-07-30T09:26:55Z", "message": "Catch empty exporters section case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9598c9dd5ff96ae6d30f34db1d89d18e3453d098", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/9598c9dd5ff96ae6d30f34db1d89d18e3453d098", "committedDate": "2021-07-30T09:26:55Z", "message": "Catch empty exporters section case"}, "afterCommit": {"oid": "ed0be912df1e35f7d27e2c6c7038df597b5c8d49", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ed0be912df1e35f7d27e2c6c7038df597b5c8d49", "committedDate": "2021-07-30T09:29:27Z", "message": "Catch empty exporters section case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed0be912df1e35f7d27e2c6c7038df597b5c8d49", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ed0be912df1e35f7d27e2c6c7038df597b5c8d49", "committedDate": "2021-07-30T09:29:27Z", "message": "Catch empty exporters section case"}, "afterCommit": {"oid": "17535943e3cec11f863e846b52db3899ac55f2fe", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/17535943e3cec11f863e846b52db3899ac55f2fe", "committedDate": "2021-07-30T09:35:10Z", "message": "Catch empty exporters section case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17535943e3cec11f863e846b52db3899ac55f2fe", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/17535943e3cec11f863e846b52db3899ac55f2fe", "committedDate": "2021-07-30T09:35:10Z", "message": "Catch empty exporters section case"}, "afterCommit": {"oid": "d550cc93e70baa22fec8c07e8cad8738c09cb76e", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d550cc93e70baa22fec8c07e8cad8738c09cb76e", "committedDate": "2021-07-30T12:56:13Z", "message": "Catch empty exporters section case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d550cc93e70baa22fec8c07e8cad8738c09cb76e", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d550cc93e70baa22fec8c07e8cad8738c09cb76e", "committedDate": "2021-07-30T12:56:13Z", "message": "Catch empty exporters section case"}, "afterCommit": {"oid": "d52825f934c2032b7043ef384c9a87b2312a3cd2", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d52825f934c2032b7043ef384c9a87b2312a3cd2", "committedDate": "2021-07-30T14:22:15Z", "message": "Catch empty exporters section case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36561ec665ea496c89563a27b9ba1df9968deb25", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/36561ec665ea496c89563a27b9ba1df9968deb25", "committedDate": "2021-08-03T15:07:17Z", "message": "Fix FormulaManagerTest.testListEndpoints"}, "afterCommit": {"oid": "40e9858b7871f40760554ca08b92890a775e9d03", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/40e9858b7871f40760554ca08b92890a775e9d03", "committedDate": "2021-08-03T15:10:01Z", "message": "Fix FormulaManagerTest.testListEndpoints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aeeacc2ba1861b225e9e5266a2045140e1bd620d", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/aeeacc2ba1861b225e9e5266a2045140e1bd620d", "committedDate": "2021-08-03T16:08:21Z", "message": "Reset changes in src/com/redhat/rhn/frontend/xmlrpc/system/SystemHandler.java"}, "afterCommit": {"oid": "0a159d13e8cc0a50c4733984113e84eeaca23715", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/0a159d13e8cc0a50c4733984113e84eeaca23715", "committedDate": "2021-08-04T08:35:08Z", "message": "Reset changes in src/com/redhat/rhn/frontend/xmlrpc/system/SystemHandler.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzMzM2NDAw", "url": "https://github.com/uyuni-project/uyuni/pull/2987#pullrequestreview-723336400", "createdAt": "2021-08-05T13:12:33Z", "commit": {"oid": "88ab145fd9c258c0779e199333c72808411742ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzMzQ4NjQw", "url": "https://github.com/uyuni-project/uyuni/pull/2987#pullrequestreview-723348640", "createdAt": "2021-08-05T13:23:19Z", "commit": {"oid": "88ab145fd9c258c0779e199333c72808411742ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88ab145fd9c258c0779e199333c72808411742ea", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/88ab145fd9c258c0779e199333c72808411742ea", "committedDate": "2021-08-05T10:40:41Z", "message": "Add copyright headers"}, "afterCommit": {"oid": "0b4c1eaf1bcae50998048bcda0c776d7aafeab93", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/0b4c1eaf1bcae50998048bcda0c776d7aafeab93", "committedDate": "2021-08-09T07:23:00Z", "message": "Add changelog entry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b4c1eaf1bcae50998048bcda0c776d7aafeab93", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/0b4c1eaf1bcae50998048bcda0c776d7aafeab93", "committedDate": "2021-08-09T07:23:00Z", "message": "Add changelog entry"}, "afterCommit": {"oid": "cc70d85fbc387a9ea247e530c50e9872b0c294d7", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/cc70d85fbc387a9ea247e530c50e9872b0c294d7", "committedDate": "2021-08-09T15:35:47Z", "message": "Add changelog entry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc70d85fbc387a9ea247e530c50e9872b0c294d7", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/cc70d85fbc387a9ea247e530c50e9872b0c294d7", "committedDate": "2021-08-09T15:35:47Z", "message": "Add changelog entry"}, "afterCommit": {"oid": "52c8060db727580b72163fb36ba776ca1e8bfafb", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/52c8060db727580b72163fb36ba776ca1e8bfafb", "committedDate": "2021-08-16T08:24:35Z", "message": "Add changelog entry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d11e026f3797357a8a184f41c383e20ccfdfd9b", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/1d11e026f3797357a8a184f41c383e20ccfdfd9b", "committedDate": "2021-08-16T08:42:21Z", "message": "Add new API method to list all endpoints\n\nThe new method returns a list of object containing all relevant\ninformation about application or Prometheus exporters endpoints."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fb4dacdc96c467c2a649d1d3ddad4ba010c9c99", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/3fb4dacdc96c467c2a649d1d3ddad4ba010c9c99", "committedDate": "2021-08-16T08:42:54Z", "message": "Add changelog entry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52c8060db727580b72163fb36ba776ca1e8bfafb", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/52c8060db727580b72163fb36ba776ca1e8bfafb", "committedDate": "2021-08-16T08:24:35Z", "message": "Add changelog entry"}, "afterCommit": {"oid": "3fb4dacdc96c467c2a649d1d3ddad4ba010c9c99", "author": {"user": {"login": "witekest", "name": "Witek Bedyk"}}, "url": "https://github.com/uyuni-project/uyuni/commit/3fb4dacdc96c467c2a649d1d3ddad4ba010c9c99", "committedDate": "2021-08-16T08:42:54Z", "message": "Add changelog entry"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 812, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}