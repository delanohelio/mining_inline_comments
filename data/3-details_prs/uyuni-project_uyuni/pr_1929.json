{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MTY3MjAx", "number": 1929, "title": "Clean stale Content Environment targets & Prevent users from trigerring Content Project build/promote when colliding operation is in progress", "bodyText": "TODO\n\n Address comments from @moio  & test again before merging\n\nWhat does this PR change?\nThis PR fixes 3 Content Lifecycle Management-related things:\n1, Clean stale Content Environment targets (first 2 commits)\nIf user builds/promotes a Content Project, SUMA performs channel cloning (using\nthe MessageQueue), during which the Environment Targets are set to BUILDING\nstate. For huge channels with a lot of errata, it can take a long time. If SUMA\nis restarted during this operation, the Environment Targets stay in BUILDING\nstate together.\nThis PR proposes cleaning up stale BUILDING channels on Tomcat startup (I\ntook inspiration in the UpgradeCommand class).\nEspecially the review of the \"Clean stale Content Lifecycle targets on Tomcat startup\" commit is very important.\n2, Forbid triggering dangerous build/promote (rest of the commits minus the latest one)\nThis should prevent user from running build/promote, when there is a colliding build/promote in progress.\nExample: Imagine the following Environment path:\ndev -> test -> prod -> legacy\nWhen user triggers a promote test -> prod, following operations should be forbidden until the promote finishes:\n\npromote dev -> test, as this affects test (which is being promoted to prod now!)\npromote test -> prod, as this operation is running now,\npromote prod -> legacy, as the current promotion is changing prod.\n\nThis wasn't the case before and user could run build/promote without any limitation, possibly leading to inconsistencies during channel cloning.\nChecks are implemented in backend and UI. XMLRPC API doesn't need to be changed as it relies on backend exception handling.\n3, Allow re-promoting of an Environment (last commit)\nIn the UI, when 2 subsequent environments (e1 and e2) have same version number, it's impossible to click the Promote button to trigger promotion from e1 to e2. The last commit relaxes this condition as re-promoting could make sense in some cases (the previous build of e2 has failed).\nGUI diff\nNo difference.\nBefore:\nAfter:\n\n DONE\n\nDocumentation\n\nNo documentation needed: bugfix\n DONE\n\nTest coverage\n\n\nUnit tests were added\n\n\n DONE\n\n\nLinks\nTracks SUSE/spacewalk#10742\n\n DONE\n\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_lint_checkstyle\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"ruby_rubocop\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\"\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-02-19T13:23:40Z", "url": "https://github.com/uyuni-project/uyuni/pull/1929", "merged": true, "mergeCommit": {"oid": "910363a3534c538763b9f3aca60d4e2dd9a9cb23"}, "closed": true, "closedAt": "2020-03-10T08:51:11Z", "author": {"login": "hustodemon"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF3YbjAFqTM2MTE1MjkxOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMONV2gH2gAyMzc3MTY3MjAxOmMyZTExODIzOTY4MjEyM2IxYzI3MmVhNjViZTc3YzRiNzA2OTQ0MWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMTUyOTE5", "url": "https://github.com/uyuni-project/uyuni/pull/1929#pullrequestreview-361152919", "createdAt": "2020-02-19T14:27:10Z", "commit": {"oid": "d7722377fb1342fb24b5f3e8cf3f3dd89a2669a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7722377fb1342fb24b5f3e8cf3f3dd89a2669a2", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d7722377fb1342fb24b5f3e8cf3f3dd89a2669a2", "committedDate": "2020-02-19T13:18:07Z", "message": "Changelog"}, "afterCommit": {"oid": "e57da92ccfb6f1c52d0047deaefee41c88aa03e8", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/e57da92ccfb6f1c52d0047deaefee41c88aa03e8", "committedDate": "2020-02-20T16:48:56Z", "message": "Changelog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NzUyMjIz", "url": "https://github.com/uyuni-project/uyuni/pull/1929#pullrequestreview-365752223", "createdAt": "2020-02-27T15:21:43Z", "commit": {"oid": "a954334cccbb0285042d0206ab9f0b30d88cc0dd"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNToyMTo0M1rOFvVlIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNToyODoxM1rOFvV3Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4MDk2Mw==", "bodyText": "IIUC those two conditions stand for:\n\nif the first environment is building from sources, I will not be able to Build because if I do that it would overwrite the current building\nif the second environment is building, I will not be able to Build because if I do that the current building from the  first environment to the second will be overwritten\n\nAre these correct? I'd say let's add one line comment for each, what do you think?", "url": "https://github.com/uyuni-project/uyuni/pull/1929#discussion_r385180963", "createdAt": "2020-02-27T15:21:43Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/content-management/project/project.js", "diffHunk": "@@ -73,7 +73,11 @@ const Project = (props: Props) => {\n   }\n \n   const isProjectEdited = changesToBuild.length > 0;\n-  const isBuildDisabled = !hasEditingPermissions || _isEmpty(project.environments) || _isEmpty(project.softwareSources);\n+  const isBuildDisabled = !hasEditingPermissions\n+        || _isEmpty(project.environments)\n+        || _isEmpty(project.softwareSources)\n+        || project.environments[0].status === \"building\"\n+        || (project.environments[1] || {}).status === \"building\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a954334cccbb0285042d0206ab9f0b30d88cc0dd"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4NTYzOQ==", "bodyText": "Good idea, I like the fact we give a hint in the UI, I'd also suggest to add a clear note in the documentation about the entire behavior. \ud83d\udc4d", "url": "https://github.com/uyuni-project/uyuni/pull/1929#discussion_r385185639", "createdAt": "2020-02-27T15:28:13Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/content-management/shared/components/panels/promote/promote.js", "diffHunk": "@@ -37,13 +38,18 @@ const Promote = (props: Props) => {\n   }, [open]);\n \n   const modalNameId = `${props.environmentPromote.label}-cm-promote-env-modal`;\n+\n   const disabled =\n     !hasEditingPermissions\n     || !props.environmentPromote.version\n-    || props.environmentPromote.version <= props.environmentTarget.version;\n+    || props.environmentPromote.version <= props.environmentTarget.version\n+    || props.environmentPromote.status === \"building\"\n+    || props.environmentTarget.status === \"building\"\n+    || (props.environmentNextTarget || {}).status === \"building\";\n+\n   return (\n     <div\n-      {...(disabled ? {title: t(\"No version to promote\")} : {})}\n+      {...(disabled ? {title: t(\"No version to promote or colliding environment build in progress\")} : {})}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a954334cccbb0285042d0206ab9f0b30d88cc0dd"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MzcwODcy", "url": "https://github.com/uyuni-project/uyuni/pull/1929#pullrequestreview-366370872", "createdAt": "2020-02-28T12:44:22Z", "commit": {"oid": "2bf85e0a658c36cb2625284ab7683f4314061e50"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjo0NDoyM1rOFvzxDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjo0NToyM1rOFvzy0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NTUzNQ==", "bodyText": "How many of these objects to we expect in worst case?\nIf it is more than, say, 100, I would suggest an UPDATE query instead of SELECTing, hydrating, updating and saving back (I would imagine at a later point in time).", "url": "https://github.com/uyuni-project/uyuni/pull/1929#discussion_r385675535", "createdAt": "2020-02-28T12:44:23Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/domain/contentmgmt/ContentProjectFactory.java", "diffHunk": "@@ -567,6 +567,22 @@ public static void remove(ContentProjectFilter filter) {\n         INSTANCE.removeObject(filter);\n     }\n \n+    /**\n+     * Set all BUILDING {@link EnvironmentTarget}s to FAILED state.\n+     *\n+     * @return the number of updated targets\n+     */\n+    public static int failStaleTargets() {\n+        List<EnvironmentTarget> targets = HibernateFactory.getSession()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bf85e0a658c36cb2625284ab7683f4314061e50"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NTk4Nw==", "bodyText": "Most cleanups of this kind currently take place in Taskomatic. What would be the pros and cons in this specific case?", "url": "https://github.com/uyuni-project/uyuni/pull/1929#discussion_r385675987", "createdAt": "2020-02-28T12:45:23Z", "author": {"login": "moio"}, "path": "java/code/src/com/redhat/rhn/manager/satellite/StartupTasksCommand.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package com.redhat.rhn.manager.satellite;\n+\n+import com.redhat.rhn.common.hibernate.HibernateFactory;\n+import com.redhat.rhn.domain.contentmgmt.ContentProjectFactory;\n+import com.redhat.rhn.manager.BaseTransactionCommand;\n+\n+import org.apache.log4j.Logger;\n+\n+/**\n+ * Tasks to be performed on the application startup\n+ */\n+public class StartupTasksCommand extends BaseTransactionCommand {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74f28e61e97077774a7f9d8205dc443dddc2c8e3"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37c843fa7c875d844e5f67bf74b7b606ceff05be", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/37c843fa7c875d844e5f67bf74b7b606ceff05be", "committedDate": "2020-03-10T07:38:47Z", "message": "Method for finding & cleaning stale Content Lifecycle targets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "004f9f3116df3bdd56149f6c5ac843f9c341208c", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/004f9f3116df3bdd56149f6c5ac843f9c341208c", "committedDate": "2020-03-10T07:38:47Z", "message": "Clean stale Content Lifecycle targets on Tomcat startup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb65ed7ceafc1d120a08241d19578dba02fceca1", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/cb65ed7ceafc1d120a08241d19578dba02fceca1", "committedDate": "2020-03-10T07:38:48Z", "message": "Backend: Prevent build/promote on Content Projects which have build/promote in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24a6f42ba410a9677a356c604f799b6ac147f202", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/24a6f42ba410a9677a356c604f799b6ac147f202", "committedDate": "2020-03-10T07:38:48Z", "message": "Tests: Prevent build/promote on Content Projects which have build/promote in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71b5e8dff39c29754645ac92502af179ac9fe432", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/71b5e8dff39c29754645ac92502af179ac9fe432", "committedDate": "2020-03-10T07:38:48Z", "message": "Tests: Complex scenario: Prevent build/promote on Content Projects which have build/promote in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee1d09c9643775b28beda52a1ef171d8bd84fe61", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ee1d09c9643775b28beda52a1ef171d8bd84fe61", "committedDate": "2020-03-10T07:38:48Z", "message": "Fix: Propagate the async flag correctly on Content Project promote"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43b78c025a2ce55edd6cd4847a291375dcea8b4b", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/43b78c025a2ce55edd6cd4847a291375dcea8b4b", "committedDate": "2020-03-10T07:38:48Z", "message": "Frontend: Prevent build/promote on Content Projects which have colliding build/promote in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b808fa4fdb6da8eba2fff922e24d643526e9f9a3", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/b808fa4fdb6da8eba2fff922e24d643526e9f9a3", "committedDate": "2020-03-10T07:39:06Z", "message": "Changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4ff41063a84f3fb5aab1693118588f257dbfa66", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/a4ff41063a84f3fb5aab1693118588f257dbfa66", "committedDate": "2020-03-10T07:39:06Z", "message": "Allow to re-promote an environment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd6fb5677de459feed253fe4ee6bd274ab3e7930", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/dd6fb5677de459feed253fe4ee6bd274ab3e7930", "committedDate": "2020-03-10T08:03:01Z", "message": "Use 'UPDATE' to fail stale CLM tasks instead of iterating through them"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01f52c48998dda648a617cbec5159c1f7e2d927a", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/01f52c48998dda648a617cbec5159c1f7e2d927a", "committedDate": "2020-02-20T17:10:01Z", "message": "Allow to re-promote an environment"}, "afterCommit": {"oid": "dd6fb5677de459feed253fe4ee6bd274ab3e7930", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/dd6fb5677de459feed253fe4ee6bd274ab3e7930", "committedDate": "2020-03-10T08:03:01Z", "message": "Use 'UPDATE' to fail stale CLM tasks instead of iterating through them"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2e118239682123b1c272ea65be77c4b7069441a", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c2e118239682123b1c272ea65be77c4b7069441a", "committedDate": "2020-03-10T08:26:25Z", "message": "Frontend: Add comments to the code"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1675, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}