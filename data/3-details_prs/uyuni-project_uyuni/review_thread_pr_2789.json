{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0ODI3ODIx", "number": 2789, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1Mzo0OVrOE1mjYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTowMTo1NFrOE1mu4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjQxNjM1OnYy", "diffSide": "RIGHT", "path": "backend/common/repo.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1Mzo0OVrOHt91ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo1Mzo0M1rOHuJ8fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2MTA2Ng==", "bodyText": "[nitpick] You don't need to capture the exception here, a raise without an argument will re-raise the last exception.. So instead of doing\nexcept Exception as ex:\n    ...\n    raise ex\nyou could do\nexcept Exception:\n    ...\n    raise", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r517961066", "createdAt": "2020-11-05T10:53:49Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -111,10 +114,15 @@ def get_pkg_index_raw(self) -> typing.Tuple[str, bytes]:\n             for cnt_fname in [DpkgRepo.PKG_GZ, DpkgRepo.PKG_XZ, DpkgRepo.PKG_RW]:\n                 packages_url = self.append_index_file(cnt_fname)\n                 if packages_url.startswith(\"file://\"):\n-                    with open(packages_url.replace(\"file://\", \"\"), \"rb\") as f:\n-                        self._pkg_index = cnt_fname, f.read()\n-                        break\n-                    # TODO: Add logging in error case!\n+                    try:\n+                        with open(packages_url.replace(\"file://\", \"\"), \"rb\") as f:\n+                            self._pkg_index = cnt_fname, f.read()\n+                            break\n+                    except FileNotFoundError as ex:\n+                        logging.execption(\n+                            \"File not found: {}\".format(\n+                                packages_url.replace(\"file://\", \"\"), exc_info=True)\n+                        raise ex", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzMjE2OQ==", "bodyText": "That's true. Kind of a habit of mine. For me it increases readability. But I'm not adamant on that. How badly do you want me to change it? \ud83d\ude09", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518132169", "createdAt": "2020-11-05T15:20:48Z", "author": {"login": "brejoc"}, "path": "backend/common/repo.py", "diffHunk": "@@ -111,10 +114,15 @@ def get_pkg_index_raw(self) -> typing.Tuple[str, bytes]:\n             for cnt_fname in [DpkgRepo.PKG_GZ, DpkgRepo.PKG_XZ, DpkgRepo.PKG_RW]:\n                 packages_url = self.append_index_file(cnt_fname)\n                 if packages_url.startswith(\"file://\"):\n-                    with open(packages_url.replace(\"file://\", \"\"), \"rb\") as f:\n-                        self._pkg_index = cnt_fname, f.read()\n-                        break\n-                    # TODO: Add logging in error case!\n+                    try:\n+                        with open(packages_url.replace(\"file://\", \"\"), \"rb\") as f:\n+                            self._pkg_index = cnt_fname, f.read()\n+                            break\n+                    except FileNotFoundError as ex:\n+                        logging.execption(\n+                            \"File not found: {}\".format(\n+                                packages_url.replace(\"file://\", \"\"), exc_info=True)\n+                        raise ex", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2MTA2Ng=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1OTQ4NA==", "bodyText": "You can keep it if you want, it's not that important :D", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518159484", "createdAt": "2020-11-05T15:53:43Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -111,10 +114,15 @@ def get_pkg_index_raw(self) -> typing.Tuple[str, bytes]:\n             for cnt_fname in [DpkgRepo.PKG_GZ, DpkgRepo.PKG_XZ, DpkgRepo.PKG_RW]:\n                 packages_url = self.append_index_file(cnt_fname)\n                 if packages_url.startswith(\"file://\"):\n-                    with open(packages_url.replace(\"file://\", \"\"), \"rb\") as f:\n-                        self._pkg_index = cnt_fname, f.read()\n-                        break\n-                    # TODO: Add logging in error case!\n+                    try:\n+                        with open(packages_url.replace(\"file://\", \"\"), \"rb\") as f:\n+                            self._pkg_index = cnt_fname, f.read()\n+                            break\n+                    except FileNotFoundError as ex:\n+                        logging.execption(\n+                            \"File not found: {}\".format(\n+                                packages_url.replace(\"file://\", \"\"), exc_info=True)\n+                        raise ex", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2MTA2Ng=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjQxNjkyOnYy", "diffSide": "RIGHT", "path": "backend/common/repo.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1NDowMlrOHt91xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNDozNjo0OVrOHuGO1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2MTE1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    logging.execption(\n          \n          \n            \n                                    logging.exception(", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r517961158", "createdAt": "2020-11-05T10:54:02Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -111,10 +114,15 @@ def get_pkg_index_raw(self) -> typing.Tuple[str, bytes]:\n             for cnt_fname in [DpkgRepo.PKG_GZ, DpkgRepo.PKG_XZ, DpkgRepo.PKG_RW]:\n                 packages_url = self.append_index_file(cnt_fname)\n                 if packages_url.startswith(\"file://\"):\n-                    with open(packages_url.replace(\"file://\", \"\"), \"rb\") as f:\n-                        self._pkg_index = cnt_fname, f.read()\n-                        break\n-                    # TODO: Add logging in error case!\n+                    try:\n+                        with open(packages_url.replace(\"file://\", \"\"), \"rb\") as f:\n+                            self._pkg_index = cnt_fname, f.read()\n+                            break\n+                    except FileNotFoundError as ex:\n+                        logging.execption(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA5ODY0NQ==", "bodyText": "Ouch! Thanks!", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518098645", "createdAt": "2020-11-05T14:36:49Z", "author": {"login": "brejoc"}, "path": "backend/common/repo.py", "diffHunk": "@@ -111,10 +114,15 @@ def get_pkg_index_raw(self) -> typing.Tuple[str, bytes]:\n             for cnt_fname in [DpkgRepo.PKG_GZ, DpkgRepo.PKG_XZ, DpkgRepo.PKG_RW]:\n                 packages_url = self.append_index_file(cnt_fname)\n                 if packages_url.startswith(\"file://\"):\n-                    with open(packages_url.replace(\"file://\", \"\"), \"rb\") as f:\n-                        self._pkg_index = cnt_fname, f.read()\n-                        break\n-                    # TODO: Add logging in error case!\n+                    try:\n+                        with open(packages_url.replace(\"file://\", \"\"), \"rb\") as f:\n+                            self._pkg_index = cnt_fname, f.read()\n+                            break\n+                    except FileNotFoundError as ex:\n+                        logging.execption(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2MTE1OA=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjQyNzc1OnYy", "diffSide": "RIGHT", "path": "backend/common/repo.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1NzowMVrOHt98aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1NzowMVrOHt98aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2Mjg1Ng==", "bodyText": "Shouldn't this be a logging.error() since there is no exception at this point? The exception will come later and logging it can be done when handling the exception.", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r517962856", "createdAt": "2020-11-05T10:57:01Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -292,11 +309,15 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n         # Repo format is not flat\n         if not self.is_flat():\n             if self.gpg_verify and not self._has_valid_gpg_signature(local_path):\n+                logging.exception(\"GPG verfication failed: {}\".format(release_file), exc_info=True)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjQzNTA2OnYy", "diffSide": "RIGHT", "path": "backend/common/repo.py", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1ODo1NlrOHt-A_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNTo0OTo0MFrOHuza2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDAzMA==", "bodyText": "For consistency with the other messages about raising an exception (btw, do we actually win anything by logging that we are about to raise an exception? Isn't the exception handling logging enough to tell us we got one?), this should be\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logging.error(\"GeneralRepoException will be raised!\")\n          \n          \n            \n                            logging.error(\"Raising GeneralRepoException!\")", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r517964030", "createdAt": "2020-11-05T10:58:56Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -292,11 +309,15 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n         # Repo format is not flat\n         if not self.is_flat():\n             if self.gpg_verify and not self._has_valid_gpg_signature(local_path):\n+                logging.exception(\"GPG verfication failed: {}\".format(release_file), exc_info=True)\n+                logging.error(\"GeneralRepoException will be raised!\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEwMzcwOQ==", "bodyText": "The thing is, we are raising an other error than we are catching and logging. If the user is looking into the logs, they can only guess what lead to the GeneralRepoException if it isn't actually standing there.", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518103709", "createdAt": "2020-11-05T14:43:30Z", "author": {"login": "brejoc"}, "path": "backend/common/repo.py", "diffHunk": "@@ -292,11 +309,15 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n         # Repo format is not flat\n         if not self.is_flat():\n             if self.gpg_verify and not self._has_valid_gpg_signature(local_path):\n+                logging.exception(\"GPG verfication failed: {}\".format(release_file), exc_info=True)\n+                logging.error(\"GeneralRepoException will be raised!\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDAzMA=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODExOTE5NA==", "bodyText": "Can't we use raise X from Y for that?", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518119194", "createdAt": "2020-11-05T15:03:32Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -292,11 +309,15 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n         # Repo format is not flat\n         if not self.is_flat():\n             if self.gpg_verify and not self._has_valid_gpg_signature(local_path):\n+                logging.exception(\"GPG verfication failed: {}\".format(release_file), exc_info=True)\n+                logging.error(\"GeneralRepoException will be raised!\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDAzMA=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc2MzQyMw==", "bodyText": "Yeah, that would indeed be more clean, but I think it wouldn't change anything for the logging, right?", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518763423", "createdAt": "2020-11-06T13:51:19Z", "author": {"login": "brejoc"}, "path": "backend/common/repo.py", "diffHunk": "@@ -292,11 +309,15 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n         # Repo format is not flat\n         if not self.is_flat():\n             if self.gpg_verify and not self._has_valid_gpg_signature(local_path):\n+                logging.exception(\"GPG verfication failed: {}\".format(release_file), exc_info=True)\n+                logging.error(\"GeneralRepoException will be raised!\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDAzMA=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzOTAwMg==", "bodyText": "That depends on how we handle the new exception. In this case though, it seems that there is no other exception -- this code is not in an exception handling path as far as I can see.", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518839002", "createdAt": "2020-11-06T15:49:40Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -292,11 +309,15 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n         # Repo format is not flat\n         if not self.is_flat():\n             if self.gpg_verify and not self._has_valid_gpg_signature(local_path):\n+                logging.exception(\"GPG verfication failed: {}\".format(release_file), exc_info=True)\n+                logging.error(\"GeneralRepoException will be raised!\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDAzMA=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjQzNzg3OnYy", "diffSide": "RIGHT", "path": "backend/common/repo.py", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1OTo0MlrOHt-Cvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0OTo1OVrOHuJxaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDQ3OA==", "bodyText": "Shouldn't this be logging.error() again?", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r517964478", "createdAt": "2020-11-05T10:59:42Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -306,31 +327,40 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n             elif os.access(self._get_parent_url(local_path, 0, \"Release\"), os.R_OK):\n                 release_file = self._get_parent_url(local_path, 0, \"Release\")\n             else:\n+                logging.exception(\"No release file found in '{}'. Raising \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEwNDYzOQ==", "bodyText": "No, this is logging.exception, since it is also printing the stack trace.", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518104639", "createdAt": "2020-11-05T14:44:38Z", "author": {"login": "brejoc"}, "path": "backend/common/repo.py", "diffHunk": "@@ -306,31 +327,40 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n             elif os.access(self._get_parent_url(local_path, 0, \"Release\"), os.R_OK):\n                 release_file = self._get_parent_url(local_path, 0, \"Release\")\n             else:\n+                logging.exception(\"No release file found in '{}'. Raising \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDQ3OA=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODExNDU0OQ==", "bodyText": "I came across this because the logging.exception documentation says not to use it outside of exception handling.\nI don't understand why we need to log the stack trace here and not where we handle the exception.", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518114549", "createdAt": "2020-11-05T14:57:18Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -306,31 +327,40 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n             elif os.access(self._get_parent_url(local_path, 0, \"Release\"), os.R_OK):\n                 release_file = self._get_parent_url(local_path, 0, \"Release\")\n             else:\n+                logging.exception(\"No release file found in '{}'. Raising \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDQ3OA=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1NjY0OQ==", "bodyText": "Forget it. Must have been a copy&paste error and I didn't notice. Sorry!", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518156649", "createdAt": "2020-11-05T15:49:59Z", "author": {"login": "brejoc"}, "path": "backend/common/repo.py", "diffHunk": "@@ -306,31 +327,40 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n             elif os.access(self._get_parent_url(local_path, 0, \"Release\"), os.R_OK):\n                 release_file = self._get_parent_url(local_path, 0, \"Release\")\n             else:\n+                logging.exception(\"No release file found in '{}'. Raising \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDQ3OA=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjQzOTQ0OnYy", "diffSide": "RIGHT", "path": "backend/common/repo.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTowMDowNlrOHt-DvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNDo0NToxNVrOHuGoMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDczMw==", "bodyText": "This one as well (logging.error())", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r517964733", "createdAt": "2020-11-05T11:00:06Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -306,31 +327,40 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n             elif os.access(self._get_parent_url(local_path, 0, \"Release\"), os.R_OK):\n                 release_file = self._get_parent_url(local_path, 0, \"Release\")\n             else:\n+                logging.exception(\"No release file found in '{}'. Raising \\\n+                                   GeneralRepoException.\".format(self._get_parent_url(local_path, 0)), exc_info=True)\n                 raise GeneralRepoException(\"No release file found in {}\".format(self._get_parent_url(local_path, 0)))\n \n             try:\n                 with open(release_file, \"rb\") as f:\n                     release_file_content = f.read().decode(\"utf-8\")\n                     if self.gpg_verify and not self._has_valid_gpg_signature(local_path):\n+                        logging.exception(\"GPG verfication failed: '{}'. \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEwNTEzOA==", "bodyText": "Same as above. Also logs the stack trace.", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518105138", "createdAt": "2020-11-05T14:45:15Z", "author": {"login": "brejoc"}, "path": "backend/common/repo.py", "diffHunk": "@@ -306,31 +327,40 @@ def _get_release_index_from_file(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n             elif os.access(self._get_parent_url(local_path, 0, \"Release\"), os.R_OK):\n                 release_file = self._get_parent_url(local_path, 0, \"Release\")\n             else:\n+                logging.exception(\"No release file found in '{}'. Raising \\\n+                                   GeneralRepoException.\".format(self._get_parent_url(local_path, 0)), exc_info=True)\n                 raise GeneralRepoException(\"No release file found in {}\".format(self._get_parent_url(local_path, 0)))\n \n             try:\n                 with open(release_file, \"rb\") as f:\n                     release_file_content = f.read().decode(\"utf-8\")\n                     if self.gpg_verify and not self._has_valid_gpg_signature(local_path):\n+                        logging.exception(\"GPG verfication failed: '{}'. \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NDczMw=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjQ0NTc5OnYy", "diffSide": "RIGHT", "path": "backend/common/repo.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTowMTo1NFrOHt-HsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTowMDowMlrOHuHVPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NTc0NA==", "bodyText": "Would it make sense to also include the actual problem in the exception that is raised? So instead of only saying \"GPG verification failed\", we could also say why it failed.", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r517965744", "createdAt": "2020-11-05T11:01:54Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -339,6 +369,7 @@ def _get_release_index_from_http(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n             self._flat_checked = 1\n \n             if not self.is_flat() and self.gpg_verify and not self._has_valid_gpg_signature(resp.url, resp):\n+                logging.error(\"Repo has no valid GPG signature. Raising GeneralRepoException.\")\n                 raise GeneralRepoException(\"GPG verfication failed: {}\".format(resp.url))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODExMDMwMg==", "bodyText": "Exceptions were already logged. But I've just added logging for the gpg return code.", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518110302", "createdAt": "2020-11-05T14:52:01Z", "author": {"login": "brejoc"}, "path": "backend/common/repo.py", "diffHunk": "@@ -339,6 +369,7 @@ def _get_release_index_from_http(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n             self._flat_checked = 1\n \n             if not self.is_flat() and self.gpg_verify and not self._has_valid_gpg_signature(resp.url, resp):\n+                logging.error(\"Repo has no valid GPG signature. Raising GeneralRepoException.\")\n                 raise GeneralRepoException(\"GPG verfication failed: {}\".format(resp.url))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NTc0NA=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODExNjY2OQ==", "bodyText": "Yes, they were logged but did not offer help to what is broken. You could not look at the log and know why \"GPG verification failed\". I wonder why we don't pass that information to the exception, wouldn't it show up with the current logging we already do that way?", "url": "https://github.com/uyuni-project/uyuni/pull/2789#discussion_r518116669", "createdAt": "2020-11-05T15:00:02Z", "author": {"login": "agraul"}, "path": "backend/common/repo.py", "diffHunk": "@@ -339,6 +369,7 @@ def _get_release_index_from_http(self) -> typing.Dict[str, \"DpkgRepo.ReleaseEntr\n             self._flat_checked = 1\n \n             if not self.is_flat() and self.gpg_verify and not self._has_valid_gpg_signature(resp.url, resp):\n+                logging.error(\"Repo has no valid GPG signature. Raising GeneralRepoException.\")\n                 raise GeneralRepoException(\"GPG verfication failed: {}\".format(resp.url))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2NTc0NA=="}, "originalCommit": {"oid": "bfd19ac87f8c770fe135031ad71c1b3db04a0775"}, "originalPosition": 134}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4014, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}