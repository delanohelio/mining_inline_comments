{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MzU4Mjcz", "number": 2265, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjo0Nzo1NlrOEAffOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo1Mjo1MlrOED6zcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTUxMzUyOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/maintenance/MaintenanceManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjo0Nzo1NlrOGbzesw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNzowNToyNFrOGe4eKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwODE3OQ==", "bodyText": "empty() is not correct here, right? You need to check if schedules has a multi calendar and if yes, pass the schedule name to it.", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r431808179", "createdAt": "2020-05-28T12:47:56Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/maintenance/MaintenanceManager.java", "diffHunk": "@@ -96,6 +106,101 @@ public static MaintenanceManager instance() {\n         return instance;\n     }\n \n+    /**\n+     * Given the systems and action type, return upcoming maintenance windows.\n+     *\n+     * The upper limit of returned maintenance windows is currently hardcoded to 10.\n+     *\n+     * If given action type is not maintenance-mode-only, return an empty optional.\n+     * If given systems do not have any maint. <b>schedules</b> assigned, return an empty optional.\n+     * If given systems have different maint. schedules assigned, throw an exception.\n+     * Otherwise return list of maintenance windows (the list can be empty, if the schedule does not contain\n+     * any upcoming maintenance windows).\n+     *\n+     * @param actionType the action type\n+     * @param systemIds the system ids\n+     * @return the optional upcoming maintenance windows\n+     * @throws IllegalStateException if two or more systems have different maint. schedules assigned\n+     */\n+    public Optional<List<Triple<String, String, Long>>> calculateUpcomingMaintenanceWindows(ActionType actionType,\n+            Set<Long> systemIds) throws IllegalStateException {\n+        // non-maintenance mode only don't use maint. windows\n+        if (!actionType.isMaintenancemodeOnly()) {\n+            return empty();\n+        }\n+\n+        Set<MaintenanceSchedule> schedules = MaintenanceManager.instance().listSchedulesOfSystems(systemIds);\n+        // if there are no schedules, we don't populate any windows (and display an empty list instead)\n+        if (schedules.isEmpty()) {\n+            return empty();\n+        }\n+\n+        // there are multiple schedules, we warn the user about it\n+        if (schedules.size() > 1) {\n+            throw new IllegalStateException(\"Multiple schedules\");\n+        }\n+\n+        PeriodList periods = schedules.iterator().next().getCalendarOpt()\n+                .flatMap(c -> parseCalendar(c))\n+                .map(c -> calculateUpcomingPeriodList(c, empty(), new Date(), 10))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6bcf6b988a88daca8d4eb461e48235035cbac4d"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzNTY5MQ==", "bodyText": "Good catch! This overflowed here from the prototype somehow :)", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r435035691", "createdAt": "2020-06-04T07:05:24Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/maintenance/MaintenanceManager.java", "diffHunk": "@@ -96,6 +106,101 @@ public static MaintenanceManager instance() {\n         return instance;\n     }\n \n+    /**\n+     * Given the systems and action type, return upcoming maintenance windows.\n+     *\n+     * The upper limit of returned maintenance windows is currently hardcoded to 10.\n+     *\n+     * If given action type is not maintenance-mode-only, return an empty optional.\n+     * If given systems do not have any maint. <b>schedules</b> assigned, return an empty optional.\n+     * If given systems have different maint. schedules assigned, throw an exception.\n+     * Otherwise return list of maintenance windows (the list can be empty, if the schedule does not contain\n+     * any upcoming maintenance windows).\n+     *\n+     * @param actionType the action type\n+     * @param systemIds the system ids\n+     * @return the optional upcoming maintenance windows\n+     * @throws IllegalStateException if two or more systems have different maint. schedules assigned\n+     */\n+    public Optional<List<Triple<String, String, Long>>> calculateUpcomingMaintenanceWindows(ActionType actionType,\n+            Set<Long> systemIds) throws IllegalStateException {\n+        // non-maintenance mode only don't use maint. windows\n+        if (!actionType.isMaintenancemodeOnly()) {\n+            return empty();\n+        }\n+\n+        Set<MaintenanceSchedule> schedules = MaintenanceManager.instance().listSchedulesOfSystems(systemIds);\n+        // if there are no schedules, we don't populate any windows (and display an empty list instead)\n+        if (schedules.isEmpty()) {\n+            return empty();\n+        }\n+\n+        // there are multiple schedules, we warn the user about it\n+        if (schedules.size() > 1) {\n+            throw new IllegalStateException(\"Multiple schedules\");\n+        }\n+\n+        PeriodList periods = schedules.iterator().next().getCalendarOpt()\n+                .flatMap(c -> parseCalendar(c))\n+                .map(c -> calculateUpcomingPeriodList(c, empty(), new Date(), 10))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwODE3OQ=="}, "originalCommit": {"oid": "e6bcf6b988a88daca8d4eb461e48235035cbac4d"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTI4OTMwOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/action/configuration/sdc/FileListConfirmSetupAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjoxMDoyNlrOGglrjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjoxMDoyNlrOGglrjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyNDk3Mg==", "bodyText": "Note for the reviewer: I made the original class abstract and split the actual implementation into 2 concrete classes (above) since struts action using this class resulted in 2 different backend actions (diff or deploy).", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r436824972", "createdAt": "2020-06-08T16:10:26Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/configuration/sdc/FileListConfirmSetupAction.java", "diffHunk": "@@ -30,13 +31,14 @@\n import org.apache.struts.action.DynaActionForm;\n \n import java.util.List;\n+import java.util.Set;\n \n \n /**\n  * FileListConfirmSetupAction, for sdc configuration\n  * @version $Rev$\n  */\n-public class FileListConfirmSetupAction extends BaseListAction {\n+public abstract class FileListConfirmSetupAction extends BaseListAction implements MaintenanceWindowsAware {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c89f10ba04a1072a5ca13be9e3091878fc66d1"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU3MDI5OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/common/localization/LocalizationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo0NzozNFrOGhFf_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDozMjoxMFrOGhNC7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0NjMwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public String formatDate(Instant instant) {\n          \n          \n            \n                    Context ctx = Context.getCurrentContext();\n          \n          \n            \n                    Date date = Date.from(instant);\n          \n          \n            \n                    return formatDate(date, ctx.getLocale());\n          \n          \n            \n                }\n          \n          \n            \n                public String formatDate(Instant instant) {\n          \n          \n            \n                    return formatDate(Date.from(instant));\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nMaybe this?", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437346301", "createdAt": "2020-06-09T11:47:34Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/redhat/rhn/common/localization/LocalizationService.java", "diffHunk": "@@ -393,6 +394,17 @@ public String formatDate(Date date) {\n         return formatDate(date, ctx.getLocale());\n     }\n \n+    /**\n+     * Format the instant and let the service determine the locale\n+     * @param instant the instant\n+     * @return String representation of given date.\n+     */\n+    public String formatDate(Instant instant) {\n+        Context ctx = Context.getCurrentContext();\n+        Date date = Date.from(instant);\n+        return formatDate(date, ctx.getLocale());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91e8ed0561d7be270ff0ffdb2d0b3768bb1ca2d0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2OTkzNA==", "bodyText": "Hm, that looks better, thanks!", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437469934", "createdAt": "2020-06-09T14:32:10Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/common/localization/LocalizationService.java", "diffHunk": "@@ -393,6 +394,17 @@ public String formatDate(Date date) {\n         return formatDate(date, ctx.getLocale());\n     }\n \n+    /**\n+     * Format the instant and let the service determine the locale\n+     * @param instant the instant\n+     * @return String representation of given date.\n+     */\n+    public String formatDate(Instant instant) {\n+        Context ctx = Context.getCurrentContext();\n+        Date date = Date.from(instant);\n+        return formatDate(date, ctx.getLocale());\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0NjMwMQ=="}, "originalCommit": {"oid": "91e8ed0561d7be270ff0ffdb2d0b3768bb1ca2d0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDYxODc3OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/strings/jsp/StringResource_en_US.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjowMjoxMFrOGhF99g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDozMTo0NlrOGhNBxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1Mzk3NA==", "bodyText": "They need to be copied over to all other language files.\nBut we can also decide to do it later on the maintenance-windows branch", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437353974", "createdAt": "2020-06-09T12:02:10Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/redhat/rhn/frontend/strings/jsp/StringResource_en_US.xml", "diffHunk": "@@ -6157,6 +6157,15 @@ organization. You may grant or remove the organization administrator role in the\n           <context context-type=\"sourcefile\">/rhn/systems/details/packages/ScheduleRemoteCommand.do</context>\n         </context-group>\n       </trans-unit>\n+      <trans-unit id=\"schedule.jsp.maint-window\">\n+        <source>Maintenance window:</source>\n+      </trans-unit>\n+      <trans-unit id=\"schedule.jsp.multiple_maintenance_schedules\">\n+        <source>There are multiple maintenance schedules for selected systems. Make sure that systems in the set use at most 1 maintenance schedule if you want to schedule by date or maintenance window.</source>\n+      </trans-unit>\n+      <trans-unit id=\"schedule.jsp.no_maintenance_windows\">\n+        <source>No upcoming maintenance windows</source>\n+      </trans-unit>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bb1bdcb71b8ab8a9b8876f74f7214244b454903"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2OTYzOA==", "bodyText": "Right, I noticed nobody does this, so I also decided not to \ud83d\ude09", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437469638", "createdAt": "2020-06-09T14:31:46Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/strings/jsp/StringResource_en_US.xml", "diffHunk": "@@ -6157,6 +6157,15 @@ organization. You may grant or remove the organization administrator role in the\n           <context context-type=\"sourcefile\">/rhn/systems/details/packages/ScheduleRemoteCommand.do</context>\n         </context-group>\n       </trans-unit>\n+      <trans-unit id=\"schedule.jsp.maint-window\">\n+        <source>Maintenance window:</source>\n+      </trans-unit>\n+      <trans-unit id=\"schedule.jsp.multiple_maintenance_schedules\">\n+        <source>There are multiple maintenance schedules for selected systems. Make sure that systems in the set use at most 1 maintenance schedule if you want to schedule by date or maintenance window.</source>\n+      </trans-unit>\n+      <trans-unit id=\"schedule.jsp.no_maintenance_windows\">\n+        <source>No upcoming maintenance windows</source>\n+      </trans-unit>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1Mzk3NA=="}, "originalCommit": {"oid": "7bb1bdcb71b8ab8a9b8876f74f7214244b454903"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTA3NjcyOnYy", "diffSide": "RIGHT", "path": "java/code/webapp/WEB-INF/pages/common/fragments/schedule-options.jspf", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzo0MToxOFrOGhKXcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzo0MToxOFrOGhKXcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyNjAzMg==", "bodyText": "Minor nitpick: don -> do", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437426032", "createdAt": "2020-06-09T13:41:18Z", "author": {"login": "parlt91"}, "path": "java/code/webapp/WEB-INF/pages/common/fragments/schedule-options.jspf", "diffHunk": "@@ -1,27 +1,50 @@\n <%@ page pageEncoding=\"iso-8859-1\" contentType=\"text/html;charset=utf-8\" %>\n+<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n <%@ taglib uri=\"http://struts.apache.org/tags-bean\" prefix=\"bean\" %>\n <%@ taglib uri=\"http://rhn.redhat.com/rhn\" prefix=\"rhn\" %>\n \n <script type=\"text/javascript\" src=\"/javascript/schedule-options.js?cb=${rhn:getConfig('web.buildtimestamp')}\"></script>\n <div class=\"spacewalk-scheduler\">\n     <div class=\"form-horizontal\">\n+        <c:choose>\n+            <%-- When there are multiple schedules, we don not display date picker nor the maint. window picker --%>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e0e3c99a9cfb6bd89561ee3b1973778d8c5aa11"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTQ0NjI2OnYy", "diffSide": "RIGHT", "path": "java/code/webapp/WEB-INF/pages/schedule/actionchain.jsp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo1Mjo1MlrOGhOCzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo1Mjo1MlrOGhOCzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4NjI4Ng==", "bodyText": "Same typo here", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437486286", "createdAt": "2020-06-09T14:52:52Z", "author": {"login": "parlt91"}, "path": "java/code/webapp/WEB-INF/pages/schedule/actionchain.jsp", "diffHunk": "@@ -97,31 +97,54 @@\n         <div class=\"panel-body\">\n             <form action=\"/rhn/schedule/ActionChain.do?id=${param.id}\" method=\"post\" class=\"schedule\">\n             <div class=\"form-horizontal\">\n-                <div class=\"form-group\">\n-                    <div class=\"col-sm-12\">\n-                        <p>\n-                            <bean:message key=\"actionchain.jsp.schedulesummary\"/>\n-                        </p>\n-                    </div>\n-                </div>\n-                <div class=\"form-group\">\n-                    <rhn:hidden name=\"schedule_type\" value=\"date\"/>\n-                    <html:hidden property=\"dispatch\" value=\"${rhn:localize('actionchain.jsp.saveandschedule')}\"/>\n-                    <rhn:csrf/>\n-                    <rhn:submitted/>\n-                    <div class=\"col-md-offset-3 col-md-6\">\n-                        <jsp:include page=\"/WEB-INF/pages/common/fragments/date-picker.jsp\">\n-                            <jsp:param name=\"widget\" value=\"date\"/>\n-                        </jsp:include>\n-                    </div>\n-                </div>\n-                <div class=\"form-group\">\n-                    <div class=\"col-md-offset-3 col-md-6\">\n-                        <button type=\"button\" class=\"btn btn-success\" id=\"save-and-schedule\">\n-                            <bean:message key=\"actionchain.jsp.saveandschedule\"/>\n-                        </button>\n-                    </div>\n-                </div>\n+                <html:hidden property=\"dispatch\" value=\"${rhn:localize('actionchain.jsp.saveandschedule')}\"/>\n+                <rhn:csrf/>\n+                <rhn:submitted/>\n+\n+                <c:choose>\n+                    <%-- When there are multiple schedules, we don not display date picker nor the maint. window picker --%>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46bf7cce4feefb30689b7780fa75512ec3d32deb"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4271, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}