{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NzcwMTEz", "number": 2666, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTo0MToyN1rOEo87ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMjozODo1NlrOEpArOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzc2NzQ2OnYy", "diffSide": "RIGHT", "path": "testsuite/features/secondary/srv_user_configuration_salt_states.feature", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTo0MToyN1rOHaVkZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTo0MToyN1rOHaVkZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3ODQwNg==", "bodyText": ", and (strange English rule)", "url": "https://github.com/uyuni-project/uyuni/pull/2666#discussion_r497378406", "createdAt": "2020-09-30T09:41:27Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/secondary/srv_user_configuration_salt_states.feature", "diffHunk": "@@ -1,7 +1,7 @@\n # Copyright (c) 2020 SUSE LLC\n # Licensed under the terms of the MIT license.\n \n-Feature: Create organizations, users and groups using Salt states\n+Feature: Create organizations, users, groups and activation keys using Salt states", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23f93dfb6df95a08a15079bc6b069b74db954c18"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzc2OTc0OnYy", "diffSide": "RIGHT", "path": "testsuite/features/secondary/srv_user_configuration_salt_states.feature", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTo0MTo1NlrOHaVltA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTo0MTo1NlrOHaVltA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3ODc0MA==", "bodyText": "Activation key (with capital)", "url": "https://github.com/uyuni-project/uyuni/pull/2666#discussion_r497378740", "createdAt": "2020-09-30T09:41:56Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/secondary/srv_user_configuration_salt_states.feature", "diffHunk": "@@ -51,6 +51,15 @@ Feature: Create organizations, users and groups using Salt states\n     And I should see \"role_channel_admin\" as unchecked\n     And I should see \"role_system_group_admin\" as unchecked\n \n+  Scenario: activation was correctly created", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23f93dfb6df95a08a15079bc6b069b74db954c18"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDE4Mzg4OnYy", "diffSide": "RIGHT", "path": "susemanager-utils/susemanager-sls/src/modules/uyuni_config.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo0NDowM1rOHaZk9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo1NTowM1rOHaexcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NDA4Ng==", "bodyText": "IIUC this should be a list of strings. Why does the compiler not complain?", "url": "https://github.com/uyuni-project/uyuni/pull/2666#discussion_r497444086", "createdAt": "2020-09-30T11:44:03Z", "author": {"login": "moio"}, "path": "susemanager-utils/susemanager-sls/src/modules/uyuni_config.py", "diffHunk": "@@ -600,6 +607,226 @@ def get_minion_id_map(self, refresh: bool = False) -> Dict[str, int]:\n         return __context__[minions_token_key]\n \n \n+class UyuniActivationKey(UyuniRemoteObject):\n+    \"\"\"\n+    CRUD operations on Activation Keys.\n+    \"\"\"\n+\n+    def get_details(self, id: str) -> Dict[str, Any]:\n+        \"\"\"\n+        Get details of an Uyuni Activation Key\n+\n+        :param id: the Activation Key ID\n+\n+        :return: Activation Key information\n+        \"\"\"\n+        return self.client(\"activationkey.getDetails\", id)\n+\n+    def delete(self, id: str) -> bool:\n+        \"\"\"\n+        Deletes an Uyuni Activation Key\n+\n+        :param id: the Activation Key ID\n+\n+        :return: boolean, True indicates success\n+        \"\"\"\n+        return self._convert_bool_response(self.client(\"activationkey.delete\", id))\n+\n+    def create(self, key: str, description: str,\n+               base_channel_label: str = '',\n+               usage_limit: int = 0,\n+               system_types: List[int] = [],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3b5324a316a863d086ead2a4cfd387be3b17aa7"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyOTIwMg==", "bodyText": "It should be string. Compiler doesn't catch because the method who calls this one is written in python 2, for salt compatibility.", "url": "https://github.com/uyuni-project/uyuni/pull/2666#discussion_r497529202", "createdAt": "2020-09-30T13:55:03Z", "author": {"login": "rjmateus"}, "path": "susemanager-utils/susemanager-sls/src/modules/uyuni_config.py", "diffHunk": "@@ -600,6 +607,226 @@ def get_minion_id_map(self, refresh: bool = False) -> Dict[str, int]:\n         return __context__[minions_token_key]\n \n \n+class UyuniActivationKey(UyuniRemoteObject):\n+    \"\"\"\n+    CRUD operations on Activation Keys.\n+    \"\"\"\n+\n+    def get_details(self, id: str) -> Dict[str, Any]:\n+        \"\"\"\n+        Get details of an Uyuni Activation Key\n+\n+        :param id: the Activation Key ID\n+\n+        :return: Activation Key information\n+        \"\"\"\n+        return self.client(\"activationkey.getDetails\", id)\n+\n+    def delete(self, id: str) -> bool:\n+        \"\"\"\n+        Deletes an Uyuni Activation Key\n+\n+        :param id: the Activation Key ID\n+\n+        :return: boolean, True indicates success\n+        \"\"\"\n+        return self._convert_bool_response(self.client(\"activationkey.delete\", id))\n+\n+    def create(self, key: str, description: str,\n+               base_channel_label: str = '',\n+               usage_limit: int = 0,\n+               system_types: List[int] = [],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NDA4Ng=="}, "originalCommit": {"oid": "b3b5324a316a863d086ead2a4cfd387be3b17aa7"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDM4MTM5OnYy", "diffSide": "RIGHT", "path": "susemanager-utils/susemanager-sls/src/modules/uyuni_config.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMjozODo1NlrOHabe0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzoxNDowOFrOHac6dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3NTI4MA==", "bodyText": "Not sure I understand the doubt here, let's clarify this before merging.", "url": "https://github.com/uyuni-project/uyuni/pull/2666#discussion_r497475280", "createdAt": "2020-09-30T12:38:56Z", "author": {"login": "moio"}, "path": "susemanager-utils/susemanager-sls/src/modules/uyuni_config.py", "diffHunk": "@@ -1116,6 +1343,19 @@ def systemgroup_create(name, descr, org_admin_user=None, org_admin_password=None\n     return UyuniSystemgroup(org_admin_user, org_admin_password).create(name=name, description=descr)\n \n \n+# FIXME: Should we keep the fallback mechanism to the admin user in the authentication?\n+#        That could be dangerous if we didn't pass any authentication on some methods", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3b5324a316a863d086ead2a4cfd387be3b17aa7"}, "originalPosition": 293}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ5ODc0Mg==", "bodyText": "Doesn't make sense anymore, can be removed", "url": "https://github.com/uyuni-project/uyuni/pull/2666#discussion_r497498742", "createdAt": "2020-09-30T13:14:08Z", "author": {"login": "rjmateus"}, "path": "susemanager-utils/susemanager-sls/src/modules/uyuni_config.py", "diffHunk": "@@ -1116,6 +1343,19 @@ def systemgroup_create(name, descr, org_admin_user=None, org_admin_password=None\n     return UyuniSystemgroup(org_admin_user, org_admin_password).create(name=name, description=descr)\n \n \n+# FIXME: Should we keep the fallback mechanism to the admin user in the authentication?\n+#        That could be dangerous if we didn't pass any authentication on some methods", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3NTI4MA=="}, "originalCommit": {"oid": "b3b5324a316a863d086ead2a4cfd387be3b17aa7"}, "originalPosition": 293}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4067, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}