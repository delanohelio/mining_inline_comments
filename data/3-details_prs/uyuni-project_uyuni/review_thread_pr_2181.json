{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNTA0NDg1", "number": 2181, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNTowMTozOFrOD5QMcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNTowMTozOFrOD5QMcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzYwNzUzOnYy", "diffSide": "RIGHT", "path": "backend/server/importlib/backend.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNTowMTozOFrOGQafWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjoyOTowNVrOGQnDrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg2NDQxMQ==", "bodyText": "(k or 0) sounds wrong. Should it be (k[0] or 0) ?", "url": "https://github.com/uyuni-project/uyuni/pull/2181#discussion_r419864411", "createdAt": "2020-05-05T05:01:38Z", "author": {"login": "mcalmer"}, "path": "backend/server/importlib/backend.py", "diffHunk": "@@ -668,7 +669,7 @@ def lookupErrataSeverityId(self, erratum):\n     def lookupEVRs(self, evrHash):\n         sql = \"select LOOKUP_EVR(:epoch, :version, :release) id from dual\"\n         h = self.dbmodule.prepare(sql)\n-        for evr in sorted(evrHash.keys(), key=lambda x: (x[0] if x[0] != '' else None, x[1], x[2])):\n+        for evr in sorted(evrHash.keys(), key=lambda k: (str(k or 0), k[1], k[2])):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70adabb8374f12dc948d4aead0a0adb8472a01db"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3MDMxOA==", "bodyText": "Right, addressed", "url": "https://github.com/uyuni-project/uyuni/pull/2181#discussion_r420070318", "createdAt": "2020-05-05T12:29:05Z", "author": {"login": "moio"}, "path": "backend/server/importlib/backend.py", "diffHunk": "@@ -668,7 +669,7 @@ def lookupErrataSeverityId(self, erratum):\n     def lookupEVRs(self, evrHash):\n         sql = \"select LOOKUP_EVR(:epoch, :version, :release) id from dual\"\n         h = self.dbmodule.prepare(sql)\n-        for evr in sorted(evrHash.keys(), key=lambda x: (x[0] if x[0] != '' else None, x[1], x[2])):\n+        for evr in sorted(evrHash.keys(), key=lambda k: (str(k or 0), k[1], k[2])):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg2NDQxMQ=="}, "originalCommit": {"oid": "70adabb8374f12dc948d4aead0a0adb8472a01db"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4364, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}