{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMzIwODEw", "number": 2373, "title": "Speedup System Groups page (bsc#1172839)", "bodyText": "What does this PR change?\nSpeeds up the System Groups page and the homepage section about groups, especially when there are thousands of non-up-to-date systems.\nIn a particular case, I could observe a ~50x speedup (from ~25s to ~500 ms) on the load time for the System Groups page.\nThe change here is about not using an aggregate (GROUP BY/MAX) to find out whether a certain group has at least one system with at least one critical/bugfix/feature applicable errata. Merely scanning the index of rhnServerNeededCache, which in the case I was looking at contained more than 5M rows, takes 10-20 seconds. This solution is not particularly elegant SQL-wise, but it allows not to visit the entire table/index, stopping at the first useful row match, thereby saving a lot of time.\nGUI diff\nNo difference.\n\n DONE\n\nDocumentation\n\nNo documentation needed: bugfix\n DONE\n\nTest coverage\n\n\nNo tests: only tested manually, needs huge DB to reproduce\n\n\n DONE\n\n\nLinks\nFixes SUSE/spacewalk#11718\n\n DONE\n\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_lint_checkstyle\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\"\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-06-30T22:04:26Z", "url": "https://github.com/uyuni-project/uyuni/pull/2373", "merged": true, "mergeCommit": {"oid": "1e53cf13a0839b0890dc05c9c2324b93d7dad162"}, "closed": true, "closedAt": "2020-07-13T09:44:37Z", "author": {"login": "moio"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwoI8SgFqTQ0MDc2NTk0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0doK2ABqjM1Mzg0NjQxMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzY1OTQ5", "url": "https://github.com/uyuni-project/uyuni/pull/2373#pullrequestreview-440765949", "createdAt": "2020-07-01T11:00:25Z", "commit": {"oid": "916d890cb3b8fefe6250342a7988d32f44445577"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzYwMzk3", "url": "https://github.com/uyuni-project/uyuni/pull/2373#pullrequestreview-440760397", "createdAt": "2020-07-01T10:51:48Z", "commit": {"oid": "916d890cb3b8fefe6250342a7988d32f44445577"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo1MTo0OFrOGrg6YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo1MjoyNlrOGrg7fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI4MTE4NQ==", "bodyText": "The name advisoryTypes or groupAdvisoryTypes would be more accurate here.", "url": "https://github.com/uyuni-project/uyuni/pull/2373#discussion_r448281185", "createdAt": "2020-07-01T10:51:48Z", "author": {"login": "cbbayburt"}, "path": "java/code/src/com/redhat/rhn/common/db/datasource/xml/SystemGroup_queries.xml", "diffHunk": "@@ -79,24 +66,50 @@ ORDER BY UPPER(NAME)\n     ) x\n     ORDER BY UPPER(NAME)\n   </query>\n-    <elaborator name=\"most_severe_errata\" />\n+  <elaborator name=\"most_severe_errata\" />\n </mode>\n <query name=\"most_severe_errata\" params=\"\">\n-    SELECT sgm.server_group_id AS id,\n-        CASE MAX(CASE e.advisory_type\n-            WHEN 'Security Advisory' THEN 3\n-            WHEN 'Bug Fix Advisory' THEN 2\n-            WHEN 'Product Enhancement Advisory' THEN 1 END)\n-            WHEN 3 THEN 'Security Advisory'\n-            WHEN 2 THEN 'Bug Fix Advisory'\n-            WHEN 1 THEN 'Product Enhancement Advisory'\n-        END AS most_severe_errata\n-    FROM rhnErrata e\n-        INNER JOIN rhnServerNeededCache snpc ON e.id = snpc.errata_id\n-        INNER JOIN rhnServerGroupMembers sgm ON sgm.server_id = snpc.server_id\n-        INNER JOIN rhnServerFeaturesView sfv ON sgm.server_id = sfv.server_id\n-    WHERE sgm.server_group_id IN (%s) AND sfv.label = 'ftr_system_grouping'\n-    GROUP BY server_group_id\n+    WITH groupTypes AS NOT MATERIALIZED (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "916d890cb3b8fefe6250342a7988d32f44445577"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI4MTQ2OA==", "bodyText": "I think ELSE NULL is redundant because it's the default behavior anyway.", "url": "https://github.com/uyuni-project/uyuni/pull/2373#discussion_r448281468", "createdAt": "2020-07-01T10:52:26Z", "author": {"login": "cbbayburt"}, "path": "java/code/src/com/redhat/rhn/common/db/datasource/xml/SystemGroup_queries.xml", "diffHunk": "@@ -79,24 +66,50 @@ ORDER BY UPPER(NAME)\n     ) x\n     ORDER BY UPPER(NAME)\n   </query>\n-    <elaborator name=\"most_severe_errata\" />\n+  <elaborator name=\"most_severe_errata\" />\n </mode>\n <query name=\"most_severe_errata\" params=\"\">\n-    SELECT sgm.server_group_id AS id,\n-        CASE MAX(CASE e.advisory_type\n-            WHEN 'Security Advisory' THEN 3\n-            WHEN 'Bug Fix Advisory' THEN 2\n-            WHEN 'Product Enhancement Advisory' THEN 1 END)\n-            WHEN 3 THEN 'Security Advisory'\n-            WHEN 2 THEN 'Bug Fix Advisory'\n-            WHEN 1 THEN 'Product Enhancement Advisory'\n-        END AS most_severe_errata\n-    FROM rhnErrata e\n-        INNER JOIN rhnServerNeededCache snpc ON e.id = snpc.errata_id\n-        INNER JOIN rhnServerGroupMembers sgm ON sgm.server_id = snpc.server_id\n-        INNER JOIN rhnServerFeaturesView sfv ON sgm.server_id = sfv.server_id\n-    WHERE sgm.server_group_id IN (%s) AND sfv.label = 'ftr_system_grouping'\n-    GROUP BY server_group_id\n+    WITH groupTypes AS NOT MATERIALIZED (\n+        SELECT sgm.server_group_id, e.advisory_type\n+          FROM rhnServerNeededCache snpc\n+              INNER JOIN rhnServerGroupMembers sgm ON sgm.server_id = snpc.server_id\n+              INNER JOIN rhnServerFeaturesView sfv ON sgm.server_id = sfv.server_id\n+              LEFT JOIN rhnErrata e ON e.id = snpc.errata_id\n+          WHERE sfv.label = 'ftr_system_grouping'\n+    )\n+    SELECT rhnServerGroup.id,\n+        CASE (\n+            SELECT EXISTS (SELECT 1\n+                FROM groupTypes gt\n+                    WHERE gt.server_group_id = rhnServerGroup.id\n+                    AND gt.advisory_type = 'Security Advisory')\n+        )\n+        WHEN TRUE THEN 'Security Advisory'\n+        ELSE CASE (\n+            SELECT EXISTS (SELECT 1\n+                FROM groupTypes gt\n+                    WHERE gt.server_group_id = rhnServerGroup.id\n+                    AND gt.advisory_type = 'Bug Fix Advisory')\n+        )\n+        WHEN TRUE THEN 'Bug Fix Advisory'\n+        ELSE CASE (\n+            SELECT EXISTS (SELECT 1\n+                FROM groupTypes gt\n+                    WHERE gt.server_group_id = rhnServerGroup.id\n+                    AND gt.advisory_type = 'Product Enhancement Advisory')\n+        )\n+        WHEN TRUE THEN 'Product Enhancement Advisory'\n+        ELSE CASE (\n+            SELECT EXISTS (SELECT 1\n+                FROM groupTypes gt\n+                    WHERE gt.server_group_id = rhnServerGroup.id\n+                    AND gt.advisory_type IS NULL)\n+        )\n+        WHEN TRUE THEN 'Outdated Packages'\n+        ELSE NULL", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "916d890cb3b8fefe6250342a7988d32f44445577"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTM3Njc3", "url": "https://github.com/uyuni-project/uyuni/pull/2373#pullrequestreview-440937677", "createdAt": "2020-07-01T14:44:39Z", "commit": {"oid": "916d890cb3b8fefe6250342a7988d32f44445577"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "916d890cb3b8fefe6250342a7988d32f44445577", "author": {"user": {"login": "moio", "name": "Silvio Moioli"}}, "url": "https://github.com/uyuni-project/uyuni/commit/916d890cb3b8fefe6250342a7988d32f44445577", "committedDate": "2020-06-30T22:02:47Z", "message": "Dry code up, use faster elaborator query"}, "afterCommit": {"oid": "0f385d89309ae14fcb7fd0882457a697e03bb1d9", "author": {"user": {"login": "moio", "name": "Silvio Moioli"}}, "url": "https://github.com/uyuni-project/uyuni/commit/0f385d89309ae14fcb7fd0882457a697e03bb1d9", "committedDate": "2020-07-10T16:10:55Z", "message": "Dry code up, use faster elaborator query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b15d08fa6d89b1133b3202b422f1eb5a8ed37f8", "author": {"user": {"login": "moio", "name": "Silvio Moioli"}}, "url": "https://github.com/uyuni-project/uyuni/commit/5b15d08fa6d89b1133b3202b422f1eb5a8ed37f8", "committedDate": "2020-07-13T07:16:43Z", "message": "Improve System Group page performance (bsc#1172839)\n\nThe change here is about not using an aggregate (`GROUP BY`/`MAX`) to\nfind out whether a certain group has at least one system with at least\none critical/bugfix/feature applicable errata. Merely scanning the index\nof `rhnServerNeededCache`, which in the case I was looking at contained\nmore than 5M rows, takes 10-20 seconds. This solution is not\nparticularly elegant SQL-wise, but it allows not to visit the entire\ntable/index, stopping at the first useful row match, thereby saving a\nlot of time."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f385d89309ae14fcb7fd0882457a697e03bb1d9", "author": {"user": {"login": "moio", "name": "Silvio Moioli"}}, "url": "https://github.com/uyuni-project/uyuni/commit/0f385d89309ae14fcb7fd0882457a697e03bb1d9", "committedDate": "2020-07-10T16:10:55Z", "message": "Dry code up, use faster elaborator query"}, "afterCommit": {"oid": "77c03e6729142ba318078976a20db8fc1877334a", "author": {"user": {"login": "moio", "name": "Silvio Moioli"}}, "url": "https://github.com/uyuni-project/uyuni/commit/77c03e6729142ba318078976a20db8fc1877334a", "committedDate": "2020-07-13T07:16:43Z", "message": "Dry code up, use faster elaborator query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2da64ff35cc761387712ab5f2622a2cb52b5fe80", "author": {"user": {"login": "moio", "name": "Silvio Moioli"}}, "url": "https://github.com/uyuni-project/uyuni/commit/2da64ff35cc761387712ab5f2622a2cb52b5fe80", "committedDate": "2020-07-13T09:01:02Z", "message": "Dry code up, use faster elaborator query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77c03e6729142ba318078976a20db8fc1877334a", "author": {"user": {"login": "moio", "name": "Silvio Moioli"}}, "url": "https://github.com/uyuni-project/uyuni/commit/77c03e6729142ba318078976a20db8fc1877334a", "committedDate": "2020-07-13T07:16:43Z", "message": "Dry code up, use faster elaborator query"}, "afterCommit": {"oid": "2da64ff35cc761387712ab5f2622a2cb52b5fe80", "author": {"user": {"login": "moio", "name": "Silvio Moioli"}}, "url": "https://github.com/uyuni-project/uyuni/commit/2da64ff35cc761387712ab5f2622a2cb52b5fe80", "committedDate": "2020-07-13T09:01:02Z", "message": "Dry code up, use faster elaborator query"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1198, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}