{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNTk3NTQ3", "number": 2759, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOToyNzo0N1rOEyQWuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOToyNzo0N1rOEyQWuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTMyMjE5OnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/salt_steps.rb", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOToyNzo0N1rOHoym3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTo0NDo0NVrOHozRZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNDIzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              if %w[sle_minion sle_ssh_tunnel_minion].include?(minion)\n          \n          \n            \n              if minion.include? 'minion'", "url": "https://github.com/uyuni-project/uyuni/pull/2759#discussion_r512534239", "createdAt": "2020-10-27T09:27:47Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/salt_steps.rb", "diffHunk": "@@ -721,7 +721,7 @@ def pillar_get(key, minion)\n \n And(/^I cleanup minion \"([^\"]*)\"$/) do |minion|\n   node = get_target(minion)\n-  if minion == 'sle_minion'\n+  if %w[sle_minion sle_ssh_tunnel_minion].include?(minion)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a3b9fa1f5ed58c605c5e273c73fe8b2a2a5cff4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNDg2Ng==", "bodyText": "No. I think that's incorrect, this string comparaison will also catch \"ceos_minion\" etc.\nAlso the list construct is consistent with the line that just follows.", "url": "https://github.com/uyuni-project/uyuni/pull/2759#discussion_r512534866", "createdAt": "2020-10-27T09:28:46Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/salt_steps.rb", "diffHunk": "@@ -721,7 +721,7 @@ def pillar_get(key, minion)\n \n And(/^I cleanup minion \"([^\"]*)\"$/) do |minion|\n   node = get_target(minion)\n-  if minion == 'sle_minion'\n+  if %w[sle_minion sle_ssh_tunnel_minion].include?(minion)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNDIzOQ=="}, "originalCommit": {"oid": "5a3b9fa1f5ed58c605c5e273c73fe8b2a2a5cff4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNDk2OA==", "bodyText": "I would make it more generic like that, so next time we add a new host name we don't need to touch this line", "url": "https://github.com/uyuni-project/uyuni/pull/2759#discussion_r512534968", "createdAt": "2020-10-27T09:28:57Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/salt_steps.rb", "diffHunk": "@@ -721,7 +721,7 @@ def pillar_get(key, minion)\n \n And(/^I cleanup minion \"([^\"]*)\"$/) do |minion|\n   node = get_target(minion)\n-  if minion == 'sle_minion'\n+  if %w[sle_minion sle_ssh_tunnel_minion].include?(minion)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNDIzOQ=="}, "originalCommit": {"oid": "5a3b9fa1f5ed58c605c5e273c73fe8b2a2a5cff4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNTk3NA==", "bodyText": "Well, and what's the problem to also match \"ceos_minion\"?\nWe are already using this construction in other steps, like in the \"I apply highstate on\"", "url": "https://github.com/uyuni-project/uyuni/pull/2759#discussion_r512535974", "createdAt": "2020-10-27T09:30:34Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/salt_steps.rb", "diffHunk": "@@ -721,7 +721,7 @@ def pillar_get(key, minion)\n \n And(/^I cleanup minion \"([^\"]*)\"$/) do |minion|\n   node = get_target(minion)\n-  if minion == 'sle_minion'\n+  if %w[sle_minion sle_ssh_tunnel_minion].include?(minion)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNDIzOQ=="}, "originalCommit": {"oid": "5a3b9fa1f5ed58c605c5e273c73fe8b2a2a5cff4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNzIwMA==", "bodyText": "I see, I just not read the next elseif... well, I would reconsider the other block, are we sure we can't make a unique block? Why we can't use node.run('systemctl stop salt-minion') in our SLE 12 SP3 < 15 SP2 clients?", "url": "https://github.com/uyuni-project/uyuni/pull/2759#discussion_r512537200", "createdAt": "2020-10-27T09:32:26Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/salt_steps.rb", "diffHunk": "@@ -721,7 +721,7 @@ def pillar_get(key, minion)\n \n And(/^I cleanup minion \"([^\"]*)\"$/) do |minion|\n   node = get_target(minion)\n-  if minion == 'sle_minion'\n+  if %w[sle_minion sle_ssh_tunnel_minion].include?(minion)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNDIzOQ=="}, "originalCommit": {"oid": "5a3b9fa1f5ed58c605c5e273c73fe8b2a2a5cff4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU0NTEyNQ==", "bodyText": "No, that would include the second branch of the if.  We use systemd for Ubuntu/Centos minions.\nSee the full lines:\n  if %w[sle_minion sle_ssh_tunnel_minion].include?(minion)\n    node.run('rcsalt-minion stop')\n    node.run('rm -Rf /var/cache/salt/minion')\n  elsif %w[ceos_minion ceos_ssh_minion ubuntu_minion ubuntu_ssh_minion].include?(minion)\n    node.run('systemctl stop salt-minion')\n    node.run('rm -Rf /var/cache/salt/minion')\n  end", "url": "https://github.com/uyuni-project/uyuni/pull/2759#discussion_r512545125", "createdAt": "2020-10-27T09:44:45Z", "author": {"login": "calancha"}, "path": "testsuite/features/step_definitions/salt_steps.rb", "diffHunk": "@@ -721,7 +721,7 @@ def pillar_get(key, minion)\n \n And(/^I cleanup minion \"([^\"]*)\"$/) do |minion|\n   node = get_target(minion)\n-  if minion == 'sle_minion'\n+  if %w[sle_minion sle_ssh_tunnel_minion].include?(minion)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNDIzOQ=="}, "originalCommit": {"oid": "5a3b9fa1f5ed58c605c5e273c73fe8b2a2a5cff4"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3972, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}