{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyOTQ3NzA2", "number": 2781, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMjoyMToxNlrOEzxQHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMjoyMjozM1rOEzxSGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzE5Nzc0OnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/salt_steps.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMjoyMToxNlrOHrMttQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzowMjozMFrOHrOAnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA1OTEyNQ==", "bodyText": "\"salt-minion\"\nIn theory, we could re-enable original system repositories while we reinstall the packages... but... complicated, error-prone.", "url": "https://github.com/uyuni-project/uyuni/pull/2781#discussion_r515059125", "createdAt": "2020-10-30T12:21:16Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/salt_steps.rb", "diffHunk": "@@ -719,11 +719,28 @@ def pillar_get(key, minion)\n   step %(I enter \"#{ENV['VIRTHOST_XEN_PASSWORD']}\" as \"password\") if host == \"xen_server\"\n end\n \n-And(/^I cleanup minion \"([^\"]*)\"$/) do |minion|\n+And(/^I clean up the minion's cache on \"([^\"]*)\"$/) do |minion|\n   raise \"#{minion} is not a salt minion\" unless minion.include? 'minion'\n   node = get_target(minion)\n-  node.run('systemctl stop salt-minion')\n+  node.run_until_ok('systemctl stop salt-minion')\n   node.run('rm -Rf /var/cache/salt/minion')\n+  # TODO: Ideally we should remove /etc/salt/* /var/run/salt/* /var/log/salt/* and salt and salt-minion packages\n+  #       But we can't do that as we don't have products synced, so it will fail installing salt and sal-minion", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72adffacfa6dda77ace7358b0aec110e000aabad"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4MDM0OA==", "bodyText": "I made a try about that in the past, and found some problems.\nAnyhow, yeah, something to research. Better only clean the cache for now.", "url": "https://github.com/uyuni-project/uyuni/pull/2781#discussion_r515080348", "createdAt": "2020-10-30T13:02:30Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/salt_steps.rb", "diffHunk": "@@ -719,11 +719,28 @@ def pillar_get(key, minion)\n   step %(I enter \"#{ENV['VIRTHOST_XEN_PASSWORD']}\" as \"password\") if host == \"xen_server\"\n end\n \n-And(/^I cleanup minion \"([^\"]*)\"$/) do |minion|\n+And(/^I clean up the minion's cache on \"([^\"]*)\"$/) do |minion|\n   raise \"#{minion} is not a salt minion\" unless minion.include? 'minion'\n   node = get_target(minion)\n-  node.run('systemctl stop salt-minion')\n+  node.run_until_ok('systemctl stop salt-minion')\n   node.run('rm -Rf /var/cache/salt/minion')\n+  # TODO: Ideally we should remove /etc/salt/* /var/run/salt/* /var/log/salt/* and salt and salt-minion packages\n+  #       But we can't do that as we don't have products synced, so it will fail installing salt and sal-minion", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA1OTEyNQ=="}, "originalCommit": {"oid": "72adffacfa6dda77ace7358b0aec110e000aabad"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzIwMjgwOnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/salt_steps.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMjoyMjozM1rOHrMwlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzowMDoyN1rOHrN8cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA1OTg2MA==", "bodyText": "Maybe we could keep this snippet outside of this file, instead of a big comment.\nBut I don't mind too much either.", "url": "https://github.com/uyuni-project/uyuni/pull/2781#discussion_r515059860", "createdAt": "2020-10-30T12:22:33Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/step_definitions/salt_steps.rb", "diffHunk": "@@ -719,11 +719,28 @@ def pillar_get(key, minion)\n   step %(I enter \"#{ENV['VIRTHOST_XEN_PASSWORD']}\" as \"password\") if host == \"xen_server\"\n end\n \n-And(/^I cleanup minion \"([^\"]*)\"$/) do |minion|\n+And(/^I clean up the minion's cache on \"([^\"]*)\"$/) do |minion|\n   raise \"#{minion} is not a salt minion\" unless minion.include? 'minion'\n   node = get_target(minion)\n-  node.run('systemctl stop salt-minion')\n+  node.run_until_ok('systemctl stop salt-minion')\n   node.run('rm -Rf /var/cache/salt/minion')\n+  # TODO: Ideally we should remove /etc/salt/* /var/run/salt/* /var/log/salt/* and salt and salt-minion packages\n+  #       But we can't do that as we don't have products synced, so it will fail installing salt and sal-minion\n+  #       Instead we inject those packages when deploying through sumaform and we can't remove them.\n+  #       If someday we have synced products, we can proceed to run a full cleanup:\n+  #\n+  # And(/^I perform a full salt minion cleanup on \"([^\"]*)\"$/) do |minion|\n+  #   raise \"#{minion} is not a salt minion\" unless minion.include? 'minion'\n+  #   node = get_target(minion)\n+  #   if minion.include? 'ceos'\n+  #     node.run('yum -y remove salt salt-minion')\n+  #   elsif minion.include? 'ubuntu'\n+  #     node.run('apt-get --assume-yes remove salt salt-minion')\n+  #   else\n+  #     node.run('zypper --non-interactive remove -y salt salt-minion')\n+  #   end\n+  #   node.run('rm -Rf /var/cache/salt/minion /var/run/salt /var/log/salt /etc/salt')\n+  # end", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72adffacfa6dda77ace7358b0aec110e000aabad"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3OTI4Mg==", "bodyText": "If we keep outside.. it will be lost sooner or later, I will keep it.", "url": "https://github.com/uyuni-project/uyuni/pull/2781#discussion_r515079282", "createdAt": "2020-10-30T13:00:27Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/salt_steps.rb", "diffHunk": "@@ -719,11 +719,28 @@ def pillar_get(key, minion)\n   step %(I enter \"#{ENV['VIRTHOST_XEN_PASSWORD']}\" as \"password\") if host == \"xen_server\"\n end\n \n-And(/^I cleanup minion \"([^\"]*)\"$/) do |minion|\n+And(/^I clean up the minion's cache on \"([^\"]*)\"$/) do |minion|\n   raise \"#{minion} is not a salt minion\" unless minion.include? 'minion'\n   node = get_target(minion)\n-  node.run('systemctl stop salt-minion')\n+  node.run_until_ok('systemctl stop salt-minion')\n   node.run('rm -Rf /var/cache/salt/minion')\n+  # TODO: Ideally we should remove /etc/salt/* /var/run/salt/* /var/log/salt/* and salt and salt-minion packages\n+  #       But we can't do that as we don't have products synced, so it will fail installing salt and sal-minion\n+  #       Instead we inject those packages when deploying through sumaform and we can't remove them.\n+  #       If someday we have synced products, we can proceed to run a full cleanup:\n+  #\n+  # And(/^I perform a full salt minion cleanup on \"([^\"]*)\"$/) do |minion|\n+  #   raise \"#{minion} is not a salt minion\" unless minion.include? 'minion'\n+  #   node = get_target(minion)\n+  #   if minion.include? 'ceos'\n+  #     node.run('yum -y remove salt salt-minion')\n+  #   elsif minion.include? 'ubuntu'\n+  #     node.run('apt-get --assume-yes remove salt salt-minion')\n+  #   else\n+  #     node.run('zypper --non-interactive remove -y salt salt-minion')\n+  #   end\n+  #   node.run('rm -Rf /var/cache/salt/minion /var/run/salt /var/log/salt /etc/salt')\n+  # end", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA1OTg2MA=="}, "originalCommit": {"oid": "72adffacfa6dda77ace7358b0aec110e000aabad"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4004, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}