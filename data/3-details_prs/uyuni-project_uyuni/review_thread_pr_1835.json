{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTg1MjM0", "number": 1835, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMDozODowMFrODdSPOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMDozOTo1M1rODdSRlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDM0MTA3OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/reactor/messaging/RegisterMinionEventMessageAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMDozODowMFrOFlzGjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMDozODowMFrOFlzGjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE3ODg5Mg==", "bodyText": "Nitpick: just inline the Optional.of(oldMinionId) directly in method parameter", "url": "https://github.com/uyuni-project/uyuni/pull/1835#discussion_r375178892", "createdAt": "2020-02-05T10:38:00Z", "author": {"login": "admd"}, "path": "java/code/src/com/suse/manager/reactor/messaging/RegisterMinionEventMessageAction.java", "diffHunk": "@@ -225,15 +225,21 @@ public boolean checkIfMinionAlreadyRegistered(String minionId,\n             if (!minionId.equals(oldMinionId)) {\n                 LOG.warn(\"Minion '\" + oldMinionId + \"' already registered, updating \" +\n                         \"profile to '\" + minionId + \"' [\" + machineId + \"]\");\n+\n                 registeredMinion.setName(minionId);\n                 registeredMinion.setMinionId(minionId);\n                 ServerFactory.save(registeredMinion);\n-                SystemManager.addHistoryEvent(registeredMinion, \"Duplicate Machine ID\", \"Minion '\" +\n-                        oldMinionId + \"' has been updated to '\" + minionId + \"'\");\n \n-                if (!minionId.equals(oldMinionId)) {\n-                    SALT_SERVICE.deleteKey(oldMinionId);\n-                }\n+                SaltStateGeneratorService.INSTANCE.generatePillar(registeredMinion);\n+                SaltStateGeneratorService.INSTANCE.removePillar(oldMinionId);\n+\n+                Optional<String> optOldMinionId = Optional.of(oldMinionId);\n+                migrateMinionFormula(minionId, optOldMinionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce090dee1c6ea2687f62f0ef44a1b2d1d478f432"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDM0NzA5OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/services/SaltStateGeneratorService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMDozOTo1M1rOFlzKOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMDozOTo1M1rOFlzKOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE3OTgzNA==", "bodyText": "Nitpick: We are not checking here if the server is minion, rather it is already assumed so maybe update the method docs accordingly.", "url": "https://github.com/uyuni-project/uyuni/pull/1835#discussion_r375179834", "createdAt": "2020-02-05T10:39:53Z", "author": {"login": "admd"}, "path": "java/code/src/com/suse/manager/webui/services/SaltStateGeneratorService.java", "diffHunk": "@@ -384,9 +384,17 @@ private String getImagePillarFileName(OSImageInspectSlsResult.Bundle bundle) {\n      * @param minion the minion server\n      */\n     public void removePillar(MinionServer minion) {\n-        LOG.debug(\"Removing pillar file for minion: \" + minion.getMinionId());\n+        removePillar(minion.getMinionId());\n+    }\n+\n+    /**\n+     * Remove the corresponding pillar data if the server is a minion.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce090dee1c6ea2687f62f0ef44a1b2d1d478f432"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 231, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}