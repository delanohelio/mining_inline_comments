{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MDI1OTgz", "number": 2262, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODoyMjoyN1rOEAOOfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjoyNDo1NVrOEBuH8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjY4NTQxOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/ContentValidationFaultException.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODoyMjoyN1rOGbXo1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDozNToxNlrOGbcI_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1MjAyMA==", "bodyText": "We have 2020 :-)", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r431352020", "createdAt": "2020-05-27T18:22:27Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/ContentValidationFaultException.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Copyright (c) 2019 SUSE LLC", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19afba4608a6284b989f79583a0fd817f997f21"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQyNTc4OQ==", "bodyText": "Fixed \ud83e\udd26 \ud83e\udd23", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r431425789", "createdAt": "2020-05-27T20:35:16Z", "author": {"login": "cbbayburt"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/ContentValidationFaultException.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Copyright (c) 2019 SUSE LLC", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1MjAyMA=="}, "originalCommit": {"oid": "a19afba4608a6284b989f79583a0fd817f997f21"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMjI1ODgwOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMTo0Mjo0MFrOGdt1GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMTo0Mjo0MFrOGdt1GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgxMjc2MA==", "bodyText": "Nit: typo in comment (promote).", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433812760", "createdAt": "2020-06-02T11:42:40Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "diffHunk": "@@ -825,6 +861,11 @@ public int buildProject(User loggedInUser, String projectLabel, String message)\n      */\n     public int promoteProject(User loggedInUser, String projectLabel, String envLabel) {\n         ensureOrgAdmin(loggedInUser);\n+\n+        // Validate the project for build", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430e2c0b2fcd8db11d9b155443ac907218418630"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMjI2Mzc5OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMTo0NDoyM1rOGdt4Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjo0MjowOFrOGdvxEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgxMzU5NQ==", "bodyText": "Is there a reason for not using lookupProject that is already present in this class? It also throws EntityNotExistsFaultException already.", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433813595", "createdAt": "2020-06-02T11:44:23Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "diffHunk": "@@ -836,4 +877,45 @@ public int promoteProject(User loggedInUser, String projectLabel, String envLabe\n         }\n         return 1;\n     }\n+\n+    /**\n+     * Get a {@link ContentProject} instance using the project label\n+     *\n+     * @param loggedInUser the user\n+     * @param projectLabel the project label\n+     * @return the content project instance\n+     * @throws EntityNotExistsFaultException when project doesn't exist\n+     */\n+    private ContentProject getContentProject(User loggedInUser, String projectLabel)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430e2c0b2fcd8db11d9b155443ac907218418630"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0NDQ5OQ==", "bodyText": "Not at all. I guess I just overlooked it. Good catch!", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433844499", "createdAt": "2020-06-02T12:42:08Z", "author": {"login": "cbbayburt"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "diffHunk": "@@ -836,4 +877,45 @@ public int promoteProject(User loggedInUser, String projectLabel, String envLabe\n         }\n         return 1;\n     }\n+\n+    /**\n+     * Get a {@link ContentProject} instance using the project label\n+     *\n+     * @param loggedInUser the user\n+     * @param projectLabel the project label\n+     * @return the content project instance\n+     * @throws EntityNotExistsFaultException when project doesn't exist\n+     */\n+    private ContentProject getContentProject(User loggedInUser, String projectLabel)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgxMzU5NQ=="}, "originalCommit": {"oid": "430e2c0b2fcd8db11d9b155443ac907218418630"}, "originalPosition": 155}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMjM3NjI1OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjoxODoyOFrOGdu-Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjo0Mjo0NVrOGdvyjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzMTQzOQ==", "bodyText": "In the UI we seem to also have a project validator that consists of ModularSourceValidator and ModularDependencyValidator. Could some portion (at least the list of used validators) of the validator initialization be extracted to a common place, so that next time we want to add a validator, we just change it on one place?", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433831439", "createdAt": "2020-06-02T12:18:28Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "diffHunk": "@@ -836,4 +877,45 @@ public int promoteProject(User loggedInUser, String projectLabel, String envLabe\n         }\n         return 1;\n     }\n+\n+    /**\n+     * Get a {@link ContentProject} instance using the project label\n+     *\n+     * @param loggedInUser the user\n+     * @param projectLabel the project label\n+     * @return the content project instance\n+     * @throws EntityNotExistsFaultException when project doesn't exist\n+     */\n+    private ContentProject getContentProject(User loggedInUser, String projectLabel)\n+            throws EntityNotExistsFaultException {\n+        return ContentManager.lookupProject(projectLabel, loggedInUser)\n+                .orElseThrow(() -> new EntityNotExistsFaultException(new EntityNotExistsException(projectLabel)));\n+    }\n+\n+    /**\n+     * Validates a content project for build/promote\n+     *\n+     * The validation fails only in case of an error. Info and warning messages are ignored since the build/promote\n+     * operation can still be performed.\n+     *\n+     * @param project the {@link ContentProject} instance\n+     * @throws ContentValidationFaultException when validation fails with messages\n+     */\n+    private void validateContentProject(ContentProject project) throws ContentValidationFaultException {\n+        ContentProjectValidator projectValidator = new ContentProjectValidator(project,\n+                Arrays.asList(\n+                    new ModularSourcesValidator(),\n+                    new ModularDependencyValidator(contentManager.getModulemdApi())\n+                ));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430e2c0b2fcd8db11d9b155443ac907218418630"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0NDg3Nw==", "bodyText": "I'll use another constructor that adds all validators by default", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433844877", "createdAt": "2020-06-02T12:42:45Z", "author": {"login": "cbbayburt"}, "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/contentmgmt/ContentManagementHandler.java", "diffHunk": "@@ -836,4 +877,45 @@ public int promoteProject(User loggedInUser, String projectLabel, String envLabe\n         }\n         return 1;\n     }\n+\n+    /**\n+     * Get a {@link ContentProject} instance using the project label\n+     *\n+     * @param loggedInUser the user\n+     * @param projectLabel the project label\n+     * @return the content project instance\n+     * @throws EntityNotExistsFaultException when project doesn't exist\n+     */\n+    private ContentProject getContentProject(User loggedInUser, String projectLabel)\n+            throws EntityNotExistsFaultException {\n+        return ContentManager.lookupProject(projectLabel, loggedInUser)\n+                .orElseThrow(() -> new EntityNotExistsFaultException(new EntityNotExistsException(projectLabel)));\n+    }\n+\n+    /**\n+     * Validates a content project for build/promote\n+     *\n+     * The validation fails only in case of an error. Info and warning messages are ignored since the build/promote\n+     * operation can still be performed.\n+     *\n+     * @param project the {@link ContentProject} instance\n+     * @throws ContentValidationFaultException when validation fails with messages\n+     */\n+    private void validateContentProject(ContentProject project) throws ContentValidationFaultException {\n+        ContentProjectValidator projectValidator = new ContentProjectValidator(project,\n+                Arrays.asList(\n+                    new ModularSourcesValidator(),\n+                    new ModularDependencyValidator(contentManager.getModulemdApi())\n+                ));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzMTQzOQ=="}, "originalCommit": {"oid": "430e2c0b2fcd8db11d9b155443ac907218418630"}, "originalPosition": 175}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMjM5NzMwOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/manager/contentmgmt/ContentManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjoyNDo1NVrOGdvLQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNzo1NDoxMlrOGd9MWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzNDgxOA==", "bodyText": "I'd prefer, if we slap the user on the hand (e.g. with IllegalArgumentsException), propagate it to the XMLRPC API and there re-throw some fault. This way, they will really know that they did something forbidden. If you think this is a bad idea, let me know and we can talk about it :)", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r433834818", "createdAt": "2020-06-02T12:24:55Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/manager/contentmgmt/ContentManager.java", "diffHunk": "@@ -455,6 +455,12 @@ public ContentFilter createFilter(String name, ContentFilter.Rule rule, ContentF\n         lookupFilterByNameAndOrg(name, user).ifPresent(cp -> {\n             throw new EntityExistsException(cp);\n         });\n+\n+        if (ContentFilter.EntityType.MODULE.equals(entityType)) {\n+            // Rules are not applicable for module filters\n+            // Set the rule to ALLOW for all module filters to avoid confusion when listing with XMLRPC\n+            rule = ContentFilter.Rule.ALLOW;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430e2c0b2fcd8db11d9b155443ac907218418630"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA2NDQ3Mg==", "bodyText": "Done. Now it enforces ALLOW consistently everywhere.", "url": "https://github.com/uyuni-project/uyuni/pull/2262#discussion_r434064472", "createdAt": "2020-06-02T17:54:12Z", "author": {"login": "cbbayburt"}, "path": "java/code/src/com/redhat/rhn/manager/contentmgmt/ContentManager.java", "diffHunk": "@@ -455,6 +455,12 @@ public ContentFilter createFilter(String name, ContentFilter.Rule rule, ContentF\n         lookupFilterByNameAndOrg(name, user).ifPresent(cp -> {\n             throw new EntityExistsException(cp);\n         });\n+\n+        if (ContentFilter.EntityType.MODULE.equals(entityType)) {\n+            // Rules are not applicable for module filters\n+            // Set the rule to ALLOW for all module filters to avoid confusion when listing with XMLRPC\n+            rule = ContentFilter.Rule.ALLOW;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzNDgxOA=="}, "originalCommit": {"oid": "430e2c0b2fcd8db11d9b155443ac907218418630"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4265, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}