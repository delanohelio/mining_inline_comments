{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NjM3OTc1", "number": 2223, "title": "Testsuite - avoid mandatory proxy for client boostrapping", "bodyText": "What does this PR change?\nCurrent status of step for bootstrapping via script allows us only to bootstrap via proxy, but proxy is not (and must not be) mandatory. This PR changes step definition so it is also possible to specify server to be used for bootstrap. PR also adds fallback mechanism, so server is used automatically in the case proxy is not defined in .bashrc file on controller.\n@moio It should solve the problem you reported.\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_lint_checkstyle\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"ruby_rubocop\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\"\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-05-15T14:53:02Z", "url": "https://github.com/uyuni-project/uyuni/pull/2223", "merged": true, "mergeCommit": {"oid": "f2da24832a548faa444d16e8f31526d5f4bbad8c"}, "closed": true, "closedAt": "2020-05-22T08:22:55Z", "author": {"login": "lkotek"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchjVPwABqjMzNDEyNzYxODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjeO7EgBqjMzNjA4MTgxODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73c424f50b73b9ee38fc486dd1b9b36b6fdc3fe0", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/73c424f50b73b9ee38fc486dd1b9b36b6fdc3fe0", "committedDate": "2020-05-15T14:54:14Z", "message": "ternary operator used"}, "afterCommit": {"oid": "0fb112d10ea5af5f9a7a10fc76a09340e65533ef", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/0fb112d10ea5af5f9a7a10fc76a09340e65533ef", "committedDate": "2020-05-15T14:54:51Z", "message": "avoid proxy to be mandatory for boostrap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0fb112d10ea5af5f9a7a10fc76a09340e65533ef", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/0fb112d10ea5af5f9a7a10fc76a09340e65533ef", "committedDate": "2020-05-15T14:54:51Z", "message": "avoid proxy to be mandatory for boostrap"}, "afterCommit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/90c8b88f216a1c8882e8f4d74f30b1e90ff07104", "committedDate": "2020-05-15T15:01:21Z", "message": "avoid proxy to be mandatory for boostrap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMzk1Nzk0", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413395794", "createdAt": "2020-05-18T08:53:50Z", "commit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDAyMTg2", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413402186", "createdAt": "2020-05-18T09:01:56Z", "commit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTowMTo1NlrOGWt8WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTowMTo1NlrOGWt8WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ3NDU4NA==", "bodyText": "Missing parens\nserver|proxy -> (server|proxy)", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426474584", "createdAt": "2020-05-18T09:01:56Z", "author": {"login": "calancha"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -643,25 +643,31 @@\n   $server.run(\"salt-key -y --accept=pxeboot.example.org\")\n end\n \n-When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the proxy$/) do |client_type, host, key|\n+When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the server|proxy$/) do |client_type, host, key, target_type|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDA0MTg5", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413404189", "createdAt": "2020-05-18T09:04:33Z", "commit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTowNDozM1rOGWuCzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTowNDozM1rOGWuCzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ3NjIzNw==", "bodyText": "I recommend here to use or instead of ||:\nif target_type.include? 'server' or $proxy.nil?\notherwise, you need to add parens (because || has different precedence than or):\nif (target_type.include? 'server') || $proxy.nil?\nIndeed, I just noticed that we have a Rubocop rule for that and it's alerting on this issue (Rubocop suggests adding the parens).", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426476237", "createdAt": "2020-05-18T09:04:33Z", "author": {"login": "calancha"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -643,25 +643,31 @@\n   $server.run(\"salt-key -y --accept=pxeboot.example.org\")\n end\n \n-When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the proxy$/) do |client_type, host, key|\n+When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the server|proxy$/) do |client_type, host, key, target_type|\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n+  # Use server if proxy is not defined as proxy is not mandatory\n+  if target_type.include? 'server' || $proxy.nil?\n+    target = $server\n+  else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDA2MTIx", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413406121", "createdAt": "2020-05-18T09:06:59Z", "commit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTEwMTU1", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413510155", "createdAt": "2020-05-18T11:36:25Z", "commit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTozNjoyNVrOGWzOmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTozNjoyNVrOGWzOmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MTE3Nw==", "bodyText": "Since you are not using code I'd prefix it with _, i.e. _code or just write the underscore as follows:\n output,  _ = target.run(cmd)", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426561177", "createdAt": "2020-05-18T11:36:25Z", "author": {"login": "calancha"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -643,25 +643,31 @@\n   $server.run(\"salt-key -y --accept=pxeboot.example.org\")\n end\n \n-When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the proxy$/) do |client_type, host, key|\n+When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the server|proxy$/) do |client_type, host, key, target_type|\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n+  # Use server if proxy is not defined as proxy is not mandatory\n+  if target_type.include? 'server' || $proxy.nil?\n+    target = $server\n+  else\n+    target = $proxy\n+  end\n   cmd = \"mgr-bootstrap #{client} &&\n   sed -i s\\'/^exit 1//\\' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   sed -i '/^ACTIVATION_KEYS=/c\\\\ACTIVATION_KEYS=#{key}' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   chmod 644 /srv/www/htdocs/pub/RHN-ORG-TRUSTED-SSL-CERT &&\n   sed -i '/^ORG_GPG_KEY=/c\\\\ORG_GPG_KEY=RHN-ORG-TRUSTED-SSL-CERT' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   cat /srv/www/htdocs/pub/bootstrap/bootstrap.sh\"\n-  output, code = $proxy.run(cmd)\n+  output, code = target.run(cmd)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTEwNDUw", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413510450", "createdAt": "2020-05-18T11:36:53Z", "commit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTozNjo1M1rOGWzPZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTozNjo1M1rOGWzPZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MTM4Mg==", "bodyText": "Same here (unused code).", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426561382", "createdAt": "2020-05-18T11:36:53Z", "author": {"login": "calancha"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -643,25 +643,31 @@\n   $server.run(\"salt-key -y --accept=pxeboot.example.org\")\n end\n \n-When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the proxy$/) do |client_type, host, key|\n+When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the server|proxy$/) do |client_type, host, key, target_type|\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n+  # Use server if proxy is not defined as proxy is not mandatory\n+  if target_type.include? 'server' || $proxy.nil?\n+    target = $server\n+  else\n+    target = $proxy\n+  end\n   cmd = \"mgr-bootstrap #{client} &&\n   sed -i s\\'/^exit 1//\\' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   sed -i '/^ACTIVATION_KEYS=/c\\\\ACTIVATION_KEYS=#{key}' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   chmod 644 /srv/www/htdocs/pub/RHN-ORG-TRUSTED-SSL-CERT &&\n   sed -i '/^ORG_GPG_KEY=/c\\\\ORG_GPG_KEY=RHN-ORG-TRUSTED-SSL-CERT' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   cat /srv/www/htdocs/pub/bootstrap/bootstrap.sh\"\n-  output, code = $proxy.run(cmd)\n+  output, code = target.run(cmd)\n   raise \"Key: #{key} not included\" unless output.include? key\n   # Run bootstrap script and check for result\n   boostrap_script = 'bootstrap-general.exp'\n   source = File.dirname(__FILE__) + '/../upload_files/' + boostrap_script\n   dest = '/tmp/' + boostrap_script\n-  return_code = file_inject($proxy, source, dest)\n+  return_code = file_inject(target, source, dest)\n   raise 'File injection failed' unless return_code.zero?\n   system_name = get_system_name(host)\n-  output, code = $proxy.run(\"expect -f /tmp/#{boostrap_script} #{system_name}\")\n+  output, code = target.run(\"expect -f /tmp/#{boostrap_script} #{system_name}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTk4Mjk4", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413598298", "createdAt": "2020-05-18T13:33:56Z", "commit": {"oid": "32762beb935a69021dea4c7b8f07dfbecde9a036"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozMzo1NlrOGW3YpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozMzo1NlrOGW3YpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyOTI4NQ==", "bodyText": "I get a syntactic error in this line.  The following is OK:\ntarget = (target_type.include? 'server') || $proxy.nil? ? $server : $proxy", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426629285", "createdAt": "2020-05-18T13:33:56Z", "author": {"login": "calancha"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -647,11 +647,7 @@\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n   # Use server if proxy is not defined as proxy is not mandatory\n-  if target_type.include? 'server' or $proxy.nil?\n-    target = $server\n-  else\n-    target = $proxy\n-  end\n+  target = target_type.include? 'server' or $proxy.nil? ? $server : $proxy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32762beb935a69021dea4c7b8f07dfbecde9a036"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjYzNjU5", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413663659", "createdAt": "2020-05-18T14:44:39Z", "commit": {"oid": "943deec67da886f512ff77807d8f0b6f8af32f91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjcwODQw", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413670840", "createdAt": "2020-05-18T14:52:26Z", "commit": {"oid": "943deec67da886f512ff77807d8f0b6f8af32f91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDo1MjoyNlrOGW6xYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDo1MjoyNlrOGW6xYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY4NDc2OQ==", "bodyText": "Sorry, I just noticed that the end paren is too far, It must be:\ntarget = (target_type.include? 'server') || $proxy.nil? ? $server : $proxy\nIn case Rubocop gets picky, the following is equivalent:\ntarget = if (target_type.include? 'server') || $proxy.nil? then $server else $proxy", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426684769", "createdAt": "2020-05-18T14:52:26Z", "author": {"login": "calancha"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -647,7 +647,7 @@\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n   # Use server if proxy is not defined as proxy is not mandatory\n-  target = target_type.include? 'server' or $proxy.nil? ? $server : $proxy\n+  target = (target_type.include? 'server' || $proxy.nil?) ? $server : $proxy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "943deec67da886f512ff77807d8f0b6f8af32f91"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjc0NjU4", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413674658", "createdAt": "2020-05-18T14:56:26Z", "commit": {"oid": "943deec67da886f512ff77807d8f0b6f8af32f91"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjg3MzEw", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413687310", "createdAt": "2020-05-18T15:09:40Z", "commit": {"oid": "81472b66c60d0d3ceceb8d576cbaacb37767e113"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjg5NDM4", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413689438", "createdAt": "2020-05-18T15:11:54Z", "commit": {"oid": "81472b66c60d0d3ceceb8d576cbaacb37767e113"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNToxMTo1NFrOGW7pVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNToxMTo1NFrOGW7pVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5OTA5Mg==", "bodyText": "We lost the if keyword", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426699092", "createdAt": "2020-05-18T15:11:54Z", "author": {"login": "calancha"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -647,7 +647,7 @@\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n   # Use server if proxy is not defined as proxy is not mandatory\n-  target = (target_type.include? 'server' || $proxy.nil?) ? $server : $proxy\n+  target = (target_type.include? 'server') || $proxy.nil? then $server else $proxy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81472b66c60d0d3ceceb8d576cbaacb37767e113"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjkwNDYy", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-413690462", "createdAt": "2020-05-18T15:13:00Z", "commit": {"oid": "81472b66c60d0d3ceceb8d576cbaacb37767e113"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjMwOTI0", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-414230924", "createdAt": "2020-05-19T08:46:09Z", "commit": {"oid": "0cf297b32632c357151bfb5c7bc67ffd1c41f82c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODo0NjoxMFrOGXWJ5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODo0NjoxMFrOGXWJ5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEzMzQxNA==", "bodyText": "Opps, my bad! This is not Python, so we must close the if expression (i.e., we must add end):\nif (target_type.include? 'server') || $proxy.nil? then $server else $proxy end", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r427133414", "createdAt": "2020-05-19T08:46:10Z", "author": {"login": "calancha"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -647,7 +647,7 @@\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n   # Use server if proxy is not defined as proxy is not mandatory\n-  target = (target_type.include? 'server') || $proxy.nil? then $server else $proxy\n+  target = if (target_type.include? 'server') || $proxy.nil? then $server else $proxy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cf297b32632c357151bfb5c7bc67ffd1c41f82c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjMyMjAz", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-414232203", "createdAt": "2020-05-19T08:47:31Z", "commit": {"oid": "0cf297b32632c357151bfb5c7bc67ffd1c41f82c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjM4NDc3", "url": "https://github.com/uyuni-project/uyuni/pull/2223#pullrequestreview-414238477", "createdAt": "2020-05-19T08:54:38Z", "commit": {"oid": "dc4858f5188cc86b0d5dcbd67df6263b175f974c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "303814944e03f3934eab5da4eba151cec5ffc306", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/303814944e03f3934eab5da4eba151cec5ffc306", "committedDate": "2020-05-21T08:30:24Z", "message": "fix"}, "afterCommit": {"oid": "a6d7b178f6c07578dd4de54f9f5cf93118b5e607", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/a6d7b178f6c07578dd4de54f9f5cf93118b5e607", "committedDate": "2020-05-21T08:38:46Z", "message": "avoid proxy to be mandatory for boostrap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6d7b178f6c07578dd4de54f9f5cf93118b5e607", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/a6d7b178f6c07578dd4de54f9f5cf93118b5e607", "committedDate": "2020-05-21T08:38:46Z", "message": "avoid proxy to be mandatory for boostrap"}, "afterCommit": {"oid": "33cb057211885c191652050b960f280597c4208a", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/33cb057211885c191652050b960f280597c4208a", "committedDate": "2020-05-21T13:21:19Z", "message": "avoid proxy to be mandatory for boostrap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33cb057211885c191652050b960f280597c4208a", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/33cb057211885c191652050b960f280597c4208a", "committedDate": "2020-05-21T13:21:19Z", "message": "avoid proxy to be mandatory for boostrap"}, "afterCommit": {"oid": "851bc74be156071eacb81738cdf4c3323798f18d", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/851bc74be156071eacb81738cdf4c3323798f18d", "committedDate": "2020-05-21T13:59:07Z", "message": "avoid proxy to be mandatory for boostrap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20b7ba1b04fb5fc08ef796338c8f4c76a1b3a992", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/20b7ba1b04fb5fc08ef796338c8f4c76a1b3a992", "committedDate": "2020-05-21T14:06:34Z", "message": "avoid proxy to be mandatory for boostrap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "851bc74be156071eacb81738cdf4c3323798f18d", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/851bc74be156071eacb81738cdf4c3323798f18d", "committedDate": "2020-05-21T13:59:07Z", "message": "avoid proxy to be mandatory for boostrap"}, "afterCommit": {"oid": "20b7ba1b04fb5fc08ef796338c8f4c76a1b3a992", "author": {"user": null}, "url": "https://github.com/uyuni-project/uyuni/commit/20b7ba1b04fb5fc08ef796338c8f4c76a1b3a992", "committedDate": "2020-05-21T14:06:34Z", "message": "avoid proxy to be mandatory for boostrap"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1463, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}