{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NDAwMDI1", "number": 2344, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzo1ODoyOVrOEIxekg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoxMjozMFrOEIx1og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjM0NzA2OnYy", "diffSide": "RIGHT", "path": "backend/satellite_tools/repo_plugins/yum_src.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzo1ODoyOVrOGo8A4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzo1ODoyOVrOGo8A4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU3OTQ4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        # no mirror list found continue without\n          \n          \n            \n                        # no 'media.1/products' file found", "url": "https://github.com/uyuni-project/uyuni/pull/2344#discussion_r445579489", "createdAt": "2020-06-25T13:58:29Z", "author": {"login": "meaksh"}, "path": "backend/satellite_tools/repo_plugins/yum_src.py", "diffHunk": "@@ -964,6 +964,30 @@ def get_modules(self):\n             modules = self._retrieve_md_path('modules')\n         return modules\n \n+    def get_mediaproducts(self):\n+        \"\"\"\n+        Return path to media.1/products file if available\n+\n+        :returns: str\n+        \"\"\"\n+        media_products_path = os.path.join(self._get_repodata_path(), 'media.1/products')\n+        try:\n+            (s,b,p,q,f,o) = urlparse(self.url)\n+            if p[-1] != '/':\n+                p = p + '/'\n+            p = p + 'media.1/products'\n+        except (ValueError, IndexError, KeyError) as e:\n+            return None\n+        url = urlunparse((s,b,p,q,f,o))\n+        try:\n+            urlgrabber_opts = {}\n+            self.set_download_parameters(urlgrabber_opts, url, media_products_path)\n+            urlgrabber.urlgrab(url, media_products_path, **urlgrabber_opts)\n+        except Exception as exc:\n+            # no mirror list found continue without", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b890ce2cd3571991a1bab4c4b7386c7765cbc296"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjM0ODk1OnYy", "diffSide": "RIGHT", "path": "backend/satellite_tools/reposync.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzo1ODo1MlrOGo8CFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoxMDo1M1rOGo8igQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU3OTc5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                def import_mediaproducts(self, plug):\n          \n          \n            \n                    mediaproducts = plug.get_mediaproducts()\n          \n          \n            \n                    if mediaproducts:\n          \n          \n            \n                        self.copy_metadata_file(plug, mediaproducts, 'mediaproducts', relative_mediaproducts_dir)\n          \n          \n            \n            \n          \n          \n            \n                def import_mediaproducts(self, plug):\n          \n          \n            \n                    mediaproducts = plug.get_mediaproducts()\n          \n          \n            \n                    if mediaproducts:\n          \n          \n            \n                        self.copy_metadata_file(plug, mediaproducts, 'mediaproducts', relative_mediaproducts_dir)", "url": "https://github.com/uyuni-project/uyuni/pull/2344#discussion_r445579797", "createdAt": "2020-06-25T13:58:52Z", "author": {"login": "meaksh"}, "path": "backend/satellite_tools/reposync.py", "diffHunk": "@@ -813,6 +816,11 @@ def import_modules(self, plug):\n         modulesfile = plug.get_modules()\n         if modulesfile:\n             self.copy_metadata_file(plug, modulesfile, 'modules', relative_modules_dir)\n+    def import_mediaproducts(self, plug):\n+        mediaproducts = plug.get_mediaproducts()\n+        if mediaproducts:\n+            self.copy_metadata_file(plug, mediaproducts, 'mediaproducts', relative_mediaproducts_dir)\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b890ce2cd3571991a1bab4c4b7386c7765cbc296"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU4NjExOQ==", "bodyText": "I do not see a difference? Is there a tab vs. space thingy?", "url": "https://github.com/uyuni-project/uyuni/pull/2344#discussion_r445586119", "createdAt": "2020-06-25T14:08:03Z", "author": {"login": "mcalmer"}, "path": "backend/satellite_tools/reposync.py", "diffHunk": "@@ -813,6 +816,11 @@ def import_modules(self, plug):\n         modulesfile = plug.get_modules()\n         if modulesfile:\n             self.copy_metadata_file(plug, modulesfile, 'modules', relative_modules_dir)\n+    def import_mediaproducts(self, plug):\n+        mediaproducts = plug.get_mediaproducts()\n+        if mediaproducts:\n+            self.copy_metadata_file(plug, mediaproducts, 'mediaproducts', relative_mediaproducts_dir)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU3OTc5Nw=="}, "originalCommit": {"oid": "b890ce2cd3571991a1bab4c4b7386c7765cbc296"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU4ODA5Nw==", "bodyText": "Got it. The extra line.", "url": "https://github.com/uyuni-project/uyuni/pull/2344#discussion_r445588097", "createdAt": "2020-06-25T14:10:53Z", "author": {"login": "mcalmer"}, "path": "backend/satellite_tools/reposync.py", "diffHunk": "@@ -813,6 +816,11 @@ def import_modules(self, plug):\n         modulesfile = plug.get_modules()\n         if modulesfile:\n             self.copy_metadata_file(plug, modulesfile, 'modules', relative_modules_dir)\n+    def import_mediaproducts(self, plug):\n+        mediaproducts = plug.get_mediaproducts()\n+        if mediaproducts:\n+            self.copy_metadata_file(plug, mediaproducts, 'mediaproducts', relative_mediaproducts_dir)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU3OTc5Nw=="}, "originalCommit": {"oid": "b890ce2cd3571991a1bab4c4b7386c7765cbc296"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjM3NTAwOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/action/common/DownloadFile.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDowNTowOVrOGo8TXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo0NDoxMFrOGo-EBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU4NDIyMw==", "bodyText": "Does this correspond to the mount point for repomd cache? This is configurable (repomd_cache_mount_point global option). Maybe you can also pull the value out of config instead of hardcoding.", "url": "https://github.com/uyuni-project/uyuni/pull/2344#discussion_r445584223", "createdAt": "2020-06-25T14:05:09Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/common/DownloadFile.java", "diffHunk": "@@ -619,7 +619,18 @@ private StreamInfo getStreamInfoKickstart(ActionMapping mapping, ActionForm form\n             // my $dp = File::Spec->catfile($kickstart_mount, $tree->base_path, $path);\n \n             if (child == null) {\n-                diskPath = kickstartMount + \"/\" + tree.getBasePath() + path;\n+                if (path.contains(\"repodata/\") && tree.getKernelOptions().contains(\"useonlinerepo\")) {\n+                    String[] split = StringUtils.split(path, '/');\n+                    if (split[0].equals(\"repodata\")) {\n+                        split[0] = tree.getChannel().getLabel();\n+                    }\n+                    diskPath = \"/var/cache/\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc049378ba0f9e78d3d1c18f8cfea6d64167e95"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxMzA2MQ==", "bodyText": "Seems so. I just copied the code from some lines below.", "url": "https://github.com/uyuni-project/uyuni/pull/2344#discussion_r445613061", "createdAt": "2020-06-25T14:44:10Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/redhat/rhn/frontend/action/common/DownloadFile.java", "diffHunk": "@@ -619,7 +619,18 @@ private StreamInfo getStreamInfoKickstart(ActionMapping mapping, ActionForm form\n             // my $dp = File::Spec->catfile($kickstart_mount, $tree->base_path, $path);\n \n             if (child == null) {\n-                diskPath = kickstartMount + \"/\" + tree.getBasePath() + path;\n+                if (path.contains(\"repodata/\") && tree.getKernelOptions().contains(\"useonlinerepo\")) {\n+                    String[] split = StringUtils.split(path, '/');\n+                    if (split[0].equals(\"repodata\")) {\n+                        split[0] = tree.getChannel().getLabel();\n+                    }\n+                    diskPath = \"/var/cache/\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU4NDIyMw=="}, "originalCommit": {"oid": "fbc049378ba0f9e78d3d1c18f8cfea6d64167e95"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjQwNjEwOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/frontend/action/common/DownloadFile.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoxMjozMFrOGo8nKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo1MDo0NFrOGo-XTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU4OTI4OQ==", "bodyText": "These are quite explicit conditions, I'd suggest adding some logging here, which could simplify debugging (at least the final diskPath, if it's not logged by something else). That could simplify debugging, in case of problems.", "url": "https://github.com/uyuni-project/uyuni/pull/2344#discussion_r445589289", "createdAt": "2020-06-25T14:12:30Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/frontend/action/common/DownloadFile.java", "diffHunk": "@@ -619,7 +619,18 @@ private StreamInfo getStreamInfoKickstart(ActionMapping mapping, ActionForm form\n             // my $dp = File::Spec->catfile($kickstart_mount, $tree->base_path, $path);\n \n             if (child == null) {\n-                diskPath = kickstartMount + \"/\" + tree.getBasePath() + path;\n+                if (path.contains(\"repodata/\") && tree.getKernelOptions().contains(\"useonlinerepo\")) {\n+                    String[] split = StringUtils.split(path, '/');\n+                    if (split[0].equals(\"repodata\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc049378ba0f9e78d3d1c18f8cfea6d64167e95"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxNzk5OA==", "bodyText": "diskPath is logged in line 658", "url": "https://github.com/uyuni-project/uyuni/pull/2344#discussion_r445617998", "createdAt": "2020-06-25T14:50:44Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/redhat/rhn/frontend/action/common/DownloadFile.java", "diffHunk": "@@ -619,7 +619,18 @@ private StreamInfo getStreamInfoKickstart(ActionMapping mapping, ActionForm form\n             // my $dp = File::Spec->catfile($kickstart_mount, $tree->base_path, $path);\n \n             if (child == null) {\n-                diskPath = kickstartMount + \"/\" + tree.getBasePath() + path;\n+                if (path.contains(\"repodata/\") && tree.getKernelOptions().contains(\"useonlinerepo\")) {\n+                    String[] split = StringUtils.split(path, '/');\n+                    if (split[0].equals(\"repodata\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU4OTI4OQ=="}, "originalCommit": {"oid": "fbc049378ba0f9e78d3d1c18f8cfea6d64167e95"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4205, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}