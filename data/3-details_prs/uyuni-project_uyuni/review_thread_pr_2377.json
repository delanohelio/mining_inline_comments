{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNjU1NzA1", "number": 2377, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjoxMjoyOVrOEKfEGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjoyMDo0NVrOEKfOXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDMwMTY5OnYy", "diffSide": "RIGHT", "path": "spacewalk/certs-tools/rhn_bootstrap_strings.py", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjoxMjoyOVrOGrjSfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzowNDoxMlrOGrk_dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDEyNw==", "bodyText": "Does $FETCH print any value on screen?\nNot sure if you need &> /dev/null", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448320127", "createdAt": "2020-07-01T12:12:29Z", "author": {"login": "juliogonzalez"}, "path": "spacewalk/certs-tools/rhn_bootstrap_strings.py", "diffHunk": "@@ -406,6 +406,11 @@ def getRegistrationStackSh(saltEnabled):\n     CLIENT_REPO_NAME=\"susemanager:bootstrap\"\n     CLIENT_REPO_FILE=\"/etc/yum.repos.d/$CLIENT_REPO_NAME.repo\"\n \n+    # In case of CentOS, check is centos bootstrap repository is available, if not, failback to res.\n+    if [[ \"$Y_CLIENT_CODE_BASE\" == centos && ! `$FETCH $CLIENT_REPO_URL/repodata/repomd.xml` ]]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyOTA4NA==", "bodyText": "The $FETCH is wrapping curl or wget with silent options: i.a. curl -ksSOf.\nThe only output we would see, in case the \"centos\" repo is not available would be something like this:\nhttps://my-suma-server/pub/repositories/centos/6/bootstrap/repodata/repomd.xml:\n2020-07-01 13:27:35 ERROR 404: Not Found.\n\nThen you will see yum trying to use the \"res\" repository.", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448329084", "createdAt": "2020-07-01T12:29:46Z", "author": {"login": "meaksh"}, "path": "spacewalk/certs-tools/rhn_bootstrap_strings.py", "diffHunk": "@@ -406,6 +406,11 @@ def getRegistrationStackSh(saltEnabled):\n     CLIENT_REPO_NAME=\"susemanager:bootstrap\"\n     CLIENT_REPO_FILE=\"/etc/yum.repos.d/$CLIENT_REPO_NAME.repo\"\n \n+    # In case of CentOS, check is centos bootstrap repository is available, if not, failback to res.\n+    if [[ \"$Y_CLIENT_CODE_BASE\" == centos && ! `$FETCH $CLIENT_REPO_URL/repodata/repomd.xml` ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDEyNw=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzMTExNw==", "bodyText": "Do we really want to show it if anyway the RES repo is going to be used?\nI think users can be alarmed if we they that.", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448331117", "createdAt": "2020-07-01T12:33:32Z", "author": {"login": "juliogonzalez"}, "path": "spacewalk/certs-tools/rhn_bootstrap_strings.py", "diffHunk": "@@ -406,6 +406,11 @@ def getRegistrationStackSh(saltEnabled):\n     CLIENT_REPO_NAME=\"susemanager:bootstrap\"\n     CLIENT_REPO_FILE=\"/etc/yum.repos.d/$CLIENT_REPO_NAME.repo\"\n \n+    # In case of CentOS, check is centos bootstrap repository is available, if not, failback to res.\n+    if [[ \"$Y_CLIENT_CODE_BASE\" == centos && ! `$FETCH $CLIENT_REPO_URL/repodata/repomd.xml` ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDEyNw=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzMjg1OQ==", "bodyText": "If I may suggest a change:\nif [[ \"$Y_CLIENT_CODE_BASE\" == centos && ! `$FETCH $CLIENT_REPO_URL/repodata/repomd.xml &> /dev/null` ]]; then\n    echo \"CentOS${{Y_CLIENT_CODE_VERSION}} bootstrap repository not found, using RES${{Y_CLIENT_CODE_VERSION}} bootstrap repository instead\"\n    CLIENT_REPO_URL=\"${{CLIENT_REPOS_ROOT}}/res/${{Y_CLIENT_CODE_VERSION}}/bootstrap\"\nfi", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448332859", "createdAt": "2020-07-01T12:36:28Z", "author": {"login": "juliogonzalez"}, "path": "spacewalk/certs-tools/rhn_bootstrap_strings.py", "diffHunk": "@@ -406,6 +406,11 @@ def getRegistrationStackSh(saltEnabled):\n     CLIENT_REPO_NAME=\"susemanager:bootstrap\"\n     CLIENT_REPO_FILE=\"/etc/yum.repos.d/$CLIENT_REPO_NAME.repo\"\n \n+    # In case of CentOS, check is centos bootstrap repository is available, if not, failback to res.\n+    if [[ \"$Y_CLIENT_CODE_BASE\" == centos && ! `$FETCH $CLIENT_REPO_URL/repodata/repomd.xml` ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDEyNw=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0MDc3OA==", "bodyText": "Do we really want to show it if anyway the RES repo is going to be used?\nI think users can be alarmed if we they that.\n\nThe only possible output from curl, when the \"centos\" repo does not exist, would be only showing \"centos\" and never mentining \"res\" (since curl always and only fetchs the \"centos\" repo).\nSo piping \"curl\" output to /dev/null here is not really helpful. Actually, I think it makes sense to keep the possible output so the users knows the bootstrap script initially tries to use the \"centos\" repos and then it goes with the \"res\" one, and not doing the magic completely silently.", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448340778", "createdAt": "2020-07-01T12:51:30Z", "author": {"login": "meaksh"}, "path": "spacewalk/certs-tools/rhn_bootstrap_strings.py", "diffHunk": "@@ -406,6 +406,11 @@ def getRegistrationStackSh(saltEnabled):\n     CLIENT_REPO_NAME=\"susemanager:bootstrap\"\n     CLIENT_REPO_FILE=\"/etc/yum.repos.d/$CLIENT_REPO_NAME.repo\"\n \n+    # In case of CentOS, check is centos bootstrap repository is available, if not, failback to res.\n+    if [[ \"$Y_CLIENT_CODE_BASE\" == centos && ! `$FETCH $CLIENT_REPO_URL/repodata/repomd.xml` ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDEyNw=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0ODAyMQ==", "bodyText": "Ok. I didn't notice the echo you suggested! You're right. Changes are now pushed \ud83d\udc4d", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448348021", "createdAt": "2020-07-01T13:04:12Z", "author": {"login": "meaksh"}, "path": "spacewalk/certs-tools/rhn_bootstrap_strings.py", "diffHunk": "@@ -406,6 +406,11 @@ def getRegistrationStackSh(saltEnabled):\n     CLIENT_REPO_NAME=\"susemanager:bootstrap\"\n     CLIENT_REPO_FILE=\"/etc/yum.repos.d/$CLIENT_REPO_NAME.repo\"\n \n+    # In case of CentOS, check is centos bootstrap repository is available, if not, failback to res.\n+    if [[ \"$Y_CLIENT_CODE_BASE\" == centos && ! `$FETCH $CLIENT_REPO_URL/repodata/repomd.xml` ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDEyNw=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDMwMzI1OnYy", "diffSide": "RIGHT", "path": "susemanager-utils/susemanager-sls/salt/bootstrap/init.sls", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjoxMzowMVrOGrjTcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjozMzowMlrOGrj8Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDM3MA==", "bodyText": "901? :-?", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448320370", "createdAt": "2020-07-01T12:13:01Z", "author": {"login": "juliogonzalez"}, "path": "susemanager-utils/susemanager-sls/salt/bootstrap/init.sls", "diffHunk": "@@ -26,14 +26,31 @@ mgr_server_localhost_alias_absent:\n {%- else %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/' ~ os_base ~ '/' ~ grains['osrelease'] ~ '/0/bootstrap/' %}\n {%- endif %}\n+\n {%- elif grains['os_family'] == 'RedHat' %}\n-{%- if salt['file.file_exists' ]('/etc/oracle-release') %}\n+{%- if salt['file.file_exists']('/etc/oracle-release') %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/oracle/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n-{%- elif salt['file.file_exists' ]('/etc/redhat-release') %}\n+\n+{%- elif salt['file.file_exists']('/usr/share/doc/sles_es-release') %}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/res/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+\n+{%- elif salt['file.file_exists']('/etc/centos-release') %}\n+{# We try CentOS bootstrap repository first. Failback to RES #}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/centos/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+{% set bootstrap_repo_request = salt['http.query'](bootstrap_repo_url + 'repodata/repomd.xml', status=True, verify_ssl=False) %}\n+{%- if bootstrap_repo_request['status'] == 901 %}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyNTMxMQ==", "bodyText": "Special SSL error. TLS 1.2 not available ... you know this beast :-)", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448325311", "createdAt": "2020-07-01T12:22:58Z", "author": {"login": "mcalmer"}, "path": "susemanager-utils/susemanager-sls/salt/bootstrap/init.sls", "diffHunk": "@@ -26,14 +26,31 @@ mgr_server_localhost_alias_absent:\n {%- else %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/' ~ os_base ~ '/' ~ grains['osrelease'] ~ '/0/bootstrap/' %}\n {%- endif %}\n+\n {%- elif grains['os_family'] == 'RedHat' %}\n-{%- if salt['file.file_exists' ]('/etc/oracle-release') %}\n+{%- if salt['file.file_exists']('/etc/oracle-release') %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/oracle/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n-{%- elif salt['file.file_exists' ]('/etc/redhat-release') %}\n+\n+{%- elif salt['file.file_exists']('/usr/share/doc/sles_es-release') %}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/res/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+\n+{%- elif salt['file.file_exists']('/etc/centos-release') %}\n+{# We try CentOS bootstrap repository first. Failback to RES #}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/centos/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+{% set bootstrap_repo_request = salt['http.query'](bootstrap_repo_url + 'repodata/repomd.xml', status=True, verify_ssl=False) %}\n+{%- if bootstrap_repo_request['status'] == 901 %}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDM3MA=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzMDAzNQ==", "bodyText": "This same code is reused in this SLS file. It actually fixes some scenario we already got a bug report.\nI think the status 901 is expected in cases you have a captive portal or something like that.", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448330035", "createdAt": "2020-07-01T12:31:31Z", "author": {"login": "meaksh"}, "path": "susemanager-utils/susemanager-sls/salt/bootstrap/init.sls", "diffHunk": "@@ -26,14 +26,31 @@ mgr_server_localhost_alias_absent:\n {%- else %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/' ~ os_base ~ '/' ~ grains['osrelease'] ~ '/0/bootstrap/' %}\n {%- endif %}\n+\n {%- elif grains['os_family'] == 'RedHat' %}\n-{%- if salt['file.file_exists' ]('/etc/oracle-release') %}\n+{%- if salt['file.file_exists']('/etc/oracle-release') %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/oracle/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n-{%- elif salt['file.file_exists' ]('/etc/redhat-release') %}\n+\n+{%- elif salt['file.file_exists']('/usr/share/doc/sles_es-release') %}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/res/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+\n+{%- elif salt['file.file_exists']('/etc/centos-release') %}\n+{# We try CentOS bootstrap repository first. Failback to RES #}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/centos/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+{% set bootstrap_repo_request = salt['http.query'](bootstrap_repo_url + 'repodata/repomd.xml', status=True, verify_ssl=False) %}\n+{%- if bootstrap_repo_request['status'] == 901 %}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDM3MA=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzMDg0Ng==", "bodyText": "ACK :-)", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448330846", "createdAt": "2020-07-01T12:33:02Z", "author": {"login": "juliogonzalez"}, "path": "susemanager-utils/susemanager-sls/salt/bootstrap/init.sls", "diffHunk": "@@ -26,14 +26,31 @@ mgr_server_localhost_alias_absent:\n {%- else %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/' ~ os_base ~ '/' ~ grains['osrelease'] ~ '/0/bootstrap/' %}\n {%- endif %}\n+\n {%- elif grains['os_family'] == 'RedHat' %}\n-{%- if salt['file.file_exists' ]('/etc/oracle-release') %}\n+{%- if salt['file.file_exists']('/etc/oracle-release') %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/oracle/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n-{%- elif salt['file.file_exists' ]('/etc/redhat-release') %}\n+\n+{%- elif salt['file.file_exists']('/usr/share/doc/sles_es-release') %}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/res/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+\n+{%- elif salt['file.file_exists']('/etc/centos-release') %}\n+{# We try CentOS bootstrap repository first. Failback to RES #}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/centos/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+{% set bootstrap_repo_request = salt['http.query'](bootstrap_repo_url + 'repodata/repomd.xml', status=True, verify_ssl=False) %}\n+{%- if bootstrap_repo_request['status'] == 901 %}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDM3MA=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDMwNjMzOnYy", "diffSide": "RIGHT", "path": "susemanager-utils/susemanager-sls/salt/bootstrap/init.sls", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjoxNDowNlrOGrjVXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjozMjo0M1rOGrj7uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDg2Mw==", "bodyText": "This is so you can follow redirects? But if so, how do you know the target of a redirect is valid?", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448320863", "createdAt": "2020-07-01T12:14:06Z", "author": {"login": "juliogonzalez"}, "path": "susemanager-utils/susemanager-sls/salt/bootstrap/init.sls", "diffHunk": "@@ -26,14 +26,31 @@ mgr_server_localhost_alias_absent:\n {%- else %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/' ~ os_base ~ '/' ~ grains['osrelease'] ~ '/0/bootstrap/' %}\n {%- endif %}\n+\n {%- elif grains['os_family'] == 'RedHat' %}\n-{%- if salt['file.file_exists' ]('/etc/oracle-release') %}\n+{%- if salt['file.file_exists']('/etc/oracle-release') %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/oracle/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n-{%- elif salt['file.file_exists' ]('/etc/redhat-release') %}\n+\n+{%- elif salt['file.file_exists']('/usr/share/doc/sles_es-release') %}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/res/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+\n+{%- elif salt['file.file_exists']('/etc/centos-release') %}\n+{# We try CentOS bootstrap repository first. Failback to RES #}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/centos/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+{% set bootstrap_repo_request = salt['http.query'](bootstrap_repo_url + 'repodata/repomd.xml', status=True, verify_ssl=False) %}\n+{%- if bootstrap_repo_request['status'] == 901 %}\n+{{ raise(bootstrap_repo_request['error']) }}\n+{%- elif not (0 < bootstrap_repo_request['status'] < 300) %}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyNTAwNw==", "bodyText": "redirects are 301 or 302. So this is mainly checking 200 codes which are success codes", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448325007", "createdAt": "2020-07-01T12:22:22Z", "author": {"login": "mcalmer"}, "path": "susemanager-utils/susemanager-sls/salt/bootstrap/init.sls", "diffHunk": "@@ -26,14 +26,31 @@ mgr_server_localhost_alias_absent:\n {%- else %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/' ~ os_base ~ '/' ~ grains['osrelease'] ~ '/0/bootstrap/' %}\n {%- endif %}\n+\n {%- elif grains['os_family'] == 'RedHat' %}\n-{%- if salt['file.file_exists' ]('/etc/oracle-release') %}\n+{%- if salt['file.file_exists']('/etc/oracle-release') %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/oracle/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n-{%- elif salt['file.file_exists' ]('/etc/redhat-release') %}\n+\n+{%- elif salt['file.file_exists']('/usr/share/doc/sles_es-release') %}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/res/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+\n+{%- elif salt['file.file_exists']('/etc/centos-release') %}\n+{# We try CentOS bootstrap repository first. Failback to RES #}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/centos/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+{% set bootstrap_repo_request = salt['http.query'](bootstrap_repo_url + 'repodata/repomd.xml', status=True, verify_ssl=False) %}\n+{%- if bootstrap_repo_request['status'] == 901 %}\n+{{ raise(bootstrap_repo_request['error']) }}\n+{%- elif not (0 < bootstrap_repo_request['status'] < 300) %}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDg2Mw=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzMDUyOA==", "bodyText": "Same as above. I'm reusing the same code/logic we already have in this SLS file. We do the same with whatever bootstrap repo we set.", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448330528", "createdAt": "2020-07-01T12:32:23Z", "author": {"login": "meaksh"}, "path": "susemanager-utils/susemanager-sls/salt/bootstrap/init.sls", "diffHunk": "@@ -26,14 +26,31 @@ mgr_server_localhost_alias_absent:\n {%- else %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/' ~ os_base ~ '/' ~ grains['osrelease'] ~ '/0/bootstrap/' %}\n {%- endif %}\n+\n {%- elif grains['os_family'] == 'RedHat' %}\n-{%- if salt['file.file_exists' ]('/etc/oracle-release') %}\n+{%- if salt['file.file_exists']('/etc/oracle-release') %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/oracle/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n-{%- elif salt['file.file_exists' ]('/etc/redhat-release') %}\n+\n+{%- elif salt['file.file_exists']('/usr/share/doc/sles_es-release') %}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/res/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+\n+{%- elif salt['file.file_exists']('/etc/centos-release') %}\n+{# We try CentOS bootstrap repository first. Failback to RES #}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/centos/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+{% set bootstrap_repo_request = salt['http.query'](bootstrap_repo_url + 'repodata/repomd.xml', status=True, verify_ssl=False) %}\n+{%- if bootstrap_repo_request['status'] == 901 %}\n+{{ raise(bootstrap_repo_request['error']) }}\n+{%- elif not (0 < bootstrap_repo_request['status'] < 300) %}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDg2Mw=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzMDY4MQ==", "bodyText": "$me stupid: < 300", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448330681", "createdAt": "2020-07-01T12:32:43Z", "author": {"login": "juliogonzalez"}, "path": "susemanager-utils/susemanager-sls/salt/bootstrap/init.sls", "diffHunk": "@@ -26,14 +26,31 @@ mgr_server_localhost_alias_absent:\n {%- else %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/' ~ os_base ~ '/' ~ grains['osrelease'] ~ '/0/bootstrap/' %}\n {%- endif %}\n+\n {%- elif grains['os_family'] == 'RedHat' %}\n-{%- if salt['file.file_exists' ]('/etc/oracle-release') %}\n+{%- if salt['file.file_exists']('/etc/oracle-release') %}\n {% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/oracle/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n-{%- elif salt['file.file_exists' ]('/etc/redhat-release') %}\n+\n+{%- elif salt['file.file_exists']('/usr/share/doc/sles_es-release') %}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/res/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+\n+{%- elif salt['file.file_exists']('/etc/centos-release') %}\n+{# We try CentOS bootstrap repository first. Failback to RES #}\n+{% set bootstrap_repo_url = 'https://' ~ salt['pillar.get']('mgr_server') ~ '/pub/repositories/centos/' ~ grains['osmajorrelease'] ~ '/bootstrap/' %}\n+{% set bootstrap_repo_request = salt['http.query'](bootstrap_repo_url + 'repodata/repomd.xml', status=True, verify_ssl=False) %}\n+{%- if bootstrap_repo_request['status'] == 901 %}\n+{{ raise(bootstrap_repo_request['error']) }}\n+{%- elif not (0 < bootstrap_repo_request['status'] < 300) %}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMDg2Mw=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDMyNzk5OnYy", "diffSide": "RIGHT", "path": "spacewalk/certs-tools/spacewalk-certs-tools.changes", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjoyMDo0NVrOGrjibA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo0MzowM1rOGrkRZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyNDIwNA==", "bodyText": "failback does not exist. I think you mean fallback.\nThis exists also in some comments in the code.", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448324204", "createdAt": "2020-07-01T12:20:45Z", "author": {"login": "mcalmer"}, "path": "spacewalk/certs-tools/spacewalk-certs-tools.changes", "diffHunk": "@@ -1,3 +1,5 @@\n+- Use RES bootstrap repository as failback repo when bootstrapping CentOS (bsc#1173556)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzNjIyOA==", "bodyText": "Thanks for the comment! I'll fix this and double check the code comments as well", "url": "https://github.com/uyuni-project/uyuni/pull/2377#discussion_r448336228", "createdAt": "2020-07-01T12:43:03Z", "author": {"login": "meaksh"}, "path": "spacewalk/certs-tools/spacewalk-certs-tools.changes", "diffHunk": "@@ -1,3 +1,5 @@\n+- Use RES bootstrap repository as failback repo when bootstrapping CentOS (bsc#1173556)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyNDIwNA=="}, "originalCommit": {"oid": "927411aa2403ee1f118eb032345910529c897b28"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4230, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}