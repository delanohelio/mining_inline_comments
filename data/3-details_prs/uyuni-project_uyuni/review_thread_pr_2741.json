{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MDc3NjAx", "number": 2741, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwODo0NjowNlrOE8k9sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwODo0OTozMlrOE8lC3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxOTU1NjM1OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/virtualization/test/virt.vm_info.all.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwODo0NjowNlrOH4xz8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoxNTowMVrOH44LIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI5ODQxOQ==", "bodyText": "empty end line missing", "url": "https://github.com/uyuni-project/uyuni/pull/2741#discussion_r529298419", "createdAt": "2020-11-24T08:46:06Z", "author": {"login": "ncounter"}, "path": "java/code/src/com/suse/manager/virtualization/test/virt.vm_info.all.json", "diffHunk": "@@ -0,0 +1,108 @@\n+{\n+  \"vm01\": {\n+    \"cpu\": 2,\n+    \"cputime\": 0,\n+    \"disks\": {\n+      \"vda\": {\n+        \"file\": \"/srv/vms/sles12sp2.qcow2\",\n+        \"type\": \"disk\",\n+        \"file format\": \"qcow2\",\n+        \"disk size\": 350658560,\n+        \"virtual size\": 214748364800,\n+        \"cluster size\": 65536\n+      },\n+      \"vdb\": {\n+        \"file\": \"ses-pool/test-vol\",\n+        \"type\": \"disk\",\n+        \"file format\": \"raw\"\n+      }\n+    },\n+    \"graphics\": {\n+      \"autoport\": \"yes\",\n+      \"keymap\": \"None\",\n+      \"listen\": \"127.0.0.1\",\n+      \"port\": \"None\",\n+      \"type\": \"spice\"\n+    },\n+    \"nics\": {\n+      \"52:54:00:b3:0e:ea\": {\n+        \"type\": \"network\",\n+        \"mac\": \"52:54:00:b3:0e:ea\",\n+        \"source\": {\n+          \"network\": \"default\"\n+        },\n+        \"model\": \"rtl8139\",\n+        \"address\": {\n+          \"type\": \"pci\",\n+          \"domain\": \"0x0000\",\n+          \"bus\": \"0x00\",\n+          \"slot\": \"0x03\",\n+          \"function\": \"0x0\"\n+        }\n+      }\n+    },\n+    \"uuid\": \"b99a8176-4f40-498d-8e61-2f6ade654fe2\",\n+    \"loader\": {\n+      \"path\": \"None\"\n+    },\n+    \"on_crash\": \"restart\",\n+    \"on_reboot\": \"restart\",\n+    \"on_poweroff\": \"destroy\",\n+    \"maxMem\": 1048576,\n+    \"mem\": 1048576,\n+    \"state\": \"shutdown\"\n+  },\n+  \"vm02\": {\n+    \"cpu\": 12,\n+    \"cputime\": 0,\n+    \"disks\": {\n+      \"vda\": {\n+        \"file\": \"/srv/vms/sles12sp2.qcow2\",\n+        \"type\": \"disk\",\n+        \"file format\": \"qcow2\",\n+        \"disk size\": 350658560,\n+        \"virtual size\": 214748364800,\n+        \"cluster size\": 65536\n+      },\n+      \"vdb\": {\n+        \"file\": \"ses-pool/test-vol\",\n+        \"type\": \"disk\",\n+        \"file format\": \"raw\"\n+      }\n+    },\n+    \"graphics\": {\n+      \"autoport\": \"yes\",\n+      \"keymap\": \"None\",\n+      \"listen\": \"127.0.0.1\",\n+      \"port\": \"None\",\n+      \"type\": \"spice\"\n+    },\n+    \"nics\": {\n+      \"52:54:00:b3:0e:ea\": {\n+        \"type\": \"network\",\n+        \"mac\": \"52:54:00:b3:0e:ea\",\n+        \"source\": {\n+          \"network\": \"default\"\n+        },\n+        \"model\": \"rtl8139\",\n+        \"address\": {\n+          \"type\": \"pci\",\n+          \"domain\": \"0x0000\",\n+          \"bus\": \"0x00\",\n+          \"slot\": \"0x03\",\n+          \"function\": \"0x0\"\n+        }\n+      }\n+    },\n+    \"uuid\": \"98eef4f7-eb7f-4be8-859d-11658506c496\",\n+    \"loader\": {\n+      \"path\": \"None\"\n+    },\n+    \"on_crash\": \"restart\",\n+    \"on_reboot\": \"restart\",\n+    \"on_poweroff\": \"destroy\",\n+    \"maxMem\": 2097152,\n+    \"mem\": 1048576,\n+    \"state\": \"running\"\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6982f17ddfa543eca29686ebecb861e6ec4a8282"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQwMjY1OA==", "bodyText": "fixed", "url": "https://github.com/uyuni-project/uyuni/pull/2741#discussion_r529402658", "createdAt": "2020-11-24T10:15:01Z", "author": {"login": "cbosdo"}, "path": "java/code/src/com/suse/manager/virtualization/test/virt.vm_info.all.json", "diffHunk": "@@ -0,0 +1,108 @@\n+{\n+  \"vm01\": {\n+    \"cpu\": 2,\n+    \"cputime\": 0,\n+    \"disks\": {\n+      \"vda\": {\n+        \"file\": \"/srv/vms/sles12sp2.qcow2\",\n+        \"type\": \"disk\",\n+        \"file format\": \"qcow2\",\n+        \"disk size\": 350658560,\n+        \"virtual size\": 214748364800,\n+        \"cluster size\": 65536\n+      },\n+      \"vdb\": {\n+        \"file\": \"ses-pool/test-vol\",\n+        \"type\": \"disk\",\n+        \"file format\": \"raw\"\n+      }\n+    },\n+    \"graphics\": {\n+      \"autoport\": \"yes\",\n+      \"keymap\": \"None\",\n+      \"listen\": \"127.0.0.1\",\n+      \"port\": \"None\",\n+      \"type\": \"spice\"\n+    },\n+    \"nics\": {\n+      \"52:54:00:b3:0e:ea\": {\n+        \"type\": \"network\",\n+        \"mac\": \"52:54:00:b3:0e:ea\",\n+        \"source\": {\n+          \"network\": \"default\"\n+        },\n+        \"model\": \"rtl8139\",\n+        \"address\": {\n+          \"type\": \"pci\",\n+          \"domain\": \"0x0000\",\n+          \"bus\": \"0x00\",\n+          \"slot\": \"0x03\",\n+          \"function\": \"0x0\"\n+        }\n+      }\n+    },\n+    \"uuid\": \"b99a8176-4f40-498d-8e61-2f6ade654fe2\",\n+    \"loader\": {\n+      \"path\": \"None\"\n+    },\n+    \"on_crash\": \"restart\",\n+    \"on_reboot\": \"restart\",\n+    \"on_poweroff\": \"destroy\",\n+    \"maxMem\": 1048576,\n+    \"mem\": 1048576,\n+    \"state\": \"shutdown\"\n+  },\n+  \"vm02\": {\n+    \"cpu\": 12,\n+    \"cputime\": 0,\n+    \"disks\": {\n+      \"vda\": {\n+        \"file\": \"/srv/vms/sles12sp2.qcow2\",\n+        \"type\": \"disk\",\n+        \"file format\": \"qcow2\",\n+        \"disk size\": 350658560,\n+        \"virtual size\": 214748364800,\n+        \"cluster size\": 65536\n+      },\n+      \"vdb\": {\n+        \"file\": \"ses-pool/test-vol\",\n+        \"type\": \"disk\",\n+        \"file format\": \"raw\"\n+      }\n+    },\n+    \"graphics\": {\n+      \"autoport\": \"yes\",\n+      \"keymap\": \"None\",\n+      \"listen\": \"127.0.0.1\",\n+      \"port\": \"None\",\n+      \"type\": \"spice\"\n+    },\n+    \"nics\": {\n+      \"52:54:00:b3:0e:ea\": {\n+        \"type\": \"network\",\n+        \"mac\": \"52:54:00:b3:0e:ea\",\n+        \"source\": {\n+          \"network\": \"default\"\n+        },\n+        \"model\": \"rtl8139\",\n+        \"address\": {\n+          \"type\": \"pci\",\n+          \"domain\": \"0x0000\",\n+          \"bus\": \"0x00\",\n+          \"slot\": \"0x03\",\n+          \"function\": \"0x0\"\n+        }\n+      }\n+    },\n+    \"uuid\": \"98eef4f7-eb7f-4be8-859d-11658506c496\",\n+    \"loader\": {\n+      \"path\": \"None\"\n+    },\n+    \"on_crash\": \"restart\",\n+    \"on_reboot\": \"restart\",\n+    \"on_poweroff\": \"destroy\",\n+    \"maxMem\": 2097152,\n+    \"mem\": 1048576,\n+    \"state\": \"running\"\n+  }\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI5ODQxOQ=="}, "originalCommit": {"oid": "6982f17ddfa543eca29686ebecb861e6ec4a8282"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxOTU1ODgxOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/controllers/virtualization/VirtualGuestsController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwODo0Njo0MlrOH4x1bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoxNDo1M1rOH44Kdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI5ODc5Nw==", "bodyText": "you can keep it all in one line, we can go up to 140 characters IIRC \ud83d\ude09", "url": "https://github.com/uyuni-project/uyuni/pull/2741#discussion_r529298797", "createdAt": "2020-11-24T08:46:42Z", "author": {"login": "ncounter"}, "path": "java/code/src/com/suse/manager/webui/controllers/virtualization/VirtualGuestsController.java", "diffHunk": "@@ -132,6 +134,8 @@ public void initRoutes(JadeTemplateEngine jade) {\n                 withUserPreferences(withCsrfToken(withDocsLocale(withUser(this::console)))), jade);\n         get(\"/manager/api/systems/details/virtualization/guests/:sid/data\",\n                 withUser(this::data));\n+        post(\"/manager/api/systems/details/virtualization/guests/:sid/refresh\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6982f17ddfa543eca29686ebecb861e6ec4a8282"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQwMjQ4Nw==", "bodyText": "IIRC it's 120, but that line fits both: fixed", "url": "https://github.com/uyuni-project/uyuni/pull/2741#discussion_r529402487", "createdAt": "2020-11-24T10:14:53Z", "author": {"login": "cbosdo"}, "path": "java/code/src/com/suse/manager/webui/controllers/virtualization/VirtualGuestsController.java", "diffHunk": "@@ -132,6 +134,8 @@ public void initRoutes(JadeTemplateEngine jade) {\n                 withUserPreferences(withCsrfToken(withDocsLocale(withUser(this::console)))), jade);\n         get(\"/manager/api/systems/details/virtualization/guests/:sid/data\",\n                 withUser(this::data));\n+        post(\"/manager/api/systems/details/virtualization/guests/:sid/refresh\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI5ODc5Nw=="}, "originalCommit": {"oid": "6982f17ddfa543eca29686ebecb861e6ec4a8282"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxOTU2OTU4OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/controllers/virtualization/VirtualGuestsController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwODo0OTozMlrOH4x8Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoxNToyNlrOH44NDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMwMDU1NA==", "bodyText": "Why do you need to return a String instead of the Boolean value of the isPresent()?", "url": "https://github.com/uyuni-project/uyuni/pull/2741#discussion_r529300554", "createdAt": "2020-11-24T08:49:32Z", "author": {"login": "ncounter"}, "path": "java/code/src/com/suse/manager/webui/controllers/virtualization/VirtualGuestsController.java", "diffHunk": "@@ -423,6 +427,23 @@ public ModelAndView console(Request request, Response response, User user) {\n         return renderPage(request, response, user, \"console\", () -> data);\n     }\n \n+    /**\n+     * Refresh the database with the actual list of virtual machines from the host\n+     *\n+     * @param request the request\n+     * @param response the response\n+     * @param user the user\n+     * @return JSON result of the API call\n+     */\n+    public String refresh(Request request, Response response, User user) {\n+        Server host = getServer(request, user);\n+        VirtualInstanceManager.updateHostVirtualInstance(host,\n+                VirtualInstanceFactory.getInstance().getFullyVirtType());\n+        Optional<List<VmInfo>> plan = virtManager.getGuestsUpdatePlan(host.getMinionId());\n+        plan.ifPresent(updatePlan -> VirtualInstanceManager.updateGuestsVirtualInstances(host, updatePlan));\n+        return plan.isPresent() ? \"Done\" : \"Failed\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6982f17ddfa543eca29686ebecb861e6ec4a8282"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQwMzE0OA==", "bodyText": "I wasn't aware we could return something else than a String in routes. Fixed", "url": "https://github.com/uyuni-project/uyuni/pull/2741#discussion_r529403148", "createdAt": "2020-11-24T10:15:26Z", "author": {"login": "cbosdo"}, "path": "java/code/src/com/suse/manager/webui/controllers/virtualization/VirtualGuestsController.java", "diffHunk": "@@ -423,6 +427,23 @@ public ModelAndView console(Request request, Response response, User user) {\n         return renderPage(request, response, user, \"console\", () -> data);\n     }\n \n+    /**\n+     * Refresh the database with the actual list of virtual machines from the host\n+     *\n+     * @param request the request\n+     * @param response the response\n+     * @param user the user\n+     * @return JSON result of the API call\n+     */\n+    public String refresh(Request request, Response response, User user) {\n+        Server host = getServer(request, user);\n+        VirtualInstanceManager.updateHostVirtualInstance(host,\n+                VirtualInstanceFactory.getInstance().getFullyVirtType());\n+        Optional<List<VmInfo>> plan = virtManager.getGuestsUpdatePlan(host.getMinionId());\n+        plan.ifPresent(updatePlan -> VirtualInstanceManager.updateGuestsVirtualInstances(host, updatePlan));\n+        return plan.isPresent() ? \"Done\" : \"Failed\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMwMDU1NA=="}, "originalCommit": {"oid": "6982f17ddfa543eca29686ebecb861e6ec4a8282"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3958, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}