{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MjQ0OTI1", "number": 2801, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODowNjoyMlrOE1x9gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODowNjoyMlrOE1x9gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODI4NTQ1OnYy", "diffSide": "RIGHT", "path": "testsuite/features/step_definitions/common_steps.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODowNjoyMlrOHuP-5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODowNjoyMlrOHuP-5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1ODQwNg==", "bodyText": "Tomorrow... I might refactor that part, creating another method for it.", "url": "https://github.com/uyuni-project/uyuni/pull/2801#discussion_r518258406", "createdAt": "2020-11-05T18:06:22Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -1157,15 +1157,37 @@ def server_secret\n   find(:xpath, item_xpath)\n end\n \n-When(/^I create the MU repository for (salt|traditional) \"([^\"]*)\" if necessary$/) do |client_type, client|\n-  client.sub! 'ssh_minion', 'minion' # Both minion and ssh_minion uses the same repositories\n-  repo_name = url = $mu_repositories[client][client_type].strip\n-  repo_name.delete_prefix! \"http://download.suse.de/ibs/SUSE:/Maintenance:/\"\n-  repo_name.delete_prefix! \"http://minima-mirror-qam.mgr.prv.suse.net/ibs/SUSE:/Maintenance:/\"\n-  if repository_exist? repo_name\n-    puts \"The MU repository #{repo_name} was already created, we will reuse it.\"\n-  else\n-    steps %(\n+#TODO: Deprecated. Remove once the refactor works successfully\n+#When(/^I create the MU repository for (salt|traditional) \"([^\"]*)\" if necessary$/) do |client_type, client|\n+#  client.sub! 'ssh_minion', 'minion' # Both minion and ssh_minion uses the same repositories\n+#  repo_name = url = $mu_repositories[client][client_type].strip\n+#  repo_name.delete_prefix! \"http://download.suse.de/ibs/SUSE:/Maintenance:/\"\n+#  repo_name.delete_prefix! \"http://minima-mirror-qam.mgr.prv.suse.net/ibs/SUSE:/Maintenance:/\"\n+#  if repository_exist? repo_name\n+#    puts \"The MU repository #{repo_name} was already created, we will reuse it.\"\n+#  else\n+#    steps %(\n+#      When I follow \"Create Repository\"\n+#      And I enter \"#{repo_name}\" as \"label\"\n+#      And I enter \"#{url}\" as \"url\"\n+#      And I select \"#{client.include?('ubuntu') ? 'deb' : 'yum'}\" from \"contenttype\"\n+#      And I click on \"Create Repository\"\n+#      Then I should see a \"Repository created successfully\" text\n+#      And I should see \"metadataSigned\" as checked\n+#    )\n+#  end\n+#end\n+\n+When(/^I create the MU repositories for \"([^\"]*)\"$/) do |client|\n+  repo_list = $mu_repositories[client]\n+  repo_list.each do |_repo_name, repo_url|\n+    repo_name = url = repo_url.strip\n+    repo_name.delete_prefix! \"http://download.suse.de/ibs/SUSE:/Maintenance:/\"\n+    repo_name.delete_prefix! \"http://minima-mirror-qam.mgr.prv.suse.net/ibs/SUSE:/Maintenance:/\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8e7e55c971e214f35aade871d959b645bd7836"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4019, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}