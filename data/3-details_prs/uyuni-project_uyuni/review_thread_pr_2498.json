{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5OTk4NDI5", "number": 2498, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToyNDo0NVrOEhoJHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToyNDo0NVrOEhoJHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjk2MTU3OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/matcher/MatcherRunner.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToyNDo0NVrOHPCwYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToyNDo0NVrOHPCwYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzNTg0Mg==", "bodyText": "Nitpick: could we maybe use try-with-resources here?", "url": "https://github.com/uyuni-project/uyuni/pull/2498#discussion_r485535842", "createdAt": "2020-09-09T11:24:45Z", "author": {"login": "moio"}, "path": "java/code/src/com/suse/manager/matcher/MatcherRunner.java", "diffHunk": "@@ -76,22 +80,28 @@ public void run(String csvDelimiter) {\n         });\n \n         Runtime r = Runtime.getRuntime();\n+        ExecutorService errorReaderService = null;\n+        ExecutorService inputReaderService = null;\n         try {\n-            Process p = r.exec(args.toArray(new String[0]));\n-            PrintWriter stdin = new PrintWriter(p.getOutputStream());\n             boolean isISSMaster = IssFactory.getCurrentMaster() == null;\n             boolean isSelfMonitoringEnabled = MonitoringService.isMonitoringEnabled();\n-            String arch = System.getProperty(\"os.arch\");\n             PinnedSubscriptionFactory.getInstance().cleanStalePins();\n+            String arch = System.getProperty(\"os.arch\");\n             String s = new MatcherJsonIO().generateMatcherInput(isISSMaster, arch, isSelfMonitoringEnabled);\n+\n+            Process p = r.exec(args.toArray(new String[0]));\n+            PrintWriter stdin = new PrintWriter(p.getOutputStream());\n             stdin.println(s);\n             stdin.flush();\n             stdin.close();\n \n+            // we need to exhaust the process output not to get stuck\n+            errorReaderService = exhaustOutputOnBackground(p.getErrorStream());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3963bb5ca16e5b97e0992954e44dc1dca0a3b509"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4107, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}