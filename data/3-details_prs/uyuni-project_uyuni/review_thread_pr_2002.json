{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTczODgz", "number": 2002, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowNzo0OVrODnxwvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjoyOToxMVrODoaJnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDM2MzQ4OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/state/recurring-states.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowNzo0OVrOF1-B0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowNzo0OVrOF1-B0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzNTEyMg==", "bodyText": "Please remove", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r392135122", "createdAt": "2020-03-13T10:07:49Z", "author": {"login": "parlt91"}, "path": "web/html/src/manager/state/recurring-states.js", "diffHunk": "@@ -112,50 +112,43 @@ class RecurringStates extends React.Component {\n             \"/rhn/manager/api/recurringactions/save\",\n             JSON.stringify(schedule),\n             \"application/json\"\n-        ).promise.then((data) => {\n-            let newMsgs = [];\n-            const decorator = data.success ? MessagesUtils.info : MessagesUtils.error;\n-            if (data.messages === undefined || data.messages.length === 0) {\n-                // no explicit messages from the server -> let's display a generic one\n-                const defaultMsg = data.success\n-                      ? <span>{t(\"Schedule successfully\" + (this.state.action === \"create\" ? \" created.\" : \" updated.\"))}</span>\n-                      : <span>{t(\"Error on saving schedule.\")}</span>;\n-                newMsgs = decorator(defaultMsg);\n-            }\n-            else {\n-                // messages from the recurringactions are already localized\n-                newMsgs = decorator.apply(null, data.messages);\n-            }\n-\n-            const msgs = this.state.messages.concat(newMsgs);\n+        ).promise.then((_) => {\n+            const successMsg = <span>{t(\"Schedule successfully\" + (this.state.action === \"create\" ? \" created.\" : \" updated.\"))}</span>\n+            const msgs = this.state.messages.concat(MessagesUtils.info(successMsg));\n \n             while (msgs.length > messagesCounterLimit) {\n                 msgs.shift();\n             }\n \n-            this.onMessageChanged(msgs);\n+            this.onMessageChanged(msgs); // todo remove - unneeded\n             this.setState({\n                 messages: msgs\n             });\n \n-            if (data.success) {\n-                this.handleForwardAction();\n-            } else {\n-                this.handleResponseError();\n-            }\n-\n+            this.handleForwardAction();\n         }).catch(this.handleResponseError);\n     }\n+//\n \n     deleteSchedule(item) {\n         return Network.del(\"/rhn/manager/api/recurringactions/\" + item.recurringActionId + \"/delete\")\n-            .promise.then(data => {\n-                this.handleForwardAction();\n+            .promise.then((_) => {\n                 this.setState({\n                     messages: MessagesUtils.info(\"Schedule \\'\" + item.scheduleName + \"\\' has been deleted.\")\n                 });\n+                this.handleForwardAction();\n             })\n-            .catch(this.handleResponseError);\n+            .catch(data => {\n+                const taskoErrorMsg = MessagesUtils.error(\n+                    t(\"Error when scheduling the action. Check if Taskomatic is running\"));\n+                let messages = (data && data.status === 503)\n+                    ? taskoErrorMsg\n+                    : Network.responseErrorMessage(jqXHR);\n+                console.log(messages);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1063544e0b055ec3ae94578a49051eebf6d20c1"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDM2NzEzOnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/state/recurring-states.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowOTowMFrOF1-EJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDozMDozNVrOF1-t6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzNTcxOQ==", "bodyText": "We should put ... when deleting the ... here instead", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r392135719", "createdAt": "2020-03-13T10:09:00Z", "author": {"login": "parlt91"}, "path": "web/html/src/manager/state/recurring-states.js", "diffHunk": "@@ -112,50 +112,43 @@ class RecurringStates extends React.Component {\n             \"/rhn/manager/api/recurringactions/save\",\n             JSON.stringify(schedule),\n             \"application/json\"\n-        ).promise.then((data) => {\n-            let newMsgs = [];\n-            const decorator = data.success ? MessagesUtils.info : MessagesUtils.error;\n-            if (data.messages === undefined || data.messages.length === 0) {\n-                // no explicit messages from the server -> let's display a generic one\n-                const defaultMsg = data.success\n-                      ? <span>{t(\"Schedule successfully\" + (this.state.action === \"create\" ? \" created.\" : \" updated.\"))}</span>\n-                      : <span>{t(\"Error on saving schedule.\")}</span>;\n-                newMsgs = decorator(defaultMsg);\n-            }\n-            else {\n-                // messages from the recurringactions are already localized\n-                newMsgs = decorator.apply(null, data.messages);\n-            }\n-\n-            const msgs = this.state.messages.concat(newMsgs);\n+        ).promise.then((_) => {\n+            const successMsg = <span>{t(\"Schedule successfully\" + (this.state.action === \"create\" ? \" created.\" : \" updated.\"))}</span>\n+            const msgs = this.state.messages.concat(MessagesUtils.info(successMsg));\n \n             while (msgs.length > messagesCounterLimit) {\n                 msgs.shift();\n             }\n \n-            this.onMessageChanged(msgs);\n+            this.onMessageChanged(msgs); // todo remove - unneeded\n             this.setState({\n                 messages: msgs\n             });\n \n-            if (data.success) {\n-                this.handleForwardAction();\n-            } else {\n-                this.handleResponseError();\n-            }\n-\n+            this.handleForwardAction();\n         }).catch(this.handleResponseError);\n     }\n+//\n \n     deleteSchedule(item) {\n         return Network.del(\"/rhn/manager/api/recurringactions/\" + item.recurringActionId + \"/delete\")\n-            .promise.then(data => {\n-                this.handleForwardAction();\n+            .promise.then((_) => {\n                 this.setState({\n                     messages: MessagesUtils.info(\"Schedule \\'\" + item.scheduleName + \"\\' has been deleted.\")\n                 });\n+                this.handleForwardAction();\n             })\n-            .catch(this.handleResponseError);\n+            .catch(data => {\n+                const taskoErrorMsg = MessagesUtils.error(\n+                    t(\"Error when scheduling the action. Check if Taskomatic is running\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1063544e0b055ec3ae94578a49051eebf6d20c1"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0NjQxMQ==", "bodyText": "Good point. Another option would be ... unscheduling ... . Let me think about it and fix it!", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r392146411", "createdAt": "2020-03-13T10:30:35Z", "author": {"login": "hustodemon"}, "path": "web/html/src/manager/state/recurring-states.js", "diffHunk": "@@ -112,50 +112,43 @@ class RecurringStates extends React.Component {\n             \"/rhn/manager/api/recurringactions/save\",\n             JSON.stringify(schedule),\n             \"application/json\"\n-        ).promise.then((data) => {\n-            let newMsgs = [];\n-            const decorator = data.success ? MessagesUtils.info : MessagesUtils.error;\n-            if (data.messages === undefined || data.messages.length === 0) {\n-                // no explicit messages from the server -> let's display a generic one\n-                const defaultMsg = data.success\n-                      ? <span>{t(\"Schedule successfully\" + (this.state.action === \"create\" ? \" created.\" : \" updated.\"))}</span>\n-                      : <span>{t(\"Error on saving schedule.\")}</span>;\n-                newMsgs = decorator(defaultMsg);\n-            }\n-            else {\n-                // messages from the recurringactions are already localized\n-                newMsgs = decorator.apply(null, data.messages);\n-            }\n-\n-            const msgs = this.state.messages.concat(newMsgs);\n+        ).promise.then((_) => {\n+            const successMsg = <span>{t(\"Schedule successfully\" + (this.state.action === \"create\" ? \" created.\" : \" updated.\"))}</span>\n+            const msgs = this.state.messages.concat(MessagesUtils.info(successMsg));\n \n             while (msgs.length > messagesCounterLimit) {\n                 msgs.shift();\n             }\n \n-            this.onMessageChanged(msgs);\n+            this.onMessageChanged(msgs); // todo remove - unneeded\n             this.setState({\n                 messages: msgs\n             });\n \n-            if (data.success) {\n-                this.handleForwardAction();\n-            } else {\n-                this.handleResponseError();\n-            }\n-\n+            this.handleForwardAction();\n         }).catch(this.handleResponseError);\n     }\n+//\n \n     deleteSchedule(item) {\n         return Network.del(\"/rhn/manager/api/recurringactions/\" + item.recurringActionId + \"/delete\")\n-            .promise.then(data => {\n-                this.handleForwardAction();\n+            .promise.then((_) => {\n                 this.setState({\n                     messages: MessagesUtils.info(\"Schedule \\'\" + item.scheduleName + \"\\' has been deleted.\")\n                 });\n+                this.handleForwardAction();\n             })\n-            .catch(this.handleResponseError);\n+            .catch(data => {\n+                const taskoErrorMsg = MessagesUtils.error(\n+                    t(\"Error when scheduling the action. Check if Taskomatic is running\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzNTcxOQ=="}, "originalCommit": {"oid": "b1063544e0b055ec3ae94578a49051eebf6d20c1"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDM4MDQ2OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/domain/recurringactions/RecurringActionFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDoxMzoyNlrOF1-MiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjoyODowMVrOF2B0yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzNzg2NA==", "bodyText": "This commit looks very good from the technical POV (apart of the variable naming: when we have a List of Org, the variable should be called orgs), but I think we shouldn't display everything for the SAT admin:\n\nin the list of all systems, SAT admin can't see systems of other organizations (only his/her own)\nsame goes for the system groups (they can only see groups in their org)\n\nI think displaying recurring actions for servers/groups that the user can't see would be confusing and therefore I suggest reverting this commit.", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r392137864", "createdAt": "2020-03-13T10:13:26Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/domain/recurringactions/RecurringActionFactory.java", "diffHunk": "@@ -86,24 +88,31 @@\n      * @return the list of {@link RecurringAction}s\n      */\n     public static List<? extends RecurringAction> listAllRecurringActions(User user) {\n-        Org org = user.getOrg();\n+        List<Org> org;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8881b629f0703fd80763f9dfa05bdcd2956b857d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE5NzMyMg==", "bodyText": "Adapted to just show other Organizations schedules.", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r392197322", "createdAt": "2020-03-13T12:28:01Z", "author": {"login": "parlt91"}, "path": "java/code/src/com/redhat/rhn/domain/recurringactions/RecurringActionFactory.java", "diffHunk": "@@ -86,24 +88,31 @@\n      * @return the list of {@link RecurringAction}s\n      */\n     public static List<? extends RecurringAction> listAllRecurringActions(User user) {\n-        Org org = user.getOrg();\n+        List<Org> org;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzNzg2NA=="}, "originalCommit": {"oid": "8881b629f0703fd80763f9dfa05bdcd2956b857d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDQwMDkzOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/redhat/rhn/domain/recurringactions/OrgRecurringAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDoyMDowNlrOF1-ZLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDoyMDowNlrOF1-ZLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0MTEwMw==", "bodyText": "I just want to add: despite my comment in the previous commit, this commit makes sense as SAT_ADMIN really has rights to access/edit the action. This fix is very important for the XMLRPC API, btw.", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r392141103", "createdAt": "2020-03-13T10:20:06Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/redhat/rhn/domain/recurringactions/OrgRecurringAction.java", "diffHunk": "@@ -80,7 +80,8 @@ public OrgRecurringAction(boolean testMode, boolean active, Org org, User creato\n      */\n     @Override\n     public boolean canAccess(User user) {\n-        return user.hasRole(RoleFactory.ORG_ADMIN) && user.getOrg().equals(getOrg());\n+        return (user.hasRole(RoleFactory.ORG_ADMIN) && user.getOrg().equals(getOrg())) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cef72f2d1f376784028d4de949cb24ff86fd136"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDk2OTk1OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/utils/gson/RecurringStateScheduleJson.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzozODozNFrOF2D9FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzozODozNFrOF2D9FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIzMjIxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**  Name of the Organization **/\n          \n          \n            \n                /**  Name of the Organization - only applicable for OrgRecurringAction **/", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r392232213", "createdAt": "2020-03-13T13:38:34Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/utils/gson/RecurringStateScheduleJson.java", "diffHunk": "@@ -56,6 +56,9 @@\n     /**  Login of the schedule creator **/\n     private String creatorLogin;\n \n+    /**  Name of the Organization **/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa384b83f50cf8222ba3d85a9916af36b9e68fda"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjg1NzU2OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/state/recurring-states-list.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTo1OToxN1rOF263RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzoyMjozNFrOF2-aUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMTg0NQ==", "bodyText": "Please remove commented code", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393131845", "createdAt": "2020-03-16T15:59:17Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4OTk3MA==", "bodyText": "Already removed in a later commit ;-)", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393189970", "createdAt": "2020-03-16T17:22:34Z", "author": {"login": "parlt91"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMTg0NQ=="}, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjg4OTk3OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/state/recurring-states-list.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowNjo1NlrOF27Lxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOTo1MToyMlrOF3U4ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNzA5NQ==", "bodyText": "Maybe out of scope but, what was the reason for having this column optional? Can't we keep the same number of column, and maybe empty or grayed out content?", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393137095", "createdAt": "2020-03-16T16:06:56Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"\n+                                initialItemsPerPage={this.props.disableCreate ? userPrefPageSize : 0}\n+                                emptyText={t(\"No schedules created.\" + (this.props.disableCreate ? \"\" : \" Use Create to add a schedule.\"))}\n+                            >\n+                                <Column\n+                                    columnKey=\"active\"\n+                                    header={t('Active')}\n+                                    cell={(row, criteria) => {return (\n+                                        <Toggler\n+                                            value={row.active}\n+                                            className=\"btn\"\n+                                            handler={() => this.props.onToggleActive(row)}\n+                                        />\n+                                    );\n+                                    }}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"scheduleName\"\n+                                    header={t('Schedule Name')}\n+                                    cell={(row, criteria) => row.scheduleName}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"frequency\"\n+                                    header={t('Frequency')}\n+                                    cell={(row, criteria) => row.cron}\n+                                />\n+                                { this.props.disableCreate ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4OTI0Mg==", "bodyText": "I just thought it would be redundant information in those cases, since you already know that e.g. the actions you look at are minion actions if you have selected a system.\nBut I am not opposed to displaying that unconditionally, if you think it's the better aproach.", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393189242", "createdAt": "2020-03-16T17:21:16Z", "author": {"login": "parlt91"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"\n+                                initialItemsPerPage={this.props.disableCreate ? userPrefPageSize : 0}\n+                                emptyText={t(\"No schedules created.\" + (this.props.disableCreate ? \"\" : \" Use Create to add a schedule.\"))}\n+                            >\n+                                <Column\n+                                    columnKey=\"active\"\n+                                    header={t('Active')}\n+                                    cell={(row, criteria) => {return (\n+                                        <Toggler\n+                                            value={row.active}\n+                                            className=\"btn\"\n+                                            handler={() => this.props.onToggleActive(row)}\n+                                        />\n+                                    );\n+                                    }}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"scheduleName\"\n+                                    header={t('Schedule Name')}\n+                                    cell={(row, criteria) => row.scheduleName}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"frequency\"\n+                                    header={t('Frequency')}\n+                                    cell={(row, criteria) => row.cron}\n+                                />\n+                                { this.props.disableCreate ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNzA5NQ=="}, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU1ODE1NA==", "bodyText": "Yeah, I see your POV and it makes sense generally speaking, but in the end it does not take a lot of space and it does not hijack the focus of it so, I'd say better to keep the consistency (which we lack a lot of cross the entire product) and keep the column always as they are. \ud83d\ude09", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393558154", "createdAt": "2020-03-17T09:51:22Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"\n+                                initialItemsPerPage={this.props.disableCreate ? userPrefPageSize : 0}\n+                                emptyText={t(\"No schedules created.\" + (this.props.disableCreate ? \"\" : \" Use Create to add a schedule.\"))}\n+                            >\n+                                <Column\n+                                    columnKey=\"active\"\n+                                    header={t('Active')}\n+                                    cell={(row, criteria) => {return (\n+                                        <Toggler\n+                                            value={row.active}\n+                                            className=\"btn\"\n+                                            handler={() => this.props.onToggleActive(row)}\n+                                        />\n+                                    );\n+                                    }}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"scheduleName\"\n+                                    header={t('Schedule Name')}\n+                                    cell={(row, criteria) => row.scheduleName}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"frequency\"\n+                                    header={t('Frequency')}\n+                                    cell={(row, criteria) => row.cron}\n+                                />\n+                                { this.props.disableCreate ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNzA5NQ=="}, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 145}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjk0MDgxOnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/state/recurring-states-list.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjoxOTowM1rOF27sfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjoxOTowM1rOF27sfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0NTQ2OA==", "bodyText": "I don't think we need a span wrapping here as it end up being used here", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393145468", "createdAt": "2020-03-16T16:19:03Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"\n+                                initialItemsPerPage={this.props.disableCreate ? userPrefPageSize : 0}\n+                                emptyText={t(\"No schedules created.\" + (this.props.disableCreate ? \"\" : \" Use Create to add a schedule.\"))}\n+                            >\n+                                <Column\n+                                    columnKey=\"active\"\n+                                    header={t('Active')}\n+                                    cell={(row, criteria) => {return (\n+                                        <Toggler\n+                                            value={row.active}\n+                                            className=\"btn\"\n+                                            handler={() => this.props.onToggleActive(row)}\n+                                        />\n+                                    );\n+                                    }}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"scheduleName\"\n+                                    header={t('Schedule Name')}\n+                                    cell={(row, criteria) => row.scheduleName}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"frequency\"\n+                                    header={t('Frequency')}\n+                                    cell={(row, criteria) => row.cron}\n+                                />\n+                                { this.props.disableCreate ?\n+                                    <Column\n+                                        columnClass=\"text-center\"\n+                                        headerClass=\"text-center\"\n+                                        columnKey=\"targetType\"\n+                                        header={t('Target Type')}\n+                                        cell={(row, criteria) => targetTypeToString(row.targetType)}\n+                                    />\n+                                    : null }\n+                                <Column\n+                                    columnClass=\"text-right\"\n+                                    headerClass=\"text-right\"\n+                                    header={t('Actions')}\n+                                    cell={(row, criteria) => {\n+                                        return (\n+                                            <div className=\"btn-group\">\n+                                                <Button\n+                                                    className=\"btn-default btn-sm\"\n+                                                    title={t(\"Details\")}\n+                                                    icon=\"fa-list\"\n+                                                    handler={() => {this.props.onSelect(row)}}\n+                                                />\n+                                                <Button\n+                                                    className=\"btn-default btn-sm\"\n+                                                    title={t(\"Edit\")}\n+                                                    icon=\"fa-edit\"\n+                                                    handler={() => {this.props.onEdit(row)}}\n+                                                />\n+                                                <ModalButton\n+                                                    className=\"btn-default btn-sm\"\n+                                                    title={t(\"Delete\")}\n+                                                    icon=\"fa-trash\"\n+                                                    target=\"delete-modal\"\n+                                                    item={row}\n+                                                    onClick={i => this.selectToDelete(i)}\n+                                                />\n+                                            </div>\n+                                        );\n+                                    }}\n+                                />\n+                            </Table>\n+                            <DeleteDialog id=\"delete-modal\"\n+                                          title={t(\"Delete Recurring State Schedule\")}\n+                                          content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjk1OTg5OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/state/recurring-states-list.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjoyMzo0OFrOF274mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjoyMzo0OFrOF274mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0ODU2OA==", "bodyText": "IIUC this is in the aim of cleaning up the state from staging the current item next to be deleted: I like it \ud83d\udc4d", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393148568", "createdAt": "2020-03-16T16:23:48Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"\n+                                initialItemsPerPage={this.props.disableCreate ? userPrefPageSize : 0}\n+                                emptyText={t(\"No schedules created.\" + (this.props.disableCreate ? \"\" : \" Use Create to add a schedule.\"))}\n+                            >\n+                                <Column\n+                                    columnKey=\"active\"\n+                                    header={t('Active')}\n+                                    cell={(row, criteria) => {return (\n+                                        <Toggler\n+                                            value={row.active}\n+                                            className=\"btn\"\n+                                            handler={() => this.props.onToggleActive(row)}\n+                                        />\n+                                    );\n+                                    }}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"scheduleName\"\n+                                    header={t('Schedule Name')}\n+                                    cell={(row, criteria) => row.scheduleName}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"frequency\"\n+                                    header={t('Frequency')}\n+                                    cell={(row, criteria) => row.cron}\n+                                />\n+                                { this.props.disableCreate ?\n+                                    <Column\n+                                        columnClass=\"text-center\"\n+                                        headerClass=\"text-center\"\n+                                        columnKey=\"targetType\"\n+                                        header={t('Target Type')}\n+                                        cell={(row, criteria) => targetTypeToString(row.targetType)}\n+                                    />\n+                                    : null }\n+                                <Column\n+                                    columnClass=\"text-right\"\n+                                    headerClass=\"text-right\"\n+                                    header={t('Actions')}\n+                                    cell={(row, criteria) => {\n+                                        return (\n+                                            <div className=\"btn-group\">\n+                                                <Button\n+                                                    className=\"btn-default btn-sm\"\n+                                                    title={t(\"Details\")}\n+                                                    icon=\"fa-list\"\n+                                                    handler={() => {this.props.onSelect(row)}}\n+                                                />\n+                                                <Button\n+                                                    className=\"btn-default btn-sm\"\n+                                                    title={t(\"Edit\")}\n+                                                    icon=\"fa-edit\"\n+                                                    handler={() => {this.props.onEdit(row)}}\n+                                                />\n+                                                <ModalButton\n+                                                    className=\"btn-default btn-sm\"\n+                                                    title={t(\"Delete\")}\n+                                                    icon=\"fa-trash\"\n+                                                    target=\"delete-modal\"\n+                                                    item={row}\n+                                                    onClick={i => this.selectToDelete(i)}\n+                                                />\n+                                            </div>\n+                                        );\n+                                    }}\n+                                />\n+                            </Table>\n+                            <DeleteDialog id=\"delete-modal\"\n+                                          title={t(\"Delete Recurring State Schedule\")}\n+                                          content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n+                                          onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n+                                          onClosePopUp={() => this.selectToDelete(null)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjk3NDI1OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/state/recurring-states-list.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjoyNzoyM1rOF28B9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1NzoxMVrOF2_qmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1MDk2Ng==", "bodyText": "I think we don't need the { return ( wrapping here, isn't it?", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393150966", "createdAt": "2020-03-16T16:27:23Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"\n+                                initialItemsPerPage={this.props.disableCreate ? userPrefPageSize : 0}\n+                                emptyText={t(\"No schedules created.\" + (this.props.disableCreate ? \"\" : \" Use Create to add a schedule.\"))}\n+                            >\n+                                <Column\n+                                    columnKey=\"active\"\n+                                    header={t('Active')}\n+                                    cell={(row, criteria) => {return (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxMDUyMA==", "bodyText": "You are right, we don't. There is another occurrence down below \ud83d\udc4d", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393210520", "createdAt": "2020-03-16T17:57:11Z", "author": {"login": "parlt91"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"\n+                                initialItemsPerPage={this.props.disableCreate ? userPrefPageSize : 0}\n+                                emptyText={t(\"No schedules created.\" + (this.props.disableCreate ? \"\" : \" Use Create to add a schedule.\"))}\n+                            >\n+                                <Column\n+                                    columnKey=\"active\"\n+                                    header={t('Active')}\n+                                    cell={(row, criteria) => {return (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1MDk2Ng=="}, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjk4MDc5OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/state/recurring-states-list.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjoyOToxMVrOF28Gdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzoyMTo0OVrOF2-Ypw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1MjExOQ==", "bodyText": "This comment is valid for all the Columns here: I think we can omit the criteria parameter as it is never used, am I missing something?", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393152119", "createdAt": "2020-03-16T16:29:11Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"\n+                                initialItemsPerPage={this.props.disableCreate ? userPrefPageSize : 0}\n+                                emptyText={t(\"No schedules created.\" + (this.props.disableCreate ? \"\" : \" Use Create to add a schedule.\"))}\n+                            >\n+                                <Column\n+                                    columnKey=\"active\"\n+                                    header={t('Active')}\n+                                    cell={(row, criteria) => {return (\n+                                        <Toggler\n+                                            value={row.active}\n+                                            className=\"btn\"\n+                                            handler={() => this.props.onToggleActive(row)}\n+                                        />\n+                                    );\n+                                    }}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"scheduleName\"\n+                                    header={t('Schedule Name')}\n+                                    cell={(row, criteria) => row.scheduleName}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4OTU0Mw==", "bodyText": "No you are not, I will just remove them", "url": "https://github.com/uyuni-project/uyuni/pull/2002#discussion_r393189543", "createdAt": "2020-03-16T17:21:49Z", "author": {"login": "parlt91"}, "path": "web/html/src/manager/state/recurring-states-list.js", "diffHunk": "@@ -116,25 +62,86 @@ class RecurringStatesList extends React.Component {\n                                 <h3>Schedules</h3>\n                             </div>\n                         </div>\n-                        <div className=\"panel-body\">\n-                            <table className=\"table table-striped\">\n-                                <thead>\n-                                <tr>\n-                                    <th>{t(\"Active\")}</th>\n-                                    <th className=\"text-center\">{t(\"Schedule Name\")}</th>\n-                                    <th className=\"text-center\">{t(\"Frequency\")}</th>\n-                                    {targetType}\n-                                    <th className=\"text-right\">{t(\"Actions\")}</th>\n-                                </tr>\n-                                </thead>\n-                                {this.tableBody()}\n-                            </table>\n-                            <DeleteDialog\n-                                id=\"delete-modal\"\n-                                title={t(\"Delete Recurring State Schedule\")}\n-                                content={<span>{t(\"Are you sure you want to delete the selected item?\")}</span>}\n-                                onConfirm={() => this.props.onDelete(this.state.itemToDelete)}\n-                                onClosePopUp={() => this.selectToDelete(null)}\n+                        <div>\n+                            <Table\n+                                data={this.props.data}\n+                                identifier={action => action.recurringActionId}\n+                                //initialSortColumnKey=\"scheduleName\"\n+                                initialItemsPerPage={this.props.disableCreate ? userPrefPageSize : 0}\n+                                emptyText={t(\"No schedules created.\" + (this.props.disableCreate ? \"\" : \" Use Create to add a schedule.\"))}\n+                            >\n+                                <Column\n+                                    columnKey=\"active\"\n+                                    header={t('Active')}\n+                                    cell={(row, criteria) => {return (\n+                                        <Toggler\n+                                            value={row.active}\n+                                            className=\"btn\"\n+                                            handler={() => this.props.onToggleActive(row)}\n+                                        />\n+                                    );\n+                                    }}\n+                                />\n+                                <Column\n+                                    columnClass=\"text-center\"\n+                                    headerClass=\"text-center\"\n+                                    columnKey=\"scheduleName\"\n+                                    header={t('Schedule Name')}\n+                                    cell={(row, criteria) => row.scheduleName}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1MjExOQ=="}, "originalCommit": {"oid": "a99b94e63e8acd19756c7d678bf6e9a91f9d28eb"}, "originalPosition": 136}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}