{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NzUzNzg3", "number": 2004, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMzowOTo1NVrODqCXfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMzowOTo1NVrODqCXfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDA1NTY1OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/notifications/notification-messages.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMzowOTo1NVrOF5leUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzowODoxOVrOF6Ej6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkyNzEyMw==", "bodyText": "Is this link going to be always visible? Maybe, depending on the type of the message, if the description field does not deliver any additional value to the summary maybe we can hide it. I wonder if it could be the case to already define this on the backend side, leaving the description field null or String.empty and we can decode it on the frontend side. Just my 2c", "url": "https://github.com/uyuni-project/uyuni/pull/2004#discussion_r395927123", "createdAt": "2020-03-20T23:09:55Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/notifications/notification-messages.js", "diffHunk": "@@ -222,23 +218,33 @@ class NotificationMessages extends React.Component {\n     return Object.keys(message).map((id) => message[id]);\n   };\n \n-  buildDescription = (row) => {\n-    let description = null;\n-    switch(row['type']) {\n-      case 'OnboardingFailed':\n-        description = 'Error registering minion id: ' + row['data']['minionId'];\n-      break;\n-      case 'ChannelSyncFailed':\n-        description = <span>Error syncing the channel: <a href={\"/rhn/channels/ChannelDetail.do?cid=\" + row['data']['channelId']}>{row['data']['channelName']}</a></span>;\n-      break;\n-      case 'ChannelSyncFinished':\n-        description = <span>Channel <a href={\"/rhn/channels/ChannelDetail.do?cid=\" + row['data']['channelId']}>{row['data']['channelName']}</a> sync completed</span>;\n-      break;\n-      default: description = JSON.stringify(row['data']);\n-    }\n-    return description;\n+  showDescriptionPopup = (row) => {\n+    this.setState({popupItem: row});\n+    showDialog(\"notifications-popup-dialog\");\n+  }\n+\n+  buildSummary = (row) => {\n+    const popupLink = <a href=\"#\" onClick={() => this.showDescriptionPopup(row)}>{t(\"Details\")}</a>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82cfa0c565fc87f072a2e1f611665f270cbe9ee8"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxMzY2Mw==", "bodyText": "We already do that in backend. If the description is absent, frontend receives undefined value. And the logic on line 233 \"hides\" the link (this happens on all \"falsy\" values: null, undefined, empty string, ...).", "url": "https://github.com/uyuni-project/uyuni/pull/2004#discussion_r396313663", "createdAt": "2020-03-23T09:30:14Z", "author": {"login": "hustodemon"}, "path": "web/html/src/manager/notifications/notification-messages.js", "diffHunk": "@@ -222,23 +218,33 @@ class NotificationMessages extends React.Component {\n     return Object.keys(message).map((id) => message[id]);\n   };\n \n-  buildDescription = (row) => {\n-    let description = null;\n-    switch(row['type']) {\n-      case 'OnboardingFailed':\n-        description = 'Error registering minion id: ' + row['data']['minionId'];\n-      break;\n-      case 'ChannelSyncFailed':\n-        description = <span>Error syncing the channel: <a href={\"/rhn/channels/ChannelDetail.do?cid=\" + row['data']['channelId']}>{row['data']['channelName']}</a></span>;\n-      break;\n-      case 'ChannelSyncFinished':\n-        description = <span>Channel <a href={\"/rhn/channels/ChannelDetail.do?cid=\" + row['data']['channelId']}>{row['data']['channelName']}</a> sync completed</span>;\n-      break;\n-      default: description = JSON.stringify(row['data']);\n-    }\n-    return description;\n+  showDescriptionPopup = (row) => {\n+    this.setState({popupItem: row});\n+    showDialog(\"notifications-popup-dialog\");\n+  }\n+\n+  buildSummary = (row) => {\n+    const popupLink = <a href=\"#\" onClick={() => this.showDescriptionPopup(row)}>{t(\"Details\")}</a>;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkyNzEyMw=="}, "originalCommit": {"oid": "82cfa0c565fc87f072a2e1f611665f270cbe9ee8"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzNjQ1OQ==", "bodyText": "Ups, thanks for clarifying it. I probably overlooked the logic, sorry for the noise. \ud83d\udc4d", "url": "https://github.com/uyuni-project/uyuni/pull/2004#discussion_r396436459", "createdAt": "2020-03-23T13:08:19Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/notifications/notification-messages.js", "diffHunk": "@@ -222,23 +218,33 @@ class NotificationMessages extends React.Component {\n     return Object.keys(message).map((id) => message[id]);\n   };\n \n-  buildDescription = (row) => {\n-    let description = null;\n-    switch(row['type']) {\n-      case 'OnboardingFailed':\n-        description = 'Error registering minion id: ' + row['data']['minionId'];\n-      break;\n-      case 'ChannelSyncFailed':\n-        description = <span>Error syncing the channel: <a href={\"/rhn/channels/ChannelDetail.do?cid=\" + row['data']['channelId']}>{row['data']['channelName']}</a></span>;\n-      break;\n-      case 'ChannelSyncFinished':\n-        description = <span>Channel <a href={\"/rhn/channels/ChannelDetail.do?cid=\" + row['data']['channelId']}>{row['data']['channelName']}</a> sync completed</span>;\n-      break;\n-      default: description = JSON.stringify(row['data']);\n-    }\n-    return description;\n+  showDescriptionPopup = (row) => {\n+    this.setState({popupItem: row});\n+    showDialog(\"notifications-popup-dialog\");\n+  }\n+\n+  buildSummary = (row) => {\n+    const popupLink = <a href=\"#\" onClick={() => this.showDescriptionPopup(row)}>{t(\"Details\")}</a>;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkyNzEyMw=="}, "originalCommit": {"oid": "82cfa0c565fc87f072a2e1f611665f270cbe9ee8"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}