{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNTI0MjMx", "number": 3048, "title": "Server side field-level validations infrastructure (and usage on CLM)", "bodyText": "What does this PR change?\nThis PR introduces the infrastructure to implement and display server-side validation errors at the field-level.\nThis PR also makes usage of that infrastructure on Content LifeCycle Management forms, which can be used as an example (separate commits for easier review).\nInfrastructure\nA new errors field was added to the response format, to represent field-level input errors, see the following example:\n{\n   \"success\":false,\n   \"messages\":[\n      \"Global message will be shown in a popup\"\n   ],\n   \"errors\":{\n      \"filter_name\":[\n         \"Field-level error message that will be displayed next to the 'filter_name' input\"\n      ]\n   },\n   \"data\":null\n}\n\nBackend\nThose new \"field errors\" can be added via addFieldError:\nValidatorResult result = new ValidatorResult();\nresult.addFieldError(<field_name>, <message_key>);\n\nNote that the way we add \"global errors\" has not changed:\nValidatorResult result = new ValidatorResult();\nresult.addError(<message_key>);\n\nFrontend\nTo display server-side \"field errors\", just provide them to the Form component via errors property the same way we provide model:\n <Form\n    model={model}\n    errors={errors}\n    ...\n\nErrors will then be automatically displayed next to the corresponding input, just like we are now displaying the \"frontend-only\" validation errors. Note that ATM the frontend will not display more than one error per field.\nContent LifeCycle Management\nContent LifeCycle Management input validation errors will now be displayed at field-level, including the \"filter name already exists\" mentioned on issue https://github.com/SUSE/spacewalk/issues/7639.\nGUI diff\nBefore:\n\nAfter:\n\n\n DONE\n\nDocumentation\n\n\nNo documentation needed: No documentation required for users. Developers can look into PR description and \"Content LifeCycle Management\" example in the code.\n\n\n DONE\n\n\nTest coverage\n\n\nNo tests: add explanation\n\n\nNo tests: already covered\n\n\nUnit tests were added\n\n\nCucumber tests were added\n\n\n DONE\n\n\nLinks\nFixes https://github.com/SUSE/spacewalk/issues/7639\nFixes https://github.com/SUSE/spacewalk/issues/13510\n\n DONE\n\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\"\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-12-18T12:49:07Z", "url": "https://github.com/uyuni-project/uyuni/pull/3048", "merged": true, "mergeCommit": {"oid": "bb5a3fd90ac4acad569adf5bb1cc77367a7b8000"}, "closed": true, "closedAt": "2021-01-18T10:14:58Z", "author": {"login": "ricardoasmarques"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdtM4j2AFqTU2MTg0MTY5MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdw0tbagFqTU2OTk3MDAwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxODQxNjkw", "url": "https://github.com/uyuni-project/uyuni/pull/3048#pullrequestreview-561841690", "createdAt": "2021-01-05T14:39:28Z", "commit": {"oid": "1bd79ed5fce592a5b180813259261227e9813ad8"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDozOToyOFrOIOZuWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDo0MTo1MVrOIOZ0Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MjQ0Mw==", "bodyText": "Another nitpick:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (Map.Entry<String, List<ValidatorError>> entry : result.getFieldErrors().entrySet()) {\n          \n          \n            \n                        String field = entry.getKey();\n          \n          \n            \n                        if (!getFieldErrors().containsKey(field)) {\n          \n          \n            \n                            getFieldErrors().put(field, new LinkedList());\n          \n          \n            \n                        }\n          \n          \n            \n                        getFieldErrors().get(field).addAll(entry.getValue());\n          \n          \n            \n                    }\n          \n          \n            \n                    result.getFieldErrors().forEach((field, valueList) ->\n          \n          \n            \n                            fieldValidationErrors.putIfAbsent(field, new LinkedList<>()).addAll(valueList));", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r551972443", "createdAt": "2021-01-05T14:39:28Z", "author": {"login": "cbbayburt"}, "path": "java/code/src/com/redhat/rhn/common/validator/ValidatorResult.java", "diffHunk": "@@ -95,6 +130,13 @@ public void addWarning(String key, Object... args) {\n     public void append(ValidatorResult result) {\n         getErrors().addAll(result.getErrors());\n         getWarnings().addAll(result.getWarnings());\n+        for (Map.Entry<String, List<ValidatorError>> entry : result.getFieldErrors().entrySet()) {\n+            String field = entry.getKey();\n+            if (!getFieldErrors().containsKey(field)) {\n+                getFieldErrors().put(field, new LinkedList());\n+            }\n+            getFieldErrors().get(field).addAll(entry.getValue());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd79ed5fce592a5b180813259261227e9813ad8"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MjUzNw==", "bodyText": "Just a nitpick:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!fieldValidationErrors.containsKey(field)) {\n          \n          \n            \n                        fieldValidationErrors.put(field, new LinkedList());\n          \n          \n            \n                    }\n          \n          \n            \n                    fieldValidationErrors.get(field).add(error);\n          \n          \n            \n                    fieldValidationErrors.putIfAbsent(field, new LinkedList()).add(error);", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r551972537", "createdAt": "2021-01-05T14:39:36Z", "author": {"login": "cbbayburt"}, "path": "java/code/src/com/redhat/rhn/common/validator/ValidatorResult.java", "diffHunk": "@@ -50,6 +51,31 @@ public void addError(String key, Object... args) {\n         addError(new ValidatorError(key, args));\n     }\n \n+    /**\n+     * Add a ValidatorError to the list of field errors.\n+     *\n+     * @param field Field where the ValidatorError should be added.\n+     * @param error ValidatorError to be added.\n+     */\n+    public void addFieldError(String field, ValidatorError error) {\n+        if (!fieldValidationErrors.containsKey(field)) {\n+            fieldValidationErrors.put(field, new LinkedList());\n+        }\n+        fieldValidationErrors.get(field).add(error);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd79ed5fce592a5b180813259261227e9813ad8"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MzkyMg==", "bodyText": "You can also use: fieldValidationErrors.forEach((key, value) -> { ... }) here for simplicity", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r551973922", "createdAt": "2021-01-05T14:41:51Z", "author": {"login": "cbbayburt"}, "path": "java/code/src/com/redhat/rhn/common/validator/ValidatorResult.java", "diffHunk": "@@ -110,6 +152,15 @@ public String getMessage() {\n             }\n \n         }\n+        if (!fieldValidationErrors.isEmpty()) {\n+            str.append(\"FIELD_ERRORS:\\n\");\n+            for (Map.Entry<String, List<ValidatorError>> entry : fieldValidationErrors.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd79ed5fce592a5b180813259261227e9813ad8"}, "originalPosition": 93}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28a238f5d823fe76d3917757a45b8b629815fed7", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/28a238f5d823fe76d3917757a45b8b629815fed7", "committedDate": "2020-12-18T12:41:59Z", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}, "afterCommit": {"oid": "59697f90a2530ffa36831900d338a6de918dcd4f", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/59697f90a2530ffa36831900d338a6de918dcd4f", "committedDate": "2021-01-07T16:21:59Z", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59697f90a2530ffa36831900d338a6de918dcd4f", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/59697f90a2530ffa36831900d338a6de918dcd4f", "committedDate": "2021-01-07T16:21:59Z", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}, "afterCommit": {"oid": "9666f41adcb1d9b916bef9f4a6dc5125d911907d", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/9666f41adcb1d9b916bef9f4a6dc5125d911907d", "committedDate": "2021-01-07T16:28:56Z", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4MTQxMjUz", "url": "https://github.com/uyuni-project/uyuni/pull/3048#pullrequestreview-568141253", "createdAt": "2021-01-14T11:20:44Z", "commit": {"oid": "9666f41adcb1d9b916bef9f4a6dc5125d911907d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxMToyMDo0NFrOITgViw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxMTo1NjoyMlrOITheew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyMzY1OQ==", "bodyText": "IIUC getErrors().isEmpty() && getFieldErrors().isEmpty() is supposed to return the same check result of hasErrors(), then I'd reuse it instead.", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r557323659", "createdAt": "2021-01-14T11:20:44Z", "author": {"login": "ncounter"}, "path": "java/code/src/com/redhat/rhn/common/validator/ValidatorResult.java", "diffHunk": "@@ -124,13 +169,13 @@ public String getMessage() {\n      * @return true if there are no errors or warnings..\n      */\n     public boolean isEmpty() {\n-        return getWarnings().isEmpty() && getErrors().isEmpty();\n+        return getWarnings().isEmpty() && getErrors().isEmpty() && getFieldErrors().isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9666f41adcb1d9b916bef9f4a6dc5125d911907d"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyNDA3MA==", "bodyText": "Just for the sake of the logic and computation, feel free to use any of the alternatives or drop them:\na. return (getErrors().size() + getFieldErrors().size()) > 0\nb. return !getErrors().isEmpty() || !getFieldErrors().isEmpty()", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r557324070", "createdAt": "2021-01-14T11:21:31Z", "author": {"login": "ncounter"}, "path": "java/code/src/com/redhat/rhn/common/validator/ValidatorResult.java", "diffHunk": "@@ -124,13 +169,13 @@ public String getMessage() {\n      * @return true if there are no errors or warnings..\n      */\n     public boolean isEmpty() {\n-        return getWarnings().isEmpty() && getErrors().isEmpty();\n+        return getWarnings().isEmpty() && getErrors().isEmpty() && getFieldErrors().isEmpty();\n     }\n \n     /**\n      * @return true if errors exist in this result.\n      */\n     public boolean hasErrors() {\n-        return getErrors().size() > 0;\n+        return getErrors().size() > 0 || getFieldErrors().size() > 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9666f41adcb1d9b916bef9f4a6dc5125d911907d"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyOTg0MA==", "bodyText": "Could it be you are missing the Java checkstyle configuration in your IDE? IIRC, for instance, static imports should stay on top of everything, I see your PR is changing the order in different files.\nIntelliJ configuration\nEclipse configuration", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r557329840", "createdAt": "2021-01-14T11:32:32Z", "author": {"login": "ncounter"}, "path": "java/code/src/com/suse/manager/webui/controllers/contentmanagement/handlers/FilterApiController.java", "diffHunk": "@@ -30,23 +24,28 @@\n import com.redhat.rhn.domain.user.User;\n import com.redhat.rhn.manager.EntityExistsException;\n import com.redhat.rhn.manager.contentmgmt.ContentManager;\n-\n import com.suse.manager.webui.controllers.contentmanagement.request.FilterRequest;\n import com.suse.manager.webui.controllers.contentmanagement.request.ProjectFiltersUpdateRequest;\n import com.suse.manager.webui.utils.FlashScopeHelper;\n import com.suse.manager.webui.utils.gson.ResultJson;\n-\n-import com.google.gson.Gson;\n-\n import org.apache.commons.lang3.StringUtils;\n import org.apache.http.HttpStatus;\n+import spark.Request;\n+import spark.Response;\n \n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.LinkedList;\n import java.util.List;\n import java.util.Optional;\n import java.util.stream.Collectors;\n \n-import spark.Request;\n-import spark.Response;\n+import static com.suse.manager.webui.utils.SparkApplicationHelper.json;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9666f41adcb1d9b916bef9f4a6dc5125d911907d"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM0MjMzMQ==", "bodyText": "Does errors[0] mean we pick and show only the first of the validation errors for each field? It would be nicer to show all the related field validation issues at once, otherwise the user will attempt many times fixing one error at a time. Or am I missing something here?", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r557342331", "createdAt": "2021-01-14T11:56:22Z", "author": {"login": "ncounter"}, "path": "web/html/src/components/input/InputBase.js", "diffHunk": "@@ -110,10 +115,15 @@ export class InputBase extends React.Component<Props, State> {\n     return this.state.isValid;\n   }\n \n-  validate (value: string): void {\n+  validate (value: string, errors: Array<string>): void {\n     const results = [];\n     let isValid = true;\n \n+    const error = errors && errors.length > 0 ? errors[0] : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9666f41adcb1d9b916bef9f4a6dc5125d911907d"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9666f41adcb1d9b916bef9f4a6dc5125d911907d", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/9666f41adcb1d9b916bef9f4a6dc5125d911907d", "committedDate": "2021-01-07T16:28:56Z", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}, "afterCommit": {"oid": "c15397b3a6f9a0709a993fd4d4d449001bb1dd4e", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c15397b3a6f9a0709a993fd4d4d449001bb1dd4e", "committedDate": "2021-01-15T15:51:19Z", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cffb3ec2551b8c156ba29e530aa255a15b98dad", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4cffb3ec2551b8c156ba29e530aa255a15b98dad", "committedDate": "2021-01-15T16:58:03Z", "message": "Support server side field-level validations\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bd722a727625df395c6800eaa65932426559cc0", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/6bd722a727625df395c6800eaa65932426559cc0", "committedDate": "2021-01-15T16:58:03Z", "message": "CLM: Server side field-level validations (Properties)\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6b479b017d9224ef16543a7d4ba1c8665765080", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d6b479b017d9224ef16543a7d4ba1c8665765080", "committedDate": "2021-01-15T16:58:03Z", "message": "CLM: Server side field-level validations (Environment)\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0932f1543211e7a43b60e73ede2ab8558cc546b0", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/0932f1543211e7a43b60e73ede2ab8558cc546b0", "committedDate": "2021-01-15T16:58:03Z", "message": "CLM: Server side field-level validations (Filters)\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aead43a40c1ba2480c25e51b425a3141b445c5b", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/8aead43a40c1ba2480c25e51b425a3141b445c5b", "committedDate": "2021-01-15T16:59:00Z", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2d9fd80f456190f3fe112aec74369a0fa34b868", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c2d9fd80f456190f3fe112aec74369a0fa34b868", "committedDate": "2021-01-15T16:59:05Z", "message": "Support for displaying multiple server errors per input field\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98f2930c6fb11daa46e3051d59fadf6959847cb9", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/98f2930c6fb11daa46e3051d59fadf6959847cb9", "committedDate": "2021-01-15T16:55:17Z", "message": "Support for displaying multiple server errors per input field\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}, "afterCommit": {"oid": "c2d9fd80f456190f3fe112aec74369a0fa34b868", "author": {"user": {"login": "ricardoasmarques", "name": "Ricardo Marques"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c2d9fd80f456190f3fe112aec74369a0fa34b868", "committedDate": "2021-01-15T16:59:05Z", "message": "Support for displaying multiple server errors per input field\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5OTcwMDA1", "url": "https://github.com/uyuni-project/uyuni/pull/3048#pullrequestreview-569970005", "createdAt": "2021-01-16T21:50:17Z", "commit": {"oid": "c2d9fd80f456190f3fe112aec74369a0fa34b868"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 763, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}