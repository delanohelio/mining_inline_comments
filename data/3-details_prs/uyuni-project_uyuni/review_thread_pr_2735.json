{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MTA3NTk3", "number": 2735, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNjozMjowN1rOE9s7iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQxNzo0MDoxNVrOFmGZVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTM0NzMxOnYy", "diffSide": "LEFT", "path": "backend/satellite_tools/download.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNjozMjowN1rOH6iBNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo0MDoyOFrOH65f3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNjgyMQ==", "bodyText": "Why is the reason of removing this block? Wouldn't we miss to do:\nself.curl_obj.setopt(pycurl.FORBID_REUSE, 0)", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r531136821", "createdAt": "2020-11-26T16:32:07Z", "author": {"login": "meaksh"}, "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -138,11 +138,6 @@ def _do_perform(self):\n                 self.parent.first_in_queue_done = True\n                 self.parent.first_in_queue_lock.release()\n \n-    def _set_opts(self, opts=None):\n-        if not opts:\n-            opts = {}\n-        PyCurlFileObject._set_opts(self, opts=opts)\n-        self.curl_obj.setopt(pycurl.FORBID_REUSE, 0) # pylint: disable=E1101", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fffa0ada67d293882addc267d9828e8257332158"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMTUwMQ==", "bodyText": "I think we don't need that here if we pass keepalive=True as part of the options when we instantiate PyCurlFileObjectThread.\n# urlgrabber/grabber.py\nclass PyCurlFileObject(object):\n    def __init__(self, url, filename, opts):\n        self.opts=opts\n        # ...\n\n    def _set_opts(self, opts={}):\n        # XXX\n        if not opts:\n            opts = self.opts\n\n        # keepalives\n        if not opts.keepalive:\n            self.curl_obj.setopt(pycurl.FORBID_REUSE, 1)\n     \n        # ... \nMy understanding is that setting FORBID_REUSE to 0 is only needed because we let urlgrabber set it to 1 by not specifying keepalive=True. I've added that to the opts dict in line 215.\nCurl's default is 0 (docs), as long as we don't set it to 1 we should be fine.", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r531521501", "createdAt": "2020-11-27T10:40:28Z", "author": {"login": "agraul"}, "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -138,11 +138,6 @@ def _do_perform(self):\n                 self.parent.first_in_queue_done = True\n                 self.parent.first_in_queue_lock.release()\n \n-    def _set_opts(self, opts=None):\n-        if not opts:\n-            opts = {}\n-        PyCurlFileObject._set_opts(self, opts=opts)\n-        self.curl_obj.setopt(pycurl.FORBID_REUSE, 0) # pylint: disable=E1101", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNjgyMQ=="}, "originalCommit": {"oid": "fffa0ada67d293882addc267d9828e8257332158"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzk2NjU3OnYy", "diffSide": "RIGHT", "path": "backend/satellite_tools/download.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo1NjoxOVrOH66Aeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQxMzo0MTowOFrOI2z3Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyOTg1MA==", "bodyText": "Here I was not sure if this should be its own setting or if we want to re-use timeout in rhn_server.conf.\nI think the former, but I'm interested in what you are thinking.", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r531529850", "createdAt": "2020-11-27T10:56:19Z", "author": {"login": "agraul"}, "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -278,16 +282,31 @@ class ThreadedDownloader:\n     def __init__(self, retries=3, log_obj=None, force=False):\n         self.queues = {}\n         comp = CFG.getComponent()\n-        initCFG('server.satellite')\n+        initCFG(\"server.satellite\")\n         try:\n             self.threads = int(CFG.REPOSYNC_DOWNLOAD_THREADS)\n         except ValueError:\n-            initCFG(comp)\n-            raise ValueError(\"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS)\n-        else:\n-            initCFG(comp)\n+            raise ValueError(\n+                \"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS\n+            )\n+        try:\n+            self.timeout = int(CFG.REPOSYNC_TIMEOUT)  # we could also use CFG.TIMEOUT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbfd6c97ff4fc16d015444c89f06bd170ad3d767"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM0Mzc4Mw==", "bodyText": "I'd also say we should keep this as a separate setting. Using the rhn config would be kind of surprising, especially since its use-case is the rpclib right now.", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r594343783", "createdAt": "2021-03-15T13:41:08Z", "author": {"login": "brejoc"}, "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -278,16 +282,31 @@ class ThreadedDownloader:\n     def __init__(self, retries=3, log_obj=None, force=False):\n         self.queues = {}\n         comp = CFG.getComponent()\n-        initCFG('server.satellite')\n+        initCFG(\"server.satellite\")\n         try:\n             self.threads = int(CFG.REPOSYNC_DOWNLOAD_THREADS)\n         except ValueError:\n-            initCFG(comp)\n-            raise ValueError(\"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS)\n-        else:\n-            initCFG(comp)\n+            raise ValueError(\n+                \"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS\n+            )\n+        try:\n+            self.timeout = int(CFG.REPOSYNC_TIMEOUT)  # we could also use CFG.TIMEOUT", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyOTg1MA=="}, "originalCommit": {"oid": "fbfd6c97ff4fc16d015444c89f06bd170ad3d767"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1MzY1MTkyOnYy", "diffSide": "RIGHT", "path": "backend/satellite_tools/download.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQxMzo0MjozM1rOI2z7ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQxNTozNjoxNFrOI26Ang==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM0NDgxMA==", "bodyText": "I think this is a copy-paste error.", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r594344810", "createdAt": "2021-03-15T13:42:33Z", "author": {"login": "brejoc"}, "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -278,16 +282,31 @@ class ThreadedDownloader:\n     def __init__(self, retries=3, log_obj=None, force=False):\n         self.queues = {}\n         comp = CFG.getComponent()\n-        initCFG('server.satellite')\n+        initCFG(\"server.satellite\")\n         try:\n             self.threads = int(CFG.REPOSYNC_DOWNLOAD_THREADS)\n         except ValueError:\n-            initCFG(comp)\n-            raise ValueError(\"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS)\n-        else:\n-            initCFG(comp)\n+            raise ValueError(\n+                \"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS\n+            )\n+        try:\n+            self.timeout = int(CFG.REPOSYNC_TIMEOUT)  # we could also use CFG.TIMEOUT\n+        except ValueError:\n+            raise ValueError(\n+                \"Timeout in seconds expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf4a0ac026acc20a0161d71ba75348cbfb2a84a3"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDQ0NDQ0Ng==", "bodyText": "yes, thanks!", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r594444446", "createdAt": "2021-03-15T15:36:14Z", "author": {"login": "agraul"}, "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -278,16 +282,31 @@ class ThreadedDownloader:\n     def __init__(self, retries=3, log_obj=None, force=False):\n         self.queues = {}\n         comp = CFG.getComponent()\n-        initCFG('server.satellite')\n+        initCFG(\"server.satellite\")\n         try:\n             self.threads = int(CFG.REPOSYNC_DOWNLOAD_THREADS)\n         except ValueError:\n-            initCFG(comp)\n-            raise ValueError(\"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS)\n-        else:\n-            initCFG(comp)\n+            raise ValueError(\n+                \"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS\n+            )\n+        try:\n+            self.timeout = int(CFG.REPOSYNC_TIMEOUT)  # we could also use CFG.TIMEOUT\n+        except ValueError:\n+            raise ValueError(\n+                \"Timeout in seconds expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM0NDgxMA=="}, "originalCommit": {"oid": "bf4a0ac026acc20a0161d71ba75348cbfb2a84a3"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1MzY1NTQzOnYy", "diffSide": "RIGHT", "path": "backend/satellite_tools/download.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQxMzo0MzoxOFrOI2z9ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQxMzo0MzoxOFrOI2z9ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM0NTM1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"Timeout in seconds expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS\n          \n          \n            \n                            \"Timeout in seconds expected, found: '%s'\" % CFG.REPOSYNC_TIMEOUT", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r594345354", "createdAt": "2021-03-15T13:43:18Z", "author": {"login": "brejoc"}, "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -278,16 +282,31 @@ class ThreadedDownloader:\n     def __init__(self, retries=3, log_obj=None, force=False):\n         self.queues = {}\n         comp = CFG.getComponent()\n-        initCFG('server.satellite')\n+        initCFG(\"server.satellite\")\n         try:\n             self.threads = int(CFG.REPOSYNC_DOWNLOAD_THREADS)\n         except ValueError:\n-            initCFG(comp)\n-            raise ValueError(\"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS)\n-        else:\n-            initCFG(comp)\n+            raise ValueError(\n+                \"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS\n+            )\n+        try:\n+            self.timeout = int(CFG.REPOSYNC_TIMEOUT)  # we could also use CFG.TIMEOUT\n+        except ValueError:\n+            raise ValueError(\n+                \"Timeout in seconds expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf4a0ac026acc20a0161d71ba75348cbfb2a84a3"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1NDk0OTk5OnYy", "diffSide": "RIGHT", "path": "backend/satellite_tools/download.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQxNzo0MDoxNVrOI3AZCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQxNzo0MDoxNVrOI3AZCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDU0OTAwMQ==", "bodyText": "self shouldn't be passed here (noting here so I don't forget to change it)", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r594549001", "createdAt": "2021-03-15T17:40:15Z", "author": {"login": "agraul"}, "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -132,26 +132,20 @@ def _do_perform(self):\n             if self.parent.first_in_queue_done:\n                 self.parent.first_in_queue_lock.release()\n         try:\n-            PyCurlFileObject._do_perform(self)\n+            super()._do_perform(self)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf4a0ac026acc20a0161d71ba75348cbfb2a84a3"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3952, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}