{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NzQyODYx", "number": 2069, "title": "Bootstrap minions using an SSH private key via XMLRPC", "bodyText": "How to review\nReview commit-by-commit.\nWhat does this PR change?\nAdd the possibility of bootstrapping minions (and ssh minions) with a SSH private key (and optionally a passphrase in case the key is protected by it).\nThe process goes as follows:\n\n\nThe user provides the key as a string in PEM format in the XMLRPC endpoint.\n\n\nThe client is bootstrapped in an usual way with one difference: the provided private key is stored to a temporary file on the disk. Its path is then added to the temporary roster that is used only for the first bootstrap salt ssh call to the client.\n\n\nAfter the initial bootstrap call is finished (succeeds or fails), the temporary key file is deleted.\n\n\nIn case of Salt SSH minions, the global SUMA SSH key (mgr_ssh_id) is used for further communication (as described above, the temporary key file is discarded).\n\n\nSide note: during the inital bootstrap ssh call SUMA also uses its own global priv SSH key (mgr_ssh_id) - meaning thath 2 private keys are passed:\n\nthe user-specified via the roster,\nthe SUMA one using the SaltSSHConfig.Builder().priv(....../mgr_ssh_id)).\n\nThis shouldn't be a problem.\nGUI diff\nNo difference.\nDocumentation\nXMLRPC docs\n\n DONE\n\nTest coverage\n\n\nNo jUnit tests: I didn't find a reasonable way of testing this\n\n\nCucumber tests: SUSE/spacewalk#11115\n\n\n Done for now\n\n\nLinks\nTracks SUSE/spacewalk#11115\n\n DONE\n\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_lint_checkstyle\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"ruby_rubocop\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\"\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-03-27T13:06:11Z", "url": "https://github.com/uyuni-project/uyuni/pull/2069", "merged": true, "mergeCommit": {"oid": "e39f071675ce179c39fe90cb4bf5f26f3cbe5a58"}, "closed": true, "closedAt": "2020-03-31T12:26:49Z", "author": {"login": "hustodemon"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRwZ66gBqjMxNzIzMTYzNzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTCBQ3ABqjMxODI5OTQxMTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f6e115464a09f2724278565a652bca9a44b2b5b", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4f6e115464a09f2724278565a652bca9a44b2b5b", "committedDate": "2020-03-27T13:04:52Z", "message": "Changelog"}, "afterCommit": {"oid": "c332bbdb2112d4100d1ae4f342f0d2884ffa17af", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c332bbdb2112d4100d1ae4f342f0d2884ffa17af", "committedDate": "2020-03-27T13:06:23Z", "message": "Changelog"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c332bbdb2112d4100d1ae4f342f0d2884ffa17af", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c332bbdb2112d4100d1ae4f342f0d2884ffa17af", "committedDate": "2020-03-27T13:06:23Z", "message": "Changelog"}, "afterCommit": {"oid": "cfc615d51fa12a9b78f0c1df3e147a4c28586ee3", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/cfc615d51fa12a9b78f0c1df3e147a4c28586ee3", "committedDate": "2020-03-27T13:12:10Z", "message": "Changelog"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfc615d51fa12a9b78f0c1df3e147a4c28586ee3", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/cfc615d51fa12a9b78f0c1df3e147a4c28586ee3", "committedDate": "2020-03-27T13:12:10Z", "message": "Changelog"}, "afterCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/254a6a1f859fb8f9b59cd7f420bce88a1e186442", "committedDate": "2020-03-30T14:53:42Z", "message": "Add methods to SystemQuery\n\nThese will be extracted to a separate interface in later stages of\nSaltService refactoring."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NDk5MTg4", "url": "https://github.com/uyuni-project/uyuni/pull/2069#pullrequestreview-384499188", "createdAt": "2020-03-31T08:15:30Z", "commit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODoxNTozMFrOF-KQsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODo1NTozNVrOF-Lx2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyNDE0Ng==", "bodyText": "To be on the safe side, Ithe call to callSyncSSHInternal could be wrapped in a try { ... } finally { ... } block and the cleanup of the key moved inside finally { ... }.", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400724146", "createdAt": "2020-03-31T08:15:30Z", "author": {"login": "mateiw"}, "path": "java/code/src/com/suse/manager/webui/services/impl/SaltSSHService.java", "diffHunk": "@@ -559,9 +568,23 @@ private boolean addSaltSSHMinionsFromDb(SaltRoster roster) {\n                         roster,\n                         parameters.isIgnoreHostKeys(),\n                         isSudoUser(parameters.getUser()));\n+        tmpKeyFileAbsolutePath.ifPresent(path -> cleanUpTempKeyFile(path));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczMjgzNw==", "bodyText": "Nitpick: instead of new ArrayList<>() one could use Collections.emptyList().", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400732837", "createdAt": "2020-03-31T08:29:18Z", "author": {"login": "mateiw"}, "path": "java/code/src/com/suse/manager/webui/utils/gson/BootstrapHostsJson.java", "diffHunk": "@@ -57,8 +61,30 @@ public BootstrapHostsJson(String hostIn, Integer portIn, String userIn,\n         port = String.valueOf(portIn);\n         user = userIn;\n         password = passwordIn;\n-        activationKeys = StringUtils.isEmpty(activationKey) ?\n-                new ArrayList<>() : Arrays.asList(activationKey);\n+        activationKeys = StringUtils.isEmpty(activationKey) ? new ArrayList<>() : Arrays.asList(activationKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczMzA0NA==", "bodyText": "See nitpick above.", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400733044", "createdAt": "2020-03-31T08:29:36Z", "author": {"login": "mateiw"}, "path": "java/code/src/com/suse/manager/webui/utils/gson/BootstrapHostsJson.java", "diffHunk": "@@ -57,8 +61,30 @@ public BootstrapHostsJson(String hostIn, Integer portIn, String userIn,\n         port = String.valueOf(portIn);\n         user = userIn;\n         password = passwordIn;\n-        activationKeys = StringUtils.isEmpty(activationKey) ?\n-                new ArrayList<>() : Arrays.asList(activationKey);\n+        activationKeys = StringUtils.isEmpty(activationKey) ? new ArrayList<>() : Arrays.asList(activationKey);\n+        proxy = proxyIn;\n+        ignoreHostKeys = true;\n+    }\n+\n+    /**\n+     * Constructor to be used for bootstrapping systems with SSH private key via API.\n+     *\n+     * @param hostIn target host\n+     * @param portIn SSH port\n+     * @param userIn SSH user\n+     * @param privKeyIn SSH private key in PEM format\n+     * @param privKeyPwdIn SSH private key passphrase (empty/null string = no passphrase)\n+     * @param activationKey activation key\n+     * @param proxyIn system ID of proxy server to use\n+     */\n+    public BootstrapHostsJson(String hostIn, Integer portIn, String userIn,\n+            String privKeyIn, String privKeyPwdIn, String activationKey, Long proxyIn) {\n+        host = hostIn;\n+        port = String.valueOf(portIn);\n+        user = userIn;\n+        privKey = Optional.of(privKeyIn);\n+        privKeyPwd = StringUtils.isEmpty(privKeyPwdIn) ? empty() : Optional.of(privKeyPwdIn);\n+        activationKeys = StringUtils.isEmpty(activationKey) ? new ArrayList<>() : Arrays.asList(activationKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc0OTAxOA==", "bodyText": "MgrUtilRunner is a wrapper for our custom mgrutil runner. Since these methods don't actually call a function from the runner I think they belong somewhere else, maybe in SaltService.", "url": "https://github.com/uyuni-project/uyuni/pull/2069#discussion_r400749018", "createdAt": "2020-03-31T08:55:35Z", "author": {"login": "mateiw"}, "path": "java/code/src/com/suse/manager/webui/services/impl/runner/MgrUtilRunner.java", "diffHunk": "@@ -160,4 +160,51 @@ public static ExecResult success() {\n         return call;\n     }\n \n+    /**\n+     * {@link RunnerCall} for writing into a text file.\n+     * The result of the call is a text description with how many lines were written.\n+     *\n+     * @param absolutePath the file path\n+     * @param contents the file text contents\n+     * @return the runner call\n+     */\n+    public static RunnerCall<String> writeTextFile(String absolutePath, String contents) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "254a6a1f859fb8f9b59cd7f420bce88a1e186442"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NTcwODc0", "url": "https://github.com/uyuni-project/uyuni/pull/2069#pullrequestreview-384570874", "createdAt": "2020-03-31T09:47:19Z", "commit": {"oid": "aa34e512091e27434d8a9a0c8595ab2bab2a9994"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ef68e43deb6e03b510b66b6480d0a325133c020", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/0ef68e43deb6e03b510b66b6480d0a325133c020", "committedDate": "2020-03-31T12:08:55Z", "message": "Add SSH private key/passphrase to the BootstrapHostsJson"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41b9f58fb58f2fd4d3c97b7339a6ada9e7286664", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/41b9f58fb58f2fd4d3c97b7339a6ada9e7286664", "committedDate": "2020-03-31T12:08:55Z", "message": "Add SSH private key/passphrase to the BootstrapParameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e2a34fa807242613f1dceaff3c039f3737917a9", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/8e2a34fa807242613f1dceaff3c039f3737917a9", "committedDate": "2020-03-31T12:08:55Z", "message": "Add SSH private key path/key passphrase to the SaltRoster"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c75e2fd6170e103df538d880f4543d8a89cffaac", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c75e2fd6170e103df538d880f4543d8a89cffaac", "committedDate": "2020-03-31T12:08:55Z", "message": "Runner calls for handling SSH private keys on the disk"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1c8f3566ff085e3edd103e915674ef5bd17c133", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d1c8f3566ff085e3edd103e915674ef5bd17c133", "committedDate": "2020-03-31T12:08:56Z", "message": "Use the Runner Calls to create/remove temporary SSH keys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97c3b4fba2cf5f09259d4568cf9369f168f1f281", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/97c3b4fba2cf5f09259d4568cf9369f168f1f281", "committedDate": "2020-03-31T12:08:56Z", "message": "Bootstrap minions/ssh minions using a SSH key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ebd85e29c61e40e555a5d83ec81bac405d83a7e", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/5ebd85e29c61e40e555a5d83ec81bac405d83a7e", "committedDate": "2020-03-31T12:08:56Z", "message": "Ensure the directory for temporary SSH keys (for bootstrapping) exists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a82f176718d4f35c2603cde0988d83e7b9fc2d26", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/a82f176718d4f35c2603cde0988d83e7b9fc2d26", "committedDate": "2020-03-31T12:08:56Z", "message": "Expose the bootstraping using SSH key in XMLRPC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74c826d1fcf1297fedd5e446b3658b38d5e7cf33", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/74c826d1fcf1297fedd5e446b3658b38d5e7cf33", "committedDate": "2020-03-31T12:08:56Z", "message": "Prevent logging sensitive data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "760bb1929725f628154dba9b6eb77a919a879ba4", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/760bb1929725f628154dba9b6eb77a919a879ba4", "committedDate": "2020-03-31T12:09:08Z", "message": "Changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3a3edcd88b33f96e9d4b8e77719e989deb380f4", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d3a3edcd88b33f96e9d4b8e77719e989deb380f4", "committedDate": "2020-03-31T12:09:08Z", "message": "Add methods to SystemQuery\n\nThese will be extracted to a separate interface in later stages of\nSaltService refactoring."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfaa30a51275a007cc7ad83813d0cd712b65e923", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/cfaa30a51275a007cc7ad83813d0cd712b65e923", "committedDate": "2020-03-31T12:09:08Z", "message": "Address review comments\n\n- use Collections.emptyList() instead of new ArrayList()\n- handle the temp. key cleanup in a `finally` block\n- move the new runner calls to a separate class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa34e512091e27434d8a9a0c8595ab2bab2a9994", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/aa34e512091e27434d8a9a0c8595ab2bab2a9994", "committedDate": "2020-03-31T09:18:15Z", "message": "Address review comments\n\n- use Collections.emptyList() instead of new ArrayList()\n- handle the temp. key cleanup in a `finally` block\n- move the new runner calls to a separate class"}, "afterCommit": {"oid": "cfaa30a51275a007cc7ad83813d0cd712b65e923", "author": {"user": {"login": "hustodemon", "name": "Frantisek Kobzik"}}, "url": "https://github.com/uyuni-project/uyuni/commit/cfaa30a51275a007cc7ad83813d0cd712b65e923", "committedDate": "2020-03-31T12:09:08Z", "message": "Address review comments\n\n- use Collections.emptyList() instead of new ArrayList()\n- handle the temp. key cleanup in a `finally` block\n- move the new runner calls to a separate class"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1539, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}