{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjUxMzI2", "number": 2020, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxMDoxN1rODrkxsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNToyMFrODsIV-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDE3OTA3OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/controllers/ProductsController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxMDoxN1rOF7_tIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDoyMTowMVrOF8JPaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NDA0OA==", "bodyText": "I think this is too expensive and there is a better way to get the ID.\nCheck line 300: there is a map \"channelByLabel\" of all Channels. Please use that map to get the Channel and the ID.", "url": "https://github.com/uyuni-project/uyuni/pull/2020#discussion_r398454048", "createdAt": "2020-03-26T10:10:17Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/webui/controllers/ProductsController.java", "diffHunk": "@@ -319,6 +318,10 @@ public static String data(Request request, Response response, User user) {\n                                             s.getStatus(),\n                                             s.getChannels().stream().map(c ->\n                                                     new ChannelJson(\n+                                                            s.getStatus().equals(MgrSyncStatus.INSTALLED) &&\n+                                                                    ChannelFactory.lookupByLabel(c.getLabel()) != null ?\n+                                                                    ChannelFactory.lookupByLabel(c.getLabel()).getId() :\n+                                                                    -1L,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b23a355d2ee261b4ec6f32458110afbec9a806"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYxMDI4MA==", "bodyText": "Thanks for the hint. Fixed", "url": "https://github.com/uyuni-project/uyuni/pull/2020#discussion_r398610280", "createdAt": "2020-03-26T14:21:01Z", "author": {"login": "ncounter"}, "path": "java/code/src/com/suse/manager/webui/controllers/ProductsController.java", "diffHunk": "@@ -319,6 +318,10 @@ public static String data(Request request, Response response, User user) {\n                                             s.getStatus(),\n                                             s.getChannels().stream().map(c ->\n                                                     new ChannelJson(\n+                                                            s.getStatus().equals(MgrSyncStatus.INSTALLED) &&\n+                                                                    ChannelFactory.lookupByLabel(c.getLabel()) != null ?\n+                                                                    ChannelFactory.lookupByLabel(c.getLabel()).getId() :\n+                                                                    -1L,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NDA0OA=="}, "originalCommit": {"oid": "29b23a355d2ee261b4ec6f32458110afbec9a806"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDE4MDAwOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/controllers/ProductsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxMDozM1rOF7_twA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxMDozM1rOF7_twA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NDIwOA==", "bodyText": "Same as above", "url": "https://github.com/uyuni-project/uyuni/pull/2020#discussion_r398454208", "createdAt": "2020-03-26T10:10:33Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/webui/controllers/ProductsController.java", "diffHunk": "@@ -365,6 +368,10 @@ public static String data(Request request, Response response, User user) {\n                         rootExtensions,\n                         syncProduct.getChannels().stream().map(c ->\n                                 new ChannelJson(\n+                                        syncProduct.getStatus().equals(MgrSyncStatus.INSTALLED) &&\n+                                                ChannelFactory.lookupByLabel(c.getLabel()) != null ?\n+                                                ChannelFactory.lookupByLabel(c.getLabel()).getId() :\n+                                                -1L,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b23a355d2ee261b4ec6f32458110afbec9a806"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTg3NzE0OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/admin/setup/products/products.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTozNTo0NVrOF82lzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTozNTo0NVrOF82lzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MzI5NA==", "bodyText": "Nit: typo.", "url": "https://github.com/uyuni-project/uyuni/pull/2020#discussion_r399353294", "createdAt": "2020-03-27T15:35:45Z", "author": {"login": "hustodemon"}, "path": "web/html/src/manager/admin/setup/products/products.js", "diffHunk": "@@ -706,6 +706,78 @@ class CheckListItem extends React.Component {\n     }\n     /*****/\n \n+    /** generate channel sync statys **/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bba4b644cbce9fc015c16201f429463e02d04ebc"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTk0MDI0OnYy", "diffSide": "RIGHT", "path": "web/html/src/manager/admin/setup/products/products.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTo1MDowN1rOF83NNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjozNjoxMVrOF9Du-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MzM4MA==", "bodyText": "To me it seems this triple if-else does the same thing as the one above, but on a different data (childProductChannels vs. currentProductChannels). Could this be extracted to a separate function to reduce code duplication?", "url": "https://github.com/uyuni-project/uyuni/pull/2020#discussion_r399363380", "createdAt": "2020-03-27T15:50:07Z", "author": {"login": "hustodemon"}, "path": "web/html/src/manager/admin/setup/products/products.js", "diffHunk": "@@ -735,49 +745,101 @@ class CheckListItem extends React.Component {\n     }\n     /*****/\n \n-    /** generate channel sync progress bar **/\n+    /** generate channel sync statys **/\n     let channelSyncContent;\n     if (this.isInstalled()) {\n-      const mandatoryChannelList = currentItem.channels.filter(c => !c.optional);\n+      let currentProductChannels = currentItem.channels.filter(c => c.status != _CHANNEL_STATUS.notSynced);\n \n       // if the product sync has just been scheduled\n-      if (this.props.bypassProps.scheduledItems.includes(currentItem.identifier)) {\n-        channelSyncContent = <span className=\"text-info\">{t('Sync scheduled')}</span>;\n+      if (currentProductChannels.filter(c => c.status == _CHANNEL_STATUS.failed).length > 0) {\n+        channelSyncContent =\n+          <span className=\"text-danger\" title={t('Product channels sync failed')}>\n+            <i className=\"fa fa-exclamation-circle fa-1-5x\"></i>\n+          </span>;\n       }\n-      // if any failed sync channel, show the error only\n-      else if (mandatoryChannelList.filter(c => c.status == _CHANNEL_STATUS.failed).length > 0) {\n-        channelSyncContent = <span className=\"text-danger\">{t('Sync failed')}</span>;\n+      else if (currentProductChannels.filter(c => c.status == _CHANNEL_STATUS.syncing).length > 0) {\n+        channelSyncContent =\n+          <span className=\"text-info\" title={t('Product channels sync in progress')}>\n+            <i className=\"fa fa-spinner fa-spin fa-1-5x\"></i>\n+          </span>;\n       }\n-      else {\n-        const syncedChannels = mandatoryChannelList.filter(c => c.status == _CHANNEL_STATUS.synced).length;\n-        const toBeSyncedChannels = mandatoryChannelList.length;\n-        const channelSyncProgress = Math.round(( syncedChannels / toBeSyncedChannels ) * 100);\n-        channelSyncContent = <ProgressBar progress={channelSyncProgress} title={t('Product sync status')} width='60%'/>;\n+      else if (currentProductChannels.filter(c => c.status == _CHANNEL_STATUS.synced).length > 0) {\n+        channelSyncContent =\n+          <span className=\"text-success\" title={t('Product channels synced')}>\n+            <i className=\"fa fa-check-circle fa-1-5x\"></i>\n+          </span>;\n+      }\n+    }\n+\n+    let childProductChannelSyncContent;\n+    if (this.isInstalled()) {\n+      // add all channels of the subtree\n+      let childProductChannels = [];\n+\n+      this.getChildrenTree(currentItem)\n+        .filter(product => product.status == _PRODUCT_STATUS.installed)\n+        .forEach(prod => {\n+          prod.channels.filter(channel => channel.status != _CHANNEL_STATUS.notSynced)\n+            .forEach(chan => { childProductChannels.push(chan) })\n+        });\n+      if (childProductChannels.filter(c => c.status == _CHANNEL_STATUS.failed).length > 0) {\n+        childProductChannelSyncContent =\n+          <span className=\"text-danger\" title={t('Child products channels sync failed')}>\n+            (<i className=\"fa fa-exclamation-circle\"></i>)\n+          </span>;\n+      }\n+      else if (childProductChannels.filter(c => c.status == _CHANNEL_STATUS.syncing).length > 0) {\n+        childProductChannelSyncContent =\n+          <span className=\"text-info\" title={t('Child products channels in progress')}>\n+            (<i className=\"fa fa-spinner fa-spin\"></i>)\n+          </span>;\n+      }\n+      else if (childProductChannels.filter(c => c.status == _CHANNEL_STATUS.synced).length > 0) {\n+        childProductChannelSyncContent =\n+          <span className=\"text-success\" title={t('Child products channels synced')}>\n+            (<i className=\"fa fa-check-circle\"></i>)\n+          </span>;\n       }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aefa09e4ed072e24770a1dadf966e63d39f4409"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2ODYzMw==", "bodyText": "Yeah, it is not exactly the same code, but with some small extracted differences I was able to make a single function to reuse the shared part. \ud83d\udc4d", "url": "https://github.com/uyuni-project/uyuni/pull/2020#discussion_r399568633", "createdAt": "2020-03-27T22:36:11Z", "author": {"login": "ncounter"}, "path": "web/html/src/manager/admin/setup/products/products.js", "diffHunk": "@@ -735,49 +745,101 @@ class CheckListItem extends React.Component {\n     }\n     /*****/\n \n-    /** generate channel sync progress bar **/\n+    /** generate channel sync statys **/\n     let channelSyncContent;\n     if (this.isInstalled()) {\n-      const mandatoryChannelList = currentItem.channels.filter(c => !c.optional);\n+      let currentProductChannels = currentItem.channels.filter(c => c.status != _CHANNEL_STATUS.notSynced);\n \n       // if the product sync has just been scheduled\n-      if (this.props.bypassProps.scheduledItems.includes(currentItem.identifier)) {\n-        channelSyncContent = <span className=\"text-info\">{t('Sync scheduled')}</span>;\n+      if (currentProductChannels.filter(c => c.status == _CHANNEL_STATUS.failed).length > 0) {\n+        channelSyncContent =\n+          <span className=\"text-danger\" title={t('Product channels sync failed')}>\n+            <i className=\"fa fa-exclamation-circle fa-1-5x\"></i>\n+          </span>;\n       }\n-      // if any failed sync channel, show the error only\n-      else if (mandatoryChannelList.filter(c => c.status == _CHANNEL_STATUS.failed).length > 0) {\n-        channelSyncContent = <span className=\"text-danger\">{t('Sync failed')}</span>;\n+      else if (currentProductChannels.filter(c => c.status == _CHANNEL_STATUS.syncing).length > 0) {\n+        channelSyncContent =\n+          <span className=\"text-info\" title={t('Product channels sync in progress')}>\n+            <i className=\"fa fa-spinner fa-spin fa-1-5x\"></i>\n+          </span>;\n       }\n-      else {\n-        const syncedChannels = mandatoryChannelList.filter(c => c.status == _CHANNEL_STATUS.synced).length;\n-        const toBeSyncedChannels = mandatoryChannelList.length;\n-        const channelSyncProgress = Math.round(( syncedChannels / toBeSyncedChannels ) * 100);\n-        channelSyncContent = <ProgressBar progress={channelSyncProgress} title={t('Product sync status')} width='60%'/>;\n+      else if (currentProductChannels.filter(c => c.status == _CHANNEL_STATUS.synced).length > 0) {\n+        channelSyncContent =\n+          <span className=\"text-success\" title={t('Product channels synced')}>\n+            <i className=\"fa fa-check-circle fa-1-5x\"></i>\n+          </span>;\n+      }\n+    }\n+\n+    let childProductChannelSyncContent;\n+    if (this.isInstalled()) {\n+      // add all channels of the subtree\n+      let childProductChannels = [];\n+\n+      this.getChildrenTree(currentItem)\n+        .filter(product => product.status == _PRODUCT_STATUS.installed)\n+        .forEach(prod => {\n+          prod.channels.filter(channel => channel.status != _CHANNEL_STATUS.notSynced)\n+            .forEach(chan => { childProductChannels.push(chan) })\n+        });\n+      if (childProductChannels.filter(c => c.status == _CHANNEL_STATUS.failed).length > 0) {\n+        childProductChannelSyncContent =\n+          <span className=\"text-danger\" title={t('Child products channels sync failed')}>\n+            (<i className=\"fa fa-exclamation-circle\"></i>)\n+          </span>;\n+      }\n+      else if (childProductChannels.filter(c => c.status == _CHANNEL_STATUS.syncing).length > 0) {\n+        childProductChannelSyncContent =\n+          <span className=\"text-info\" title={t('Child products channels in progress')}>\n+            (<i className=\"fa fa-spinner fa-spin\"></i>)\n+          </span>;\n+      }\n+      else if (childProductChannels.filter(c => c.status == _CHANNEL_STATUS.synced).length > 0) {\n+        childProductChannelSyncContent =\n+          <span className=\"text-success\" title={t('Child products channels synced')}>\n+            (<i className=\"fa fa-check-circle\"></i>)\n+          </span>;\n       }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MzM4MA=="}, "originalCommit": {"oid": "5aefa09e4ed072e24770a1dadf966e63d39f4409"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjAwMzk5OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/controllers/ProductsController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNDo0N1rOF830xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMToyOToxMlrOF9CaLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MzUwOA==", "bodyText": "Nitpick: (this is totally matter of taste, so disregard it, if you don't like it.)\nI found an alternative syntax to be more readable:\nOptional.ofNullable(channelByLabel.get(c.getLabel()))\n    .map(chan -> chan.getId())\n    .orElse(-1L)", "url": "https://github.com/uyuni-project/uyuni/pull/2020#discussion_r399373508", "createdAt": "2020-03-27T16:04:47Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/controllers/ProductsController.java", "diffHunk": "@@ -319,6 +318,10 @@ public static String data(Request request, Response response, User user) {\n                                             s.getStatus(),\n                                             s.getChannels().stream().map(c ->\n                                                     new ChannelJson(\n+                                                            Opt.fold(Optional.ofNullable(\n+                                                                            channelByLabel.get(c.getLabel())),\n+                                                                    () -> -1L,\n+                                                                    x -> x.getId()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aefa09e4ed072e24770a1dadf966e63d39f4409"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU0NjkyNg==", "bodyText": "I am always undecided which is better actually.\nOpt.fold is more complex but Optional.ofNullable uses .map() and I don't like to map when I know it is just a single object that I have to work with, it is less intuitive in such a case. So either one way or the other in this case has pros and cons to me. And if you say the second one is clearer, I'm fine with it and I trust you more in the Java aspect. Changing accordingly \ud83d\udc4d", "url": "https://github.com/uyuni-project/uyuni/pull/2020#discussion_r399546926", "createdAt": "2020-03-27T21:29:12Z", "author": {"login": "ncounter"}, "path": "java/code/src/com/suse/manager/webui/controllers/ProductsController.java", "diffHunk": "@@ -319,6 +318,10 @@ public static String data(Request request, Response response, User user) {\n                                             s.getStatus(),\n                                             s.getChannels().stream().map(c ->\n                                                     new ChannelJson(\n+                                                            Opt.fold(Optional.ofNullable(\n+                                                                            channelByLabel.get(c.getLabel())),\n+                                                                    () -> -1L,\n+                                                                    x -> x.getId()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MzUwOA=="}, "originalCommit": {"oid": "5aefa09e4ed072e24770a1dadf966e63d39f4409"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjAwNjMyOnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/webui/controllers/ProductsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNToyMFrOF832Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNToyMFrOF832Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3Mzg3OA==", "bodyText": "Same here, feel free not to agree \ud83d\ude09", "url": "https://github.com/uyuni-project/uyuni/pull/2020#discussion_r399373878", "createdAt": "2020-03-27T16:05:20Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/controllers/ProductsController.java", "diffHunk": "@@ -365,6 +368,9 @@ public static String data(Request request, Response response, User user) {\n                         rootExtensions,\n                         syncProduct.getChannels().stream().map(c ->\n                                 new ChannelJson(\n+                                        Opt.fold(Optional.ofNullable(channelByLabel.get(c.getLabel())),\n+                                                () -> -1L,\n+                                                x -> x.getId()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aefa09e4ed072e24770a1dadf966e63d39f4409"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 12, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}