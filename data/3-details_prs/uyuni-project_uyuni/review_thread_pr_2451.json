{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MTkwOTUx", "number": 2451, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDoxNjowMVrOESaDOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowNzo1N1rOESbkVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzM2NjM0OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/maintenance/rescheduling/FailRescheduleStrategy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDoxNjowMVrOG3kdOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDoxNjowMVrOG3kdOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyMjE2OA==", "bodyText": "I renamed this one to be consistent with CancelRescheduleStrategy", "url": "https://github.com/uyuni-project/uyuni/pull/2451#discussion_r460922168", "createdAt": "2020-07-27T14:16:01Z", "author": {"login": "parlt91"}, "path": "java/code/src/com/suse/manager/maintenance/rescheduling/FailRescheduleStrategy.java", "diffHunk": "@@ -32,9 +32,15 @@\n     private static final Logger LOG = Logger.getLogger(CancelRescheduleStrategy.class);\n \n     @Override\n-    public RescheduleResult reschedule(User user, Map<Action, List<Server>> actionServer,\n+    public RescheduleResult reschedule(User user, Map<Action, List<Server>> actionsServers,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1acff4ebe446b26bf4f824ed29f26a0da97242"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzYxNDk0OnYy", "diffSide": "RIGHT", "path": "java/code/src/com/suse/manager/maintenance/rescheduling/FailRescheduleStrategy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowNzo1N1rOG3m05w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTozNTo0MVrOG3oCdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2MDk5OQ==", "bodyText": "Would it be possible to test this case in a unit test?", "url": "https://github.com/uyuni-project/uyuni/pull/2451#discussion_r460960999", "createdAt": "2020-07-27T15:07:57Z", "author": {"login": "mcalmer"}, "path": "java/code/src/com/suse/manager/maintenance/rescheduling/FailRescheduleStrategy.java", "diffHunk": "@@ -32,9 +32,15 @@\n     private static final Logger LOG = Logger.getLogger(CancelRescheduleStrategy.class);\n \n     @Override\n-    public RescheduleResult reschedule(User user, Map<Action, List<Server>> actionServer,\n+    public RescheduleResult reschedule(User user, Map<Action, List<Server>> actionsServers,\n             MaintenanceSchedule schedule) throws RescheduleException {\n \n+        if (actionsServers.isEmpty()) {\n+            RescheduleResult result = new RescheduleResult(getType().getLabel(), schedule.getName(), actionsServers);\n+            result.setSuccess(true);\n+            return  result;\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aae3a9eaac99a5a8d37739e1d20a08f9a0e840d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4MDg1Mw==", "bodyText": "You're right. I think it should be possible. I'll investigate and add one if so.", "url": "https://github.com/uyuni-project/uyuni/pull/2451#discussion_r460980853", "createdAt": "2020-07-27T15:35:41Z", "author": {"login": "parlt91"}, "path": "java/code/src/com/suse/manager/maintenance/rescheduling/FailRescheduleStrategy.java", "diffHunk": "@@ -32,9 +32,15 @@\n     private static final Logger LOG = Logger.getLogger(CancelRescheduleStrategy.class);\n \n     @Override\n-    public RescheduleResult reschedule(User user, Map<Action, List<Server>> actionServer,\n+    public RescheduleResult reschedule(User user, Map<Action, List<Server>> actionsServers,\n             MaintenanceSchedule schedule) throws RescheduleException {\n \n+        if (actionsServers.isEmpty()) {\n+            RescheduleResult result = new RescheduleResult(getType().getLabel(), schedule.getName(), actionsServers);\n+            result.setSuccess(true);\n+            return  result;\n+        }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2MDk5OQ=="}, "originalCommit": {"oid": "5aae3a9eaac99a5a8d37739e1d20a08f9a0e840d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4252, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}