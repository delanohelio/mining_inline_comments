{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTQ5OTQ4", "number": 2192, "title": "CLM AppStream filters: module picker controls", "bodyText": "Add module picker controls for CLM AppStreams filter form.\nGUI diff\nBefore:\n\nAfter (in order of flow):\n\n\n\n\nDocumentation\n\nSUSE/spacewalk#11486\n\nTest coverage\n\nNo tests: Not testable\n\nLinks\nFixes SUSE/spacewalk#10097\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_lint_checkstyle\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"ruby_rubocop\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\"\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-05-07T22:23:29Z", "url": "https://github.com/uyuni-project/uyuni/pull/2192", "merged": true, "mergeCommit": {"oid": "17d2b4d5227997e631299ae5a32831aeedfbb397"}, "closed": true, "closedAt": "2020-05-22T11:13:40Z", "author": {"login": "cbbayburt"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfE_u1ABqjMzMTQ4ODAzMzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjvdXtgBqjMzNjQxMTE2ODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65b3745a1a759adeba14f3637d5cc64b4fdbf7a6", "author": {"user": {"login": "cbbayburt", "name": "Can Bulut Bayburt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/65b3745a1a759adeba14f3637d5cc64b4fdbf7a6", "committedDate": "2020-05-07T22:22:04Z", "message": "Implement module picker controls for CLM AppStream filters"}, "afterCommit": {"oid": "4337f2be7c5b0d5ebf4504110c2e32e80b3b291a", "author": {"user": {"login": "cbbayburt", "name": "Can Bulut Bayburt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/4337f2be7c5b0d5ebf4504110c2e32e80b3b291a", "committedDate": "2020-05-07T22:26:48Z", "message": "Implement module picker controls for CLM AppStream filters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MjIyMDMy", "url": "https://github.com/uyuni-project/uyuni/pull/2192#pullrequestreview-408222032", "createdAt": "2020-05-08T13:03:44Z", "commit": {"oid": "4337f2be7c5b0d5ebf4504110c2e32e80b3b291a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzowMzo0NFrOGSkymw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzowMzo0NFrOGSkymw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEzMDMzMQ==", "bodyText": "Nit: is the return needed? AFAIK, Spark.halt throws an exception.", "url": "https://github.com/uyuni-project/uyuni/pull/2192#discussion_r422130331", "createdAt": "2020-05-08T13:03:44Z", "author": {"login": "hustodemon"}, "path": "java/code/src/com/suse/manager/webui/controllers/contentmanagement/handlers/AppStreamsApiController.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Copyright (c) 2019 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.webui.controllers.contentmanagement.handlers;\n+\n+import com.redhat.rhn.domain.channel.Channel;\n+import com.redhat.rhn.domain.contentmgmt.modulemd.ModulemdApi;\n+import com.redhat.rhn.domain.user.User;\n+import com.redhat.rhn.manager.channel.ChannelManager;\n+import com.suse.manager.webui.utils.gson.ResultJson;\n+import org.apache.http.HttpStatus;\n+import spark.Request;\n+import spark.Response;\n+import spark.Spark;\n+\n+import static com.suse.manager.webui.utils.SparkApplicationHelper.json;\n+import static com.suse.manager.webui.utils.SparkApplicationHelper.withUser;\n+import static spark.Spark.get;\n+\n+/**\n+ * Spark controller ContentManagement AppStreams API\n+ */\n+public class AppStreamsApiController {\n+\n+    private static ModulemdApi api = new ModulemdApi();\n+\n+    private AppStreamsApiController() { }\n+\n+    /** Init routes for ContentManagement AppStreams Api.*/\n+    public static void initRoutes() {\n+        get(\"/manager/api/contentmanagement/appstreams/:channelId\",\n+                withUser(AppStreamsApiController::getModulesInChannel));\n+    }\n+\n+    /**\n+     * Return the JSON with all the available module streams for a specified modular channel\n+     *\n+     * @param req the http request\n+     * @param res the http response\n+     * @param user the current user\n+     * @return the JSON data\n+     */\n+    public static String getModulesInChannel(Request req, Response res, User user) {\n+        try {\n+            Channel channel = ChannelManager.lookupByIdAndUser(Long.parseLong(req.params(\"channelId\")), user);\n+            return json(res, ResultJson.success(api.getAllModulesInChannel(channel)));\n+        }\n+        catch (NumberFormatException e) {\n+            Spark.halt(HttpStatus.SC_BAD_REQUEST);\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4337f2be7c5b0d5ebf4504110c2e32e80b3b291a"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5Nzk4MTcx", "url": "https://github.com/uyuni-project/uyuni/pull/2192#pullrequestreview-409798171", "createdAt": "2020-05-12T08:08:37Z", "commit": {"oid": "4337f2be7c5b0d5ebf4504110c2e32e80b3b291a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODowODozN1rOGT6-rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODoxNToxOFrOGT7OoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0MjQ0NQ==", "bodyText": "Agreed, this is not needed", "url": "https://github.com/uyuni-project/uyuni/pull/2192#discussion_r423542445", "createdAt": "2020-05-12T08:08:37Z", "author": {"login": "cbosdo"}, "path": "java/code/src/com/suse/manager/webui/controllers/contentmanagement/handlers/AppStreamsApiController.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Copyright (c) 2019 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.webui.controllers.contentmanagement.handlers;\n+\n+import com.redhat.rhn.domain.channel.Channel;\n+import com.redhat.rhn.domain.contentmgmt.modulemd.ModulemdApi;\n+import com.redhat.rhn.domain.user.User;\n+import com.redhat.rhn.manager.channel.ChannelManager;\n+import com.suse.manager.webui.utils.gson.ResultJson;\n+import org.apache.http.HttpStatus;\n+import spark.Request;\n+import spark.Response;\n+import spark.Spark;\n+\n+import static com.suse.manager.webui.utils.SparkApplicationHelper.json;\n+import static com.suse.manager.webui.utils.SparkApplicationHelper.withUser;\n+import static spark.Spark.get;\n+\n+/**\n+ * Spark controller ContentManagement AppStreams API\n+ */\n+public class AppStreamsApiController {\n+\n+    private static ModulemdApi api = new ModulemdApi();\n+\n+    private AppStreamsApiController() { }\n+\n+    /** Init routes for ContentManagement AppStreams Api.*/\n+    public static void initRoutes() {\n+        get(\"/manager/api/contentmanagement/appstreams/:channelId\",\n+                withUser(AppStreamsApiController::getModulesInChannel));\n+    }\n+\n+    /**\n+     * Return the JSON with all the available module streams for a specified modular channel\n+     *\n+     * @param req the http request\n+     * @param res the http response\n+     * @param user the current user\n+     * @return the JSON data\n+     */\n+    public static String getModulesInChannel(Request req, Response res, User user) {\n+        try {\n+            Channel channel = ChannelManager.lookupByIdAndUser(Long.parseLong(req.params(\"channelId\")), user);\n+            return json(res, ResultJson.success(api.getAllModulesInChannel(channel)));\n+        }\n+        catch (NumberFormatException e) {\n+            Spark.halt(HttpStatus.SC_BAD_REQUEST);\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEzMDMzMQ=="}, "originalCommit": {"oid": "4337f2be7c5b0d5ebf4504110c2e32e80b3b291a"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0MzAzNw==", "bodyText": "is CLM an acronym the customers know of? I would rather have it expanded even if that make a long line.", "url": "https://github.com/uyuni-project/uyuni/pull/2192#discussion_r423543037", "createdAt": "2020-05-12T08:09:35Z", "author": {"login": "cbosdo"}, "path": "java/spacewalk-java.changes", "diffHunk": "@@ -1,3 +1,4 @@\n+- Implement module picker controls for CLM AppStream filters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4337f2be7c5b0d5ebf4504110c2e32e80b3b291a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NjUyOQ==", "bodyText": "You can replace <React.Fragment></React.Fragment> by this short version <></>", "url": "https://github.com/uyuni-project/uyuni/pull/2192#discussion_r423546529", "createdAt": "2020-05-12T08:15:18Z", "author": {"login": "cbosdo"}, "path": "web/html/src/manager/content-management/list-filters/appstreams/appstreams.js", "diffHunk": "@@ -0,0 +1,39 @@\n+// @flow\n+\n+import React, {useState} from 'react';\n+import {showErrorToastr} from 'components/toastr/toastr';\n+import TextInput from './text-input';\n+import SelectInput from './select-input';\n+import Network from 'utils/network';\n+\n+export default function AppStreams() {\n+  const [channels, setChannels] = useState([]);\n+  const [isBrowse, setBrowse] = useState(false);\n+  const [isLoading, setLoading] = useState(false);\n+\n+  const enableBrowse = () => {\n+    setLoading(true);\n+    Network.get(\"/rhn/manager/api/channels/modular\", \"application/json\").promise\n+      .then((channels) => {\n+        setChannels(channels.data);\n+        setLoading(false);\n+        setBrowse(true);\n+      }).catch(xhr => showErrorToastr(Network.responseErrorMessage(xhr)));\n+  }\n+\n+  return (\n+    isBrowse ?\n+      <SelectInput channels={channels}/>\n+    :\n+      <React.Fragment>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4337f2be7c5b0d5ebf4504110c2e32e80b3b291a"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzE3NTEy", "url": "https://github.com/uyuni-project/uyuni/pull/2192#pullrequestreview-411317512", "createdAt": "2020-05-13T21:36:55Z", "commit": {"oid": "ebf2f9b33e40e12011c44fdeed19b17fe40f21da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b0058790aa66f4989c81ec81146a007092c1979", "author": {"user": {"login": "cbbayburt", "name": "Can Bulut Bayburt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/8b0058790aa66f4989c81ec81146a007092c1979", "committedDate": "2020-05-22T10:09:55Z", "message": "Reformat 'list_modules' output object in mgr-libmod"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74656a5aa9e3c220cfce0ebf35a6c39846e4c2a3", "author": {"user": {"login": "cbbayburt", "name": "Can Bulut Bayburt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/74656a5aa9e3c220cfce0ebf35a6c39846e4c2a3", "committedDate": "2020-05-22T10:09:59Z", "message": "Add an endpoint to Channels API to retrieve modular channels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3c817a77b9c50b3a85ee03c0bf4ae49a3894123", "author": {"user": {"login": "cbbayburt", "name": "Can Bulut Bayburt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/c3c817a77b9c50b3a85ee03c0bf4ae49a3894123", "committedDate": "2020-05-22T10:09:59Z", "message": "Implement 'list_modules' mgr-libmod call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "926d6e3d17a9409ad9b720b5139864661c9f6959", "author": {"user": {"login": "cbbayburt", "name": "Can Bulut Bayburt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/926d6e3d17a9409ad9b720b5139864661c9f6959", "committedDate": "2020-05-22T10:10:50Z", "message": "Implement module picker controls for CLM AppStream filters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebf2f9b33e40e12011c44fdeed19b17fe40f21da", "author": {"user": {"login": "cbbayburt", "name": "Can Bulut Bayburt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/ebf2f9b33e40e12011c44fdeed19b17fe40f21da", "committedDate": "2020-05-12T15:13:59Z", "message": "fixup! Implement module picker controls for CLM AppStream filters"}, "afterCommit": {"oid": "926d6e3d17a9409ad9b720b5139864661c9f6959", "author": {"user": {"login": "cbbayburt", "name": "Can Bulut Bayburt"}}, "url": "https://github.com/uyuni-project/uyuni/commit/926d6e3d17a9409ad9b720b5139864661c9f6959", "committedDate": "2020-05-22T10:10:50Z", "message": "Implement module picker controls for CLM AppStream filters"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1422, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}