{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDQxOTUw", "number": 2325, "title": "Toggle virtpoller beacon when toggling the virtualization entitlement", "bodyText": "What does this PR change?\nWith the optimizations performed in the pillar generation, the\nvirtpoller beacon was no longer added. To enable or disable the\nvirtpoller beacon we need to:\n\ngenerate a separate pillar file with the beacon configuration\nrefresh the pillar data on the minion\n\nSince there could be other beacons setup in other pillar files, the\nsuma-minion.py pillar needs to deep merge each pillar data.\nSee bsc#1172962\nGUI diff\nNo difference.\n\n DONE\n\nDocumentation\n\n\nNo documentation needed: no UI difference\n\n\n DONE\n\n\nTest coverage\n\n\nNo tests: hard to cover\n\n\n DONE\n\n\nLinks\nFixes SUSE/spacewalk#11731\n\n DONE\n\nChangelogs\nIf you don't need a changelog check, please mark this checkbox:\n\n No changelog needed\n\nIf you uncheck the checkbox after the PR is created, you will need to re-run changelog_test (see below)\nRe-run a test\nIf you need to re-run a test, please mark the related checkbox, it will be unchecked automatically once it has re-run:\n\n Re-run test \"changelog_test\"\n Re-run test \"backend_unittests_pgsql\"\n Re-run test \"java_lint_checkstyle\"\n Re-run test \"java_pgsql_tests\"\n Re-run test \"ruby_rubocop\"\n Re-run test \"schema_migration_test_oracle\"\n Re-run test \"schema_migration_test_pgsql\"\n Re-run test \"susemanager_unittests\"\n Re-run test \"javascript_lint\"\n Re-run test \"spacecmd_unittests\"", "createdAt": "2020-06-16T07:59:35Z", "url": "https://github.com/uyuni-project/uyuni/pull/2325", "merged": true, "mergeCommit": {"oid": "07e4aed2a0093d7d87b48b2170d7e86ec21b01f9"}, "closed": true, "closedAt": "2020-06-17T13:37:00Z", "author": {"login": "cbosdo"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrywY8AFqTQzMTM3MTg3OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsJ4djAFqTQzMjQwMTIyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMzcxODc5", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-431371879", "createdAt": "2020-06-16T10:32:55Z", "commit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDozMjo1NVrOGkVUkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDozMjo1NVrOGkVUkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc1MTI0OA==", "bodyText": "Shouldn't this be called \"SaltVirtManager\" ?", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r440751248", "createdAt": "2020-06-16T10:32:55Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/suse/manager/virtualization/VirtManagerSalt.java", "diffHunk": "@@ -38,6 +44,8 @@\n public class VirtManagerSalt implements VirtManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMzkxOTUz", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-431391953", "createdAt": "2020-06-16T11:01:58Z", "commit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMTowMTo1OVrOGkWQIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMTowMTo1OVrOGkWQIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2NjQ5OA==", "bodyText": "why is this needed?", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r440766498", "createdAt": "2020-06-16T11:01:59Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/suse/manager/virtualization/VirtManagerSalt.java", "diffHunk": "@@ -166,6 +174,14 @@ public void updateLibvirtEngine(MinionServer minion) {\n         pillar.put(\"virt_entitled\", minion.hasVirtualizationEntitlement());\n         saltApi.callSync(State.apply(Collections.singletonList(\"virt.engine-events\"),\n                 Optional.of(pillar)), minion.getMinionId());\n+\n+        if (minion.hasVirtualizationEntitlement()) {\n+            minionVirtualizationPillarFileManager.generatePillarFile(minion);\n+        }\n+        else {\n+            minionVirtualizationPillarFileManager.removePillarFile(minion.getMinionId());\n+        }\n+        SaltService.INSTANCE.refreshPillar(new MinionList(minion.getMinionId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMzkzNjYy", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-431393662", "createdAt": "2020-06-16T11:04:28Z", "commit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMTowNDoyOFrOGkWU6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMTowNjoxOVrOGkWYiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2NzcyMw==", "bodyText": "why is this needed here?", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r440767723", "createdAt": "2020-06-16T11:04:28Z", "author": {"login": "chiaradiamarcelo"}, "path": "susemanager-utils/susemanager-sls/modules/pillar/suma_minion.py", "diffHunk": "@@ -100,7 +100,10 @@ def ext_pillar(minion_id, *args):\n         data_filename = os.path.join(MANAGER_PILLAR_DATA_PATH, minion_pillar_filename_prefix + suffix)\n         if os.path.exists(data_filename):\n             try:\n-                ret.update(yaml.load(open(data_filename).read(), Loader=yaml.FullLoader))\n+                ret = salt.utils.dictupdate.merge(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2ODY0OQ==", "bodyText": "We should probably make a test for this", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r440768649", "createdAt": "2020-06-16T11:06:19Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/suse/manager/webui/services/pillar/MinionVirtualizationPillarGenerator.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.webui.services.pillar;\n+\n+import static com.suse.manager.webui.services.SaltConstants.PILLAR_DATA_FILE_EXT;\n+import static com.suse.manager.webui.services.SaltConstants.PILLAR_DATA_FILE_PREFIX;\n+\n+import com.redhat.rhn.common.conf.Config;\n+import com.redhat.rhn.common.conf.ConfigDefaults;\n+import com.redhat.rhn.domain.server.MinionServer;\n+\n+import com.suse.manager.webui.utils.SaltPillar;\n+\n+import org.apache.log4j.Logger;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Class for generating pillar data for the virtual hosts\n+ */\n+public class MinionVirtualizationPillarGenerator implements MinionPillarGenerator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDEwMzIw", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-431410320", "createdAt": "2020-06-16T11:30:10Z", "commit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMTozMDoxMFrOGkXF4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMTozMDoxMFrOGkXF4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4MDI1Nw==", "bodyText": "while you are at it, maybe you can fix this part https://github.com/uyuni-project/uyuni/pull/2325/files?file-filters%5B%5D=.java#diff-8cc725b56315ba8fd87da99a53fb4fcdL76-R88\nThe conditions here should be inverted, as in https://github.com/uyuni-project/uyuni/blob/master/java/code/src/com/redhat/rhn/manager/system/entitling/SystemEntitler.java#L128-L134", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r440780257", "createdAt": "2020-06-16T11:30:10Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/redhat/rhn/manager/system/entitling/SystemUnentitler.java", "diffHunk": "@@ -85,6 +95,10 @@ public void removeServerEntitlement(Server server, Entitlement ent) {\n                 }\n             });\n         }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNjM3MTg2", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-431637186", "createdAt": "2020-06-16T15:36:05Z", "commit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNTozNjowNVrOGkhVaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNTozNjowNVrOGkhVaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0ODA3Mw==", "bodyText": "Thanks for setting monitoringManager here in the constructor now, maybe we no longer need to initialize it above?", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r440948073", "createdAt": "2020-06-16T15:36:05Z", "author": {"login": "renner"}, "path": "java/code/src/com/redhat/rhn/manager/system/entitling/SystemUnentitler.java", "diffHunk": "@@ -40,8 +41,17 @@\n \n     private static final Logger LOG = Logger.getLogger(SystemUnentitler.class);\n \n-    public static final SystemUnentitler INSTANCE = new SystemUnentitler();\n     private MonitoringManager monitoringManager = new FormulaMonitoringManager();\n+    private VirtManager virtManager;\n+\n+    /**\n+     * @param virtManagerIn instance for managing virtual machines.\n+     * @param monitoringManagerIn instance for handling monitoring configuration.\n+     */\n+    public SystemUnentitler(VirtManager virtManagerIn, MonitoringManager monitoringManagerIn) {\n+        this.virtManager = virtManagerIn;\n+        this.monitoringManager = monitoringManagerIn;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/0dadb6e6ea787ca6b8ba539a3f52c9cf23dc5f18", "committedDate": "2020-06-16T07:51:27Z", "message": "Toggle virtpoller beacon when toggling the virtualization entitlement\n\nWith the optimizations performed in the pillar generation, the\nvirtpoller beacon was no longer added. To enable or disable the\nvirtpoller beacon we need to:\n\n * generate a separate pillar file with the beacon configuration\n * refresh the pillar data on the minion\n\nSince there could be other beacons setup in other pillar files, the\nsuma-minion.py pillar needs to deep merge each pillar data.\n\nSee bsc#1172962"}, "afterCommit": {"oid": "83282521055a0d2881247011dc40b36f4bf462c9", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/83282521055a0d2881247011dc40b36f4bf462c9", "committedDate": "2020-06-16T16:54:24Z", "message": "Fix cucumber testsuite to actually test virtpoller is enabled\n\nIn order to test if the virtpoller is enabled when adding the\nvirtualization host entitlement we need to not set an additional\nconfiguration to shorten its interval. This can be done at the sumaform\nlevel thought."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83282521055a0d2881247011dc40b36f4bf462c9", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/83282521055a0d2881247011dc40b36f4bf462c9", "committedDate": "2020-06-16T16:54:24Z", "message": "Fix cucumber testsuite to actually test virtpoller is enabled\n\nIn order to test if the virtpoller is enabled when adding the\nvirtualization host entitlement we need to not set an additional\nconfiguration to shorten its interval. This can be done at the sumaform\nlevel thought."}, "afterCommit": {"oid": "176f0e7efb6aef40652d685bf7ed2e75194f2345", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/176f0e7efb6aef40652d685bf7ed2e75194f2345", "committedDate": "2020-06-16T18:00:35Z", "message": "Fix cucumber testsuite to actually test virtpoller is enabled\n\nIn order to test if the virtpoller is enabled when adding the\nvirtualization host entitlement we need to not set an additional\nconfiguration to shorten its interval. This can be done at the sumaform\nlevel thought."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "176f0e7efb6aef40652d685bf7ed2e75194f2345", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/176f0e7efb6aef40652d685bf7ed2e75194f2345", "committedDate": "2020-06-16T18:00:35Z", "message": "Fix cucumber testsuite to actually test virtpoller is enabled\n\nIn order to test if the virtpoller is enabled when adding the\nvirtualization host entitlement we need to not set an additional\nconfiguration to shorten its interval. This can be done at the sumaform\nlevel thought."}, "afterCommit": {"oid": "d80555f0c6541893f5af8fddf93d5004a0d96d29", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d80555f0c6541893f5af8fddf93d5004a0d96d29", "committedDate": "2020-06-17T08:37:59Z", "message": "Fix cucumber testsuite to actually test virtpoller is enabled\n\nIn order to test if the virtpoller is enabled when adding the\nvirtualization host entitlement we need to not set an additional\nconfiguration to shorten its interval. This can be done at the sumaform\nlevel thought."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d80555f0c6541893f5af8fddf93d5004a0d96d29", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/d80555f0c6541893f5af8fddf93d5004a0d96d29", "committedDate": "2020-06-17T08:37:59Z", "message": "Fix cucumber testsuite to actually test virtpoller is enabled\n\nIn order to test if the virtpoller is enabled when adding the\nvirtualization host entitlement we need to not set an additional\nconfiguration to shorten its interval. This can be done at the sumaform\nlevel thought."}, "afterCommit": {"oid": "6a57b51fa139c0403dd160051caafb6f79e1d37a", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/6a57b51fa139c0403dd160051caafb6f79e1d37a", "committedDate": "2020-06-17T09:18:54Z", "message": "Toggle virtpoller beacon when toggling the virtualization entitlement\n\nWith the optimizations performed in the pillar generation, the\nvirtpoller beacon was no longer added. To enable or disable the\nvirtpoller beacon we need to:\n\n * generate a separate pillar file with the beacon configuration\n * refresh the pillar data on the minion\n\nSince there could be other beacons setup in other pillar files, the\nsuma-minion.py pillar needs to deep merge each pillar data.\n\nSee bsc#1172962"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a57b51fa139c0403dd160051caafb6f79e1d37a", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/6a57b51fa139c0403dd160051caafb6f79e1d37a", "committedDate": "2020-06-17T09:18:54Z", "message": "Toggle virtpoller beacon when toggling the virtualization entitlement\n\nWith the optimizations performed in the pillar generation, the\nvirtpoller beacon was no longer added. To enable or disable the\nvirtpoller beacon we need to:\n\n * generate a separate pillar file with the beacon configuration\n * refresh the pillar data on the minion\n\nSince there could be other beacons setup in other pillar files, the\nsuma-minion.py pillar needs to deep merge each pillar data.\n\nSee bsc#1172962"}, "afterCommit": {"oid": "3999acd3de936d6b9806a148005ce24f3777b364", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/3999acd3de936d6b9806a148005ce24f3777b364", "committedDate": "2020-06-17T09:25:07Z", "message": "Toggle virtpoller beacon when toggling the virtualization entitlement\n\nWith the optimizations performed in the pillar generation, the\nvirtpoller beacon was no longer added. To enable or disable the\nvirtpoller beacon we need to:\n\n * generate a separate pillar file with the beacon configuration\n * refresh the pillar data on the minion\n\nSince there could be other beacons setup in other pillar files, the\nsuma-minion.py pillar needs to deep merge each pillar data.\n\nSee bsc#1172962"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3999acd3de936d6b9806a148005ce24f3777b364", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/3999acd3de936d6b9806a148005ce24f3777b364", "committedDate": "2020-06-17T09:25:07Z", "message": "Toggle virtpoller beacon when toggling the virtualization entitlement\n\nWith the optimizations performed in the pillar generation, the\nvirtpoller beacon was no longer added. To enable or disable the\nvirtpoller beacon we need to:\n\n * generate a separate pillar file with the beacon configuration\n * refresh the pillar data on the minion\n\nSince there could be other beacons setup in other pillar files, the\nsuma-minion.py pillar needs to deep merge each pillar data.\n\nSee bsc#1172962"}, "afterCommit": {"oid": "1248130d03910ba2dab4dd91530fe3e9635b9fe5", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/1248130d03910ba2dab4dd91530fe3e9635b9fe5", "committedDate": "2020-06-17T12:49:34Z", "message": "Toggle virtpoller beacon when toggling the virtualization entitlement\n\nWith the optimizations performed in the pillar generation, the\nvirtpoller beacon was no longer added. To enable or disable the\nvirtpoller beacon we need to:\n\n * generate a separate pillar file with the beacon configuration\n * refresh the pillar data on the minion\n\nSince there could be other beacons setup in other pillar files, the\nsuma-minion.py pillar needs to deep merge each pillar data.\n\nSee bsc#1172962"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzc2MjE3", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-432376217", "createdAt": "2020-06-17T13:02:02Z", "commit": {"oid": "1248130d03910ba2dab4dd91530fe3e9635b9fe5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowMjowMlrOGlEpPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowMjowMlrOGlEpPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyNjU5MA==", "bodyText": "line 87 ServerGroupManager.getInstance().updatePillarAfterGroupUpdateForServers(Arrays.asList(s));\nshould be executed despite the minion has a monitoring entitlement or not. So it should be outside this 'if' statement", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r441526590", "createdAt": "2020-06-17T13:02:02Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/redhat/rhn/manager/system/entitling/SystemUnentitler.java", "diffHunk": "@@ -73,8 +82,8 @@ public void removeServerEntitlement(Server server, Entitlement ent) {\n             unentitleServer(server, ent);\n         }\n \n-        if (EntitlementManager.MONITORING.equals(ent)) {\n-            server.asMinionServer().ifPresent(s -> {\n+        server.asMinionServer().ifPresent(s -> {\n+            if (EntitlementManager.MONITORING.equals(ent)) {\n                 ServerGroupManager.getInstance().updatePillarAfterGroupUpdateForServers(Arrays.asList(s));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1248130d03910ba2dab4dd91530fe3e9635b9fe5"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzgyMDY4", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-432382068", "createdAt": "2020-06-17T13:08:53Z", "commit": {"oid": "1248130d03910ba2dab4dd91530fe3e9635b9fe5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowODo1NFrOGlE6Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowODo1NFrOGlE6Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMDk1OQ==", "bodyText": "I guess you missed the \"asserts\" here", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r441530959", "createdAt": "2020-06-17T13:08:54Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/suse/manager/webui/services/pillar/test/MinionVirtualizationPillarGeneratorTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.webui.services.pillar.test;\n+\n+import static com.suse.manager.webui.services.SaltConstants.PILLAR_DATA_FILE_EXT;\n+import static com.suse.manager.webui.services.SaltConstants.PILLAR_DATA_FILE_PREFIX;\n+\n+import com.redhat.rhn.domain.server.MinionServer;\n+import com.redhat.rhn.domain.server.test.MinionServerFactoryTest;\n+import com.redhat.rhn.testing.BaseTestCaseWithUser;\n+\n+import com.suse.manager.webui.services.pillar.MinionPillarFileManager;\n+import com.suse.manager.webui.services.pillar.MinionVirtualizationPillarGenerator;\n+\n+import org.yaml.snakeyaml.Yaml;\n+\n+import java.io.FileInputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Map;\n+\n+/**\n+ * Tests for {@link MinionVirtualizationPillarGenerator}\n+ */\n+public class MinionVirtualizationPillarGeneratorTest extends BaseTestCaseWithUser {\n+\n+    protected MinionPillarFileManager minionVirtualizationPillarFileManager =\n+            new MinionPillarFileManager(new MinionVirtualizationPillarGenerator());\n+\n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        minionVirtualizationPillarFileManager.setPillarDataPath(tmpPillarRoot.toAbsolutePath());\n+    }\n+\n+    public void testGenerateVirtualizationPillarData() throws Exception {\n+        MinionServer minion = MinionServerFactoryTest.createTestMinionServer(user);\n+\n+        this.minionVirtualizationPillarFileManager.generatePillarFile(minion);\n+\n+        Path filePath = tmpPillarRoot.resolve(PILLAR_DATA_FILE_PREFIX + \"_\" +\n+                minion.getMinionId() + \"_\" + \"virtualization\" + \".\" +\n+                PILLAR_DATA_FILE_EXT);\n+\n+        assertTrue(Files.exists(filePath));\n+\n+        Map<String, Object> map;\n+        try (FileInputStream fi = new FileInputStream(filePath.toFile())) {\n+            map = new Yaml().loadAs(fi, Map.class);\n+        }\n+\n+        assertTrue(map.containsKey(\"beacons\"));\n+        Map<String, Object> beacons = (Map<String, Object>) map.get(\"beacons\");\n+\n+        assertTrue(beacons.containsKey(\"virtpoller\"));\n+        Map<String, Object> virtpoller = (Map<String, Object>)beacons.get(\"virtpoller\");\n+\n+        virtpoller.containsKey(\"cache_file\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1248130d03910ba2dab4dd91530fe3e9635b9fe5"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzgyMzE4", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-432382318", "createdAt": "2020-06-17T13:09:13Z", "commit": {"oid": "1248130d03910ba2dab4dd91530fe3e9635b9fe5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowOToxM1rOGlE7AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowOToxM1rOGlE7AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMTEzNg==", "bodyText": "same", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r441531136", "createdAt": "2020-06-17T13:09:13Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/suse/manager/webui/services/pillar/test/MinionVirtualizationPillarGeneratorTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.webui.services.pillar.test;\n+\n+import static com.suse.manager.webui.services.SaltConstants.PILLAR_DATA_FILE_EXT;\n+import static com.suse.manager.webui.services.SaltConstants.PILLAR_DATA_FILE_PREFIX;\n+\n+import com.redhat.rhn.domain.server.MinionServer;\n+import com.redhat.rhn.domain.server.test.MinionServerFactoryTest;\n+import com.redhat.rhn.testing.BaseTestCaseWithUser;\n+\n+import com.suse.manager.webui.services.pillar.MinionPillarFileManager;\n+import com.suse.manager.webui.services.pillar.MinionVirtualizationPillarGenerator;\n+\n+import org.yaml.snakeyaml.Yaml;\n+\n+import java.io.FileInputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Map;\n+\n+/**\n+ * Tests for {@link MinionVirtualizationPillarGenerator}\n+ */\n+public class MinionVirtualizationPillarGeneratorTest extends BaseTestCaseWithUser {\n+\n+    protected MinionPillarFileManager minionVirtualizationPillarFileManager =\n+            new MinionPillarFileManager(new MinionVirtualizationPillarGenerator());\n+\n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        minionVirtualizationPillarFileManager.setPillarDataPath(tmpPillarRoot.toAbsolutePath());\n+    }\n+\n+    public void testGenerateVirtualizationPillarData() throws Exception {\n+        MinionServer minion = MinionServerFactoryTest.createTestMinionServer(user);\n+\n+        this.minionVirtualizationPillarFileManager.generatePillarFile(minion);\n+\n+        Path filePath = tmpPillarRoot.resolve(PILLAR_DATA_FILE_PREFIX + \"_\" +\n+                minion.getMinionId() + \"_\" + \"virtualization\" + \".\" +\n+                PILLAR_DATA_FILE_EXT);\n+\n+        assertTrue(Files.exists(filePath));\n+\n+        Map<String, Object> map;\n+        try (FileInputStream fi = new FileInputStream(filePath.toFile())) {\n+            map = new Yaml().loadAs(fi, Map.class);\n+        }\n+\n+        assertTrue(map.containsKey(\"beacons\"));\n+        Map<String, Object> beacons = (Map<String, Object>) map.get(\"beacons\");\n+\n+        assertTrue(beacons.containsKey(\"virtpoller\"));\n+        Map<String, Object> virtpoller = (Map<String, Object>)beacons.get(\"virtpoller\");\n+\n+        virtpoller.containsKey(\"cache_file\");\n+        virtpoller.containsKey(\"expire_time\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1248130d03910ba2dab4dd91530fe3e9635b9fe5"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzgyNDI2", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-432382426", "createdAt": "2020-06-17T13:09:20Z", "commit": {"oid": "1248130d03910ba2dab4dd91530fe3e9635b9fe5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowOToyMFrOGlE7Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzowOToyMFrOGlE7Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMTIxNA==", "bodyText": "same", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r441531214", "createdAt": "2020-06-17T13:09:20Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/suse/manager/webui/services/pillar/test/MinionVirtualizationPillarGeneratorTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.webui.services.pillar.test;\n+\n+import static com.suse.manager.webui.services.SaltConstants.PILLAR_DATA_FILE_EXT;\n+import static com.suse.manager.webui.services.SaltConstants.PILLAR_DATA_FILE_PREFIX;\n+\n+import com.redhat.rhn.domain.server.MinionServer;\n+import com.redhat.rhn.domain.server.test.MinionServerFactoryTest;\n+import com.redhat.rhn.testing.BaseTestCaseWithUser;\n+\n+import com.suse.manager.webui.services.pillar.MinionPillarFileManager;\n+import com.suse.manager.webui.services.pillar.MinionVirtualizationPillarGenerator;\n+\n+import org.yaml.snakeyaml.Yaml;\n+\n+import java.io.FileInputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Map;\n+\n+/**\n+ * Tests for {@link MinionVirtualizationPillarGenerator}\n+ */\n+public class MinionVirtualizationPillarGeneratorTest extends BaseTestCaseWithUser {\n+\n+    protected MinionPillarFileManager minionVirtualizationPillarFileManager =\n+            new MinionPillarFileManager(new MinionVirtualizationPillarGenerator());\n+\n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        minionVirtualizationPillarFileManager.setPillarDataPath(tmpPillarRoot.toAbsolutePath());\n+    }\n+\n+    public void testGenerateVirtualizationPillarData() throws Exception {\n+        MinionServer minion = MinionServerFactoryTest.createTestMinionServer(user);\n+\n+        this.minionVirtualizationPillarFileManager.generatePillarFile(minion);\n+\n+        Path filePath = tmpPillarRoot.resolve(PILLAR_DATA_FILE_PREFIX + \"_\" +\n+                minion.getMinionId() + \"_\" + \"virtualization\" + \".\" +\n+                PILLAR_DATA_FILE_EXT);\n+\n+        assertTrue(Files.exists(filePath));\n+\n+        Map<String, Object> map;\n+        try (FileInputStream fi = new FileInputStream(filePath.toFile())) {\n+            map = new Yaml().loadAs(fi, Map.class);\n+        }\n+\n+        assertTrue(map.containsKey(\"beacons\"));\n+        Map<String, Object> beacons = (Map<String, Object>) map.get(\"beacons\");\n+\n+        assertTrue(beacons.containsKey(\"virtpoller\"));\n+        Map<String, Object> virtpoller = (Map<String, Object>)beacons.get(\"virtpoller\");\n+\n+        virtpoller.containsKey(\"cache_file\");\n+        virtpoller.containsKey(\"expire_time\");\n+        virtpoller.containsKey(\"interval\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1248130d03910ba2dab4dd91530fe3e9635b9fe5"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b9b9bdab3ff2c275e303f32e47ea9ed46c17185", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/6b9b9bdab3ff2c275e303f32e47ea9ed46c17185", "committedDate": "2020-06-17T13:11:02Z", "message": "Move refreshPillar from SystemQuery to SaltApi\n\nSince refreshing pillars is not really querying systems, moving to it\nwhere it belongs: SaltApi."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b3f92b016e387cef103c9ab1ead5645930f0c68", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/7b3f92b016e387cef103c9ab1ead5645930f0c68", "committedDate": "2020-06-17T13:11:03Z", "message": "Toggle virtpoller beacon when toggling the virtualization entitlement\n\nWith the optimizations performed in the pillar generation, the\nvirtpoller beacon was no longer added. To enable or disable the\nvirtpoller beacon we need to:\n\n * generate a separate pillar file with the beacon configuration\n * refresh the pillar data on the minion\n\nSince there could be other beacons setup in other pillar files, the\nsuma-minion.py pillar needs to deep merge each pillar data.\n\nSee bsc#1172962"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1248130d03910ba2dab4dd91530fe3e9635b9fe5", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/1248130d03910ba2dab4dd91530fe3e9635b9fe5", "committedDate": "2020-06-17T12:49:34Z", "message": "Toggle virtpoller beacon when toggling the virtualization entitlement\n\nWith the optimizations performed in the pillar generation, the\nvirtpoller beacon was no longer added. To enable or disable the\nvirtpoller beacon we need to:\n\n * generate a separate pillar file with the beacon configuration\n * refresh the pillar data on the minion\n\nSince there could be other beacons setup in other pillar files, the\nsuma-minion.py pillar needs to deep merge each pillar data.\n\nSee bsc#1172962"}, "afterCommit": {"oid": "7b3f92b016e387cef103c9ab1ead5645930f0c68", "author": {"user": {"login": "cbosdo", "name": "Cedric Bosdonnat"}}, "url": "https://github.com/uyuni-project/uyuni/commit/7b3f92b016e387cef103c9ab1ead5645930f0c68", "committedDate": "2020-06-17T13:11:03Z", "message": "Toggle virtpoller beacon when toggling the virtualization entitlement\n\nWith the optimizations performed in the pillar generation, the\nvirtpoller beacon was no longer added. To enable or disable the\nvirtpoller beacon we need to:\n\n * generate a separate pillar file with the beacon configuration\n * refresh the pillar data on the minion\n\nSince there could be other beacons setup in other pillar files, the\nsuma-minion.py pillar needs to deep merge each pillar data.\n\nSee bsc#1172962"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzg1OTQ3", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-432385947", "createdAt": "2020-06-17T13:13:07Z", "commit": {"oid": "7b3f92b016e387cef103c9ab1ead5645930f0c68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzoxMzowN1rOGlFFOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzoxMzowN1rOGlFFOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMzc1Mw==", "bodyText": "I guess you missed the asserts here", "url": "https://github.com/uyuni-project/uyuni/pull/2325#discussion_r441533753", "createdAt": "2020-06-17T13:13:07Z", "author": {"login": "chiaradiamarcelo"}, "path": "java/code/src/com/suse/manager/webui/services/pillar/test/MinionVirtualizationPillarGeneratorTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * Copyright (c) 2020 SUSE LLC\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+package com.suse.manager.webui.services.pillar.test;\n+\n+import static com.suse.manager.webui.services.SaltConstants.PILLAR_DATA_FILE_EXT;\n+import static com.suse.manager.webui.services.SaltConstants.PILLAR_DATA_FILE_PREFIX;\n+\n+import com.redhat.rhn.domain.server.MinionServer;\n+import com.redhat.rhn.domain.server.test.MinionServerFactoryTest;\n+import com.redhat.rhn.testing.BaseTestCaseWithUser;\n+\n+import com.suse.manager.webui.services.pillar.MinionPillarFileManager;\n+import com.suse.manager.webui.services.pillar.MinionVirtualizationPillarGenerator;\n+\n+import org.yaml.snakeyaml.Yaml;\n+\n+import java.io.FileInputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Map;\n+\n+/**\n+ * Tests for {@link MinionVirtualizationPillarGenerator}\n+ */\n+public class MinionVirtualizationPillarGeneratorTest extends BaseTestCaseWithUser {\n+\n+    protected MinionPillarFileManager minionVirtualizationPillarFileManager =\n+            new MinionPillarFileManager(new MinionVirtualizationPillarGenerator());\n+\n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        minionVirtualizationPillarFileManager.setPillarDataPath(tmpPillarRoot.toAbsolutePath());\n+    }\n+\n+    public void testGenerateVirtualizationPillarData() throws Exception {\n+        MinionServer minion = MinionServerFactoryTest.createTestMinionServer(user);\n+\n+        this.minionVirtualizationPillarFileManager.generatePillarFile(minion);\n+\n+        Path filePath = tmpPillarRoot.resolve(PILLAR_DATA_FILE_PREFIX + \"_\" +\n+                minion.getMinionId() + \"_\" + \"virtualization\" + \".\" +\n+                PILLAR_DATA_FILE_EXT);\n+\n+        assertTrue(Files.exists(filePath));\n+\n+        Map<String, Object> map;\n+        try (FileInputStream fi = new FileInputStream(filePath.toFile())) {\n+            map = new Yaml().loadAs(fi, Map.class);\n+        }\n+\n+        assertTrue(map.containsKey(\"beacons\"));\n+        Map<String, Object> beacons = (Map<String, Object>) map.get(\"beacons\");\n+\n+        assertTrue(beacons.containsKey(\"virtpoller\"));\n+        Map<String, Object> virtpoller = (Map<String, Object>)beacons.get(\"virtpoller\");\n+\n+        assertTrue(virtpoller.containsKey(\"cache_file\"));\n+        assertTrue(virtpoller.containsKey(\"expire_time\"));\n+        assertTrue(virtpoller.containsKey(\"interval\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b3f92b016e387cef103c9ab1ead5645930f0c68"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzg2NzQ3", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-432386747", "createdAt": "2020-06-17T13:14:05Z", "commit": {"oid": "7b3f92b016e387cef103c9ab1ead5645930f0c68"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzkwNjU4", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-432390658", "createdAt": "2020-06-17T13:18:27Z", "commit": {"oid": "7b3f92b016e387cef103c9ab1ead5645930f0c68"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNDAxMjI4", "url": "https://github.com/uyuni-project/uyuni/pull/2325#pullrequestreview-432401228", "createdAt": "2020-06-17T13:29:34Z", "commit": {"oid": "7b3f92b016e387cef103c9ab1ead5645930f0c68"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1328, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}