{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5ODc3NDIy", "number": 1854, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxNTo0MjoyNlrODcbI8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODo0NzowN1rODcjgWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTMxMzc4OnYy", "diffSide": "RIGHT", "path": "testsuite/features/upload_files/salt_event_parser.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxNTo0MjoyNlrOFkeGdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODo1MzozMVrOFkp-qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4NjIyOQ==", "bodyText": "If we want to perform a continue in the iteration, I'd move the except block a line after, as following code is also using j content:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                except ValueError as e:\n          \n          \n            \n                try:\n          \n          \n            \n                    j = json.loads(\"\".join(error))\n          \n          \n            \n                    if not \"return\" in j:\n          \n          \n            \n                        break\n          \n          \n            \n                except ValueError as e:\n          \n          \n            \n                    print(\"JSON cannot be parsed due {0}\".format(e))\n          \n          \n            \n                    continue\n          \n          \n            \n                for k in j[\"return\"]:\n          \n          \n            \n                    if not j[\"return\"][k][\"result\"]:\n          \n          \n            \n                        failure_count += 1\n          \n          \n            \n                        print(\"\\n# Failure\", failure_count, \", _stamp:\", j['_stamp'], json.dumps(j[\"return\"][k], sort_keys=True, indent=4))\n          \n      \n    \n    \n  \n\nAlso, we can let it as it is, but making sure on next steps that we check if j has content to process.", "url": "https://github.com/uyuni-project/uyuni/pull/1854#discussion_r373786229", "createdAt": "2020-02-01T15:42:26Z", "author": {"login": "srbarrios"}, "path": "testsuite/features/upload_files/salt_event_parser.py", "diffHunk": "@@ -5,21 +5,25 @@\n \n # open salt event log and create correct json from it\n errors = []\n-item = [] \n+item = []\n f = open('/var/log/rhn/salt-event.log', \"r\")\n for line in f.readlines():\n     item.append(line)\n     if re.search(r\"^\\}\", line):\n         if '\\\"result\\\": false' in \"\".join(item):\n             item[0] = \"{\"\n             errors.append(item)\n-        item = [] \n+        item = []\n f.close()\n \n # parse json and find results ending as failed\n failure_count = 0\n for error in errors:\n-    j = json.loads(\"\".join(error))\n+    try:\n+        j = json.loads(\"\".join(error))\n+    except ValueError as e:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07a14ce0c27ca790525d158fb6176dcc31cb3d60"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4MDg0Mw==", "bodyText": "@srbarrios Change included, thanks ;-)", "url": "https://github.com/uyuni-project/uyuni/pull/1854#discussion_r373980843", "createdAt": "2020-02-03T08:53:31Z", "author": {"login": "lkotek"}, "path": "testsuite/features/upload_files/salt_event_parser.py", "diffHunk": "@@ -5,21 +5,25 @@\n \n # open salt event log and create correct json from it\n errors = []\n-item = [] \n+item = []\n f = open('/var/log/rhn/salt-event.log', \"r\")\n for line in f.readlines():\n     item.append(line)\n     if re.search(r\"^\\}\", line):\n         if '\\\"result\\\": false' in \"\".join(item):\n             item[0] = \"{\"\n             errors.append(item)\n-        item = [] \n+        item = []\n f.close()\n \n # parse json and find results ending as failed\n failure_count = 0\n for error in errors:\n-    j = json.loads(\"\".join(error))\n+    try:\n+        j = json.loads(\"\".join(error))\n+    except ValueError as e:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4NjIyOQ=="}, "originalCommit": {"oid": "07a14ce0c27ca790525d158fb6176dcc31cb3d60"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjY4NDQxOnYy", "diffSide": "RIGHT", "path": "testsuite/features/upload_files/salt_event_parser.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODo0NzowN1rOFkp0Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOTowNzo1NlrOFkqXEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk3ODE1MA==", "bodyText": "due to", "url": "https://github.com/uyuni-project/uyuni/pull/1854#discussion_r373978150", "createdAt": "2020-02-03T08:47:07Z", "author": {"login": "Bischoff"}, "path": "testsuite/features/upload_files/salt_event_parser.py", "diffHunk": "@@ -5,21 +5,25 @@\n \n # open salt event log and create correct json from it\n errors = []\n-item = [] \n+item = []\n f = open('/var/log/rhn/salt-event.log', \"r\")\n for line in f.readlines():\n     item.append(line)\n     if re.search(r\"^\\}\", line):\n         if '\\\"result\\\": false' in \"\".join(item):\n             item[0] = \"{\"\n             errors.append(item)\n-        item = [] \n+        item = []\n f.close()\n \n # parse json and find results ending as failed\n failure_count = 0\n for error in errors:\n-    j = json.loads(\"\".join(error))\n+    try:\n+        j = json.loads(\"\".join(error))\n+    except ValueError as e:\n+        print(\"JSON cannot be parsed due {0}\".format(e))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07a14ce0c27ca790525d158fb6176dcc31cb3d60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4NzA5MA==", "bodyText": "Thanks :-) Corrected.", "url": "https://github.com/uyuni-project/uyuni/pull/1854#discussion_r373987090", "createdAt": "2020-02-03T09:07:56Z", "author": {"login": "lkotek"}, "path": "testsuite/features/upload_files/salt_event_parser.py", "diffHunk": "@@ -5,21 +5,25 @@\n \n # open salt event log and create correct json from it\n errors = []\n-item = [] \n+item = []\n f = open('/var/log/rhn/salt-event.log', \"r\")\n for line in f.readlines():\n     item.append(line)\n     if re.search(r\"^\\}\", line):\n         if '\\\"result\\\": false' in \"\".join(item):\n             item[0] = \"{\"\n             errors.append(item)\n-        item = [] \n+        item = []\n f.close()\n \n # parse json and find results ending as failed\n failure_count = 0\n for error in errors:\n-    j = json.loads(\"\".join(error))\n+    try:\n+        j = json.loads(\"\".join(error))\n+    except ValueError as e:\n+        print(\"JSON cannot be parsed due {0}\".format(e))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk3ODE1MA=="}, "originalCommit": {"oid": "07a14ce0c27ca790525d158fb6176dcc31cb3d60"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 244, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}