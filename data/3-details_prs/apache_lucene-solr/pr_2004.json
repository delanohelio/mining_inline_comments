{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1ODg0Mjg1", "number": 2004, "title": "SOLR-14942: Reduce leader election time on node shutdown", "bodyText": "This PR is based on the work of @CaoManhDat\nDescription\nThe shutdown process waits for all replicas/cores to be closed before removing the election node of the leader. This can take some time due to index flush or merge activities on the leader cores and delays new leaders from being elected. This leads to long gap of time during which indexing requests fail.\nSolution\nThis PR introduces a Phaser that registers and deregisters all update requests. The shutdown process pauses indexing requests, waits for all in-flight indexing requests to complete, removes election nodes (thus triggering leader election) and then closes all replicas.\nTests\nSince this PR makes changes to Solr's shutdown process, it is difficult to write a unit/integration tests inside Solr itself. This was tested by creating a test harness outside of Solr. The steps were:\n\nCreate a Collection with 1 shard, 3 replicas\nDo heavy indexing when all replicas are ACTIVE\nShut down the leader node\nMeasure the leaderless time (time during which there is no live/active leader)\n\n\n\n\nBefore the patch\nAfter the patch\n\n\n\n\nShutting down time: 100ms Leader election: 46s\nShutting down time: 12s Leader election: 3s\n\n\nShutting down time: 37s Leader election: 3s\nShutting down time: 31s Leader election: 3s\n\n\nShutting down time: 200ms Leader election: 17s\nShutting down time: 100ms Leader election: 3s\n\n\nShutting down time: 200ms Leader election: 27s\nShutting down time: 4s Leader election: 3s\n\n\n\nSince the patch introduces waiting for all updates to finish before giving up the leadership so the shut down time gets increased on average, but also it makes leader election more stable and improves consistency.\nChecklist\nPlease review the following and check all that apply:\n\n I have reviewed the guidelines for How to Contribute and my code conforms to the standards described there to the best of my ability.\n I have created a Jira issue and added the issue ID to my pull request title.\n I have given Solr maintainers access to contribute to my PR branch. (optional but recommended)\n I have developed this patch against the master branch.\n I have run ./gradlew check.\n I have added tests for my changes.\n I have added documentation for the Ref Guide (for Solr changes only).", "createdAt": "2020-10-19T11:07:45Z", "url": "https://github.com/apache/lucene-solr/pull/2004", "merged": true, "mergeCommit": {"oid": "706f284c467becb5f002c05455808ee31aee3465"}, "closed": true, "closedAt": "2020-10-24T12:09:01Z", "author": {"login": "shalinmangar"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdT97J0gH2gAyNTA1ODg0Mjg1OjRmODU1ZTQ2YzFmMWMzMzI0YzUyODVmYjIyNGJlYzA3ZjhhODE5OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVptOYgH2gAyNTA1ODg0Mjg1OjNlZDdjNzgxOWNjNGIxZThlOTE5MTczODAwMDE0N2JhNzQ2YzAwYjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4f855e46c1f1c3324c5285fb224bec07f8a81994", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/4f855e46c1f1c3324c5285fb224bec07f8a81994", "committedDate": "2020-10-19T06:10:37Z", "message": "SOLR-14982: Reduce leader election time on node shutdown\n\nThe shutdown process waits for all replicas/cores to be closed before removing the election node of the leader. This can take some time due to index flush or merge activities on the leader cores and delays new leaders from being elected. Moreover, jetty stops accepting new requests on receiving SIGTERM which means that even though a leader technically exists, no new indexing requests can be processed by the node. This commit waits for all in-flight indexing requests to complete, removes election nodes (thus triggering leader election) and then closes all replicas."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4337a9e12fd66a8f6ef96b4624b2c09c18bacbb", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/b4337a9e12fd66a8f6ef96b4624b2c09c18bacbb", "committedDate": "2020-10-19T06:20:26Z", "message": "SOLR-14942: Pay cost of phaser only for leader cores"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "097eb5dd4cb7a9dd963f745a2217a1c40882563e", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/097eb5dd4cb7a9dd963f745a2217a1c40882563e", "committedDate": "2020-10-19T10:33:13Z", "message": "SOLR-14942: Revert isLeader check because it can cause many race conditions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNzU0NzE3", "url": "https://github.com/apache/lucene-solr/pull/2004#pullrequestreview-511754717", "createdAt": "2020-10-19T13:23:27Z", "commit": {"oid": "097eb5dd4cb7a9dd963f745a2217a1c40882563e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "250da57bb50cd51423a01d91848c5f5afae7415d", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/250da57bb50cd51423a01d91848c5f5afae7415d", "committedDate": "2020-10-19T13:52:50Z", "message": "SOLR-14942: Remove javadoc comment that no longer applies"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODMxNDk0", "url": "https://github.com/apache/lucene-solr/pull/2004#pullrequestreview-511831494", "createdAt": "2020-10-19T14:32:47Z", "commit": {"oid": "250da57bb50cd51423a01d91848c5f5afae7415d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDozMjo0OFrOHkRthw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1NToyMVrOHkS4uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwMDk2Nw==", "bodyText": "How many contexts do we expect here. Does it actually make sense to do a parallel stream?", "url": "https://github.com/apache/lucene-solr/pull/2004#discussion_r507800967", "createdAt": "2020-10-19T14:32:48Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/cloud/ZkController.java", "diffHunk": "@@ -1838,6 +1838,22 @@ private void checkStateInZk(CoreDescriptor cd) throws InterruptedException, NotI\n     }\n   }\n \n+  public void tryCancelAllElections() {\n+    if (zkClient.isClosed()) {\n+      return;\n+    }\n+    electionContexts.values().parallelStream().forEach(context -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "250da57bb50cd51423a01d91848c5f5afae7415d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwODUxMQ==", "bodyText": "This is never used?", "url": "https://github.com/apache/lucene-solr/pull/2004#discussion_r507808511", "createdAt": "2020-10-19T14:40:40Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/update/SolrCoreState.java", "diffHunk": "@@ -86,7 +103,45 @@ public boolean decrefSolrCoreState(IndexWriterCloser closer) {\n     }\n     return close;\n   }\n-  \n+\n+  /**\n+   * Pauses all update requests to this core and waits (indefinitely) for all in-flight\n+   * update requests to finish\n+   */\n+  public void pauseUpdatesAndAwaitInflightRequests() {\n+    if (pauseUpdateRequests.compareAndSet(false, true)) {\n+      inflightUpdatesCounter.register();\n+      inflightUpdatesCounter.arriveAndAwaitAdvance();\n+    }\n+  }\n+\n+  /**\n+   * Unpauses update requests to this core\n+   */\n+  public void unpauseUpdates() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "250da57bb50cd51423a01d91848c5f5afae7415d"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwOTY2Mg==", "bodyText": "Do we need to check for termination?", "url": "https://github.com/apache/lucene-solr/pull/2004#discussion_r507809662", "createdAt": "2020-10-19T14:42:18Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/update/SolrCoreState.java", "diffHunk": "@@ -86,7 +103,45 @@ public boolean decrefSolrCoreState(IndexWriterCloser closer) {\n     }\n     return close;\n   }\n-  \n+\n+  /**\n+   * Pauses all update requests to this core and waits (indefinitely) for all in-flight\n+   * update requests to finish\n+   */\n+  public void pauseUpdatesAndAwaitInflightRequests() {\n+    if (pauseUpdateRequests.compareAndSet(false, true)) {\n+      inflightUpdatesCounter.register();\n+      inflightUpdatesCounter.arriveAndAwaitAdvance();\n+    }\n+  }\n+\n+  /**\n+   * Unpauses update requests to this core\n+   */\n+  public void unpauseUpdates() {\n+    this.pauseUpdateRequests.set(false);\n+  }\n+\n+  /**\n+   * Registers in-flight update requests to this core.\n+   *\n+   * @return true if request was registered, false if update requests are paused\n+   */\n+  public boolean registerInFlightUpdate() {\n+    if (pauseUpdateRequests.get()) {\n+      return false;\n+    }\n+    inflightUpdatesCounter.register();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "250da57bb50cd51423a01d91848c5f5afae7415d"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgyMDIxOQ==", "bodyText": "This is in the shutdown path, should we add a timeout? What happens if a disk is slow on write and something else times out underneath us?", "url": "https://github.com/apache/lucene-solr/pull/2004#discussion_r507820219", "createdAt": "2020-10-19T14:55:21Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/update/SolrCoreState.java", "diffHunk": "@@ -86,7 +103,45 @@ public boolean decrefSolrCoreState(IndexWriterCloser closer) {\n     }\n     return close;\n   }\n-  \n+\n+  /**\n+   * Pauses all update requests to this core and waits (indefinitely) for all in-flight\n+   * update requests to finish\n+   */\n+  public void pauseUpdatesAndAwaitInflightRequests() {\n+    if (pauseUpdateRequests.compareAndSet(false, true)) {\n+      inflightUpdatesCounter.register();\n+      inflightUpdatesCounter.arriveAndAwaitAdvance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "250da57bb50cd51423a01d91848c5f5afae7415d"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a8ae69bcb6f49d2f7f38fca915d9000cc675e97", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/0a8ae69bcb6f49d2f7f38fca915d9000cc675e97", "committedDate": "2020-10-20T12:49:00Z", "message": "SOLR-14942: Address review feedback.\n\n* Iterate electionContexts inside a synchronized block. Fixes iteration of electionContexts inside ZkController.close as well\n* Added javadocs for ZkController.tryCancelAllElections\n* Replaces parallelStream with serial stream call for closing election contexts since it is a very lightweight operation\n* Removes unused SolrCoreState.unpauseUpdates method\n* Adds a timeout to SolrCoreState.pauseUpdatesAndAwaitInflightRequests (defaults to 2500 millis)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODIxMTU3", "url": "https://github.com/apache/lucene-solr/pull/2004#pullrequestreview-512821157", "createdAt": "2020-10-20T15:03:55Z", "commit": {"oid": "0a8ae69bcb6f49d2f7f38fca915d9000cc675e97"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTowMzo1NVrOHlBu9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTowODozMlrOHlB9Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4Nzc2Nw==", "bodyText": "Please check your IDE settings to not collapse imports like this.", "url": "https://github.com/apache/lucene-solr/pull/2004#discussion_r508587767", "createdAt": "2020-10-20T15:03:55Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -38,10 +38,7 @@\n import java.util.Properties;\n import java.util.Set;\n import java.util.UUID;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Future;\n+import java.util.concurrent.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a8ae69bcb6f49d2f7f38fca915d9000cc675e97"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5MTQxMA==", "bodyText": "Maybe return inflightUpdatesCounter.register() > 0? Or >=, I'm not sure.", "url": "https://github.com/apache/lucene-solr/pull/2004#discussion_r508591410", "createdAt": "2020-10-20T15:08:32Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/update/SolrCoreState.java", "diffHunk": "@@ -86,7 +103,45 @@ public boolean decrefSolrCoreState(IndexWriterCloser closer) {\n     }\n     return close;\n   }\n-  \n+\n+  /**\n+   * Pauses all update requests to this core and waits (indefinitely) for all in-flight\n+   * update requests to finish\n+   */\n+  public void pauseUpdatesAndAwaitInflightRequests() {\n+    if (pauseUpdateRequests.compareAndSet(false, true)) {\n+      inflightUpdatesCounter.register();\n+      inflightUpdatesCounter.arriveAndAwaitAdvance();\n+    }\n+  }\n+\n+  /**\n+   * Unpauses update requests to this core\n+   */\n+  public void unpauseUpdates() {\n+    this.pauseUpdateRequests.set(false);\n+  }\n+\n+  /**\n+   * Registers in-flight update requests to this core.\n+   *\n+   * @return true if request was registered, false if update requests are paused\n+   */\n+  public boolean registerInFlightUpdate() {\n+    if (pauseUpdateRequests.get()) {\n+      return false;\n+    }\n+    inflightUpdatesCounter.register();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwOTY2Mg=="}, "originalCommit": {"oid": "250da57bb50cd51423a01d91848c5f5afae7415d"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMDAwNzYy", "url": "https://github.com/apache/lucene-solr/pull/2004#pullrequestreview-513000762", "createdAt": "2020-10-20T18:06:24Z", "commit": {"oid": "0a8ae69bcb6f49d2f7f38fca915d9000cc675e97"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODowNjoyNFrOHlKpag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODowNjoyNFrOHlKpag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODczMzgwMg==", "bodyText": "While we're here, this line (and a few others) should be customThreadPool.submit(() -> IOUtils.closeQuietly(overseer); I have no idea why we're creating a collection and a stream for a single object.", "url": "https://github.com/apache/lucene-solr/pull/2004#discussion_r508733802", "createdAt": "2020-10-20T18:06:24Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/cloud/ZkController.java", "diffHunk": "@@ -653,7 +653,12 @@ public void close() {\n     customThreadPool.submit(() -> Collections.singleton(overseer).parallelStream().forEach(IOUtils::closeQuietly));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a8ae69bcb6f49d2f7f38fca915d9000cc675e97"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd2c436751977e7404dcd8a472ba3a27067c5a5a", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/cd2c436751977e7404dcd8a472ba3a27067c5a5a", "committedDate": "2020-10-22T10:48:21Z", "message": "SOLR-14982: Disable automatic termination of phaser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a85b98efb5f5fc1d9a6ce1e71a3e2bba1068acd", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/9a85b98efb5f5fc1d9a6ce1e71a3e2bba1068acd", "committedDate": "2020-10-22T10:57:44Z", "message": "SOLR-14982: Remove use of streaming for singleton lists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae1dee771f241cb58f0fb827aadbafb877e3fea8", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/ae1dee771f241cb58f0fb827aadbafb877e3fea8", "committedDate": "2020-10-23T09:46:01Z", "message": "SOLR-14982: Added asserts on registration and de-registration and code comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDQ5NzE3", "url": "https://github.com/apache/lucene-solr/pull/2004#pullrequestreview-516049717", "createdAt": "2020-10-23T22:51:42Z", "commit": {"oid": "ae1dee771f241cb58f0fb827aadbafb877e3fea8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ed7c7819cc4b1e8e9191738000147ba746c00b4", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/3ed7c7819cc4b1e8e9191738000147ba746c00b4", "committedDate": "2020-10-24T11:45:09Z", "message": "SOLR-14942: Added change log entry"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2765, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}