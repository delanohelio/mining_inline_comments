{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDg5OTM4", "number": 1512, "title": "SOLR-13325: Add a collection selector to ComputePlanAction", "bodyText": "Description\nThe ComputePlanAction supports a collections attribute that can be used to filter collections for which the plan is computed. This currently accepts a comma-separated list of collection names. If the attribute is empty or omitted then all collections are supposed to match.\nHowever, it is difficult to maintain such a list in a system where collections are added and removed dynamically. It is easier to have a collection selector that matches zero or more collections by filtering them against a given set of collection (property, value) pairs. This can then be used to e.g. match all collections that use a specific policy etc.\nSolution\nThis PR adds collection selector support to the ComputePlanAction which is of the form collections: {policy: my_policy}. If more than one key/value pair is specified then all must match for a collection to be considered. The old way of specifying a string for collections is preserved for back-compatibility.\nAfter this support, the AutoAddReplicasPlanAction becomes a thin shim over ComputePlanAction with a collection selector collections: {autoAddReplicas: true}.\nThe old implementation did not pass collection hints to the policy engine which meant that all possible operations were computed by the policy and then they were filtered out by the ComputePlanAction. In this PR, the collection hints are pushed down to the policy engine so operations for non-matching collections are not even computed in the first place.\nTests\nThe ComputePlanActionTest.testSelectedCollections is now refactoted into two test methods viz. testSelectedCollectionsByName and testSelectedCollectionsByPolicy. The latter tests the collection selector by policy.\nChecklist\nPlease review the following and check all that apply:\n\n I have reviewed the guidelines for How to Contribute and my code conforms to the standards described there to the best of my ability.\n I have created a Jira issue and added the issue ID to my pull request title.\n I have given Solr maintainers access to contribute to my PR branch. (optional but recommended)\n I have developed this patch against the master branch.\n I have run ant precommit and the appropriate test suite.\n I have added tests for my changes.\n I have added documentation for the Ref Guide (for Solr changes only).", "createdAt": "2020-05-12T05:13:39Z", "url": "https://github.com/apache/lucene-solr/pull/1512", "merged": true, "mergeCommit": {"oid": "338671e511b753955f7186e7063cd95824cdf4e0"}, "closed": true, "closedAt": "2020-05-22T05:06:27Z", "author": {"login": "shalinmangar"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgch80gH2gAyNDE2NDg5OTM4OjMzMGI3NmM4YmFkNDQ2ZmM3YWEyZGYyYTMyMjdhMTMyYmY5Mzc2NTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjrD98gH2gAyNDE2NDg5OTM4OmI4OTgxNTk2NTViMzE3NDFhZDM3NTNlOTBiMWZkZTAzMWFjMDRmYzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "330b76c8bad446fc7aa2df2a3227a132bf937655", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/330b76c8bad446fc7aa2df2a3227a132bf937655", "committedDate": "2020-05-12T04:26:05Z", "message": "SOLR-13325: Add a collection selector to ComputePlanAction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzM4NzY1", "url": "https://github.com/apache/lucene-solr/pull/1512#pullrequestreview-409738765", "createdAt": "2020-05-12T06:39:58Z", "commit": {"oid": "330b76c8bad446fc7aa2df2a3227a132bf937655"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjozOTo1OFrOGT4GKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjozOTo1OFrOGT4GKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5NTIwOQ==", "bodyText": "It's a very terse description of a new powerful feature... IMHO at least it should mention that all other collection properties are supported, the property value must be equal, the implicit AND is used when multiple props are specified, and perhaps it should give some other examples.", "url": "https://github.com/apache/lucene-solr/pull/1512#discussion_r423495209", "createdAt": "2020-05-12T06:39:58Z", "author": {"login": "sigram"}, "path": "solr/solr-ref-guide/src/solrcloud-autoscaling-trigger-actions.adoc", "diffHunk": "@@ -29,12 +29,13 @@ commands which can re-balance the cluster in response to trigger events.\n The following parameters are configurable:\n \n `collections`::\n-A comma-separated list of collection names. If this list is not empty then\n-the computed operations will only calculate collection operations that affect\n-listed collections and ignore any other collection operations for collections\n+A comma-separated list of collection names. This can also be a selector on the collection property e.g. `collections: {'policy': 'my_custom_policy'}` will match all collections which use the policy named `my_customer_policy`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "330b76c8bad446fc7aa2df2a3227a132bf937655"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzM5OTE5", "url": "https://github.com/apache/lucene-solr/pull/1512#pullrequestreview-409739919", "createdAt": "2020-05-12T06:42:05Z", "commit": {"oid": "330b76c8bad446fc7aa2df2a3227a132bf937655"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjo0MjowNlrOGT4JvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjo0MjowNlrOGT4JvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5NjEyNA==", "bodyText": "This is indeed a nice cleanup!", "url": "https://github.com/apache/lucene-solr/pull/1512#discussion_r423496124", "createdAt": "2020-05-12T06:42:06Z", "author": {"login": "sigram"}, "path": "solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoAddReplicasPlanAction.java", "diffHunk": "@@ -18,46 +18,23 @@\n package org.apache.solr.cloud.autoscaling;\n \n \n-import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Map;\n \n-import org.apache.solr.client.solrj.cloud.autoscaling.NoneSuggester;\n-import org.apache.solr.client.solrj.cloud.autoscaling.Policy;\n import org.apache.solr.client.solrj.cloud.SolrCloudManager;\n-import org.apache.solr.client.solrj.cloud.autoscaling.Suggester;\n-import org.apache.solr.client.solrj.impl.ClusterStateProvider;\n-import org.apache.solr.common.SolrException;\n-import org.apache.solr.common.cloud.ClusterState;\n-import org.apache.solr.common.cloud.DocCollection;\n-import org.apache.solr.common.cloud.ZkStateReader;\n+import org.apache.solr.core.SolrResourceLoader;\n \n+import static org.apache.solr.common.cloud.ZkStateReader.AUTO_ADD_REPLICAS;\n+\n+/**\n+ * This class configures the parent ComputePlanAction to compute plan\n+ * only for collections which have autoAddReplicas=true.\n+ */\n public class AutoAddReplicasPlanAction extends ComputePlanAction {\n \n   @Override\n-  protected Suggester getSuggester(Policy.Session session, TriggerEvent event, ActionContext context, SolrCloudManager cloudManager) throws IOException {\n-    // for backward compatibility\n-    ClusterStateProvider stateProvider = cloudManager.getClusterStateProvider();\n-    String autoAddReplicas = stateProvider.getClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, (String) null);\n-    if (autoAddReplicas != null && autoAddReplicas.equals(\"false\")) {\n-      return NoneSuggester.get(session);\n-    }\n-\n-    Suggester suggester = super.getSuggester(session, event, context, cloudManager);\n-    ClusterState clusterState;\n-    try {\n-      clusterState = stateProvider.getClusterState();\n-    } catch (IOException e) {\n-      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Exception getting cluster state\", e);\n-    }\n-\n-    boolean anyCollections = false;\n-    for (DocCollection collection: clusterState.getCollectionsMap().values()) {\n-      if (collection.getAutoAddReplicas()) {\n-        anyCollections = true;\n-        suggester.hint(Suggester.Hint.COLL, collection.getName());\n-      }\n-    }\n-\n-    if (!anyCollections) return NoneSuggester.get(session);\n-    return suggester;\n+  public void configure(SolrResourceLoader loader, SolrCloudManager cloudManager, Map<String, Object> properties) throws TriggerValidationException {\n+    properties.put(\"collections\", Collections.singletonMap(AUTO_ADD_REPLICAS, \"true\"));\n+    super.configure(loader, cloudManager, properties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "330b76c8bad446fc7aa2df2a3227a132bf937655"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzQzNjI0", "url": "https://github.com/apache/lucene-solr/pull/1512#pullrequestreview-409743624", "createdAt": "2020-05-12T06:48:32Z", "commit": {"oid": "330b76c8bad446fc7aa2df2a3227a132bf937655"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjo0ODozM1rOGT4VIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjo0ODozM1rOGT4VIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5OTA0Mw==", "bodyText": "IIRC using wildcard imports was frowned upon?", "url": "https://github.com/apache/lucene-solr/pull/1512#discussion_r423499043", "createdAt": "2020-05-12T06:48:33Z", "author": {"login": "sigram"}, "path": "solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java", "diffHunk": "@@ -17,38 +17,28 @@\n \n package org.apache.solr.cloud.autoscaling;\n \n-import java.io.IOException;\n-import java.lang.invoke.MethodHandles;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.concurrent.atomic.AtomicInteger;\n-\n import org.apache.solr.client.solrj.SolrRequest;\n import org.apache.solr.client.solrj.cloud.SolrCloudManager;\n-import org.apache.solr.client.solrj.cloud.autoscaling.AutoScalingConfig;\n-import org.apache.solr.client.solrj.cloud.autoscaling.NoneSuggester;\n-import org.apache.solr.client.solrj.cloud.autoscaling.Policy;\n-import org.apache.solr.client.solrj.cloud.autoscaling.PolicyHelper;\n-import org.apache.solr.client.solrj.cloud.autoscaling.Suggester;\n-import org.apache.solr.client.solrj.cloud.autoscaling.UnsupportedSuggester;\n+import org.apache.solr.client.solrj.cloud.autoscaling.*;\n import org.apache.solr.common.SolrException;\n import org.apache.solr.common.cloud.ClusterState;\n import org.apache.solr.common.cloud.DocCollection;\n import org.apache.solr.common.cloud.Replica;\n import org.apache.solr.common.params.AutoScalingParams;\n import org.apache.solr.common.params.CollectionParams;\n-import org.apache.solr.common.params.CoreAdminParams;\n import org.apache.solr.common.util.Pair;\n import org.apache.solr.common.util.StrUtils;\n import org.apache.solr.core.SolrResourceLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.io.IOException;\n+import java.lang.invoke.MethodHandles;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "330b76c8bad446fc7aa2df2a3227a132bf937655"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6f64bd8de960a7ad7d27b4b6ea829e7b884fcc1", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/d6f64bd8de960a7ad7d27b4b6ea829e7b884fcc1", "committedDate": "2020-05-18T08:01:11Z", "message": "SOLR-13325: Expanded the description of the new feature to include the fact that values must match exactly and all properties must match. Added an example with multiple properties."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c399d5a2734e8d6c5d25d01239280ac07fabe05", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/8c399d5a2734e8d6c5d25d01239280ac07fabe05", "committedDate": "2020-05-22T04:59:07Z", "message": "Merge branch 'master' into jira/solr-13325"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b898159655b31741ad3753e90b1fde031ac04fc4", "author": {"user": {"login": "shalinmangar", "name": "Shalin Shekhar Mangar"}}, "url": "https://github.com/apache/lucene-solr/commit/b898159655b31741ad3753e90b1fde031ac04fc4", "committedDate": "2020-05-22T05:03:41Z", "message": "SOLR-13325: Add entry to CHANGES.txt"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2518, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}