{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NDgzMTIz", "number": 2138, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxMTo1NVrOFFAIHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxMTo1NVrOFFAIHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzg5Mjc5OnYy", "diffSide": "RIGHT", "path": "lucene/sandbox/src/java/org/apache/lucene/sandbox/search/MultiNormsLeafSimScorer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxMTo1NVrOIFSSOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwODozMToxM1rOIIX4VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxMzM2OQ==", "bodyText": "Actually, I see that SimilarityBase.java uses Byte.toUnsignedInt instead -- should we use that here?  It is the same computation?\nOr, if you want to stick with & 0xff, could you add parens around the (byte) cast to make the order of operations clear?", "url": "https://github.com/apache/lucene-solr/pull/2138#discussion_r542413369", "createdAt": "2020-12-14T14:11:55Z", "author": {"login": "mikemccand"}, "path": "lucene/sandbox/src/java/org/apache/lucene/sandbox/search/MultiNormsLeafSimScorer.java", "diffHunk": "@@ -128,7 +128,7 @@ public boolean advanceExact(int target) throws IOException {\n       for (int i = 0; i < normsArr.length; i++) {\n         boolean found = normsArr[i].advanceExact(target);\n         assert found;\n-        normValue += weightArr[i] * LENGTH_TABLE[(byte) normsArr[i].longValue()];\n+        normValue += weightArr[i] * LENGTH_TABLE[(byte) normsArr[i].longValue() & 0xff];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a49e15b21c0d7273aeca9bef209fcc68193c4ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1MDc3Mg==", "bodyText": "I've updated the change using Byte.toUnsignedInt", "url": "https://github.com/apache/lucene-solr/pull/2138#discussion_r545650772", "createdAt": "2020-12-18T08:31:13Z", "author": {"login": "yiluncui"}, "path": "lucene/sandbox/src/java/org/apache/lucene/sandbox/search/MultiNormsLeafSimScorer.java", "diffHunk": "@@ -128,7 +128,7 @@ public boolean advanceExact(int target) throws IOException {\n       for (int i = 0; i < normsArr.length; i++) {\n         boolean found = normsArr[i].advanceExact(target);\n         assert found;\n-        normValue += weightArr[i] * LENGTH_TABLE[(byte) normsArr[i].longValue()];\n+        normValue += weightArr[i] * LENGTH_TABLE[(byte) normsArr[i].longValue() & 0xff];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxMzM2OQ=="}, "originalCommit": {"oid": "2a49e15b21c0d7273aeca9bef209fcc68193c4ef"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 976, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}