{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NDgzMTIz", "number": 2138, "title": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup", "bodyText": "Description\nThrough some experimentation with\u00a0with the BM25FQuery on long documents, I've discovered that there is a bug that doesn't mask the encoded norm's long value during scoring. For long documents (or long fields) this may cause ArrayIndexOutOfBoundsExceptions.\nThe line where I suspect the bug is being exposed is here\nhttps://github.com/apache/lucene-solr/blob/master/lucene/sandbox/src/java/org/apache/lucene/sandbox/search/MultiNormsLeafSimScorer.java#L131\nHere is a similar use in BM25Similarity with the masking\n\n  \n    \n      lucene-solr/lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.java\n    \n    \n         Line 233\n      in\n      c413656\n    \n    \n    \n    \n\n        \n          \n           float normInverse = cache[((byte) encodedNorm) & 0xFF]; \n        \n    \n  \n\n\nMy experimentation shows that to expose this bug, there must be a match for a token in more than one field (which is what BM25FQuery is for). In addition one of the fields must be >= 32792 tokens long.\nI've provided tests in the pull request to demonstrate this.\nSolution\nChange the array lookup to norm & 0xff\nTests\nAdded tests for single and multiple long documents that exposes this problem.\nChecklist\nPlease review the following and check all that apply:\n\n I have reviewed the guidelines for How to Contribute and my code conforms to the standards described there to the best of my ability.\n I have created a Jira issue and added the issue ID to my pull request title.\n I have given Solr maintainers access to contribute to my PR branch. (optional but recommended)\n I have developed this patch against the master branch.\n I have run ./gradlew check.\n I have added tests for my changes.\n I have added documentation for the Ref Guide (for Solr changes only).", "createdAt": "2020-12-09T21:43:26Z", "url": "https://github.com/apache/lucene-solr/pull/2138", "merged": true, "mergeCommit": {"oid": "894b6b5c888aff5a0624daeea05939410b678a6e"}, "closed": true, "closedAt": "2020-12-18T14:56:31Z", "author": {"login": "yiluncui"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkl6nMgBqjQwOTIxMzAyMDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnT3gFABqjQxMjg2NzUyOTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f32e6e5be03c425becfbd37b95fef715e20050fa", "author": {"user": {"login": "yiluncui-amzn", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/f32e6e5be03c425becfbd37b95fef715e20050fa", "committedDate": "2020-12-09T20:47:14Z", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents"}, "afterCommit": {"oid": "ca1b48b0780f4e06c27e2481cc38b8261205dcca", "author": {"user": {"login": "yiluncui", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/ca1b48b0780f4e06c27e2481cc38b8261205dcca", "committedDate": "2020-12-09T21:48:45Z", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca1b48b0780f4e06c27e2481cc38b8261205dcca", "author": {"user": {"login": "yiluncui", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/ca1b48b0780f4e06c27e2481cc38b8261205dcca", "committedDate": "2020-12-09T21:48:45Z", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents"}, "afterCommit": {"oid": "2a49e15b21c0d7273aeca9bef209fcc68193c4ef", "author": {"user": {"login": "yiluncui", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/2a49e15b21c0d7273aeca9bef209fcc68193c4ef", "committedDate": "2020-12-09T21:59:38Z", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMzMxNTE0", "url": "https://github.com/apache/lucene-solr/pull/2138#pullrequestreview-551331514", "createdAt": "2020-12-14T12:46:30Z", "commit": {"oid": "2a49e15b21c0d7273aeca9bef209fcc68193c4ef"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNDAyNzE2", "url": "https://github.com/apache/lucene-solr/pull/2138#pullrequestreview-551402716", "createdAt": "2020-12-14T14:11:55Z", "commit": {"oid": "2a49e15b21c0d7273aeca9bef209fcc68193c4ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxMTo1NVrOIFSSOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxMTo1NVrOIFSSOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxMzM2OQ==", "bodyText": "Actually, I see that SimilarityBase.java uses Byte.toUnsignedInt instead -- should we use that here?  It is the same computation?\nOr, if you want to stick with & 0xff, could you add parens around the (byte) cast to make the order of operations clear?", "url": "https://github.com/apache/lucene-solr/pull/2138#discussion_r542413369", "createdAt": "2020-12-14T14:11:55Z", "author": {"login": "mikemccand"}, "path": "lucene/sandbox/src/java/org/apache/lucene/sandbox/search/MultiNormsLeafSimScorer.java", "diffHunk": "@@ -128,7 +128,7 @@ public boolean advanceExact(int target) throws IOException {\n       for (int i = 0; i < normsArr.length; i++) {\n         boolean found = normsArr[i].advanceExact(target);\n         assert found;\n-        normValue += weightArr[i] * LENGTH_TABLE[(byte) normsArr[i].longValue()];\n+        normValue += weightArr[i] * LENGTH_TABLE[(byte) normsArr[i].longValue() & 0xff];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a49e15b21c0d7273aeca9bef209fcc68193c4ef"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72e88fcb623989e0a59bc90ba3141c8912989863", "author": {"user": {"login": "yiluncui", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/72e88fcb623989e0a59bc90ba3141c8912989863", "committedDate": "2020-12-18T08:27:59Z", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a49e15b21c0d7273aeca9bef209fcc68193c4ef", "author": {"user": {"login": "yiluncui", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/2a49e15b21c0d7273aeca9bef209fcc68193c4ef", "committedDate": "2020-12-09T21:59:38Z", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents"}, "afterCommit": {"oid": "72e88fcb623989e0a59bc90ba3141c8912989863", "author": {"user": {"login": "yiluncui", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/72e88fcb623989e0a59bc90ba3141c8912989863", "committedDate": "2020-12-18T08:27:59Z", "message": "LUCENE-9635: BM25FQuery - Mask encoded norm long value in array lookup to avoid negative norms in long documents"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2443, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}