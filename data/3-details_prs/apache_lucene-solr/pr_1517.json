{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MjczMDQ3", "number": 1517, "title": "SOLR-13289: Use the final collector's scoreMode", "bodyText": "Fixes a bug @dsmiley pointed out to in SOLR-13289", "createdAt": "2020-05-14T22:14:29Z", "url": "https://github.com/apache/lucene-solr/pull/1517", "merged": true, "mergeCommit": {"oid": "5e9483e7885cab47b7d0e6249cfeb1fc02ffc257"}, "closed": true, "closedAt": "2020-05-21T22:48:38Z", "author": {"login": "tflobbe"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchYUZZgFqTQxMjI5NDA2OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjleAxABqjMzNjI1NzMxODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjk0MDY5", "url": "https://github.com/apache/lucene-solr/pull/1517#pullrequestreview-412294069", "createdAt": "2020-05-15T01:45:35Z", "commit": {"oid": "351c97f21542d81de6996a748c8cae779f6ca662"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMTo0NTozNVrOGVzvlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjowNDoxNVrOGV0BiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUyMTA0NQ==", "bodyText": "FYI today FunctionRangeQuery implements PostFilter but it soon won't: https://issues.apache.org/jira/browse/SOLR-14164", "url": "https://github.com/apache/lucene-solr/pull/1517#discussion_r425521045", "createdAt": "2020-05-15T01:45:35Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest.java", "diffHunk": "@@ -189,12 +206,95 @@ public void testMinExactHitsWithMaxScoreRequested() throws IOException {\n       cmd.setMinExactHits(2);\n       cmd.setFlags(SolrIndexSearcher.GET_SCORES);\n       cmd.setQuery(new TermQuery(new Term(\"field1_s\", \"foo\")));\n-      searcher.search(new QueryResult(), cmd);\n       QueryResult qr = new QueryResult();\n       searcher.search(qr, cmd);\n       assertMatchesGraterThan(NUM_DOCS, qr);\n       assertNotEquals(Float.NaN, qr.getDocList().maxScore());\n       return null;\n     });\n   }\n+  \n+  public void testMinExactWithFilters() throws Exception {\n+    \n+    h.getCore().withSearcher(searcher -> {\n+      //Sanity Check - No Filter\n+      QueryCommand cmd = new QueryCommand();\n+      cmd.setMinExactHits(1);\n+      cmd.setLen(1);\n+      cmd.setFlags(SolrIndexSearcher.NO_CHECK_QCACHE | SolrIndexSearcher.NO_SET_QCACHE);\n+      cmd.setQuery(new TermQuery(new Term(\"field4_t\", \"0\")));\n+      QueryResult qr = new QueryResult();\n+      searcher.search(qr, cmd);\n+      assertMatchesGraterThan(NUM_DOCS, qr);\n+      return null;\n+    });\n+    \n+    \n+    h.getCore().withSearcher(searcher -> {\n+      QueryCommand cmd = new QueryCommand();\n+      cmd.setMinExactHits(1);\n+      cmd.setLen(1);\n+      cmd.setFlags(SolrIndexSearcher.NO_CHECK_QCACHE | SolrIndexSearcher.NO_SET_QCACHE);\n+      cmd.setQuery(new TermQuery(new Term(\"field4_t\", \"0\")));\n+      FunctionRangeQuery filterQuery = new FunctionRangeQuery(new ValueSourceRangeFilter(new IntFieldSource(\"field3_i_dvo\"), \"19\", \"19\", true, true));\n+      cmd.setFilterList(filterQuery);\n+      filterQuery.setCache(false);\n+      filterQuery.setCost(0);\n+      assertNull(searcher.getProcessedFilter(null, cmd.getFilterList()).postFilter);\n+      QueryResult qr = new QueryResult();\n+      searcher.search(qr, cmd);\n+      assertMatchesEqual(1, qr);\n+      return null;\n+    });\n+  }\n+  \n+  public void testMinExactWithPostFilters() throws Exception {\n+    h.getCore().withSearcher(searcher -> {\n+      //Sanity Check - No Filter\n+      QueryCommand cmd = new QueryCommand();\n+      cmd.setMinExactHits(1);\n+      cmd.setLen(1);\n+      cmd.setFlags(SolrIndexSearcher.NO_CHECK_QCACHE | SolrIndexSearcher.NO_SET_QCACHE);\n+      cmd.setQuery(new TermQuery(new Term(\"field4_t\", \"0\")));\n+      QueryResult qr = new QueryResult();\n+      searcher.search(qr, cmd);\n+      assertMatchesGraterThan(NUM_DOCS, qr);\n+      return null;\n+    });\n+    \n+    \n+    h.getCore().withSearcher(searcher -> {\n+      QueryCommand cmd = new QueryCommand();\n+      cmd.setMinExactHits(1);\n+      cmd.setLen(1);\n+      cmd.setFlags(SolrIndexSearcher.NO_CHECK_QCACHE | SolrIndexSearcher.NO_SET_QCACHE);\n+      cmd.setQuery(new TermQuery(new Term(\"field4_t\", \"0\")));\n+      FunctionRangeQuery filterQuery = new FunctionRangeQuery(new ValueSourceRangeFilter(new IntFieldSource(\"field3_i_dvo\"), \"19\", \"19\", true, true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "351c97f21542d81de6996a748c8cae779f6ca662"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUyNTY0MQ==", "bodyText": "Curious; why are you writing tests with this low-level way vs testMinExactHitsDisabledByCollapse which I wrote in a more common higher level style that is more succinct?  Is it only for this NO_CHECK_QCACHE distinction?  Can that be done simply by disabling the cache?  Not a big deal but just want to know your point of view.", "url": "https://github.com/apache/lucene-solr/pull/1517#discussion_r425525641", "createdAt": "2020-05-15T02:04:15Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest.java", "diffHunk": "@@ -189,12 +206,95 @@ public void testMinExactHitsWithMaxScoreRequested() throws IOException {\n       cmd.setMinExactHits(2);\n       cmd.setFlags(SolrIndexSearcher.GET_SCORES);\n       cmd.setQuery(new TermQuery(new Term(\"field1_s\", \"foo\")));\n-      searcher.search(new QueryResult(), cmd);\n       QueryResult qr = new QueryResult();\n       searcher.search(qr, cmd);\n       assertMatchesGraterThan(NUM_DOCS, qr);\n       assertNotEquals(Float.NaN, qr.getDocList().maxScore());\n       return null;\n     });\n   }\n+  \n+  public void testMinExactWithFilters() throws Exception {\n+    \n+    h.getCore().withSearcher(searcher -> {\n+      //Sanity Check - No Filter\n+      QueryCommand cmd = new QueryCommand();\n+      cmd.setMinExactHits(1);\n+      cmd.setLen(1);\n+      cmd.setFlags(SolrIndexSearcher.NO_CHECK_QCACHE | SolrIndexSearcher.NO_SET_QCACHE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "351c97f21542d81de6996a748c8cae779f6ca662"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTY5NjAz", "url": "https://github.com/apache/lucene-solr/pull/1517#pullrequestreview-412969603", "createdAt": "2020-05-15T21:09:22Z", "commit": {"oid": "bbe4fb399c56f738f96d9a3cda8eb59eb9abe687"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a87fbe3b61cb523470be3fee075972655c6d633", "author": {"user": {"login": "tflobbe", "name": "Tomas Fernandez Lobbe"}}, "url": "https://github.com/apache/lucene-solr/commit/9a87fbe3b61cb523470be3fee075972655c6d633", "committedDate": "2020-05-21T21:07:23Z", "message": "Use the final collector's scoreMode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "288f5d2407c060fad662307bb20e17fff925fc58", "author": {"user": {"login": "tflobbe", "name": "Tomas Fernandez Lobbe"}}, "url": "https://github.com/apache/lucene-solr/commit/288f5d2407c060fad662307bb20e17fff925fc58", "committedDate": "2020-05-21T21:07:23Z", "message": "Don't use FunctionRangeQuery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd01dce44995e9d99da7a96707572f8e02190c55", "author": {"user": {"login": "tflobbe", "name": "Tomas Fernandez Lobbe"}}, "url": "https://github.com/apache/lucene-solr/commit/dd01dce44995e9d99da7a96707572f8e02190c55", "committedDate": "2020-05-21T22:31:20Z", "message": "Minor refactor to the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03c1a9bd0a4ba32715659c827031652766227761", "author": {"user": {"login": "tflobbe", "name": "Tomas Fernandez Lobbe"}}, "url": "https://github.com/apache/lucene-solr/commit/03c1a9bd0a4ba32715659c827031652766227761", "committedDate": "2020-05-21T22:32:18Z", "message": "Update CHANGES file"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bbe4fb399c56f738f96d9a3cda8eb59eb9abe687", "author": {"user": {"login": "tflobbe", "name": "Tomas Fernandez Lobbe"}}, "url": "https://github.com/apache/lucene-solr/commit/bbe4fb399c56f738f96d9a3cda8eb59eb9abe687", "committedDate": "2020-05-15T05:29:00Z", "message": "Don't use FunctionRangeQuery"}, "afterCommit": {"oid": "03c1a9bd0a4ba32715659c827031652766227761", "author": {"user": {"login": "tflobbe", "name": "Tomas Fernandez Lobbe"}}, "url": "https://github.com/apache/lucene-solr/commit/03c1a9bd0a4ba32715659c827031652766227761", "committedDate": "2020-05-21T22:32:18Z", "message": "Update CHANGES file"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2525, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}