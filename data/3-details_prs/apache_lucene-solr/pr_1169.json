{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNzQzMzAy", "number": 1169, "title": "LUCENE-9004: A minor feature and patch -- support deleting vector values and fix segments merging", "bodyText": "Hi, @msokolov and @mocobeta, thanks for your exciting work on LUCENE-9004.\nThis commit includes the following modifications:\n\n\nFor fixing the merge process while some segments may contain deleted documents which should be filtered;\n\n\nFor fixing ram usage in KnnGraphValuesWriter, this may be a typo;\n\n\nFix a potential NPE problem in KnnGraphQuery and delete some unused imports;\n\n\nThe modified codes have been tested via test cases.", "createdAt": "2020-01-14T17:03:23Z", "url": "https://github.com/apache/lucene-solr/pull/1169", "merged": true, "mergeCommit": {"oid": "9f76b91d16a9ae8a2cd73df529699215b625a80b"}, "closed": true, "closedAt": "2020-01-24T11:01:27Z", "author": {"login": "irvingzhang"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6Rjm8gH2gAyMzYyNzQzMzAyOjAwNDEzNmIwOTEyYzk3MDI3ZDUyZjY0NTQwNmMxM2NkNGIwY2U1YmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9c1DcAFqTM0Nzg4MTY2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "004136b0912c97027d52f645406c13cd4b0ce5bc", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/004136b0912c97027d52f645406c13cd4b0ce5bc", "committedDate": "2020-01-14T14:09:49Z", "message": "add deletion and fix merge for hnsw"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjY5ODE4", "url": "https://github.com/apache/lucene-solr/pull/1169#pullrequestreview-343269818", "createdAt": "2020-01-15T14:46:01Z", "commit": {"oid": "004136b0912c97027d52f645406c13cd4b0ce5bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NjowMVrOFd6rDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NjowMVrOFd6rDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxNDMxNw==", "bodyText": "You're right, this is needed for document deletion. A small correction: the condition should be mappedDocId == -1. (According to the Javadoc of the DocMap#get() method.)", "url": "https://github.com/apache/lucene-solr/pull/1169#discussion_r366914317", "createdAt": "2020-01-15T14:46:01Z", "author": {"login": "mocobeta"}, "path": "lucene/core/src/java/org/apache/lucene/codecs/lucene90/Lucene90KnnGraphWriter.java", "diffHunk": "@@ -216,8 +216,11 @@ private void mergeKnnGraph(FieldInfo mergeFieldInfo, final MergeState mergeState\n       int docid;\n       while ((docid = sub.nextDoc()) != NO_MORE_DOCS) {\n         int mappedDocId = docMap.get(docid);\n+        /// deleted document (not alive)\n+        if (mappedDocId < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004136b0912c97027d52f645406c13cd4b0ce5bc"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d26e57944791ff2c1d42a8f712682418a90a53a", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/4d26e57944791ff2c1d42a8f712682418a90a53a", "committedDate": "2020-01-16T08:34:08Z", "message": "migrate kmeans clustering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87d18f4c882d5823d3de4f5b74c0a2cd2d2bd17a", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/87d18f4c882d5823d3de4f5b74c0a2cd2d2bd17a", "committedDate": "2020-01-16T09:07:15Z", "message": "rollback - previous commits to the wrong branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5b7e05db7ab433149d76d60a15356bbad1a8c23", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/d5b7e05db7ab433149d76d60a15356bbad1a8c23", "committedDate": "2020-01-16T09:11:03Z", "message": "correct the if condition for deleted docs when merging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1574d91c74241e853ad7af987ab161e6c1b7025d", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/1574d91c74241e853ad7af987ab161e6c1b7025d", "committedDate": "2020-01-16T09:53:28Z", "message": "rename class names for deletion query and weight"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77b1b81b3cc6597b6d66cbcc5c781b2886f12584", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/77b1b81b3cc6597b6d66cbcc5c781b2886f12584", "committedDate": "2020-01-16T09:58:19Z", "message": "minor refactoring for KnnExactDeletionFilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a4e8217ac73118e983dc0f0e8f6c604226e9479", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/2a4e8217ac73118e983dc0f0e8f6c604226e9479", "committedDate": "2020-01-17T06:06:35Z", "message": "fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTQxNDE4", "url": "https://github.com/apache/lucene-solr/pull/1169#pullrequestreview-344941418", "createdAt": "2020-01-18T12:30:13Z", "commit": {"oid": "2a4e8217ac73118e983dc0f0e8f6c604226e9479"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMjozMDoxM1rOFfKo2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMjozMDoxM1rOFfKo2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyNDQ3Mw==", "bodyText": "Why do we need to include the word \"deletion\" in the Query name? If my understanding is correct this finds a set of documents that have exact values to the query vector, and does not concern what the user do with the query results. Additionally it seems slightly odd to me that the (public) Query subclass does not obey the naming convention (XXXQuery). I would prefer the name \"KnnExactVectorValueQuery\" or something like that here...\nIf you intend to use this Query class for special purpose (\"for deleting documents\"), I'd suggest you don't expose it as a public class but firstly keep it as a dedicated inner class within another class. Would it be possible?", "url": "https://github.com/apache/lucene-solr/pull/1169#discussion_r368224473", "createdAt": "2020-01-18T12:30:13Z", "author": {"login": "mocobeta"}, "path": "lucene/core/src/java/org/apache/lucene/search/KnnExactDeletionCondition.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.lucene.search;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A query for deleting the exact values of the specified querying vector, used for\n+ * {@link org.apache.lucene.index.IndexWriter#deleteDocuments(Query...)}.\n+ */\n+public class KnnExactDeletionCondition extends KnnGraphQuery {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a4e8217ac73118e983dc0f0e8f6c604226e9479"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7a4938ffb54e81bac805f3e0c57af5912d5eb07", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/e7a4938ffb54e81bac805f3e0c57af5912d5eb07", "committedDate": "2020-01-18T16:32:43Z", "message": "move dedicated classes to test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTk3NzM3", "url": "https://github.com/apache/lucene-solr/pull/1169#pullrequestreview-344997737", "createdAt": "2020-01-19T12:15:18Z", "commit": {"oid": "e7a4938ffb54e81bac805f3e0c57af5912d5eb07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMjoxNToxOFrOFfOl3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMjoxNToxOFrOFfOl3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4OTI0NA==", "bodyText": "Thanks, it looks almost okay to me but the Weight and Query classes can be (and should be) static classes.\nIt would look like this:\npublic class TestKnnGraph extends LuceneTestCase {\n    ....\n    private static final class KnnExactVectorValueWeight extends ConstantScoreWeight {\n        ....\n    }\n\n    private static final class KnnExactVectorValueQuery extends Query {\n        ....\n    }\n\n    public void testDocsDeletionAndRecall() throws  Exception {\n        ....\n        Query query = new KnnExactVectorValueQuery(...);\n        ....\n    }\n    ....\n}\n\nPlease avoid non-static inner classes whenever you can do so, because they consume extra memory and object references ;)", "url": "https://github.com/apache/lucene-solr/pull/1169#discussion_r368289244", "createdAt": "2020-01-19T12:15:18Z", "author": {"login": "mocobeta"}, "path": "lucene/core/src/test/org/apache/lucene/index/TestKnnGraph.java", "diffHunk": "@@ -92,7 +108,277 @@ public void testSingleDocRecall() throws  Exception {\n       iw.commit();\n       assertConsistentGraph(iw, values);\n \n-      assertRecall(dir, 0, values[0]);\n+      assertRecall(dir, 1, values[0]);\n+    }\n+  }\n+\n+  public void testDocsDeletionAndRecall() throws  Exception {\n+    /**\n+     * {@code KnnExactVectorValueWeight} applies in-set (i.e. the query vector is exactly in the index)\n+     * deletion strategy to filter all unmatched results searched by {@link org.apache.lucene.search.KnnGraphQuery.KnnExactVectorValueQuery},\n+     * and deletes at most ef*segmentCnt vectors that are the same to the specified queryVector.\n+     */\n+    final class KnnExactVectorValueWeight extends ConstantScoreWeight {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a4938ffb54e81bac805f3e0c57af5912d5eb07"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTk3ODEw", "url": "https://github.com/apache/lucene-solr/pull/1169#pullrequestreview-344997810", "createdAt": "2020-01-19T12:16:37Z", "commit": {"oid": "e7a4938ffb54e81bac805f3e0c57af5912d5eb07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMjoxNjozN1rOFfOmLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMjoxNjozN1rOFfOmLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4OTMyNQ==", "bodyText": "Can you please remove those unused imports?", "url": "https://github.com/apache/lucene-solr/pull/1169#discussion_r368289325", "createdAt": "2020-01-19T12:16:37Z", "author": {"login": "mocobeta"}, "path": "lucene/core/src/java/org/apache/lucene/search/KnnScoreWeight.java", "diffHunk": "@@ -18,6 +18,8 @@\n package org.apache.lucene.search;\n \n import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a4938ffb54e81bac805f3e0c57af5912d5eb07"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDMzNjQ3", "url": "https://github.com/apache/lucene-solr/pull/1169#pullrequestreview-345033647", "createdAt": "2020-01-19T23:05:45Z", "commit": {"oid": "e7a4938ffb54e81bac805f3e0c57af5912d5eb07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQyMzowNTo0NVrOFfRIZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQyMzowNTo0NVrOFfRIZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMzMDg1NQ==", "bodyText": "You are -- finding exact matches to the input vector, right? I don't understand what this has to do with deletion. I'm also unclear why we want to have an exact match query in the first place. What problem is it solving that we could not solve with a hashmap lookup?  And ... it is implemented here in a test file. Is this supporting testing in some way? Thanks, I feel I must be missing some essential thing here...", "url": "https://github.com/apache/lucene-solr/pull/1169#discussion_r368330855", "createdAt": "2020-01-19T23:05:45Z", "author": {"login": "msokolov"}, "path": "lucene/core/src/test/org/apache/lucene/index/TestKnnGraph.java", "diffHunk": "@@ -92,7 +108,277 @@ public void testSingleDocRecall() throws  Exception {\n       iw.commit();\n       assertConsistentGraph(iw, values);\n \n-      assertRecall(dir, 0, values[0]);\n+      assertRecall(dir, 1, values[0]);\n+    }\n+  }\n+\n+  public void testDocsDeletionAndRecall() throws  Exception {\n+    /**\n+     * {@code KnnExactVectorValueWeight} applies in-set (i.e. the query vector is exactly in the index)\n+     * deletion strategy to filter all unmatched results searched by {@link org.apache.lucene.search.KnnGraphQuery.KnnExactVectorValueQuery},\n+     * and deletes at most ef*segmentCnt vectors that are the same to the specified queryVector.\n+     */\n+    final class KnnExactVectorValueWeight extends ConstantScoreWeight {\n+      private final String field;\n+      private final ScoreMode scoreMode;\n+      private final float[] queryVector;\n+      private final int ef;\n+\n+      KnnExactVectorValueWeight(Query query, float score, ScoreMode scoreMode, String field, float[] queryVector, int ef) {\n+        super(query, score);\n+        this.field = field;\n+        this.scoreMode = scoreMode;\n+        this.queryVector = queryVector;\n+        this.ef = ef;\n+      }\n+\n+      /**\n+       * Returns a {@link Scorer} which can iterate in order over all matching\n+       * documents and assign them a score.\n+       * <p>\n+       * <b>NOTE:</b> null can be returned if no documents will be scored by this\n+       * query.\n+       * <p>\n+       * <b>NOTE</b>: The returned {@link Scorer} does not have\n+       * {@link LeafReader#getLiveDocs()} applied, they need to be checked on top.\n+       *\n+       * @param context the {@link LeafReaderContext} for which to return the {@link Scorer}.\n+       * @return a {@link Scorer} which scores documents in/out-of order.\n+       * @throws IOException if there is a low-level I/O error\n+       */\n+      @Override\n+      public Scorer scorer(LeafReaderContext context) throws IOException {\n+        ScorerSupplier supplier = scorerSupplier(context);\n+        if (supplier == null) {\n+          return null;\n+        }\n+        return supplier.get(Long.MAX_VALUE);\n+      }\n+\n+      @Override\n+      public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n+        FieldInfo fi = context.reader().getFieldInfos().fieldInfo(field);\n+        int numDimensions = fi.getVectorNumDimensions();\n+        if (numDimensions != queryVector.length) {\n+          throw new IllegalArgumentException(\"field=\\\"\" + field + \"\\\" was indexed with dimensions=\" + numDimensions +\n+              \"; this is incompatible with query dimensions=\" + queryVector.length);\n+        }\n+\n+        final HNSWGraphReader hnswReader = new HNSWGraphReader(field, context);\n+        final VectorValues vectorValues = context.reader().getVectorValues(field);\n+        if (vectorValues == null) {\n+          // No docs in this segment/field indexed any vector values\n+          return null;\n+        }\n+\n+        final Weight weight = this;\n+        return new ScorerSupplier() {\n+          @Override\n+          public Scorer get(long leadCost) throws IOException {\n+            final Neighbors neighbors = hnswReader.searchNeighbors(queryVector, ef, vectorValues);\n+\n+            if (neighbors.size() > 0) {\n+              Neighbor top = neighbors.top();\n+              if (top.distance() > 0) {\n+                neighbors.clear();\n+              } else {\n+                final List<Neighbor> toDeleteNeighbors = new ArrayList<>(neighbors.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a4938ffb54e81bac805f3e0c57af5912d5eb07"}, "originalPosition": 121}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87cf6a4f8b26e9845166e55748e8df63bf276400", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/87cf6a4f8b26e9845166e55748e8df63bf276400", "committedDate": "2020-01-20T02:07:52Z", "message": "move KnnExactVectorValueQuery and KnnExactVectorValueWeight from method nested classes to inner classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a26a9cee6be11cd56a10b9c2f4e0c9d56a34f27", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/4a26a9cee6be11cd56a10b9c2f4e0c9d56a34f27", "committedDate": "2020-01-20T02:10:01Z", "message": "remove unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3ODgxNjYy", "url": "https://github.com/apache/lucene-solr/pull/1169#pullrequestreview-347881662", "createdAt": "2020-01-24T10:59:36Z", "commit": {"oid": "4a26a9cee6be11cd56a10b9c2f4e0c9d56a34f27"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2379, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}