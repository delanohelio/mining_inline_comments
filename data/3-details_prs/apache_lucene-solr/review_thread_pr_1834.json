{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMjQyMjkx", "number": 1834, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxNjo1MzozMFrOEgnaIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo1MDo1NFrOEjDFvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNjM1NTU1OnYy", "diffSide": "RIGHT", "path": "lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxNjo1MzozMFrOHNjDTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNjozOTo0M1rOHOlduQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2NzgyMg==", "bodyText": "I know of several tests that test first with a top-level query and then with a filter to make sure that both the bulk scorer and the scorer are tested. With this change, 50% of the time, we wouldn't be testing the bulk scorer, so I wonder if we should replace random.nextBoolean() with frequently() or something like that.", "url": "https://github.com/apache/lucene-solr/pull/1834#discussion_r483967822", "createdAt": "2020-09-05T16:53:30Z", "author": {"login": "jpountz"}, "path": "lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight.java", "diffHunk": "@@ -85,11 +85,18 @@ public long cost() {\n \n   @Override\n   public BulkScorer bulkScorer(LeafReaderContext context) throws IOException {\n-    BulkScorer inScorer = in.bulkScorer(context);\n+    BulkScorer inScorer;\n+    // We explicitly test both the delegate's bulk scorer, and also the normal scorer.\n+    // This ensures that normal scorers are sometimes tested with an asserting wrapper.\n+    if (random.nextBoolean()) {\n+      inScorer = in.bulkScorer(context);\n+    } else {\n+      inScorer = super.bulkScorer(context);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a007aaa6c72faa35426a69418ab57233eb4ac3c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1NTkyOQ==", "bodyText": "That makes sense to me, I can reduce the frequency with which we take the Scorer path.\nI didn't know about the practice of testing both with a top-level query and a filter. To me this change is still valuable, it ensures we check the scorer/ iterator contract sometimes in a clear + solid way.", "url": "https://github.com/apache/lucene-solr/pull/1834#discussion_r485055929", "createdAt": "2020-09-08T16:39:43Z", "author": {"login": "jtibshirani"}, "path": "lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight.java", "diffHunk": "@@ -85,11 +85,18 @@ public long cost() {\n \n   @Override\n   public BulkScorer bulkScorer(LeafReaderContext context) throws IOException {\n-    BulkScorer inScorer = in.bulkScorer(context);\n+    BulkScorer inScorer;\n+    // We explicitly test both the delegate's bulk scorer, and also the normal scorer.\n+    // This ensures that normal scorers are sometimes tested with an asserting wrapper.\n+    if (random.nextBoolean()) {\n+      inScorer = in.bulkScorer(context);\n+    } else {\n+      inScorer = super.bulkScorer(context);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2NzgyMg=="}, "originalCommit": {"oid": "1a007aaa6c72faa35426a69418ab57233eb4ac3c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTg2MjM3OnYy", "diffSide": "RIGHT", "path": "lucene/CHANGES.txt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo1MDo1NFrOHRMPkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNTo0NTo1NlrOHRba0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4ODQzNA==", "bodyText": "I'm not sure I'd understand what \"sometimes wrap scorers\" would mean as a user reading the changelog. Maybe say something along the lines of \"sometimes exercise the Weight#scorer API rather than Weight#bulkScorer for top-level queries\".", "url": "https://github.com/apache/lucene-solr/pull/1834#discussion_r487788434", "createdAt": "2020-09-14T09:50:54Z", "author": {"login": "jpountz"}, "path": "lucene/CHANGES.txt", "diffHunk": "@@ -204,7 +204,8 @@ Improvements\n * LUCENE-9446: In BooleanQuery rewrite, always remove MatchAllDocsQuery filter clauses\n   when possible. (Julie Tibshirani)\n \n-* LUCENE-9501: Improve how Asserting* test classes handle singleton doc values.\n+* LUCENE-9501: Improve coverage for Asserting* test classes: make sure to handle singleton doc\n+  values, and sometimes wrap Scorers by default. (Julie Tibshirani)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c630178dd3e9a66c13ed43ee3798b081d99ecf43"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAzNzA3Mg==", "bodyText": "This is a good point, I updated the changelog entry.", "url": "https://github.com/apache/lucene-solr/pull/1834#discussion_r488037072", "createdAt": "2020-09-14T15:45:56Z", "author": {"login": "jtibshirani"}, "path": "lucene/CHANGES.txt", "diffHunk": "@@ -204,7 +204,8 @@ Improvements\n * LUCENE-9446: In BooleanQuery rewrite, always remove MatchAllDocsQuery filter clauses\n   when possible. (Julie Tibshirani)\n \n-* LUCENE-9501: Improve how Asserting* test classes handle singleton doc values.\n+* LUCENE-9501: Improve coverage for Asserting* test classes: make sure to handle singleton doc\n+  values, and sometimes wrap Scorers by default. (Julie Tibshirani)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4ODQzNA=="}, "originalCommit": {"oid": "c630178dd3e9a66c13ed43ee3798b081d99ecf43"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1187, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}