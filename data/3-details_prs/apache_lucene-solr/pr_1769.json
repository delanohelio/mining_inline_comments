{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMjYxMDM2", "number": 1769, "title": "SOLR-14789: Absorb the docker-solr repo.", "bodyText": "WIP - https://issues.apache.org/jira/browse/SOLR-14789\nThis is intended for 9.0 only, and will not be backported to 8.x.\nWe can continue using the docker-solr repo for all 8.x.y releases.\nGoals\nThe goal of this PR is to move all functionality for how current solr images are built to lucene solr. However there are clearly a lot of other things we want to accomplish too:\n\nMigrate functionality from the solr/docker/include/scripts into solr/bin or Solr itself\nSupport the \"official\" docker releases (https://hub.docker.com/_/solr not just https://hub.docker.com/apache/solr)\nMake the solr docker file more \"cloud native\"\n\nSince this docker image will not be officially used until 9.0 at the earliest, this gives us time to iterate and accomplish all of these goals. However merging in this initial functionality that works like the current docker-solr setup first lets us more easily make and test these changes.\nSetup of /solr/docker\ngradle assemble will now create a docker image that has been created with contents of :solr:packaging.\nThe \"Solr image\" is broken up into 2 docker files.\n\nThe package dockerfile, which contains the solr release under /opt/solr-build/solr-${VERSION}. This image requires no other content at the end.\nThe runtime dockerfile, which is given the package image name as an input and generates everything currently setup in the Solr docker image, copying the package contents from the package image.\n\nThe runtime docker image is the one that will be pushed to Dockerhub eventually, and is run by users.\nThe idea is that there is also a task to generate the release docker image (which can be found under /solr/docker/package/Dockerfile.release-package) that is then passed to the runtime docker image. But this is a future goal and not necessary in order to merge this PR IMO.\nI basically learned gradle to write this, so please give any advice on how I could make the build process better. I'm sure it is not optimal.\nTesting\nOnce you run gradle assemble, you can test the new docker image in two ways:\n\ngradle :solr:docker:test, which will run the docker-solr integration tests using the newly assembled solr image. This will eventually fail when it reaches the test that needs root permissions however, since gradle doesn't have root permissions itself. This is a TODO.\ndocker run -d -p 8983:8983 -e SOLR_JETTY_HOST=\"0.0.0.0\" apache/solr:9.0.0-SNAPSHOT, then visit the admin screen at http://localhost:8983 .\n\nTODO:\n\n Add ability to build with \"release\" package\n Remove ability to push the package image.\n Integrate gradle :solr:docker:tests into the overall gradle tests\n Make all of the tests work with gradle.", "createdAt": "2020-08-20T21:54:32Z", "url": "https://github.com/apache/lucene-solr/pull/1769", "merged": true, "mergeCommit": {"oid": "485d5fb41a39ab08ae9dca6bdba579aa78e69e2b"}, "closed": true, "closedAt": "2020-09-11T16:29:30Z", "author": {"login": "HoustonPutman"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBIB6EgBqjM2ODA0NTAzNzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdH3KhzgH2gAyNDcxMjYxMDM2OjAzYjAzMDYzYTEwNTJhNDdkMjE5YzZiOThiY2ZlOWZkYTA5NDQ5MTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf52d4f414f5b8101456b82718e82ed2a0db6b02", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/bf52d4f414f5b8101456b82718e82ed2a0db6b02", "committedDate": "2020-08-21T16:10:38Z", "message": "Fixes for building."}, "afterCommit": {"oid": "698409aca0f3cd74e714ee873f950d00b312c325", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/698409aca0f3cd74e714ee873f950d00b312c325", "committedDate": "2020-08-21T17:10:48Z", "message": "Adding gradle build system for the solr/docker."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "698409aca0f3cd74e714ee873f950d00b312c325", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/698409aca0f3cd74e714ee873f950d00b312c325", "committedDate": "2020-08-21T17:10:48Z", "message": "Adding gradle build system for the solr/docker."}, "afterCommit": {"oid": "1b6f45f9422cbe56d0f9ab756a479cf64789d809", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/1b6f45f9422cbe56d0f9ab756a479cf64789d809", "committedDate": "2020-08-21T17:26:26Z", "message": "Adding gradle build system for the solr/docker."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODI3NTg4", "url": "https://github.com/apache/lucene-solr/pull/1769#pullrequestreview-477827588", "createdAt": "2020-08-28T15:32:58Z", "commit": {"oid": "901162da8e71250ab75159262b5373caeea9c2af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTozMjo1OFrOHJLFLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTozMjo1OFrOHJLFLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM4MDc4MQ==", "bodyText": "let's remove mak@trinity10:~$ from the commands", "url": "https://github.com/apache/lucene-solr/pull/1769#discussion_r479380781", "createdAt": "2020-08-28T15:32:58Z", "author": {"login": "thelabdude"}, "path": "solr/docker/docs/docker-networking.md", "diffHunk": "@@ -0,0 +1,249 @@\n+Example of Zookeeper and Solr cluster with Docker networking\n+------------------------------------------------------------\n+\n+_Note: this article dates from Jan 2016. While this approach would still work, in Jan 2019 this would typically done with Docker cluster and orchestration tools like Kubernetes. See for example [this blog post](https://lucidworks.com/2019/02/07/running-solr-on-kubernetes-part-1/)._\n+\n+In this example I'll create a cluster with 3 ZooKeeper nodes and 3 Solr nodes, distributed over 3 machines (trinity10, trinity20, trinity30).\n+I'll use an overlay network, specify fixed IP addresses when creating containers, and I'll pass in explicit `/etc/hosts` entries to make sure they are available even when nodes are down.\n+I won't show the configuration of the key-value store to configuration to enable networking, see [the docs](https://docs.docker.com/engine/userguide/networking/get-started-overlay/) for that.\n+I'll not use Docker Swarm in this example, but specifically place and configure containers where I want them by ssh'ing into the appropriate Docker host.\n+\n+To make this example easier to understand I'll just use shell commands.\n+For actual use you may want to use a fancier deployment tool like [Fabric](http://www.fabfile.org).\n+\n+Note: this example requires Docker 1.10.\n+\n+I'll run these commands from the first machine, trinity10.\n+\n+Create a network named \"netzksolr\" for this cluster. The `--ip-range` specifies the range of\n+addresses to use for containers, whereas the `--subnet` specifies all possible addresses in this\n+network. So effectively, addresses in the subnet but outside the range are reserved for containers\n+that specifically use the `--ip` option.\n+\n+```\n+docker network create --driver=overlay --subnet 192.168.22.0/24 --ip-range=192.168.22.128/25 netzksolr\n+```\n+\n+As a simple test, check the automatic assignment and specific assignment work:\n+\n+```\n+mak@trinity10:~$ docker run -i --rm --net=netzksolr busybox ip -4 addr show eth0 | grep inet", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "901162da8e71250ab75159262b5373caeea9c2af"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODM5Mzc3", "url": "https://github.com/apache/lucene-solr/pull/1769#pullrequestreview-477839377", "createdAt": "2020-08-28T15:49:16Z", "commit": {"oid": "6aca568d32fc6ebd93b00687e6d5fffc4c50785a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTIxNzc4", "url": "https://github.com/apache/lucene-solr/pull/1769#pullrequestreview-478121778", "createdAt": "2020-08-29T11:30:51Z", "commit": {"oid": "6aca568d32fc6ebd93b00687e6d5fffc4c50785a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMTozMDo1MVrOHJa7Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMTozMDo1MVrOHJa7Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0MDMzNA==", "bodyText": "Hi,\nas noted on Slack already. Like for the refguide, don't yet execute docker by default on assemble.\nI would make it optional for now, until we find a way how to assemble docker without docker or make it print a warning if no docker is enabled.", "url": "https://github.com/apache/lucene-solr/pull/1769#discussion_r479640334", "createdAt": "2020-08-29T11:30:51Z", "author": {"login": "uschindler"}, "path": "solr/docker/build.gradle", "diffHunk": "@@ -0,0 +1,95 @@\n+import org.gradle.tooling.model.SourceDirectory\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+plugins {\n+  id \"base\"\n+  id \"com.palantir.docker\" version \"0.25.0\"\n+}\n+\n+subprojects {\n+  apply plugin: 'base'\n+  apply plugin: \"com.palantir.docker\"\n+}\n+\n+description = 'Solr Docker image'\n+\n+docker {\n+  name = \"apache/solr:${version}\"\n+  files file('include'), '.dockerignore'\n+  buildArgs(['BASE_IMAGE' : 'openjdk:11-jre-slim', 'SOLR_PACKAGE_IMAGE' : 'apache/solr-build:local-package', 'SOLR_VERSION': \"${version}\"])\n+}\n+\n+// Create the docker image as a part of the assemble task\n+assemble.dependsOn tasks.docker", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6aca568d32fc6ebd93b00687e6d5fffc4c50785a"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTUwNzEy", "url": "https://github.com/apache/lucene-solr/pull/1769#pullrequestreview-478150712", "createdAt": "2020-08-29T19:39:19Z", "commit": {"oid": "6aca568d32fc6ebd93b00687e6d5fffc4c50785a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxOTozOToyMFrOHJdhiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxOTo0NzozOFrOHJdkUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY4Mjk1NQ==", "bodyText": "Here and probably some README type places, the assumption is that the image is named \"solr\".  Yet it appears that you're deciding that the name \"apache/solr\" is the new default name.  I think pick one or or the other.", "url": "https://github.com/apache/lucene-solr/pull/1769#discussion_r479682955", "createdAt": "2020-08-29T19:39:20Z", "author": {"login": "dsmiley"}, "path": "solr/docker/docs/docker-compose.yml", "diffHunk": "@@ -0,0 +1,13 @@\n+version: '3'\n+services:\n+  solr:\n+    image: solr", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6aca568d32fc6ebd93b00687e6d5fffc4c50785a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY4MzY2Ng==", "bodyText": "Are you making general improvements to the test scripts, or do they relate to necessities of the port to lucene-solr?  I suggest suppressing your natural urge to improve code in a porting job to limit to just do the port.  Future work items can refactor common code out of bash scripts or whatever else.", "url": "https://github.com/apache/lucene-solr/pull/1769#discussion_r479683666", "createdAt": "2020-08-29T19:47:38Z", "author": {"login": "dsmiley"}, "path": "solr/docker/tests/shared.sh", "diffHunk": "@@ -90,18 +90,44 @@ function prepare_dir_to_mount {\n   fi\n   rm -fr \"$folder\" >/dev/null 2>&1\n   mkdir \"$folder\"\n-  #echo \"***** Created varsolr folder $PWD / $folder\"\n+  #echo \"***** Created varsolr folder $BUILD_DIR / $folder\"\n \n   # The /var/solr mountpoint is owned by solr, so when we bind mount there our directory,\n   # owned by the current user in the host, will show as owned by solr, and our attempts\n   # to write to it as the user will fail. To deal with that, set the ACL to allow that.\n   # If you can't use setfacl (eg on macOS), you'll have to chown the directory to 8983, or apply world\n   # write permissions.\n-  if [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n-    # Workaround for macOS\n-    sudo chmod -R 777 \"$folder\"\n-    sudo chown -R \"$userid\" \"$folder\"\n-  else\n+  if command -v setfacl &> /dev/null; then\n     setfacl -m \"u:$userid:rwx\" \"$folder\"\n   fi\n }\n+\n+\n+# Shared setup", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "901162da8e71250ab75159262b5373caeea9c2af"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "697f9d17feed345fd21735abbf87cffe7fcbfe72", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/697f9d17feed345fd21735abbf87cffe7fcbfe72", "committedDate": "2020-09-10T18:58:58Z", "message": "Starting with docker-solr Dockerfile/scripts/tests/docs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8ae02088c06c768256d4f6393e0e2f69b33a9c8", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/a8ae02088c06c768256d4f6393e0e2f69b33a9c8", "committedDate": "2020-09-10T18:58:58Z", "message": "Small changes to the docker scripts."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69f245ac8de07b9213978452aab214e55fd5823d", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/69f245ac8de07b9213978452aab214e55fd5823d", "committedDate": "2020-09-10T18:58:58Z", "message": "Split logic of dockerfile into packaging & runtime"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1369d6ea340a9c42241b143ce6e4fca22d997882", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/1369d6ea340a9c42241b143ce6e4fca22d997882", "committedDate": "2020-09-10T18:58:58Z", "message": "Adding gradle build system for the solr/docker."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cb5a502c87ced32806dde14ad9d6ff6a4f91ee7", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/8cb5a502c87ced32806dde14ad9d6ff6a4f91ee7", "committedDate": "2020-09-10T18:58:58Z", "message": "Moving runtime image to solr/docker. Removing subproject."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abdce37e09610b507edca42ce4700aef89f2805a", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/abdce37e09610b507edca42ce4700aef89f2805a", "committedDate": "2020-09-10T18:58:58Z", "message": "Running tests from gradle file. Setting SOLR_JETTY_PORT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d09f4e6b6bdcf3b9d6b3867e002a0b953980e3f", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/0d09f4e6b6bdcf3b9d6b3867e002a0b953980e3f", "committedDate": "2020-09-10T18:58:58Z", "message": "gradle :solr:docker:test now runs. Ignoring tests that require root permissions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b008dd688730e6c410872a7f0ac175e0d10cb7b", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/5b008dd688730e6c410872a7f0ac175e0d10cb7b", "committedDate": "2020-09-10T18:58:58Z", "message": "Tests should now work, but are not run by default."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f89a1d8ae6d5c1e9d406ac6291a87edc385337c", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/6f89a1d8ae6d5c1e9d406ac6291a87edc385337c", "committedDate": "2020-09-10T18:58:59Z", "message": "Thanks to tim for finding a left over test container."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b310467bfc6dfd6084e1460bede7582c60ec9c58", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/b310467bfc6dfd6084e1460bede7582c60ec9c58", "committedDate": "2020-09-10T18:58:59Z", "message": "Docker no longer run by default with assemble."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d9c391b5ed3275e31aa7bcbda390eb7eb9711ca", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/3d9c391b5ed3275e31aa7bcbda390eb7eb9711ca", "committedDate": "2020-09-10T18:58:59Z", "message": "Tried to change all references to docker-solr and the _/solr image."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac3e698a222b8268eeab4a88eb34211945f0c1a3", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/ac3e698a222b8268eeab4a88eb34211945f0c1a3", "committedDate": "2020-09-10T20:14:48Z", "message": "Rebased with tgz. Small changes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f04209614b55147b361dcae9d5c566a84c85770", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/5f04209614b55147b361dcae9d5c566a84c85770", "committedDate": "2020-08-31T19:36:50Z", "message": "Tried to change all references to docker-solr and the _/solr image."}, "afterCommit": {"oid": "ac3e698a222b8268eeab4a88eb34211945f0c1a3", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/ac3e698a222b8268eeab4a88eb34211945f0c1a3", "committedDate": "2020-09-10T20:14:48Z", "message": "Rebased with tgz. Small changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "386552bf0141438e0edc3b3d0c6802dbdc6eb5f3", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/386552bf0141438e0edc3b3d0c6802dbdc6eb5f3", "committedDate": "2020-09-10T20:19:46Z", "message": "Adding CHANGES.txt entry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MzMwOTcw", "url": "https://github.com/apache/lucene-solr/pull/1769#pullrequestreview-486330970", "createdAt": "2020-09-10T21:42:19Z", "commit": {"oid": "386552bf0141438e0edc3b3d0c6802dbdc6eb5f3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMTo0MjoyMFrOHQGwvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMTo0OToxMlrOHQG8ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1MDA0Nw==", "bodyText": "I think our convention is to declare the plugin version in root build.gradle with apply false", "url": "https://github.com/apache/lucene-solr/pull/1769#discussion_r486650047", "createdAt": "2020-09-10T21:42:20Z", "author": {"login": "madrob"}, "path": "solr/docker/build.gradle", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+plugins {\n+  id \"base\"\n+  id \"com.palantir.docker\" version \"0.25.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "386552bf0141438e0edc3b3d0c6802dbdc6eb5f3"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1MzAyOQ==", "bodyText": "I'm confused why we need this as an intermediate docker image containing just the tgz? Also, why make this configurable and why not FROM scratch?", "url": "https://github.com/apache/lucene-solr/pull/1769#discussion_r486653029", "createdAt": "2020-09-10T21:49:12Z", "author": {"login": "madrob"}, "path": "solr/docker/package/Dockerfile.local-package", "diffHunk": "@@ -0,0 +1,5 @@\n+ARG BASE_IMAGE=alpine:3.12", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "386552bf0141438e0edc3b3d0c6802dbdc6eb5f3"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2ODkyNDE5", "url": "https://github.com/apache/lucene-solr/pull/1769#pullrequestreview-486892419", "createdAt": "2020-09-11T15:08:36Z", "commit": {"oid": "386552bf0141438e0edc3b3d0c6802dbdc6eb5f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTowODozNlrOHQi0fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTowODozNlrOHQi0fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEwOTc1OQ==", "bodyText": "should be apache/solr", "url": "https://github.com/apache/lucene-solr/pull/1769#discussion_r487109759", "createdAt": "2020-09-11T15:08:36Z", "author": {"login": "madrob"}, "path": "solr/docker/Docker-FAQ.md", "diffHunk": "@@ -0,0 +1,320 @@\n+\n+Docker Solr FAQ\n+===============\n+\n+\n+How do I persist Solr data and config?\n+--------------------------------------\n+\n+Your data is persisted already, in your container's filesystem.\n+If you `docker run`, add data to Solr, then `docker stop` and later\n+`docker start`, then your data is still there. The same is true for\n+changes to configuration files.\n+\n+Equally, if you `docker commit` your container, you can later create a new\n+container from that image, and that will have your data in it.\n+\n+For some use-cases it is convenient to provide a modified `solr.in.sh` file to Solr.\n+For example to point Solr to a ZooKeeper host:\n+\n+```\n+docker create --name my_solr -P solr\n+docker cp my_solr:/opt/solr/bin/solr.in.sh .\n+sed -i -e 's/#ZK_HOST=.*/ZK_HOST=cylon.lan:2181/' solr.in.sh\n+docker cp solr.in.sh my_solr:/opt/solr/bin/solr.in.sh\n+docker start my_solr\n+# With a browser go to http://cylon.lan:32873/solr/#/ and confirm \"-DzkHost=cylon.lan:2181\" in the JVM Args section.\n+```\n+\n+But usually when people ask this question, what they are after is a way\n+to store Solr data and config in a separate [Docker Volume](https://docs.docker.com/userguide/dockervolumes/).\n+That is explained in the next two questions.\n+\n+\n+How can I mount a host directory as a data volume?\n+--------------------------------------------------\n+\n+This is useful if you want to inspect or modify the data in the Docker host\n+when the container is not running, and later easily run new containers against that data.\n+This is indeed possible, but there are a few gotchas.\n+\n+Solr stores its core data in the `server/solr` directory, in sub-directories\n+for each core. The `server/solr` directory also contains configuration files\n+that are part of the Solr distribution.\n+Now, if we mounted volumes for each core individually, then that would\n+interfere with Solr trying to create those directories. If instead we make\n+the whole directory a volume, then we need to provide those configuration files\n+in our volume, which we can do by copying them from a temporary container.\n+For example:\n+\n+```\n+# create a directory to store the server/solr directory\n+$ mkdir /home/docker-volumes/mysolr1\n+\n+# make sure its host owner matches the container's solr user\n+$ sudo chown 8983:8983 /home/docker-volumes/mysolr1\n+\n+# copy the solr directory from a temporary container to the volume\n+$ docker run -it --rm -v /home/docker-volumes/mysolr1:/target apache/solr cp -r server/solr /target/\n+\n+# pass the solr directory to a new container running solr\n+$ SOLR_CONTAINER=$(docker run -d -P -v /home/docker-volumes/mysolr1/solr:/opt/solr/server/solr apache/solr)\n+\n+# create a new core\n+$ docker exec -it --user=solr $SOLR_CONTAINER solr create_core -c gettingstarted\n+\n+# check the volume on the host:\n+$ ls /home/docker-volumes/mysolr1/solr/\n+configsets  gettingstarted  README.txt  solr.xml  zoo.cfg\n+```\n+\n+Note that if you add or modify files in that directory from the host, you must `chown 8983:8983` them.\n+\n+\n+How can I use a Data Volume Container?\n+--------------------------------------\n+\n+You can avoid the concerns about UID mismatches above, by using data volumes only from containers.\n+You can create a container with a volume, then point future containers at that same volume.\n+This can be handy if you want to modify the solr image, for example if you want to add a program.\n+By separating the data and the code, you can change the code and re-use the data.\n+\n+But there are pitfalls:\n+\n+- if you remove the container that owns the volume, then you lose your data.\n+  Docker does not even warn you that a running container is dependent on it.\n+- if you point multiple solr containers at the same volume, you will have multiple instances\n+  write to the same files, which will undoubtedly lead to corruption\n+- if you do want to remove that volume, you must do `docker rm -v containername`;\n+  if you forget the `-v` there will be a dangling volume which you can not easily clean up.\n+\n+Here is an example:\n+\n+```\n+# create a container with a volume on the path that solr uses to store data.\n+docker create -v /opt/solr/server/solr --name mysolr1data solr /bin/true\n+\n+# pass the volume to a new container running solr\n+SOLR_CONTAINER=$(docker run -d -P --volumes-from=mysolr1data apache/solr)\n+\n+# create a new core\n+$ docker exec -it --user=solr $SOLR_CONTAINER solr create_core -c gettingstarted\n+\n+# make a change to the config, using the config API\n+docker exec -it --user=solr $SOLR_CONTAINER curl http://localhost:8983/solr/gettingstarted/config -H 'Content-type:application/json' -d'{\n+    \"set-property\" : {\"query.filterCache.autowarmCount\":1000},\n+    \"unset-property\" :\"query.filterCache.size\"}'\n+\n+# verify the change took effect\n+docker exec -it --user=solr $SOLR_CONTAINER curl http://localhost:8983/solr/gettingstarted/config/overlay?omitHeader=true\n+\n+# stop the solr container\n+docker exec -it --user=solr $SOLR_CONTAINER bash -c 'cd server; java -DSTOP.PORT=7983 -DSTOP.KEY=solrrocks -jar start.jar --stop'\n+\n+# create a new container\n+SOLR_CONTAINER=$(docker run -d -P --volumes-from=mysolr1data apache/solr)\n+\n+# check our core is still there:\n+docker exec -it --user=solr $SOLR_CONTAINER ls server/solr/gettingstarted\n+\n+# check the config modification is still there:\n+docker exec -it --user=solr $SOLR_CONTAINER curl http://localhost:8983/solr/gettingstarted/config/overlay?omitHeader=true\n+```\n+\n+\n+Can I use volumes with SOLR_HOME?\n+---------------------------------\n+\n+Solr supports a SOLR_HOME environment variable to point to a non-standard location of the Solr home directory.\n+You can use this in Solr docker, in combination with volumes:\n+\n+```\n+docker run -it -v $PWD/mysolrhome:/mysolrhome -e SOLR_HOME=/mysolrhome apache/solr\n+```\n+\n+This does need a pre-configured directory at that location.\n+\n+To make this easier, Solr docker supports a INIT_SOLR_HOME setting, which copies the contents\n+from the default directory in the image to the SOLR_HOME (if it is empty).\n+\n+```\n+mkdir mysolrhome\n+sudo chown 8983:8983 mysolrhome\n+docker run -it -v $PWD/mysolrhome:/mysolrhome -e SOLR_HOME=/mysolrhome -e INIT_SOLR_HOME=yes apache/solr\n+```\n+\n+Note: If SOLR_HOME is set, the \"solr-precreate\" command will put the created core in the SOLR_HOME directory\n+rather than the \"mycores\" directory.\n+\n+\n+Can I run ZooKeeper and Solr clusters under Docker?\n+---------------------------------------------------\n+\n+At the network level the ZooKeeper nodes need to be able to talk to eachother,\n+and the Solr nodes need to be able to talk to the ZooKeeper nodes and to each other.\n+At the application level, different nodes need to be able to identify and locate each other.\n+In ZooKeeper that is done with a configuration file that lists hostnames or IP addresses for each node.\n+In Solr that is done with a parameter that specifies a host or IP address, which is then stored in ZooKeeper.\n+\n+In typical clusters, those hostnames/IP addresses are pre-defined and remain static through the lifetime of the cluster.\n+In Docker, inter-container communication and multi-host networking can be facilitated by [Docker Networks](https://docs.docker.com/engine/userguide/networking/).\n+But, crucially, Docker does not normally guarantee that IP addresses of containers remain static during the lifetime of a container.\n+In non-networked Docker, the IP address seems to change everytime you stop/start.\n+In a networked Docker, containers can lose their IP address in certain sequences of starting/stopping, unless you take steps to prevent that.\n+\n+IP changes causes problems:\n+\n+- If you use hardcoded IP addresses in configuration, and the addresses of your containers change after a stops/start, then your cluster will stop working and may corrupt itself.\n+- If you use hostnames in configuration, and the addresses of your containers change, then you might run into problems with cached hostname lookups.\n+- And if you use hostnames there is another problem: the names are not defined until the respective container is running,\n+So when for example the first ZooKeeper node starts up, it will attempt a hostname lookup for the other nodes, and that will fail.\n+This is especially a problem for ZooKeeper 3.4.6; future versions are better at recovering.\n+\n+Docker 1.10 has a new `--ip` configuration option that allows you to specify an IP address for a container.\n+It also has a `--ip-range` option that allows you to specify the range that other containers get addresses from.\n+Used together, you can implement static addresses. See [this example](docs/docker-networking.md).\n+\n+\n+Can I run ZooKeeper and Solr with Docker Links?\n+-----------------------------------------------\n+\n+Docker's [Legacy container links](https://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/) provide a way to\n+pass connection configuration between containers. It only works on a single machine, on the default bridge.\n+It provides no facilities for static IPs.\n+Note: this feature is expected to be deprecated and removed in a future release.\n+So really, see the \"Can I run ZooKeeper and Solr clusters under Docker?\" option above instead.\n+\n+But for some use-cases, such as quick demos or one-shot automated testing, it can be convenient.\n+\n+Run ZooKeeper, and define a name so we can link to it:\n+\n+```console\n+$ docker run --name zookeeper -d -p 2181:2181 -p 2888:2888 -p 3888:3888 jplock/zookeeper\n+```\n+\n+Run two Solr nodes, linked to the zookeeper container:\n+\n+```console\n+$ docker run --name solr1 --link zookeeper:ZK -d -p 8983:8983 \\\n+      apache/solr \\\n+      bash -c 'solr start -f -z $ZK_PORT_2181_TCP_ADDR:$ZK_PORT_2181_TCP_PORT'\n+\n+$ docker run --name solr2 --link zookeeper:ZK -d -p 8984:8983 \\\n+      apache/solr \\\n+      bash -c 'solr start -f -z $ZK_PORT_2181_TCP_ADDR:$ZK_PORT_2181_TCP_PORT'\n+```\n+\n+Create a collection:\n+\n+```console\n+$ docker exec -i -t solr1 solr create_collection \\\n+        -c gettingstarted -shards 2 -p 8983\n+```\n+\n+Then go to `http://localhost:8983/solr/#/~cloud` (adjust the hostname for your docker host) to see the two shards and Solr nodes.\n+\n+\n+How can I run ZooKeeper and Solr with Docker Compose?\n+-----------------------------------------------------\n+\n+See the [docker compose example](docs/docker-compose.yml).\n+\n+\n+I'm confused about the different invocations of solr -- help?\n+-------------------------------------------------------------\n+\n+The different invocations of the Solr docker image can look confusing, because the name of the\n+image is \"solr\" and the Solr command is also \"solr\", and the image interprets various arguments in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "386552bf0141438e0edc3b3d0c6802dbdc6eb5f3"}, "originalPosition": 227}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7ee6942260e1ac774dec82eec7ff25b33c76e3f", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/f7ee6942260e1ac774dec82eec7ff25b33c76e3f", "committedDate": "2020-09-11T15:25:44Z", "message": "Change package dockerfile to use scratch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "352f20bf20113a9c93d6c4db807731bcebfdc51c", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/352f20bf20113a9c93d6c4db807731bcebfdc51c", "committedDate": "2020-09-11T15:26:16Z", "message": "Move docker gradle plugin version to base build.gradle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03b03063a1052a47d219c6b98bcfe9fda0944918", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/03b03063a1052a47d219c6b98bcfe9fda0944918", "committedDate": "2020-09-11T15:30:59Z", "message": "Adding mike to CHANGES.txt"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2383, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}