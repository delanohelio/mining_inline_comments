{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MDk4MDUx", "number": 2068, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwOToyNzozOVrOE2c-Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwMjoyODowMlrOE46QVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTMzMjg2OnYy", "diffSide": "RIGHT", "path": "lucene/native/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwOToyNzozOVrOHvQhTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMTowMjo1OVrOHvcG4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMxNTc4OA==", "bodyText": "this should be resolved relative to the JVM we compile against, not gradle's JVM. See alternative-jdk-support.gradle and use root project's property:\n// Set up root project's property.\nrootProject.ext.runtimeJava = altJvm", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r519315788", "createdAt": "2020-11-08T09:27:39Z", "author": {"login": "dweiss"}, "path": "lucene/native/build.gradle", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+apply plugin: 'cpp-library'\n+\n+description = 'Module for native code'\n+\n+library {\n+    baseName = 'NativePosixUtil'\n+\n+    privateHeaders.from file(System.getProperty('java.home') + '/include')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56cfaf6a391dba407c92c6480700fd9399d99f4a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUwNTYzNA==", "bodyText": "Done.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r519505634", "createdAt": "2020-11-09T01:02:59Z", "author": {"login": "zacharymorn"}, "path": "lucene/native/build.gradle", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+apply plugin: 'cpp-library'\n+\n+description = 'Module for native code'\n+\n+library {\n+    baseName = 'NativePosixUtil'\n+\n+    privateHeaders.from file(System.getProperty('java.home') + '/include')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMxNTc4OA=="}, "originalCommit": {"oid": "56cfaf6a391dba407c92c6480700fd9399d99f4a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTM0Nzg0OnYy", "diffSide": "RIGHT", "path": "lucene/native/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwOTozMzo1NVrOHvQrNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMDozMTozN1rOHvb1bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMxODMyNQ==", "bodyText": "Maybe we should check for existence of these folders and add them only if they exist? Seems strange to add includes for all of them.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r519318325", "createdAt": "2020-11-08T09:33:55Z", "author": {"login": "dweiss"}, "path": "lucene/native/build.gradle", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+apply plugin: 'cpp-library'\n+\n+description = 'Module for native code'\n+\n+library {\n+    baseName = 'NativePosixUtil'\n+\n+    privateHeaders.from file(System.getProperty('java.home') + '/include')\n+    privateHeaders.from file(System.getProperty('java.home') + '/include/darwin')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56cfaf6a391dba407c92c6480700fd9399d99f4a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUwMTE2NQ==", "bodyText": "Done. In the newer commit I checked for platform as well as the folder exists before using.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r519501165", "createdAt": "2020-11-09T00:31:37Z", "author": {"login": "zacharymorn"}, "path": "lucene/native/build.gradle", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+apply plugin: 'cpp-library'\n+\n+description = 'Module for native code'\n+\n+library {\n+    baseName = 'NativePosixUtil'\n+\n+    privateHeaders.from file(System.getProperty('java.home') + '/include')\n+    privateHeaders.from file(System.getProperty('java.home') + '/include/darwin')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMxODMyNQ=="}, "originalCommit": {"oid": "56cfaf6a391dba407c92c6480700fd9399d99f4a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTM2MTY2OnYy", "diffSide": "RIGHT", "path": "lucene/native/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwOTozOTozN1rOHvQ0Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwODowODoyN1rOHvi-cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMyMDY0Ng==", "bodyText": "Are these really a folder up from java.home? On my linux (java 11-15) they seem to be right under JDK's home (although I install Java manually, not via distribution-specific package manager).", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r519320646", "createdAt": "2020-11-08T09:39:37Z", "author": {"login": "dweiss"}, "path": "lucene/native/build.gradle", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+apply plugin: 'cpp-library'\n+\n+description = 'Module for native code'\n+\n+library {\n+    baseName = 'NativePosixUtil'\n+\n+    privateHeaders.from file(System.getProperty('java.home') + '/include')\n+    privateHeaders.from file(System.getProperty('java.home') + '/include/darwin')\n+    privateHeaders.from file(System.getProperty('java.home') + '/../include/solaris')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56cfaf6a391dba407c92c6480700fd9399d99f4a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUwMDk4OA==", "bodyText": "These paths were ported based on the original ant target definition below :\n\n  \n    \n      lucene-solr/lucene/contrib/misc/build.xml\n    \n    \n        Lines 44 to 45\n      in\n      005fec5\n    \n    \n    \n    \n\n        \n          \n           <pathelement location=\"${java.home}/../include/linux\"/> \n        \n\n        \n          \n           <pathelement location=\"${java.home}/../include/solaris\"/> \n        \n    \n  \n\n\nMy guess is these paths might now be deprecated in newer JDK installations.\nDo you think this native build feature should be back ported to prior versions? If so, I think it might be safer to have those paths as well.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r519500988", "createdAt": "2020-11-09T00:30:25Z", "author": {"login": "zacharymorn"}, "path": "lucene/native/build.gradle", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+apply plugin: 'cpp-library'\n+\n+description = 'Module for native code'\n+\n+library {\n+    baseName = 'NativePosixUtil'\n+\n+    privateHeaders.from file(System.getProperty('java.home') + '/include')\n+    privateHeaders.from file(System.getProperty('java.home') + '/include/darwin')\n+    privateHeaders.from file(System.getProperty('java.home') + '/../include/solaris')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMyMDY0Ng=="}, "originalCommit": {"oid": "56cfaf6a391dba407c92c6480700fd9399d99f4a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYxODE2MA==", "bodyText": "These paths are wrong, I think. I don't know where they came from but they should correspond to the layout of newer JDK distributions (openjdk).\nI'm not sure Solaris is still needed - I can't test it on Solaris.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r519618160", "createdAt": "2020-11-09T08:08:27Z", "author": {"login": "dweiss"}, "path": "lucene/native/build.gradle", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+apply plugin: 'cpp-library'\n+\n+description = 'Module for native code'\n+\n+library {\n+    baseName = 'NativePosixUtil'\n+\n+    privateHeaders.from file(System.getProperty('java.home') + '/include')\n+    privateHeaders.from file(System.getProperty('java.home') + '/include/darwin')\n+    privateHeaders.from file(System.getProperty('java.home') + '/../include/solaris')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMyMDY0Ng=="}, "originalCommit": {"oid": "56cfaf6a391dba407c92c6480700fd9399d99f4a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDYxNDI1OnYy", "diffSide": "RIGHT", "path": "lucene/misc/native/build.gradle", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMToxNzoxOVrOHwB8XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMzowODo1M1rOHw7hBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyNTUzMg==", "bodyText": "I wonder if we should rename the resulting native library something more specific...", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r520125532", "createdAt": "2020-11-09T21:17:19Z", "author": {"login": "dweiss"}, "path": "lucene/misc/native/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+description = 'Module for native code'\n+\n+apply plugin: 'cpp-library'\n+\n+library {\n+  baseName = 'NativePosixUtil'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3MDU2Mw==", "bodyText": "Given this now also includes the Windows one, and the cpp code focus on doing file IO, I'm guessing something like NativeIOUtil might work ?", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r520270563", "createdAt": "2020-11-10T03:56:09Z", "author": {"login": "zacharymorn"}, "path": "lucene/misc/native/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+description = 'Module for native code'\n+\n+apply plugin: 'cpp-library'\n+\n+library {\n+  baseName = 'NativePosixUtil'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyNTUzMg=="}, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4NDQ2Nw==", "bodyText": "Sure. Maybe LuceneNativeIO though so that it's clear what dll it is?", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r520384467", "createdAt": "2020-11-10T08:44:24Z", "author": {"login": "dweiss"}, "path": "lucene/misc/native/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+description = 'Module for native code'\n+\n+apply plugin: 'cpp-library'\n+\n+library {\n+  baseName = 'NativePosixUtil'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyNTUzMg=="}, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA2ODgwNw==", "bodyText": "Done.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r521068807", "createdAt": "2020-11-11T03:08:53Z", "author": {"login": "zacharymorn"}, "path": "lucene/misc/native/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+description = 'Module for native code'\n+\n+apply plugin: 'cpp-library'\n+\n+library {\n+  baseName = 'NativePosixUtil'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyNTUzMg=="}, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTU4OTUyOnYy", "diffSide": "RIGHT", "path": "lucene/misc/native/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDowNzoxMFrOHwK92A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMzowODoxOVrOHw7fJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3MzM2OA==", "bodyText": "Just curious, shall we also modify the compiler args when it\u2019s on Windows, to be the same with what's used before?\n\n  \n    \n      lucene-solr/lucene/misc/src/java/org/apache/lucene/store/WindowsDirectory.java\n    \n    \n        Lines 31 to 35\n      in\n      ec9a659\n    \n    \n    \n    \n\n        \n          \n            * c:\\mingw\\bin\\g++ -Wall -D_JNI_IMPLEMENTATION_ -Wl,--kill-at  \n        \n\n        \n          \n            * -I\"%JAVA_HOME%\\include\" -I\"%JAVA_HOME%\\include\\win32\" -static-libgcc  \n        \n\n        \n          \n            * -static-libstdc++ -shared WindowsDirectory.cpp -o WindowsDirectory.dll \n        \n\n        \n          \n            *       </blockquote>  \n        \n\n        \n          \n            *       For 64-bit JREs, use mingw64, with the -m64 option.  \n        \n    \n  \n\n\nA quick search shows that some of these flags might be specific to MinGW compiler though, so I'm not sure if these flags are still relevant.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r520273368", "createdAt": "2020-11-10T04:07:10Z", "author": {"login": "zacharymorn"}, "path": "lucene/misc/native/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+description = 'Module for native code'\n+\n+apply plugin: 'cpp-library'\n+\n+library {\n+  baseName = 'NativePosixUtil'\n+\n+  // Native build for Windows platform will be added in later stage\n+  targetMachines = [\n+      machines.linux.x86_64,\n+      machines.macOS.x86_64,\n+      machines.windows.x86_64\n+  ]\n+\n+  // Point at platform-specific sources. Other platforms will be ignored\n+  // (plugin won't find the toolchain).\n+  if (Os.isFamily(Os.FAMILY_WINDOWS)) {\n+    source.from file(\"${projectDir}/src/main/windows\")\n+  } else if (Os.isFamily(Os.FAMILY_UNIX) || Os.isFamily(Os.FAMILY_MAC)) {\n+    source.from file(\"${projectDir}/src/main/posix\")\n+  }\n+}\n+\n+tasks.withType(CppCompile).configureEach {\n+  def javaHome = rootProject.ext.runtimeJava.getInstallationDirectory().getAsFile().getPath()\n+\n+  // Assume standard openjdk layout. This means only one architecture-specific include folder\n+  // is present.\n+  systemIncludes.from file(\"${javaHome}/include\")\n+\n+  for (def path : [\n+      file(\"${javaHome}/include/win32\"),\n+      file(\"${javaHome}/include/darwin\"),\n+      file(\"${javaHome}/include/linux\"),\n+      file(\"${javaHome}/include/solaris\")]) {\n+    if (path.exists()) {\n+      systemIncludes.from path\n+    }\n+  }\n+\n+  compilerArgs.add '-fPIC'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4NTA5MA==", "bodyText": "I wouldn't add anything if it works (and it currently does for me). There are compiler toolchain-specific ways of adding options but like I said - if it's not required, I wouldn't worry about it.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r520385090", "createdAt": "2020-11-10T08:45:18Z", "author": {"login": "dweiss"}, "path": "lucene/misc/native/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+description = 'Module for native code'\n+\n+apply plugin: 'cpp-library'\n+\n+library {\n+  baseName = 'NativePosixUtil'\n+\n+  // Native build for Windows platform will be added in later stage\n+  targetMachines = [\n+      machines.linux.x86_64,\n+      machines.macOS.x86_64,\n+      machines.windows.x86_64\n+  ]\n+\n+  // Point at platform-specific sources. Other platforms will be ignored\n+  // (plugin won't find the toolchain).\n+  if (Os.isFamily(Os.FAMILY_WINDOWS)) {\n+    source.from file(\"${projectDir}/src/main/windows\")\n+  } else if (Os.isFamily(Os.FAMILY_UNIX) || Os.isFamily(Os.FAMILY_MAC)) {\n+    source.from file(\"${projectDir}/src/main/posix\")\n+  }\n+}\n+\n+tasks.withType(CppCompile).configureEach {\n+  def javaHome = rootProject.ext.runtimeJava.getInstallationDirectory().getAsFile().getPath()\n+\n+  // Assume standard openjdk layout. This means only one architecture-specific include folder\n+  // is present.\n+  systemIncludes.from file(\"${javaHome}/include\")\n+\n+  for (def path : [\n+      file(\"${javaHome}/include/win32\"),\n+      file(\"${javaHome}/include/darwin\"),\n+      file(\"${javaHome}/include/linux\"),\n+      file(\"${javaHome}/include/solaris\")]) {\n+    if (path.exists()) {\n+      systemIncludes.from path\n+    }\n+  }\n+\n+  compilerArgs.add '-fPIC'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3MzM2OA=="}, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA2ODMyNA==", "bodyText": "Ok cool. I've updated the comment here to reflect the new way of building the code.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r521068324", "createdAt": "2020-11-11T03:08:19Z", "author": {"login": "zacharymorn"}, "path": "lucene/misc/native/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * This gets separated out from misc module into a native module due to incompatibility between cpp-library and java-library plugins.\n+ * For details, please see https://github.com/gradle/gradle-native/issues/352#issuecomment-461724948\n+ */\n+import org.apache.tools.ant.taskdefs.condition.Os\n+\n+description = 'Module for native code'\n+\n+apply plugin: 'cpp-library'\n+\n+library {\n+  baseName = 'NativePosixUtil'\n+\n+  // Native build for Windows platform will be added in later stage\n+  targetMachines = [\n+      machines.linux.x86_64,\n+      machines.macOS.x86_64,\n+      machines.windows.x86_64\n+  ]\n+\n+  // Point at platform-specific sources. Other platforms will be ignored\n+  // (plugin won't find the toolchain).\n+  if (Os.isFamily(Os.FAMILY_WINDOWS)) {\n+    source.from file(\"${projectDir}/src/main/windows\")\n+  } else if (Os.isFamily(Os.FAMILY_UNIX) || Os.isFamily(Os.FAMILY_MAC)) {\n+    source.from file(\"${projectDir}/src/main/posix\")\n+  }\n+}\n+\n+tasks.withType(CppCompile).configureEach {\n+  def javaHome = rootProject.ext.runtimeJava.getInstallationDirectory().getAsFile().getPath()\n+\n+  // Assume standard openjdk layout. This means only one architecture-specific include folder\n+  // is present.\n+  systemIncludes.from file(\"${javaHome}/include\")\n+\n+  for (def path : [\n+      file(\"${javaHome}/include/win32\"),\n+      file(\"${javaHome}/include/darwin\"),\n+      file(\"${javaHome}/include/linux\"),\n+      file(\"${javaHome}/include/solaris\")]) {\n+    if (path.exists()) {\n+      systemIncludes.from path\n+    }\n+  }\n+\n+  compilerArgs.add '-fPIC'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3MzM2OA=="}, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjMyMjkyOnYy", "diffSide": "RIGHT", "path": "lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODo0NjowNFrOHwR0PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMzowODozNFrOHw7gAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4NTU5Ng==", "bodyText": "I removed the flag and forgot to update the docs here.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r520385596", "createdAt": "2020-11-10T08:46:04Z", "author": {"login": "dweiss"}, "path": "lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.java", "diffHunk": "@@ -47,10 +47,10 @@\n  *\n  * <p>To use this you must compile\n  * NativePosixUtil.cpp (exposes Linux-specific APIs through\n- * JNI) for your platform, by running <code>ant\n- * build-native-unix</code>, and then putting the resulting\n- * <code>libNativePosixUtil.so</code> (from\n- * <code>lucene/build/native</code>) onto your dynamic\n+ * JNI) for your platform, by running <code>\n+ * ./gradlew build -Pbuild.native=true</code>, and then putting the resulting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA2ODU0NA==", "bodyText": "Updated.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r521068544", "createdAt": "2020-11-11T03:08:34Z", "author": {"login": "zacharymorn"}, "path": "lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.java", "diffHunk": "@@ -47,10 +47,10 @@\n  *\n  * <p>To use this you must compile\n  * NativePosixUtil.cpp (exposes Linux-specific APIs through\n- * JNI) for your platform, by running <code>ant\n- * build-native-unix</code>, and then putting the resulting\n- * <code>libNativePosixUtil.so</code> (from\n- * <code>lucene/build/native</code>) onto your dynamic\n+ * JNI) for your platform, by running <code>\n+ * ./gradlew build -Pbuild.native=true</code>, and then putting the resulting", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4NTU5Ng=="}, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjMyNTY5OnYy", "diffSide": "RIGHT", "path": "lucene/packaging/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODo0Njo0M1rOHwR12g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMzowODo0M1rOHw7ggg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4NjAxMA==", "bodyText": "This reference needs an updated path - it'll probably fail when building the whole project.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r520386010", "createdAt": "2020-11-10T08:46:43Z", "author": {"login": "dweiss"}, "path": "lucene/packaging/build.gradle", "diffHunk": "@@ -32,7 +32,9 @@ def includeInBinaries = project(\":lucene\").subprojects.findAll {subproject ->\n         \":lucene:packaging\",\n         \":lucene:documentation\",\n         // Exclude parent container project of analysis modules (no artifacts).\n-        \":lucene:analysis\"\n+        \":lucene:analysis\",\n+        // Exclude native module, which requires manual copying and enabling\n+        \":lucene:native\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA2ODY3NA==", "bodyText": "It did fail, I've updated the reference here and confirmed it's able to build from directory root.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r521068674", "createdAt": "2020-11-11T03:08:43Z", "author": {"login": "zacharymorn"}, "path": "lucene/packaging/build.gradle", "diffHunk": "@@ -32,7 +32,9 @@ def includeInBinaries = project(\":lucene\").subprojects.findAll {subproject ->\n         \":lucene:packaging\",\n         \":lucene:documentation\",\n         // Exclude parent container project of analysis modules (no artifacts).\n-        \":lucene:analysis\"\n+        \":lucene:analysis\",\n+        // Exclude native module, which requires manual copying and enabling\n+        \":lucene:native\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4NjAxMA=="}, "originalCommit": {"oid": "085c71c384442ceb7b2a0ca371429321e7b1b4fe"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzY5MjE3OnYy", "diffSide": "RIGHT", "path": ".gitignore", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwOTo0Nzo1NVrOHxF2UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODoxNDo1NlrOHxu8eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIzODA5Nw==", "bodyText": "Hmm... how come you have intellij's old-style files and not the folder-based layout? :)", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r521238097", "createdAt": "2020-11-11T09:47:55Z", "author": {"login": "dweiss"}, "path": ".gitignore", "diffHunk": "@@ -8,6 +8,10 @@ build/\n /.idea/\n #    IntelliJ creates this folder, ignore.\n /dev-tools/missing-doclet/out/\n+*.iml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7322ef0a4e0dafa12e2f24034fbdea68fdb2f4b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgwMTAxNg==", "bodyText": "Hmm I seems to recall these files were generated after running ./gradlew idea, but I removed them in the latest commit anyway.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r521801016", "createdAt": "2020-11-12T03:29:51Z", "author": {"login": "zacharymorn"}, "path": ".gitignore", "diffHunk": "@@ -8,6 +8,10 @@ build/\n /.idea/\n #    IntelliJ creates this folder, ignore.\n /dev-tools/missing-doclet/out/\n+*.iml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIzODA5Nw=="}, "originalCommit": {"oid": "d7322ef0a4e0dafa12e2f24034fbdea68fdb2f4b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkxMTQxNw==", "bodyText": "Right... gradlew idea is a plugin - it does generate those files. IntelliJ has native gradle support nowadays. See help/IDEs.txt; perhaps it should be clarified there.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r521911417", "createdAt": "2020-11-12T08:14:56Z", "author": {"login": "dweiss"}, "path": ".gitignore", "diffHunk": "@@ -8,6 +8,10 @@ build/\n /.idea/\n #    IntelliJ creates this folder, ignore.\n /dev-tools/missing-doclet/out/\n+*.iml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIzODA5Nw=="}, "originalCommit": {"oid": "d7322ef0a4e0dafa12e2f24034fbdea68fdb2f4b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTI5Njg1OnYy", "diffSide": "RIGHT", "path": "lucene/misc/native/src/main/posix/NativePosixUtil.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMzozMjo0M1rOHxoUQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODoxNjoxNFrOHxu_TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgwMjgxNw==", "bodyText": "These paths need to be adjusted as the native code has been moved in d111039", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r521802817", "createdAt": "2020-11-12T03:32:43Z", "author": {"login": "zacharymorn"}, "path": "lucene/misc/native/src/main/posix/NativePosixUtil.cpp", "diffHunk": "@@ -38,12 +38,12 @@\n \n #ifdef LINUX\n /*\n- * Class:     org_apache_lucene_store_NativePosixUtil\n+ * Class:     org_apache_lucene_misc_store_NativePosixUtil\n  * Method:    posix_fadvise\n  * Signature: (Ljava/io/FileDescriptor;JJI)V\n  */\n extern \"C\"\n-JNIEXPORT jint JNICALL Java_org_apache_lucene_store_NativePosixUtil_posix_1fadvise(JNIEnv *env, jclass _ignore, jobject fileDescriptor, jlong offset, jlong len, jint advice)\n+JNIEXPORT jint JNICALL Java_org_apache_lucene_misc_store_NativePosixUtil_posix_1fadvise(JNIEnv *env, jclass _ignore, jobject fileDescriptor, jlong offset, jlong len, jint advice)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "948f873ba59315d4d79b72d0010b01cb75f72054"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkxMjE0MA==", "bodyText": "Yeah. We really should try to add a test that tries to run with these libs. I don't know how to handle this yet - can be a follow-up issue.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r521912140", "createdAt": "2020-11-12T08:16:14Z", "author": {"login": "dweiss"}, "path": "lucene/misc/native/src/main/posix/NativePosixUtil.cpp", "diffHunk": "@@ -38,12 +38,12 @@\n \n #ifdef LINUX\n /*\n- * Class:     org_apache_lucene_store_NativePosixUtil\n+ * Class:     org_apache_lucene_misc_store_NativePosixUtil\n  * Method:    posix_fadvise\n  * Signature: (Ljava/io/FileDescriptor;JJI)V\n  */\n extern \"C\"\n-JNIEXPORT jint JNICALL Java_org_apache_lucene_store_NativePosixUtil_posix_1fadvise(JNIEnv *env, jclass _ignore, jobject fileDescriptor, jlong offset, jlong len, jint advice)\n+JNIEXPORT jint JNICALL Java_org_apache_lucene_misc_store_NativePosixUtil_posix_1fadvise(JNIEnv *env, jclass _ignore, jobject fileDescriptor, jlong offset, jlong len, jint advice)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgwMjgxNw=="}, "originalCommit": {"oid": "948f873ba59315d4d79b72d0010b01cb75f72054"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTEwMTY1OnYy", "diffSide": "RIGHT", "path": "gradle/native/disable-native.gradle", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwMjoyODowMlrOHzHEsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNzo1Mjo1MFrOHzrWJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM1NTMxNQ==", "bodyText": "This configuration block seems very auto-magical to me in that it somehow gets linked to :lucene:misc:native/build folder (no reference to nativeProjects here),  and the copyNativeDeps task below copies only the needed library artifact without all the nested folder structure (nor does it seems to copy any other random file I created in :lucene:misc:native/build folder to test thing out). Is this some convention trigged by the two attribute settings below?", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r523355315", "createdAt": "2020-11-14T02:28:02Z", "author": {"login": "zacharymorn"}, "path": "gradle/native/disable-native.gradle", "diffHunk": "@@ -17,20 +17,65 @@\n \n // This is the master switch to disable all tasks that compile\n // native (cpp) code.\n-def buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+rootProject.ext {\n+  buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+}\n+\n+// Explicitly list all projects that should be configured for native extensions.\n+// We could scan for projects with a the cpp-library plugin but this is faster.\n+def nativeProjects = allprojects.findAll {it.path in [\n+    \":lucene:misc:native\"\n+]}\n+\n+def javaProjectsWithNativeDeps = allprojects.findAll {it.path in [\n+    \":lucene:misc\"\n+]}\n+\n+// Set up defaults for projects with native dependencies.\n+configure(javaProjectsWithNativeDeps, {\n+  configurations {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a1bdcabe62c4eaa08093e13a8b5e73c0346a7f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQwNjE5Mw==", "bodyText": "Right. This is gradle deep-waters but not too complicated once you get the hang of it. I am personally fond of simple and straightforward code, coming from assembly myself, but these days it's hard to avoid higher-level constructs. Sorry about this!\nSo, the code you asked about essentially applies ('configure') a code block (secont argument to configure - the closure) to all objects that are in the collection that is the first argument to configure. When you look at that patch we create two such collections - nativeProjects and javaProjectsWithNativeDeps, each one with Project instances that match a corresponding path. This is very much as if you copy-pasted the same code in each gradle.build of each corresponding project - avoids repetition, centralises common configuration.\nThe inside of this closure block is where things get more interesting and more gradle-sque. The \"configurations\" block is a project property that declares the project's configurations to which artifacts (or dependencies) can be added. You should understand how this works because this is the core of how it works. See here, for example (gradle documentation is very good, if sometimes scattered across multiple documents):\nhttps://docs.gradle.org/current/userguide/dependency_management.html#declaring-dependencies\nSo, for any project in javaProjectsWithNativeDeps we declare a configuration called \"nativeDeps\". To this configuration we will attach a dependency to a \"native\" project - our cpp-library modules. In case of :lucene:misc we attach it inside build.gradle:\nnativeDeps project(\":lucene:misc:native\")\n\nThen the code declares two project \"extra (ext) properties - testOptions and nativeDepsDir. The testOptions is a an array we use to collect various test attributes from bits and pieces of configuration scattered around other files. To make the evaluation work in the right order (ensure the array is there) we put everything in a deferred-execution block (this is why plugins.withType(JavaPlugin) stuff is needed...).\nFinally, we apply a code closure configuring any of the project's tasks that have the type \"Test\", adding java.library.path system property pointing at the nativeDepsDir property location and a dependency on a task that will copy all dependencies (artifacts produced by dependencies attached to the nativeDeps configuration) to that folder. These two steps are only needed if we indeed plan to run with native libraries so they're wrapped in an 'if'.\n\nand the copyNativeDeps task below copies only the needed library artifact without all the nested folder structure\n\nIt actually synchronizes the state of the target folder with source files. Note that the \"source\" files are pointed to by the configuration (artifacts produced by this configuration dependencies). The cpp-library produces multiple configuration variants (debug, release - with possibly multiple artifacts). This is where it gets tricky and this is why we declared the nativeDeps configuration with some \"attributes\" that allow gradle to pick just one of the produced configurations out of multiple choices. In most Java projects you'd never have to use this but you combined cpp and java. Try removing those attributes from configuration definition and see what happens. Then see this:\nhttps://docs.gradle.org/current/userguide/variant_model.html\nSorry for throwing so much on you but you asked for it! :)", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r523406193", "createdAt": "2020-11-14T10:51:03Z", "author": {"login": "dweiss"}, "path": "gradle/native/disable-native.gradle", "diffHunk": "@@ -17,20 +17,65 @@\n \n // This is the master switch to disable all tasks that compile\n // native (cpp) code.\n-def buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+rootProject.ext {\n+  buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+}\n+\n+// Explicitly list all projects that should be configured for native extensions.\n+// We could scan for projects with a the cpp-library plugin but this is faster.\n+def nativeProjects = allprojects.findAll {it.path in [\n+    \":lucene:misc:native\"\n+]}\n+\n+def javaProjectsWithNativeDeps = allprojects.findAll {it.path in [\n+    \":lucene:misc\"\n+]}\n+\n+// Set up defaults for projects with native dependencies.\n+configure(javaProjectsWithNativeDeps, {\n+  configurations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM1NTMxNQ=="}, "originalCommit": {"oid": "22a1bdcabe62c4eaa08093e13a8b5e73c0346a7f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ2ODQ1MA==", "bodyText": "Wow thanks Dawid so much for the detailed and thorough explanations and pointers! I did come across some of these documentations individually before, but it's just that the combination of configuration + variant + sync + cpp confuses me quite a bit. But it's pretty clear now. Thanks again for your patience and guidance here!\nI do have a final question though. It seems at this point we should also be able to easily support packaging the compiled native code into misc jar package (and change to use the optimized variant of the build), to remove the final manual step to copy around the native library artifact for production usage of WindowsDirectory or NativeUnixDirectory? Do you think this is a good direction to be taken ?", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r523468450", "createdAt": "2020-11-14T22:03:14Z", "author": {"login": "zacharymorn"}, "path": "gradle/native/disable-native.gradle", "diffHunk": "@@ -17,20 +17,65 @@\n \n // This is the master switch to disable all tasks that compile\n // native (cpp) code.\n-def buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+rootProject.ext {\n+  buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+}\n+\n+// Explicitly list all projects that should be configured for native extensions.\n+// We could scan for projects with a the cpp-library plugin but this is faster.\n+def nativeProjects = allprojects.findAll {it.path in [\n+    \":lucene:misc:native\"\n+]}\n+\n+def javaProjectsWithNativeDeps = allprojects.findAll {it.path in [\n+    \":lucene:misc\"\n+]}\n+\n+// Set up defaults for projects with native dependencies.\n+configure(javaProjectsWithNativeDeps, {\n+  configurations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM1NTMxNQ=="}, "originalCommit": {"oid": "22a1bdcabe62c4eaa08093e13a8b5e73c0346a7f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcyMjEwNA==", "bodyText": "This is something I considered but eventually left out. Technically, it's trivial to do but my concern is that then the content of the \"lucene distribution\" depends on the machine you build it on - native libraries will vary and you can't (?) easily compile all libraries for the most common platforms to include all of them in the distribution... I don't know how to solve it.\nUnless those native extensions offer super performance boosts I'd rather treat them as \"sandbox\", expert-level stuff and not include them in the distribution by default? You can bring this issue up on the dev list, perhaps other people have an opinion here - I have never used those extensions myself.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r523722104", "createdAt": "2020-11-15T07:50:26Z", "author": {"login": "dweiss"}, "path": "gradle/native/disable-native.gradle", "diffHunk": "@@ -17,20 +17,65 @@\n \n // This is the master switch to disable all tasks that compile\n // native (cpp) code.\n-def buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+rootProject.ext {\n+  buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+}\n+\n+// Explicitly list all projects that should be configured for native extensions.\n+// We could scan for projects with a the cpp-library plugin but this is faster.\n+def nativeProjects = allprojects.findAll {it.path in [\n+    \":lucene:misc:native\"\n+]}\n+\n+def javaProjectsWithNativeDeps = allprojects.findAll {it.path in [\n+    \":lucene:misc\"\n+]}\n+\n+// Set up defaults for projects with native dependencies.\n+configure(javaProjectsWithNativeDeps, {\n+  configurations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM1NTMxNQ=="}, "originalCommit": {"oid": "22a1bdcabe62c4eaa08093e13a8b5e73c0346a7f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc5ODczMg==", "bodyText": "Unless those native extensions offer super performance boosts I'd rather treat them as \"sandbox\", expert-level stuff and not include them in the distribution by default?\n\nMakes sense. I think as part of https://issues.apache.org/jira/browse/LUCENE-8982 some performance measurement utility may come out, so by then this can be more objectively measured to help further discussions.\nI guess this PR is ready for merge then? Please let me know if there's any other improvement you would like me to make. Thanks again for your help on this!", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r523798732", "createdAt": "2020-11-15T19:03:34Z", "author": {"login": "zacharymorn"}, "path": "gradle/native/disable-native.gradle", "diffHunk": "@@ -17,20 +17,65 @@\n \n // This is the master switch to disable all tasks that compile\n // native (cpp) code.\n-def buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+rootProject.ext {\n+  buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+}\n+\n+// Explicitly list all projects that should be configured for native extensions.\n+// We could scan for projects with a the cpp-library plugin but this is faster.\n+def nativeProjects = allprojects.findAll {it.path in [\n+    \":lucene:misc:native\"\n+]}\n+\n+def javaProjectsWithNativeDeps = allprojects.findAll {it.path in [\n+    \":lucene:misc\"\n+]}\n+\n+// Set up defaults for projects with native dependencies.\n+configure(javaProjectsWithNativeDeps, {\n+  configurations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM1NTMxNQ=="}, "originalCommit": {"oid": "22a1bdcabe62c4eaa08093e13a8b5e73c0346a7f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgwNDMyMQ==", "bodyText": "Yep, I think it's ready! Please monitor jenkins so that we know should something go wrong - if it does we can just turn native builds off (by default).", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r523804321", "createdAt": "2020-11-15T19:47:44Z", "author": {"login": "dweiss"}, "path": "gradle/native/disable-native.gradle", "diffHunk": "@@ -17,20 +17,65 @@\n \n // This is the master switch to disable all tasks that compile\n // native (cpp) code.\n-def buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+rootProject.ext {\n+  buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+}\n+\n+// Explicitly list all projects that should be configured for native extensions.\n+// We could scan for projects with a the cpp-library plugin but this is faster.\n+def nativeProjects = allprojects.findAll {it.path in [\n+    \":lucene:misc:native\"\n+]}\n+\n+def javaProjectsWithNativeDeps = allprojects.findAll {it.path in [\n+    \":lucene:misc\"\n+]}\n+\n+// Set up defaults for projects with native dependencies.\n+configure(javaProjectsWithNativeDeps, {\n+  configurations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM1NTMxNQ=="}, "originalCommit": {"oid": "22a1bdcabe62c4eaa08093e13a8b5e73c0346a7f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkxODAzMA==", "bodyText": "Sure will do. Just to confirm these are all the jobs right https://ci-builds.apache.org/job/Lucene/, and I guess job Lucene-Artifacts-master requires the most attention / monitoring?", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r523918030", "createdAt": "2020-11-16T06:17:24Z", "author": {"login": "zacharymorn"}, "path": "gradle/native/disable-native.gradle", "diffHunk": "@@ -17,20 +17,65 @@\n \n // This is the master switch to disable all tasks that compile\n // native (cpp) code.\n-def buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+rootProject.ext {\n+  buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+}\n+\n+// Explicitly list all projects that should be configured for native extensions.\n+// We could scan for projects with a the cpp-library plugin but this is faster.\n+def nativeProjects = allprojects.findAll {it.path in [\n+    \":lucene:misc:native\"\n+]}\n+\n+def javaProjectsWithNativeDeps = allprojects.findAll {it.path in [\n+    \":lucene:misc\"\n+]}\n+\n+// Set up defaults for projects with native dependencies.\n+configure(javaProjectsWithNativeDeps, {\n+  configurations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM1NTMxNQ=="}, "originalCommit": {"oid": "22a1bdcabe62c4eaa08093e13a8b5e73c0346a7f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk0OTYwNA==", "bodyText": "I think the build mailing list is the easiest to spot problems - builds@lucene.apache.org. There will be some builds there from branches (these can be ignored) but otherwise these are worth taking an occasional look at.", "url": "https://github.com/apache/lucene-solr/pull/2068#discussion_r523949604", "createdAt": "2020-11-16T07:52:50Z", "author": {"login": "dweiss"}, "path": "gradle/native/disable-native.gradle", "diffHunk": "@@ -17,20 +17,65 @@\n \n // This is the master switch to disable all tasks that compile\n // native (cpp) code.\n-def buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+rootProject.ext {\n+  buildNative = propertyOrDefault(\"build.native\", true).toBoolean()\n+}\n+\n+// Explicitly list all projects that should be configured for native extensions.\n+// We could scan for projects with a the cpp-library plugin but this is faster.\n+def nativeProjects = allprojects.findAll {it.path in [\n+    \":lucene:misc:native\"\n+]}\n+\n+def javaProjectsWithNativeDeps = allprojects.findAll {it.path in [\n+    \":lucene:misc\"\n+]}\n+\n+// Set up defaults for projects with native dependencies.\n+configure(javaProjectsWithNativeDeps, {\n+  configurations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM1NTMxNQ=="}, "originalCommit": {"oid": "22a1bdcabe62c4eaa08093e13a8b5e73c0346a7f"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1067, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}