{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MzM2MzMy", "number": 1950, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMTo0MDo0MlrOEranpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMTo0MDo0MlrOEranpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTYwMzU4OnYy", "diffSide": "RIGHT", "path": "gradle/validation/spotless.gradle", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMTo0MDo0MlrOHeLHnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzo1NjozM1rOHeSUdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQwMTUwMw==", "bodyText": "can we exempt other generated files? Otherwise it will make a lot of regeneration tasks stuff no longer idempotent.", "url": "https://github.com/apache/lucene-solr/pull/1950#discussion_r501401503", "createdAt": "2020-10-08T01:40:42Z", "author": {"login": "rmuir"}, "path": "gradle/validation/spotless.gradle", "diffHunk": "@@ -0,0 +1,31 @@\n+\n+def resources = scriptResources(buildscript)\n+ \n+allprojects { prj ->\n+  plugins.withType(JavaPlugin) {\n+    prj.apply plugin: 'com.diffplug.spotless'\n+\n+    spotless {\n+      java {\n+        licenseHeaderFile file(\"${resources}/asl-header.txt\"), '^(\\\\s*package)'\n+        lineEndings 'UNIX'\n+        endWithNewline()\n+        googleJavaFormat('1.9')\n+\n+        // Known problematic files.\n+        targetExclude \"**/HTMLStripCharFilter.java\", \"**/UAX29URLEmailTokenizerImpl.java\", \n+           \"**/PatternParser.java\", \"**/BuildNavDataFiles.java\", \"**/CheckLinksAndAnchors.java\",\n+           \"**/TestSubQueryTransformer.java\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1083eefa88095dbac473a7917342f7a61b0d3cff"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3MzM4MA==", "bodyText": "I was thinking the other way around, actually always apply formatting after they run so that you get the same code in the output after regenerating these source files. This should be idempotent and have clean formatting too.\nI excluded these particular files because they break the formatter... Some of them have no package and others cause stack overflows - google/google-java-format#528", "url": "https://github.com/apache/lucene-solr/pull/1950#discussion_r501473380", "createdAt": "2020-10-08T06:20:43Z", "author": {"login": "dweiss"}, "path": "gradle/validation/spotless.gradle", "diffHunk": "@@ -0,0 +1,31 @@\n+\n+def resources = scriptResources(buildscript)\n+ \n+allprojects { prj ->\n+  plugins.withType(JavaPlugin) {\n+    prj.apply plugin: 'com.diffplug.spotless'\n+\n+    spotless {\n+      java {\n+        licenseHeaderFile file(\"${resources}/asl-header.txt\"), '^(\\\\s*package)'\n+        lineEndings 'UNIX'\n+        endWithNewline()\n+        googleJavaFormat('1.9')\n+\n+        // Known problematic files.\n+        targetExclude \"**/HTMLStripCharFilter.java\", \"**/UAX29URLEmailTokenizerImpl.java\", \n+           \"**/PatternParser.java\", \"**/BuildNavDataFiles.java\", \"**/CheckLinksAndAnchors.java\",\n+           \"**/TestSubQueryTransformer.java\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQwMTUwMw=="}, "originalCommit": {"oid": "1083eefa88095dbac473a7917342f7a61b0d3cff"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4ODc2Ng==", "bodyText": "sorry, wrong button click. I still think this might be the wrong tradeoff. while it might make the gradle look simpler, it makes it awful for the one trying to work with the actual regeneration, it is really hard to keep in working correctly.", "url": "https://github.com/apache/lucene-solr/pull/1950#discussion_r501488766", "createdAt": "2020-10-08T06:58:05Z", "author": {"login": "rmuir"}, "path": "gradle/validation/spotless.gradle", "diffHunk": "@@ -0,0 +1,31 @@\n+\n+def resources = scriptResources(buildscript)\n+ \n+allprojects { prj ->\n+  plugins.withType(JavaPlugin) {\n+    prj.apply plugin: 'com.diffplug.spotless'\n+\n+    spotless {\n+      java {\n+        licenseHeaderFile file(\"${resources}/asl-header.txt\"), '^(\\\\s*package)'\n+        lineEndings 'UNIX'\n+        endWithNewline()\n+        googleJavaFormat('1.9')\n+\n+        // Known problematic files.\n+        targetExclude \"**/HTMLStripCharFilter.java\", \"**/UAX29URLEmailTokenizerImpl.java\", \n+           \"**/PatternParser.java\", \"**/BuildNavDataFiles.java\", \"**/CheckLinksAndAnchors.java\",\n+           \"**/TestSubQueryTransformer.java\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQwMTUwMw=="}, "originalCommit": {"oid": "1083eefa88095dbac473a7917342f7a61b0d3cff"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ5Mjc3Mw==", "bodyText": "Ok, fair enough. I also suggested elsewhere that we might want to just move those generated files into a different sourceset so that it's clear they are generated and they can be wiped easier upon regeneration. Or is there value in keeping them together, do you think?", "url": "https://github.com/apache/lucene-solr/pull/1950#discussion_r501492773", "createdAt": "2020-10-08T07:07:15Z", "author": {"login": "dweiss"}, "path": "gradle/validation/spotless.gradle", "diffHunk": "@@ -0,0 +1,31 @@\n+\n+def resources = scriptResources(buildscript)\n+ \n+allprojects { prj ->\n+  plugins.withType(JavaPlugin) {\n+    prj.apply plugin: 'com.diffplug.spotless'\n+\n+    spotless {\n+      java {\n+        licenseHeaderFile file(\"${resources}/asl-header.txt\"), '^(\\\\s*package)'\n+        lineEndings 'UNIX'\n+        endWithNewline()\n+        googleJavaFormat('1.9')\n+\n+        // Known problematic files.\n+        targetExclude \"**/HTMLStripCharFilter.java\", \"**/UAX29URLEmailTokenizerImpl.java\", \n+           \"**/PatternParser.java\", \"**/BuildNavDataFiles.java\", \"**/CheckLinksAndAnchors.java\",\n+           \"**/TestSubQueryTransformer.java\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQwMTUwMw=="}, "originalCommit": {"oid": "1083eefa88095dbac473a7917342f7a61b0d3cff"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxMTkyOA==", "bodyText": "its worth thinking about yeah. if there was a consolidated list of them maybe it would make other tasks more intuitive: e.g. remove the crazy \"Generated\" matching that's in RAT and simply exclude them from license analysis too.", "url": "https://github.com/apache/lucene-solr/pull/1950#discussion_r501511928", "createdAt": "2020-10-08T07:43:35Z", "author": {"login": "rmuir"}, "path": "gradle/validation/spotless.gradle", "diffHunk": "@@ -0,0 +1,31 @@\n+\n+def resources = scriptResources(buildscript)\n+ \n+allprojects { prj ->\n+  plugins.withType(JavaPlugin) {\n+    prj.apply plugin: 'com.diffplug.spotless'\n+\n+    spotless {\n+      java {\n+        licenseHeaderFile file(\"${resources}/asl-header.txt\"), '^(\\\\s*package)'\n+        lineEndings 'UNIX'\n+        endWithNewline()\n+        googleJavaFormat('1.9')\n+\n+        // Known problematic files.\n+        targetExclude \"**/HTMLStripCharFilter.java\", \"**/UAX29URLEmailTokenizerImpl.java\", \n+           \"**/PatternParser.java\", \"**/BuildNavDataFiles.java\", \"**/CheckLinksAndAnchors.java\",\n+           \"**/TestSubQueryTransformer.java\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQwMTUwMw=="}, "originalCommit": {"oid": "1083eefa88095dbac473a7917342f7a61b0d3cff"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxOTQ3OQ==", "bodyText": "Ok, I'll see what can be done when I get there.", "url": "https://github.com/apache/lucene-solr/pull/1950#discussion_r501519479", "createdAt": "2020-10-08T07:56:33Z", "author": {"login": "dweiss"}, "path": "gradle/validation/spotless.gradle", "diffHunk": "@@ -0,0 +1,31 @@\n+\n+def resources = scriptResources(buildscript)\n+ \n+allprojects { prj ->\n+  plugins.withType(JavaPlugin) {\n+    prj.apply plugin: 'com.diffplug.spotless'\n+\n+    spotless {\n+      java {\n+        licenseHeaderFile file(\"${resources}/asl-header.txt\"), '^(\\\\s*package)'\n+        lineEndings 'UNIX'\n+        endWithNewline()\n+        googleJavaFormat('1.9')\n+\n+        // Known problematic files.\n+        targetExclude \"**/HTMLStripCharFilter.java\", \"**/UAX29URLEmailTokenizerImpl.java\", \n+           \"**/PatternParser.java\", \"**/BuildNavDataFiles.java\", \"**/CheckLinksAndAnchors.java\",\n+           \"**/TestSubQueryTransformer.java\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQwMTUwMw=="}, "originalCommit": {"oid": "1083eefa88095dbac473a7917342f7a61b0d3cff"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1124, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}