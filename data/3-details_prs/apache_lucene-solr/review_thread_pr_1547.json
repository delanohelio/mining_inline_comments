{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NTg3ODcw", "number": 1547, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzoyMzoxOFrOEBPFXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzo0MjoyN1rOEBPM3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NzMxMTY3OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/pkg/PackageLoader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzoyMzoxOFrOGc91wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMDowMjo0M1rOGdFMaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyNjQ5Nw==", "bodyText": "Can you please configure your IDE to put java.* import statements up front instead of below?", "url": "https://github.com/apache/lucene-solr/pull/1547#discussion_r433026497", "createdAt": "2020-06-01T03:23:18Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageLoader.java", "diffHunk": "@@ -17,31 +17,25 @@\n \n package org.apache.solr.pkg;\n \n-import java.io.Closeable;\n-import java.io.IOException;\n-import java.lang.invoke.MethodHandles;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Set;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.CopyOnWriteArrayList;\n-\n+import org.apache.lucene.analysis.util.ResourceLoaderAware;\n import org.apache.solr.common.MapWriter;\n+import org.apache.solr.common.SolrException;\n import org.apache.solr.common.cloud.ZkStateReader;\n import org.apache.solr.core.CoreContainer;\n import org.apache.solr.core.SolrCore;\n import org.apache.solr.core.SolrResourceLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.io.Closeable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "918cb0c81cfc3ff4161eca4221aef617c167a587"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0Njk4NA==", "bodyText": "OK", "url": "https://github.com/apache/lucene-solr/pull/1547#discussion_r433146984", "createdAt": "2020-06-01T10:02:43Z", "author": {"login": "noblepaul"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageLoader.java", "diffHunk": "@@ -17,31 +17,25 @@\n \n package org.apache.solr.pkg;\n \n-import java.io.Closeable;\n-import java.io.IOException;\n-import java.lang.invoke.MethodHandles;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Set;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.CopyOnWriteArrayList;\n-\n+import org.apache.lucene.analysis.util.ResourceLoaderAware;\n import org.apache.solr.common.MapWriter;\n+import org.apache.solr.common.SolrException;\n import org.apache.solr.common.cloud.ZkStateReader;\n import org.apache.solr.core.CoreContainer;\n import org.apache.solr.core.SolrCore;\n import org.apache.solr.core.SolrResourceLoader;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.io.Closeable;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyNjQ5Nw=="}, "originalCommit": {"oid": "918cb0c81cfc3ff4161eca4221aef617c167a587"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NzMxMzUxOnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/pkg/PackageLoader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzoyNToxNFrOGc921w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzoyNToxNFrOGc921w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyNjc3NQ==", "bodyText": "incomplete comment?  Could use an explanation as to why. SolrCoreAware isn't handled here.", "url": "https://github.com/apache/lucene-solr/pull/1547#discussion_r433026775", "createdAt": "2020-06-01T03:25:14Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageLoader.java", "diffHunk": "@@ -301,6 +295,32 @@ public String toString() {\n       }\n     }\n   }\n+  static class PackageResourceLoader extends SolrResourceLoader {\n+\n+    PackageResourceLoader(String name, List<Path> classpath, Path instanceDir, ClassLoader parent) {\n+      super(name, classpath, instanceDir, parent);\n+    }\n+\n+    @Override\n+    public <T> boolean addToCoreAware(T obj) {\n+      //do not do anything\n+      //this class is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "918cb0c81cfc3ff4161eca4221aef617c167a587"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NzMyMTQyOnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/pkg/PackageLoader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzozMzoxNVrOGc97gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMDoyNTo1NVrOGdFxRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyNzk3MA==", "bodyText": "Lets figure out why the base class doesn't just immediately call inform like this here.  What test then fails?  I've read an interesting JIRA issue: https://issues.apache.org/jira/browse/SOLR-8311  (lots of info there; I recommend reading all of it)  It's been on my mind for some time now actually since when I was cleaning up SolrResourceLoader since this \"live\" wart seems like a hack.", "url": "https://github.com/apache/lucene-solr/pull/1547#discussion_r433027970", "createdAt": "2020-06-01T03:33:15Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageLoader.java", "diffHunk": "@@ -301,6 +295,32 @@ public String toString() {\n       }\n     }\n   }\n+  static class PackageResourceLoader extends SolrResourceLoader {\n+\n+    PackageResourceLoader(String name, List<Path> classpath, Path instanceDir, ClassLoader parent) {\n+      super(name, classpath, instanceDir, parent);\n+    }\n+\n+    @Override\n+    public <T> boolean addToCoreAware(T obj) {\n+      //do not do anything\n+      //this class is\n+      return false;\n+    }\n+\n+    @Override\n+    public <T> boolean addToResourceLoaderAware(T obj) {\n+      if (obj instanceof ResourceLoaderAware) {\n+        assertAwareCompatibility(ResourceLoaderAware.class, obj);\n+        try {\n+          ((ResourceLoaderAware) obj).inform(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "918cb0c81cfc3ff4161eca4221aef617c167a587"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1NjQyMg==", "bodyText": "I think the order has to be\n\ncreate instance\ninit()\nSolrCoreAware.inform() , ResourceLoaderAware.inform()\n\nI've made the relevant changes. Pls review", "url": "https://github.com/apache/lucene-solr/pull/1547#discussion_r433156422", "createdAt": "2020-06-01T10:25:55Z", "author": {"login": "noblepaul"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageLoader.java", "diffHunk": "@@ -301,6 +295,32 @@ public String toString() {\n       }\n     }\n   }\n+  static class PackageResourceLoader extends SolrResourceLoader {\n+\n+    PackageResourceLoader(String name, List<Path> classpath, Path instanceDir, ClassLoader parent) {\n+      super(name, classpath, instanceDir, parent);\n+    }\n+\n+    @Override\n+    public <T> boolean addToCoreAware(T obj) {\n+      //do not do anything\n+      //this class is\n+      return false;\n+    }\n+\n+    @Override\n+    public <T> boolean addToResourceLoaderAware(T obj) {\n+      if (obj instanceof ResourceLoaderAware) {\n+        assertAwareCompatibility(ResourceLoaderAware.class, obj);\n+        try {\n+          ((ResourceLoaderAware) obj).inform(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyNzk3MA=="}, "originalCommit": {"oid": "918cb0c81cfc3ff4161eca4221aef617c167a587"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NzMyNTM5OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/pkg/PackagePluginHolder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzozNzozMFrOGc999Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzozNzozMFrOGc999Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyODU5Nw==", "bodyText": "Aha; makes sense.", "url": "https://github.com/apache/lucene-solr/pull/1547#discussion_r433028597", "createdAt": "2020-06-01T03:37:30Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackagePluginHolder.java", "diffHunk": "@@ -117,6 +114,13 @@ protected void initNewInstance(PackageLoader.Package.Version newest) {\n     Object instance = SolrCore.createInstance(pluginInfo.className,\n         pluginMeta.clazz, pluginMeta.getCleanTag(), core, newest.getLoader());\n     PluginBag.initInstance(instance, pluginInfo);\n+    if (instance instanceof SolrCoreAware) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "918cb0c81cfc3ff4161eca4221aef617c167a587"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NzMzMDg0OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzo0MjoyN1rOGc-A_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzo0MjoyN1rOGc-A_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyOTM3Mg==", "bodyText": "Should this not be in its own method now too?", "url": "https://github.com/apache/lucene-solr/pull/1547#discussion_r433029372", "createdAt": "2020-06-01T03:42:27Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java", "diffHunk": "@@ -566,25 +566,42 @@ static void clearCache() {\n \n     } catch (Exception e) {\n       throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n-          \"Error instantiating class: '\" + clazz.getName() + \"'\", e);\n+              \"Error instantiating class: '\" + clazz.getName() + \"'\", e);\n     }\n \n-    if (!live) {\n-      if (obj instanceof SolrCoreAware) {\n-        assertAwareCompatibility(SolrCoreAware.class, obj);\n-        waitingForCore.add((SolrCoreAware) obj);\n+    addToCoreAware(obj);\n+    addToResourceLoaderAware(obj);\n+    if(!live) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "918cb0c81cfc3ff4161eca4221aef617c167a587"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1435, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}