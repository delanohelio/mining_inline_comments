{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNjAzMjUz", "number": 1847, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDowNDoyNFrOEhmfdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDowOTozN1rOEhmnjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjY5MTEwOnYy", "diffSide": "RIGHT", "path": "lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDowNDoyNFrOHPAMWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDowNDoyNFrOHPAMWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ5Mzg1MA==", "bodyText": "Ha.", "url": "https://github.com/apache/lucene-solr/pull/1847#discussion_r485493850", "createdAt": "2020-09-09T10:04:24Z", "author": {"login": "mikemccand"}, "path": "lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter.java", "diffHunk": "@@ -193,4 +189,9 @@ private void write(BytesRef bytes) throws IOException {\n   private void newLine() throws IOException {\n     SimpleTextUtil.writeNewline(out);\n   }\n+\n+  @Override\n+  public long ramBytesUsed() {\n+    return scratch.get().bytes.length;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edaaaeb1b5fb7fb6187f8e2a3efa648ef1485a18"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjcwMDgwOnYy", "diffSide": "RIGHT", "path": "lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDowNjozNlrOHPAR9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDowNjozNlrOHPAR9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ5NTI4Ng==", "bodyText": "Hmm what is happening here?  Are we using this new accountable member somewhere?  I don't see it in the diffs?  Oh, I see, it is returned in DefaultIndexingChain.getChildResources(), ok!  Maybe add comment above its declaration explaining that our parent/owning DefaultIndexingChain returns/uses it?", "url": "https://github.com/apache/lucene-solr/pull/1847#discussion_r485495286", "createdAt": "2020-09-09T10:06:36Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer.java", "diffHunk": "@@ -42,6 +44,7 @@\n   protected void initStoredFieldsWriter() throws IOException {\n     if (writer == null) { // TODO can we allocate this in the ctor? we call start document for every doc anyway\n       this.writer = codec.storedFieldsFormat().fieldsWriter(directory, info, IOContext.DEFAULT);\n+      accountable = writer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edaaaeb1b5fb7fb6187f8e2a3efa648ef1485a18"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjcxMTgxOnYy", "diffSide": "RIGHT", "path": "lucene/core/src/java/org/apache/lucene/util/Accountable.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDowOTozN1rOHPAY2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNzo1ODo1MFrOHRIK2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ5NzA0OQ==", "bodyText": "Interface members are always static final right?", "url": "https://github.com/apache/lucene-solr/pull/1847#discussion_r485497049", "createdAt": "2020-09-09T10:09:37Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/Accountable.java", "diffHunk": "@@ -41,4 +41,8 @@\n     return Collections.emptyList();\n   }\n \n+  /**\n+   * An accountable that always returns 0\n+   */\n+  Accountable NULL_ACCOUNTABLE = () -> 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edaaaeb1b5fb7fb6187f8e2a3efa648ef1485a18"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY5NjQ2MQ==", "bodyText": "yes", "url": "https://github.com/apache/lucene-solr/pull/1847#discussion_r487696461", "createdAt": "2020-09-14T07:12:26Z", "author": {"login": "s1monw"}, "path": "lucene/core/src/java/org/apache/lucene/util/Accountable.java", "diffHunk": "@@ -41,4 +41,8 @@\n     return Collections.emptyList();\n   }\n \n+  /**\n+   * An accountable that always returns 0\n+   */\n+  Accountable NULL_ACCOUNTABLE = () -> 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ5NzA0OQ=="}, "originalCommit": {"oid": "edaaaeb1b5fb7fb6187f8e2a3efa648ef1485a18"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcxNTkzOQ==", "bodyText": "To avoid such questions, you can be explicit.", "url": "https://github.com/apache/lucene-solr/pull/1847#discussion_r487715939", "createdAt": "2020-09-14T07:48:32Z", "author": {"login": "uschindler"}, "path": "lucene/core/src/java/org/apache/lucene/util/Accountable.java", "diffHunk": "@@ -41,4 +41,8 @@\n     return Collections.emptyList();\n   }\n \n+  /**\n+   * An accountable that always returns 0\n+   */\n+  Accountable NULL_ACCOUNTABLE = () -> 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ5NzA0OQ=="}, "originalCommit": {"oid": "edaaaeb1b5fb7fb6187f8e2a3efa648ef1485a18"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcyMTY5MA==", "bodyText": "sure, but do we then initialize all booleans with = false? I thinks it's totally obsolet.", "url": "https://github.com/apache/lucene-solr/pull/1847#discussion_r487721690", "createdAt": "2020-09-14T07:58:50Z", "author": {"login": "s1monw"}, "path": "lucene/core/src/java/org/apache/lucene/util/Accountable.java", "diffHunk": "@@ -41,4 +41,8 @@\n     return Collections.emptyList();\n   }\n \n+  /**\n+   * An accountable that always returns 0\n+   */\n+  Accountable NULL_ACCOUNTABLE = () -> 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ5NzA0OQ=="}, "originalCommit": {"oid": "edaaaeb1b5fb7fb6187f8e2a3efa648ef1485a18"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1205, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}