{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTM2OTkz", "number": 1334, "title": "SOLR-8306: Enhance ExpandComponent to allow expand.hits=0", "bodyText": "Description\nEnables ExpandComponent to allow expand.hits=0 for those who don't want an expanded document returned and only want the numFound returned from the expand section.\nSolution\nPlease provide a short description of the approach taken to implement your solution.\nTests\nWe have been using this patch in our internal fork of SOLR for years so this has been thoroughly tested to ensure this functionality works as desired. Unit tests have been added for this functionality and all tests pass.\nChecklist\nPlease review the following and check all that apply:\n\n I have reviewed the guidelines for How to Contribute and my code conforms to the standards described there to the best of my ability.\n I have created a Jira issue and added the issue ID to my pull request title.\n I have given Solr maintainers access to contribute to my PR branch. (optional but recommended)\n I have developed this patch against the master branch.\n I have run ant precommit and the appropriate test suite.\n I have added tests for my changes.\n I have added documentation for the Ref Guide (for Solr changes only).", "createdAt": "2020-03-10T13:35:35Z", "url": "https://github.com/apache/lucene-solr/pull/1334", "merged": true, "mergeCommit": {"oid": "fda935482b76b3640ce4b02f9af026f7696f2ff7"}, "closed": true, "closedAt": "2020-03-18T03:53:05Z", "author": {"login": "ameliahenderson"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNJ_LXgFqTM3NDA2NDY4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcObP6DABqjMxMzU4MTgwNDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MDY0Njgy", "url": "https://github.com/apache/lucene-solr/pull/1334#pullrequestreview-374064682", "createdAt": "2020-03-13T05:57:05Z", "commit": {"oid": "f6adb70d07c46cd6f64f47fafb165c2888033f06"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNTo1NzowNVrOF14ZfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNjowNDo1NFrOF14gUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0Mjg3Nw==", "bodyText": "This should be in 8.6 probably in optimization section", "url": "https://github.com/apache/lucene-solr/pull/1334#discussion_r392042877", "createdAt": "2020-03-13T05:57:05Z", "author": {"login": "munendrasn"}, "path": "solr/CHANGES.txt", "diffHunk": "@@ -114,6 +114,8 @@ Improvements\n * SOLR-13965: In GraphHandler, support <expressible> configuration and deprecate <streamFunctions> configuration.\n    (Eric Pugh via Christine Poerschke)\n \n+* SOLR-8306: Enhance ExpandComponent to allow expand.hits=0 (Marshall Sanders, Amelia Henderson)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6adb70d07c46cd6f64f47fafb165c2888033f06"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MzIwNg==", "bodyText": "Here, maxScore is always 0 even if score is requested and I think this needs to be documented", "url": "https://github.com/apache/lucene-solr/pull/1334#discussion_r392043206", "createdAt": "2020-03-13T05:58:44Z", "author": {"login": "munendrasn"}, "path": "solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java", "diffHunk": "@@ -420,37 +421,48 @@ public void process(ResponseBuilder rb) throws IOException {\n     CharsRefBuilder charsRef = new CharsRefBuilder();\n     for (LongObjectCursor<Collector> cursor : groups) {\n       long groupValue = cursor.key;\n-      TopDocsCollector<?> topDocsCollector = TopDocsCollector.class.cast(cursor.value);\n-      TopDocs topDocs = topDocsCollector.topDocs();\n-      ScoreDoc[] scoreDocs = topDocs.scoreDocs;\n-      if (scoreDocs.length > 0) {\n-        if (returnFields.wantsScore() && sort != null) {\n-          TopFieldCollector.populateScores(scoreDocs, searcher, query);\n-        }\n-        int[] docs = new int[scoreDocs.length];\n-        float[] scores = new float[scoreDocs.length];\n-        for (int i = 0; i < docs.length; i++) {\n-          ScoreDoc scoreDoc = scoreDocs[i];\n-          docs[i] = scoreDoc.doc;\n-          scores[i] = scoreDoc.score;\n+      if (cursor.value instanceof TopDocsCollector) {\n+        TopDocsCollector<?> topDocsCollector = TopDocsCollector.class.cast(cursor.value);\n+        TopDocs topDocs = topDocsCollector.topDocs();\n+        ScoreDoc[] scoreDocs = topDocs.scoreDocs;\n+        if (scoreDocs.length > 0) {\n+          if (returnFields.wantsScore() && sort != null) {\n+            TopFieldCollector.populateScores(scoreDocs, searcher, query);\n+          }\n+          int[] docs = new int[scoreDocs.length];\n+          float[] scores = new float[scoreDocs.length];\n+          for (int i = 0; i < docs.length; i++) {\n+            ScoreDoc scoreDoc = scoreDocs[i];\n+            docs[i] = scoreDoc.doc;\n+            scores[i] = scoreDoc.score;\n+          }\n+          assert topDocs.totalHits.relation == TotalHits.Relation.EQUAL_TO;\n+          DocSlice slice = new DocSlice(0, docs.length, docs, scores, topDocs.totalHits.value, Float.NaN);\n+          addGroupSliceToOutputMap(fieldType, ordBytes, outMap, charsRef, groupValue, slice);\n         }\n-        assert topDocs.totalHits.relation == TotalHits.Relation.EQUAL_TO;\n-        DocSlice slice = new DocSlice(0, docs.length, docs, scores, topDocs.totalHits.value, Float.NaN);\n-\n-        if(fieldType instanceof StrField) {\n-          final BytesRef bytesRef = ordBytes.get((int)groupValue);\n-          fieldType.indexedToReadable(bytesRef, charsRef);\n-          String group = charsRef.toString();\n-          outMap.add(group, slice);\n-        } else {\n-          outMap.add(numericToString(fieldType, groupValue), slice);\n+      } else {\n+        int totalHits = ((TotalHitCountCollector) cursor.value).getTotalHits();\n+        if (totalHits > 0) {\n+          DocSlice slice = new DocSlice(0, 0, null, null, totalHits, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6adb70d07c46cd6f64f47fafb165c2888033f06"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MzkxNg==", "bodyText": "I think this method should be part of GroupCollector (default implementation) and method name could simply be getCollector", "url": "https://github.com/apache/lucene-solr/pull/1334#discussion_r392043916", "createdAt": "2020-03-13T06:01:45Z", "author": {"login": "munendrasn"}, "path": "solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java", "diffHunk": "@@ -668,6 +676,18 @@ public void collect(int docId) throws IOException {\n \n   }\n \n+  private static Collector getExpandCollector(int limit, Sort sort) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6adb70d07c46cd6f64f47fafb165c2888033f06"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0Mzk3NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/lucene-solr/pull/1334#discussion_r392043974", "createdAt": "2020-03-13T06:02:02Z", "author": {"login": "munendrasn"}, "path": "solr/core/src/java/org/apache/solr/search/DocSlice.java", "diffHunk": "@@ -56,7 +56,7 @@ public DocSlice(int offset, int len, int[] docs, float[] scores, long matches, f\n     this.scores=scores;\n     this.matches=matches;\n     this.maxScore=maxScore;\n-    this.ramBytesUsed = BASE_RAM_BYTES_USED + ((long)docs.length << 2) + (scores == null ? 0 : ((long)scores.length<<2)+RamUsageEstimator.NUM_BYTES_ARRAY_HEADER);\n+    this.ramBytesUsed = BASE_RAM_BYTES_USED + (docs == null ? 0 : ((long)docs.length << 2)) + (scores == null ? 0 : ((long)scores.length<<2)+RamUsageEstimator.NUM_BYTES_ARRAY_HEADER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6adb70d07c46cd6f64f47fafb165c2888033f06"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0NDUzNw==", "bodyText": "Is it possible to add a case w/o collapse too (with expand.field) and with fl with and w/o score?", "url": "https://github.com/apache/lucene-solr/pull/1334#discussion_r392044537", "createdAt": "2020-03-13T06:04:23Z", "author": {"login": "munendrasn"}, "path": "solr/core/src/test/org/apache/solr/handler/component/DistributedExpandComponentTest.java", "diffHunk": "@@ -153,6 +153,23 @@ public void test() throws Exception {\n     assertExpandGroupCountAndOrder(\"group3\", 1, results, \"9\");\n     assertExpandGroupCountAndOrder(\"group4\", 1, results, \"14\");\n \n+    //Test expand.rows = 0 - no docs only expand count\n+\n+    params = new ModifiableSolrParams();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6adb70d07c46cd6f64f47fafb165c2888033f06"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0NDYyNg==", "bodyText": "Same as above so that we can cover more cases", "url": "https://github.com/apache/lucene-solr/pull/1334#discussion_r392044626", "createdAt": "2020-03-13T06:04:54Z", "author": {"login": "munendrasn"}, "path": "solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent.java", "diffHunk": "@@ -234,6 +234,21 @@ private void _testExpand(String group, String floatAppend, String hint) throws E\n         \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n     );\n \n+    //Test expand.rows = 0 - no docs only expand count\n+    params = new ModifiableSolrParams();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6adb70d07c46cd6f64f47fafb165c2888033f06"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MzQ2NzIx", "url": "https://github.com/apache/lucene-solr/pull/1334#pullrequestreview-375346721", "createdAt": "2020-03-16T15:50:12Z", "commit": {"oid": "f20f2203dd82ed8a2f6f4b44a3c1c04ba90ef628"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTo1MDoxMlrOF26dlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTo1MjowMlrOF26iww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyNTI3MQ==", "bodyText": "Maybe change the wording here, something like Do not collect expand documents when expand.rows=0\nthere is no expand.hits parameter", "url": "https://github.com/apache/lucene-solr/pull/1334#discussion_r393125271", "createdAt": "2020-03-16T15:50:12Z", "author": {"login": "munendrasn"}, "path": "solr/CHANGES.txt", "diffHunk": "@@ -57,7 +57,7 @@ Improvements\n \n Optimizations\n ---------------------\n-(No changes)\n+* SOLR-8306: Enhance ExpandComponent to allow expand.hits=0 (Marshall Sanders, Amelia Henderson)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20f2203dd82ed8a2f6f4b44a3c1c04ba90ef628"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyNjU5NQ==", "bodyText": "Thanks for the documentation update. I think this should be part of expand.rows=0. Something like this https://github.com/apache/lucene-solr/pull/1334/files#diff-9c5999131702feec07a6b7057fa3bcd7R23", "url": "https://github.com/apache/lucene-solr/pull/1334#discussion_r393126595", "createdAt": "2020-03-16T15:52:02Z", "author": {"login": "munendrasn"}, "path": "solr/solr-ref-guide/src/collapse-and-expand-results.adoc", "diffHunk": "@@ -142,6 +142,8 @@ The \u201cexpand=true\u201d parameter turns on the ExpandComponent. The ExpandComponen\n \n Inside the expanded section there is a _map_ with each group head pointing to the expanded documents that are within the group. As applications iterate the main collapsed result set, they can access the _expanded_ map to retrieve the expanded groups.\n \n+If you would like to have only the number of documents found from the groups in the expanded section returned and not the actual documents, you can set \"expand.rows=0\". Note that when using \"expand.rows=0\", score won\u2019t be computed for the expanded section even when requested so maxScore will not be available.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20f2203dd82ed8a2f6f4b44a3c1c04ba90ef628"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDA5MjI3", "url": "https://github.com/apache/lucene-solr/pull/1334#pullrequestreview-375409227", "createdAt": "2020-03-16T16:56:27Z", "commit": {"oid": "db723e7fd60f0d0e4f353c7c9dc01d994cb9b3f1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d93c45a5d8927f8fbaa8f346ac355a4c9f1dba93", "author": {"user": {"login": "ameliahenderson", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/d93c45a5d8927f8fbaa8f346ac355a4c9f1dba93", "committedDate": "2020-03-17T04:43:59Z", "message": "SOLR-8306: Enhance ExpandComponent to allow expand.hits=0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8bd8969a54bb75e30ee9311f9fc52e409c2c7b0", "author": {"user": {"login": "ameliahenderson", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/d8bd8969a54bb75e30ee9311f9fc52e409c2c7b0", "committedDate": "2020-03-17T04:43:59Z", "message": "Update changes.txt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a884762ac6b5f1ee6f74b26bbed01fc461ed89f", "author": {"user": {"login": "ameliahenderson", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/1a884762ac6b5f1ee6f74b26bbed01fc461ed89f", "committedDate": "2020-03-17T04:43:59Z", "message": "PR review updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "130700e14b13aff27f09eddc4d48a3c4e3687512", "author": {"user": {"login": "ameliahenderson", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/130700e14b13aff27f09eddc4d48a3c4e3687512", "committedDate": "2020-03-17T04:43:59Z", "message": "updates to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42c4436689ddcd7d9b2eecc7bb3ee01a1f8c9db5", "author": {"user": {"login": "ameliahenderson", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/42c4436689ddcd7d9b2eecc7bb3ee01a1f8c9db5", "committedDate": "2020-03-17T04:43:59Z", "message": "updates to docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db723e7fd60f0d0e4f353c7c9dc01d994cb9b3f1", "author": {"user": {"login": "ameliahenderson", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/db723e7fd60f0d0e4f353c7c9dc01d994cb9b3f1", "committedDate": "2020-03-16T16:35:38Z", "message": "updates to docs"}, "afterCommit": {"oid": "42c4436689ddcd7d9b2eecc7bb3ee01a1f8c9db5", "author": {"user": {"login": "ameliahenderson", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/42c4436689ddcd7d9b2eecc7bb3ee01a1f8c9db5", "committedDate": "2020-03-17T04:43:59Z", "message": "updates to docs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2190, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}