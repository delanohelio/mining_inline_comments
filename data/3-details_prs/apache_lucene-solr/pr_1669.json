{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MzMxMzUx", "number": 1669, "title": "SOLR-14151 Make schema components load from packages", "bodyText": "", "createdAt": "2020-07-13T15:32:21Z", "url": "https://github.com/apache/lucene-solr/pull/1669", "merged": true, "mergeCommit": {"oid": "03d658a7bc306370cfce6ef92f34f151db7ad3dc"}, "closed": true, "closedAt": "2020-07-16T06:05:25Z", "author": {"login": "noblepaul"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczzbKlgH2gAyNDQ4MzMxMzUxOjU5MDUzNDE2ZmNmMjExNTMwNWM3NjhlMTJmN2RiNDVmY2UwNDI1NjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1Y54sgH2gAyNDQ4MzMxMzUxOmFjYTNmOTJkOTY1OTA0OWUzMDUyNDVhOTliMGE0MGE0NDBmNjc1NWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59053416fcf2115305c768e12f7db45fce042565", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/59053416fcf2115305c768e12f7db45fce042565", "committedDate": "2020-07-11T07:51:03Z", "message": "SOLR-14155: Load all other SolrCore plugins from packages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae2dfc69303191a0d030770eaa39a0a6f4b62f13", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/ae2dfc69303191a0d030770eaa39a0a6f4b62f13", "committedDate": "2020-07-12T10:01:37Z", "message": "more review commnets incorporated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc3599b15ad1545a8801c12ed13b2c8480f99fb3", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/fc3599b15ad1545a8801c12ed13b2c8480f99fb3", "committedDate": "2020-07-12T12:04:22Z", "message": "precommit errs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90516874d8e5621c032a779b7d0a853bf13ee2c4", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/90516874d8e5621c032a779b7d0a853bf13ee2c4", "committedDate": "2020-07-12T12:14:26Z", "message": "use proper generics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bc2221d59e328068586486d70ef6604ee994864", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/9bc2221d59e328068586486d70ef6604ee994864", "committedDate": "2020-07-12T12:21:54Z", "message": "use Long instead of UUID"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5398927056efb4308c0408d578ed9de47bc9bec", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/f5398927056efb4308c0408d578ed9de47bc9bec", "committedDate": "2020-07-13T01:47:54Z", "message": "precommit errs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f764ca9af0fd1b98c059db5b13467517b2d4848", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/3f764ca9af0fd1b98c059db5b13467517b2d4848", "committedDate": "2020-07-13T01:58:19Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a874bfc5e517234b66b6a0630b6e898bbfb9969d", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/a874bfc5e517234b66b6a0630b6e898bbfb9969d", "committedDate": "2020-07-13T02:06:19Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1284e1f2ca7cd370304ca484046d8f5f5249129", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/c1284e1f2ca7cd370304ca484046d8f5f5249129", "committedDate": "2020-07-13T15:27:40Z", "message": "SOLR-14151: Make schema components load from packages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d964ae3cc2e327a9451c257689207ca8903a1dc", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/8d964ae3cc2e327a9451c257689207ca8903a1dc", "committedDate": "2020-07-13T15:29:16Z", "message": "ASL headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b113c9f42a291e915693f0d65cadd76a50a10518", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/b113c9f42a291e915693f0d65cadd76a50a10518", "committedDate": "2020-07-13T15:31:40Z", "message": "formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08d26db8f39df9452f9dad298269cf7840a93e45", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/08d26db8f39df9452f9dad298269cf7840a93e45", "committedDate": "2020-07-13T15:57:02Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78f40aef7ac48322762ab1250d22b8c3ee59bf1d", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/78f40aef7ac48322762ab1250d22b8c3ee59bf1d", "committedDate": "2020-07-13T15:59:20Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f46030ac0b85926b1c865db57c07722d63140177", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/f46030ac0b85926b1c865db57c07722d63140177", "committedDate": "2020-07-13T16:00:51Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9c73f2918024d9f35102ce2d42ed4143babbccd", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/d9c73f2918024d9f35102ce2d42ed4143babbccd", "committedDate": "2020-07-13T16:02:09Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55595b8fcf109917b7ff5d9313c3fbd9b605b258", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/55595b8fcf109917b7ff5d9313c3fbd9b605b258", "committedDate": "2020-07-13T16:02:49Z", "message": "precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/ec5d0b216690016af9e25689001aa1fa2e0f21d0", "committedDate": "2020-07-14T05:38:16Z", "message": "more javadocs and removed some unnecessary code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MTUxMzIw", "url": "https://github.com/apache/lucene-solr/pull/1669#pullrequestreview-448151320", "createdAt": "2020-07-14T14:18:39Z", "commit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDoxODozOVrOGxV0SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNToyNTo1MVrOGxY7Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MDg1Ng==", "bodyText": "this is not used?", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454390856", "createdAt": "2020-07-14T14:18:39Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java", "diffHunk": "@@ -752,6 +765,9 @@ public void close() throws IOException {\n   }\n \n \n+  public CoreContainer getCoreContainer(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MjM2OA==", "bodyText": "I don't think we need UUID because AFAICT the usage is entirely within the node.  Instead, just use a static AtomicLong counter like, for example, SearchHandler.ridCounter and then declare this instance field here as a simple primitive long.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454392368", "createdAt": "2020-07-14T14:20:49Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/SolrCore.java", "diffHunk": "@@ -191,6 +191,11 @@\n \n   private String name;\n   private String logid; // used to show what name is set\n+  /**\n+   * A unique id to differentiate multiple instances of the same core\n+   * If we reload a core, the name remains same , but the id will be new\n+   */\n+  public final UUID uniqueId = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwNDM0Mw==", "bodyText": "This is not used?", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454404343", "createdAt": "2020-07-14T14:36:19Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java", "diffHunk": "@@ -198,6 +206,11 @@ synchronized void reloadLuceneSPI() {\n     TokenizerFactory.reloadTokenizers(this.classLoader);\n   }\n \n+  public SolrCore getCore(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwNTI2Ng==", "bodyText": "nitpick: auto-format this code to be consistent with spaces", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454405266", "createdAt": "2020-07-14T14:37:25Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/handler/SchemaHandler.java", "diffHunk": "@@ -202,6 +202,38 @@ private void handleGET(SolrQueryRequest req, SolrQueryResponse rsp) {\n     }\n   }\n \n+  /**If a plugin is loaded from a package, the version of the package being used should be added\n+   * to the response\n+   *\n+   */\n+  @SuppressWarnings(\"rawtypes\")\n+  private  void insertPackageInfo(Object o, SolrQueryRequest req) {\n+    if(!req.getParams().getBool(\"meta\",false)) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwODM5Ng==", "bodyText": "This code here returns a class and not an instance.  This seems wrong?", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454408396", "createdAt": "2020-07-14T14:41:30Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/handler/StreamHandler.java", "diffHunk": "@@ -158,8 +158,8 @@ public Class getClazz() {\n     }\n \n     @Override\n-    protected void initNewInstance(PackageLoader.Package.Version newest) {\n-      clazz = newest.getLoader().findClass(pluginInfo.className, Expressible.class);\n+    protected Object initNewInstance(PackageLoader.Package.Version newest) {\n+      return clazz = newest.getLoader().findClass(pluginInfo.className, Expressible.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwOTgwMw==", "bodyText": "nit: you re-ordered the imports in a way not consistent with most classes.  java package should come first.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454409803", "createdAt": "2020-07-14T14:43:33Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageAPI.java", "diffHunk": "@@ -52,6 +42,11 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.io.IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxMTQ5Mg==", "bodyText": "nit: please auto-format for space consistency", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454411492", "createdAt": "2020-07-14T14:45:37Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageListeners.java", "diffHunk": "@@ -96,15 +97,42 @@ private synchronized void invokeListeners(PackageLoader.Package pkg) {\n \n \n   public interface Listener {\n-    /**Name of the package or null to loisten to all package changes\n+    /**Name of the package or null to listen to all package changes\n      */\n     String packageName();\n \n     PluginInfo pluginInfo();\n \n-    void changed(PackageLoader.Package pkg);\n+    void changed(PackageLoader.Package pkg, Ctx ctx);\n \n     PackageLoader.Package.Version getPackageVersion();\n+    class Ctx {\n+      private Map<String, Runnable > runLater;\n+\n+      /** If there are multiple packages to be updated and there are multiple listeners,\n+       * This is executed after all of the {@link Listener#changed(PackageLoader.Package, Ctx)}\n+       * calls are invoked. The name is a unique identifier that can be used by consumers to avoid duplicate\n+       * If no deduplication is required, use null\n+       * runnable objects\n+       */\n+      public void runLater(String name,  Runnable runnable  ) {\n+        if(runLater == null) runLater = new LinkedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxOTExMA==", "bodyText": "nit:\nSingle-line javadocs can entirely be in one line:\n/** Name of the package or null to listen to all package changes */\n\nMulti-line are formatted like this:\n/**\n * Summary sentence.\n * More info.\n */\n\nI see this formatting inconsistency in lots of your javadocs.  I know it's not a big deal yet it's still gives code not adhering to this a sloppy feel.  I find https://google.github.io/styleguide/javaguide.html#s7-javadoc useful to refer to, and it's perhaps the most popular Java style guide.\nYou might try Opt-Cmd-L if you use IntelliJ on a Mac to reformat selected text.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454419110", "createdAt": "2020-07-14T14:55:27Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageListeners.java", "diffHunk": "@@ -96,15 +97,42 @@ private synchronized void invokeListeners(PackageLoader.Package pkg) {\n \n \n   public interface Listener {\n-    /**Name of the package or null to loisten to all package changes\n+    /**Name of the package or null to listen to all package changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQyMTgxMQ==", "bodyText": "I think you mean, use null for the name and not for the Runnable object.  The runnable is required.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454421811", "createdAt": "2020-07-14T14:58:55Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageListeners.java", "diffHunk": "@@ -96,15 +97,42 @@ private synchronized void invokeListeners(PackageLoader.Package pkg) {\n \n \n   public interface Listener {\n-    /**Name of the package or null to loisten to all package changes\n+    /**Name of the package or null to listen to all package changes\n      */\n     String packageName();\n \n     PluginInfo pluginInfo();\n \n-    void changed(PackageLoader.Package pkg);\n+    void changed(PackageLoader.Package pkg, Ctx ctx);\n \n     PackageLoader.Package.Version getPackageVersion();\n+    class Ctx {\n+      private Map<String, Runnable > runLater;\n+\n+      /** If there are multiple packages to be updated and there are multiple listeners,\n+       * This is executed after all of the {@link Listener#changed(PackageLoader.Package, Ctx)}\n+       * calls are invoked. The name is a unique identifier that can be used by consumers to avoid duplicate\n+       * If no deduplication is required, use null\n+       * runnable objects", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQyNTM0MQ==", "bodyText": "Could use find a Solr based ExecutorService for this instead?  It sets up MDC and we ensure it gets shut down.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454425341", "createdAt": "2020-07-14T15:03:28Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageListeners.java", "diffHunk": "@@ -96,15 +97,42 @@ private synchronized void invokeListeners(PackageLoader.Package pkg) {\n \n \n   public interface Listener {\n-    /**Name of the package or null to loisten to all package changes\n+    /**Name of the package or null to listen to all package changes\n      */\n     String packageName();\n \n     PluginInfo pluginInfo();\n \n-    void changed(PackageLoader.Package pkg);\n+    void changed(PackageLoader.Package pkg, Ctx ctx);\n \n     PackageLoader.Package.Version getPackageVersion();\n+    class Ctx {\n+      private Map<String, Runnable > runLater;\n+\n+      /** If there are multiple packages to be updated and there are multiple listeners,\n+       * This is executed after all of the {@link Listener#changed(PackageLoader.Package, Ctx)}\n+       * calls are invoked. The name is a unique identifier that can be used by consumers to avoid duplicate\n+       * If no deduplication is required, use null\n+       * runnable objects\n+       */\n+      public void runLater(String name,  Runnable runnable  ) {\n+        if(runLater == null) runLater = new LinkedHashMap<>();\n+        if(name == null) {\n+          name = runnable.getClass().getSimpleName() + \"@\" + runnable.hashCode();\n+        }\n+        runLater.put(name, runnable);\n+      }\n+      private void runLaterTasks(){\n+        if(runLater == null) return;\n+        new Thread(() -> runLater.forEach((s, runnable) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQyODYwMg==", "bodyText": "nit: spacing issue.\nAlso, please use 'final' for all fields that are final and not just some.  Likewise for 'private' for fields than can be private.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454428602", "createdAt": "2020-07-14T15:08:00Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/SchemaPluginsLoader.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.pkg;\n+\n+import org.apache.lucene.analysis.util.ResourceLoaderAware;\n+import org.apache.solr.common.MapWriter;\n+import org.apache.solr.common.SolrException;\n+import org.apache.solr.core.CoreContainer;\n+import org.apache.solr.core.PluginInfo;\n+import org.apache.solr.core.SolrClassLoader;\n+import org.apache.solr.core.SolrResourceLoader;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.function.Function;\n+/**\n+ * A {@link SolrClassLoader} that is specifically designed to load schema plugins from packages.\n+ * This class would register a listener for any package that is used in a schema and reload the schema\n+ * if any of those packages are updated\n+ * */\n+public class SchemaPluginsLoader implements SolrClassLoader {\n+    final CoreContainer coreContainer;\n+    final SolrResourceLoader loader;\n+    final Function<String, String> pkgVersionSupplier;\n+    private Map<String ,PackageAPI.PkgVersion> packageVersions =  new HashMap<>(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzMzkyMg==", "bodyText": "nit: see my longer comment on formatting javadoc.  This case right here really gets to me.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454433922", "createdAt": "2020-07-14T15:15:15Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/SolrClassLoader.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.solr.core;\n+\n+\n+/**A generic interface to load plugin classes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ0MTczMA==", "bodyText": "This seems problematic.  The code involved in index schema loading has access to two fields that both implement SolrClassLoader:  loader and solrClassLoader which you just added.  And then you changed many lines to use SolrClassLoader which just as well could have been as it was before -- loader (SRL).  I can see that you're doing this so that a new SchemaPluginsLoader thing could be used.  What if SchemaPluginsLoader was an SRL itself, and delegated the resource-loading methods to the \"real\" SRL?\nPut differently, we could create a synthetic SRL whose methods delegate to an appropriate plugin enabled ClassLoader and a real SRL for the configSet to find resources.  WDYT?", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454441730", "createdAt": "2020-07-14T15:25:51Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/schema/IndexSchema.java", "diffHunk": "@@ -188,6 +190,7 @@ public IndexSchema(String name, InputSource is, Version luceneVersion, SolrResou\n   protected IndexSchema(Version luceneVersion, SolrResourceLoader loader, Properties substitutableProperties) {\n     this.luceneVersion = Objects.requireNonNull(luceneVersion);\n     this.loader = loader;\n+    this.solrClassLoader = loader.getCore() == null? loader: loader.getCore().getSchemaPluginsLoader();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d0b216690016af9e25689001aa1fa2e0f21d0"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09cb96c3c274c6f9ed7ea2f7f439cab07a73c30c", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/09cb96c3c274c6f9ed7ea2f7f439cab07a73c30c", "committedDate": "2020-07-14T23:38:10Z", "message": "implement review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73a6354cc301eeb19ed5f34dbea0991385e0c4d6", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/73a6354cc301eeb19ed5f34dbea0991385e0c4d6", "committedDate": "2020-07-14T23:42:25Z", "message": "implement review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfe650b194e5a55d4cff2042bac551ab38b30cf6", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/dfe650b194e5a55d4cff2042bac551ab38b30cf6", "committedDate": "2020-07-15T00:00:58Z", "message": "more cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b815339f58698d047605d803166c7925bd8c71a3", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/b815339f58698d047605d803166c7925bd8c71a3", "committedDate": "2020-07-15T00:53:44Z", "message": "refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NTk4ODI4", "url": "https://github.com/apache/lucene-solr/pull/1669#pullrequestreview-448598828", "createdAt": "2020-07-15T03:09:46Z", "commit": {"oid": "b815339f58698d047605d803166c7925bd8c71a3"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMzowOTo0NlrOGxsk8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMzoyNDoyOFrOGxszOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc2Mzc2Mw==", "bodyText": "I think using the generic interface Function here is pushing the bounds of readability/intuitiveness.  Lets just provide an interface/class instead.  Perhaps get() and getForce() with no boolean arg needed.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454763763", "createdAt": "2020-07-15T03:09:46Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/ConfigSet.java", "diffHunk": "@@ -30,15 +32,18 @@\n \n   private final SolrConfig solrconfig;\n \n-  private final IndexSchema indexSchema;\n+  /**Provide a Schema object on demand\n+   * The first Boolean is to signify a a forcefetch\n+   */\n+  private final Function<Boolean, IndexSchema> indexSchema;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b815339f58698d047605d803166c7925bd8c71a3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc2NTAyNg==", "bodyText": "plus mention it's optional, and then if it's specified and the coreId doesn't match, then the reload is a no-op.  Maybe rename coreId to ifCoreIdMatches to reflect not only what it is but how it's used.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454765026", "createdAt": "2020-07-15T03:15:03Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -1588,20 +1590,32 @@ private CoreDescriptor reloadCoreDescriptor(CoreDescriptor oldDesc) {\n     return ret;\n   }\n \n+  /**\n+   * reloads a core\n+   * refer {@link CoreContainer#reload(String, UUID)} for details\n+   */\n+  public void reload(String name) {\n+    reload(name, null);\n+  }\n   /**\n    * Recreates a SolrCore.\n    * While the new core is loading, requests will continue to be dispatched to\n    * and processed by the old core\n    *\n    * @param name the name of the SolrCore to reload\n+   * @param coreId The unique Id of the core", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b815339f58698d047605d803166c7925bd8c71a3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc2NjAyOQ==", "bodyText": "nit: another example of oddly formatted javadoc.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454766029", "createdAt": "2020-07-15T03:18:49Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/handler/SchemaHandler.java", "diffHunk": "@@ -202,6 +202,38 @@ private void handleGET(SolrQueryRequest req, SolrQueryResponse rsp) {\n     }\n   }\n \n+  /**If a plugin is loaded from a package, the version of the package being used should be added", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b815339f58698d047605d803166c7925bd8c71a3"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc2NjUyMg==", "bodyText": "I find this confusing... it could just be the name.  Something that implements SolrClassLoader should probably have a name that makes that aspect more pronounced and less so the listener aspect.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454766522", "createdAt": "2020-07-15T03:20:36Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/MultiPackageListener.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.solr.pkg;\n+\n+import org.apache.lucene.analysis.util.ResourceLoaderAware;\n+import org.apache.solr.common.MapWriter;\n+import org.apache.solr.common.SolrException;\n+import org.apache.solr.core.CoreContainer;\n+import org.apache.solr.core.PluginInfo;\n+import org.apache.solr.core.SolrClassLoader;\n+import org.apache.solr.core.SolrResourceLoader;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.function.Function;\n+/**\n+ * A {@link SolrClassLoader} that is designed to listen to a set of packages.\n+ * This class would register a listener each package that is loaded through this\n+ * if any of those packages are updated , the onReload runnable is executed\n+ * */\n+public class MultiPackageListener implements SolrClassLoader , PackageListeners.Listener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b815339f58698d047605d803166c7925bd8c71a3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc2NzQxOQ==", "bodyText": "BTW I do like these sorts of changes where you've found SRL used where the caller really just needs a class loader.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r454767419", "createdAt": "2020-07-15T03:24:28Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/util/plugin/AbstractPluginLoader.java", "diffHunk": "@@ -86,7 +86,7 @@ public AbstractPluginLoader(String type, Class<T> pluginClassType)\n    * @param node - the XML node defining this plugin\n    */\n   @SuppressWarnings(\"unchecked\")\n-  protected T create( SolrResourceLoader loader, String name, String className, Node node ) throws Exception\n+  protected T create(SolrClassLoader loader, String name, String className, Node node ) throws Exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b815339f58698d047605d803166c7925bd8c71a3"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "502ac3e8e80881df833673a467de125fdf218f90", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/502ac3e8e80881df833673a467de125fdf218f90", "committedDate": "2020-07-16T02:29:39Z", "message": "more cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76b62c23024594189c4f874275a152326f703bea", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/76b62c23024594189c4f874275a152326f703bea", "committedDate": "2020-07-16T02:35:34Z", "message": "more cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec769dc71095f0468aba070bdd7a86d19e62130c", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/ec769dc71095f0468aba070bdd7a86d19e62130c", "committedDate": "2020-07-16T02:43:29Z", "message": "more cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd6974b7b0525a63da52e0ad1e4f4c864a31bd8c", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/bd6974b7b0525a63da52e0ad1e4f4c864a31bd8c", "committedDate": "2020-07-16T02:43:47Z", "message": "more cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NTA4NDU4", "url": "https://github.com/apache/lucene-solr/pull/1669#pullrequestreview-449508458", "createdAt": "2020-07-16T05:02:49Z", "commit": {"oid": "bd6974b7b0525a63da52e0ad1e4f4c864a31bd8c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNTowMjo0OVrOGyaNnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNTowNDo1M1rOGyaPgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMTQ1NQ==", "bodyText": "https://google.github.io/styleguide/javaguide.html#s7-javadoc\nGlad to see this supplier though.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r455511455", "createdAt": "2020-07-16T05:02:49Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/ConfigSet.java", "diffHunk": "@@ -79,4 +75,14 @@ public NamedList getProperties() {\n   public boolean isTrusted() {\n     return trusted;\n   }\n+\n+  /**Provide a Schema object on demand", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd6974b7b0525a63da52e0ad1e4f4c864a31bd8c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMTkzOA==", "bodyText": "Good name.", "url": "https://github.com/apache/lucene-solr/pull/1669#discussion_r455511938", "createdAt": "2020-07-16T05:04:53Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/pkg/PackageListeningClassLoader.java", "diffHunk": "@@ -35,7 +35,7 @@\n  * This class would register a listener each package that is loaded through this\n  * if any of those packages are updated , the onReload runnable is executed\n  * */\n-public class MultiPackageListener implements SolrClassLoader , PackageListeners.Listener {\n+public class PackageListeningClassLoader implements SolrClassLoader , PackageListeners.Listener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd6974b7b0525a63da52e0ad1e4f4c864a31bd8c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "947229d1517c89593e9994d8ae7fb92cc1d7d1f2", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/947229d1517c89593e9994d8ae7fb92cc1d7d1f2", "committedDate": "2020-07-16T06:02:28Z", "message": "CHANGES.txt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aca3f92d9659049e305245a99b0a40a440f6755c", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/aca3f92d9659049e305245a99b0a40a440f6755c", "committedDate": "2020-07-16T06:05:01Z", "message": "javadocs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2462, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}