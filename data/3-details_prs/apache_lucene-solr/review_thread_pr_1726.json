{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0ODAzNjc1", "number": 1726, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDozMjo0MVrOEWWIhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDoxNjo0OFrOEXDDBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODY2NzU5OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDozMjo0MVrOG9nB7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDozMjo0MVrOG9nB7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1NTc5MA==", "bodyText": "For back-compat sake, on 8x I could retain the former method as Deprecated... but I'm unsure if anyone calls it.", "url": "https://github.com/apache/lucene-solr/pull/1726#discussion_r467255790", "createdAt": "2020-08-07T20:32:41Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "diffHunk": "@@ -42,23 +44,23 @@ public static SolrQueryTimeoutImpl getInstance() {\n   }\n \n   /**\n-   * Get the current value of timeoutAt.\n+   * The time (nanoseconds) at which the request should be considered timed out.\n    */\n-  public static Long get() {\n+  public static Long getTimeoutAtNs() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9dbc9bd78aaf0a97a03fceb916e8ae71996b63"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjAyMDM2OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDoxMzowNFrOG-nugg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNjoyNzoxNVrOG-_uiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxNTc3OA==", "bodyText": "should this be a primitive instead of a boxed type?", "url": "https://github.com/apache/lucene-solr/pull/1726#discussion_r468315778", "createdAt": "2020-08-11T04:13:04Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "diffHunk": "@@ -67,8 +69,21 @@ public boolean shouldExit() {\n   }\n \n   /**\n-   * Method to set the time at which the timeOut should happen.\n-   * @param timeAllowed set the time at which this thread should timeout.\n+   * Sets or clears the time allowed based on how much time remains from the start of the request plus the configured\n+   * {@link CommonParams#TIME_ALLOWED}.\n+   */\n+  public static void set(SolrQueryRequest req) {\n+    long timeAllowed = req.getParams().getLong(CommonParams.TIME_ALLOWED, -1L);\n+    if (timeAllowed >= 0L) {\n+      set(timeAllowed - (long)req.getRequestTimer().getTime()); // reduce by time already spent\n+    } else {\n+      reset();\n+    }\n+  }\n+\n+  /**\n+   * Sets the time allowed (milliseconds), assuming we start a timer immediately.\n+   * You should probably invoke {@link #set(SolrQueryRequest)} instead.\n    */\n   public static void set(Long timeAllowed) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9dbc9bd78aaf0a97a03fceb916e8ae71996b63"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwOTAwMw==", "bodyText": "Oh yeah; I forgot that -- indeed a primitive.  It's weird it was boxed.", "url": "https://github.com/apache/lucene-solr/pull/1726#discussion_r468709003", "createdAt": "2020-08-11T16:27:15Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "diffHunk": "@@ -67,8 +69,21 @@ public boolean shouldExit() {\n   }\n \n   /**\n-   * Method to set the time at which the timeOut should happen.\n-   * @param timeAllowed set the time at which this thread should timeout.\n+   * Sets or clears the time allowed based on how much time remains from the start of the request plus the configured\n+   * {@link CommonParams#TIME_ALLOWED}.\n+   */\n+  public static void set(SolrQueryRequest req) {\n+    long timeAllowed = req.getParams().getLong(CommonParams.TIME_ALLOWED, -1L);\n+    if (timeAllowed >= 0L) {\n+      set(timeAllowed - (long)req.getRequestTimer().getTime()); // reduce by time already spent\n+    } else {\n+      reset();\n+    }\n+  }\n+\n+  /**\n+   * Sets the time allowed (milliseconds), assuming we start a timer immediately.\n+   * You should probably invoke {@link #set(SolrQueryRequest)} instead.\n    */\n   public static void set(Long timeAllowed) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxNTc3OA=="}, "originalCommit": {"oid": "ef9dbc9bd78aaf0a97a03fceb916e8ae71996b63"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjAyNjI5OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDoxNjo0OFrOG-nx-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzo0MTo1OFrOG_h3Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxNjY2NA==", "bodyText": "Should be >, not >=. Doc on time allowed state that zero is no timeout, not immediate timeout. Looks like we were previously inconsistent about this.", "url": "https://github.com/apache/lucene-solr/pull/1726#discussion_r468316664", "createdAt": "2020-08-11T04:16:48Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "diffHunk": "@@ -67,8 +69,21 @@ public boolean shouldExit() {\n   }\n \n   /**\n-   * Method to set the time at which the timeOut should happen.\n-   * @param timeAllowed set the time at which this thread should timeout.\n+   * Sets or clears the time allowed based on how much time remains from the start of the request plus the configured\n+   * {@link CommonParams#TIME_ALLOWED}.\n+   */\n+  public static void set(SolrQueryRequest req) {\n+    long timeAllowed = req.getParams().getLong(CommonParams.TIME_ALLOWED, -1L);\n+    if (timeAllowed >= 0L) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9dbc9bd78aaf0a97a03fceb916e8ae71996b63"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwOTk1OA==", "bodyText": "This seems inconsistent -- should we not be marking no timeout as -1?", "url": "https://github.com/apache/lucene-solr/pull/1726#discussion_r468709958", "createdAt": "2020-08-11T16:28:35Z", "author": {"login": "atris"}, "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "diffHunk": "@@ -67,8 +69,21 @@ public boolean shouldExit() {\n   }\n \n   /**\n-   * Method to set the time at which the timeOut should happen.\n-   * @param timeAllowed set the time at which this thread should timeout.\n+   * Sets or clears the time allowed based on how much time remains from the start of the request plus the configured\n+   * {@link CommonParams#TIME_ALLOWED}.\n+   */\n+  public static void set(SolrQueryRequest req) {\n+    long timeAllowed = req.getParams().getLong(CommonParams.TIME_ALLOWED, -1L);\n+    if (timeAllowed >= 0L) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxNjY2NA=="}, "originalCommit": {"oid": "ef9dbc9bd78aaf0a97a03fceb916e8ae71996b63"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcxMDU1OQ==", "bodyText": "> vs >= is debatable; there's an argument both ways.  I suspect there's a test for it this way but moreover, I don't think we should change it.  It's fine.", "url": "https://github.com/apache/lucene-solr/pull/1726#discussion_r468710559", "createdAt": "2020-08-11T16:29:26Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "diffHunk": "@@ -67,8 +69,21 @@ public boolean shouldExit() {\n   }\n \n   /**\n-   * Method to set the time at which the timeOut should happen.\n-   * @param timeAllowed set the time at which this thread should timeout.\n+   * Sets or clears the time allowed based on how much time remains from the start of the request plus the configured\n+   * {@link CommonParams#TIME_ALLOWED}.\n+   */\n+  public static void set(SolrQueryRequest req) {\n+    long timeAllowed = req.getParams().getLong(CommonParams.TIME_ALLOWED, -1L);\n+    if (timeAllowed >= 0L) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxNjY2NA=="}, "originalCommit": {"oid": "ef9dbc9bd78aaf0a97a03fceb916e8ae71996b63"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2MjI0NQ==", "bodyText": "https://github.com/apache/lucene-solr/pull/1726/files#diff-d8beef800870f194d61993d701fd9cc2L77 has >=\nhttps://github.com/apache/lucene-solr/pull/1726/files#diff-65e9f3712efc1ec962ea82a04a1d7aa1L104 has >\nEither way, please update the docs at https://github.com/apache/lucene-solr/blob/master/solr/solrj/src/java/org/apache/solr/common/params/CommonParams.java#L162 because they are absolutely wrong (>= 0 means no timeout???)", "url": "https://github.com/apache/lucene-solr/pull/1726#discussion_r468762245", "createdAt": "2020-08-11T17:56:18Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "diffHunk": "@@ -67,8 +69,21 @@ public boolean shouldExit() {\n   }\n \n   /**\n-   * Method to set the time at which the timeOut should happen.\n-   * @param timeAllowed set the time at which this thread should timeout.\n+   * Sets or clears the time allowed based on how much time remains from the start of the request plus the configured\n+   * {@link CommonParams#TIME_ALLOWED}.\n+   */\n+  public static void set(SolrQueryRequest req) {\n+    long timeAllowed = req.getParams().getLong(CommonParams.TIME_ALLOWED, -1L);\n+    if (timeAllowed >= 0L) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxNjY2NA=="}, "originalCommit": {"oid": "ef9dbc9bd78aaf0a97a03fceb916e8ae71996b63"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2ODIzMQ==", "bodyText": "MLT Handler was the exception it's used way less often than SearchHandler and so I ignored that.  I agree that the docs are wrong; I will update them.", "url": "https://github.com/apache/lucene-solr/pull/1726#discussion_r469268231", "createdAt": "2020-08-12T13:41:58Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/search/SolrQueryTimeoutImpl.java", "diffHunk": "@@ -67,8 +69,21 @@ public boolean shouldExit() {\n   }\n \n   /**\n-   * Method to set the time at which the timeOut should happen.\n-   * @param timeAllowed set the time at which this thread should timeout.\n+   * Sets or clears the time allowed based on how much time remains from the start of the request plus the configured\n+   * {@link CommonParams#TIME_ALLOWED}.\n+   */\n+  public static void set(SolrQueryRequest req) {\n+    long timeAllowed = req.getParams().getLong(CommonParams.TIME_ALLOWED, -1L);\n+    if (timeAllowed >= 0L) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxNjY2NA=="}, "originalCommit": {"oid": "ef9dbc9bd78aaf0a97a03fceb916e8ae71996b63"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1274, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}