{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2ODg3Mzkw", "number": 1815, "title": "SOLR-14151: Bug fixes", "bodyText": "", "createdAt": "2020-09-01T07:43:53Z", "url": "https://github.com/apache/lucene-solr/pull/1815", "merged": true, "mergeCommit": {"oid": "95ab98c920833f286608846188d69302b478f80a"}, "closed": true, "closedAt": "2020-09-07T23:58:43Z", "author": {"login": "noblepaul"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEiXlgAH2gAyNDc2ODg3MzkwOjcwNjdlZmU1Y2RhNTFmNmE3MzAzNjlhNTYzNzE4ZTM5OGFiZThhYjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFXHp3AFqTQ4MjE4MzM0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7067efe5cda51f6a730369a563718e398abe8ab2", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/7067efe5cda51f6a730369a563718e398abe8ab2", "committedDate": "2020-09-01T07:35:28Z", "message": "SOLR-14151: Bug fix . all tests pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc02c9488b92d2beba1aacdc5c45bcb4d60262e7", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/fc02c9488b92d2beba1aacdc5c45bcb4d60262e7", "committedDate": "2020-09-01T07:36:57Z", "message": "SOLR-14151: ununsed import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659", "committedDate": "2020-09-01T07:40:12Z", "message": "SOLR-14151: ununsed import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMTgzMzQz", "url": "https://github.com/apache/lucene-solr/pull/1815#pullrequestreview-482183343", "createdAt": "2020-09-03T20:33:56Z", "commit": {"oid": "f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMDozMzo1NlrOHM2kKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMTowMToyOFrOHM3W5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIzODk1NA==", "bodyText": "mind putting the space after the if (here and in the rest of your changes)? that's the standard across the rest of the code AFAIK", "url": "https://github.com/apache/lucene-solr/pull/1815#discussion_r483238954", "createdAt": "2020-09-03T20:33:56Z", "author": {"login": "tflobbe"}, "path": "solr/core/src/java/org/apache/solr/core/SolrCores.java", "diffHunk": "@@ -282,15 +283,19 @@ protected SolrCore remove(String name) {\n       return ret;\n     }\n   }\n+  SolrCore  getCoreFromAnyList(String name, boolean incRefCount) {\n+    return getCoreFromAnyList(name, incRefCount, null);\n+  }\n \n   /* If you don't increment the reference count, someone could close the core before you use it. */\n-  SolrCore  getCoreFromAnyList(String name, boolean incRefCount) {\n+  SolrCore  getCoreFromAnyList(String name, boolean incRefCount, UUID coreId) {\n     synchronized (modifyLock) {\n       SolrCore core = cores.get(name);\n \n       if (core == null && getTransientCacheHandler() != null) {\n         core = getTransientCacheHandler().getCore(name);\n       }\n+      if(core != null && coreId != null && coreId != core.uniqueId) return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI0MTQxOQ==", "bodyText": "Why is this method added? you don't seem to be doing any async reloads.", "url": "https://github.com/apache/lucene-solr/pull/1815#discussion_r483241419", "createdAt": "2020-09-03T20:39:20Z", "author": {"login": "tflobbe"}, "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -1582,6 +1582,13 @@ private CoreDescriptor reloadCoreDescriptor(CoreDescriptor oldDesc) {\n   public void reload(String name) {\n     reload(name, null);\n   }\n+  public void reload(String name, UUID coreId, boolean async) {\n+    if(async) {\n+      runAsync(() -> reload(name, coreId));\n+    } else {\n+      reload(name, coreId);\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI1MTk0Mg==", "bodyText": "Does this mean that every call to configSet.getIndexSchema() will create a new schema object (if shared schema is not enabled)?", "url": "https://github.com/apache/lucene-solr/pull/1815#discussion_r483251942", "createdAt": "2020-09-03T21:01:28Z", "author": {"login": "tflobbe"}, "path": "solr/core/src/java/org/apache/solr/core/ConfigSetService.java", "diffHunk": "@@ -81,8 +81,7 @@ public final ConfigSet loadConfigSet(CoreDescriptor dcore) {\n               ) ? false: true;\n \n       SolrConfig solrConfig = createSolrConfig(dcore, coreLoader, trusted);\n-      IndexSchema indexSchema = createIndexSchema(dcore, solrConfig, false);\n-      return new ConfigSet(configSetName(dcore), solrConfig, force -> indexSchema, properties, trusted);\n+      return new ConfigSet(configSetName(dcore), solrConfig, force -> createIndexSchema(dcore, solrConfig, force), properties, trusted);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2781, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}