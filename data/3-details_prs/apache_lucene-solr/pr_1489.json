{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MDE0NjA4", "number": 1489, "title": "Lucene-9336: RegEx querying - add support for Java\u2019s predefined character classes like \\d for digits", "bodyText": "Jira Issue 9336 proposes adding support for common regex character classes like \\w.\nThis PR adds the code to RegExp.java and associated tests.\nOne other consideration is that the shorthand expressions list could perhaps be made configurable e.g. \\h might be shorthand used to represent hashtags of the form #\\w* if that was something users routinely searched for and wanted to add to the regex vocabulary.", "createdAt": "2020-05-06T10:38:38Z", "url": "https://github.com/apache/lucene-solr/pull/1489", "merged": true, "mergeCommit": {"oid": "1efce5444dd40142c55c5a3a30eeebc7b86796c3"}, "closed": true, "closedAt": "2020-05-14T09:04:25Z", "author": {"login": "markharwood"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcemyRngBqjMzMDgwMTIwMjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchJcTzgBqjMzMzU1MTg2NTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cc2e899127a7c41ce16e5bd777c81f74690c9cf", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/2cc2e899127a7c41ce16e5bd777c81f74690c9cf", "committedDate": "2020-05-06T10:14:11Z", "message": "Add support for Java\u2019s predefined character classes like \\d for digits"}, "afterCommit": {"oid": "161affefb79c96fa87aa337a06826490e9462e49", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/161affefb79c96fa87aa337a06826490e9462e49", "committedDate": "2020-05-06T11:14:39Z", "message": "Add support for Java\u2019s predefined character classes like \\d for digits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NzM2Njk4", "url": "https://github.com/apache/lucene-solr/pull/1489#pullrequestreview-408736698", "createdAt": "2020-05-10T11:45:24Z", "commit": {"oid": "f7bacdad4b204d393eba15525897cb40be0836d6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMTo0NToyNFrOGTDfIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMTo0NToyNFrOGTDfIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYzMzI0OA==", "bodyText": "I think these tests should be in TestRegExp rather than in TestRegexpQuery?", "url": "https://github.com/apache/lucene-solr/pull/1489#discussion_r422633248", "createdAt": "2020-05-10T11:45:24Z", "author": {"login": "romseygeek"}, "path": "lucene/core/src/test/org/apache/lucene/search/TestRegexpQuery.java", "diffHunk": "@@ -115,6 +145,128 @@ public Automaton getAutomaton(String name) {\n     assertEquals(1, searcher.search(query, 5).totalHits.value);\n   }\n   \n+  public void testCoreJavaParity() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bacdad4b204d393eba15525897cb40be0836d6"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzc5ODQw", "url": "https://github.com/apache/lucene-solr/pull/1489#pullrequestreview-410379840", "createdAt": "2020-05-12T20:03:00Z", "commit": {"oid": "693ae6ce762877f28097e5c2cc89fcb4053a5ba4"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowMzowMFrOGUW4Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowNDowMFrOGUW6YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5OTU2Mw==", "bodyText": "Can you add the javadocs for this in the class definition ?", "url": "https://github.com/apache/lucene-solr/pull/1489#discussion_r423999563", "createdAt": "2020-05-12T20:03:00Z", "author": {"login": "jimczi"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "diffHunk": "@@ -1101,10 +1116,51 @@ final RegExp parseCharClasses() throws IllegalArgumentException {\n   }\n   \n   final RegExp parseCharClass() throws IllegalArgumentException {\n+    RegExp predefinedExp = matchPredefinedCharacterClass();\n+    if (predefinedExp != null) {\n+      return predefinedExp;\n+    }\n+        \n     int c = parseCharExp();\n     if (match('-')) return makeCharRange(c, parseCharExp());\n     else return makeChar(c);\n   }\n+\n+  RegExp expandPredefined() {\n+    //See https://docs.oracle.com/javase/tutorial/essential/regex/pre_char_classes.html", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "693ae6ce762877f28097e5c2cc89fcb4053a5ba4"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMDA5Nw==", "bodyText": "Maybe rename to REGEXP_PRE_CLASS ?", "url": "https://github.com/apache/lucene-solr/pull/1489#discussion_r424000097", "createdAt": "2020-05-12T20:04:00Z", "author": {"login": "jimczi"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "diffHunk": "@@ -317,7 +317,8 @@\n public class RegExp {\n   \n   enum Kind {\n-    REGEXP_UNION, REGEXP_CONCATENATION, REGEXP_INTERSECTION, REGEXP_OPTIONAL, REGEXP_REPEAT, REGEXP_REPEAT_MIN, REGEXP_REPEAT_MINMAX, REGEXP_COMPLEMENT, REGEXP_CHAR, REGEXP_CHAR_RANGE, REGEXP_ANYCHAR, REGEXP_EMPTY, REGEXP_STRING, REGEXP_ANYSTRING, REGEXP_AUTOMATON, REGEXP_INTERVAL\n+    REGEXP_UNION, REGEXP_CONCATENATION, REGEXP_INTERSECTION, REGEXP_OPTIONAL, REGEXP_REPEAT, REGEXP_REPEAT_MIN, REGEXP_REPEAT_MINMAX, REGEXP_COMPLEMENT, REGEXP_CHAR, REGEXP_CHAR_RANGE, REGEXP_ANYCHAR, REGEXP_EMPTY, REGEXP_STRING, REGEXP_ANYSTRING, REGEXP_AUTOMATON, REGEXP_INTERVAL,\n+    REGEXP_SHORTHAND", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "693ae6ce762877f28097e5c2cc89fcb4053a5ba4"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8f2ced6245d0a9343648667fffb100868898a57", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/d8f2ced6245d0a9343648667fffb100868898a57", "committedDate": "2020-05-13T11:10:49Z", "message": "Added javadocs, renamed Kind type"}, "afterCommit": {"oid": "97618754e50e2deacfd88cc25a1de3a0d152a1a9", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/97618754e50e2deacfd88cc25a1de3a0d152a1a9", "committedDate": "2020-05-13T15:10:04Z", "message": "Added javadocs, renamed Kind type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4064c0987eb1bf34a89fb5a16d7e824f3d432cdc", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/4064c0987eb1bf34a89fb5a16d7e824f3d432cdc", "committedDate": "2020-05-14T08:45:18Z", "message": "Add support for Java\u2019s predefined character classes like \\d for digits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e9206f09a5d9d52cf31428dbf44a6d1f78b4d4e", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/3e9206f09a5d9d52cf31428dbf44a6d1f78b4d4e", "committedDate": "2020-05-14T08:45:18Z", "message": "Added randomised test for parity with Java\u2019s Pattern class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78db0e6e22cf51b7364bfb8922cf959220e5a252", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/78db0e6e22cf51b7364bfb8922cf959220e5a252", "committedDate": "2020-05-14T08:45:18Z", "message": "Moved testCoreJavaParity from TestRegExpQuery to TestRegExp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2145755870663667ae95e51f2eade5cea1994fd5", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/2145755870663667ae95e51f2eade5cea1994fd5", "committedDate": "2020-05-14T08:45:18Z", "message": "Added javadocs, renamed Kind type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97618754e50e2deacfd88cc25a1de3a0d152a1a9", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/97618754e50e2deacfd88cc25a1de3a0d152a1a9", "committedDate": "2020-05-13T15:10:04Z", "message": "Added javadocs, renamed Kind type"}, "afterCommit": {"oid": "2145755870663667ae95e51f2eade5cea1994fd5", "author": {"user": {"login": "markharwood", "name": null}}, "url": "https://github.com/apache/lucene-solr/commit/2145755870663667ae95e51f2eade5cea1994fd5", "committedDate": "2020-05-14T08:45:18Z", "message": "Added javadocs, renamed Kind type"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2683, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}