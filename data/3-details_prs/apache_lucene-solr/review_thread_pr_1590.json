{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTE1MzYz", "number": 1590, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjo1NzowMVrOEHj0Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjo1NzowMVrOEHj0Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzYyMjQzOnYy", "diffSide": "RIGHT", "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjo1NzowMVrOGm_bVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjoxMTo0OVrOGoZRqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUzODI2Mw==", "bodyText": "It is a little weird that we don't then have a merge.setDone() or something inside this if to make the idempotency really clear.  But I understand this code is pre-existingly already hairy so it is not simple to fix that, so progress not perfection!", "url": "https://github.com/apache/lucene-solr/pull/1590#discussion_r443538263", "createdAt": "2020-06-22T12:57:01Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -4286,25 +4287,30 @@ private synchronized void mergeFinish(MergePolicy.OneMerge merge) {\n \n   @SuppressWarnings(\"try\")\n   private synchronized void closeMergeReaders(MergePolicy.OneMerge merge, boolean suppressExceptions) throws IOException {\n-    final boolean drop = suppressExceptions == false;\n-    try (Closeable finalizer = () -> merge.mergeFinished(suppressExceptions == false)) {\n-      IOUtils.applyToAll(merge.readers, sr -> {\n-        final ReadersAndUpdates rld = getPooledInstance(sr.getOriginalSegmentInfo(), false);\n-        // We still hold a ref so it should not have been removed:\n-        assert rld != null;\n-        if (drop) {\n-          rld.dropChanges();\n-        } else {\n-          rld.dropMergingUpdates();\n-        }\n-        rld.release(sr);\n-        release(rld);\n-        if (drop) {\n-          readerPool.drop(rld.info);\n-        }\n-      });\n-    } finally {\n-      Collections.fill(merge.readers, null);\n+    if (merge.isDone() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34ab53072911ac346bded7bbf8ec7140248f331f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyODYxMA==", "bodyText": "I can call it hasFinished() that would make it more clear? WDYT", "url": "https://github.com/apache/lucene-solr/pull/1590#discussion_r443728610", "createdAt": "2020-06-22T17:50:36Z", "author": {"login": "s1monw"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -4286,25 +4287,30 @@ private synchronized void mergeFinish(MergePolicy.OneMerge merge) {\n \n   @SuppressWarnings(\"try\")\n   private synchronized void closeMergeReaders(MergePolicy.OneMerge merge, boolean suppressExceptions) throws IOException {\n-    final boolean drop = suppressExceptions == false;\n-    try (Closeable finalizer = () -> merge.mergeFinished(suppressExceptions == false)) {\n-      IOUtils.applyToAll(merge.readers, sr -> {\n-        final ReadersAndUpdates rld = getPooledInstance(sr.getOriginalSegmentInfo(), false);\n-        // We still hold a ref so it should not have been removed:\n-        assert rld != null;\n-        if (drop) {\n-          rld.dropChanges();\n-        } else {\n-          rld.dropMergingUpdates();\n-        }\n-        rld.release(sr);\n-        release(rld);\n-        if (drop) {\n-          readerPool.drop(rld.info);\n-        }\n-      });\n-    } finally {\n-      Collections.fill(merge.readers, null);\n+    if (merge.isDone() == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUzODI2Mw=="}, "originalCommit": {"oid": "34ab53072911ac346bded7bbf8ec7140248f331f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAxMDM0Ng==", "bodyText": "@mikemccand I pushed a new commit to address this", "url": "https://github.com/apache/lucene-solr/pull/1590#discussion_r445010346", "createdAt": "2020-06-24T16:11:49Z", "author": {"login": "s1monw"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -4286,25 +4287,30 @@ private synchronized void mergeFinish(MergePolicy.OneMerge merge) {\n \n   @SuppressWarnings(\"try\")\n   private synchronized void closeMergeReaders(MergePolicy.OneMerge merge, boolean suppressExceptions) throws IOException {\n-    final boolean drop = suppressExceptions == false;\n-    try (Closeable finalizer = () -> merge.mergeFinished(suppressExceptions == false)) {\n-      IOUtils.applyToAll(merge.readers, sr -> {\n-        final ReadersAndUpdates rld = getPooledInstance(sr.getOriginalSegmentInfo(), false);\n-        // We still hold a ref so it should not have been removed:\n-        assert rld != null;\n-        if (drop) {\n-          rld.dropChanges();\n-        } else {\n-          rld.dropMergingUpdates();\n-        }\n-        rld.release(sr);\n-        release(rld);\n-        if (drop) {\n-          readerPool.drop(rld.info);\n-        }\n-      });\n-    } finally {\n-      Collections.fill(merge.readers, null);\n+    if (merge.isDone() == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUzODI2Mw=="}, "originalCommit": {"oid": "34ab53072911ac346bded7bbf8ec7140248f331f"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1487, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}