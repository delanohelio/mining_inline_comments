{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NTM3MDgx", "number": 1937, "title": "LUCENE-9541 ConjunctionDISI sub-iterators check", "bodyText": "Ensure sub-iterators of a conjunction iterator don't advance outside\nof it.\nAdd assertions for checking that all sub-iterators are always on the\nsame document.", "createdAt": "2020-10-01T20:46:29Z", "url": "https://github.com/apache/lucene-solr/pull/1937", "merged": true, "mergeCommit": {"oid": "5f34acfdb59f58987e0f69e8876e190b5e91dd3a"}, "closed": true, "closedAt": "2020-10-05T13:38:18Z", "author": {"login": "mayya-sharipova"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOXmN0AH2gAyNDk2NTM3MDgxOmYyMzNlNzVmMTNkNGZkMjgyMWViOWE2NTIxZGFmM2JiNWY5MjExMGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPjKD9AFqTUwMjAxNTY0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d", "author": {"user": {"login": "mayya-sharipova", "name": "Mayya Sharipova"}}, "url": "https://github.com/apache/lucene-solr/commit/f233e75f13d4fd2821eb9a6521daf3bb5f92110d", "committedDate": "2020-10-01T20:41:44Z", "message": "LUCENE-9541 ConjunctionDISI sub-iterators check\n\nEnsure sub-iterators of a conjuction iterator don't advance outside\nof it.\nAdd assertions for checking that all sub-iterators are always on the\nsame document."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzE1MTU0", "url": "https://github.com/apache/lucene-solr/pull/1937#pullrequestreview-500715154", "createdAt": "2020-10-01T21:01:19Z", "commit": {"oid": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTowMToxOVrOHbassg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTowMToxOVrOHbassg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMTAyNg==", "bodyText": "@jpountz  Is this a correct assumption?  or could we start with iterators that are not on the same document?", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r498511026", "createdAt": "2020-10-01T21:01:19Z", "author": {"login": "mayya-sharipova"}, "path": "lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java", "diffHunk": "@@ -140,6 +141,13 @@ private static void addTwoPhaseIterator(TwoPhaseIterator twoPhaseIter, List<DocI\n   private static DocIdSetIterator createConjunction(\n       List<DocIdSetIterator> allIterators,\n       List<TwoPhaseIterator> twoPhaseIterators) {\n+\n+    // assert that all sub-iterators are on the same doc ID", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzI5Nzcy", "url": "https://github.com/apache/lucene-solr/pull/1937#pullrequestreview-500729772", "createdAt": "2020-10-01T21:25:40Z", "commit": {"oid": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMToyNTo0MFrOHbbUTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTozMDozOFrOHbbb9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyMTE2NQ==", "bodyText": "let's make it an IllegalArgumentException?", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r498521165", "createdAt": "2020-10-01T21:25:40Z", "author": {"login": "jpountz"}, "path": "lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java", "diffHunk": "@@ -140,6 +141,13 @@ private static void addTwoPhaseIterator(TwoPhaseIterator twoPhaseIter, List<DocI\n   private static DocIdSetIterator createConjunction(\n       List<DocIdSetIterator> allIterators,\n       List<TwoPhaseIterator> twoPhaseIterators) {\n+\n+    // assert that all sub-iterators are on the same doc ID\n+    int curDoc = allIterators.size() > 0 ? allIterators.get(0).docID() : twoPhaseIterators.get(0).approximation.docID();\n+    boolean iteratorsOnTheSameDoc = allIterators.stream().allMatch(it -> it.docID() == curDoc);\n+    iteratorsOnTheSameDoc = iteratorsOnTheSameDoc && twoPhaseIterators.stream().allMatch(it -> it.approximation().docID() == curDoc);\n+    assert iteratorsOnTheSameDoc : \"Sub-iterators of ConjunctionDISI are not the same document!\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyMTM1MQ==", "bodyText": "this is the invariant between iterations indeed", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r498521351", "createdAt": "2020-10-01T21:26:08Z", "author": {"login": "jpountz"}, "path": "lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java", "diffHunk": "@@ -140,6 +141,13 @@ private static void addTwoPhaseIterator(TwoPhaseIterator twoPhaseIter, List<DocI\n   private static DocIdSetIterator createConjunction(\n       List<DocIdSetIterator> allIterators,\n       List<TwoPhaseIterator> twoPhaseIterators) {\n+\n+    // assert that all sub-iterators are on the same doc ID", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMTAyNg=="}, "originalCommit": {"oid": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyMzEyNA==", "bodyText": "can we avoid iterating over all sub iterators unless assertions are enabled?", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r498523124", "createdAt": "2020-10-01T21:30:38Z", "author": {"login": "jpountz"}, "path": "lucene/core/src/java/org/apache/lucene/search/ConjunctionDISI.java", "diffHunk": "@@ -227,6 +236,7 @@ private int doNext(int doc) throws IOException {\n \n   @Override\n   public int advance(int target) throws IOException {\n+    assertItersOnSameDoc();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f233e75f13d4fd2821eb9a6521daf3bb5f92110d"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74151e3ba3ed33528b67472150627d04f60e00a8", "author": {"user": {"login": "mayya-sharipova", "name": "Mayya Sharipova"}}, "url": "https://github.com/apache/lucene-solr/commit/74151e3ba3ed33528b67472150627d04f60e00a8", "committedDate": "2020-10-02T14:17:46Z", "message": "Address Adrien's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTczMDM3", "url": "https://github.com/apache/lucene-solr/pull/1937#pullrequestreview-501573037", "createdAt": "2020-10-03T20:42:40Z", "commit": {"oid": "74151e3ba3ed33528b67472150627d04f60e00a8"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo0Mjo0MFrOHcDjZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo0NDoxMVrOHcDjxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MDM4OQ==", "bodyText": "I think we need to call something like assumeTrue(assertsAreEnabled) since this test requires assertions to be enabled to succeed.", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r499180389", "createdAt": "2020-10-03T20:42:40Z", "author": {"login": "jpountz"}, "path": "lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java", "diffHunk": "@@ -391,4 +391,20 @@ public void testCollapseSubConjunctionDISIs() throws IOException {\n   public void testCollapseSubConjunctionScorers() throws IOException {\n     testCollapseSubConjunctions(true);\n   }\n+\n+  public void testIllegalAdvancementOfSubIteratorsTripsAssertion() throws IOException {\n+    int maxDoc = 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74151e3ba3ed33528b67472150627d04f60e00a8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MDQ4NQ==", "bodyText": "can you revert the two arguments to assertEquals? it expects the expected value first and the actual value second. While swapping arguments doesn't cause major issues, it creates confusing error messages when the assertion fails.", "url": "https://github.com/apache/lucene-solr/pull/1937#discussion_r499180485", "createdAt": "2020-10-03T20:44:11Z", "author": {"login": "jpountz"}, "path": "lucene/core/src/test/org/apache/lucene/search/TestConjunctionDISI.java", "diffHunk": "@@ -391,4 +391,20 @@ public void testCollapseSubConjunctionDISIs() throws IOException {\n   public void testCollapseSubConjunctionScorers() throws IOException {\n     testCollapseSubConjunctions(true);\n   }\n+\n+  public void testIllegalAdvancementOfSubIteratorsTripsAssertion() throws IOException {\n+    int maxDoc = 100;\n+    final int numIterators = TestUtil.nextInt(random(), 2, 5);\n+    FixedBitSet set = randomSet(maxDoc);\n+\n+    DocIdSetIterator[] iterators = new DocIdSetIterator[numIterators];\n+    for (int i = 0; i < iterators.length; ++i) {\n+      iterators[i] = new BitDocIdSet(set).iterator();\n+    }\n+    final DocIdSetIterator conjunction = ConjunctionDISI.intersectIterators(Arrays.asList(iterators));\n+    int idx = TestUtil.nextInt(random() , 0, iterators.length-1);\n+    iterators[idx].nextDoc(); // illegally advancing one of the sub-iterators outside of the conjunction iterator\n+    AssertionError ex = expectThrows(AssertionError.class, () -> conjunction.nextDoc());\n+    assertEquals(ex.getMessage(), \"Sub-iterators of ConjunctionDISI are not the same document!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74151e3ba3ed33528b67472150627d04f60e00a8"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf9a3e8a76fbe579f227bca083df3ef9c31f50ad", "author": {"user": {"login": "mayya-sharipova", "name": "Mayya Sharipova"}}, "url": "https://github.com/apache/lucene-solr/commit/bf9a3e8a76fbe579f227bca083df3ef9c31f50ad", "committedDate": "2020-10-05T10:26:32Z", "message": "Address Adrien's comments (II)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMDE1NjQx", "url": "https://github.com/apache/lucene-solr/pull/1937#pullrequestreview-502015641", "createdAt": "2020-10-05T12:43:46Z", "commit": {"oid": "bf9a3e8a76fbe579f227bca083df3ef9c31f50ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2669, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}