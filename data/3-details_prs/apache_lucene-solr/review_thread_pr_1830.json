{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NTA0ODE5", "number": 1830, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNzo1OToxN1rOEgeoyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoyODoyMVrOEhGWTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNDkxODQ5OnYy", "diffSide": "RIGHT", "path": "gradle/validation/validate-source-patterns.gradle", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNzo1OToxN1rOHNXM3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMjo0MTo1OVrOHNh0hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc3MzY2MA==", "bodyText": "should the excludes be an input property so that we don't have to repeat them later on root project?", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483773660", "createdAt": "2020-09-04T17:59:17Z", "author": {"login": "madrob"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,117 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"*.${it}\"\n+      }\n+\n+      // default excludes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc5MzcyOQ==", "bodyText": "It could be. I didn't have time to clean up everything. The speedup was significant for me anyway (order of magnitude).", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483793729", "createdAt": "2020-09-04T18:48:02Z", "author": {"login": "dweiss"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,117 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"*.${it}\"\n+      }\n+\n+      // default excludes.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc3MzY2MA=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDIwMg==", "bodyText": "I agree with this. Maybe make a closure out of it, so it can be applied everywhere. I can do this, if you like.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483944202", "createdAt": "2020-09-05T11:58:21Z", "author": {"login": "uschindler"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,117 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"*.${it}\"\n+      }\n+\n+      // default excludes.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc3MzY2MA=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NzY1NA==", "bodyText": "Please, go ahead and take over!", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483947654", "createdAt": "2020-09-05T12:41:59Z", "author": {"login": "dweiss"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,117 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"*.${it}\"\n+      }\n+\n+      // default excludes.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc3MzY2MA=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNjE1ODU1OnYy", "diffSide": "RIGHT", "path": "gradle/validation/validate-source-patterns.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMTo1OToxM1rOHNhnQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMjo0MjoyN1rOHNh0nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDI1OA==", "bodyText": "this wont work in per directory setting -> remove\nsame for solr a bit down.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483944258", "createdAt": "2020-09-05T11:59:13Z", "author": {"login": "uschindler"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,117 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"*.${it}\"\n+      }\n+\n+      // default excludes.\n+      exclude \"$buildDir/**\"\n+      exclude '**/dist/**'\n+      exclude 'dev-tools/missing-doclet/src/**/*.java' // <-- TODO: remove once we allow \"var\" on master\n+      exclude 'lucene/benchmark/work/**'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDM5MQ==", "bodyText": "But if the code does not fail, mabe remove the exclude (outdated?).", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483944391", "createdAt": "2020-09-05T12:00:16Z", "author": {"login": "uschindler"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,117 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"*.${it}\"\n+      }\n+\n+      // default excludes.\n+      exclude \"$buildDir/**\"\n+      exclude '**/dist/**'\n+      exclude 'dev-tools/missing-doclet/src/**/*.java' // <-- TODO: remove once we allow \"var\" on master\n+      exclude 'lucene/benchmark/work/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDI1OA=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NzY3Ng==", "bodyText": "Yup.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483947676", "createdAt": "2020-09-05T12:42:27Z", "author": {"login": "dweiss"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,117 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"*.${it}\"\n+      }\n+\n+      // default excludes.\n+      exclude \"$buildDir/**\"\n+      exclude '**/dist/**'\n+      exclude 'dev-tools/missing-doclet/src/**/*.java' // <-- TODO: remove once we allow \"var\" on master\n+      exclude 'lucene/benchmark/work/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDI1OA=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNjE2MDQyOnYy", "diffSide": "RIGHT", "path": "gradle/validation/validate-source-patterns.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMjowMToyM1rOHNhoIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMjowMToyM1rOHNhoIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDQ4MQ==", "bodyText": "Cool!", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483944481", "createdAt": "2020-09-05T12:01:23Z", "author": {"login": "uschindler"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -181,8 +252,13 @@ class ValidateSourcePatternsTask extends DefaultTask {\n       }\n     }\n \n+    ProgressLogger progress = progressLoggerFactory.newOperation(this.class)\n+    progress.start(this.name, this.name)\n+\n     sourceFiles.each{ f ->\n-      logger.debug('Scanning source file: {}', f);\n+      progress.progress(\"Scanning ${f.name}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 164}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNjE2MTQ1OnYy", "diffSide": "RIGHT", "path": "gradle/validation/validate-source-patterns.gradle", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMjowMzowNVrOHNhonw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzozMTo1M1rOHOQU6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDYwNw==", "bodyText": "I would keep this as debug or remove after adding the progress meter.\nI often try to run gradlew with --info, but theis is way too much information.\nDo you know how to silence the palantir version-lock checker? I hate that it prints so much information during configuration phase to info.\nI'd like to enable --info on jenkins, but that's way to much.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483944607", "createdAt": "2020-09-05T12:03:05Z", "author": {"login": "uschindler"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -181,8 +252,13 @@ class ValidateSourcePatternsTask extends DefaultTask {\n       }\n     }\n \n+    ProgressLogger progress = progressLoggerFactory.newOperation(this.class)\n+    progress.start(this.name, this.name)\n+\n     sourceFiles.each{ f ->\n-      logger.debug('Scanning source file: {}', f);\n+      progress.progress(\"Scanning ${f.name}\")\n+      logger.info('Scanning source file: {}', f);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NzcyOQ==", "bodyText": "The --info switch is verbose. I don't think there's much you can do about it. I was thinking about it myself - perhaps we should devise our own internal logging verbosity level (and log to lifecycle when it's enabled).", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483947729", "createdAt": "2020-09-05T12:43:15Z", "author": {"login": "dweiss"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -181,8 +252,13 @@ class ValidateSourcePatternsTask extends DefaultTask {\n       }\n     }\n \n+    ProgressLogger progress = progressLoggerFactory.newOperation(this.class)\n+    progress.start(this.name, this.name)\n+\n     sourceFiles.each{ f ->\n-      logger.debug('Scanning source file: {}', f);\n+      progress.progress(\"Scanning ${f.name}\")\n+      logger.info('Scanning source file: {}', f);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDYwNw=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0ODY4Nw==", "bodyText": "Info is like ant always was. Except the shitty palantir logging. Can we suppress this? I have all Gradle builds with info logging in jenkins, except Lucene.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483948687", "createdAt": "2020-09-05T12:55:25Z", "author": {"login": "uschindler"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -181,8 +252,13 @@ class ValidateSourcePatternsTask extends DefaultTask {\n       }\n     }\n \n+    ProgressLogger progress = progressLoggerFactory.newOperation(this.class)\n+    progress.start(this.name, this.name)\n+\n     sourceFiles.each{ f ->\n-      logger.debug('Scanning source file: {}', f);\n+      progress.progress(\"Scanning ${f.name}\")\n+      logger.info('Scanning source file: {}', f);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDYwNw=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0ODc4Mg==", "bodyText": "I don't know how to do that, Uwe.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483948782", "createdAt": "2020-09-05T12:56:26Z", "author": {"login": "dweiss"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -181,8 +252,13 @@ class ValidateSourcePatternsTask extends DefaultTask {\n       }\n     }\n \n+    ProgressLogger progress = progressLoggerFactory.newOperation(this.class)\n+    progress.start(this.name, this.name)\n+\n     sourceFiles.each{ f ->\n-      logger.debug('Scanning source file: {}', f);\n+      progress.progress(\"Scanning ${f.name}\")\n+      logger.info('Scanning source file: {}', f);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDYwNw=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1MDU4OQ==", "bodyText": "Nevertheless, I'd change ours back to debug (it's really only for debugging). If a violation happens, filename is printed anyways.\nBut we should change this now to not use relative paths anymore, because it's hard to figure out where file is located. I can take care of that.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483950589", "createdAt": "2020-09-05T13:20:04Z", "author": {"login": "uschindler"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -181,8 +252,13 @@ class ValidateSourcePatternsTask extends DefaultTask {\n       }\n     }\n \n+    ProgressLogger progress = progressLoggerFactory.newOperation(this.class)\n+    progress.start(this.name, this.name)\n+\n     sourceFiles.each{ f ->\n-      logger.debug('Scanning source file: {}', f);\n+      progress.progress(\"Scanning ${f.name}\")\n+      logger.info('Scanning source file: {}', f);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDYwNw=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1MTgyNA==", "bodyText": "Hmm... What do you mean by \"not use relative paths\"?", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483951824", "createdAt": "2020-09-05T13:35:56Z", "author": {"login": "dweiss"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -181,8 +252,13 @@ class ValidateSourcePatternsTask extends DefaultTask {\n       }\n     }\n \n+    ProgressLogger progress = progressLoggerFactory.newOperation(this.class)\n+    progress.start(this.name, this.name)\n+\n     sourceFiles.each{ f ->\n-      logger.debug('Scanning source file: {}', f);\n+      progress.progress(\"Scanning ${f.name}\")\n+      logger.info('Scanning source file: {}', f);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDYwNw=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1MzAyNw==", "bodyText": "When it reports a violation it's relative to basedir of file collection. This was ok with root level task, but should be changed now to just print full path.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483953027", "createdAt": "2020-09-05T13:51:45Z", "author": {"login": "uschindler"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -181,8 +252,13 @@ class ValidateSourcePatternsTask extends DefaultTask {\n       }\n     }\n \n+    ProgressLogger progress = progressLoggerFactory.newOperation(this.class)\n+    progress.start(this.name, this.name)\n+\n     sourceFiles.each{ f ->\n-      logger.debug('Scanning source file: {}', f);\n+      progress.progress(\"Scanning ${f.name}\")\n+      logger.info('Scanning source file: {}', f);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDYwNw=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2OTY1MA==", "bodyText": "Doesn't the logger carry the information which project this is? This should be sufficient to locate the file in question? I don't mind changing it to an absolute path, but I think project + path should be enough to locate something?", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r483969650", "createdAt": "2020-09-05T17:16:02Z", "author": {"login": "dweiss"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -181,8 +252,13 @@ class ValidateSourcePatternsTask extends DefaultTask {\n       }\n     }\n \n+    ProgressLogger progress = progressLoggerFactory.newOperation(this.class)\n+    progress.start(this.name, this.name)\n+\n     sourceFiles.each{ f ->\n-      logger.debug('Scanning source file: {}', f);\n+      progress.progress(\"Scanning ${f.name}\")\n+      logger.info('Scanning source file: {}', f);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDYwNw=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwOTYwOQ==", "bodyText": "I just wanted to add this to this dicsussion: gradle/gradle#1010\nI am working on that!\n(I also figured out that we miss our lockfactory integration test in :lucene:core, in ANT it's still there (many JVMs hammering a single directory with lockfactories). We need a task in gradle for this, too. I will open another issue)", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r484709609", "createdAt": "2020-09-08T07:31:53Z", "author": {"login": "uschindler"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -181,8 +252,13 @@ class ValidateSourcePatternsTask extends DefaultTask {\n       }\n     }\n \n+    ProgressLogger progress = progressLoggerFactory.newOperation(this.class)\n+    progress.start(this.name, this.name)\n+\n     sourceFiles.each{ f ->\n-      logger.debug('Scanning source file: {}', f);\n+      progress.progress(\"Scanning ${f.name}\")\n+      logger.info('Scanning source file: {}', f);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0NDYwNw=="}, "originalCommit": {"oid": "bb1afca9686b621ffb763675e514b48fd66670a7"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTM5ODQzOnYy", "diffSide": "RIGHT", "path": "gradle/validation/validate-source-patterns.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoxODoyMFrOHOONOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoxODoyMFrOHOONOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3NDg3Mw==", "bodyText": "Yep, that should do it.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r484674873", "createdAt": "2020-09-08T06:18:20Z", "author": {"login": "dweiss"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,127 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'md',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n-        include \"*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"**/*.${it}\"\n       }\n-      // TODO: For now we don't scan txt / md files, so we\n-      // check licenses in top-level folders separately:\n-      include '*.txt'\n-      include '*/*.txt'\n-      include '*.md'\n-      include '*/*.md'\n-      // excludes:\n+      \n+      // Don't go into child projects (scanned separately).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d3e8fe7caecf82e81b53e024c38614b8af30fa"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTQyNDI1OnYy", "diffSide": "LEFT", "path": "gradle/validation/precommit.gradle", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoyODowN1rOHOOcZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjo1ODozMlrOHOPQHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODc1OQ==", "bodyText": "I think we can leave the dependency on the root task as it depends on other source pattern validations. Or remove the snippet that connects them later.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r484678759", "createdAt": "2020-09-08T06:28:07Z", "author": {"login": "dweiss"}, "path": "gradle/validation/precommit.gradle", "diffHunk": "@@ -26,7 +26,6 @@ configure(rootProject) {\n     dependsOn \":verifyLocks\"\n     dependsOn \":versionsPropsAreSorted\"\n     dependsOn \":checkWorkingCopyClean\"\n-    dependsOn \":validateSourcePatterns\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d3e8fe7caecf82e81b53e024c38614b8af30fa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY5MDU3Nw==", "bodyText": "I wanted to make it consistent with the others. Now all are handled the same.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r484690577", "createdAt": "2020-09-08T06:55:35Z", "author": {"login": "uschindler"}, "path": "gradle/validation/precommit.gradle", "diffHunk": "@@ -26,7 +26,6 @@ configure(rootProject) {\n     dependsOn \":verifyLocks\"\n     dependsOn \":versionsPropsAreSorted\"\n     dependsOn \":checkWorkingCopyClean\"\n-    dependsOn \":validateSourcePatterns\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODc1OQ=="}, "originalCommit": {"oid": "39d3e8fe7caecf82e81b53e024c38614b8af30fa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY5MTIwMQ==", "bodyText": "Removing the connection in subprojects is not good, as now I can run gradlew check in a subproject and it does everything right.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r484691201", "createdAt": "2020-09-08T06:56:57Z", "author": {"login": "uschindler"}, "path": "gradle/validation/precommit.gradle", "diffHunk": "@@ -26,7 +26,6 @@ configure(rootProject) {\n     dependsOn \":verifyLocks\"\n     dependsOn \":versionsPropsAreSorted\"\n     dependsOn \":checkWorkingCopyClean\"\n-    dependsOn \":validateSourcePatterns\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODc1OQ=="}, "originalCommit": {"oid": "39d3e8fe7caecf82e81b53e024c38614b8af30fa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY5MTQ5Nw==", "bodyText": "Fair enough. But then the top-level one doesn't need to depend on children?", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r484691497", "createdAt": "2020-09-08T06:57:29Z", "author": {"login": "dweiss"}, "path": "gradle/validation/precommit.gradle", "diffHunk": "@@ -26,7 +26,6 @@ configure(rootProject) {\n     dependsOn \":verifyLocks\"\n     dependsOn \":versionsPropsAreSorted\"\n     dependsOn \":checkWorkingCopyClean\"\n-    dependsOn \":validateSourcePatterns\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODc1OQ=="}, "originalCommit": {"oid": "39d3e8fe7caecf82e81b53e024c38614b8af30fa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY5MTk5OA==", "bodyText": "Ah, ok. See it now.", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r484691998", "createdAt": "2020-09-08T06:58:32Z", "author": {"login": "dweiss"}, "path": "gradle/validation/precommit.gradle", "diffHunk": "@@ -26,7 +26,6 @@ configure(rootProject) {\n     dependsOn \":verifyLocks\"\n     dependsOn \":versionsPropsAreSorted\"\n     dependsOn \":checkWorkingCopyClean\"\n-    dependsOn \":validateSourcePatterns\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODc1OQ=="}, "originalCommit": {"oid": "39d3e8fe7caecf82e81b53e024c38614b8af30fa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTQyNDc2OnYy", "diffSide": "RIGHT", "path": "gradle/validation/validate-source-patterns.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoyODoyMVrOHOOcxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzowNjoyMlrOHOPe1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODg1NQ==", "bodyText": "(here).", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r484678855", "createdAt": "2020-09-08T06:28:21Z", "author": {"login": "dweiss"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,127 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'md',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n-        include \"*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"**/*.${it}\"\n       }\n-      // TODO: For now we don't scan txt / md files, so we\n-      // check licenses in top-level folders separately:\n-      include '*.txt'\n-      include '*/*.txt'\n-      include '*.md'\n-      include '*/*.md'\n-      // excludes:\n+      \n+      // Don't go into child projects (scanned separately).\n+      childProjects.keySet().each{\n+        exclude \"${it}/**\"\n+      }\n+\n+      // default excludes.\n+      exclude 'build/**'\n+    }\n+  }\n+\n+  // Add source validation to per-project checks as well.\n+  check.dependsOn validateSourcePatterns\n+}\n+\n+configure(project(':lucene:benchmark')) {\n+  project.tasks.withType(ValidateSourcePatternsTask) {\n+    sourceFiles.exclude 'temp/**'\n+    sourceFiles.exclude 'work/**'\n+  }\n+}\n+\n+configure(project(':solr:core')) {\n+  project.tasks.withType(ValidateSourcePatternsTask) {\n+    sourceFiles.exclude 'src/**/CheckLoggingConfiguration.java'\n+    sourceFiles.exclude 'src/test/org/apache/hadoop/**'\n+  }\n+}\n+\n+configure(rootProject) {\n+  task validateRootAndOtherFiles(type: ValidateSourcePatternsTask) { task ->\n+    // This task has no proper outputs.\n+    setupDummyOutputs(task)\n+\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"**/*.${it}\"\n+      }\n+\n+      // We do not scan for *.txt by default (broken files in subprojects),\n+      // but in root we can do this).\n+      include '**/*.txt'\n+\n+      // Don't go into child projects (scanned separately).\n+      childProjects.keySet().each{\n+        exclude \"${it}/**\"\n+      }\n+\n+      // default excludes.\n       exclude '**/build/**'\n-      exclude '**/dist/**'\n       exclude 'dev-tools/missing-doclet/src/**/*.java' // <-- TODO: remove once we allow \"var\" on master\n-      exclude 'lucene/benchmark/work/**'\n-      exclude 'lucene/benchmark/temp/**'\n-      exclude '**/CheckLoggingConfiguration.java'\n-      exclude 'solr/core/src/test/org/apache/hadoop/**'\n-      exclude '**/validate-source-patterns.gradle' // ourselves :-)\n+\n+      // ourselves :-)\n+      exclude 'gradle/validation/validate-source-patterns.gradle'\n     }\n   }\n+\n+  task validateSourcePatterns() {\n+    group = 'Verification'\n+    description = 'Validate Source Patterns'\n+\n+    // Make it depend on all so-named tasks from subprojects.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d3e8fe7caecf82e81b53e024c38614b8af30fa"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY5MjA2OQ==", "bodyText": "I also want this to be able to run it from root separately. If that's not needed and works automatically, remove it here.\nI just made it consistent with other validation tasks", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r484692069", "createdAt": "2020-09-08T06:58:41Z", "author": {"login": "uschindler"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,127 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'md',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n-        include \"*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"**/*.${it}\"\n       }\n-      // TODO: For now we don't scan txt / md files, so we\n-      // check licenses in top-level folders separately:\n-      include '*.txt'\n-      include '*/*.txt'\n-      include '*.md'\n-      include '*/*.md'\n-      // excludes:\n+      \n+      // Don't go into child projects (scanned separately).\n+      childProjects.keySet().each{\n+        exclude \"${it}/**\"\n+      }\n+\n+      // default excludes.\n+      exclude 'build/**'\n+    }\n+  }\n+\n+  // Add source validation to per-project checks as well.\n+  check.dependsOn validateSourcePatterns\n+}\n+\n+configure(project(':lucene:benchmark')) {\n+  project.tasks.withType(ValidateSourcePatternsTask) {\n+    sourceFiles.exclude 'temp/**'\n+    sourceFiles.exclude 'work/**'\n+  }\n+}\n+\n+configure(project(':solr:core')) {\n+  project.tasks.withType(ValidateSourcePatternsTask) {\n+    sourceFiles.exclude 'src/**/CheckLoggingConfiguration.java'\n+    sourceFiles.exclude 'src/test/org/apache/hadoop/**'\n+  }\n+}\n+\n+configure(rootProject) {\n+  task validateRootAndOtherFiles(type: ValidateSourcePatternsTask) { task ->\n+    // This task has no proper outputs.\n+    setupDummyOutputs(task)\n+\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"**/*.${it}\"\n+      }\n+\n+      // We do not scan for *.txt by default (broken files in subprojects),\n+      // but in root we can do this).\n+      include '**/*.txt'\n+\n+      // Don't go into child projects (scanned separately).\n+      childProjects.keySet().each{\n+        exclude \"${it}/**\"\n+      }\n+\n+      // default excludes.\n       exclude '**/build/**'\n-      exclude '**/dist/**'\n       exclude 'dev-tools/missing-doclet/src/**/*.java' // <-- TODO: remove once we allow \"var\" on master\n-      exclude 'lucene/benchmark/work/**'\n-      exclude 'lucene/benchmark/temp/**'\n-      exclude '**/CheckLoggingConfiguration.java'\n-      exclude 'solr/core/src/test/org/apache/hadoop/**'\n-      exclude '**/validate-source-patterns.gradle' // ourselves :-)\n+\n+      // ourselves :-)\n+      exclude 'gradle/validation/validate-source-patterns.gradle'\n     }\n   }\n+\n+  task validateSourcePatterns() {\n+    group = 'Verification'\n+    description = 'Validate Source Patterns'\n+\n+    // Make it depend on all so-named tasks from subprojects.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODg1NQ=="}, "originalCommit": {"oid": "39d3e8fe7caecf82e81b53e024c38614b8af30fa"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY5NTc2Nw==", "bodyText": "Yes, it does work. Like I said - a task without a project qualifier is in fact an invocation of any such task in any subproject. So:\n> gradlew -p lucene/analysis validateSourcePatterns  --console=plain\n...\n> Task :lucene:analysis:validateSourcePatterns UP-TO-DATE\n> Task :lucene:analysis:phonetic:validateSourcePatterns UP-TO-DATE\n> Task :lucene:analysis:opennlp:validateSourcePatterns UP-TO-DATE\n> Task :lucene:analysis:stempel:validateSourcePatterns UP-TO-DATE\n> Task :lucene:analysis:morfologik:validateSourcePatterns UP-TO-DATE\n> Task :lucene:analysis:smartcn:validateSourcePatterns UP-TO-DATE\n> Task :lucene:analysis:nori:validateSourcePatterns UP-TO-DATE\n> Task :lucene:analysis:kuromoji:validateSourcePatterns UP-TO-DATE\n> Task :lucene:analysis:icu:validateSourcePatterns UP-TO-DATE\n> Task :lucene:analysis:common:validateSourcePatterns UP-TO-DATE", "url": "https://github.com/apache/lucene-solr/pull/1830#discussion_r484695767", "createdAt": "2020-09-08T07:06:22Z", "author": {"login": "dweiss"}, "path": "gradle/validation/validate-source-patterns.gradle", "diffHunk": "@@ -29,50 +33,127 @@ buildscript {\n   }\n }\n \n-configure(rootProject) {\n-  task(\"validateSourcePatterns\", type: ValidateSourcePatternsTask) { task ->\n+def extensions = [\n+    'adoc',\n+    'bat',\n+    'cmd',\n+    'css',\n+    'g4',\n+    'gradle',\n+    'groovy',\n+    'html',\n+    'java',\n+    'jflex',\n+    'jj',\n+    'js',\n+    'json',\n+    'md',\n+    'mdtext',\n+    'pl',\n+    'policy',\n+    'properties',\n+    'py',\n+    'sh',\n+    'template',\n+    'vm',\n+    'xml',\n+    'xsl',\n+]\n+\n+// Create source validation task local for each project's files.\n+subprojects {\n+  task validateSourcePatterns(type: ValidateSourcePatternsTask) { task ->\n     group = 'Verification'\n     description = 'Validate Source Patterns'\n \n     // This task has no proper outputs.\n     setupDummyOutputs(task)\n \n-    sourceFiles = project.fileTree(project.rootDir) {\n-      [\n-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',\n-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',\n-        'properties', 'mdtext', 'groovy', 'gradle',\n-        'template', 'adoc', 'json',\n-      ].each{\n-        include \"lucene/**/*.${it}\"\n-        include \"solr/**/*.${it}\"\n-        include \"dev-tools/**/*.${it}\"\n-        include \"gradle/**/*.${it}\"\n-        include \"*.${it}\"\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"**/*.${it}\"\n       }\n-      // TODO: For now we don't scan txt / md files, so we\n-      // check licenses in top-level folders separately:\n-      include '*.txt'\n-      include '*/*.txt'\n-      include '*.md'\n-      include '*/*.md'\n-      // excludes:\n+      \n+      // Don't go into child projects (scanned separately).\n+      childProjects.keySet().each{\n+        exclude \"${it}/**\"\n+      }\n+\n+      // default excludes.\n+      exclude 'build/**'\n+    }\n+  }\n+\n+  // Add source validation to per-project checks as well.\n+  check.dependsOn validateSourcePatterns\n+}\n+\n+configure(project(':lucene:benchmark')) {\n+  project.tasks.withType(ValidateSourcePatternsTask) {\n+    sourceFiles.exclude 'temp/**'\n+    sourceFiles.exclude 'work/**'\n+  }\n+}\n+\n+configure(project(':solr:core')) {\n+  project.tasks.withType(ValidateSourcePatternsTask) {\n+    sourceFiles.exclude 'src/**/CheckLoggingConfiguration.java'\n+    sourceFiles.exclude 'src/test/org/apache/hadoop/**'\n+  }\n+}\n+\n+configure(rootProject) {\n+  task validateRootAndOtherFiles(type: ValidateSourcePatternsTask) { task ->\n+    // This task has no proper outputs.\n+    setupDummyOutputs(task)\n+\n+    sourceFiles = fileTree(projectDir) {\n+      extensions.each{\n+        include \"**/*.${it}\"\n+      }\n+\n+      // We do not scan for *.txt by default (broken files in subprojects),\n+      // but in root we can do this).\n+      include '**/*.txt'\n+\n+      // Don't go into child projects (scanned separately).\n+      childProjects.keySet().each{\n+        exclude \"${it}/**\"\n+      }\n+\n+      // default excludes.\n       exclude '**/build/**'\n-      exclude '**/dist/**'\n       exclude 'dev-tools/missing-doclet/src/**/*.java' // <-- TODO: remove once we allow \"var\" on master\n-      exclude 'lucene/benchmark/work/**'\n-      exclude 'lucene/benchmark/temp/**'\n-      exclude '**/CheckLoggingConfiguration.java'\n-      exclude 'solr/core/src/test/org/apache/hadoop/**'\n-      exclude '**/validate-source-patterns.gradle' // ourselves :-)\n+\n+      // ourselves :-)\n+      exclude 'gradle/validation/validate-source-patterns.gradle'\n     }\n   }\n+\n+  task validateSourcePatterns() {\n+    group = 'Verification'\n+    description = 'Validate Source Patterns'\n+\n+    // Make it depend on all so-named tasks from subprojects.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODg1NQ=="}, "originalCommit": {"oid": "39d3e8fe7caecf82e81b53e024c38614b8af30fa"}, "originalPosition": 149}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1180, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}