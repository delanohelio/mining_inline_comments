{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyOTY1NTk5", "number": 2050, "title": "SOLR-14926: Modernize and clean up search results clustering contrib.", "bodyText": "This issue upgrades the clustering contrib to the new Carrot2 4.x line,\ndropping several CVE-prone dependencies along the way.\nThe parameters and configuration of the contrib extensions have changed.\nThe documentation in Solr ref guide has been rewritten from scratch to be up to date.\nClustering code has been rewritten from scratch to work properly regardless\nof the mode (standalone, distributed).\nThe API has been stripped of ancient, unused, interfaces and simplified.", "createdAt": "2020-10-30T12:36:09Z", "url": "https://github.com/apache/lucene-solr/pull/2050", "merged": true, "mergeCommit": {"oid": "0f871b2c560d92cb5cc481f34d1f1bc576e8e582"}, "closed": true, "closedAt": "2020-11-03T08:31:53Z", "author": {"login": "dweiss"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXmAYRAH2gAyNTEyOTY1NTk5OmYwMTQzMjg3ZDVkN2Q5ZjY3ODM3MGRiYWJmMjkyNTg4MmJhZTZjODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdY07EaAH2gAyNTEyOTY1NTk5OmZjOGRkYjg5ODQ0NTkxZmNiNDE5Njc0MDRmMmY2MWNhNmJiNjY3ZTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f0143287d5d7d9f678370dbabf2925882bae6c85", "author": {"user": {"login": "dweiss", "name": "Dawid Weiss"}}, "url": "https://github.com/apache/lucene-solr/commit/f0143287d5d7d9f678370dbabf2925882bae6c85", "committedDate": "2020-10-30T12:34:18Z", "message": "SOLR-14926: Modernize and clean up search results clustering contrib.\n\nThis issue upgrades the clustering contrib to the new Carrot2 4.x line,\ndropping several CVE-prone dependencies along the way.\n\nThe parameters and configuration of the contrib extensions have changed.\nThe documentation in Solr ref guide has been rewritten from scratch to be up to date.\n\nClustering code has been rewritten from scratch to work properly regardless\nof the mode (standalone, distributed).\n\nThe API has been stripped of ancient, unused, interfaces and simplified."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30563ea214a80126f5b7043e263b705356fad70a", "author": {"user": {"login": "dweiss", "name": "Dawid Weiss"}}, "url": "https://github.com/apache/lucene-solr/commit/30563ea214a80126f5b7043e263b705356fad70a", "committedDate": "2020-10-30T12:40:10Z", "message": "Merging against master."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzAyNTky", "url": "https://github.com/apache/lucene-solr/pull/2050#pullrequestreview-520702592", "createdAt": "2020-10-30T14:07:48Z", "commit": {"oid": "30563ea214a80126f5b7043e263b705356fad70a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDowNzo0OFrOHrQsKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDowNzo0OFrOHrQsKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyNDI2Nw==", "bodyText": "NULL_DEREFERENCE:  object returned by params.getBool(\"clustering.includeOtherTopics\") could be null and is dereferenced at line 178.", "url": "https://github.com/apache/lucene-solr/pull/2050#discussion_r515124267", "createdAt": "2020-10-30T14:07:48Z", "author": {"login": "sonatype-lift"}, "path": "solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/EngineParameters.java", "diffHunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.solr.handler.clustering;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.solr.common.params.SolrParams;\n+\n+import java.util.Arrays;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+/**\n+ * {@link Engine} configuration parameters (and other parameters that\n+ * may tweak clustering algorithms on a per-request basis).\n+ *\n+ * @lucene.experimental\n+ */\n+public final class EngineParameters implements Cloneable {\n+  /**\n+   * Common prefix for configuration of engine settings.\n+   */\n+  private static final String PARAM_PREFIX = \"clustering.\";\n+\n+  /**\n+   * @see #algorithmName()\n+   */\n+  public static final String PARAM_ALGORITHM = PARAM_PREFIX + \"algorithm\";\n+\n+  /**\n+   * @see #maxLabels()\n+   */\n+  public static final String PARAM_MAX_LABELS = PARAM_PREFIX + \"maxLabels\";\n+\n+  /**\n+   * @see #includeSubclusters()\n+   */\n+  public static final String PARAM_INCLUDE_SUBCLUSTERS = PARAM_PREFIX + \"includeSubclusters\";\n+\n+  /**\n+   * @see #includeOtherTopics()\n+   */\n+  public static final String PARAM_INCLUDE_OTHER_TOPICS = PARAM_PREFIX + \"includeOtherTopics\";\n+\n+  /**\n+   * @see #language()\n+   */\n+  public static final String PARAM_LANGUAGE = PARAM_PREFIX + \"language\";\n+\n+  /**\n+   * @see #languageField()\n+   */\n+  public static final String PARAM_LANGUAGE_FIELD = PARAM_PREFIX + \"languageField\";\n+\n+  /**\n+   * @see #resources()\n+   */\n+  public static final String PARAM_RESOURCES = PARAM_PREFIX + \"resources\";\n+\n+  /**\n+   * @see #fields()\n+   */\n+  public static final String PARAM_FIELDS = PARAM_PREFIX + \"fields\";\n+\n+  /**\n+   * @see #preferQueryContext()\n+   */\n+  public static final String PARAM_PREFER_QUERY_CONTEXT = PARAM_PREFIX + \"preferQueryContext\";\n+\n+  /**\n+   * @see #contextSize()\n+   */\n+  public static final String PARAM_CONTEXT_SIZE = PARAM_PREFIX + \"contextSize\";\n+\n+  /**\n+   * @see #contextCount()\n+   */\n+  public static final String PARAM_CONTEXT_COUNT = PARAM_PREFIX + \"contextCount\";\n+\n+  /**\n+   * @see #PARAM_MAX_LABELS\n+   */\n+  private int maxLabels = Integer.MAX_VALUE;\n+\n+  /**\n+   * @see #PARAM_INCLUDE_SUBCLUSTERS\n+   */\n+  private boolean includeSubclusters = true;\n+\n+  /**\n+   * @see #PARAM_INCLUDE_OTHER_TOPICS\n+   */\n+  private boolean includeOtherTopics = true;\n+\n+  /**\n+   * @see #PARAM_ALGORITHM\n+   */\n+  private String algorithmName;\n+\n+  /**\n+   * @see #PARAM_RESOURCES\n+   */\n+  private String resources;\n+\n+  /**\n+   * @see #PARAM_LANGUAGE\n+   */\n+  private String language = \"English\";\n+\n+  /**\n+   * @see #PARAM_LANGUAGE_FIELD\n+   */\n+  private String languageField;\n+\n+  /**\n+   * @see #PARAM_PREFER_QUERY_CONTEXT\n+   */\n+  private boolean preferQueryContext;\n+\n+  /**\n+   * @see #PARAM_CONTEXT_SIZE\n+   */\n+  private int contextSize = 80 * 4;\n+\n+  /**\n+   * @see #PARAM_CONTEXT_COUNT\n+   */\n+  private int contextCount = 3;\n+\n+  /**\n+   * @see #PARAM_FIELDS\n+   */\n+  private LinkedHashSet<String> fields = new LinkedHashSet<>();\n+\n+  /**\n+   * Non-engine configuration parameters (algorithm parameters).\n+   */\n+  private LinkedHashMap<String, String> otherParameters = new LinkedHashMap<>();\n+\n+  /**\n+   * Unique-value document identifier field. This is required for clustering since clusters\n+   * only reference documents by their ID field's value.\n+   */\n+  private String docIdField;\n+\n+  EngineParameters(SolrParams params) {\n+    extractFrom(params);\n+  }\n+\n+  /**\n+   * Extract parameter values from the given {@link SolrParams}.\n+   */\n+  private EngineParameters extractFrom(SolrParams params) {\n+    params.stream().forEachOrdered(e -> {\n+      switch (e.getKey()) {\n+        case PARAM_MAX_LABELS:\n+          maxLabels = params.getInt(PARAM_MAX_LABELS);\n+          break;\n+        case PARAM_INCLUDE_SUBCLUSTERS:\n+          includeSubclusters = params.getBool(PARAM_INCLUDE_SUBCLUSTERS);\n+          break;\n+        case PARAM_INCLUDE_OTHER_TOPICS:\n+          includeOtherTopics = params.getBool(PARAM_INCLUDE_OTHER_TOPICS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30563ea214a80126f5b7043e263b705356fad70a"}, "originalPosition": 178}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzAyNjE5", "url": "https://github.com/apache/lucene-solr/pull/2050#pullrequestreview-520702619", "createdAt": "2020-10-30T14:07:49Z", "commit": {"oid": "30563ea214a80126f5b7043e263b705356fad70a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDowNzo0OVrOHrQsOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDowNzo0OVrOHrQsOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyNDI4MQ==", "bodyText": "NULL_DEREFERENCE:  object returned by params.getBool(\"clustering.includeSubclusters\") could be null and is dereferenced at line 175.", "url": "https://github.com/apache/lucene-solr/pull/2050#discussion_r515124281", "createdAt": "2020-10-30T14:07:49Z", "author": {"login": "sonatype-lift"}, "path": "solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/EngineParameters.java", "diffHunk": "@@ -0,0 +1,353 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.solr.handler.clustering;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.solr.common.params.SolrParams;\n+\n+import java.util.Arrays;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+/**\n+ * {@link Engine} configuration parameters (and other parameters that\n+ * may tweak clustering algorithms on a per-request basis).\n+ *\n+ * @lucene.experimental\n+ */\n+public final class EngineParameters implements Cloneable {\n+  /**\n+   * Common prefix for configuration of engine settings.\n+   */\n+  private static final String PARAM_PREFIX = \"clustering.\";\n+\n+  /**\n+   * @see #algorithmName()\n+   */\n+  public static final String PARAM_ALGORITHM = PARAM_PREFIX + \"algorithm\";\n+\n+  /**\n+   * @see #maxLabels()\n+   */\n+  public static final String PARAM_MAX_LABELS = PARAM_PREFIX + \"maxLabels\";\n+\n+  /**\n+   * @see #includeSubclusters()\n+   */\n+  public static final String PARAM_INCLUDE_SUBCLUSTERS = PARAM_PREFIX + \"includeSubclusters\";\n+\n+  /**\n+   * @see #includeOtherTopics()\n+   */\n+  public static final String PARAM_INCLUDE_OTHER_TOPICS = PARAM_PREFIX + \"includeOtherTopics\";\n+\n+  /**\n+   * @see #language()\n+   */\n+  public static final String PARAM_LANGUAGE = PARAM_PREFIX + \"language\";\n+\n+  /**\n+   * @see #languageField()\n+   */\n+  public static final String PARAM_LANGUAGE_FIELD = PARAM_PREFIX + \"languageField\";\n+\n+  /**\n+   * @see #resources()\n+   */\n+  public static final String PARAM_RESOURCES = PARAM_PREFIX + \"resources\";\n+\n+  /**\n+   * @see #fields()\n+   */\n+  public static final String PARAM_FIELDS = PARAM_PREFIX + \"fields\";\n+\n+  /**\n+   * @see #preferQueryContext()\n+   */\n+  public static final String PARAM_PREFER_QUERY_CONTEXT = PARAM_PREFIX + \"preferQueryContext\";\n+\n+  /**\n+   * @see #contextSize()\n+   */\n+  public static final String PARAM_CONTEXT_SIZE = PARAM_PREFIX + \"contextSize\";\n+\n+  /**\n+   * @see #contextCount()\n+   */\n+  public static final String PARAM_CONTEXT_COUNT = PARAM_PREFIX + \"contextCount\";\n+\n+  /**\n+   * @see #PARAM_MAX_LABELS\n+   */\n+  private int maxLabels = Integer.MAX_VALUE;\n+\n+  /**\n+   * @see #PARAM_INCLUDE_SUBCLUSTERS\n+   */\n+  private boolean includeSubclusters = true;\n+\n+  /**\n+   * @see #PARAM_INCLUDE_OTHER_TOPICS\n+   */\n+  private boolean includeOtherTopics = true;\n+\n+  /**\n+   * @see #PARAM_ALGORITHM\n+   */\n+  private String algorithmName;\n+\n+  /**\n+   * @see #PARAM_RESOURCES\n+   */\n+  private String resources;\n+\n+  /**\n+   * @see #PARAM_LANGUAGE\n+   */\n+  private String language = \"English\";\n+\n+  /**\n+   * @see #PARAM_LANGUAGE_FIELD\n+   */\n+  private String languageField;\n+\n+  /**\n+   * @see #PARAM_PREFER_QUERY_CONTEXT\n+   */\n+  private boolean preferQueryContext;\n+\n+  /**\n+   * @see #PARAM_CONTEXT_SIZE\n+   */\n+  private int contextSize = 80 * 4;\n+\n+  /**\n+   * @see #PARAM_CONTEXT_COUNT\n+   */\n+  private int contextCount = 3;\n+\n+  /**\n+   * @see #PARAM_FIELDS\n+   */\n+  private LinkedHashSet<String> fields = new LinkedHashSet<>();\n+\n+  /**\n+   * Non-engine configuration parameters (algorithm parameters).\n+   */\n+  private LinkedHashMap<String, String> otherParameters = new LinkedHashMap<>();\n+\n+  /**\n+   * Unique-value document identifier field. This is required for clustering since clusters\n+   * only reference documents by their ID field's value.\n+   */\n+  private String docIdField;\n+\n+  EngineParameters(SolrParams params) {\n+    extractFrom(params);\n+  }\n+\n+  /**\n+   * Extract parameter values from the given {@link SolrParams}.\n+   */\n+  private EngineParameters extractFrom(SolrParams params) {\n+    params.stream().forEachOrdered(e -> {\n+      switch (e.getKey()) {\n+        case PARAM_MAX_LABELS:\n+          maxLabels = params.getInt(PARAM_MAX_LABELS);\n+          break;\n+        case PARAM_INCLUDE_SUBCLUSTERS:\n+          includeSubclusters = params.getBool(PARAM_INCLUDE_SUBCLUSTERS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30563ea214a80126f5b7043e263b705356fad70a"}, "originalPosition": 175}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzAyNjY4", "url": "https://github.com/apache/lucene-solr/pull/2050#pullrequestreview-520702668", "createdAt": "2020-10-30T14:07:52Z", "commit": {"oid": "30563ea214a80126f5b7043e263b705356fad70a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDowNzo1MlrOHrQsVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDowNzo1MlrOHrQsVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyNDMxMA==", "bodyText": "PATH_TRAVERSAL_IN:  This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input (details)", "url": "https://github.com/apache/lucene-solr/pull/2050#discussion_r515124310", "createdAt": "2020-10-30T14:07:52Z", "author": {"login": "sonatype-lift"}, "path": "solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/EngineContext.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.solr.handler.clustering;\n+\n+import org.apache.solr.core.SolrCore;\n+import org.carrot2.clustering.ClusteringAlgorithm;\n+import org.carrot2.clustering.ClusteringAlgorithmProvider;\n+import org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm;\n+import org.carrot2.clustering.lingo.LingoClusteringAlgorithm;\n+import org.carrot2.clustering.stc.STCClusteringAlgorithm;\n+import org.carrot2.language.LanguageComponents;\n+import org.carrot2.language.LanguageComponentsLoader;\n+import org.carrot2.language.LoadedLanguages;\n+import org.carrot2.util.ChainedResourceLookup;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.lang.invoke.MethodHandles;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.ServiceLoader;\n+import java.util.function.Supplier;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Clustering engine context: algorithms, preloaded language\n+ * resources and initial validation.\n+ */\n+final class EngineContext {\n+  private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n+\n+  private final LinkedHashMap<String, LanguageComponents> languages;\n+  private final Map<String, ClusteringAlgorithmProvider> algorithmProviders;\n+\n+  private final static Map<String, String> aliasedNames;\n+\n+  static {\n+    aliasedNames = new HashMap<>();\n+    aliasedNames.put(LingoClusteringAlgorithm.class.getName(), LingoClusteringAlgorithm.NAME);\n+    aliasedNames.put(STCClusteringAlgorithm.class.getName(), STCClusteringAlgorithm.NAME);\n+    aliasedNames.put(BisectingKMeansClusteringAlgorithm.class.getName(), BisectingKMeansClusteringAlgorithm.NAME);\n+  }\n+\n+  EngineContext(String resourcesPath, SolrCore core) {\n+    LanguageComponentsLoader loader = LanguageComponents.loader();\n+\n+    List<Path> resourceLocations = new ArrayList<>();\n+\n+    Path configDir = Paths.get(core.getResourceLoader().getConfigDir());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30563ea214a80126f5b7043e263b705356fad70a"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e3c7acc7adda647c636eadc00ced5eebbb3c8f0", "author": {"user": {"login": "dweiss", "name": "Dawid Weiss"}}, "url": "https://github.com/apache/lucene-solr/commit/4e3c7acc7adda647c636eadc00ced5eebbb3c8f0", "committedDate": "2020-10-30T14:32:08Z", "message": "SOLR-14926: Moving changes entry to master since backport is non-trivial (Java 11 requirement)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0acbd240b250f8981f982c7a6080b22ad8da0a00", "author": {"user": {"login": "dweiss", "name": "Dawid Weiss"}}, "url": "https://github.com/apache/lucene-solr/commit/0acbd240b250f8981f982c7a6080b22ad8da0a00", "committedDate": "2020-10-30T14:35:22Z", "message": "Change API version change to 9.0."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc8ddb89844591fcb41967404f2f61ca6bb667e6", "author": {"user": {"login": "dweiss", "name": "Dawid Weiss"}}, "url": "https://github.com/apache/lucene-solr/commit/fc8ddb89844591fcb41967404f2f61ca6bb667e6", "committedDate": "2020-11-03T08:31:00Z", "message": "Merge remote-tracking branch 'origin/master' into SOLR-14926"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2547, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}