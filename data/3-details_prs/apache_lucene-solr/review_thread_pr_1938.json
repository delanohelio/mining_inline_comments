{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NjA2MTMw", "number": 1938, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwMToxNjozM1rOEpq9rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMzo1NzowOFrOEp_XgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTMwOTg5OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/rest/RestManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwMToxNjozM1rOHbfB3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwNDowNzo1MlrOHb_fIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4MTk4Mg==", "bodyText": "UNSAFE_HASH_EQUALS:  Unsafe comparison of hash that are susceptible to timing attack (details)", "url": "https://github.com/apache/lucene-solr/pull/1938#discussion_r498581982", "createdAt": "2020-10-02T01:16:33Z", "author": {"login": "sonatype-lift"}, "path": "solr/core/src/java/org/apache/solr/rest/RestManager.java", "diffHunk": "@@ -326,44 +327,46 @@ public void doInit() throws ResourceException {\n           }\n         }\n       }    \n-      \n+\n       if (managedResource == null) {\n-        if (Method.PUT.equals(getMethod()) || Method.POST.equals(getMethod())) {\n+        final String method = getSolrRequest().getHttpMethod();\n+        if (\"PUT\".equals(method) || \"POST\".equals(method)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b9530975bc2b89eadd487f2d1704f7868b4c547"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxNjEwNg==", "bodyText": "String equals unsafe? Not sure I understand what this warning is trying to convey?", "url": "https://github.com/apache/lucene-solr/pull/1938#discussion_r498916106", "createdAt": "2020-10-02T16:10:32Z", "author": {"login": "thelabdude"}, "path": "solr/core/src/java/org/apache/solr/rest/RestManager.java", "diffHunk": "@@ -326,44 +327,46 @@ public void doInit() throws ResourceException {\n           }\n         }\n       }    \n-      \n+\n       if (managedResource == null) {\n-        if (Method.PUT.equals(getMethod()) || Method.POST.equals(getMethod())) {\n+        final String method = getSolrRequest().getHttpMethod();\n+        if (\"PUT\".equals(method) || \"POST\".equals(method)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4MTk4Mg=="}, "originalCommit": {"oid": "0b9530975bc2b89eadd487f2d1704f7868b4c547"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTExMzc2MA==", "bodyText": "If you click the details link, it explains.  It's pretty wild what it suggests... it's a stretch IMO.  Good luck pulling that attack off.  Besides, this is the HTTP method (fixed vocab); it's not a param.\nOur use of Muse here is very new.... we haven't tweaked .muse/config.toml yet but it needs some taming.  https://docs.muse.dev/docs/configuring-muse/", "url": "https://github.com/apache/lucene-solr/pull/1938#discussion_r499113760", "createdAt": "2020-10-03T04:07:52Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/rest/RestManager.java", "diffHunk": "@@ -326,44 +327,46 @@ public void doInit() throws ResourceException {\n           }\n         }\n       }    \n-      \n+\n       if (managedResource == null) {\n-        if (Method.PUT.equals(getMethod()) || Method.POST.equals(getMethod())) {\n+        final String method = getSolrRequest().getHttpMethod();\n+        if (\"PUT\".equals(method) || \"POST\".equals(method)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU4MTk4Mg=="}, "originalCommit": {"oid": "0b9530975bc2b89eadd487f2d1704f7868b4c547"}, "originalPosition": 176}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzY0MTQyOnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/rest/RestManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzozMzoyMlrOHb151g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzozMzoyMlrOHb151g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk1Njc1OA==", "bodyText": "THREAD_SAFETY_VIOLATION:  Read/Write race. Non-private method RestManager$Registry.isPathRegistered(...) reads without synchronization from container this.registered via call to Map.containsKey(...). Potentially races with write in method RestManager$Registry.registerManagedResource(...).\nReporting because another access to the same memory occurs on a background thread, although this access may not.", "url": "https://github.com/apache/lucene-solr/pull/1938#discussion_r498956758", "createdAt": "2020-10-02T17:33:22Z", "author": {"login": "sonatype-lift"}, "path": "solr/core/src/java/org/apache/solr/rest/RestManager.java", "diffHunk": "@@ -160,6 +156,10 @@ private Pattern getReservedEndpointsPattern() {\n       return Pattern.compile(builder.toString());\n     }\n \n+    public boolean isPathRegistered(String s) {\n+      return registered.containsKey(s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fd21de89843ce75978c99ab1c1c6c299c5be02"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDY1MjgxOnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/rest/RestManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMzo1NzowOFrOHb_cvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNDo1MTo0OFrOHcIGHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTExMzE0OA==", "bodyText": "I'd prefer you configure your IDE to keep java.* up front.  FWIW this is in the IntelliJ config in the project.", "url": "https://github.com/apache/lucene-solr/pull/1938#discussion_r499113148", "createdAt": "2020-10-03T03:57:08Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/rest/RestManager.java", "diffHunk": "@@ -16,15 +16,33 @@\n  */\n package org.apache.solr.rest;\n \n+import org.apache.solr.common.SolrException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fd21de89843ce75978c99ab1c1c6c299c5be02"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDgxNA==", "bodyText": "oops my bad, thanks for catching", "url": "https://github.com/apache/lucene-solr/pull/1938#discussion_r499254814", "createdAt": "2020-10-04T14:51:48Z", "author": {"login": "thelabdude"}, "path": "solr/core/src/java/org/apache/solr/rest/RestManager.java", "diffHunk": "@@ -16,15 +16,33 @@\n  */\n package org.apache.solr.rest;\n \n+import org.apache.solr.common.SolrException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTExMzE0OA=="}, "originalCommit": {"oid": "90fd21de89843ce75978c99ab1c1c6c299c5be02"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1116, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}