{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMTU1NDc5", "number": 2040, "title": "SOLR-14965 add overseer queue size metrics", "bodyText": "Description\nPlease provide a short description of the changes you're making with this pull request.\nThe Overseer work queues stored in ZK and abstracted by the Overseer can give us a good indication of the health of the cluster - if messages are taking too long to dequeue or the queue is growing too large, we know that the Overseer is overloaded and we are going to overwhelm the cluster.\nThis work adds metrics to track the size of the Overseer queues (ClusterStateUpdate queue and Collections Work Queue).\nSolution\nPlease provide a short description of the approach taken to implement your solution.\nRegistered these two size metrics in a shared metrics registry for the Overseer. The Overseer shared metrics registry is only initialized upon reference so this shouldn't have any impact on metrics when run in non-cloud mode. Also updated the local solr-exporter-config.xml so that these metrics are exported and can be viewed locally in Grafana.\nTests\nPlease describe the tests you've developed or run to confirm this patch implements the feature or solves the problem.\nLocal testing was accomplished by sending CreateCollection load and monitoring a local grafana dashboard which accessed the metrics through prometheus-exporter. As the size of these queues change extremely quickly, it was difficult to see changes in these metrics quickly enough--and if the requests were sent too quickly we'd see local solr hosts OOMing. However, I was able to verify that the metrics are updating as the size of the queues change, and in a real environment with more sustained load we should see these metrics more accurately represent the state of the Overseer.\nTesting confirmed that we don't see the Overseer metrics registry in non-cloud mode.\n/admin/metrics response containing added metrics\n\nlocal testing sending CreateCollection request load and seeing metrics update in real time\n\nChecklist\nPlease review the following and check all that apply:\n\n I have reviewed the guidelines for How to Contribute and my code conforms to the standards described there to the best of my ability.\n I have created a Jira issue and added the issue ID to my pull request title.\n I have given Solr maintainers access to contribute to my PR branch. (optional but recommended)\n I have developed this patch against the master branch.\n I have run ./gradlew check.\n I have added tests for my changes.\n I have added documentation for the Ref Guide (for Solr changes only).", "createdAt": "2020-10-27T22:47:04Z", "url": "https://github.com/apache/lucene-solr/pull/2040", "merged": true, "mergeCommit": {"oid": "19ed90337767412de66ebb1757e63607372ae9b3"}, "closed": true, "closedAt": "2020-12-04T21:47:36Z", "author": {"login": "saatchibhalla"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWvSwwAH2gAyNTExMTU1NDc5OmE1ODYzY2EzM2NlMWE0OGI2MGE2OTQ3ZDBlNzQxNTY4MjBhYWI0YzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi-3NugH2gAyNTExMTU1NDc5OjhjZDAyZjMxZjczNWMzMTUxOGY5ZjdmZmY5N2Q4MzIyYzUzMGQ1OTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a5863ca33ce1a48b60a6947d0e74156820aab4c3", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/a5863ca33ce1a48b60a6947d0e74156820aab4c3", "committedDate": "2020-10-27T20:49:36Z", "message": "add overseer queue size metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5c6eaacda382095a5ca99f524f6c54afca8e85d", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/c5c6eaacda382095a5ca99f524f6c54afca8e85d", "committedDate": "2020-10-27T22:46:45Z", "message": "updated solr-ref-guide with overseer registry info"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4Njk1NjI2", "url": "https://github.com/apache/lucene-solr/pull/2040#pullrequestreview-518695626", "createdAt": "2020-10-28T14:04:39Z", "commit": {"oid": "c5c6eaacda382095a5ca99f524f6c54afca8e85d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDowNDo0MFrOHprscQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDoyNDo1NlrOHpssDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ2OTU1Mw==", "bodyText": "You should never create instances of SolrMetricManager in your components. Always use the single instance constructed in CoreContainer.getMetricManager().\nThe only reason it kind of worked for you was that you made it a shared registry, which is created once per JVM - but as I explain below in this case a shared registry is incorrect and should not be used.", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513469553", "createdAt": "2020-10-28T14:04:40Z", "author": {"login": "sigram"}, "path": "solr/core/src/java/org/apache/solr/cloud/Overseer.java", "diffHunk": "@@ -173,6 +175,9 @@\n \n     private final Stats zkStats;\n \n+    private final SolrMetricManager metricManager = new SolrMetricManager();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5c6eaacda382095a5ca99f524f6c54afca8e85d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ3OTA1Mw==", "bodyText": "You should create a SolrMetricsContext in Overseer, and create a child context here, and then pass it as the first argument to registerGauge. This helps to properly unregister old gauges from the registry (because a new instance of ClusterStateUpdater is created each time this Overseer instance becomes the leader, and then it registers a new instance of gauge with the same name). Using a static string \"overseer\" defeats this mechanism, because it falsely indicates that the life-cycle of ClusterStateUpdater is the same as its parent object Overseer.\nThen in the ClusterStateUpdater.close() method you should unregister this gauge using the value of solrMetricsContext.getTag(). This prevents obscure reference leaks in the metrics registry.", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513479053", "createdAt": "2020-10-28T14:16:33Z", "author": {"login": "sigram"}, "path": "solr/core/src/java/org/apache/solr/cloud/Overseer.java", "diffHunk": "@@ -185,6 +190,9 @@ public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats\n       this.completedMap = getCompletedMap(zkClient);\n       this.myId = myId;\n       this.reader = reader;\n+\n+      registryName = SolrMetricManager.getRegistryName(SolrInfoBean.Group.overseer);\n+      metricManager.registerGauge(null, registryName, () -> stateUpdateQueue.getZkStats().getQueueLength(), \"overseer\", true, \"stateUpdateQueueSize\", \"queue\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5c6eaacda382095a5ca99f524f6c54afca8e85d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ4MDU5MQ==", "bodyText": "Please use the context tag value here.", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513480591", "createdAt": "2020-10-28T14:18:36Z", "author": {"login": "sigram"}, "path": "solr/core/src/java/org/apache/solr/cloud/Overseer.java", "diffHunk": "@@ -544,6 +552,7 @@ private LeaderStatus amILeader() {\n     @Override\n       public void close() {\n         this.isClosed = true;\n+        metricManager.unregisterGauges(registryName, \"overseer\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5c6eaacda382095a5ca99f524f6c54afca8e85d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ4MDgwMw==", "bodyText": "See above - this should never be done.", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513480803", "createdAt": "2020-10-28T14:18:54Z", "author": {"login": "sigram"}, "path": "solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor.java", "diffHunk": "@@ -94,6 +96,8 @@\n   private boolean isClosed;\n \n   private volatile Stats stats;\n+  private final SolrMetricManager metricManager = new SolrMetricManager();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5c6eaacda382095a5ca99f524f6c54afca8e85d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ4MzI4MA==", "bodyText": "See above comments - you should create a child context here (from the one created in Overseer) and use it in this call, and then unregister this gauge using this context's tag value.", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513483280", "createdAt": "2020-10-28T14:21:54Z", "author": {"login": "sigram"}, "path": "solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor.java", "diffHunk": "@@ -154,6 +158,9 @@ public OverseerTaskProcessor(ZkStateReader zkStateReader, String myId,\n     this.runningTasks = ConcurrentHashMap.newKeySet();\n     this.completedTasks = new ConcurrentHashMap<>();\n     thisNode = Utils.getMDCNode();\n+\n+    registryName = SolrMetricManager.getRegistryName(SolrInfoBean.Group.overseer);\n+    metricManager.registerGauge(null, registryName, () -> workQueue.getZkStats().getQueueLength(), \"overseer\", true, \"collectionWorkQueueSize\", \"queue\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5c6eaacda382095a5ca99f524f6c54afca8e85d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ4MzQ3Nw==", "bodyText": "See above - use the tag value from the context.", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513483477", "createdAt": "2020-10-28T14:22:10Z", "author": {"login": "sigram"}, "path": "solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor.java", "diffHunk": "@@ -386,6 +393,7 @@ private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n \n   public void close() {\n     isClosed = true;\n+    metricManager.unregisterGauges(registryName, \"overseer\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5c6eaacda382095a5ca99f524f6c54afca8e85d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ4NTUxNA==", "bodyText": "Overseer registry CANNOT be a shared registry because it's possible to have multiple Overseers in a single JVM, especially in unit tests. This should be a regular per-CoreContainer registry, which is created within the scope of the instance available from CC.getMetricManager().", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513485514", "createdAt": "2020-10-28T14:24:35Z", "author": {"login": "sigram"}, "path": "solr/core/src/java/org/apache/solr/metrics/SolrMetricManager.java", "diffHunk": "@@ -423,13 +429,13 @@ public boolean hasRegistry(String name) {\n   /**\n    * Check for predefined shared registry names. This compares the input name\n    * with normalized names of predefined shared registries -\n-   * {@link #JVM_REGISTRY} and {@link #JETTY_REGISTRY}.\n+   * {@link #JVM_REGISTRY}, {@link #JETTY_REGISTRY}, and {@link #OVERSEER_REGISTRY}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5c6eaacda382095a5ca99f524f6c54afca8e85d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ4NTgzNw==", "bodyText": "See above - this can't be a shared registry.", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513485837", "createdAt": "2020-10-28T14:24:56Z", "author": {"login": "sigram"}, "path": "solr/core/src/java/org/apache/solr/metrics/SolrMetricManager.java", "diffHunk": "@@ -423,13 +429,13 @@ public boolean hasRegistry(String name) {\n   /**\n    * Check for predefined shared registry names. This compares the input name\n    * with normalized names of predefined shared registries -\n-   * {@link #JVM_REGISTRY} and {@link #JETTY_REGISTRY}.\n+   * {@link #JVM_REGISTRY}, {@link #JETTY_REGISTRY}, and {@link #OVERSEER_REGISTRY}\n    *\n    * @param registry already normalized name\n    * @return true if the name matches one of shared registries\n    */\n   private static boolean isSharedRegistry(String registry) {\n-    return JETTY_REGISTRY.equals(registry) || JVM_REGISTRY.equals(registry);\n+    return JETTY_REGISTRY.equals(registry) || JVM_REGISTRY.equals(registry) || OVERSEER_REGISTRY.equals(registry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5c6eaacda382095a5ca99f524f6c54afca8e85d"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c6010531bb2a795e340c88cd8e188b9cc635b38", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/0c6010531bb2a795e340c88cd8e188b9cc635b38", "committedDate": "2020-10-28T19:41:06Z", "message": "updated metrics to be added via CoreContainer metricsManager and registered to an Overseer solrMetricsContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3125c45db659dd93b895555696b8e56cb4fb8cdf", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/3125c45db659dd93b895555696b8e56cb4fb8cdf", "committedDate": "2020-10-28T20:32:24Z", "message": "removing unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDYyODcx", "url": "https://github.com/apache/lucene-solr/pull/2040#pullrequestreview-519062871", "createdAt": "2020-10-28T20:36:49Z", "commit": {"oid": "3125c45db659dd93b895555696b8e56cb4fb8cdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDozNjo0OVrOHp8dDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDozNjo0OVrOHp8dDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0NDE0MQ==", "bodyText": "Are there any tests that instantiate OverseerCollectionConfigSetProcessor? (Just want to make sure this is the only time this method is used, since we changed the signature)", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513744141", "createdAt": "2020-10-28T20:36:49Z", "author": {"login": "megancarey"}, "path": "solr/core/src/java/org/apache/solr/cloud/Overseer.java", "diffHunk": "@@ -636,7 +650,7 @@ public synchronized void start(String id) {\n     ThreadGroup ccTg = new ThreadGroup(\"Overseer collection creation process.\");\n \n     OverseerNodePrioritizer overseerPrioritizer = new OverseerNodePrioritizer(reader, getStateUpdateQueue(), adminPath, shardHandler.getShardHandlerFactory());\n-    overseerCollectionConfigSetProcessor = new OverseerCollectionConfigSetProcessor(reader, id, shardHandler, adminPath, stats, Overseer.this, overseerPrioritizer);\n+    overseerCollectionConfigSetProcessor = new OverseerCollectionConfigSetProcessor(reader, id, shardHandler, adminPath, stats, Overseer.this, overseerPrioritizer, solrMetricsContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3125c45db659dd93b895555696b8e56cb4fb8cdf"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDYzNjIz", "url": "https://github.com/apache/lucene-solr/pull/2040#pullrequestreview-519063623", "createdAt": "2020-10-28T20:37:59Z", "commit": {"oid": "3125c45db659dd93b895555696b8e56cb4fb8cdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDozNzo1OVrOHp8fLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDozNzo1OVrOHp8fLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0NDY4NQ==", "bodyText": "Same question here - would be good to double-check that this is the only place we instantiate OverseerTaskProcessor", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513744685", "createdAt": "2020-10-28T20:37:59Z", "author": {"login": "megancarey"}, "path": "solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor.java", "diffHunk": "@@ -134,13 +136,14 @@ public String toString() {\n   private String thisNode;\n \n   public OverseerTaskProcessor(ZkStateReader zkStateReader, String myId,\n-                                        Stats stats,\n-                                        OverseerMessageHandlerSelector selector,\n-                                        OverseerNodePrioritizer prioritizer,\n-                                        OverseerTaskQueue workQueue,\n-                                        DistributedMap runningMap,\n-                                        DistributedMap completedMap,\n-                                        DistributedMap failureMap) {\n+                               Stats stats,\n+                               OverseerMessageHandlerSelector selector,\n+                               OverseerNodePrioritizer prioritizer,\n+                               OverseerTaskQueue workQueue,\n+                               DistributedMap runningMap,\n+                               DistributedMap completedMap,\n+                               DistributedMap failureMap,\n+                               SolrMetricsContext solrMetricsContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3125c45db659dd93b895555696b8e56cb4fb8cdf"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDY0MzU0", "url": "https://github.com/apache/lucene-solr/pull/2040#pullrequestreview-519064354", "createdAt": "2020-10-28T20:39:06Z", "commit": {"oid": "3125c45db659dd93b895555696b8e56cb4fb8cdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDozOTowNlrOHp8hYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDozOTowNlrOHp8hYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0NTI0OA==", "bodyText": "We can update this doc comment now, since we are using the CoreContainer registry", "url": "https://github.com/apache/lucene-solr/pull/2040#discussion_r513745248", "createdAt": "2020-10-28T20:39:06Z", "author": {"login": "megancarey"}, "path": "solr/solr-ref-guide/src/metrics-reporting.adoc", "diffHunk": "@@ -53,6 +53,12 @@ This registry is returned at `solr.jvm` and includes the following information.\n * System properties such as Java information, various installation directory paths, ports, and similar information. You can control what appears here by modifying `solr.xml`.\n // TODO for 7.0 fix this\n \n+=== Overseer Registry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3125c45db659dd93b895555696b8e56cb4fb8cdf"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29479ab004e349ae3957eab9f705411c9be2c16e", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/29479ab004e349ae3957eab9f705411c9be2c16e", "committedDate": "2020-10-28T21:26:09Z", "message": "updated constructor in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMTE0MjIz", "url": "https://github.com/apache/lucene-solr/pull/2040#pullrequestreview-520114223", "createdAt": "2020-10-29T21:50:10Z", "commit": {"oid": "29479ab004e349ae3957eab9f705411c9be2c16e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2222635caa60e3fef1b6eb08a32a05f744a2645f", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/2222635caa60e3fef1b6eb08a32a05f744a2645f", "committedDate": "2020-11-02T15:49:34Z", "message": "fixing TFs by mocking out CoreContainer.metricManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe2eeb245680335a97b1d628a66a4959adb58327", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/fe2eeb245680335a97b1d628a66a4959adb58327", "committedDate": "2020-11-20T15:12:53Z", "message": "fixing error with exporting metric on non overseer nodes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b192b9e24acfc4ada3e2eaa47d203873cdc38dc5", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/b192b9e24acfc4ada3e2eaa47d203873cdc38dc5", "committedDate": "2020-12-03T16:17:24Z", "message": "separate overseer queue metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e53b751942364f535f5f53fba21cd206e956e28", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/8e53b751942364f535f5f53fba21cd206e956e28", "committedDate": "2020-12-04T21:42:23Z", "message": "Merge branch 'master' into jira/SOLR-14965"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd02f31f735c31518f9f7fff97d8322c530d592", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/8cd02f31f735c31518f9f7fff97d8322c530d592", "committedDate": "2020-12-04T21:45:05Z", "message": "CHANGES.txt"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2532, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}