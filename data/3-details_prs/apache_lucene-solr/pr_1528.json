{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5Nzc5NzU2", "number": 1528, "title": "SOLR-12823: remove /clusterstate.json", "bodyText": "Remove all code dealing with Zookeeper's /clusterstate.json, remove Collection API's MIGRATESTATEVERSION, remove legacyCloud option.\nNotes [Edit: these two tests were deleted. Need to create a Jira post merge to create a SolrCloud chroot test]:\n\nTestZkChroot requires more work\nBasicZkTest requires more work (or better: be deleted)\n\nAlso fixes SOLR-11877: DocCollection.getStateFormat is buggy\nDescription\nRemove all code dealing with /clusterstate.json in Zookeeper, remove MIGRATESTATEVERSION Collection API action and the notion of \u201clegacyCloud\u201d.\nSolution\nSolr 9 will refuse to start if an existing /clusterstate.json in Zookeeper exists and is not empty.\nTests\nNo new tests, but adapting old tests that were misbehaving.\nChecklist\nPlease review the following and check all that apply:\n\n I have reviewed the guidelines for How to Contribute and my code conforms to the standards described there to the best of my ability.\n I have created a Jira issue and added the issue ID to my pull request title.\n I have given Solr maintainers access to contribute to my PR branch. (optional but recommended)\n I have developed this patch against the master branch.\n I have run ant precommit and the appropriate test suite.\n I have added tests for my changes.\n I have added documentation for the Ref Guide (for Solr changes only).", "createdAt": "2020-05-18T22:47:33Z", "url": "https://github.com/apache/lucene-solr/pull/1528", "merged": true, "mergeCommit": {"oid": "1ab9b811c65abb3d1a827c87b4f1135116ff90eb"}, "closed": true, "closedAt": "2020-06-09T18:59:18Z", "author": {"login": "murblanc"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcio_ybgBqjMzNDk1NDA4NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcppyuAgH2gAyNDE5Nzc5NzU2Ojk4YzljNGFlNWUwMWQ1MTFmM2U1MGRkNjcxNDg1Y2QyZjJlMDg2NzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87117bfc14bfb56333677c6a6b38235dabdb5e29", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/87117bfc14bfb56333677c6a6b38235dabdb5e29", "committedDate": "2020-05-18T22:31:39Z", "message": "SOLR-12823: remove /clusterstate.json\n\nRemove all code dealing with Zookeeper's /clusterstate.json, remove Collection API's MIGRATESTATEVERSION, remove legacyCloud option.\n\nNotes:\n- org.apache.solr.cloud.autoscaling.sim is non functional, requires more work.\n- TestZkChroot requires more work\n- BasicZkTest requires more work (or better: be deleted)\n\nAlso fixes SOLR-11877 DocCollection.getStateFormat is buggy"}, "afterCommit": {"oid": "a769d663828e4767900c17f7ea00777546a150d7", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/a769d663828e4767900c17f7ea00777546a150d7", "committedDate": "2020-05-19T00:03:31Z", "message": "SOLR-12823: remove /clusterstate.json\n\nRemove all code dealing with Zookeeper's /clusterstate.json, remove Collection API's MIGRATESTATEVERSION, remove legacyCloud option.\n\nNotes:\n- org.apache.solr.cloud.autoscaling.sim is non functional, requires more work.\n- TestZkChroot requires more work\n- BasicZkTest requires more work (or better: be deleted)\n\nAlso fixes SOLR-11877 DocCollection.getStateFormat is buggy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0Nzk4MzQ0", "url": "https://github.com/apache/lucene-solr/pull/1528#pullrequestreview-414798344", "createdAt": "2020-05-19T20:28:54Z", "commit": {"oid": "14f7db461bc9d8663717cedd7ae08408a4a0b696"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyODo1NFrOGXxadw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDozMjowM1rOGXxg0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDAyMw==", "bodyText": "Can we be more rigorous on the test here?", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r427580023", "createdAt": "2020-05-19T20:28:54Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/cloud/ZkController.java", "diffHunk": "@@ -491,6 +493,40 @@ public boolean isClosed() {\n     assert ObjectReleaseTracker.track(this);\n   }\n \n+  /**\n+   * <p>Verifies if /clusterstate.json exists in Zookeepeer, and if it does and is not empty, refuses to start and outputs\n+   * a helpful message regarding collection migration.</p>\n+   *\n+   * <p>If /clusterstate.json exists and is empty, it is removed.</p>\n+   */\n+  private void checkNoOldClusterstate(final SolrZkClient zkClient) throws InterruptedException {\n+    try {\n+      if (!zkClient.exists(ZkStateReader.UNSUPPORTED_CLUSTER_STATE, true)) {\n+        return;\n+      }\n+\n+      final byte[] data = zkClient.getData(ZkStateReader.UNSUPPORTED_CLUSTER_STATE, null, null, true);\n+\n+      if (data.length < 5) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14f7db461bc9d8663717cedd7ae08408a4a0b696"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDUyNw==", "bodyText": "What are the conditions where this happens? log-and-throw is usually an anti-pattern.", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r427580527", "createdAt": "2020-05-19T20:29:50Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/cloud/ZkController.java", "diffHunk": "@@ -491,6 +493,40 @@ public boolean isClosed() {\n     assert ObjectReleaseTracker.track(this);\n   }\n \n+  /**\n+   * <p>Verifies if /clusterstate.json exists in Zookeepeer, and if it does and is not empty, refuses to start and outputs\n+   * a helpful message regarding collection migration.</p>\n+   *\n+   * <p>If /clusterstate.json exists and is empty, it is removed.</p>\n+   */\n+  private void checkNoOldClusterstate(final SolrZkClient zkClient) throws InterruptedException {\n+    try {\n+      if (!zkClient.exists(ZkStateReader.UNSUPPORTED_CLUSTER_STATE, true)) {\n+        return;\n+      }\n+\n+      final byte[] data = zkClient.getData(ZkStateReader.UNSUPPORTED_CLUSTER_STATE, null, null, true);\n+\n+      if (data.length < 5) {\n+        // less than 5 chars is empty (it's likely just \"{}\"). This log will only occur once.\n+        log.warn(\"{} no longer supported starting with Solr 9. Found empty file on Zookeeper, deleting it.\", ZkStateReader.UNSUPPORTED_CLUSTER_STATE);\n+        zkClient.delete(ZkStateReader.UNSUPPORTED_CLUSTER_STATE, -1, true);\n+      } else {\n+        // /clusterstate.json not empty: refuse to start but do not automatically delete. A bit of a pain but user shouldn't\n+        // have older collections at this stage anyway.\n+        String message = ZkStateReader.UNSUPPORTED_CLUSTER_STATE + \" no longer supported starting with Solr 9. \"\n+            + \"It is present and not empty. Cannot start Solr. Please first migrate collections to stateFormat=2 using an \"\n+            + \"older version of Solr or if you don't care about the data then delete the file from \"\n+            + \"Zookeeper using a command line tool, for example: bin/solr zk rm /clusterstate.json -z host:port\";\n+        log.error(message);\n+        throw new SolrException(SolrException.ErrorCode.INVALID_STATE, message);\n+      }\n+    } catch (KeeperException e) {\n+      log.error(\"\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14f7db461bc9d8663717cedd7ae08408a4a0b696"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MTQ2Mw==", "bodyText": "s/clusterstate/state?", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r427581463", "createdAt": "2020-05-19T20:31:38Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/cloud/api/collections/CreateCollectionCmd.java", "diffHunk": "@@ -236,21 +235,19 @@ public void call(ClusterState clusterState, ZkNodeProps message, NamedList resul\n         }\n \n         String baseUrl = zkStateReader.getBaseUrlForNodeName(nodeName);\n-        //in the new mode, create the replica in clusterstate prior to creating the core.\n+        //create the replica in clusterstate (i.e. ZK) prior to creating the core.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14f7db461bc9d8663717cedd7ae08408a4a0b696"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MTY0OA==", "bodyText": "Yay!", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r427581648", "createdAt": "2020-05-19T20:32:03Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java", "diffHunk": "@@ -468,36 +467,6 @@ void checkResults(String label, NamedList<Object> results, boolean failureIsFata\n     }\n   }\n \n-\n-  //TODO should we not remove in the next release ?\n-  private void migrateStateFormat(ClusterState state, ZkNodeProps message, NamedList results) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14f7db461bc9d8663717cedd7ae08408a4a0b696"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14f7db461bc9d8663717cedd7ae08408a4a0b696", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/14f7db461bc9d8663717cedd7ae08408a4a0b696", "committedDate": "2020-05-19T00:09:31Z", "message": "Remove Javadoc link to no longer existing symbol"}, "afterCommit": {"oid": "03f657fe3b08903b056afc607cd602233b178577", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/03f657fe3b08903b056afc607cd602233b178577", "committedDate": "2020-05-19T22:48:25Z", "message": "Update comment and test for empty /clusterstate in ZK"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NTA0MjMx", "url": "https://github.com/apache/lucene-solr/pull/1528#pullrequestreview-417504231", "createdAt": "2020-05-25T07:18:02Z", "commit": {"oid": "c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzoxODowM1rOGZ3D3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODoxMjo1MVrOGZ4o6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc2OTY5Mw==", "bodyText": "I was thinking of the rolling upgrade scenario - if someone upgrades from 8.x to 9.0 one node at a time. Then the first node upgraded will delete /clusterstate.json. Will that cause any kind of failures or exceptions in the remaining nodes, if they have a watch on the znode or something?\nA way to mitigate it could be to let only the Overseer do the delete, and tell people to upgrade overseer last?", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r429769693", "createdAt": "2020-05-25T07:18:03Z", "author": {"login": "janhoy"}, "path": "solr/core/src/java/org/apache/solr/cloud/ZkController.java", "diffHunk": "@@ -491,6 +494,41 @@ public boolean isClosed() {\n     assert ObjectReleaseTracker.track(this);\n   }\n \n+  /**\n+   * <p>Verifies if /clusterstate.json exists in Zookeepeer, and if it does and is not empty, refuses to start and outputs\n+   * a helpful message regarding collection migration.</p>\n+   *\n+   * <p>If /clusterstate.json exists and is empty, it is removed.</p>\n+   */\n+  private void checkNoOldClusterstate(final SolrZkClient zkClient) throws InterruptedException {\n+    try {\n+      if (!zkClient.exists(ZkStateReader.UNSUPPORTED_CLUSTER_STATE, true)) {\n+        return;\n+      }\n+\n+      final byte[] data = zkClient.getData(ZkStateReader.UNSUPPORTED_CLUSTER_STATE, null, null, true);\n+\n+      if (Arrays.equals(\"{}\".getBytes(StandardCharsets.UTF_8), data)) {\n+        // Empty json. This log will only occur once.\n+        log.warn(\"{} no longer supported starting with Solr 9. Found empty file on Zookeeper, deleting it.\", ZkStateReader.UNSUPPORTED_CLUSTER_STATE);\n+        zkClient.delete(ZkStateReader.UNSUPPORTED_CLUSTER_STATE, -1, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3NDcxNA==", "bodyText": "What happens if someone backs up a 8.5 collection with stateFormat=1 and then tries to restore in 9.0? Not very likely since that collection was probably created pre-7.0 and it would not load in 9.0 anyway. But should we simply throw an exception here if STATE_FORMAT is 1?", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r429774714", "createdAt": "2020-05-25T07:29:18Z", "author": {"login": "janhoy"}, "path": "solr/core/src/java/org/apache/solr/cloud/api/collections/RestoreCmd.java", "diffHunk": "@@ -160,9 +159,6 @@ public void call(ClusterState state, ZkNodeProps message, NamedList results) thr\n       Map<String, Object> propMap = new HashMap<>();\n       propMap.put(Overseer.QUEUE_OPERATION, CREATE.toString());\n       propMap.put(\"fromApi\", \"true\"); // mostly true.  Prevents autoCreated=true in the collection state.\n-      if (properties.get(STATE_FORMAT) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3NTE2Mw==", "bodyText": "???", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r429775163", "createdAt": "2020-05-25T07:30:18Z", "author": {"login": "janhoy"}, "path": "solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimClusterStateProvider.java", "diffHunk": "@@ -790,6 +790,33 @@ public void simRemoveReplica(String nodeId, String collection, String coreNodeNa\n   }\n \n   /**\n+<<<<<<< HEAD\n+=======\n+   * Save clusterstate.json to {@link DistribStateManager}.\n+   * @return saved state\n+   */\n+  private ClusterState saveClusterState(ClusterState state) throws IOException {\n+    ensureNotClosed();\n+\n+    // TODO: this method is emptied of its content in order to compile. We're not saving the cluster state that has to be saved collection per collection in separate state.json files.\n+    // TODO: DO NOT CHECK THIS IN. Check with AB how to update sim to stateFormat 2\n+\n+//    byte[] data = Utils.toJSON(state);\n+//    try {\n+//      VersionedData oldData = stateManager.getData(ZkStateReader.CLUSTER_STATE);\n+//      int version = oldData != null ? oldData.getVersion() : 0;\n+//      assert clusterStateVersion == version : \"local clusterStateVersion out of sync\";\n+//      stateManager.setData(ZkStateReader.CLUSTER_STATE, data, version);\n+//      log.debug(\"** saved cluster state version {}\", version);\n+//      clusterStateVersion++;\n+//    } catch (Exception e) {\n+//      throw new IOException(e);\n+//    }\n+    return state;\n+  }\n+\n+  /**\n+>>>>>>> SOLR-12823: remove /clusterstate.json", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc4MzQxNg==", "bodyText": "We should have plenty of coverage elsewhere, so +1 to remove this test?", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r429783416", "createdAt": "2020-05-25T07:47:53Z", "author": {"login": "janhoy"}, "path": "solr/core/src/test/org/apache/solr/cloud/BasicZkTest.java", "diffHunk": "@@ -43,8 +44,12 @@\n   public static void beforeClass() {\n \n   }\n-  \n+\n   @Test\n+  @Ignore\n+  // This test doesn't work (anymore) following https://issues.apache.org/jira/browse/SOLR-12823", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc4NzM4Mg==", "bodyText": "Did you consider alernatives to creating a new method with same signature and 95% same code? If duplication is necessary perhaps give the new method a more descriptive name?", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r429787382", "createdAt": "2020-05-25T07:55:49Z", "author": {"login": "janhoy"}, "path": "solr/core/src/test/org/apache/solr/cloud/OverseerTest.java", "diffHunk": "@@ -181,16 +180,21 @@ public void close() {\n       zkStateReader.close();\n     }\n \n+    /**\n+     * Create a collection.\n+     * Note there's a similar but slightly different {@link OverseerTest#createCollection(String, int)}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc5MDk3MQ==", "bodyText": "Perhaps MiniSolrCloud should have a .withChroot option which can be asserted somewhere? What about deleting this test and create a separate followup JIRA \"Add zk chroot test\" which can be fixed as a followup?", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r429790971", "createdAt": "2020-05-25T08:03:13Z", "author": {"login": "janhoy"}, "path": "solr/core/src/test/org/apache/solr/cloud/TestZkChroot.java", "diffHunk": "@@ -27,8 +27,10 @@\n import org.apache.solr.core.CoreContainer;\n import org.junit.After;\n import org.junit.Before;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n+// TODO: this class tries to test Zookeeper using Solr abstractions, but ZK implies the code is running in cloud mode. It doesn't work.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc5NDAwNw==", "bodyText": "Remember to close SOLR-11877 after this", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r429794007", "createdAt": "2020-05-25T08:09:32Z", "author": {"login": "janhoy"}, "path": "solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider.java", "diffHunk": "@@ -138,8 +138,7 @@ private ClusterState fetchClusterState(SolrClient client, String collection, Map\n     Set<String> liveNodes = new HashSet((List<String>)(cluster.get(\"live_nodes\")));\n     this.liveNodes = liveNodes;\n     liveNodesTimestamp = System.nanoTime();\n-    //TODO SOLR-11877 we don't know the znode path; CLUSTER_STATE is probably wrong leading to bad stateFormat", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc5NTU2Mw==", "bodyText": "Would createFromMap be a more descriptive name?", "url": "https://github.com/apache/lucene-solr/pull/1528#discussion_r429795563", "createdAt": "2020-05-25T08:12:51Z", "author": {"login": "janhoy"}, "path": "solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java", "diffHunk": "@@ -210,47 +200,42 @@ public boolean liveNodesContain(String name) {\n   @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n-    sb.append(\"znodeVersion: \").append(znodeVersion);\n-    sb.append(\"\\n\");\n     sb.append(\"live nodes:\").append(liveNodes);\n     sb.append(\"\\n\");\n     sb.append(\"collections:\").append(collectionStates);\n     return sb.toString();\n   }\n \n-  public static ClusterState load(Integer version, byte[] bytes, Set<String> liveNodes) {\n-    return load(version, bytes, liveNodes, ZkStateReader.CLUSTER_STATE);\n-  }\n   /**\n-   * Create ClusterState from json string that is typically stored in zookeeper.\n+   * Create a ClusterState from Json.\n    * \n-   * @param version zk version of the clusterstate.json file (bytes)\n-   * @param bytes clusterstate.json as a byte array\n+   * @param bytes a byte array of a Json representation of a mapping from collection name to the Json representation of a\n+   *              {@link DocCollection} as written by {@link #write(JSONWriter)}. It can represent\n+   *              one or more collections.\n    * @param liveNodes list of live nodes\n    * @return the ClusterState\n    */\n-  public static ClusterState load(Integer version, byte[] bytes, Set<String> liveNodes, String znode) {\n-    // System.out.println(\"######## ClusterState.load:\" + (bytes==null ? null : new String(bytes)));\n+  public static ClusterState createFromJson(int version, byte[] bytes, Set<String> liveNodes) {\n     if (bytes == null || bytes.length == 0) {\n-      return new ClusterState(version, liveNodes, Collections.<String, DocCollection>emptyMap());\n+      return new ClusterState(liveNodes, Collections.<String, DocCollection>emptyMap());\n     }\n     Map<String, Object> stateMap = (Map<String, Object>) Utils.fromJSON(bytes);\n-    return load(version, stateMap, liveNodes, znode);\n+    return createFromData(version, stateMap, liveNodes);\n   }\n \n-  public static ClusterState load(Integer version, Map<String, Object> stateMap, Set<String> liveNodes, String znode) {\n+  public static ClusterState createFromData(int version, Map<String, Object> stateMap, Set<String> liveNodes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b"}, "originalPosition": 108}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/c5d47bbfdd8f867a8c1006ad3b90a53c4b74844b", "committedDate": "2020-05-19T23:08:22Z", "message": "fix gradle precommit unhappiness with string concat in warn logs"}, "afterCommit": {"oid": "97cb97674daf090b593cc0f7bdc7b74c9bc0f67a", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/97cb97674daf090b593cc0f7bdc7b74c9bc0f67a", "committedDate": "2020-05-25T15:35:52Z", "message": "PR comments by janhoy. Deleted tests BasicZkTest and TestZkChroot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "add479f8cfdb23a0dc23ef0f7d93f0a15efa4666", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/add479f8cfdb23a0dc23ef0f7d93f0a15efa4666", "committedDate": "2020-05-29T09:41:16Z", "message": "SOLR-12823: remove /clusterstate.json\n\nRemove all code dealing with Zookeeper's /clusterstate.json, remove Collection API's MIGRATESTATEVERSION, remove legacyCloud option.\n\nNotes:\n- org.apache.solr.cloud.autoscaling.sim is non functional, requires more work.\n- TestZkChroot requires more work\n- BasicZkTest requires more work (or better: be deleted)\n\nAlso fixes SOLR-11877 DocCollection.getStateFormat is buggy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ab0d868ee642d1c3fc3ad643bc4bfd428266ab0", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/7ab0d868ee642d1c3fc3ad643bc4bfd428266ab0", "committedDate": "2020-05-29T09:41:16Z", "message": "Remove Javadoc link to no longer existing symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "984f6d8a8c367e7eba7dbd4f65d026b88f2eb537", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/984f6d8a8c367e7eba7dbd4f65d026b88f2eb537", "committedDate": "2020-05-29T09:41:17Z", "message": "removed unused import missed in rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9641a49313f1276aa5d5b77c1099b81cb5396ce5", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/9641a49313f1276aa5d5b77c1099b81cb5396ce5", "committedDate": "2020-05-29T09:41:17Z", "message": "Update comment and test for empty /clusterstate in ZK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a68dfebd2c034ffac719ab0945b5c78dcd0d675", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/8a68dfebd2c034ffac719ab0945b5c78dcd0d675", "committedDate": "2020-05-29T09:41:17Z", "message": "PR comments by janhoy. Deleted tests BasicZkTest and TestZkChroot"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97cb97674daf090b593cc0f7bdc7b74c9bc0f67a", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/97cb97674daf090b593cc0f7bdc7b74c9bc0f67a", "committedDate": "2020-05-25T15:35:52Z", "message": "PR comments by janhoy. Deleted tests BasicZkTest and TestZkChroot"}, "afterCommit": {"oid": "8a68dfebd2c034ffac719ab0945b5c78dcd0d675", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/8a68dfebd2c034ffac719ab0945b5c78dcd0d675", "committedDate": "2020-05-29T09:41:17Z", "message": "PR comments by janhoy. Deleted tests BasicZkTest and TestZkChroot"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzOTExODU2", "url": "https://github.com/apache/lucene-solr/pull/1528#pullrequestreview-423911856", "createdAt": "2020-06-03T20:39:14Z", "commit": {"oid": "8a68dfebd2c034ffac719ab0945b5c78dcd0d675"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de3f7464cf4f608eb1ac2eddc6aeb46fd36857ad", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/de3f7464cf4f608eb1ac2eddc6aeb46fd36857ad", "committedDate": "2020-06-04T16:33:55Z", "message": "Merge branch 'master' into SOLR-12823"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1732ea8a2c15a71ac89529060683a86e5fd32769", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/1732ea8a2c15a71ac89529060683a86e5fd32769", "committedDate": "2020-06-07T16:06:46Z", "message": "Merge branch 'master' into SOLR-12823"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98c9c4ae5e01d511f3e50dd671485cd2f2e08674", "author": {"user": {"login": "madrob", "name": "Mike Drob"}}, "url": "https://github.com/apache/lucene-solr/commit/98c9c4ae5e01d511f3e50dd671485cd2f2e08674", "committedDate": "2020-06-09T18:58:29Z", "message": "Update CHANGES.txt"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2538, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}