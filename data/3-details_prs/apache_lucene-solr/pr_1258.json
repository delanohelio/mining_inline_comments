{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MzU1Nzgx", "number": 1258, "title": "LUCENE-9225: Rectangle should extend LatLonGeometry", "bodyText": "Rectangle now extends LatLonGeometry so it can be used as part of a geometry collection. We need to be careful for Contains and we need to split the rectangle in two if it crossest the dateline.\nTest is added to check we get the same results from tLatLotBoundingBoxQuery and the corresponding geometry query.", "createdAt": "2020-02-14T12:02:56Z", "url": "https://github.com/apache/lucene-solr/pull/1258", "merged": true, "mergeCommit": {"oid": "286d22717b212f125d2df00ecd1c67b28eda4fe3"}, "closed": true, "closedAt": "2020-03-03T06:36:44Z", "author": {"login": "iverase"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEMySXAH2gAyMzc1MzU1NzgxOjhkMDc1OTMyYTNiMGM4MjEyMDM0ZmRhYjBhOGQ5YWFjYWNkMmZiYjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJ8KHMgH2gAyMzc1MzU1NzgxOmRjMjY0MWNhZTBkZDQzMGExMDdiYjVmZGFjZWFlNGE0NTM2NjE4NTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8d075932a3b0c8212034fdab0a8d9aacacd2fbb1", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/apache/lucene-solr/commit/8d075932a3b0c8212034fdab0a8d9aacacd2fbb1", "committedDate": "2020-02-14T10:15:34Z", "message": "make Rectangle extends LatLonGeometry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3fd5bad0da72907d51e7b95db2276e3ab35e71c", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/apache/lucene-solr/commit/c3fd5bad0da72907d51e7b95db2276e3ab35e71c", "committedDate": "2020-02-14T11:12:00Z", "message": "Merge branch 'master' into rectlatlongeometry\n\n# Conflicts:\n#\tlucene/core/src/java/org/apache/lucene/geo/XYRectangle2D.java\n#\tlucene/core/src/test/org/apache/lucene/geo/TestXYRectangle2D.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e143444deb996273cef01c311dceb779037c6b6e", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/apache/lucene-solr/commit/e143444deb996273cef01c311dceb779037c6b6e", "committedDate": "2020-02-14T11:59:05Z", "message": "Use specialize query whenever possible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "269e92891d65a7782f368dd8be76e010213aa537", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/apache/lucene-solr/commit/269e92891d65a7782f368dd8be76e010213aa537", "committedDate": "2020-02-19T15:50:33Z", "message": "Merge branch 'master' into rectlatlongeometry\n\n# Conflicts:\n#\tlucene/core/src/test/org/apache/lucene/document/TestLatLonShape.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dc090ac79e30645cd3dac6be41dad421f01cd58", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/apache/lucene-solr/commit/7dc090ac79e30645cd3dac6be41dad421f01cd58", "committedDate": "2020-02-19T15:57:13Z", "message": "clean up building queries from LatLonGeometries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f95187b499dccf1a50473a2bf89ea61f9229496a", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/apache/lucene-solr/commit/f95187b499dccf1a50473a2bf89ea61f9229496a", "committedDate": "2020-03-02T08:15:02Z", "message": "Merge branch 'master' into rectlatlongeometry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9654c1de71fa43bce5092f2e2f5f52f7ba20f24a", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/apache/lucene-solr/commit/9654c1de71fa43bce5092f2e2f5f52f7ba20f24a", "committedDate": "2020-03-02T08:42:59Z", "message": "add entry in CHANGES.txt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5OTg1MTMw", "url": "https://github.com/apache/lucene-solr/pull/1258#pullrequestreview-359985130", "createdAt": "2020-02-17T22:14:02Z", "commit": {"oid": "e143444deb996273cef01c311dceb779037c6b6e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjoxNDowMlrOFqwrFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjoyODoyNVrOFqw3Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4MTk3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static double MIN_LON_INCL_QUANTIZE = decodeLongitude(encodeLongitude(MIN_LON_INCL));\n          \n          \n            \n              private static double MIN_LON_INCL_QUANTIZE = decodeLongitude(GeoEncodingUtils.MIN_LON_ENCODED);", "url": "https://github.com/apache/lucene-solr/pull/1258#discussion_r380381973", "createdAt": "2020-02-17T22:14:02Z", "author": {"login": "nknize"}, "path": "lucene/core/src/java/org/apache/lucene/geo/Rectangle2D.java", "diffHunk": "@@ -415,16 +217,63 @@ public boolean equals(Object o) {\n     return minX == that.minX &&\n         maxX == that.maxX &&\n         minY == that.minY &&\n-        maxY == that.maxY &&\n-        Arrays.equals(bbox, that.bbox) &&\n-        Arrays.equals(west, that.west);\n+        maxY == that.maxY;\n   }\n \n   @Override\n   public int hashCode() {\n     int result = Objects.hash(minX, maxX, minY, maxY);\n-    result = 31 * result + Arrays.hashCode(bbox);\n-    result = 31 * result + Arrays.hashCode(west);\n     return result;\n   }\n-}\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder();\n+    sb.append(\"XYRectangle(x=\");\n+    sb.append(minX);\n+    sb.append(\" TO \");\n+    sb.append(maxX);\n+    sb.append(\" y=\");\n+    sb.append(minY);\n+    sb.append(\" TO \");\n+    sb.append(maxY);\n+    sb.append(\")\");\n+    return sb.toString();\n+  }\n+\n+  /** create a component2D from the provided XY rectangle */\n+  static Component2D create(XYRectangle rectangle) {\n+    return new Rectangle2D(rectangle.minX, rectangle.maxX, rectangle.minY, rectangle.maxY);\n+  }\n+\n+  private static double MIN_LON_INCL_QUANTIZE = decodeLongitude(encodeLongitude(MIN_LON_INCL));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e143444deb996273cef01c311dceb779037c6b6e"}, "originalPosition": 511}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4MjEwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static double MAX_LON_INCL_QUANTIZE = decodeLongitude(encodeLongitude(MAX_LON_INCL));\n          \n          \n            \n              private static double MAX_LON_INCL_QUANTIZE = decodeLongitude(GeoEncodingUtils.MAX_LON_ENCODED);", "url": "https://github.com/apache/lucene-solr/pull/1258#discussion_r380382109", "createdAt": "2020-02-17T22:14:31Z", "author": {"login": "nknize"}, "path": "lucene/core/src/java/org/apache/lucene/geo/Rectangle2D.java", "diffHunk": "@@ -415,16 +217,63 @@ public boolean equals(Object o) {\n     return minX == that.minX &&\n         maxX == that.maxX &&\n         minY == that.minY &&\n-        maxY == that.maxY &&\n-        Arrays.equals(bbox, that.bbox) &&\n-        Arrays.equals(west, that.west);\n+        maxY == that.maxY;\n   }\n \n   @Override\n   public int hashCode() {\n     int result = Objects.hash(minX, maxX, minY, maxY);\n-    result = 31 * result + Arrays.hashCode(bbox);\n-    result = 31 * result + Arrays.hashCode(west);\n     return result;\n   }\n-}\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder();\n+    sb.append(\"XYRectangle(x=\");\n+    sb.append(minX);\n+    sb.append(\" TO \");\n+    sb.append(maxX);\n+    sb.append(\" y=\");\n+    sb.append(minY);\n+    sb.append(\" TO \");\n+    sb.append(maxY);\n+    sb.append(\")\");\n+    return sb.toString();\n+  }\n+\n+  /** create a component2D from the provided XY rectangle */\n+  static Component2D create(XYRectangle rectangle) {\n+    return new Rectangle2D(rectangle.minX, rectangle.maxX, rectangle.minY, rectangle.maxY);\n+  }\n+\n+  private static double MIN_LON_INCL_QUANTIZE = decodeLongitude(encodeLongitude(MIN_LON_INCL));\n+  private static double MAX_LON_INCL_QUANTIZE = decodeLongitude(encodeLongitude(MAX_LON_INCL));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e143444deb996273cef01c311dceb779037c6b6e"}, "originalPosition": 512}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NTA5MQ==", "bodyText": "Is this class needed because Rectangle2D is package private?", "url": "https://github.com/apache/lucene-solr/pull/1258#discussion_r380385091", "createdAt": "2020-02-17T22:28:25Z", "author": {"login": "nknize"}, "path": "lucene/core/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery.java", "diffHunk": "@@ -108,4 +115,385 @@ public String toString(String field) {\n     sb.append(rectangle.toString());\n     return sb.toString();\n   }\n+\n+  /** Holds spatial logic for a bounding box that works in the encoded space */\n+  private static class EncodedRectangle {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e143444deb996273cef01c311dceb779037c6b6e"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc1fd31551ab84e66e4c340d43517d4e6e047b4b", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/apache/lucene-solr/commit/dc1fd31551ab84e66e4c340d43517d4e6e047b4b", "committedDate": "2020-03-03T06:14:03Z", "message": "Merge branch 'master' into rectlatlongeometry\n\n# Conflicts:\n#\tlucene/CHANGES.txt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc2641cae0dd430a107bb5fdaceae4a453661857", "author": {"user": {"login": "iverase", "name": "Ignacio Vera"}}, "url": "https://github.com/apache/lucene-solr/commit/dc2641cae0dd430a107bb5fdaceae4a453661857", "committedDate": "2020-03-03T06:16:45Z", "message": "address comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2328, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}