{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDQ5ODMz", "number": 1692, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTowMTo0OFrOER9wpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTowMTo0OFrOER9wpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjczMTI1OnYy", "diffSide": "RIGHT", "path": "solr/solr-ref-guide/src/shards-and-indexing-data-in-solrcloud.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTowMTo0OFrOG29qMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo1ODo0MFrOG5m8dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI4NjUxMg==", "bodyText": "\"auto soft commit\"\nIDK whether it's worth including hard-commit-with-opensearcher=true\n\"across NRT replicas\"\nSame thing happens with TLOG/PULL replicas. The followers' polling time may expire at skewed times. Maybe just take the \"NRT\" out?\n\"when there is sharding.\"\nI think it would be reassuring to say that the document will become visible even in this case. Perhaps add a sentence like: \"The document will become visible on all replicas of a shard after the next auto commit or commitWithin interval expires.\".", "url": "https://github.com/apache/lucene-solr/pull/1692#discussion_r460286512", "createdAt": "2020-07-24T21:01:48Z", "author": {"login": "ErickErickson"}, "path": "solr/solr-ref-guide/src/shards-and-indexing-data-in-solrcloud.adoc", "diffHunk": "@@ -122,6 +122,8 @@ More details on how to use shard splitting is in the section on the Collection A\n \n In most cases, when running in SolrCloud mode, indexing client applications should not send explicit commit requests. Rather, you should configure auto commits with `openSearcher=false` and auto soft-commits to make recent updates visible in search requests. This ensures that auto commits occur on a regular schedule in the cluster.\n \n+NOTE: Using auto soft commit or commitWithin requires the client app to embrace the realities of \"eventual consistency\". Solr will make documents searchable at _roughly_ the same time across NRT replicas of a collection but there are no hard guarantees. Consequently, in rare cases, it's possible for a document to show up in one search only for it not to appear in a subsequent search occurring immediately after when the second search is routed to a different replica. Also, documents added in a particular order (even in the same batch) might become searchable out of the order of submission when there is sharding.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c673162ce8ab47575e0cf43a6e0faa93d2edfdf7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2MDA4Ng==", "bodyText": "I've made some edits on your second two points.   I don't know that I'm comfortable enough with all the semantics to tackle your hard-commit-with-opensearch=true variant.   Please do update the branch however!   Otherwise, I'd like to commit this early next week.", "url": "https://github.com/apache/lucene-solr/pull/1692#discussion_r463060086", "createdAt": "2020-07-30T14:58:40Z", "author": {"login": "epugh"}, "path": "solr/solr-ref-guide/src/shards-and-indexing-data-in-solrcloud.adoc", "diffHunk": "@@ -122,6 +122,8 @@ More details on how to use shard splitting is in the section on the Collection A\n \n In most cases, when running in SolrCloud mode, indexing client applications should not send explicit commit requests. Rather, you should configure auto commits with `openSearcher=false` and auto soft-commits to make recent updates visible in search requests. This ensures that auto commits occur on a regular schedule in the cluster.\n \n+NOTE: Using auto soft commit or commitWithin requires the client app to embrace the realities of \"eventual consistency\". Solr will make documents searchable at _roughly_ the same time across NRT replicas of a collection but there are no hard guarantees. Consequently, in rare cases, it's possible for a document to show up in one search only for it not to appear in a subsequent search occurring immediately after when the second search is routed to a different replica. Also, documents added in a particular order (even in the same batch) might become searchable out of the order of submission when there is sharding.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI4NjUxMg=="}, "originalCommit": {"oid": "c673162ce8ab47575e0cf43a6e0faa93d2edfdf7"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1386, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}