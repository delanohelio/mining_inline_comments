{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMjE2MDU0", "number": 1313, "title": "LUCENE-8962: Split test case", "bodyText": "The testMergeOnCommit test case was trying to verify too many things\nat once: basic semantics of merge on commit and proper behavior when\na bunch of indexing threads are writing and committing all at once.\nSplitting the test into two should make the tests more robust - one\nwill verify basic behavior, with strict assertions on invariants, while\nthe other just verifies that everything gets indexed and we don't throw\nan exception when multiple threads are indexing and merging on commit.\nAlso, the part of the test that is now testMultithreadedMergeOnCommit\ncan take several seconds to run, so moving it to the @nightly set.\n\nDescription\nFixing an intermittent test failure on testMergeOnCommit.\nSolution\nSplit the logic from testMergeOnCommit into two test cases. The basic test has consistently passed, and actually verifies the merge on commit invariants. The more complicated, more potentially-brittle multithreaded test doesn't necessarily satisfy clear invariants (as we may be merging on commit from multiple threads, which could result in multiple segments in the end), but it should never throw an exception or lose any updates.\nTests\nSplit existing test case into two test cases. Ran tests multiple times.\nChecklist\nPlease review the following and check all that apply:\n\n I have reviewed the guidelines for How to Contribute and my code conforms to the standards described there to the best of my ability.\n I have created a Jira issue and added the issue ID to my pull request title.\n I have given Solr maintainers access to contribute to my PR branch. (optional but recommended)\n I have developed this patch against the master branch.\n I have run ant precommit and the appropriate test suite.\n I have added tests for my changes.\n I have added documentation for the Ref Guide (for Solr changes only).", "createdAt": "2020-03-03T22:16:42Z", "url": "https://github.com/apache/lucene-solr/pull/1313", "merged": true, "mergeCommit": {"oid": "a030207a5e547a70db01d72fe4bd1627814ea94c"}, "closed": true, "closedAt": "2020-03-05T20:49:27Z", "author": {"login": "msfroh"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKJ0dNAH2gAyMzgzMjE2MDU0OjA5NzNjNmZhYmY3ZmZiMzQzM2I2M2U5ZGU5NTFmNTEyZGM0ZGEyMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKwI3TgH2gAyMzgzMjE2MDU0OjIwNGRjMDIzZTY5YzIyNTI1MTE3MDYyM2EwYzY1NTUyNjQ4NWE5OGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0973c6fabf7ffb3433b63e9de951f512dc4da205", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/0973c6fabf7ffb3433b63e9de951f512dc4da205", "committedDate": "2020-03-03T22:11:46Z", "message": "LUCENE-8962: Split test case\n\nThe testMergeOnCommit test case was trying to verify too many things\nat once: basic semantics of merge on commit and proper behavior when\na bunch of indexing threads are writing and committing all at once.\n\nSplitting the test into two should make the tests more robust - one\nwill verify basic behavior, with strict assertions on invariants, while\nthe other just verifies that everything gets indexed and we don't throw\nan exception when multiple threads are indexing and merging on commit.\n\nAlso, the part of the test that is now testMultithreadedMergeOnCommit\ncan take several seconds to run, so moving it to the @Nightly set."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4Nzk3ODI5", "url": "https://github.com/apache/lucene-solr/pull/1313#pullrequestreview-368797829", "createdAt": "2020-03-04T13:58:40Z", "commit": {"oid": "0973c6fabf7ffb3433b63e9de951f512dc4da205"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo1ODo0MFrOFxuQKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo1ODo0MFrOFxuQKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4MjM0NQ==", "bodyText": "I ran this test a few times, and noticed it takes 2-3 minutes to complete. Was it this slow before? I don't remember it taking so long in the previous version. Perhaps it's because it's Nightly now so the constants are made larger?", "url": "https://github.com/apache/lucene-solr/pull/1313#discussion_r387682345", "createdAt": "2020-03-04T13:58:40Z", "author": {"login": "msokolov"}, "path": "lucene/core/src/test/org/apache/lucene/index/TestIndexWriterMergePolicy.java", "diffHunk": "@@ -298,63 +320,44 @@ public void testMergeOnCommit() throws IOException, InterruptedException {\n     DirectoryReader firstReader = DirectoryReader.open(firstWriter);\n     assertEquals(5, firstReader.leaves().size());\n     firstReader.close();\n-    firstWriter.close();\n-\n-    MergePolicy mergeOnCommitPolicy = new LogDocMergePolicy() {\n-      @Override\n-      public MergeSpecification findFullFlushMerges(MergeTrigger mergeTrigger, SegmentInfos segmentInfos, MergeContext mergeContext) {\n-        // Optimize down to a single segment on commit\n-        if (mergeTrigger == MergeTrigger.COMMIT && segmentInfos.size() > 1) {\n-          List<SegmentCommitInfo> nonMergingSegments = new ArrayList<>();\n-          for (SegmentCommitInfo sci : segmentInfos) {\n-            if (mergeContext.getMergingSegments().contains(sci) == false) {\n-              nonMergingSegments.add(sci);\n-            }\n-          }\n-          if (nonMergingSegments.size() > 1) {\n-            MergeSpecification mergeSpecification = new MergeSpecification();\n-            mergeSpecification.add(new OneMerge(nonMergingSegments));\n-            return mergeSpecification;\n-          }\n-        }\n-        return null;\n-      }\n-    };\n+    firstWriter.close(); // When this writer closes, it does not merge on commit.\n \n-    AtomicInteger abandonedMerges = new AtomicInteger(0);\n     IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()))\n-        .setMergePolicy(mergeOnCommitPolicy)\n-        .setIndexWriterEvents(new IndexWriterEvents() {\n-          @Override\n-          public void beginMergeOnCommit() {\n-\n-          }\n-\n-          @Override\n-          public void finishMergeOnCommit() {\n+        .setMergePolicy(MERGE_ON_COMMIT_POLICY);\n \n-          }\n-\n-          @Override\n-          public void abandonedMergesOnCommit(int abandonedCount) {\n-            abandonedMerges.incrementAndGet();\n-          }\n-        });\n     IndexWriter writerWithMergePolicy = new IndexWriter(dir, iwc);\n-\n-    writerWithMergePolicy.commit();\n+    writerWithMergePolicy.commit(); // No changes. Commit doesn't trigger a merge.\n \n     DirectoryReader unmergedReader = DirectoryReader.open(writerWithMergePolicy);\n-    assertEquals(5, unmergedReader.leaves().size()); // Don't merge unless there's a change\n+    assertEquals(5, unmergedReader.leaves().size());\n     unmergedReader.close();\n \n     TestIndexWriter.addDoc(writerWithMergePolicy);\n-    writerWithMergePolicy.commit();\n+    writerWithMergePolicy.commit(); // Doc added, do merge on commit.\n+    assertEquals(1, writerWithMergePolicy.getSegmentCount()); //\n \n     DirectoryReader mergedReader = DirectoryReader.open(writerWithMergePolicy);\n-    assertEquals(1, mergedReader.leaves().size()); // Now we merge on commit\n+    assertEquals(1, mergedReader.leaves().size());\n     mergedReader.close();\n \n+    try (IndexReader reader = writerWithMergePolicy.getReader()) {\n+      IndexSearcher searcher = new IndexSearcher(reader);\n+      assertEquals(6, reader.numDocs());\n+      assertEquals(6, searcher.count(new MatchAllDocsQuery()));\n+    }\n+\n+    writerWithMergePolicy.close();\n+    dir.close();\n+  }\n+\n+   // Test that when we have multiple indexing threads merging on commit, we never throw an exception.\n+  @Nightly", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0973c6fabf7ffb3433b63e9de951f512dc4da205"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37c018bc3e9f8492cbe28a187b9edf3bf33fe3d8", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/37c018bc3e9f8492cbe28a187b9edf3bf33fe3d8", "committedDate": "2020-03-04T19:50:11Z", "message": "LUCENE-8962: Only update toCommit if merge was committed\n\nThe code was previously assuming that if mergeFinished() was called and\nisAborted() was false, then the merge must have completed successfully.\nInstead, we should know for sure if a given merge was committed, and\nonly then update our pending commit SegmentInfos."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "204dc023e69c225251170623a0c655526485a98f", "author": {"user": null}, "url": "https://github.com/apache/lucene-solr/commit/204dc023e69c225251170623a0c655526485a98f", "committedDate": "2020-03-05T18:50:27Z", "message": "LUCENE-8962: Remove slow, low-value test case\n\nWe weren't asserting anything in testMultithreadedMergeOnCommit, but\nrather were just checking that a bunch of indexing threads occasionally\nmerging on commit wouldn't trigger an exception.\n\nGiven that MockRandomMergePolicy already triggers random merges on\ncommit and there are other unit tests that spawn many indexing threads\nthat sometimes commit, this test was redundant."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2171, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}