{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MzU5Mzg1", "number": 1434, "title": "LUCENE-9324: Add an ID to SegmentCommitInfo", "bodyText": "We already have IDs in SegmentInfo, as well as on SegmentInfos which are useful to uniquely identify segments and entire commits. Having IDs on SegmentCommitInfo is be useful too in\norder to compare commits for equality and make snapshots incremental on generational files.\nThis change adds a unique ID to SegmentCommitInfo starting from Lucene 8.6. Older segments won't have an ID until the segment receives an update or a delete even if they have been opened and / or committed by Lucene 8.6 or above.", "createdAt": "2020-04-16T13:11:34Z", "url": "https://github.com/apache/lucene-solr/pull/1434", "merged": true, "mergeCommit": {"oid": "113043b1ed2ac95de17f6bdd203f6050ff6ca1f7"}, "closed": true, "closedAt": "2020-04-18T12:24:58Z", "author": {"login": "s1monw"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYJ1kHgH2gAyNDA0MzU5Mzg1OjZjZmUzMDhjZDdmMmY2MmE1MWFiMTNjODE5M2ZhZThjZDE5OWE4ZTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcY0_KTgH2gAyNDA0MzU5Mzg1OjlhNDFiMmIzMzI3NGZiYzI1NTFiMzNiZTE2ZDBmZTA3ZDFlNjhlOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6cfe308cd7f2f62a51ab13c8193fae8cd199a8e0", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/6cfe308cd7f2f62a51ab13c8193fae8cd199a8e0", "committedDate": "2020-04-16T10:07:55Z", "message": "LUCENE-9324: Add an ID to SegmentCommitInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2421ecc2060c12b045dc51c510b5029b54f5a3b", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/e2421ecc2060c12b045dc51c510b5029b54f5a3b", "committedDate": "2020-04-16T10:10:02Z", "message": "Add missing files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9da9d88f48348bb3c204183e09c94501d0184776", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/9da9d88f48348bb3c204183e09c94501d0184776", "committedDate": "2020-04-16T13:10:16Z", "message": "add more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NjI4NzUx", "url": "https://github.com/apache/lucene-solr/pull/1434#pullrequestreview-394628751", "createdAt": "2020-04-16T13:25:12Z", "commit": {"oid": "9da9d88f48348bb3c204183e09c94501d0184776"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzoyNToxMlrOGGlItA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzoyOTo1MVrOGGlVYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU1MzA3Ng==", "bodyText": "This happens during IndexWriter.addIndexes(Directory[]) right?  I wonder whether we should give a new id instead of reusing the old one?  E.g. the segment (likely) now has a new name, and is in a different Directory, and is copied/forked from a prior segment, so maybe it should get a new id?", "url": "https://github.com/apache/lucene-solr/pull/1434#discussion_r409553076", "createdAt": "2020-04-16T13:25:12Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -3081,7 +3081,7 @@ private SegmentCommitInfo copySegmentAsIs(SegmentCommitInfo info, String segName\n                                           info.info.getUseCompoundFile(), info.info.getCodec(), \n                                           info.info.getDiagnostics(), info.info.getId(), info.info.getAttributes(), info.info.getIndexSort());\n     SegmentCommitInfo newInfoPerCommit = new SegmentCommitInfo(newInfo, info.getDelCount(), info.getSoftDelCount(), info.getDelGen(),\n-                                                               info.getFieldInfosGen(), info.getDocValuesGen());\n+                                                               info.getFieldInfosGen(), info.getDocValuesGen(), info.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da9d88f48348bb3c204183e09c94501d0184776"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU1NDMwMQ==", "bodyText": "Do we need some thread safety here?", "url": "https://github.com/apache/lucene-solr/pull/1434#discussion_r409554301", "createdAt": "2020-04-16T13:26:58Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo.java", "diffHunk": "@@ -388,4 +399,17 @@ public SegmentCommitInfo clone() {\n   final int getDelCount(boolean includeSoftDeletes) {\n     return includeSoftDeletes ? getDelCount() + getSoftDelCount() : getDelCount();\n   }\n+\n+  private void generationAdvanced() {\n+    sizeInBytes = -1;\n+    id = null;\n+  }\n+\n+  public byte[] getId() {\n+    if (id == null) {\n+      // we advanced a generation - need to generate a new ID\n+      id = StringHelper.randomId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da9d88f48348bb3c204183e09c94501d0184776"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU1NjMyMQ==", "bodyText": "Good question ... maybe we could use info.getId()?   Then it'd be unique across SCI, but, shared across SI which is also weird.", "url": "https://github.com/apache/lucene-solr/pull/1434#discussion_r409556321", "createdAt": "2020-04-16T13:29:51Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java", "diffHunk": "@@ -374,7 +376,15 @@ public static final SegmentInfos readCommit(Directory directory, ChecksumIndexIn\n       if (softDelCount + delCount > info.maxDoc()) {\n         throw new CorruptIndexException(\"invalid deletion count: \" + softDelCount + delCount + \" vs maxDoc=\" + info.maxDoc(), input);\n       }\n-      SegmentCommitInfo siPerCommit = new SegmentCommitInfo(info, delCount, softDelCount, delGen, fieldInfosGen, dvGen);\n+      final byte[] sciId;\n+      if (format > VERSION_74) {\n+        sciId = new byte[StringHelper.ID_LENGTH];\n+        input.readBytes(sciId, 0, sciId.length);\n+      } else {\n+        sciId = infos.id;\n+        // NOCOMMIT can we do this? it would at least give us consistent BWC but we can't identify the same SCI in different commits", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da9d88f48348bb3c204183e09c94501d0184776"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0OTMzNTMy", "url": "https://github.com/apache/lucene-solr/pull/1434#pullrequestreview-394933532", "createdAt": "2020-04-16T19:24:51Z", "commit": {"oid": "9da9d88f48348bb3c204183e09c94501d0184776"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToyNDo1MVrOGGz7qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo0MToxOFrOGG0d8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5NTQ5OA==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *  @param info\n          \n          \n            \n               * @param info", "url": "https://github.com/apache/lucene-solr/pull/1434#discussion_r409795498", "createdAt": "2020-04-16T19:24:51Z", "author": {"login": "jpountz"}, "path": "lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo.java", "diffHunk": "@@ -79,8 +85,7 @@\n \n   /**\n    * Sole constructor.\n-   * \n-   * @param info\n+   *  @param info", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da9d88f48348bb3c204183e09c94501d0184776"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNDI3Mg==", "bodyText": "When we introduced SegmentInfos#getId, we returned null as an ID for older segments. This is probably a safer option here as well, as callers can fall back to whatever behavior makes sense for them such as using a strong hash of the commit files as an ID, or re-downloading all files of the commit all the time and giving up incrementality?", "url": "https://github.com/apache/lucene-solr/pull/1434#discussion_r409804272", "createdAt": "2020-04-16T19:41:18Z", "author": {"login": "jpountz"}, "path": "lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java", "diffHunk": "@@ -374,7 +376,15 @@ public static final SegmentInfos readCommit(Directory directory, ChecksumIndexIn\n       if (softDelCount + delCount > info.maxDoc()) {\n         throw new CorruptIndexException(\"invalid deletion count: \" + softDelCount + delCount + \" vs maxDoc=\" + info.maxDoc(), input);\n       }\n-      SegmentCommitInfo siPerCommit = new SegmentCommitInfo(info, delCount, softDelCount, delGen, fieldInfosGen, dvGen);\n+      final byte[] sciId;\n+      if (format > VERSION_74) {\n+        sciId = new byte[StringHelper.ID_LENGTH];\n+        input.readBytes(sciId, 0, sciId.length);\n+      } else {\n+        sciId = infos.id;\n+        // NOCOMMIT can we do this? it would at least give us consistent BWC but we can't identify the same SCI in different commits", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU1NjMyMQ=="}, "originalCommit": {"oid": "9da9d88f48348bb3c204183e09c94501d0184776"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0a72f82bb17bd2582799aa25514ef764e012570", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/f0a72f82bb17bd2582799aa25514ef764e012570", "committedDate": "2020-04-16T20:48:03Z", "message": "move to null as an indicator that the segment has no ID"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3260f855602ec70765c2936be429c9444ae85291", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/3260f855602ec70765c2936be429c9444ae85291", "committedDate": "2020-04-17T10:41:47Z", "message": "Merge branch 'master' into LUCENE-9324"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac9f0ea45659a25234df6ca4fc6a4bda506c1b57", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/ac9f0ea45659a25234df6ca4fc6a4bda506c1b57", "committedDate": "2020-04-17T10:47:54Z", "message": "fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbe3648bbf4086b804705b71c7750f46e9414dc2", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/bbe3648bbf4086b804705b71c7750f46e9414dc2", "committedDate": "2020-04-17T11:02:23Z", "message": "add move tests on the bwc end"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3224de64404f139c8f0a84345bec7a00803676ce", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/3224de64404f139c8f0a84345bec7a00803676ce", "committedDate": "2020-04-17T12:08:01Z", "message": "preserve null ID until the SCI actually changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f160c8b211e8cfad156d3fe122083fa7985bf62", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/9f160c8b211e8cfad156d3fe122083fa7985bf62", "committedDate": "2020-04-17T12:24:29Z", "message": "fix luke"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDA0MTY1", "url": "https://github.com/apache/lucene-solr/pull/1434#pullrequestreview-395404165", "createdAt": "2020-04-17T12:20:00Z", "commit": {"oid": "3224de64404f139c8f0a84345bec7a00803676ce"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjoyMDowMFrOGHLtGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjoyOTowM1rOGHL-Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NDk4Nw==", "bodyText": "nit: turn it in such a way that it would return a non-null SCI to make it easier to debug in case it fails? E.g.\nassertNull(\"none of the segments should have been upgraded\", si.asList().stream().filter(sci -> sci.getId() != null).findAny().orElse(null));", "url": "https://github.com/apache/lucene-solr/pull/1434#discussion_r410184987", "createdAt": "2020-04-17T12:20:00Z", "author": {"login": "jpountz"}, "path": "lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java", "diffHunk": "@@ -830,8 +829,9 @@ public void testAddOldIndexes() throws IOException {\n       IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(new MockAnalyzer(random())));\n       w.addIndexes(oldDir);\n       w.close();\n-      targetDir.close();\n \n+      SegmentInfos si = SegmentInfos.readLatestCommit(targetDir);\n+      assertEquals(\"none of the segments should have been upgraded\", 0, si.asList().stream().filter(sci -> sci.getId() != null).count());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3224de64404f139c8f0a84345bec7a00803676ce"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NTAzNA==", "bodyText": "here too?", "url": "https://github.com/apache/lucene-solr/pull/1434#discussion_r410185034", "createdAt": "2020-04-17T12:20:07Z", "author": {"login": "jpountz"}, "path": "lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java", "diffHunk": "@@ -862,7 +862,8 @@ public void testAddOldIndexesReader() throws IOException {\n       TestUtil.addIndexesSlowly(w, reader);\n       w.close();\n       reader.close();\n-            \n+      SegmentInfos si = SegmentInfos.readLatestCommit(targetDir);\n+      assertEquals(\"all SCIs should have an id now\", 0, si.asList().stream().filter(sci -> sci.getId() == null).count());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3224de64404f139c8f0a84345bec7a00803676ce"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4Njg1Ng==", "bodyText": "we need to make this assert depend on the version to be future-proof? Ie.\nif (info.info.getVersion().onOrAfter(Version.LUCENE_8_6_0)) {\n  assertNotNull(info.toString(), info.getId());\n} else {\n  assertNull(info.toString(), info.getId());\n}\n\n?", "url": "https://github.com/apache/lucene-solr/pull/1434#discussion_r410186856", "createdAt": "2020-04-17T12:23:53Z", "author": {"login": "jpountz"}, "path": "lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java", "diffHunk": "@@ -1367,6 +1368,16 @@ public void testIndexCreatedVersion() throws IOException {\n     }\n   }\n \n+  public void testSegmentCommitInfoId() throws IOException {\n+    for (String name : oldNames) {\n+      Directory dir = oldIndexDirs.get(name);\n+      SegmentInfos infos = SegmentInfos.readLatestCommit(dir);\n+      for (SegmentCommitInfo info : infos) {\n+        assertNull(info.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3224de64404f139c8f0a84345bec7a00803676ce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4OTMyNw==", "bodyText": "can you be stricter and throw a CorruptIndexException if the byte is neither 0 nor 1?", "url": "https://github.com/apache/lucene-solr/pull/1434#discussion_r410189327", "createdAt": "2020-04-17T12:29:03Z", "author": {"login": "jpountz"}, "path": "lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java", "diffHunk": "@@ -374,7 +376,18 @@ public static final SegmentInfos readCommit(Directory directory, ChecksumIndexIn\n       if (softDelCount + delCount > info.maxDoc()) {\n         throw new CorruptIndexException(\"invalid deletion count: \" + softDelCount + delCount + \" vs maxDoc=\" + info.maxDoc(), input);\n       }\n-      SegmentCommitInfo siPerCommit = new SegmentCommitInfo(info, delCount, softDelCount, delGen, fieldInfosGen, dvGen);\n+      final byte[] sciId;\n+      if (format > VERSION_74 ) {\n+        if (input.readByte() == 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3224de64404f139c8f0a84345bec7a00803676ce"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a392c740269e0a85fd553a57b819bb0f6513a583", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/a392c740269e0a85fd553a57b819bb0f6513a583", "committedDate": "2020-04-17T17:40:14Z", "message": "apply feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5af4896cfdc491ea645c24f0392f6739303e654f", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/5af4896cfdc491ea645c24f0392f6739303e654f", "committedDate": "2020-04-17T17:55:50Z", "message": "fix assertion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NjY4MjY1", "url": "https://github.com/apache/lucene-solr/pull/1434#pullrequestreview-395668265", "createdAt": "2020-04-17T18:08:06Z", "commit": {"oid": "5af4896cfdc491ea645c24f0392f6739303e654f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODowODowNlrOGHYFUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODowODowNlrOGHYFUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM4Nzc5Mw==", "bodyText": "We can remove this now?", "url": "https://github.com/apache/lucene-solr/pull/1434#discussion_r410387793", "createdAt": "2020-04-17T18:08:06Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo.java", "diffHunk": "@@ -77,9 +83,11 @@\n   // this is never written to/read from the Directory\n   private long bufferedDeletesGen = -1;\n \n+  // is set once any of the generations has been advanced.\n+  private boolean hasAdvanced;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af4896cfdc491ea645c24f0392f6739303e654f"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f211f9717881e876a404b9bb7236e6f469b2245d", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/f211f9717881e876a404b9bb7236e6f469b2245d", "committedDate": "2020-04-17T18:13:19Z", "message": "remove leftover"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "788df6796cf0b6c6aec9ae7e16ce71f613b525a7", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/788df6796cf0b6c6aec9ae7e16ce71f613b525a7", "committedDate": "2020-04-17T21:15:23Z", "message": "add missing 8.6 version constant"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzkzODU0", "url": "https://github.com/apache/lucene-solr/pull/1434#pullrequestreview-395793854", "createdAt": "2020-04-17T21:51:47Z", "commit": {"oid": "788df6796cf0b6c6aec9ae7e16ce71f613b525a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42a2b418f30d7df5587ea8cb13587f4f94c7a76d", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/42a2b418f30d7df5587ea8cb13587f4f94c7a76d", "committedDate": "2020-04-18T09:34:47Z", "message": "Merge branch 'master' into LUCENE-9324"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTAwNzMx", "url": "https://github.com/apache/lucene-solr/pull/1434#pullrequestreview-395900731", "createdAt": "2020-04-18T10:07:57Z", "commit": {"oid": "788df6796cf0b6c6aec9ae7e16ce71f613b525a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "383703c2bbf6c50fcd31627b13d8d8472fc68561", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/383703c2bbf6c50fcd31627b13d8d8472fc68561", "committedDate": "2020-04-18T11:14:52Z", "message": "remove this"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b352f912c5236c87b615c1374bbae50bc78de07a", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/b352f912c5236c87b615c1374bbae50bc78de07a", "committedDate": "2020-04-18T11:32:33Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a41b2b33274fbc2551b33be16d0fe07d1e68e96", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/9a41b2b33274fbc2551b33be16d0fe07d1e68e96", "committedDate": "2020-04-18T12:24:19Z", "message": "add changes entry"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2105, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}