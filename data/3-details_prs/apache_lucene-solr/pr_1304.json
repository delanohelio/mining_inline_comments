{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMDg1OTY3", "number": 1304, "title": "LUCENE-9242: generate javadocs by calling Ant javadoc task", "bodyText": "Description\nDraft PR that adds a gradle task to generate javadocs by invoking Ant javadoc task.\nAll generated javadocs passed \"checkMissingDocs\" check.\nRelated Jira: https://issues.apache.org/jira/browse/LUCENE-9242", "createdAt": "2020-03-01T19:47:13Z", "url": "https://github.com/apache/lucene-solr/pull/1304", "merged": true, "mergeCommit": {"oid": "d4a137d2b694156ac175d6c8f1fcb4fcf30bc756"}, "closed": true, "closedAt": "2020-03-11T15:09:27Z", "author": {"login": "mocobeta"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJedMBAH2gAyMzgyMDg1OTY3OmMzMzFiZmY1MTFhZmJiZDhmMTdhYzQ0NDIxODFlYWY0YTExZGU4NGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMojWJgH2gAyMzgyMDg1OTY3OmJkMjBlNDkzY2U4OWI5ZDBlYWIxZDQ2YjVkMTliMDRkZTc3MzE1OWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b", "author": {"user": {"login": "mocobeta", "name": "Tomoko Uchida"}}, "url": "https://github.com/apache/lucene-solr/commit/c331bff511afbbd8f17ac4442181eaf4a11de84b", "committedDate": "2020-03-01T19:40:26Z", "message": "LUCENE-9242: generate javadocs by calling Ant javadoc task"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzkzMjEw", "url": "https://github.com/apache/lucene-solr/pull/1304#pullrequestreview-367793210", "createdAt": "2020-03-03T08:50:58Z", "commit": {"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODo1MDo1OFrOFw80Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTowNzowOFrOFw9WFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3MjM2Nw==", "bodyText": "ext should be moved under plugins.withType so that these properties are only defined for projects which actually use them.", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386872367", "createdAt": "2020-03-03T08:50:58Z", "author": {"login": "dweiss"}, "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3MzE5MA==", "bodyText": "I really don't like the idea of common build output folders. Keeping build isolated to each project makes the reasoning of what ends up where so much easier.", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386873190", "createdAt": "2020-03-03T08:52:33Z", "author": {"login": "dweiss"}, "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NDA5Ng==", "bodyText": "move srcDirs into doFirst; the difference is when this code is evaluated (in case something changes sourceSets during evaluation doFirst closure would have a different view).", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386874096", "createdAt": "2020-03-03T08:54:20Z", "author": {"login": "dweiss"}, "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NDUwNA==", "bodyText": "change to renderJavadoc?", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386874504", "createdAt": "2020-03-03T08:55:07Z", "author": {"login": "dweiss"}, "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }\n+\n+    task invokeJavadoc {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NTQ3NA==", "bodyText": "Adding inputs as modifiable properties is not the right way to do it I think. A task has 'ext' properties just like projects do. You can define something like this inside the task definition:\next {\nlinksource = 'no'\nlinkJUnit = false\n...\n}\nand then modify these properties where appropriate by just using their names (linksource = 'true' etc.). Inputs is basically hints for the cache (and you could still add these ext properties as inputs but you'd need to do it in doFirst to wait until all the evaluation has completed).", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386875474", "createdAt": "2020-03-03T08:56:49Z", "author": {"login": "dweiss"}, "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }\n+\n+    task invokeJavadoc {\n+      description \"Generates Javadoc API documentation for the main source code. This invokes Ant Javadoc Task.\"\n+      group \"documentation\"\n+\n+      dependsOn sourceSets.main.compileClasspath\n+\n+      inputs.property(\"linksource\", \"no\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NTkzNQ==", "bodyText": "I think this may suffer from the same evaluation-ordering problem as above. This could be a provider (I believe):\ninputs.files { sourceSets.main.java.asFileTree } then the value is evaluated lazily.", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386875935", "createdAt": "2020-03-03T08:57:43Z", "author": {"login": "dweiss"}, "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }\n+\n+    task invokeJavadoc {\n+      description \"Generates Javadoc API documentation for the main source code. This invokes Ant Javadoc Task.\"\n+      group \"documentation\"\n+\n+      dependsOn sourceSets.main.compileClasspath\n+\n+      inputs.property(\"linksource\", \"no\")\n+      inputs.property(\"linkJUnit\", false)\n+      inputs.property(\"linkHref\", [])\n+\n+      inputs.files sourceSets.main.java.asFileTree", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3ODAxMQ==", "bodyText": "This could also be task-per sourceset as in ecj-lint snippet... It also makes me wonder why would each source set render a different javadoc output and when is this practical... Do we even have projects that have multiple primary sourceSets?", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386878011", "createdAt": "2020-03-03T09:01:31Z", "author": {"login": "dweiss"}, "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }\n+\n+    task invokeJavadoc {\n+      description \"Generates Javadoc API documentation for the main source code. This invokes Ant Javadoc Task.\"\n+      group \"documentation\"\n+\n+      dependsOn sourceSets.main.compileClasspath\n+\n+      inputs.property(\"linksource\", \"no\")\n+      inputs.property(\"linkJUnit\", false)\n+      inputs.property(\"linkHref\", [])\n+\n+      inputs.files sourceSets.main.java.asFileTree\n+      outputs.dir project.javadocRoot\n+\n+      doFirst {\n+        srcDirs.each { srcDir ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTA0NA==", "bodyText": "These relative paths should ideally go through project names and transform into relative paths. So that in case we change project paths it'd fail early and not silently point at a wrong folder?\n[\":lucene:memory\", \":lucene:highlighter\", ...].collect { prjPath -> \"../\" + project(prjPath).name }", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386881044", "createdAt": "2020-03-03T09:07:08Z", "author": {"login": "dweiss"}, "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }\n+\n+    task invokeJavadoc {\n+      description \"Generates Javadoc API documentation for the main source code. This invokes Ant Javadoc Task.\"\n+      group \"documentation\"\n+\n+      dependsOn sourceSets.main.compileClasspath\n+\n+      inputs.property(\"linksource\", \"no\")\n+      inputs.property(\"linkJUnit\", false)\n+      inputs.property(\"linkHref\", [])\n+\n+      inputs.files sourceSets.main.java.asFileTree\n+      outputs.dir project.javadocRoot\n+\n+      doFirst {\n+        srcDirs.each { srcDir ->\n+          ant.javadoc(\n+              overview: file(\"${srcDir}/overview.html\"),\n+              packagenames: \"org.apache.lucene.*,org.apache.solr.*\",\n+              destDir: project.javadocDestDir,\n+              access: \"protected\",\n+              encoding: \"UTF-8\",\n+              charset: \"UTF-8\",\n+              docencoding: \"UTF-8\",\n+              noindex: \"true\",\n+              includenosourcepackages: \"true\",\n+              author: \"true\",\n+              version: \"true\",\n+              linksource: inputs.properties.linksource,\n+              use: \"true\",\n+              failonerror: \"true\",\n+              locale: \"en_US\",\n+              windowtitle: title,\n+              doctitle: title,\n+              maxmemory: \"512m\",\n+              classpath: sourceSets.main.compileClasspath.asPath,\n+              bottom: \"<i>Copyright &copy; 2000-${buildYear} Apache Software Foundation. All Rights Reserved.</i>\"\n+          ) {\n+            packageset(dir: srcDir)\n+\n+            tag(name: \"lucene.experimental\", description: \"WARNING: This API is experimental and might change in incompatible ways in the next release.\")\n+            tag(name: \"lucene.internal\", description: \"NOTE: This API is for internal purposes only and might change in incompatible ways in the next release.\")\n+            tag(name: \"lucene.spi\", description: \"SPI Name (Note: This is case-insensitive. e.g., if the name is 'htmlStrip', 'htmlstrip' can be used when looking up the service):\", scope: \"types\")\n+\n+            // resolve links to JavaSE and JUnit API\n+            link(offline: \"true\", href: \"https://docs.oracle.com/en/java/javase/11/docs/api/\", packageListLoc: project(\":lucene\").file(\"tools/javadoc/java11/\").toString())\n+            if (inputs.properties.get(\"linkJUnit\")) {\n+              link(offline: \"true\", href: \"https://junit.org/junit4/javadoc/4.12/\", packageListLoc: project(\":lucene\").file(\"tools/javadoc/junit\").toString())\n+            }\n+            // resolve inter-module links if 'linkHref' property is specified\n+            inputs.properties.get(\"linkHref\").each { href ->\n+              link(href: href)\n+            }\n+\n+            arg(line: \"--release 11\")\n+            arg(line: \"-Xdoclint:all,-missing\")\n+\n+            // force locale to be \"en_US\" (fix for: https://bugs.openjdk.java.net/browse/JDK-8222793)\n+            arg(line: \"-J-Duser.language=en -J-Duser.country=US\")\n+          }\n+        }\n+\n+        // append some special table css, prettify css\n+        ant.concat(destfile: \"${javadocDestDir}/stylesheet.css\", append: \"true\", fixlastline: \"true\", encoding: \"UTF-8\") {\n+          filelist(dir: project(\":lucene\").file(\"tools/javadoc\"), files: \"table_padding.css\")\n+          filelist(dir: project(\":lucene\").file(\"tools/prettify\"), files: \"prettify.css\")\n+        }\n+        // append prettify to scripts\n+        ant.concat(destfile: \"${javadocDestDir}/script.js\", append: \"true\", fixlastline: \"true\", encoding: \"UTF-8\") {\n+          filelist(dir: project(':lucene').file(\"tools/prettify\"), files: \"prettify.js inject-javadocs.js\")\n+        }\n+        ant.fixcrlf(srcdir: javadocDestDir, includes: \"stylesheet.css script.js\", eol: \"lf\", fixlast: \"true\", encoding: \"UTF-8\")\n+      }\n+    }\n+  }\n+}\n+\n+configure(subprojects.findAll { it.path.startsWith(':lucene') && it.path != ':lucene:core' }) {\n+\n+  plugins.withType(JavaPlugin) {\n+    invokeJavadoc {\n+      dependsOn ':lucene:core:invokeJavadoc'\n+\n+      inputs.property('linkHref', inputs.properties.linkHref + [ '../core' ])\n+\n+      doLast {\n+        // fix for Java 11 Javadoc tool that cannot handle split packages between modules correctly (by removing all the packages which are part of lucene-core)\n+        // problem description: [https://issues.apache.org/jira/browse/LUCENE-8738?focusedCommentId=16818106&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16818106]\n+        ant.local(name: \"element-list-regex\") // contains a regex for all package names which are in lucene-core's javadoc\n+        ant.loadfile(property: \"element-list-regex\", srcFile: \"${project.javadocRoot}/core/element-list\", encoding: \"utf-8\") {\n+          filterchain {\n+            tokenfilter(delimoutput: \"|\") {\n+              replacestring(from: \".\", to: \"\\\\.\")\n+            }\n+          }\n+        }\n+        ant.replaceregexp(\n+            encoding: \"UTF-8\",\n+            file: \"${project.javadocDestDir}/element-list\",\n+            byline: \"true\",\n+            match: \"^(\\${element-list-regex})\\$\",\n+            replace: \"\")\n+\n+        //println(\"dest dir = ${project.javadocDestDir}\")\n+        //println(\"linksource = ${inputs.properties.linksource}\")\n+        //println(\"link href = ${inputs.properties.linkHref}\")\n+      }\n+    }\n+  }\n+}\n+\n+configure(subprojects.findAll { it.path.startsWith(':lucene:analysis') }) {\n+  ext {\n+    javadocDestDir = \"${javadocRoot}/analyzers-${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    invokeJavadoc {\n+      if (project.path != ':lucene:analysis:common') {\n+        dependsOn ':lucene:analysis:common:invokeJavadoc'\n+        inputs.property('linkHref', inputs.properties.linkHref + [ '../analyzers-common' ])\n+      }\n+    }\n+  }\n+}\n+\n+configure(project(':lucene:benchmark')) {\n+  plugins.withType(JavaPlugin) {\n+    invokeJavadoc {\n+      [':lucene:memory',\n+       ':lucene:highlighter',\n+       ':lucene:analysis:common',\n+       ':lucene:queryparser',\n+       ':lucene:facet',\n+       ':lucene:spatial-extras'].collect { path ->\n+        dependsOn \"${path}:invokeJavadoc\"\n+      }\n+      inputs.property('linkHref', inputs.properties.linkHref + [ '../memory', '../highlighter', '../analyzers-common', '../queryparser', '../facet', '../spatial-extras' ])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b"}, "originalPosition": 168}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b4769b471fe7567e64c8969d216f5109c47b72f", "author": {"user": {"login": "mocobeta", "name": "Tomoko Uchida"}}, "url": "https://github.com/apache/lucene-solr/commit/9b4769b471fe7567e64c8969d216f5109c47b72f", "committedDate": "2020-03-07T22:13:27Z", "message": "refactor scripts, rename the task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84dab6fa6f04faa5d6d065f43e6cabb1a2d61e92", "author": {"user": {"login": "mocobeta", "name": "Tomoko Uchida"}}, "url": "https://github.com/apache/lucene-solr/commit/84dab6fa6f04faa5d6d065f43e6cabb1a2d61e92", "committedDate": "2020-03-08T06:50:53Z", "message": "fix wrong operators"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMTg4NjU5", "url": "https://github.com/apache/lucene-solr/pull/1304#pullrequestreview-371188659", "createdAt": "2020-03-09T13:37:58Z", "commit": {"oid": "84dab6fa6f04faa5d6d065f43e6cabb1a2d61e92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzozNzo1OVrOFzn0eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzozNzo1OVrOFzn0eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY3NDEwNA==", "bodyText": "Remove the commented bit maybe?", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389674104", "createdAt": "2020-03-09T13:37:59Z", "author": {"login": "dweiss"}, "path": "gradle/validation/missing-docs-check.gradle", "diffHunk": "@@ -34,8 +34,9 @@ allprojects {\n         ':lucene:spatial3d',\n     ]\n \n-    task checkMissingDocsDefault(type: CheckMissingDocsTask, dependsOn: 'javadoc') {\n-      dirs += [ project.javadoc.destinationDir ]\n+    task checkMissingDocsDefault(type: CheckMissingDocsTask, dependsOn: 'renderJavadoc') {\n+      //dirs += [ project.javadoc.destinationDir ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84dab6fa6f04faa5d6d065f43e6cabb1a2d61e92"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMTkzNTc0", "url": "https://github.com/apache/lucene-solr/pull/1304#pullrequestreview-371193574", "createdAt": "2020-03-09T13:44:28Z", "commit": {"oid": "84dab6fa6f04faa5d6d065f43e6cabb1a2d61e92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15516935c0390bfa81c6bcc0830c3048bdb09c96", "author": {"user": {"login": "mocobeta", "name": "Tomoko Uchida"}}, "url": "https://github.com/apache/lucene-solr/commit/15516935c0390bfa81c6bcc0830c3048bdb09c96", "committedDate": "2020-03-11T14:17:30Z", "message": "remove unused line."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6041339df8082d1eb5d379f514334b14a7861a5", "author": {"user": {"login": "mocobeta", "name": "Tomoko Uchida"}}, "url": "https://github.com/apache/lucene-solr/commit/d6041339df8082d1eb5d379f514334b14a7861a5", "committedDate": "2020-03-11T15:05:51Z", "message": "enable check missing docs task for precommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd20e493ce89b9d0eab1d46b5d19b04de773159f", "author": {"user": {"login": "mocobeta", "name": "Tomoko Uchida"}}, "url": "https://github.com/apache/lucene-solr/commit/bd20e493ce89b9d0eab1d46b5d19b04de773159f", "committedDate": "2020-03-11T15:07:59Z", "message": "clean up unused code"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2166, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}