{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2OTIwMjYy", "number": 1443, "title": "LUCENE-9337: Ensure CMS updates it's thread accounting datastructures consistently", "bodyText": "CMS today releases it's lock after finishing a merge before it re-acquires it to update\nthe thread accounting datastructures. This causes threading issues where concurrently\nfinishing threads fail to pick up pending merges causing potential thread starvation\non forceMerge calls.", "createdAt": "2020-04-21T21:31:43Z", "url": "https://github.com/apache/lucene-solr/pull/1443", "merged": true, "mergeCommit": {"oid": "2b6ae53cd9f060758a6c92c7a61bfb91d878fac2"}, "closed": true, "closedAt": "2020-04-22T12:30:15Z", "author": {"login": "s1monw"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZ6j38AH2gAyNDA2OTIwMjYyOmExMjg3M2ZmOTBmY2M3ZTI3MzU0MDFjNTk5ZTI3OGVmMDkyZTVkZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaHPE7gH2gAyNDA2OTIwMjYyOmU2ZmM5MjZlNTYzNGQxZjhhZTJjYTZiNWVhYzViOTU4ZTYwZWUxNmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a12873ff90fcc7e2735401c599e278ef092e5de1", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/a12873ff90fcc7e2735401c599e278ef092e5de1", "committedDate": "2020-04-21T21:27:52Z", "message": "LUCENE-9337: Ensure CMS updates it's thread accounting datastructures consistently\n\nCMS today releases it's lock after finishing a merge before it re-acquires it to update\nthe thread accounting datastructures. This causes threading issues where concurrently\nfinishing threads fail to pick up pending merges causing potential thread starvation\non forceMerge calls."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDY5MTQ0", "url": "https://github.com/apache/lucene-solr/pull/1443#pullrequestreview-398069144", "createdAt": "2020-04-22T10:49:27Z", "commit": {"oid": "a12873ff90fcc7e2735401c599e278ef092e5de1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMDo0OToyN1rOGJv_Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMDo0OToyN1rOGJv_Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg3NjU5NQ==", "bodyText": "Wow, what an exotic sequence of events :)  Great catch!\ns/non/none\nadd  time at the end?", "url": "https://github.com/apache/lucene-solr/pull/1443#discussion_r412876595", "createdAt": "2020-04-22T10:49:27Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler.java", "diffHunk": "@@ -657,4 +659,88 @@ protected void doStall() {\n \n     assertFalse(failed.get());\n   }\n+\n+  /*\n+   * This test tries to produce 2 merges running concurrently with 2 segments per merge. While these\n+   * merges run we kick off a forceMerge that puts a pending merge in the queue but waits for things to happen.\n+   * While we do this we reduce maxMergeCount to 1. If concurrency in CMS is not right the forceMerge will wait forever\n+   * since non of the currently running merges picks up the pending merge. This test fails every", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a12873ff90fcc7e2735401c599e278ef092e5de1"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDY5ODk4", "url": "https://github.com/apache/lucene-solr/pull/1443#pullrequestreview-398069898", "createdAt": "2020-04-22T10:50:36Z", "commit": {"oid": "a12873ff90fcc7e2735401c599e278ef092e5de1"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMDo1MDozNlrOGJwBxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMDo1MToyOFrOGJwEAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg3NzI1Mw==", "bodyText": "Sneaky (using InfoStream to tickle things)!", "url": "https://github.com/apache/lucene-solr/pull/1443#discussion_r412877253", "createdAt": "2020-04-22T10:50:36Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler.java", "diffHunk": "@@ -657,4 +659,88 @@ protected void doStall() {\n \n     assertFalse(failed.get());\n   }\n+\n+  /*\n+   * This test tries to produce 2 merges running concurrently with 2 segments per merge. While these\n+   * merges run we kick off a forceMerge that puts a pending merge in the queue but waits for things to happen.\n+   * While we do this we reduce maxMergeCount to 1. If concurrency in CMS is not right the forceMerge will wait forever\n+   * since non of the currently running merges picks up the pending merge. This test fails every\n+   */\n+  public void testChangeMaxMergeCountyWhileForceMerge() throws IOException, InterruptedException {\n+    int numIters = TEST_NIGHTLY ? 100 : 10;\n+    for (int iters = 0; iters < numIters; iters++) {\n+      LogDocMergePolicy mp = new LogDocMergePolicy();\n+      mp.setMergeFactor(2);\n+      CountDownLatch forceMergeWaits = new CountDownLatch(1);\n+      CountDownLatch mergeThreadsStartAfterWait = new CountDownLatch(1);\n+      CountDownLatch mergeThreadsArrived = new CountDownLatch(2);\n+      InfoStream stream = new InfoStream() {\n+        @Override\n+        public void message(String component, String message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a12873ff90fcc7e2735401c599e278ef092e5de1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg3NzgyNw==", "bodyText": "s/synched/sync'd?", "url": "https://github.com/apache/lucene-solr/pull/1443#discussion_r412877827", "createdAt": "2020-04-22T10:51:28Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java", "diffHunk": "@@ -633,6 +634,27 @@ protected synchronized MergeThread getMergeThread(IndexWriter writer, OneMerge m\n     return thread;\n   }\n \n+  synchronized void runOnMergeFinished(IndexWriter writer) {\n+    // the merge call as well as the merge thread handling in the finally\n+    // block must be synched on CMS otherwise stalling decisions might cause", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a12873ff90fcc7e2735401c599e278ef092e5de1"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6fc926e5634d1f8ae2ca6b5eac5b958e60ee16d", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/e6fc926e5634d1f8ae2ca6b5eac5b958e60ee16d", "committedDate": "2020-04-22T12:13:55Z", "message": "apply feedback and add changes.txt"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2118, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}