{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3OTkwNjg2", "number": 1600, "title": "SOLR Move \"userfiles\" stuff from SolrPaths to CoreContainer.", "bodyText": "Convert String and File paths to Path API.\nCoreContainer seems to me the proper place for the node to expose key directories at a node level.  It's already doing this.  It looked a bit clumsy to me to have the String constant and extra methods elsewhere for userfiles.  And I'd rather not see SolrDispatchFilter touched whatsoever for this feature, even if it was one line.\nOnce I moved that, and declared as type Path, I couldn't un-see all the code that did heavy back & forth conversion between String paths and File paths.  Not only is String terrible because it's untyped, but Path is the modern replacement, not File.  I wish we could do forbiddenAPI on File but there's lots of old code.  This userfiles code was only added last year though.\nI experimented with using Files.walkTree in findReadableFiles() but backed off because I already extended my scope very far and I'd rather eventually see all of the Files streamed instead of needing to materialize all of them into a list. Also, findReadableFiles is pretty clear and wasn't any clearer when I played with a Files.walkTree considering all the rules, particularly ignoring files that aren't readable.  I wonder how intentional that is... maybe it actually should be an error instead of silently ignoring those files.\n@gerlowskija", "createdAt": "2020-06-22T14:43:36Z", "url": "https://github.com/apache/lucene-solr/pull/1600", "merged": true, "mergeCommit": {"oid": "3000bbd05aeff0d821b276a912ec481a3411f2ab"}, "closed": true, "closedAt": "2020-06-25T04:18:58Z", "author": {"login": "dsmiley"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctxwvyAH2gAyNDM3OTkwNjg2OmQyYTAyOWM2Y2Y3OGY2M2M1MmQ0ZWQ1Y2RkYThkNTk0ZDdkMzA5MWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuSrc4gFqTQzNjMyMDE5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d2a029c6cf78f63c52d4ed5cdda8d594d7d3091b", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/d2a029c6cf78f63c52d4ed5cdda8d594d7d3091b", "committedDate": "2020-06-22T14:31:16Z", "message": "SOLR Move \"userfiles\" stuff from SolrPaths to CoreContainer.\nConvert String and File paths to Path API"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1ODk4OTM0", "url": "https://github.com/apache/lucene-solr/pull/1600#pullrequestreview-435898934", "createdAt": "2020-06-23T15:26:41Z", "commit": {"oid": "d2a029c6cf78f63c52d4ed5cdda8d594d7d3091b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MzIwMTk4", "url": "https://github.com/apache/lucene-solr/pull/1600#pullrequestreview-436320198", "createdAt": "2020-06-24T04:45:03Z", "commit": {"oid": "d2a029c6cf78f63c52d4ed5cdda8d594d7d3091b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo0NTowM1rOGoCvsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo0NjoxMlrOGoCwvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MTIwMg==", "bodyText": "The delta here with Paths API isn't line-for-line; it's much better.  Files.createDirectories works if it exists and simply throws if something goes wrong.", "url": "https://github.com/apache/lucene-solr/pull/1600#discussion_r444641202", "createdAt": "2020-06-24T04:45:03Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/SolrPaths.java", "diffHunk": "@@ -94,26 +87,6 @@ public static Path locateSolrHome() {\n     return Paths.get(home).toAbsolutePath().normalize();\n   }\n \n-  public static void ensureUserFilesDataDir(Path solrHome) {\n-    final Path userFilesPath = getUserFilesPath(solrHome);\n-    final File userFilesDirectory = new File(userFilesPath.toString());\n-    if (!userFilesDirectory.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2a029c6cf78f63c52d4ed5cdda8d594d7d3091b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MTQ3MQ==", "bodyText": "Path \"startsWith\" API makes what you were trying to do simpler (less code).", "url": "https://github.com/apache/lucene-solr/pull/1600#discussion_r444641471", "createdAt": "2020-06-24T04:46:12Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/handler/CatStream.java", "diffHunk": "@@ -158,28 +157,20 @@ public Explanation toExplanation(StreamFactory factory) throws IOException {\n   }\n \n   private List<CrawlFile> validateAndSetFilepathsInSandbox() {\n-    final String[] relativePathRoots = commaDelimitedFilepaths.split(\",\");\n-\n     final List<CrawlFile> crawlSeeds = new ArrayList<>();\n-    for (String crawlRoot : relativePathRoots) {\n-      final File crawlRootFile = new File(crawlRoot);\n-      if (crawlRootFile.isAbsolute()) {\n-        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n-            \"file/directory to stream must be provided as an absolute path: \" + crawlRoot);\n-      }\n-      if ( crawlRoot.contains(\"..\")) {\n+    for (String crawlRootStr : commaDelimitedFilepaths.split(\",\")) {\n+      Path crawlRootPath = chroot.resolve(crawlRootStr).normalize();\n+      if (! crawlRootPath.startsWith(chroot)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2a029c6cf78f63c52d4ed5cdda8d594d7d3091b"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2650, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}