{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzYxODEw", "number": 1542, "title": "SOLR-14347: fix cached session update to not depend on Zookeeper state", "bodyText": "Description\nSession used for replica placement computation was wrongly built to only account for state already in Zookeeper, therefore ignoring all in progress past Collection API operations. The Session returned to the cache was also the wrong one not including the changes to the cluster state resulting from the placement computation.\nSolution\nThe Session used for computation is now cloned from the cached session without trying to validate state in Zookeeper where that state might not yet be.\nTests\nRan solr tests.\nChecklist\nPlease review the following and check all that apply:\n\n I have reviewed the guidelines for How to Contribute and my code conforms to the standards described there to the best of my ability.\n I have created a Jira issue and added the issue ID to my pull request title.\n I have given Solr maintainers access to contribute to my PR branch. (optional but recommended)\n I have developed this patch against the master branch.\n I have run ant precommit and the appropriate test suite.\n I have added tests for my changes.\n I have added documentation for the Ref Guide (for Solr changes only).", "createdAt": "2020-05-28T22:08:15Z", "url": "https://github.com/apache/lucene-solr/pull/1542", "merged": true, "mergeCommit": {"oid": "d4f7c90bab3d3dd76c066aeb598544cf8250bac8"}, "closed": true, "closedAt": "2020-06-10T11:13:56Z", "author": {"login": "murblanc"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl1N2zgH2gAyNDI0NzYxODEwOmNhZmY5MzRiN2U5OTFhNWQ3YjNlNTJkMTc1NWY4OTE4ZGM0Yjk3ZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp3j-ZgFqTQyNzk0Mjk2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "caff934b7e991a5d7b3e52d1755f8918dc4b97d1", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/caff934b7e991a5d7b3e52d1755f8918dc4b97d1", "committedDate": "2020-05-28T22:01:23Z", "message": "SOLR-14347: fix cached session update to not depend on Zookeeper state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c83017479aa367d5317745116a2acb5a9a6b941e", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/c83017479aa367d5317745116a2acb5a9a6b941e", "committedDate": "2020-06-10T05:48:15Z", "message": "Merge branch 'master' into SOLR-14347"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d7b3e714f08479a10d868ce7da428450d03ae39", "author": {"user": {"login": "noblepaul", "name": "Noble Paul"}}, "url": "https://github.com/apache/lucene-solr/commit/5d7b3e714f08479a10d868ce7da428450d03ae39", "committedDate": "2020-06-10T07:19:20Z", "message": "avoid O(n) while copying, fixing the precommit errors introduced during merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3OTQyOTY4", "url": "https://github.com/apache/lucene-solr/pull/1542#pullrequestreview-427942968", "createdAt": "2020-06-10T11:01:02Z", "commit": {"oid": "5d7b3e714f08479a10d868ce7da428450d03ae39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMTowMTowM1rOGhvwHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMTowMTowM1rOGhvwHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzODU1OQ==", "bodyText": "Tradeoff with this one time matrix walk and copy is that we copy all nodes, even those that might not be needed (because not present in parameter nodes). I do like the approach though it's cleaner than the code I wrote.\nMaybe keep this initial loop but just store Row references, then do the copy below when newRow is needed? (there's already an if bloc when it's null, so copy action can easily be placed in else bloc).", "url": "https://github.com/apache/lucene-solr/pull/1542#discussion_r438038559", "createdAt": "2020-06-10T11:01:03Z", "author": {"login": "murblanc"}, "path": "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java", "diffHunk": "@@ -644,15 +643,13 @@ public Session cloneToNewSession(SolrCloudManager cloudManager) {\n       List<Clause> expandedClauses = new ArrayList<>(this.expandedClauses);\n \n       List<Row> matrix = new ArrayList<>(nodes.size());\n+      Map<String, Row> copyNodes = new HashMap<>();\n+      for (Row oldRow: this.matrix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7b3e714f08479a10d868ce7da428450d03ae39"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2561, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}