{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMTg5MzY0", "number": 1842, "title": "LUCENE-9512: Move LockFactory stress test to be a unit/integration test", "bodyText": "This PR moves the lock factory stress test to be a :lucene:core unit/integration test. In verbose mode the output of clients is inherited, in standard test mode its written to files (to allow debugging).\nUnfortunately, as the server uses TCP/IP socket to communicate with the childs, I have to add listen/accept to ephemeral ports to lucene's policy file (@rmuir looks ok?).\nIf this gets backported to 8.x, we can get rid of the rather complicated Ant Target, too.\nSee https://issues.apache.org/jira/browse/LUCENE-9512 for background information.", "createdAt": "2020-09-08T17:23:53Z", "url": "https://github.com/apache/lucene-solr/pull/1842", "merged": true, "mergeCommit": {"oid": "f0d3bab321e384af13d66d4a3194a34af0633b0e"}, "closed": true, "closedAt": "2020-09-09T16:42:31Z", "author": {"login": "uschindler"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG67PhgH2gAyNDgyMTg5MzY0OjA2YmI4OTkwZDEzZTFjMDAyNTRkY2U2ZDg4NWFmNmYxNzMyNjgyYzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHO-QzgH2gAyNDgyMTg5MzY0OmJlMjg3ZGFiNDBkNjRhMWI0MWE3MWMzOWY0ZTQ0NDU5ZDA2NWJjMTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "06bb8990d13e1c00254dce6d885af6f1732682c8", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/06bb8990d13e1c00254dce6d885af6f1732682c8", "committedDate": "2020-09-08T17:19:59Z", "message": "LUCENE-9512: Move LockFactory stress test to be a unit/integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7de6b445e6de1cf527de7e2d7c082a8ee350857", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/a7de6b445e6de1cf527de7e2d7c082a8ee350857", "committedDate": "2020-09-08T17:38:47Z", "message": "Add @SuppressForbidden, because ProcessBuilder only allows java.io.File"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3a0dbb462707f907362aed76a5a45a738a40f54", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/e3a0dbb462707f907362aed76a5a45a738a40f54", "committedDate": "2020-09-08T17:40:43Z", "message": "Actually output by childs is no longer counted"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MzkyNDI4", "url": "https://github.com/apache/lucene-solr/pull/1842#pullrequestreview-484392428", "createdAt": "2020-09-08T18:28:17Z", "commit": {"oid": "e3a0dbb462707f907362aed76a5a45a738a40f54"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODoyODoxN1rOHOpG5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODozNTo1MVrOHOpW3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExNTYyMQ==", "bodyText": "1 second may not be enough on heavy loaded machines?", "url": "https://github.com/apache/lucene-solr/pull/1842#discussion_r485115621", "createdAt": "2020-09-08T18:28:17Z", "author": {"login": "dweiss"}, "path": "lucene/core/src/test/org/apache/lucene/store/TestLockFactoriesMultiJVM.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.store;\n+\n+import java.lang.ProcessBuilder.Redirect;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.lucene.util.LuceneTestCase;\n+import org.apache.lucene.util.NamedThreadFactory;\n+import org.apache.lucene.util.SuppressForbidden;\n+\n+public class TestLockFactoriesMultiJVM extends LuceneTestCase {\n+  \n+  @SuppressForbidden(reason = \"ProcessBuilder only allows to redirect to java.io.File\")\n+  private static final ProcessBuilder applyRedirection(ProcessBuilder pb, int client, Path dir) {\n+    if (LuceneTestCase.VERBOSE) {\n+      return pb.inheritIO();\n+    } else {\n+      return pb\n+        .redirectError(dir.resolve(\"err-\" + client + \".txt\").toFile())\n+        .redirectOutput(dir.resolve(\"out-\" + client + \".txt\").toFile())\n+        .redirectInput(Redirect.INHERIT);\n+    }\n+  }\n+  \n+  private void runImpl(Class<? extends LockFactory> impl) throws Exception {\n+    // make sure we are in clean state:\n+    LockVerifyServer.PORT.set(-1);\n+    \n+    final int clients = 2;\n+    final String host = \"127.0.0.1\";\n+    final int delay = 1;\n+    final int rounds = (LuceneTestCase.TEST_NIGHTLY ? 30000 : 500) * LuceneTestCase.RANDOM_MULTIPLIER;\n+    \n+    final Path dir = LuceneTestCase.createTempDir(impl.getSimpleName());\n+    \n+    // create the LockVerifyServer in a separate thread\n+    final ExecutorService pool = Executors.newSingleThreadExecutor(new NamedThreadFactory(\"lockfactory-tester-\"));\n+    try {\n+      pool.submit(() -> {\n+        LockVerifyServer.main(host, Integer.toString(clients));\n+        return (Void) null;\n+      });\n+      \n+      // wait for it to boot up\n+      int port;\n+      while ((port = LockVerifyServer.PORT.get()) == -1) {\n+        Thread.sleep(100L);\n+      }\n+      \n+      // spawn clients as separate Java processes\n+      final List<Process> processes = new ArrayList<>();\n+      for (int i = 0; i < clients; i++) {\n+        processes.add(applyRedirection(new ProcessBuilder(\n+            Paths.get(System.getProperty(\"java.home\"), \"bin\", \"java\").toString(),\n+            \"-cp\",\n+            System.getProperty(\"java.class.path\"),\n+            LockStressTest.class.getName(),\n+            Integer.toString(i),\n+            host,\n+            Integer.toString(port),\n+            impl.getName(),\n+            dir.toString(),\n+            Integer.toString(delay),\n+            Integer.toString(rounds)\n+          ), i, dir).start());\n+      }\n+      \n+      // wait for all processes to exit\n+      int exited = 0;\n+      while (exited < clients) {\n+        for (Process p : processes) {\n+          if (p.waitFor(1, TimeUnit.SECONDS)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3a0dbb462707f907362aed76a5a45a738a40f54"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExNjAzNA==", "bodyText": "This property wouldn't be needed if you forked the \"server: side as well as clients... :)", "url": "https://github.com/apache/lucene-solr/pull/1842#discussion_r485116034", "createdAt": "2020-09-08T18:28:59Z", "author": {"login": "dweiss"}, "path": "gradle/testing/randomization/policies/tests.policy", "diffHunk": "@@ -64,6 +64,9 @@ grant {\n   permission java.lang.RuntimePermission \"getClassLoader\";\n   permission java.lang.RuntimePermission \"setContextClassLoader\";\n \n+  // TestLockFactoriesMultiJVM opens a random port on 127.0.0.1 (port 0 = ephemeral port range):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3a0dbb462707f907362aed76a5a45a738a40f54"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExNjU2Mg==", "bodyText": "Does it make sense to limit the default heap of these subprocesses here?", "url": "https://github.com/apache/lucene-solr/pull/1842#discussion_r485116562", "createdAt": "2020-09-08T18:29:56Z", "author": {"login": "dweiss"}, "path": "lucene/core/src/test/org/apache/lucene/store/TestLockFactoriesMultiJVM.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.store;\n+\n+import java.lang.ProcessBuilder.Redirect;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.lucene.util.LuceneTestCase;\n+import org.apache.lucene.util.NamedThreadFactory;\n+import org.apache.lucene.util.SuppressForbidden;\n+\n+public class TestLockFactoriesMultiJVM extends LuceneTestCase {\n+  \n+  @SuppressForbidden(reason = \"ProcessBuilder only allows to redirect to java.io.File\")\n+  private static final ProcessBuilder applyRedirection(ProcessBuilder pb, int client, Path dir) {\n+    if (LuceneTestCase.VERBOSE) {\n+      return pb.inheritIO();\n+    } else {\n+      return pb\n+        .redirectError(dir.resolve(\"err-\" + client + \".txt\").toFile())\n+        .redirectOutput(dir.resolve(\"out-\" + client + \".txt\").toFile())\n+        .redirectInput(Redirect.INHERIT);\n+    }\n+  }\n+  \n+  private void runImpl(Class<? extends LockFactory> impl) throws Exception {\n+    // make sure we are in clean state:\n+    LockVerifyServer.PORT.set(-1);\n+    \n+    final int clients = 2;\n+    final String host = \"127.0.0.1\";\n+    final int delay = 1;\n+    final int rounds = (LuceneTestCase.TEST_NIGHTLY ? 30000 : 500) * LuceneTestCase.RANDOM_MULTIPLIER;\n+    \n+    final Path dir = LuceneTestCase.createTempDir(impl.getSimpleName());\n+    \n+    // create the LockVerifyServer in a separate thread\n+    final ExecutorService pool = Executors.newSingleThreadExecutor(new NamedThreadFactory(\"lockfactory-tester-\"));\n+    try {\n+      pool.submit(() -> {\n+        LockVerifyServer.main(host, Integer.toString(clients));\n+        return (Void) null;\n+      });\n+      \n+      // wait for it to boot up\n+      int port;\n+      while ((port = LockVerifyServer.PORT.get()) == -1) {\n+        Thread.sleep(100L);\n+      }\n+      \n+      // spawn clients as separate Java processes\n+      final List<Process> processes = new ArrayList<>();\n+      for (int i = 0; i < clients; i++) {\n+        processes.add(applyRedirection(new ProcessBuilder(\n+            Paths.get(System.getProperty(\"java.home\"), \"bin\", \"java\").toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3a0dbb462707f907362aed76a5a45a738a40f54"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExNzA2Mg==", "bodyText": "I would maybe mark this as belonging to Slow group? Just a thought.", "url": "https://github.com/apache/lucene-solr/pull/1842#discussion_r485117062", "createdAt": "2020-09-08T18:30:52Z", "author": {"login": "dweiss"}, "path": "lucene/core/src/test/org/apache/lucene/store/TestLockFactoriesMultiJVM.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.store;\n+\n+import java.lang.ProcessBuilder.Redirect;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.lucene.util.LuceneTestCase;\n+import org.apache.lucene.util.NamedThreadFactory;\n+import org.apache.lucene.util.SuppressForbidden;\n+\n+public class TestLockFactoriesMultiJVM extends LuceneTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3a0dbb462707f907362aed76a5a45a738a40f54"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExOTcwOQ==", "bodyText": "I think we should absolutely try to clean up forked processes in case something goes wrong (even if it's an internal suite timeout!) - regardless of the outcome of the test. I'd do a run over the process list in finally and if it's still in a live state, kill it.\nhttps://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Process.html#destroyForcibly()\nAnother thought is maybe to use a list of completable futures to wait for all forked processes instead of counting them?\nhttps://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Process.html#onExit()\nThese are details; the cleanup is kind of important.", "url": "https://github.com/apache/lucene-solr/pull/1842#discussion_r485119709", "createdAt": "2020-09-08T18:35:51Z", "author": {"login": "dweiss"}, "path": "lucene/core/src/test/org/apache/lucene/store/TestLockFactoriesMultiJVM.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.store;\n+\n+import java.lang.ProcessBuilder.Redirect;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.lucene.util.LuceneTestCase;\n+import org.apache.lucene.util.NamedThreadFactory;\n+import org.apache.lucene.util.SuppressForbidden;\n+\n+public class TestLockFactoriesMultiJVM extends LuceneTestCase {\n+  \n+  @SuppressForbidden(reason = \"ProcessBuilder only allows to redirect to java.io.File\")\n+  private static final ProcessBuilder applyRedirection(ProcessBuilder pb, int client, Path dir) {\n+    if (LuceneTestCase.VERBOSE) {\n+      return pb.inheritIO();\n+    } else {\n+      return pb\n+        .redirectError(dir.resolve(\"err-\" + client + \".txt\").toFile())\n+        .redirectOutput(dir.resolve(\"out-\" + client + \".txt\").toFile())\n+        .redirectInput(Redirect.INHERIT);\n+    }\n+  }\n+  \n+  private void runImpl(Class<? extends LockFactory> impl) throws Exception {\n+    // make sure we are in clean state:\n+    LockVerifyServer.PORT.set(-1);\n+    \n+    final int clients = 2;\n+    final String host = \"127.0.0.1\";\n+    final int delay = 1;\n+    final int rounds = (LuceneTestCase.TEST_NIGHTLY ? 30000 : 500) * LuceneTestCase.RANDOM_MULTIPLIER;\n+    \n+    final Path dir = LuceneTestCase.createTempDir(impl.getSimpleName());\n+    \n+    // create the LockVerifyServer in a separate thread\n+    final ExecutorService pool = Executors.newSingleThreadExecutor(new NamedThreadFactory(\"lockfactory-tester-\"));\n+    try {\n+      pool.submit(() -> {\n+        LockVerifyServer.main(host, Integer.toString(clients));\n+        return (Void) null;\n+      });\n+      \n+      // wait for it to boot up\n+      int port;\n+      while ((port = LockVerifyServer.PORT.get()) == -1) {\n+        Thread.sleep(100L);\n+      }\n+      \n+      // spawn clients as separate Java processes\n+      final List<Process> processes = new ArrayList<>();\n+      for (int i = 0; i < clients; i++) {\n+        processes.add(applyRedirection(new ProcessBuilder(\n+            Paths.get(System.getProperty(\"java.home\"), \"bin\", \"java\").toString(),\n+            \"-cp\",\n+            System.getProperty(\"java.class.path\"),\n+            LockStressTest.class.getName(),\n+            Integer.toString(i),\n+            host,\n+            Integer.toString(port),\n+            impl.getName(),\n+            dir.toString(),\n+            Integer.toString(delay),\n+            Integer.toString(rounds)\n+          ), i, dir).start());\n+      }\n+      \n+      // wait for all processes to exit\n+      int exited = 0;\n+      while (exited < clients) {\n+        for (Process p : processes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3a0dbb462707f907362aed76a5a45a738a40f54"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a83fea05c28ba58124e8c7cbd6e225e704060aa", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/6a83fea05c28ba58124e8c7cbd6e225e704060aa", "committedDate": "2020-09-08T20:22:40Z", "message": "Improvements:\n- Remove AtomicBoolean and use a callback\n- Remove the thread pool (not needed because of cleanup)\n- Clean up processes and force them to close if not dying"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dfb1d83d9b5520e8ad436090d270742e82f1b45", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/0dfb1d83d9b5520e8ad436090d270742e82f1b45", "committedDate": "2020-09-08T22:49:59Z", "message": "Reorder parameters; cleanup; list size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1905edbe58ed49161a10c817aec7c4e635c370f6", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/1905edbe58ed49161a10c817aec7c4e635c370f6", "committedDate": "2020-09-08T22:48:03Z", "message": "adjust max size"}, "afterCommit": {"oid": "0dfb1d83d9b5520e8ad436090d270742e82f1b45", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/0dfb1d83d9b5520e8ad436090d270742e82f1b45", "committedDate": "2020-09-08T22:49:59Z", "message": "Reorder parameters; cleanup; list size"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36ea51695eeca9afd815cbc3d4fe539c8f4e900f", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/36ea51695eeca9afd815cbc3d4fe539c8f4e900f", "committedDate": "2020-09-09T07:36:19Z", "message": "Merge branch 'master' of https://gitbox.apache.org/repos/asf/lucene-solr into dev/LUCENE-9512"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07d3b3529cdab0257f2a20fa168f7293e9e6b255", "author": {"user": {"login": "dweiss", "name": "Dawid Weiss"}}, "url": "https://github.com/apache/lucene-solr/commit/07d3b3529cdab0257f2a20fa168f7293e9e6b255", "committedDate": "2020-09-09T08:21:30Z", "message": "Implement forked and in-JVM client for lock stress tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ead6fbbaed72fcef5af6c31f4e790ccb6cdb21d", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/3ead6fbbaed72fcef5af6c31f4e790ccb6cdb21d", "committedDate": "2020-09-09T10:02:34Z", "message": "Disable filesystem wrapping (we want this test run on native OS filesystems)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4000012fba5828a12322fb9ca972a7537e478964", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/4000012fba5828a12322fb9ca972a7537e478964", "committedDate": "2020-09-09T10:19:58Z", "message": "Rename test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a006233debf021c769e67efed6c9e9aac5bc876", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/1a006233debf021c769e67efed6c9e9aac5bc876", "committedDate": "2020-09-09T10:40:22Z", "message": "Cleanup/reorder methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ca27e27454f64bcc884b9520ad74b163efaafb0", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/6ca27e27454f64bcc884b9520ad74b163efaafb0", "committedDate": "2020-09-09T12:57:21Z", "message": "Remove LockClientSupplier and make just have 1 thread client vs. 3 process clients (modulo 4). Also rename some methods to make consistent (execute -> run)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9cd7a5078bf3c932f699bdf44e27247ba64f236", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/c9cd7a5078bf3c932f699bdf44e27247ba64f236", "committedDate": "2020-09-09T13:13:02Z", "message": "Change number of clients"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f04c773367f254d057faab29992f738ac3b2ffa5", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/f04c773367f254d057faab29992f738ac3b2ffa5", "committedDate": "2020-09-09T14:00:35Z", "message": "Revert the in-process code, but keep the magic numbers as constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad86aac72e0360d76fe29ecefe124667ace84ec9", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/ad86aac72e0360d76fe29ecefe124667ace84ec9", "committedDate": "2020-09-09T14:03:08Z", "message": "Disable filesystem wrapping (we want this test run on native OS filesystems)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4387790d90fde93edf85d041dc65a2df70293a8c", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/4387790d90fde93edf85d041dc65a2df70293a8c", "committedDate": "2020-09-09T14:06:52Z", "message": "Run with 5 clients in nightly tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11ceb954af8335d972b78a7b01e1a39997efdda9", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/11ceb954af8335d972b78a7b01e1a39997efdda9", "committedDate": "2020-09-09T16:37:43Z", "message": "Add changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3003b74c0349e465932a92c404668e5f941a85e1", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/3003b74c0349e465932a92c404668e5f941a85e1", "committedDate": "2020-09-09T16:39:44Z", "message": "Merge branch 'master' of https://gitbox.apache.org/repos/asf/lucene-solr into dev/LUCENE-9512\n\n# Conflicts:\n#\tlucene/CHANGES.txt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be287dab40d64a1b41a71c39f4e44459d065bc18", "author": {"user": {"login": "uschindler", "name": "Uwe Schindler"}}, "url": "https://github.com/apache/lucene-solr/commit/be287dab40d64a1b41a71c39f4e44459d065bc18", "committedDate": "2020-09-09T16:41:23Z", "message": "fix CHANGES.txt"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2236, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}