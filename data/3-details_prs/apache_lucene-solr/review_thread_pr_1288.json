{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5ODY3MTU0", "number": 1288, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzo0MjoxNFrODjFHpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzo0NDozN1rODjFLCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTEwNjI4OnYy", "diffSide": "RIGHT", "path": "solr/CHANGES.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzo0MjoxNFrOFur58g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyODozOFrOFu-uog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5ODE2Mg==", "bodyText": "SysProp should by \"sys-prop\" or system property.  The way you capitalized it makes it seem like some class.", "url": "https://github.com/apache/lucene-solr/pull/1288#discussion_r384498162", "createdAt": "2020-02-26T13:42:14Z", "author": {"login": "dsmiley"}, "path": "solr/CHANGES.txt", "diffHunk": "@@ -110,6 +110,9 @@ Improvements\n \n * SOLR-14114: Add WARN to Solr log that embedded ZK is not supported in production (janhoy)\n \n+* SOLR-14281: Make sharedLib configurable through SysProp and allow multiple comma separated paths.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c88ba714437620e80267c8bfa5449fcca4f1ff13"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwNjU2Mg==", "bodyText": "Re-phrased", "url": "https://github.com/apache/lucene-solr/pull/1288#discussion_r384806562", "createdAt": "2020-02-26T22:28:38Z", "author": {"login": "janhoy"}, "path": "solr/CHANGES.txt", "diffHunk": "@@ -110,6 +110,9 @@ Improvements\n \n * SOLR-14114: Add WARN to Solr log that embedded ZK is not supported in production (janhoy)\n \n+* SOLR-14281: Make sharedLib configurable through SysProp and allow multiple comma separated paths.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5ODE2Mg=="}, "originalCommit": {"oid": "c88ba714437620e80267c8bfa5449fcca4f1ff13"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTExMjU2OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzo0Mzo1NVrOFur9tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyOTo1MVrOFu-wyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5OTEyNA==", "bodyText": "I'm almost certain we've got a utility that does this so that you don't have to define your regexp", "url": "https://github.com/apache/lucene-solr/pull/1288#discussion_r384499124", "createdAt": "2020-02-26T13:43:55Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -607,19 +609,31 @@ public PackageStoreAPI getPackageStoreAPI() {\n   public void load() {\n     log.debug(\"Loading cores into CoreContainer [instanceDir={}]\", loader.getInstancePath());\n \n+    // Always add $SOLR_HOME/lib to the shared resource loader\n+    Set<String> libDirs = new HashSet<>();\n+    libDirs.add(\"lib\");\n+\n+    if (!StringUtils.isBlank(cfg.getSharedLibDirectory())) {\n+      List<String> sharedLibs = Arrays.asList(cfg.getSharedLibDirectory().split(\"\\\\s*,\\\\s*\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c88ba714437620e80267c8bfa5449fcca4f1ff13"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwNzExMg==", "bodyText": "I tried StrUtils.splitSmart() but we don't need the smartness of not splitting inside quotes etc, and it does not trim whitespace around comma. So I'll keep this unless you know about a better split-util somewhere.", "url": "https://github.com/apache/lucene-solr/pull/1288#discussion_r384807112", "createdAt": "2020-02-26T22:29:51Z", "author": {"login": "janhoy"}, "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -607,19 +609,31 @@ public PackageStoreAPI getPackageStoreAPI() {\n   public void load() {\n     log.debug(\"Loading cores into CoreContainer [instanceDir={}]\", loader.getInstancePath());\n \n+    // Always add $SOLR_HOME/lib to the shared resource loader\n+    Set<String> libDirs = new HashSet<>();\n+    libDirs.add(\"lib\");\n+\n+    if (!StringUtils.isBlank(cfg.getSharedLibDirectory())) {\n+      List<String> sharedLibs = Arrays.asList(cfg.getSharedLibDirectory().split(\"\\\\s*,\\\\s*\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5OTEyNA=="}, "originalCommit": {"oid": "c88ba714437620e80267c8bfa5449fcca4f1ff13"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTExNDk2OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzo0NDozN1rOFur_Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzo0NDozN1rOFur_Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5OTUwNg==", "bodyText": "Use LinkedHashSet", "url": "https://github.com/apache/lucene-solr/pull/1288#discussion_r384499506", "createdAt": "2020-02-26T13:44:37Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -607,19 +609,31 @@ public PackageStoreAPI getPackageStoreAPI() {\n   public void load() {\n     log.debug(\"Loading cores into CoreContainer [instanceDir={}]\", loader.getInstancePath());\n \n+    // Always add $SOLR_HOME/lib to the shared resource loader\n+    Set<String> libDirs = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c88ba714437620e80267c8bfa5449fcca4f1ff13"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 812, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}