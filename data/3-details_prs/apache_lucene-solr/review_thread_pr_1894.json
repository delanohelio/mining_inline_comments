{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5ODQxNjI1", "number": 1894, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODowODoyOVrOElyCJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODowOToyMFrOElyDOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDUyNTE5OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODowODoyOVrOHVcqqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODowODoyOVrOHVcqqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1MTgxOQ==", "bodyText": "coreRootDirectory is always non-null.  I don't like null checks that are unnecessary; it may feel \"safe\" but slightly obscures code clarity and suggests possibilities that are impossibilities.", "url": "https://github.com/apache/lucene-solr/pull/1894#discussion_r492251819", "createdAt": "2020-09-21T18:08:29Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java", "diffHunk": "@@ -139,8 +140,19 @@ public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throw\n     if (solrCloudMode) {\n       rsp.add(\"zkHost\", getCoreContainer(req, core).getZkController().getZkServerAddress());\n     }\n-    if (cc != null)\n-      rsp.add( \"solr_home\", cc.getSolrHome());\n+    if (cc != null) {\n+      String solrHome = cc.getSolrHome();\n+      rsp.add(\"solr_home\", solrHome);\n+\n+      Path coreRootDirectory = cc.getCoreRootDirectory();\n+      if (coreRootDirectory != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6262cb8fdb76166bd621e08a5d80229eb226cd2"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDUyNzk0OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODowOToyMFrOHVcsZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0OTo0OFrOHVeDcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1MjI2MQ==", "bodyText": "I disagree with this condition.  I think this should always emitted no matter where it is.  It's more helpful on consumers to depend on its existence rather than having it vary in some cases but not others.", "url": "https://github.com/apache/lucene-solr/pull/1894#discussion_r492252261", "createdAt": "2020-09-21T18:09:20Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java", "diffHunk": "@@ -139,8 +140,19 @@ public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throw\n     if (solrCloudMode) {\n       rsp.add(\"zkHost\", getCoreContainer(req, core).getZkController().getZkServerAddress());\n     }\n-    if (cc != null)\n-      rsp.add( \"solr_home\", cc.getSolrHome());\n+    if (cc != null) {\n+      String solrHome = cc.getSolrHome();\n+      rsp.add(\"solr_home\", solrHome);\n+\n+      Path coreRootDirectory = cc.getCoreRootDirectory();\n+      if (coreRootDirectory != null) {\n+        String coreRootDirectoryString = coreRootDirectory.toString();\n+        if (!coreRootDirectoryString.equals(solrHome)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6262cb8fdb76166bd621e08a5d80229eb226cd2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MDMzMg==", "bodyText": "Ok, I was on borderline myself. I felt that because this option is barely used, having the same long string sent twice was bit of a waste of bandwidth. But, I guess it does not happen too often.\nI can correct both generation and invocation of this option to make it a guaranteed setup. Let's just hope they don't run version 9 tool against version 8 core.\nAlso, if you don't like the name (the other open point), this is a good time to mention it.", "url": "https://github.com/apache/lucene-solr/pull/1894#discussion_r492270332", "createdAt": "2020-09-21T18:41:59Z", "author": {"login": "arafalov"}, "path": "solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java", "diffHunk": "@@ -139,8 +140,19 @@ public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throw\n     if (solrCloudMode) {\n       rsp.add(\"zkHost\", getCoreContainer(req, core).getZkController().getZkServerAddress());\n     }\n-    if (cc != null)\n-      rsp.add( \"solr_home\", cc.getSolrHome());\n+    if (cc != null) {\n+      String solrHome = cc.getSolrHome();\n+      rsp.add(\"solr_home\", solrHome);\n+\n+      Path coreRootDirectory = cc.getCoreRootDirectory();\n+      if (coreRootDirectory != null) {\n+        String coreRootDirectoryString = coreRootDirectory.toString();\n+        if (!coreRootDirectoryString.equals(solrHome)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1MjI2MQ=="}, "originalCommit": {"oid": "d6262cb8fdb76166bd621e08a5d80229eb226cd2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3NDU0Ng==", "bodyText": "The \"solr_\" part should be skipped IMO.  Everything here is Solr :-)\n\nLet's just hope they don't run version 9 tool against version 8 core.\n\nWell it's up to them to have a tolerant client.  For the SolrCLI I think it makes sense to check for null in case of a cross-version situation.", "url": "https://github.com/apache/lucene-solr/pull/1894#discussion_r492274546", "createdAt": "2020-09-21T18:49:48Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler.java", "diffHunk": "@@ -139,8 +140,19 @@ public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throw\n     if (solrCloudMode) {\n       rsp.add(\"zkHost\", getCoreContainer(req, core).getZkController().getZkServerAddress());\n     }\n-    if (cc != null)\n-      rsp.add( \"solr_home\", cc.getSolrHome());\n+    if (cc != null) {\n+      String solrHome = cc.getSolrHome();\n+      rsp.add(\"solr_home\", solrHome);\n+\n+      Path coreRootDirectory = cc.getCoreRootDirectory();\n+      if (coreRootDirectory != null) {\n+        String coreRootDirectoryString = coreRootDirectory.toString();\n+        if (!coreRootDirectoryString.equals(solrHome)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1MjI2MQ=="}, "originalCommit": {"oid": "d6262cb8fdb76166bd621e08a5d80229eb226cd2"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1236, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}