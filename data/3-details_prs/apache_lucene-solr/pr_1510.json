{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2Mzk5MjY4", "number": 1510, "title": "SOLR-14473: Improve Overseer Javadoc", "bodyText": "Description\nImprove Overseer Javadoc.\nSolution\nAdded/modified Javadoc on Overseer, ClusterStateUpdater, ZkDistributedQueue and CollectionParams.CollectionAction\nTests\nN/A\nChecklist\nPlease review the following and check all that apply:\n\n I have reviewed the guidelines for How to Contribute and my code conforms to the standards described there to the best of my ability.\n I have created a Jira issue and added the issue ID to my pull request title.\n I have given Solr maintainers access to contribute to my PR branch. (optional but recommended)\n I have developed this patch against the master branch.\n I have run ant precommit and the appropriate test suite.\n I have added tests for my changes.\n I have added documentation for the Ref Guide (for Solr changes only).", "createdAt": "2020-05-11T23:22:06Z", "url": "https://github.com/apache/lucene-solr/pull/1510", "merged": true, "mergeCommit": {"oid": "d2825282c984a7eca102d74f16c28eed5a4dda92"}, "closed": true, "closedAt": "2020-05-18T20:21:17Z", "author": {"login": "murblanc"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgXwbHAH2gAyNDE2Mzk5MjY4Ojg2N2QyOGIyMjQ5ZjBlYjY5NGJiNTEzYmFhZmU5NGYyMTAxOTZjNjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchUhN7AFqTQxMjIwNDk4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "867d28b2249f0eb694bb513baafe94f210196c63", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/867d28b2249f0eb694bb513baafe94f210196c63", "committedDate": "2020-05-11T22:52:22Z", "message": "SOLR-14473: improve Overseer Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f22390251678293b2f729a5756396ac8c06d70e", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/8f22390251678293b2f729a5756396ac8c06d70e", "committedDate": "2020-05-11T23:17:23Z", "message": "SOLR-14473 Overseer Javadoc update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMTUwMzEy", "url": "https://github.com/apache/lucene-solr/pull/1510#pullrequestreview-411150312", "createdAt": "2020-05-13T17:35:00Z", "commit": {"oid": "8f22390251678293b2f729a5756396ac8c06d70e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzozNTowMFrOGU8V5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo0MTo1M1rOGU8lig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMzM0OA==", "bodyText": "Minor: \"a thread from a thread pool\" - might be better to specify which? And also to specify how many threads are typically available? (e.g. OverseerCollectionMessageHandlerThreadFactory with 5-10 threads)", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424613348", "createdAt": "2020-05-13T17:35:00Z", "author": {"login": "megancarey"}, "path": "solr/core/src/java/org/apache/solr/cloud/Overseer.java", "diffHunk": "@@ -79,8 +79,60 @@\n import com.codahale.metrics.Timer;\n \n /**\n- * Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n- * collections, shards, replicas and setting various properties.\n+ * <p>Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n+ * collections, shards, replicas and setting various properties.</p>\n+ *\n+ * <p>The <b>Overseer</b> is a single elected node in the SolrCloud cluster that is in charge of interactions with\n+ * ZooKeeper that require global synchronization. It also hosts the Collection API implementation and the\n+ * Autoscaling framework.</p>\n+ *\n+ * <p>The Overseer deals with:</p>\n+ * <ul>\n+ *   <li>Cluster State updates, i.e. updating Collections' <code>state.json</code> files in ZooKeeper (or previously the\n+ *   <code>clusterstate.json</code>), see {@link ClusterStateUpdater},</li>\n+ *   <li>Collection API implementation, including Autoscaling replica placement computation, see\n+ *   {@link OverseerCollectionConfigSetProcessor} and {@link OverseerCollectionMessageHandler} (and the example below),</li>\n+ *   <li>Updating Config Sets, see {@link OverseerCollectionConfigSetProcessor} and {@link OverseerConfigSetMessageHandler},</li>\n+ *   <li>Autoscaling triggers, see {@link org.apache.solr.cloud.autoscaling.OverseerTriggerThread}.</li>\n+ * </ul>\n+ *\n+ * <p>The nodes in the cluster communicate with the Overseer over queues implemented in ZooKeeper. There are essentially\n+ * two queues:</p>\n+ * <ol>\n+ *   <li>The <b>state update queue</b>, through which nodes request the Overseer to update the <code>state.json</code> file of a\n+ *   Collection in ZooKeeper. This queue is in Zookeeper at <code>/overseer/queue</code>,</li>\n+ *   <li>A queue shared between <b>Collection API and Config Set API</b> requests. This queue is in Zookeeper at\n+ *   <code>/overseer/collection-queue-work</code>.</li>\n+ * </ol>\n+ *\n+ * <p>An example of the steps involved in the Overseer processing a Collection creation API call:</p>\n+ * <ol>\n+ *   <li>Client uses the Collection API with <code>CREATE</code> action and reaches a node of the cluster,</li>\n+ *   <li>The node (via {@link CollectionsHandler}) enqueues the request into the <code>/overseer/collection-queue-work</code>\n+ *   queue in ZooKeepeer,</li>\n+ *   <li>The {@link OverseerCollectionConfigSetProcessor} running on the Overseer node dequeues the message and using a\n+ *   thread from a thread pool hands it for processing to {@link OverseerCollectionMessageHandler},</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f22390251678293b2f729a5756396ac8c06d70e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxNTc4OA==", "bodyText": "Minor (and I know this could snowball): might be nice to add a note in OverseerTaskQueue. The doc for that class is pretty uninformative.", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424615788", "createdAt": "2020-05-13T17:39:13Z", "author": {"login": "megancarey"}, "path": "solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue.java", "diffHunk": "@@ -51,9 +51,16 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * A ZK-based distributed queue. Optimized for single-consumer,\n+ * <p>A ZK-based distributed queue. Optimized for single-consumer,\n  * multiple-producer: if there are multiple consumers on the same ZK queue,\n- * the results should be correct but inefficient\n+ * the results should be correct but inefficient.</p>\n+ *\n+ * <p>This implementation (with help from subclass {@link OverseerTaskQueue}) is used for the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f22390251678293b2f729a5756396ac8c06d70e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxNzM1NA==", "bodyText": "Minor: link to Overseer.ClusterStateUpdater instead of just naming the queue here", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424617354", "createdAt": "2020-05-13T17:41:53Z", "author": {"login": "megancarey"}, "path": "solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java", "diffHunk": "@@ -70,6 +70,19 @@ public boolean isHigherOrEqual(LockLevel that) {\n     }\n   }\n \n+  /**\n+   * <p>(Mostly) Collection API actions that can be sent by nodes to the Overseer over the <code>/overseer/collection-queue-work</code>\n+   * ZooKeeper queue.</p>\n+   *\n+   * <p>Some of these actions are also used over the cluster state update queue at <code>/overseer/queue</code>, and really", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f22390251678293b2f729a5756396ac8c06d70e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjQ0NDQw", "url": "https://github.com/apache/lucene-solr/pull/1510#pullrequestreview-411244440", "createdAt": "2020-05-13T19:44:14Z", "commit": {"oid": "8f22390251678293b2f729a5756396ac8c06d70e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTo0NDoxNFrOGVA56Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTo1MzowNFrOGVBMYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4ODEwNQ==", "bodyText": "While I agree with the point you're making, this reads a bit snarky or sarcastic. Maybe leave the suggested improvement as a TODO?", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424688105", "createdAt": "2020-05-13T19:44:14Z", "author": {"login": "madrob"}, "path": "solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java", "diffHunk": "@@ -70,6 +70,19 @@ public boolean isHigherOrEqual(LockLevel that) {\n     }\n   }\n \n+  /**\n+   * <p>(Mostly) Collection API actions that can be sent by nodes to the Overseer over the <code>/overseer/collection-queue-work</code>\n+   * ZooKeeper queue.</p>\n+   *\n+   * <p>Some of these actions are also used over the cluster state update queue at <code>/overseer/queue</code>, and really", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f22390251678293b2f729a5756396ac8c06d70e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4OTU0OQ==", "bodyText": "I don't think it's worth bringing up clusterstate.json here, it is very very old.", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424689549", "createdAt": "2020-05-13T19:47:03Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/cloud/Overseer.java", "diffHunk": "@@ -79,8 +79,60 @@\n import com.codahale.metrics.Timer;\n \n /**\n- * Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n- * collections, shards, replicas and setting various properties.\n+ * <p>Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n+ * collections, shards, replicas and setting various properties.</p>\n+ *\n+ * <p>The <b>Overseer</b> is a single elected node in the SolrCloud cluster that is in charge of interactions with\n+ * ZooKeeper that require global synchronization. It also hosts the Collection API implementation and the\n+ * Autoscaling framework.</p>\n+ *\n+ * <p>The Overseer deals with:</p>\n+ * <ul>\n+ *   <li>Cluster State updates, i.e. updating Collections' <code>state.json</code> files in ZooKeeper (or previously the\n+ *   <code>clusterstate.json</code>), see {@link ClusterStateUpdater},</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f22390251678293b2f729a5756396ac8c06d70e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MjIzOQ==", "bodyText": "I'm a little squeamish about linking out to an arbitrary Google Doc from our javadoc. Either the information should be here, or at worst an Apache hosted wiki page.", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424692239", "createdAt": "2020-05-13T19:52:01Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/cloud/Overseer.java", "diffHunk": "@@ -79,8 +79,60 @@\n import com.codahale.metrics.Timer;\n \n /**\n- * Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n- * collections, shards, replicas and setting various properties.\n+ * <p>Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n+ * collections, shards, replicas and setting various properties.</p>\n+ *\n+ * <p>The <b>Overseer</b> is a single elected node in the SolrCloud cluster that is in charge of interactions with\n+ * ZooKeeper that require global synchronization. It also hosts the Collection API implementation and the\n+ * Autoscaling framework.</p>\n+ *\n+ * <p>The Overseer deals with:</p>\n+ * <ul>\n+ *   <li>Cluster State updates, i.e. updating Collections' <code>state.json</code> files in ZooKeeper (or previously the\n+ *   <code>clusterstate.json</code>), see {@link ClusterStateUpdater},</li>\n+ *   <li>Collection API implementation, including Autoscaling replica placement computation, see\n+ *   {@link OverseerCollectionConfigSetProcessor} and {@link OverseerCollectionMessageHandler} (and the example below),</li>\n+ *   <li>Updating Config Sets, see {@link OverseerCollectionConfigSetProcessor} and {@link OverseerConfigSetMessageHandler},</li>\n+ *   <li>Autoscaling triggers, see {@link org.apache.solr.cloud.autoscaling.OverseerTriggerThread}.</li>\n+ * </ul>\n+ *\n+ * <p>The nodes in the cluster communicate with the Overseer over queues implemented in ZooKeeper. There are essentially\n+ * two queues:</p>\n+ * <ol>\n+ *   <li>The <b>state update queue</b>, through which nodes request the Overseer to update the <code>state.json</code> file of a\n+ *   Collection in ZooKeeper. This queue is in Zookeeper at <code>/overseer/queue</code>,</li>\n+ *   <li>A queue shared between <b>Collection API and Config Set API</b> requests. This queue is in Zookeeper at\n+ *   <code>/overseer/collection-queue-work</code>.</li>\n+ * </ol>\n+ *\n+ * <p>An example of the steps involved in the Overseer processing a Collection creation API call:</p>\n+ * <ol>\n+ *   <li>Client uses the Collection API with <code>CREATE</code> action and reaches a node of the cluster,</li>\n+ *   <li>The node (via {@link CollectionsHandler}) enqueues the request into the <code>/overseer/collection-queue-work</code>\n+ *   queue in ZooKeepeer,</li>\n+ *   <li>The {@link OverseerCollectionConfigSetProcessor} running on the Overseer node dequeues the message and using a\n+ *   thread from a thread pool hands it for processing to {@link OverseerCollectionMessageHandler},</li>\n+ *   <li>Command {@link org.apache.solr.cloud.api.collections.CreateCollectionCmd} then executes and does:\n+ *   <ol>\n+ *     <li>Update some state directly in ZooKeeper (creating collection znode),</li>\n+ *     <li>Compute replica placement on available nodes in the cluster,</li>\n+ *     <li>Enqueue a state change request for creating the <code>state.json</code> file for the collection in ZooKeeper.\n+ *     This is done by enqueuing a message in <code>/overseer/queue</code>,</li>\n+ *     <li>The command then waits for the update to be seen in ZooKeeper...</li>\n+ *   </ol></li>\n+ *   <li>The {@link ClusterStateUpdater} (also running on the Overseer node) dequeues the state change message and creates the\n+ *   <code>state.json</code> file in ZooKeeper for the Collection. All the work of the cluster state updater\n+ *   (creations, updates, deletes) is done sequentially for the whole cluster by a single thread.</li>\n+ *   <li>The {@link org.apache.solr.cloud.api.collections.CreateCollectionCmd} sees the state change in\n+ *   ZooKeeper and:\n+ *   <ol start=\"5\">\n+ *     <li>Builds and sends requests to each node to create the appropriate cores for all the replicas of all shards\n+ *     of the collection.</li>\n+ *   </ol></li>\n+ *   <li>The collection creation command has succeeded and the client receives a success return.</li>\n+ * </ol>\n+ *\n+ * See also <a href=\"https://docs.google.com/document/d/1KTHq3noZBVUQ7QNuBGEhujZ_duwTVpAsvN3Nz5anQUY/\">Overseer google doc</a>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f22390251678293b2f729a5756396ac8c06d70e"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MjgzNQ==", "bodyText": "I think we can cordon this off behind @implNote and @implSpec Javadocs tags to improve the readability", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424692835", "createdAt": "2020-05-13T19:53:04Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue.java", "diffHunk": "@@ -51,9 +51,16 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * A ZK-based distributed queue. Optimized for single-consumer,\n+ * <p>A ZK-based distributed queue. Optimized for single-consumer,\n  * multiple-producer: if there are multiple consumers on the same ZK queue,\n- * the results should be correct but inefficient\n+ * the results should be correct but inefficient.</p>\n+ *\n+ * <p>This implementation (with help from subclass {@link OverseerTaskQueue}) is used for the\n+ * <code>/overseer/collection-queue-work</code> queue used for Collection and Config Set API calls to the Overseer.</p>\n+ *\n+ * <p>In order to enqueue a message into this queue, a {@link CreateMode#EPHEMERAL_SEQUENTIAL} response node is created", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f22390251678293b2f729a5756396ac8c06d70e"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fdb555d6b94465ba4583dc020970fef88a117e4", "author": {"user": {"login": "murblanc", "name": "Ilan Ginzburg"}}, "url": "https://github.com/apache/lucene-solr/commit/2fdb555d6b94465ba4583dc020970fef88a117e4", "committedDate": "2020-05-14T21:15:41Z", "message": "SOLR-14473: integrate PR comments from Mike Drob and Megan Carey"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjA0OTgx", "url": "https://github.com/apache/lucene-solr/pull/1510#pullrequestreview-412204981", "createdAt": "2020-05-14T21:39:58Z", "commit": {"oid": "2fdb555d6b94465ba4583dc020970fef88a117e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2714, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}