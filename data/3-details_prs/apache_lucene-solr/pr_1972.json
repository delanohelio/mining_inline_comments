{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMDgwODE5", "number": 1972, "title": "SOLR-14915: Prometheus-exporter does not depend on Solr-core any longer", "bodyText": "And enhanced gradle config to operate as an application\nhttps://issues.apache.org/jira/browse/SOLR-14915\nIt's cool that I can now run this thing via gw run :-)\nThe Java-Application plugin for Gradle has other nice distribution facilities that render our attempts to hand-edit startup scripts obsolete.  However, using it would mean a much larger Solr distribution as it'd have duplicated libs that Solr has.  Any way, it's nice to leave here for people who might want to activate it manually.\nAs-is there is something not quite right.  I modified the solr-exporter bash script to not add all of the Solr server libs to the classpath.  However, the assembly task only populates a small number of dependencies into the \"lib\" here.  In particular I don't see transitive dependencies such as Jackson (used by jackson-jq).    @dweiss do you have suggestions here?  Alternatively, I could remove my changes to solr-exporter scripts and accept that they are going to add a ton more dependencies than actually needed.  That's okay.\nlucene-solr/solr/packaging/build/solr-9.0.0-SNAPSHOT/contrib/prometheus-exporter\n\u251c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 solr-exporter\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 solr-exporter.cmd\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test\n\u251c\u2500\u2500 conf\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 grafana-solr-dashboard.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 solr-exporter-config.xml\n\u2514\u2500\u2500 lib\n    \u251c\u2500\u2500 argparse4j-0.8.1.jar\n    \u251c\u2500\u2500 disruptor-3.4.2.jar\n    \u251c\u2500\u2500 jackson-jq-0.0.8.jar\n    \u251c\u2500\u2500 simpleclient-0.2.0.jar\n    \u251c\u2500\u2500 simpleclient_common-0.2.0.jar\n    \u2514\u2500\u2500 simpleclient_httpserver-0.2.0.jar", "createdAt": "2020-10-11T05:09:42Z", "url": "https://github.com/apache/lucene-solr/pull/1972", "merged": true, "mergeCommit": {"oid": "021de9f45f56259b3d1461595bc6530189255a2a"}, "closed": true, "closedAt": "2020-11-27T20:08:34Z", "author": {"login": "dsmiley"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRX16VgH2gAyNTAxMDgwODE5OjAxNDAwYzNkZTU1MDVmODgwZTNhYThhZjQzYTkyYTIzNzQwZTQxYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdf26uJAH2gAyNTAxMDgwODE5OmE5NTJiNGY3Yzk2MTYzZDUyNzkyYzViZGU2NzMyYTk5ZGFlYWUxOGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "01400c3de5505f880e3aa8af43a92a23740e41aa", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/01400c3de5505f880e3aa8af43a92a23740e41aa", "committedDate": "2020-10-11T04:40:39Z", "message": "SOLR-14915: Prometheus-exporter does not depend on Solr-core any longer\nEnhanced gradle config to operate as an application"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTQ4NTM1", "url": "https://github.com/apache/lucene-solr/pull/1972#pullrequestreview-506148535", "createdAt": "2020-10-11T06:40:52Z", "commit": {"oid": "01400c3de5505f880e3aa8af43a92a23740e41aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNjo0MDo1MlrOHfk9wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNjo0MDo1MlrOHfk9wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3MzUzNw==", "bodyText": "XXE_DOCUMENT:  The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks (details)", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r502873537", "createdAt": "2020-10-11T06:40:52Z", "author": {"login": "sonatype-lift"}, "path": "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java", "diffHunk": "@@ -66,13 +76,27 @@ public PrometheusExporterSettings getSettings() {\n     return searchConfiguration;\n   }\n \n-  public static MetricsConfiguration from(XmlConfigFile config) throws Exception {\n-    Node settings = config.getNode(\"/config/settings\", false);\n+  public static MetricsConfiguration from(Path file) throws Exception {\n+    // See solr-core XmlConfigFile\n+    final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+    try {\n+      dbf.setXIncludeAware(true);\n+      dbf.setNamespaceAware(true);\n+    } catch (UnsupportedOperationException e) {\n+      log.warn(\"{} XML parser doesn't support XInclude option\", file);\n+    }\n+\n+    final Document document = dbf.newDocumentBuilder().parse(file.toFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01400c3de5505f880e3aa8af43a92a23740e41aa"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eefa75e9d9b07a448eb1d6e787c4516273b5e32", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/6eefa75e9d9b07a448eb1d6e787c4516273b5e32", "committedDate": "2020-11-14T20:56:44Z", "message": "Merge branch 'master' into solr-14915-prometheusDeps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afa35428b5961f6f4b44e6c559089c4177ddce37", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/afa35428b5961f6f4b44e6c559089c4177ddce37", "committedDate": "2020-11-15T05:28:26Z", "message": "Don't use \"application\" plugin but add \"run\" task.\nUse own log4j2.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ffdf9ed21de194c90f65093764b867c1cd996f8", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/0ffdf9ed21de194c90f65093764b867c1cd996f8", "committedDate": "2020-11-15T06:37:32Z", "message": "Assemble all dependencies except logging and SolrJ's."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a6e3195dc099d4cb484b123678091b8a12eb8f6", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/1a6e3195dc099d4cb484b123678091b8a12eb8f6", "committedDate": "2020-11-15T07:09:09Z", "message": "refer to solr-exporter-config.xml in conf/ because it's referenced directly, not on the classpath.  Ironically this undoes SOLR-14957 a little bit."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ba0d157607e4897203e06c0b9b5a9fff7af8d69", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/2ba0d157607e4897203e06c0b9b5a9fff7af8d69", "committedDate": "2020-11-15T07:20:37Z", "message": "Remove accidental IDE auto-declaration?"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwODEwOTM3", "url": "https://github.com/apache/lucene-solr/pull/1972#pullrequestreview-530810937", "createdAt": "2020-11-15T15:55:28Z", "commit": {"oid": "2ba0d157607e4897203e06c0b9b5a9fff7af8d69"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNTo1NToyOFrOHzgy7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNjowNDowMFrOHzg20A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3Njc1MQ==", "bodyText": "It might be considered hacky to reference a configuration of a specific sub-project.  Maybe libExt could be declared more top-level and be called \"loggingLibs\" or something.", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r523776751", "createdAt": "2020-11-15T15:55:28Z", "author": {"login": "dsmiley"}, "path": "gradle/solr/packaging.gradle", "diffHunk": "@@ -76,7 +76,8 @@ configure(allprojects.findAll {project -> project.path.startsWith(\":solr:contrib\n             return true\n           }\n         }\n-        return externalLibs - configurations.solrPlatformLibs\n+        // libExt has logging libs, which we don't want.  Lets users decide what they want.\n+        return externalLibs - configurations.solrPlatformLibs - project(':solr:server').configurations.getByName('libExt')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba0d157607e4897203e06c0b9b5a9fff7af8d69"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3Njg1MQ==", "bodyText": "Instead, /conf is put on the classpath, and thus \"log4j2.xml\" is loaded automatically based on Log4j2's automatic resolution.", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r523776851", "createdAt": "2020-11-15T15:56:27Z", "author": {"login": "dsmiley"}, "path": "solr/contrib/prometheus-exporter/bin/solr-exporter", "diffHunk": "@@ -123,8 +111,6 @@ else\n     GC_TUNE=\"$GC_TUNE\"\n fi\n \n-EXTRA_JVM_ARGUMENTS=\"-Dlog4j.configurationFile=file:\"$BASEDIR\"/../../server/resources/log4j2-console.xml\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba0d157607e4897203e06c0b9b5a9fff7af8d69"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3NzA2MQ==", "bodyText": "Logging dependencies in Java is a pain.  In a separate issue/PR, we should explore this approach: https://blog.gradle.org/addressing-logging-complexity-capabilities", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r523777061", "createdAt": "2020-11-15T15:58:19Z", "author": {"login": "dsmiley"}, "path": "solr/contrib/prometheus-exporter/build.gradle", "diffHunk": "@@ -31,17 +30,57 @@ dependencies {\n     exclude group: \"org.jruby.joni\", module: \"joni\"\n   })\n   implementation ('net.sourceforge.argparse4j:argparse4j')\n+  implementation ('com.github.ben-manes.caffeine:caffeine', {\n+    exclude group: \"org.checkerframework\", module: \"checker-qual\"\n+    exclude group: \"com.google.errorprone\", module: \"error_prone_annotations\"\n+  })\n \n-  testImplementation ('org.apache.httpcomponents:httpcore')\n-  testImplementation ('org.eclipse.jetty:jetty-servlet')\n+  runtimeOnly 'org.apache.logging.log4j:log4j-api'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba0d157607e4897203e06c0b9b5a9fff7af8d69"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3Nzc0NA==", "bodyText": "@HoustonPutman you removed the conf/ and I'm putting it back.  I'm not sure why it worked with it gone.  It may be related to other changes in this PR that it's needed again.  I tested that this works here both with gw run and via executing normally from the built assembly.  I didn't test Docker yet.", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r523777744", "createdAt": "2020-11-15T16:04:00Z", "author": {"login": "dsmiley"}, "path": "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java", "diffHunk": "@@ -68,7 +66,7 @@\n   private static final String[] ARG_CONFIG_FLAGS = {\"-f\", \"--config-file\"};\n   private static final String ARG_CONFIG_METAVAR = \"CONFIG\";\n   private static final String ARG_CONFIG_DEST = \"configFile\";\n-  private static final String ARG_CONFIG_DEFAULT = \"solr-exporter-config.xml\";\n+  private static final String ARG_CONFIG_DEFAULT = \"conf/solr-exporter-config.xml\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba0d157607e4897203e06c0b9b5a9fff7af8d69"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f9a6647178a5636f535b05b2d146670d26b1064", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/6f9a6647178a5636f535b05b2d146670d26b1064", "committedDate": "2020-11-20T17:52:55Z", "message": "Allow reading of the default prometheus exporter config from the classpath."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f205169019e642519581c72d30b4f9449d7b469", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/2f205169019e642519581c72d30b4f9449d7b469", "committedDate": "2020-11-20T17:55:12Z", "message": "Removing unneeded imports."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzE3NjYz", "url": "https://github.com/apache/lucene-solr/pull/1972#pullrequestreview-535717663", "createdAt": "2020-11-20T19:27:23Z", "commit": {"oid": "6f9a6647178a5636f535b05b2d146670d26b1064"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOToyNzoyM1rOH3d-wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOToyNzoyM1rOH3d-wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkyNDkyOQ==", "bodyText": "PATH_TRAVERSAL_IN:  This API (java/io/File.(Ljava/lang/String;)V) reads a file whose location might be specified by user input (details)", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r527924929", "createdAt": "2020-11-20T19:27:23Z", "author": {"login": "sonatype-lift"}, "path": "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java", "diffHunk": "@@ -66,13 +81,36 @@ public PrometheusExporterSettings getSettings() {\n     return searchConfiguration;\n   }\n \n-  public static MetricsConfiguration from(XmlConfigFile config) throws Exception {\n-    Node settings = config.getNode(\"/config/settings\", false);\n+  public static MetricsConfiguration from(String path) throws Exception {\n+    // See solr-core XmlConfigFile\n+    final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+    try {\n+      dbf.setXIncludeAware(true);\n+      dbf.setNamespaceAware(true);\n+    } catch (UnsupportedOperationException e) {\n+      log.warn(\"{} XML parser doesn't support XInclude option\", path);\n+    }\n+\n+    Document document;\n+    File file = new File(path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f9a6647178a5636f535b05b2d146670d26b1064"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzE3Njc2", "url": "https://github.com/apache/lucene-solr/pull/1972#pullrequestreview-535717676", "createdAt": "2020-11-20T19:27:24Z", "commit": {"oid": "6f9a6647178a5636f535b05b2d146670d26b1064"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOToyNzoyNFrOH3d-yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOToyNzoyNFrOH3d-yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkyNDkzNg==", "bodyText": "PATH_TRAVERSAL_IN:  This API (java/io/File.(Ljava/lang/String;)V) reads a file whose location might be specified by user input (details)", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r527924936", "createdAt": "2020-11-20T19:27:24Z", "author": {"login": "sonatype-lift"}, "path": "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java", "diffHunk": "@@ -214,12 +212,11 @@ public static void main(String[] args) {\n     }\n   }\n \n-  private static MetricsConfiguration loadMetricsConfiguration(Path configPath) {\n-    try (SolrResourceLoader loader = new SolrResourceLoader(configPath.getParent())) {\n-      XmlConfigFile config = new XmlConfigFile(loader, configPath.getFileName().toString(), null, null);\n-      return MetricsConfiguration.from(config);\n+  private static MetricsConfiguration loadMetricsConfiguration(String configPath) {\n+    try {\n+      return MetricsConfiguration.from(configPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f9a6647178a5636f535b05b2d146670d26b1064"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "137c306fc08efe8b802318fd8e9790b4d35a51ae", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/137c306fc08efe8b802318fd8e9790b4d35a51ae", "committedDate": "2020-11-23T02:29:33Z", "message": "Changing from File to Path"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MTU3OTk4", "url": "https://github.com/apache/lucene-solr/pull/1972#pullrequestreview-536157998", "createdAt": "2020-11-23T03:13:14Z", "commit": {"oid": "137c306fc08efe8b802318fd8e9790b4d35a51ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwMzoxMzoxNFrOH3-QAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwMzoxMzoxNFrOH3-QAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MzYzMg==", "bodyText": "This parse(String) is documented to take a URI.  I don't think a file path is a URI?  If you look at the implementation of the variant that takes a File, it converts it to a URI then and then an ASCII string.  This could be done via path.toUri().toASCIIString().   FWIW I'd also be okay with just doing path.toFile() here.", "url": "https://github.com/apache/lucene-solr/pull/1972#discussion_r528453632", "createdAt": "2020-11-23T03:13:14Z", "author": {"login": "dsmiley"}, "path": "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/MetricsConfiguration.java", "diffHunk": "@@ -77,22 +79,22 @@ public PrometheusExporterSettings getSettings() {\n     return searchConfiguration;\n   }\n \n-  public static MetricsConfiguration from(String path) throws Exception {\n+  public static MetricsConfiguration from(String resource) throws Exception {\n     // See solr-core XmlConfigFile\n     final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n     try {\n       dbf.setXIncludeAware(true);\n       dbf.setNamespaceAware(true);\n     } catch (UnsupportedOperationException e) {\n-      log.warn(\"{} XML parser doesn't support XInclude option\", path);\n+      log.warn(\"{} XML parser doesn't support XInclude option\", resource);\n     }\n \n     Document document;\n-    File file = new File(path);\n-    if (file.isFile()) {\n-      document = dbf.newDocumentBuilder().parse(file);\n+    Path path = Path.of(resource);\n+    if (Files.exists(path)) {\n+      document = dbf.newDocumentBuilder().parse(path.toAbsolutePath().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "137c306fc08efe8b802318fd8e9790b4d35a51ae"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11bea198e55a02dc7d957a59c685716b18b135ee", "author": {"user": {"login": "HoustonPutman", "name": "Houston Putman"}}, "url": "https://github.com/apache/lucene-solr/commit/11bea198e55a02dc7d957a59c685716b18b135ee", "committedDate": "2020-11-23T16:42:33Z", "message": "Fix path to URI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bec84ce2a1d60480ce0c54b78e83a70f83e7b058", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/bec84ce2a1d60480ce0c54b78e83a70f83e7b058", "committedDate": "2020-11-23T21:13:17Z", "message": "CHANGES.md for contrib/prometheus-exporter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a952b4f7c96163d52792c5bde6732a99daeae18c", "author": {"user": {"login": "dsmiley", "name": "David Smiley"}}, "url": "https://github.com/apache/lucene-solr/commit/a952b4f7c96163d52792c5bde6732a99daeae18c", "committedDate": "2020-11-25T04:47:54Z", "message": "remove newline"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2722, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}