{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzcxMzIx", "number": 1262, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1MDowMVrODgXNaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1NjoyNFrODgXUXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjYxMjg5OnYy", "diffSide": "RIGHT", "path": "gradle/generation/snowball.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1MDowMVrOFqhvpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMjowNTozMlrOFqiJmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNzM4MQ==", "bodyText": "the latter could be defined relative to snowballWorkDir (${snowballWorkDir}/stemmers)?", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380137381", "createdAt": "2020-02-17T11:50:01Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NDAyNA==", "bodyText": "Yes, duh. I'll fix!", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380144024", "createdAt": "2020-02-17T12:05:32Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNzM4MQ=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjYxNzU5OnYy", "diffSide": "RIGHT", "path": "gradle/generation/snowball.gradle", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1MTo0NVrOFqhyeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMjozOTo0NFrOFqjDjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODEwNA==", "bodyText": "The \"cleanXXX\" is a rule in gradle... don't know if it's not going to clash with something. Perhaps rename to \"recompileSnowballCheckout\" or something like this?", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380138104", "createdAt": "2020-02-17T11:51:45Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODU1OQ==", "bodyText": "Oh. Could also be a doFirst { project.delete snowballPatchedDir } on the downloadSnowballStemmers?", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380138559", "createdAt": "2020-02-17T11:52:39Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODEwNA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MzE5Mw==", "bodyText": "yeah mainly i'm after two things:\n\ndon't download stuff if you have downloaded it before (uses ETag check). Some files are quite large.\nbefore patching, make a clean copy of checkout. This way we don't ever try to apply patch twice and don't force downloading again.\n\nWe can change to a doFirst I think. Lemme try.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380143193", "createdAt": "2020-02-17T12:03:37Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODEwNA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NDgxOA==", "bodyText": "At first hand the doFirst trick should be equivalent to the task dependencies the way you defined them. Let me know if this turns into a problem though.\nA way to properly \"download once\" would be to define a configuration dependency with a custom resolver and let gradle cache the artifact... but it's too much of work for a small gain I think. What you did is already an improvement and we regenerate that stuff infrequently.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380144818", "createdAt": "2020-02-17T12:07:26Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODEwNA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE1ODg2MQ==", "bodyText": "It worked fine as a doFirst. Here is the issue: it is nice that gradlew snowball is fast and not downloading 30MB files (!) every time you run it, if you are trying to iterate locally, for example to actually upgrade it.\nSo while it may be infrequent, I wanted to make it more pleasant for running this over and over until you get it right, because you will be dealing with plenty of other unpleasant stuff...", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380158861", "createdAt": "2020-02-17T12:39:44Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODEwNA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjYyMjU3OnYy", "diffSide": "RIGHT", "path": "gradle/generation/snowball.gradle", "isResolved": false, "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1MzoyM1rOFqh1gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoxNjowNVrOFql7Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA==", "bodyText": "ant.patch just redirects to local filesystem patch command (doesn't work on Windows). Sigh. Fine with me though.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380138880", "createdAt": "2020-02-17T11:53:23Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NDUxOQ==", "bodyText": "I think if you have patch.exe on windows then this part will work?", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380144519", "createdAt": "2020-02-17T12:06:38Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NjA2Mw==", "bodyText": "Not many people do (I don't). You'd need to run under cygwin or have msys tools installed (which are recompiled for Windows). I don't think this is a problem. I don't think there is a single Windows developer who isn't fluent on other environments. If a regeneration task does not work on Windows so be it (I'd make it complain gracefully but this can come later).", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380146063", "createdAt": "2020-02-17T12:10:24Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NjYwNA==", "bodyText": "I looked into platform-independent patch command implementation but I didn't find any (jgit's is inherently broken; @kojisekig wrote something for jenkins but I didn't look into that - maybe he'll have some more insight).", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380146604", "createdAt": "2020-02-17T12:11:39Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE2MDc5Mg==", "bodyText": "Maybe we can focus on trying to remove the patch completely (try to package up some PRs for snowball team) and it gets fixed even before their Makefile supports windows :)\nI guess I optimistically hope the patch solution is a temporary one. If you look deeper into shell script and snowball GNUMakefile, it may be obvious that we have other issues to fix for windows first.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380160792", "createdAt": "2020-02-17T12:44:23Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE2OTY2MA==", "bodyText": "That download task is broken in that it still executes actions even if the artifact is up to date... You can just delete the unpacked stuff and not the downloaded zip; then it'll wipe and unzip but not download again?", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380169660", "createdAt": "2020-02-17T13:03:55Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE3MzY1OQ==", "bodyText": "@dweiss I can assure you it does not download again. Please look at the PR, maybe the names are confusing and we can clean it up? I think logic is correct.\nHere is what happens (first run):\n\ndownload github.com/snowball/xyz.zip to snowball.zip. It extracts this to stemmers/. It saves Etag to stemmers.json.\ncreate a clean copy of stemmers/ named patched/.\napply patch to patched/.\n\nSecond run:\n\nTries to download, but sends request with If-None-Match: a4gk4k4.... Remote server returns a HTTP 304 (Not Modified). This would not be the case if, e.g. someone bumped the snowball commit hash locally.\ncreate a clean copy of stemmers/ named patched/.\napply patch to patched/.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380173659", "createdAt": "2020-02-17T13:12:45Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE3NTM4Ng==", "bodyText": "I know it doesn't download twice but if it declared inputs/ outputs or upToDateWhen correctly then it shouldn't run any actions attached to the task (doFirst/ doLast) and it does it now, regardless of whether it downloaded the artifact or not, right (that was my impression from other sections of the code, no this patch).\nAnyway, if it's working then fine. As for different versions of patch -- throw git/ jgit's implementation in the mix... they all seem to be behaving differently in corner cases.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380175386", "createdAt": "2020-02-17T13:16:35Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE3NTYwNA==", "bodyText": "note this same trick (HTTP cache revalidation) cannot be used for moman, because its server disables caching completely and doesn't send such headers. In fact the server does not even respond correctly to requests with curl (unless you modify User-Agent header) so it is clear they are not excited about lots of automated requests, so it should be improved some other way...", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380175604", "createdAt": "2020-02-17T13:17:02Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE3ODMwOA==", "bodyText": "@dweiss ok, I will look at inputs/outputs/upToDateWhen. Maybe a simpler way is for these tools to download to a file with commit's hash in the name and declare such stuff? We'd be able to fix moman to not download over and over too (cache headers cannot work over there).", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380178308", "createdAt": "2020-02-17T13:22:43Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE4MjYwMw==", "bodyText": "This isn't something you have to look into, Rob. I'm just adding some comments, that's it. The patch is fine.\nThe simplest way of making the task not download the file again would be to declare an inputs.file(path-to-zip) I think. But it's really a marginal issue, I wouldn't spend any special time on this if it works.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380182603", "createdAt": "2020-02-17T13:31:21Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE4NTYzNA==", "bodyText": "@dweiss So we can add these dependencies, but I just don't want it to patch twice :) That's kinda why their is an explicit \"clean\" here to create patched/ work area.\nI think behavior is fast enough for a first go and we can followup? It takes 26s the first time and 4s the second time for me.\nI am worried about making it too smart and declaring such dependencies incorrectly. I want to make sure it does the right thing if you e.g. update commit hash/patch file, or change script, so that its easier to upgrade snowball.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380185634", "createdAt": "2020-02-17T13:37:36Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE4OTM5NQ==", "bodyText": "It wasn't my intention to change the patch - these were my random musings about gradle, the download task, etc. It's definitely fine for committing in and can be improved later (or never if we can convince people from snowball to generate better code).", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380189395", "createdAt": "2020-02-17T13:44:54Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE5MDcyMg==", "bodyText": "Yes but if you teach a man to fish... I will look into it. Its just tricky, for example patching task in my mind depends on \"cleanCheckoutOfCurrentlySpecifiedCommitHash + input patch file itself\". and maybe we must \"touch\" an output file indicating patch was applied. This way it doesn't try to apply it twice. At least this is how i would do it with something like make", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380190722", "createdAt": "2020-02-17T13:47:14Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwNTg2Mg==", "bodyText": "Declare inputs on the zip and move applying the patch to inside the download task action (you don't even have to copy the unpacked folder then), execute patching in doLast; if it fails the entire task won't be up-to-date (will be re-run)? Just a thought.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380205862", "createdAt": "2020-02-17T14:16:05Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODg4MA=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjYyNTYzOnYy", "diffSide": "RIGHT", "path": "gradle/generation/snowball.gradle", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1NDozM1rOFqh3cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMjozMToxMFrOFqi1Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzOTM3Nw==", "bodyText": "Why not move all these tasks into lucene:analysis:common configuration? Are they reused anywhere else? If not then it'd make everything local to the project.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380139377", "createdAt": "2020-02-17T11:54:33Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")\n+    }\n+  }\n+}\n+\n+configure(project(\":lucene:analysis:common\")) {\n+  task snowballGen() {\n+    description \"Patch and Regenerate snowball sources, stopwords, and tests\"\n+    group \"generation\"\n+    dependsOn rootProject.patchSnowball", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NTA5OA==", "bodyText": "I can look into it. I am pretty clueless on gradle, I based this on the moman regeneration that is located in gradle/generation/util.gradle. Because it is doing similar stuff (downloading zip and running commands).", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380145098", "createdAt": "2020-02-17T12:08:07Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")\n+    }\n+  }\n+}\n+\n+configure(project(\":lucene:analysis:common\")) {\n+  task snowballGen() {\n+    description \"Patch and Regenerate snowball sources, stopwords, and tests\"\n+    group \"generation\"\n+    dependsOn rootProject.patchSnowball", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzOTM3Nw=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NTI4MQ==", "bodyText": "Commit it in, I'll correct it afterwards, no worries.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380145281", "createdAt": "2020-02-17T12:08:36Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")\n+    }\n+  }\n+}\n+\n+configure(project(\":lucene:analysis:common\")) {\n+  task snowballGen() {\n+    description \"Patch and Regenerate snowball sources, stopwords, and tests\"\n+    group \"generation\"\n+    dependsOn rootProject.patchSnowball", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzOTM3Nw=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE1MjQwMg==", "bodyText": "ok I think this is now better. Now tasks are under analysis common, downloads stuff to lucene/analysis/common/build instead of build/ and all tasks are under that project, except a single top-level one with the description that depends on it.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380152402", "createdAt": "2020-02-17T12:24:52Z", "author": {"login": "rmuir"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")\n+    }\n+  }\n+}\n+\n+configure(project(\":lucene:analysis:common\")) {\n+  task snowballGen() {\n+    description \"Patch and Regenerate snowball sources, stopwords, and tests\"\n+    group \"generation\"\n+    dependsOn rootProject.patchSnowball", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzOTM3Nw=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE1NTIwNw==", "bodyText": "Thanks Robert. FYI: the moman build could be modified the same way. There is a root project dependency section in javacc.gradle but the rationale behind it is that it's a configuration dependency then shared by different subprojects (and a task that requires javacc).", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380155207", "createdAt": "2020-02-17T12:31:10Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.gradle", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  ext {\n+    snowballWorkDir    = file(\"${buildDir}/snowball\")\n+    snowballStemmerDir = file(\"${buildDir}/snowball/stemmers\")\n+    snowballPatchedDir = file(\"${buildDir}/snowball/patched\")\n+    snowballWebsiteDir = file(\"${buildDir}/snowball/website\")\n+    snowballDataDir    = file(\"${buildDir}/snowball/data\")\n+  }\n+\n+  task snowball()  {\n+    description \"Regenerate snowball-based sources, stopwords, and tests for ...lucene/analysis.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:analysis:common:snowballGen\"\n+  }\n+\n+  task downloadSnowballStemmers(type: Download) {\n+    def stemmerZip = file(\"${snowballWorkDir}/stemmers.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball/archive/53739a805cfa6c77ff8496dc711dc1c106d987c1.zip\"\n+    dest stemmerZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/stemmers.json\")\n+\n+    doLast {\n+      ant.unzip(src: stemmerZip, dest: snowballStemmerDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballWebsite(type: Download) {\n+    def websiteZip = file(\"${snowballWorkDir}/website.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-website/archive/ff891e74f08e7315523ee3c0cad55bb1b7831b9d.zip\"\n+    dest websiteZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/website.json\")\n+\n+    doLast {\n+      ant.unzip(src: websiteZip, dest: snowballWebsiteDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task downloadSnowballData(type: Download) {\n+    def dataZip = file(\"${snowballWorkDir}/data.zip\")\n+\n+    src \"https://github.com/snowballstem/snowball-data/archive/9145f8732ec952c8a3d1066be251da198a8bc792.zip\"\n+    dest dataZip\n+    onlyIfModified true\n+    useETag \"all\"\n+    cachedETagsFile file(\"${snowballWorkDir}/data.json\")\n+\n+    doLast {\n+      ant.unzip(src: dataZip, dest: snowballDataDir, overwrite: \"true\") {\n+        ant.cutdirsmapper(dirs: \"1\")\n+      }\n+    }\n+  }\n+\n+  task cleanSnowballCheckout(type: Delete) {\n+    dependsOn downloadSnowballStemmers\n+    delete snowballPatchedDir\n+  }\n+\n+  task patchSnowball(type: Copy) {\n+    dependsOn cleanSnowballCheckout\n+\n+    from fileTree(snowballStemmerDir) {\n+      include '**/*'\n+    }\n+    into snowballPatchedDir\n+\n+    doLast {\n+      ant.patch(patchfile: rootProject.file(\"gradle/generation/snowball.patch\"), dir: snowballPatchedDir, strip: \"1\")\n+    }\n+  }\n+}\n+\n+configure(project(\":lucene:analysis:common\")) {\n+  task snowballGen() {\n+    description \"Patch and Regenerate snowball sources, stopwords, and tests\"\n+    group \"generation\"\n+    dependsOn rootProject.patchSnowball", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzOTM3Nw=="}, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjYyODAyOnYy", "diffSide": "RIGHT", "path": "gradle/generation/snowball.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1NToyNlrOFqh49g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1NToyNlrOFqh49g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzOTc2Ng==", "bodyText": "Love the old school (sed). :)", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380139766", "createdAt": "2020-02-17T11:55:26Z", "author": {"login": "dweiss"}, "path": "gradle/generation/snowball.sh", "diffHunk": "@@ -0,0 +1,122 @@\n+#!/usr/bin/env bash\n+\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# remove this script when problems are fixed\n+SRCDIR=$1\n+WWWSRCDIR=$2\n+TESTSRCDIR=$3\n+PROJECTDIR=$4\n+DESTDIR=\"${PROJECTDIR}/src/java/org/tartarus/snowball\"\n+WWWDSTDIR=\"${PROJECTDIR}/src/resources/org/apache/lucene/analysis/snowball\"\n+TESTDSTDIR=\"${PROJECTDIR}/src/test/org/apache/lucene/analysis/snowball\"\n+\n+trap 'echo \"usage: ./snowball.sh <snowball> <snowball-website> <snowball-data> <analysis-common>\" && exit 2' ERR\n+test $# -eq 4\n+\n+trap 'echo \"*** BUILD FAILED ***\" $BASH_SOURCE:$LINENO: error: \"$BASH_COMMAND\" returned $?' ERR\n+set -eEuo pipefail\n+\n+# reformats file indentation to kill the crazy space/tabs mix.\n+# prevents early blindness !\n+function reformat_java() {\n+  # convert tabs to 8 spaces, then reduce indent from 4 space to 2 space\n+  sed --in-place -e 's/\\t/        /g' -e 's/    /  /g' $1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjYzMDY5OnYy", "diffSide": "LEFT", "path": "lucene/analysis/common/build.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1NjoyNFrOFqh6lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1NjoyNFrOFqh6lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MDE4Mg==", "bodyText": "Thanks for cleaning these up from ant.", "url": "https://github.com/apache/lucene-solr/pull/1262#discussion_r380140182", "createdAt": "2020-02-17T11:56:24Z", "author": {"login": "dweiss"}, "path": "lucene/analysis/common/build.xml", "diffHunk": "@@ -124,14 +122,4 @@\n \n   <target name=\"regenerate\" depends=\"jflex,unicode-data\"/>\n \n-  <target name=\"patch-snowball\" description=\"Patches all snowball programs in '${snowball.programs.dir}' to make them work with MethodHandles\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ec6d0c8279512a75995273d961877f740c9e2b"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 932, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}