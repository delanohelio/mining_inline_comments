{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MTM0NTc4", "number": 1553, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzoyMTo0MFrOECxCXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzowMDowNVrOEC1tyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzM2MDI5OnYy", "diffSide": "RIGHT", "path": "lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreQuery.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzoyMTo0MFrOGfbMBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzozMTowNFrOGf3KAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYwNDQ4Nw==", "bodyText": "While this test makes the current code pass, I'm trying to understand why it is correct. Why do we pass a COMPLETE_NO_SCORES to the underlying weight when the function's ValueSource doesn't need scores?", "url": "https://github.com/apache/lucene-solr/pull/1553#discussion_r435604487", "createdAt": "2020-06-04T23:21:40Z", "author": {"login": "tflobbe"}, "path": "lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreQuery.java", "diffHunk": "@@ -244,4 +247,33 @@ public void testAccessToValueSource() throws Exception {\n \n   }\n \n+  public void testScoreMode() throws Exception {\n+    // Value Source doesn't need scores\n+    assertInnerScoreMode(ScoreMode.COMPLETE_NO_SCORES, ScoreMode.COMPLETE, DoubleValuesSource.fromDoubleField(\"foo\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad3de182a0475151f47af66329173de59e2b18"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcyNjQ5Ng==", "bodyText": "If the function's values source doesn't need scores, then Scorer#score() will never be called on the inner scorers, so we can treat them as filters, which is what COMPLETE_NO_SCORES does.", "url": "https://github.com/apache/lucene-solr/pull/1553#discussion_r435726496", "createdAt": "2020-06-05T07:01:44Z", "author": {"login": "jpountz"}, "path": "lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreQuery.java", "diffHunk": "@@ -244,4 +247,33 @@ public void testAccessToValueSource() throws Exception {\n \n   }\n \n+  public void testScoreMode() throws Exception {\n+    // Value Source doesn't need scores\n+    assertInnerScoreMode(ScoreMode.COMPLETE_NO_SCORES, ScoreMode.COMPLETE, DoubleValuesSource.fromDoubleField(\"foo\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYwNDQ4Nw=="}, "originalCommit": {"oid": "d7ad3de182a0475151f47af66329173de59e2b18"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2MjcyMA==", "bodyText": "Ah, right. ValueSources like MultiplicativeBoostValuesSource will need scores because it uses the DoubleValues scores argument.", "url": "https://github.com/apache/lucene-solr/pull/1553#discussion_r436062720", "createdAt": "2020-06-05T17:31:04Z", "author": {"login": "tflobbe"}, "path": "lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreQuery.java", "diffHunk": "@@ -244,4 +247,33 @@ public void testAccessToValueSource() throws Exception {\n \n   }\n \n+  public void testScoreMode() throws Exception {\n+    // Value Source doesn't need scores\n+    assertInnerScoreMode(ScoreMode.COMPLETE_NO_SCORES, ScoreMode.COMPLETE, DoubleValuesSource.fromDoubleField(\"foo\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYwNDQ4Nw=="}, "originalCommit": {"oid": "d7ad3de182a0475151f47af66329173de59e2b18"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDEyNjgzOnYy", "diffSide": "RIGHT", "path": "lucene/queries/src/java/org/apache/lucene/queries/function/FunctionScoreQuery.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzowMDowNVrOGfimMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzowMDowNVrOGfimMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcyNTg3Mw==", "bodyText": "I think we can simplify the above to\nif (scoreMode.needsScores() && source.needsScores()) {\n  sm = ScoreMode.COMPLETE;\n} else {\n  sm = ScoreMode.COMPLETE_NO_SCORES;\n}", "url": "https://github.com/apache/lucene-solr/pull/1553#discussion_r435725873", "createdAt": "2020-06-05T07:00:05Z", "author": {"login": "jpountz"}, "path": "lucene/queries/src/java/org/apache/lucene/queries/function/FunctionScoreQuery.java", "diffHunk": "@@ -105,7 +105,13 @@ public static FunctionScoreQuery boostByQuery(Query in, Query boostMatch, float\n \n   @Override\n   public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n-    Weight inner = in.createWeight(searcher, scoreMode.needsScores() && source.needsScores() ? scoreMode : ScoreMode.COMPLETE_NO_SCORES, 1f);\n+    ScoreMode sm = scoreMode;\n+    if (scoreMode.needsScores() && source.needsScores() && scoreMode == ScoreMode.TOP_SCORES) {\n+      sm = ScoreMode.COMPLETE;\n+    } else if (!scoreMode.needsScores() || !source.needsScores()) {\n+      sm = ScoreMode.COMPLETE_NO_SCORES;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ad3de182a0475151f47af66329173de59e2b18"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1444, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}