{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MDQ3ODk5", "number": 1179, "title": "LUCENE-9147: Move the stored fields index off-heap.", "bodyText": "This replaces the index of stored fields and term vectors with two\nDirectMonotonic arrays. DirectMonotonicWriter requires to know the number\nof values to write up-front, so incoming doc IDs and file pointers are buffered\non disk using temporary files that never get fsynced, but have index headers\nand footers to make sure any corruption in these files wouldn't propagate to the\nindex.\nDirectMonotonicReader gets a specialized binarySearch implementation that\nleverages the metadata in order to avoid going to the IndexInput as often as\npossible. Actually in the common case, it would only go to a single\nsub DirectReader which, combined with the size of blocks of 1k values, helps\nbound the number of page faults to 2.", "createdAt": "2020-01-17T09:28:25Z", "url": "https://github.com/apache/lucene-solr/pull/1179", "merged": true, "mergeCommit": {"oid": "136dcbdbbced7c2d32b4d244ca99ace2c59baee8"}, "closed": true, "closedAt": "2020-02-05T17:35:09Z", "author": {"login": "jpountz"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7LNSmAH2gAyMzY0MDQ3ODk5OjA0MmMwODcyZTkzZjlhZTc4NjQzMWU1ZTliNTU2YWM1MGQ4YzhlZWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBZrHyAH2gAyMzY0MDQ3ODk5Ojc2OGM3MDk2N2E2ODhhYWE0YTY3YjU5M2YwZTNlMTk5ODg0Y2MwNmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "042c0872e93f9ae786431e5e9b556ac50d8c8eed", "author": {"user": {"login": "jpountz", "name": "Adrien Grand"}}, "url": "https://github.com/apache/lucene-solr/commit/042c0872e93f9ae786431e5e9b556ac50d8c8eed", "committedDate": "2020-01-17T09:19:56Z", "message": "LUCENE-9147: Move the stored fields index off-heap.\n\nThis replaces the index of stored fields and term vectors with two\n`DirectMonotonic` arrays. `DirectMonotonicWriter` requires to know the number\nof values to write up-front, so incoming doc IDs and file pointers are buffered\non disk using temporary files that never get fsynced, but have index headers\nand footers to make sure any corruption in these files wouldn't propagate to the\nindex.\n\n`DirectMonotonicReader` gets a specialized `binarySearch` implementation that\nleverages the metadata in order to avoid going to the IndexInput as often as\npossible. Actually in the common case, it would only go to a single\nsub `DirectReader` which, combined with the size of blocks of 1k values, helps\nbound the number of page faults to 2."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NjA0MDg3", "url": "https://github.com/apache/lucene-solr/pull/1179#pullrequestreview-344604087", "createdAt": "2020-01-17T14:15:01Z", "commit": {"oid": "042c0872e93f9ae786431e5e9b556ac50d8c8eed"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDoxNTowMVrOFe6Ndw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDoxNTowMVrOFe6Ndw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1NTMxOQ==", "bodyText": "Do we know this incoming long index is small enough not to overflow int after right shift?  Should we use Math.toIntExact instead to confirm?", "url": "https://github.com/apache/lucene-solr/pull/1179#discussion_r367955319", "createdAt": "2020-01-17T14:15:01Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader.java", "diffHunk": "@@ -101,20 +104,99 @@ public static LongValues getInstance(Meta meta, RandomAccessInput data) throws I\n         readers[i] = DirectReader.getInstance(data, meta.bpvs[i], meta.offsets[i]);\n       }\n     }\n-    final int blockShift = meta.blockShift;\n-\n-    final long[] mins = meta.mins;\n-    final float[] avgs = meta.avgs;\n-    return new LongValues() {\n-\n-      @Override\n-      public long get(long index) {\n-        final int block = (int) (index >>> blockShift);\n-        final long blockIndex = index & ((1 << blockShift) - 1);\n-        final long delta = readers[block].get(blockIndex);\n-        return mins[block] + (long) (avgs[block] * blockIndex) + delta;\n+\n+    return new DirectMonotonicReader(meta.blockShift, readers, meta.mins, meta.avgs, meta.bpvs);\n+  }\n+\n+  private final int blockShift;\n+  private final LongValues[] readers;\n+  private final long[] mins;\n+  private final float[] avgs;\n+  private final byte[] bpvs;\n+  private final int nonZeroBpvs;\n+\n+  private DirectMonotonicReader(int blockShift, LongValues[] readers, long[] mins, float[] avgs, byte[] bpvs) {\n+    this.blockShift = blockShift;\n+    this.readers = readers;\n+    this.mins = mins;\n+    this.avgs = avgs;\n+    this.bpvs = bpvs;\n+    if (readers.length != mins.length || readers.length != avgs.length || readers.length != bpvs.length) {\n+      throw new IllegalArgumentException();\n+    }\n+    int nonZeroBpvs = 0;\n+    for (byte b : bpvs) {\n+      if (b != 0) {\n+        nonZeroBpvs++;\n+      }\n+    }\n+    this.nonZeroBpvs = nonZeroBpvs;\n+  }\n+\n+  @Override\n+  public long get(long index) {\n+    final int block = (int) (index >>> blockShift);\n+    final long blockIndex = index & ((1 << blockShift) - 1);\n+    final long delta = readers[block].get(blockIndex);\n+    return mins[block] + (long) (avgs[block] * blockIndex) + delta;\n+  }\n+\n+  /** Get lower/upper bounds for the value at a given index without hitting the direct reader. */\n+  private long[] getBounds(long index) {\n+    final int block = (int) (index >>> blockShift);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "042c0872e93f9ae786431e5e9b556ac50d8c8eed"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6abda837c932de1af4883de76c0334ea113e2189", "author": {"user": {"login": "jpountz", "name": "Adrien Grand"}}, "url": "https://github.com/apache/lucene-solr/commit/6abda837c932de1af4883de76c0334ea113e2189", "committedDate": "2020-01-21T17:18:08Z", "message": "Merge branch 'master' into offhead_stored_fields_index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "938662038ef24ce4ba90232b59339ee79abe5d12", "author": {"user": {"login": "jpountz", "name": "Adrien Grand"}}, "url": "https://github.com/apache/lucene-solr/commit/938662038ef24ce4ba90232b59339ee79abe5d12", "committedDate": "2020-01-21T17:58:03Z", "message": "iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8695fa7d9abdda142e504d624e840a1ff75e2395", "author": {"user": {"login": "jpountz", "name": "Adrien Grand"}}, "url": "https://github.com/apache/lucene-solr/commit/8695fa7d9abdda142e504d624e840a1ff75e2395", "committedDate": "2020-01-22T08:04:26Z", "message": "Merge branch 'master' into offhead_stored_fields_index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f857af02ecae43ee760f5792fb1cddc6ef5965a3", "author": {"user": {"login": "jpountz", "name": "Adrien Grand"}}, "url": "https://github.com/apache/lucene-solr/commit/f857af02ecae43ee760f5792fb1cddc6ef5965a3", "committedDate": "2020-02-05T15:47:02Z", "message": "Merge branch 'master' into offhead_stored_fields_index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b04bc6ed6776882f54b7dc0cb43ed4a379844e1", "author": {"user": {"login": "jpountz", "name": "Adrien Grand"}}, "url": "https://github.com/apache/lucene-solr/commit/6b04bc6ed6776882f54b7dc0cb43ed4a379844e1", "committedDate": "2020-02-05T16:45:29Z", "message": "iter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "768c70967a688aaa4a67b593f0e3e199884cc06e", "author": {"user": {"login": "jpountz", "name": "Adrien Grand"}}, "url": "https://github.com/apache/lucene-solr/commit/768c70967a688aaa4a67b593f0e3e199884cc06e", "committedDate": "2020-02-05T17:34:44Z", "message": "iter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2237, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}