{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4ODIyNjEz", "number": 1954, "title": "SOLR-14787 - Adding support to use inequalities to the payload check query parser.", "bodyText": "Description\nPlease provide a short description of the changes you're making with this pull request.\nSolution\nPlease provide a short description of the approach taken to implement your solution.\nTests\nPlease describe the tests you've developed or run to confirm this patch implements the feature or solves the problem.\nChecklist\nPlease review the following and check all that apply:\n\n I have reviewed the guidelines for How to Contribute and my code conforms to the standards described there to the best of my ability.\n I have created a Jira issue and added the issue ID to my pull request title.\n I have given Solr maintainers access to contribute to my PR branch. (optional but recommended)\n I have developed this patch against the master branch.\n I have run ./gradlew check.\n I have added tests for my changes.\n I have added documentation for the Ref Guide (for Solr changes only).", "createdAt": "2020-10-06T20:40:24Z", "url": "https://github.com/apache/lucene-solr/pull/1954", "merged": true, "mergeCommit": {"oid": "b298d7fb160a49f552dc3987b83aa53601c7b29a"}, "closed": true, "closedAt": "2021-02-21T16:49:37Z", "author": {"login": "kwatters"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP-Y58gH2gAyNDk4ODIyNjEzOmNhMjlmMWU0OTBjNWJjYTJhYmFjMDA0ZmRjOGU5MTVhYWI4NDA2MDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd8GTb2gH2gAyNDk4ODIyNjEzOmNiYTFjOTY5NmFiMWYyMjAwZjM2ZmU1MWNiZmU1NWJkN2IxODFhYTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca29f1e490c5bca2abac004fdc8e915aab840603", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/ca29f1e490c5bca2abac004fdc8e915aab840603", "committedDate": "2020-10-06T20:27:25Z", "message": "initial commit of payload inequality checking, one unit test case still fails."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6bc2b6c4ffd941c543d5f968083ef878042a0b0", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/d6bc2b6c4ffd941c543d5f968083ef878042a0b0", "committedDate": "2020-10-06T20:27:25Z", "message": "pushing the failing test to the first one to help debug.  (seems to be case sensitive now?)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0e91107b44706b516a79b6c0cd6cde186942085", "author": {"user": {"login": "gus-asf", "name": "Gus Heck"}}, "url": "https://github.com/apache/lucene-solr/commit/d0e91107b44706b516a79b6c0cd6cde186942085", "committedDate": "2020-10-08T14:17:28Z", "message": "Eliminate need for threshold parameter, Allow op for multiple tokens, fix equals method so that it also accounts for the new op field."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c386b083b2d036681b6532614c46af6bfa5629", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/89c386b083b2d036681b6532614c46af6bfa5629", "committedDate": "2020-10-26T16:55:52Z", "message": "work in progress to support multiple payload types and to separate the solr and lucene apis better."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "799ae49b6e5fe93b8dc71c39e7205dd702fb40dc", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/799ae49b6e5fe93b8dc71c39e7205dd702fb40dc", "committedDate": "2020-10-26T17:40:13Z", "message": "setting utf8 as the encoding for a string decode."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDkxNDU0", "url": "https://github.com/apache/lucene-solr/pull/1954#pullrequestreview-517091454", "createdAt": "2020-10-26T19:05:14Z", "commit": {"oid": "799ae49b6e5fe93b8dc71c39e7205dd702fb40dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOTowNToxNFrOHoeTzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOTowNToxNFrOHoeTzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwMTY3Ng==", "bodyText": "NULL_DEREFERENCE:  object returned by org.apache.lucene.queries.payloads.PayloadMatcherFactory.payloadCheckerOpTypeMap.get(payloadType) could be null and is dereferenced at line 72.", "url": "https://github.com/apache/lucene-solr/pull/1954#discussion_r512201676", "createdAt": "2020-10-26T19:05:14Z", "author": {"login": "sonatype-lift"}, "path": "lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadMatcherFactory.java", "diffHunk": "@@ -0,0 +1,243 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.queries.payloads;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.HashMap;\n+\n+import org.apache.lucene.queries.payloads.SpanPayloadCheckQuery.PayloadType;\n+import org.apache.lucene.util.BytesRef;\n+\n+/**\n+ * Creates a payload matcher object based on a payload type and an operation.\n+ * PayloadTypes of INT,FLOAT, or STRING are supported.  Inequality operations are supported.\n+ */\n+public class PayloadMatcherFactory {\n+\n+  private static final HashMap<PayloadType, HashMap<String, PayloadMatcher>> payloadCheckerOpTypeMap;\n+  static {\n+    payloadCheckerOpTypeMap= new HashMap<PayloadType, HashMap<String, PayloadMatcher>>();\n+    // ints\n+    HashMap<String, PayloadMatcher> intCheckers = new HashMap<String, PayloadMatcher>();\n+    intCheckers.put(\"lt\", new LTIntPayloadMatcher());\n+    intCheckers.put(\"lte\", new LTEIntPayloadMatcher());\n+    intCheckers.put(\"gt\", new GTIntPayloadMatcher());\n+    intCheckers.put(\"gte\", new GTEIntPayloadMatcher());\n+    HashMap<String, PayloadMatcher> floatCheckers = new HashMap<String, PayloadMatcher>();\n+    floatCheckers.put(\"lt\", new LTFloatPayloadMatcher());\n+    floatCheckers.put(\"lte\", new LTEFloatPayloadMatcher());\n+    floatCheckers.put(\"gt\", new GTFloatPayloadMatcher());\n+    floatCheckers.put(\"gte\", new GTEFloatPayloadMatcher());\n+    // strings\n+    HashMap<String, PayloadMatcher> stringCheckers = new HashMap<String, PayloadMatcher>();\n+    stringCheckers.put(\"lt\", new LTStringPayloadMatcher());\n+    stringCheckers.put(\"lte\", new LTEStringPayloadMatcher());\n+    stringCheckers.put(\"gt\", new GTStringPayloadMatcher());\n+    stringCheckers.put(\"gte\", new GTEStringPayloadMatcher());\n+    // load the matcher maps per payload type\n+    payloadCheckerOpTypeMap.put(PayloadType.INT, intCheckers);\n+    payloadCheckerOpTypeMap.put(PayloadType.FLOAT, floatCheckers);\n+    payloadCheckerOpTypeMap.put(PayloadType.STRING, stringCheckers);\n+  }\n+  \n+  /**\n+   * Return a payload matcher for use in the SpanPayloadCheckQuery that will decode the ByteRef from \n+   * a payload based on the payload type, and apply a matching inequality operations (eq,lt,lte,gt,and gte)\n+   * \n+   * @param payloadType the type of the payload to decode, STRING, INT, FLOAT\n+   * @param op and inequalit operation as the test (example: eq for equals, gt for greater than)\n+   * @return a payload matcher that decodes the payload and applies the operation inequality test.\n+   * \n+   */\n+  public static PayloadMatcher createMatcherForOpAndType(PayloadType payloadType, String op) {\n+    // special optimization, binary/byte comparison\n+    if (op == null || \"eq\".contentEquals(op)) {\n+      return new EQPayloadMatcher();\n+    }\n+    // otherwise, we need to pay attention to the payload type and operation\n+    return payloadCheckerOpTypeMap.get(payloadType).get(op);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "799ae49b6e5fe93b8dc71c39e7205dd702fb40dc"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db58daa21587b061508ff0246f51ba6cb772f091", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/db58daa21587b061508ff0246f51ba6cb772f091", "committedDate": "2020-10-26T21:05:07Z", "message": "avoid a null pointer dereference"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a87f73c697829f80238aa05f7c5459610e4bc93", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/5a87f73c697829f80238aa05f7c5459610e4bc93", "committedDate": "2020-10-26T21:22:15Z", "message": "more docs for payloadType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "253e530912d4214db697cf88f61c54588b8c6e0f", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/253e530912d4214db697cf88f61c54588b8c6e0f", "committedDate": "2020-10-27T19:42:56Z", "message": "updating lucene unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ef293739fdf56c9327b47d4272b9b0e83a5e538", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/0ef293739fdf56c9327b47d4272b9b0e83a5e538", "committedDate": "2020-10-27T20:35:37Z", "message": "wire the payload encoder type through"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a9cb0af58cf1acd7d28988363de6553dfc00351", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/6a9cb0af58cf1acd7d28988363de6553dfc00351", "committedDate": "2020-11-23T19:19:12Z", "message": "adding more test cases for ints and floats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1297674de73d577089103ffe8ebf98e716329d69", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/1297674de73d577089103ffe8ebf98e716329d69", "committedDate": "2020-11-23T20:51:09Z", "message": "adding some solr docs for the new payload check functionality"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3053ba2c863cf908be05c64be6052d03963d21d", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/b3053ba2c863cf908be05c64be6052d03963d21d", "committedDate": "2020-11-23T20:55:04Z", "message": "passing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ee2b0294e23f3951c482692788cc785bf4ef3ea", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/3ee2b0294e23f3951c482692788cc785bf4ef3ea", "committedDate": "2021-01-04T17:34:58Z", "message": "obey payload string length"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7662722211b3dd7599bb2eaac683562cc2e55c40", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/7662722211b3dd7599bb2eaac683562cc2e55c40", "committedDate": "2021-01-04T17:35:24Z", "message": "new test method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4fa12795d2e8e46d82c6fb76050566735a6b8bf", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/b4fa12795d2e8e46d82c6fb76050566735a6b8bf", "committedDate": "2021-01-06T15:59:46Z", "message": "cleanup and lucene unit test for payload inequality checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d61dda38d662926d513cc686e9eaf6abc0b84941", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/d61dda38d662926d513cc686e9eaf6abc0b84941", "committedDate": "2021-01-06T16:21:23Z", "message": "removing Arrays.copyOfRange because it's a forbidden api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1667327a569db6feb3c7c6e9228172eec1d28c9", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/e1667327a569db6feb3c7c6e9228172eec1d28c9", "committedDate": "2021-01-06T16:41:17Z", "message": "Merge branch 'master' into SOLR-14787-master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41e002cffff934b2dc7b00fae84cb4e7114b0a7d", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/41e002cffff934b2dc7b00fae84cb4e7114b0a7d", "committedDate": "2021-01-06T16:54:06Z", "message": "formatting issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8f646e995bcb00c80a0888afa25009c5a7342df", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/a8f646e995bcb00c80a0888afa25009c5a7342df", "committedDate": "2021-01-06T16:55:47Z", "message": "more formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e681a36d3f2a485efc190e3410d733407d82a945", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/e681a36d3f2a485efc190e3410d733407d82a945", "committedDate": "2021-01-06T17:31:07Z", "message": "tidy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e844f00e58b2219083eda86e4c387b1fd40432d", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/3e844f00e58b2219083eda86e4c387b1fd40432d", "committedDate": "2021-01-06T18:13:11Z", "message": "trimming up some changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "260a59144183713a8d9d10bb5f61903038e0a67f", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/260a59144183713a8d9d10bb5f61903038e0a67f", "committedDate": "2021-01-06T18:15:31Z", "message": "removing a TODO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "093a9a389a0106073470759e7351b788564840da", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/093a9a389a0106073470759e7351b788564840da", "committedDate": "2021-01-06T18:25:19Z", "message": "last todo being removed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2ea15a45a3042246556d767778187f9d16c4459", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/b2ea15a45a3042246556d767778187f9d16c4459", "committedDate": "2021-02-17T15:27:37Z", "message": "merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b8b77093a6822f10911a005395baac97c04963a", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/4b8b77093a6822f10911a005395baac97c04963a", "committedDate": "2021-02-17T17:00:33Z", "message": "update the plugin for the latest changes to the span payload check query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a10b25986cf924c5d1599a7174d0d6f32264cab", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/3a10b25986cf924c5d1599a7174d0d6f32264cab", "committedDate": "2021-02-17T17:14:05Z", "message": "spotless apply"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be3767afd262a013dee817ac281c71a2ebf8ce4d", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/be3767afd262a013dee817ac281c71a2ebf8ce4d", "committedDate": "2021-02-17T18:44:25Z", "message": "forbidden api fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe35da6661b6b557393889c301f9ad517670b3cb", "author": {"user": {"login": "kwatters", "name": "Kevin Watters"}}, "url": "https://github.com/apache/lucene-solr/commit/fe35da6661b6b557393889c301f9ad517670b3cb", "committedDate": "2021-02-17T22:15:58Z", "message": "Merge remote-tracking branch 'upstream/master' into SOLR-14787-master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf3a9ab5fd7e6d7e01f0ecb526b8c6e031717597", "author": {"user": {"login": "gus-asf", "name": "Gus Heck"}}, "url": "https://github.com/apache/lucene-solr/commit/bf3a9ab5fd7e6d7e01f0ecb526b8c6e031717597", "committedDate": "2021-02-20T22:30:46Z", "message": "SOLR-14787 Expand docs for PayloadCheckQueryParser and coordinate better with the section heading."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cba1c9696ab1f2200f36fe51cbfe55bd7b181aa1", "author": {"user": {"login": "gus-asf", "name": "Gus Heck"}}, "url": "https://github.com/apache/lucene-solr/commit/cba1c9696ab1f2200f36fe51cbfe55bd7b181aa1", "committedDate": "2021-02-20T22:33:21Z", "message": "SOLR-14787 Add a couple of tests off the happy path."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2690, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}