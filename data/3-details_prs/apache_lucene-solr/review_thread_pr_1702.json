{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NTUzOTM3", "number": 1702, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNToxOTowNVrOET7r8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNToyMjo1M1rOET7ubw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzM2MzA1OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/filestore/DistribPackageStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNToxOTowNVrOG58S5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNToxOTowNVrOG58S5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQwOTg5NA==", "bodyText": "don't need this since deleteLocal will also call checkInZk?", "url": "https://github.com/apache/lucene-solr/pull/1702#discussion_r463409894", "createdAt": "2020-07-31T05:19:05Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/filestore/DistribPackageStore.java", "diffHunk": "@@ -470,13 +473,48 @@ public void syncToAllNodes(String path) throws IOException {\n     return fileDetails;\n   }\n \n+  @Override\n+  public void delete(String path) {\n+    checkInZk(path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94c4c69d5259b9556a577aeb7b49bd34360bb041"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzM2NjU2OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNToyMTowNlrOG58U-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozMDozMVrOG5-yJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMDQyNA==", "bodyText": "do we use this for locking? no no no. we should be using zk versions for that.\nI understand that the code may have been in place before, but we need to fix it then before we can add additional features on top of this. it will add so much trouble.", "url": "https://github.com/apache/lucene-solr/pull/1702#discussion_r463410424", "createdAt": "2020-07-31T05:21:06Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI.java", "diffHunk": "@@ -131,6 +131,53 @@ public void validateFiles(List<String> files, boolean validateSignatures, Consum\n \n     static final String TMP_ZK_NODE = \"/packageStoreWriteInProgress\";\n \n+    @EndPoint(\n+            path = \"/cluster/files/*\",\n+            method = SolrRequest.METHOD.DELETE,\n+            permission = PermissionNameProvider.Name.FILESTORE_WRITE_PERM)\n+    public void delete(SolrQueryRequest req, SolrQueryResponse rsp) {\n+      if (!coreContainer.getPackageLoader().getPackageAPI().isEnabled()) {\n+        throw new RuntimeException(PackageAPI.ERR_MSG);\n+      }\n+\n+      try {\n+        coreContainer.getZkController().getZkClient().create(TMP_ZK_NODE, \"true\".getBytes(UTF_8),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94c4c69d5259b9556a577aeb7b49bd34360bb041"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMzY2NA==", "bodyText": "I need to research how to do this better. I did not like this portion of the change but could not find a reliable way to check because of eventual consistency.", "url": "https://github.com/apache/lucene-solr/pull/1702#discussion_r463423664", "createdAt": "2020-07-31T06:12:43Z", "author": {"login": "MarcusSorealheis"}, "path": "solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI.java", "diffHunk": "@@ -131,6 +131,53 @@ public void validateFiles(List<String> files, boolean validateSignatures, Consum\n \n     static final String TMP_ZK_NODE = \"/packageStoreWriteInProgress\";\n \n+    @EndPoint(\n+            path = \"/cluster/files/*\",\n+            method = SolrRequest.METHOD.DELETE,\n+            permission = PermissionNameProvider.Name.FILESTORE_WRITE_PERM)\n+    public void delete(SolrQueryRequest req, SolrQueryResponse rsp) {\n+      if (!coreContainer.getPackageLoader().getPackageAPI().isEnabled()) {\n+        throw new RuntimeException(PackageAPI.ERR_MSG);\n+      }\n+\n+      try {\n+        coreContainer.getZkController().getZkClient().create(TMP_ZK_NODE, \"true\".getBytes(UTF_8),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMDQyNA=="}, "originalCommit": {"oid": "94c4c69d5259b9556a577aeb7b49bd34360bb041"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ0MTU4OA==", "bodyText": "@madrob This should be a separate ticket because this is used all over.\nI've opened SOLR-14698", "url": "https://github.com/apache/lucene-solr/pull/1702#discussion_r463441588", "createdAt": "2020-07-31T07:07:16Z", "author": {"login": "noblepaul"}, "path": "solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI.java", "diffHunk": "@@ -131,6 +131,53 @@ public void validateFiles(List<String> files, boolean validateSignatures, Consum\n \n     static final String TMP_ZK_NODE = \"/packageStoreWriteInProgress\";\n \n+    @EndPoint(\n+            path = \"/cluster/files/*\",\n+            method = SolrRequest.METHOD.DELETE,\n+            permission = PermissionNameProvider.Name.FILESTORE_WRITE_PERM)\n+    public void delete(SolrQueryRequest req, SolrQueryResponse rsp) {\n+      if (!coreContainer.getPackageLoader().getPackageAPI().isEnabled()) {\n+        throw new RuntimeException(PackageAPI.ERR_MSG);\n+      }\n+\n+      try {\n+        coreContainer.getZkController().getZkClient().create(TMP_ZK_NODE, \"true\".getBytes(UTF_8),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMDQyNA=="}, "originalCommit": {"oid": "94c4c69d5259b9556a577aeb7b49bd34360bb041"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MDY2Mg==", "bodyText": "thank you @noblepaul . I couldn't figure out a better way to do this other then simplifying the exception and conditional", "url": "https://github.com/apache/lucene-solr/pull/1702#discussion_r463450662", "createdAt": "2020-07-31T07:30:31Z", "author": {"login": "MarcusSorealheis"}, "path": "solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI.java", "diffHunk": "@@ -131,6 +131,53 @@ public void validateFiles(List<String> files, boolean validateSignatures, Consum\n \n     static final String TMP_ZK_NODE = \"/packageStoreWriteInProgress\";\n \n+    @EndPoint(\n+            path = \"/cluster/files/*\",\n+            method = SolrRequest.METHOD.DELETE,\n+            permission = PermissionNameProvider.Name.FILESTORE_WRITE_PERM)\n+    public void delete(SolrQueryRequest req, SolrQueryResponse rsp) {\n+      if (!coreContainer.getPackageLoader().getPackageAPI().isEnabled()) {\n+        throw new RuntimeException(PackageAPI.ERR_MSG);\n+      }\n+\n+      try {\n+        coreContainer.getZkController().getZkClient().create(TMP_ZK_NODE, \"true\".getBytes(UTF_8),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMDQyNA=="}, "originalCommit": {"oid": "94c4c69d5259b9556a577aeb7b49bd34360bb041"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzM2ODY1OnYy", "diffSide": "RIGHT", "path": "solr/core/src/test/org/apache/solr/filestore/TestDistribPackageStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNToyMjoyM1rOG58WGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNjoxMToyMVrOG59HIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMDcxMg==", "bodyText": "please configure your IDE to not do this", "url": "https://github.com/apache/lucene-solr/pull/1702#discussion_r463410712", "createdAt": "2020-07-31T05:22:23Z", "author": {"login": "madrob"}, "path": "solr/core/src/test/org/apache/solr/filestore/TestDistribPackageStore.java", "diffHunk": "@@ -39,15 +40,11 @@\n import org.apache.zookeeper.server.ByteBufferInputStream;\n import org.junit.After;\n import org.junit.Before;\n-\n import java.io.IOException;\n import java.io.InputStream;\n import java.nio.ByteBuffer;\n import java.nio.file.Paths;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Set;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94c4c69d5259b9556a577aeb7b49bd34360bb041"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMzI2NQ==", "bodyText": "Ok, I can fix this one.", "url": "https://github.com/apache/lucene-solr/pull/1702#discussion_r463423265", "createdAt": "2020-07-31T06:11:21Z", "author": {"login": "MarcusSorealheis"}, "path": "solr/core/src/test/org/apache/solr/filestore/TestDistribPackageStore.java", "diffHunk": "@@ -39,15 +40,11 @@\n import org.apache.zookeeper.server.ByteBufferInputStream;\n import org.junit.After;\n import org.junit.Before;\n-\n import java.io.IOException;\n import java.io.InputStream;\n import java.nio.ByteBuffer;\n import java.nio.file.Paths;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Set;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMDcxMg=="}, "originalCommit": {"oid": "94c4c69d5259b9556a577aeb7b49bd34360bb041"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzM2OTA3OnYy", "diffSide": "RIGHT", "path": "solr/core/src/test/org/apache/solr/filestore/TestDistribPackageStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNToyMjo0MFrOG58WXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNToyMjo0MFrOG58WXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMDc4MQ==", "bodyText": "vestigial?", "url": "https://github.com/apache/lucene-solr/pull/1702#discussion_r463410781", "createdAt": "2020-07-31T05:22:40Z", "author": {"login": "madrob"}, "path": "solr/core/src/test/org/apache/solr/filestore/TestDistribPackageStore.java", "diffHunk": "@@ -68,12 +65,13 @@ public void teardown() {\n     System.clearProperty(\"enable.packages\");\n   }\n   \n-  @SuppressWarnings({\"unchecked\"})\n+  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n   public void testPackageStoreManagement() throws Exception {\n     MiniSolrCloudCluster cluster =\n         configureCluster(4)\n         .withJettyConfig(jetty -> jetty.enableV2(true))\n         .addConfig(\"conf\", configset(\"cloud-minimal\"))\n+        .addConfig(\"conf\", configset(\"cloud-minimal\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94c4c69d5259b9556a577aeb7b49bd34360bb041"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzM2OTQzOnYy", "diffSide": "RIGHT", "path": "solr/core/src/test/org/apache/solr/filestore/TestDistribPackageStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNToyMjo1M1rOG58WjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozNToxOVrOG5-5Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMDgyOA==", "bodyText": "is this necessary?", "url": "https://github.com/apache/lucene-solr/pull/1702#discussion_r463410828", "createdAt": "2020-07-31T05:22:53Z", "author": {"login": "madrob"}, "path": "solr/core/src/test/org/apache/solr/filestore/TestDistribPackageStore.java", "diffHunk": "@@ -68,12 +65,13 @@ public void teardown() {\n     System.clearProperty(\"enable.packages\");\n   }\n   \n-  @SuppressWarnings({\"unchecked\"})\n+  @SuppressWarnings({\"unchecked\", \"rawtypes\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94c4c69d5259b9556a577aeb7b49bd34360bb041"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MjQ5OQ==", "bodyText": "depends on which rig I'm on so probably not", "url": "https://github.com/apache/lucene-solr/pull/1702#discussion_r463452499", "createdAt": "2020-07-31T07:35:19Z", "author": {"login": "MarcusSorealheis"}, "path": "solr/core/src/test/org/apache/solr/filestore/TestDistribPackageStore.java", "diffHunk": "@@ -68,12 +65,13 @@ public void teardown() {\n     System.clearProperty(\"enable.packages\");\n   }\n   \n-  @SuppressWarnings({\"unchecked\"})\n+  @SuppressWarnings({\"unchecked\", \"rawtypes\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMDgyOA=="}, "originalCommit": {"oid": "94c4c69d5259b9556a577aeb7b49bd34360bb041"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1397, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}