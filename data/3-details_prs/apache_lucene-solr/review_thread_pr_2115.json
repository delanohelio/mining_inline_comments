{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjI2MDY0", "number": 2115, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDowMTo1M1rOE_yZwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDowMTo1M1rOE_yZwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzIxNTM3OnYy", "diffSide": "RIGHT", "path": "solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDowMTo1M1rOH9r96Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDozMTo1OFrOH-7cKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ0NTU0NQ==", "bodyText": "Wouldn't it be better to actually check for the node znode ctime? Or maybe a bump in /live_nodes's cversion?", "url": "https://github.com/apache/lucene-solr/pull/2115#discussion_r534445545", "createdAt": "2020-12-02T20:01:53Z", "author": {"login": "tflobbe"}, "path": "solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling.java", "diffHunk": "@@ -236,8 +237,9 @@ public void testCloseHooksDeletedOnReconnect() throws Exception {\n     JettySolrRunner jetty = getJettyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n     SolrCore core = jetty.getCoreContainer().getCores().iterator().next();\n \n-    for (int i = 0; i < 5; i++) {\n+    for (int i = 0; i < (TEST_NIGHTLY ? 5 : 2); i++) {\n       cluster.expireZkSession(jetty);\n+      waitForState(\"Expecting node to be disconnected\", collectionName, activeReplicaCount(1, 0, 0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef1b833130bfc0412b46e2aadc73d8dc08d72dd6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4Mjc2OQ==", "bodyText": "There is a window where live node has gone away but state is still active because it hasn't updated yet. if we're just waiting for and watching live nodes, then we can see that go away and complete the test before the cluster has quiesced. this is also how we check in testPullReplicaDisconnectsFromZooKeeper, so for consistency this felt better.\nThere is still a different race here that the replica could go down and come back up before we start waiting for it to be down the first time (we're expecting the overseer to be slow), which I'm sure @markrmiller would be upset with me over, but we can deal with that when he finishes the rest of his speed up branch.", "url": "https://github.com/apache/lucene-solr/pull/2115#discussion_r534482769", "createdAt": "2020-12-02T21:09:17Z", "author": {"login": "madrob"}, "path": "solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling.java", "diffHunk": "@@ -236,8 +237,9 @@ public void testCloseHooksDeletedOnReconnect() throws Exception {\n     JettySolrRunner jetty = getJettyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n     SolrCore core = jetty.getCoreContainer().getCores().iterator().next();\n \n-    for (int i = 0; i < 5; i++) {\n+    for (int i = 0; i < (TEST_NIGHTLY ? 5 : 2); i++) {\n       cluster.expireZkSession(jetty);\n+      waitForState(\"Expecting node to be disconnected\", collectionName, activeReplicaCount(1, 0, 0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ0NTU0NQ=="}, "originalCommit": {"oid": "ef1b833130bfc0412b46e2aadc73d8dc08d72dd6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcwMjA5Nw==", "bodyText": "There is a window where live node has gone away but state is still active because it hasn't updated yet.\n\nHave you seen that happening? AFAIK, everywhere that we check if a replica is active we look at the state and the live nodes.\n\nif we're just waiting for and watching live nodes, then we can see that go away and complete the test before the cluster has quiesced.\n\nWe would still have the check in line 243, right? My point was:\n\nwait to see a change in live nodes\nwait for active (line 243 as it is now)\n\nWouldn't that be safe (assuming no other, unrelated node dies just at this point)?\n\nThere is still a different race here that the replica could go down and come back up before we start waiting for it to be down the first time\n\nRight, that's the one I was concerned about. Difficult to happen, but...", "url": "https://github.com/apache/lucene-solr/pull/2115#discussion_r534702097", "createdAt": "2020-12-03T05:59:50Z", "author": {"login": "tflobbe"}, "path": "solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling.java", "diffHunk": "@@ -236,8 +237,9 @@ public void testCloseHooksDeletedOnReconnect() throws Exception {\n     JettySolrRunner jetty = getJettyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n     SolrCore core = jetty.getCoreContainer().getCores().iterator().next();\n \n-    for (int i = 0; i < 5; i++) {\n+    for (int i = 0; i < (TEST_NIGHTLY ? 5 : 2); i++) {\n       cluster.expireZkSession(jetty);\n+      waitForState(\"Expecting node to be disconnected\", collectionName, activeReplicaCount(1, 0, 0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ0NTU0NQ=="}, "originalCommit": {"oid": "ef1b833130bfc0412b46e2aadc73d8dc08d72dd6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc0NzYyNQ==", "bodyText": "I think you're technically correct, but I'd rather leave that as a future improvement since we do it in several places.", "url": "https://github.com/apache/lucene-solr/pull/2115#discussion_r535747625", "createdAt": "2020-12-04T00:31:58Z", "author": {"login": "madrob"}, "path": "solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling.java", "diffHunk": "@@ -236,8 +237,9 @@ public void testCloseHooksDeletedOnReconnect() throws Exception {\n     JettySolrRunner jetty = getJettyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n     SolrCore core = jetty.getCoreContainer().getCores().iterator().next();\n \n-    for (int i = 0; i < 5; i++) {\n+    for (int i = 0; i < (TEST_NIGHTLY ? 5 : 2); i++) {\n       cluster.expireZkSession(jetty);\n+      waitForState(\"Expecting node to be disconnected\", collectionName, activeReplicaCount(1, 0, 0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ0NTU0NQ=="}, "originalCommit": {"oid": "ef1b833130bfc0412b46e2aadc73d8dc08d72dd6"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 961, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}