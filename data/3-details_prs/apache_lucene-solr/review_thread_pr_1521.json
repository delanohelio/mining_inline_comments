{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NjMxNDIy", "number": 1521, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODoyNjozMlrOD8-Sxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODoyNzo1N1rOD8-UdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjYxNzY3OnYy", "diffSide": "RIGHT", "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODoyNjozMlrOGWPdwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODoyNjozMlrOGWPdwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk3NTIzNA==", "bodyText": "Can we add @lucene.experimental or @lucene.internal?\nAhh, nevermind -- the class level javadocs say so already.", "url": "https://github.com/apache/lucene-solr/pull/1521#discussion_r425975234", "createdAt": "2020-05-15T18:26:32Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "diffHunk": "@@ -365,8 +365,43 @@\n  */\n public class RegExp {\n   \n-  enum Kind {\n-    REGEXP_UNION, REGEXP_CONCATENATION, REGEXP_INTERSECTION, REGEXP_OPTIONAL, REGEXP_REPEAT, REGEXP_REPEAT_MIN, REGEXP_REPEAT_MINMAX, REGEXP_COMPLEMENT, REGEXP_CHAR, REGEXP_CHAR_RANGE, REGEXP_ANYCHAR, REGEXP_EMPTY, REGEXP_STRING, REGEXP_ANYSTRING, REGEXP_AUTOMATON, REGEXP_INTERVAL,\n+  /**\n+   * The type of expression represented by a RegExp node.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "538da51c3dd02560a0ab05e24626f05341fa9a18"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjYyMTA3OnYy", "diffSide": "RIGHT", "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODoyNzo0MlrOGWPgGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODoyNzo0MlrOGWPgGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk3NTgzMw==", "bodyText": "Can we be consistent about the spaces around =?", "url": "https://github.com/apache/lucene-solr/pull/1521#discussion_r425975833", "createdAt": "2020-05-15T18:27:42Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "diffHunk": "@@ -468,6 +519,37 @@ public RegExp(String s, int syntax_flags) throws IllegalArgumentException {\n     from = e.from;\n     to = e.to;\n   }\n+  \n+  RegExp(Kind kind, RegExp exp1, RegExp exp2, String s, int c, int min, int max, int digits, int from, int to){    \n+    this.originalString = null;\n+    this.kind = kind;\n+    this.flags = 0;\n+    this.exp1=exp1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "538da51c3dd02560a0ab05e24626f05341fa9a18"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjYyMTk3OnYy", "diffSide": "RIGHT", "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODoyNzo1N1rOGWPgpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODoyNzo1N1rOGWPgpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk3NTk3Mg==", "bodyText": "Hmm also here.  Still looking for the last permutation ...", "url": "https://github.com/apache/lucene-solr/pull/1521#discussion_r425975972", "createdAt": "2020-05-15T18:27:57Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "diffHunk": "@@ -468,6 +519,37 @@ public RegExp(String s, int syntax_flags) throws IllegalArgumentException {\n     from = e.from;\n     to = e.to;\n   }\n+  \n+  RegExp(Kind kind, RegExp exp1, RegExp exp2, String s, int c, int min, int max, int digits, int from, int to){    \n+    this.originalString = null;\n+    this.kind = kind;\n+    this.flags = 0;\n+    this.exp1=exp1;\n+    this.exp2=exp2;\n+    this.s = s;\n+    this.c = c;\n+    this.min =min;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "538da51c3dd02560a0ab05e24626f05341fa9a18"}, "originalPosition": 109}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1413, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}