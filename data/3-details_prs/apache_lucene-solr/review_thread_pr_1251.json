{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNzE2ODM2", "number": 1251, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTozNTowM1rODe2c3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTozNTowM1rODe2c3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjc1OTk3OnYy", "diffSide": "RIGHT", "path": "gradle/generation/util.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTozNTowM1rOFoNvCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTozNTowM1rOFoNvCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcxMjM5Mg==", "bodyText": "I'll put this lf in", "url": "https://github.com/apache/lucene-solr/pull/1251#discussion_r377712392", "createdAt": "2020-02-11T15:35:03Z", "author": {"login": "ErickErickson"}, "path": "gradle/generation/util.gradle", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+apply plugin: \"de.undercouch.download\"\n+\n+configure(rootProject) {\n+  configurations {\n+    utilgen\n+  }\n+\n+  task utilgen {\n+    description \"Regenerate sources for ...lucene/util/automaton and ...lucene/util/packed.\"\n+    group \"generation\"\n+\n+    dependsOn \":lucene:core:utilGenPacked\"\n+    dependsOn \":lucene:core:utilGenLev\"\n+  }\n+}\n+\n+def momanDir = new File(buildDir, \"moman\").getAbsolutePath()\n+task installMoman(type: Download) {\n+\n+  def momanZip = new File(momanDir, \"moman.zip\").getAbsolutePath()\n+\n+  src \"https://bitbucket.org/jpbarrette/moman/get/5c5c2a1e4dea.zip\"\n+  dest momanZip\n+  onlyIfModified true\n+\n+  doLast {\n+    logger.lifecycle(\"Downloading moman to: ${buildDir}\")\n+    ant.unzip(src: momanZip, dest: momanDir, overwrite: \"true\") {\n+      ant.cutdirsmapper(dirs: \"1\")\n+    }\n+  }\n+}\n+\n+configure(project(\":lucene:core\")) {\n+  task utilGenPacked(dependsOn: installMoman) {\n+    description \"Regenerate util/PackedBulkOperationsPacked*.java and Packed64SingleBlock.java\"\n+    group \"generation\"\n+\n+    def workDir = \"src/java/org/apache/lucene/util/packed\"\n+\n+    doLast {\n+      ['gen_BulkOperation.py', 'gen_Packed64SingleBlock.py'].each { prog ->\n+        logger.lifecycle(\"Executing: ${prog} in ${workDir}\")\n+        project.exec {\n+          workingDir workDir\n+          executable \"python\"\n+          args = ['-B', \"${prog}\"]\n+        }\n+      }\n+      // Correct line endings for Windows.\n+      project.ant.fixcrlf(\n+          srcDir: workDir,\n+          includes: 'Packed64SingleBlock.java, BulkOperation*.java',\n+          encoding: 'UTF-8',\n+          eol: 'lf'\n+      )\n+    }\n+  }\n+\n+  task utilGenLev(dependsOn: installMoman) {\n+    description \"Regenerate util/automaton Lev*ParametricDescription.java\"\n+    group \"generation\"\n+\n+    doLast {\n+      def workDir = 'src/java/org/apache/lucene/util/automaton'\n+\n+      ['1', '2'].each { num ->\n+        ['True', 'False'].each { transpose ->\n+          project.exec {\n+            workingDir workDir\n+            executable \"python\"\n+            args = ['-B', 'createLevAutomata.py', num, transpose, \"${momanDir}/finenight/python\"]\n+          }\n+        }\n+      }\n+      project.ant.fixcrlf(\n+          srcDir: workDir,\n+          includes: '*ParametricDescription.java',\n+          encoding: 'UTF-8',\n+          eol: 'lf'\n+      )\n+    }\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4b3d9450930714b65c74fc3761eeca948a7cf88"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 917, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}