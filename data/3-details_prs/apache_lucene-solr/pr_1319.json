{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MTY4NjY5", "number": 1319, "title": "LUCENE-9164: process all events before closing gracefully", "bodyText": "This is yet another / simpler approach to #1274 to ensure that all event are processed if we are closing the IW gracefully. This also improves the case where we closing due to a tragic event where we don't try to be heroic and just drop all pending events on the floor.", "createdAt": "2020-03-05T09:44:56Z", "url": "https://github.com/apache/lucene-solr/pull/1319", "merged": true, "mergeCommit": {"oid": "79feb93bd962aa65ede05ecf7cc86e9f5cec84a1"}, "closed": true, "closedAt": "2020-03-10T19:40:21Z", "author": {"login": "s1monw"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKoToNAH2gAyMzg0MTY4NjY5OjkwMTUyMjJiNWI3ZTg4ZDY4ZmFlNGYwMzY0YjQwYjliODI1YmNjYjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMX0QWAH2gAyMzg0MTY4NjY5OjYyMmJkNTg5OTA4ZjFlNzc5YmIzZDI5OTgxODRlOWIzNjA3YjIwNGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9015222b5b7e88d68fae4f0364b40b9b825bccb4", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/9015222b5b7e88d68fae4f0364b40b9b825bccb4", "committedDate": "2020-03-05T09:42:58Z", "message": "LUCENE-9164: process all events before closing gracefully"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NDI0NTUz", "url": "https://github.com/apache/lucene-solr/pull/1319#pullrequestreview-369424553", "createdAt": "2020-03-05T09:47:21Z", "commit": {"oid": "9015222b5b7e88d68fae4f0364b40b9b825bccb4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOTo0NzoyMVrOFyMt6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOTo0NzoyMVrOFyMt6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4MTQ4MA==", "bodyText": "Wouldn't it be nicer to make it just Closeable and pass IndexWriter in the constructor (instead of each method)?", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r388181480", "createdAt": "2020-03-05T09:47:21Z", "author": {"login": "dweiss"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,70 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final CloseableQueue eventQueue = new CloseableQueue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9015222b5b7e88d68fae4f0364b40b9b825bccb4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77ad9b2aad59295c7b1c49c098a48b72569e44bc", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/77ad9b2aad59295c7b1c49c098a48b72569e44bc", "committedDate": "2020-03-05T09:57:27Z", "message": "apply feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8eafbbe5091b431cfd29493c9340bf84d544463c", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/8eafbbe5091b431cfd29493c9340bf84d544463c", "committedDate": "2020-03-05T10:00:52Z", "message": "add volatile and @Override"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44d03e82dd3d35702ff9bfbe28970bacf91b4921", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/44d03e82dd3d35702ff9bfbe28970bacf91b4921", "committedDate": "2020-03-06T09:56:42Z", "message": "Merge branch 'master' into close_on_queue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDg0MjA5", "url": "https://github.com/apache/lucene-solr/pull/1319#pullrequestreview-370484209", "createdAt": "2020-03-06T17:05:35Z", "commit": {"oid": "44d03e82dd3d35702ff9bfbe28970bacf91b4921"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzowNTozNVrOFzAZwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzowNzo1MlrOFzAeig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyODI4OQ==", "bodyText": "nit: add a new line", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389028289", "createdAt": "2020-03-06T17:05:35Z", "author": {"login": "dnhatn"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,76 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final CloseableQueue eventQueue = new CloseableQueue(this);\n+\n+  static final class CloseableQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    CloseableQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {\n+      if (permits.tryAcquire() == false) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+      if (closed) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+    }\n+\n+    boolean add(Event event) {\n+      tryAcquire();\n+      try {\n+        return queue.add(event);\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    void processEvents() throws IOException {\n+      tryAcquire();\n+      try {\n+        processEventsInternal();\n+      }finally {\n+        permits.release();\n+      }\n+    }\n+    private void processEventsInternal() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d03e82dd3d35702ff9bfbe28970bacf91b4921"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyODQ3Mw==", "bodyText": "I am not sure if EventQueue is a better name?", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389028473", "createdAt": "2020-03-06T17:05:58Z", "author": {"login": "dnhatn"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,76 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final CloseableQueue eventQueue = new CloseableQueue(this);\n+\n+  static final class CloseableQueue implements Closeable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d03e82dd3d35702ff9bfbe28970bacf91b4921"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyODg3OQ==", "bodyText": "nit: space after }", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389028879", "createdAt": "2020-03-06T17:06:49Z", "author": {"login": "dnhatn"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,76 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final CloseableQueue eventQueue = new CloseableQueue(this);\n+\n+  static final class CloseableQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    CloseableQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {\n+      if (permits.tryAcquire() == false) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+      if (closed) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+    }\n+\n+    boolean add(Event event) {\n+      tryAcquire();\n+      try {\n+        return queue.add(event);\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    void processEvents() throws IOException {\n+      tryAcquire();\n+      try {\n+        processEventsInternal();\n+      }finally {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d03e82dd3d35702ff9bfbe28970bacf91b4921"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyOTUxNA==", "bodyText": "I think we don't need to print the stack trace here.", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389029514", "createdAt": "2020-03-06T17:07:52Z", "author": {"login": "dnhatn"}, "path": "lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java", "diffHunk": "@@ -3773,7 +3774,58 @@ public void testRefreshAndRollbackConcurrently() throws Exception {\n       stopped.set(true);\n       indexer.join();\n       refresher.join();\n+      if (w.getTragicException() != null) {\n+        w.getTragicException().printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d03e82dd3d35702ff9bfbe28970bacf91b4921"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82dcf4901ac65b3d30c5f816b23cf66d460c5253", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/82dcf4901ac65b3d30c5f816b23cf66d460c5253", "committedDate": "2020-03-06T18:18:21Z", "message": "Merge branch 'master' into close_on_queue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "569e357fe6d4b934793b02e4a977e35d3b56f02e", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/569e357fe6d4b934793b02e4a977e35d3b56f02e", "committedDate": "2020-03-06T18:19:37Z", "message": "apply review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzkwMjk1", "url": "https://github.com/apache/lucene-solr/pull/1319#pullrequestreview-370790295", "createdAt": "2020-03-07T21:35:39Z", "commit": {"oid": "569e357fe6d4b934793b02e4a977e35d3b56f02e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QyMTozNTozOVrOFzR1aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxNzoxMzowN1rOFzWXSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxMzg5Nw==", "bodyText": "No need to i it with false ... this is already the default for Java.", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389313897", "createdAt": "2020-03-07T21:35:39Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,77 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final EventQueue eventQueue = new EventQueue(this);\n+\n+  static final class EventQueue implements Closeable {\n+    private volatile boolean closed = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "569e357fe6d4b934793b02e4a977e35d3b56f02e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxMzkzMA==", "bodyText": "Hmm should we permits.release before throwing AlreadyClosedException?  Otherwise couldn't we maybe deadlock another thread doing close when it does permits.acquire(Integer.MAX_VALUE)?", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389313930", "createdAt": "2020-03-07T21:36:27Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,77 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final EventQueue eventQueue = new EventQueue(this);\n+\n+  static final class EventQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    EventQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {\n+      if (permits.tryAcquire() == false) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+      if (closed) {\n+        throw new AlreadyClosedException(\"queue is closed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "569e357fe6d4b934793b02e4a977e35d3b56f02e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4NzQ0OA==", "bodyText": "Maybe rewrite to assert permits.availablePermits() < Integer.MAX_VALUE for easier readability?", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389387448", "createdAt": "2020-03-08T17:05:07Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,77 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final EventQueue eventQueue = new EventQueue(this);\n+\n+  static final class EventQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    EventQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {\n+      if (permits.tryAcquire() == false) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+      if (closed) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+    }\n+\n+    boolean add(Event event) {\n+      tryAcquire();\n+      try {\n+        return queue.add(event);\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    void processEvents() throws IOException {\n+      tryAcquire();\n+      try {\n+        processEventsInternal();\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    private void processEventsInternal() throws IOException {\n+      assert Integer.MAX_VALUE - permits.availablePermits() > 0 : \"must acquire a permit before processing events\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "569e357fe6d4b934793b02e4a977e35d3b56f02e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4NzczMQ==", "bodyText": "Why synchronized here (no other method is synchronized)?  Just to prevent two threads from calling close at once?", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389387731", "createdAt": "2020-03-08T17:08:19Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,77 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final EventQueue eventQueue = new EventQueue(this);\n+\n+  static final class EventQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    EventQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {\n+      if (permits.tryAcquire() == false) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+      if (closed) {\n+        throw new AlreadyClosedException(\"queue is closed\");\n+      }\n+    }\n+\n+    boolean add(Event event) {\n+      tryAcquire();\n+      try {\n+        return queue.add(event);\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    void processEvents() throws IOException {\n+      tryAcquire();\n+      try {\n+        processEventsInternal();\n+      } finally {\n+        permits.release();\n+      }\n+    }\n+\n+    private void processEventsInternal() throws IOException {\n+      assert Integer.MAX_VALUE - permits.availablePermits() > 0 : \"must acquire a permit before processing events\";\n+      Event event;\n+      while ((event = queue.poll()) != null) {\n+        event.process(writer);\n+      }\n+    }\n+\n+    @Override\n+    public synchronized void close() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "569e357fe6d4b934793b02e4a977e35d3b56f02e"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4ODEwNg==", "bodyText": "Can we rename this to acquire?  If it fails, it throws an exception, so upon returning, it always succeeds?", "url": "https://github.com/apache/lucene-solr/pull/1319#discussion_r389388106", "createdAt": "2020-03-08T17:13:07Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java", "diffHunk": "@@ -299,7 +300,77 @@ static int getActualMaxDocs() {\n   final FieldNumbers globalFieldNumberMap;\n \n   final DocumentsWriter docWriter;\n-  private final Queue<Event> eventQueue = new ConcurrentLinkedQueue<>();\n+  private final EventQueue eventQueue = new EventQueue(this);\n+\n+  static final class EventQueue implements Closeable {\n+    private volatile boolean closed = false;\n+    private final Semaphore permits = new Semaphore(Integer.MAX_VALUE);\n+    private final Queue<Event> queue = new ConcurrentLinkedQueue<>();\n+    private final IndexWriter writer;\n+\n+    EventQueue(IndexWriter writer) {\n+      this.writer = writer;\n+    }\n+\n+    private void tryAcquire() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "569e357fe6d4b934793b02e4a977e35d3b56f02e"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "694cf08ad87b6871fe7b0cabad0114271994736d", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/694cf08ad87b6871fe7b0cabad0114271994736d", "committedDate": "2020-03-08T19:24:07Z", "message": "add feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecb92e25b31dc777d51be49f756f49a31be72f2a", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/ecb92e25b31dc777d51be49f756f49a31be72f2a", "committedDate": "2020-03-08T19:26:47Z", "message": "add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5652c30d58c26f477ba5a4f3883db6880a260d63", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/5652c30d58c26f477ba5a4f3883db6880a260d63", "committedDate": "2020-03-09T17:56:00Z", "message": "Merge branch 'master' into close_on_queue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b07f5a65341948d2b9f1770d07ab8fb2cec5ed5", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/4b07f5a65341948d2b9f1770d07ab8fb2cec5ed5", "committedDate": "2020-03-10T06:51:13Z", "message": "add changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDIzNTQ2", "url": "https://github.com/apache/lucene-solr/pull/1319#pullrequestreview-372023546", "createdAt": "2020-03-10T14:48:39Z", "commit": {"oid": "4b07f5a65341948d2b9f1770d07ab8fb2cec5ed5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "622bd589908f1e779bb3d2998184e9b3607b204a", "author": {"user": {"login": "s1monw", "name": "Simon Willnauer"}}, "url": "https://github.com/apache/lucene-solr/commit/622bd589908f1e779bb3d2998184e9b3607b204a", "committedDate": "2020-03-10T19:38:04Z", "message": "Merge branch 'master' into close_on_queue"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2178, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}