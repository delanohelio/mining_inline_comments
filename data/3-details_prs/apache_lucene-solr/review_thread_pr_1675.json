{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5ODkxODgz", "number": 1675, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTo1MToxNlrOEPllEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTowNzozM1rOER92KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Nzc5NzkzOnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/core/SolrCore.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTo1MToxNlrOGzYPdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNToyODo1OVrOG0op4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyNzczMg==", "bodyText": "Should it call apiAssumeStandalone()?", "url": "https://github.com/apache/lucene-solr/pull/1675#discussion_r456527732", "createdAt": "2020-07-17T15:51:16Z", "author": {"login": "bruno-roustant"}, "path": "solr/core/src/java/org/apache/solr/core/SolrCore.java", "diffHunk": "@@ -487,10 +488,13 @@ public String getName() {\n   }\n \n   public void setName(String v) {\n+    Objects.requireNonNull(v);\n+    boolean renamed = this.name != null && !this.name.equals(v);\n+    assert !renamed || coreDescriptor.getCloudDescriptor() == null : \"Cores are not renamed in SolrCloud\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3dcb6238c199ef9865c4ae0ca2b9e99c28558cf"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY4NDI1Mg==", "bodyText": "I chose to name \"apiAssumeStandalone\" that because it's intended for primary service/API methods (likely coming from a user) yielding a BAD_REQUEST instead of SERVER_ERROR.  SolrCore.setName is more of an internal detail method where an assertion seemed best.  Perhaps I should add a method on SolrCore \"isSolrCloud\" or \"isStandalone\" and/or assumeStandalone or assumeSolrCloud and use these more pervasively?  I feel that could be its own issue since there are many places that could be enhanced/clarified to use this.  Across Solr there are various techniques like checking the subclass of the core's SolrResourceLoader or checking if the CoreContainer has a ZkController.  A consistent approach would be nicer; perhaps separate for CoreContainer level vs SolrCore level", "url": "https://github.com/apache/lucene-solr/pull/1675#discussion_r456684252", "createdAt": "2020-07-17T21:35:26Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/SolrCore.java", "diffHunk": "@@ -487,10 +488,13 @@ public String getName() {\n   }\n \n   public void setName(String v) {\n+    Objects.requireNonNull(v);\n+    boolean renamed = this.name != null && !this.name.equals(v);\n+    assert !renamed || coreDescriptor.getCloudDescriptor() == null : \"Cores are not renamed in SolrCloud\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyNzczMg=="}, "originalCommit": {"oid": "d3dcb6238c199ef9865c4ae0ca2b9e99c28558cf"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE3NDkwNQ==", "bodyText": "+1 to have a consistent and more pervasive approach. It would first make the code clearer to use, and would probably avoid bugs.", "url": "https://github.com/apache/lucene-solr/pull/1675#discussion_r457174905", "createdAt": "2020-07-20T08:31:33Z", "author": {"login": "bruno-roustant"}, "path": "solr/core/src/java/org/apache/solr/core/SolrCore.java", "diffHunk": "@@ -487,10 +488,13 @@ public String getName() {\n   }\n \n   public void setName(String v) {\n+    Objects.requireNonNull(v);\n+    boolean renamed = this.name != null && !this.name.equals(v);\n+    assert !renamed || coreDescriptor.getCloudDescriptor() == null : \"Cores are not renamed in SolrCloud\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyNzczMg=="}, "originalCommit": {"oid": "d3dcb6238c199ef9865c4ae0ca2b9e99c28558cf"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0NTIxNw==", "bodyText": "I'll file a new issue for that.", "url": "https://github.com/apache/lucene-solr/pull/1675#discussion_r457845217", "createdAt": "2020-07-21T05:28:59Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/SolrCore.java", "diffHunk": "@@ -487,10 +488,13 @@ public String getName() {\n   }\n \n   public void setName(String v) {\n+    Objects.requireNonNull(v);\n+    boolean renamed = this.name != null && !this.name.equals(v);\n+    assert !renamed || coreDescriptor.getCloudDescriptor() == null : \"Cores are not renamed in SolrCloud\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyNzczMg=="}, "originalCommit": {"oid": "d3dcb6238c199ef9865c4ae0ca2b9e99c28558cf"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzgxNDQ0OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTo1NjozMFrOGzYahw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTo1NjozMFrOGzYahw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUzMDU2Nw==", "bodyText": "Should it call apiAssumeStandalone()?", "url": "https://github.com/apache/lucene-solr/pull/1675#discussion_r456530567", "createdAt": "2020-07-17T15:56:30Z", "author": {"login": "bruno-roustant"}, "path": "solr/core/src/java/org/apache/solr/metrics/SolrCoreMetricManager.java", "diffHunk": "@@ -92,10 +92,10 @@ public void loadReporters() {\n    * are carried over and will be used under the new core name.\n    * This method also reloads reporters so that they use the new core name.\n    */\n-  public void afterCoreSetName() {\n+  public void afterCoreRename() {\n+    assert core.getCoreDescriptor().getCloudDescriptor() == null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3dcb6238c199ef9865c4ae0ca2b9e99c28558cf"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODc5NjAyOnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzo1Nzo0NVrOG05Rgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNTowNzoyNVrOG3ChzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODExNzUwNw==", "bodyText": "change java doc reflecting this change", "url": "https://github.com/apache/lucene-solr/pull/1675#discussion_r458117507", "createdAt": "2020-07-21T13:57:45Z", "author": {"login": "juanka588"}, "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -1788,6 +1786,7 @@ public void unload(String name, boolean deleteIndexDir, boolean deleteDataDir, b\n   }\n \n   public void rename(String name, String toName) {\n+    apiAssumeStandalone();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83142f21ad75f477e9e38c67921c94f3d6d52dc1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NjI4NA==", "bodyText": "I think it'd be more pertinent to update the Solr Ref Guide, which is what users would see.  This method here is very internal.  At least if a user tries it, it'll now not work with an error telling them so, as opposed to before, bad things would probably happen.", "url": "https://github.com/apache/lucene-solr/pull/1675#discussion_r460366284", "createdAt": "2020-07-25T05:07:25Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -1788,6 +1786,7 @@ public void unload(String name, boolean deleteIndexDir, boolean deleteDataDir, b\n   }\n \n   public void rename(String name, String toName) {\n+    apiAssumeStandalone();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODExNzUwNw=="}, "originalCommit": {"oid": "83142f21ad75f477e9e38c67921c94f3d6d52dc1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjc0NTM3OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/core/SolrCore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTowNzozM1rOG29yZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNTowMjoyM1rOG3CgPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI4ODYxMw==", "bodyText": "More clear as !v.equals(this.name) I think?", "url": "https://github.com/apache/lucene-solr/pull/1675#discussion_r460288613", "createdAt": "2020-07-24T21:07:33Z", "author": {"login": "madrob"}, "path": "solr/core/src/java/org/apache/solr/core/SolrCore.java", "diffHunk": "@@ -497,10 +498,13 @@ public String getName() {\n   }\n \n   public void setName(String v) {\n+    Objects.requireNonNull(v);\n+    boolean renamed = this.name != null && !this.name.equals(v);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83142f21ad75f477e9e38c67921c94f3d6d52dc1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTg4NA==", "bodyText": "I must check if this.name != null because I don't want to consider an initial population (from constructor) a rename even though in some sense one could argue it is.\nI'll follow up this PR with removal of the existence of logid which will have the effect of simplifying setName which will in turn make it clearer to have the constructor simply set the name without calling setName.  At that point I might also rename setName to rename and ensure it's only called to actually do a rename.   Right now the constructor deserves to be calling setName because it populates logid and I wouldn't want that logic duplicated.", "url": "https://github.com/apache/lucene-solr/pull/1675#discussion_r460365884", "createdAt": "2020-07-25T05:02:23Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/core/SolrCore.java", "diffHunk": "@@ -497,10 +498,13 @@ public String getName() {\n   }\n \n   public void setName(String v) {\n+    Objects.requireNonNull(v);\n+    boolean renamed = this.name != null && !this.name.equals(v);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI4ODYxMw=="}, "originalCommit": {"oid": "83142f21ad75f477e9e38c67921c94f3d6d52dc1"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1375, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}