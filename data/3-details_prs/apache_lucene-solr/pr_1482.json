{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNzg3MjEz", "number": 1482, "title": "LUCENE-7822: CodecUtil#checkFooter should throw a CorruptIndexException as the main exception.", "bodyText": "See https://issues.apache.org/jira/browse/LUCENE-7822.", "createdAt": "2020-05-04T07:42:37Z", "url": "https://github.com/apache/lucene-solr/pull/1482", "merged": true, "mergeCommit": {"oid": "583499243a2176bef503859218fe6ba4ebb547d2"}, "closed": true, "closedAt": "2020-05-07T11:04:21Z", "author": {"login": "jpountz"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd6ijJgH2gAyNDEyNzg3MjEzOjA5ZmRjODdlYWQxZjM1YTA2ZWE0ZjAwZWJmODQ2ODE5ZDMyNjhlMWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABce5HhggH2gAyNDEyNzg3MjEzOjNkYTJjZDU3NDJhOGU3ZmM0ZWYyNjM4YTZiMzBmMWI2OTZmYjAwZWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "09fdc87ead1f35a06ea4f00ebf846819d3268e1b", "author": {"user": {"login": "jpountz", "name": "Adrien Grand"}}, "url": "https://github.com/apache/lucene-solr/commit/09fdc87ead1f35a06ea4f00ebf846819d3268e1b", "committedDate": "2020-05-04T07:42:07Z", "message": "LUCENE-7822: CodecUtil#checkFooter should throw a CorruptIndexException as the main exception."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0OTQ5OTc5", "url": "https://github.com/apache/lucene-solr/pull/1482#pullrequestreview-404949979", "createdAt": "2020-05-04T12:43:05Z", "commit": {"oid": "09fdc87ead1f35a06ea4f00ebf846819d3268e1b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjo0MzowNVrOGP-iTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjo0NToyNlrOGP-oEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwNjQxMg==", "bodyText": "Nitpick: ; instead of , since these are really two separate sentences?", "url": "https://github.com/apache/lucene-solr/pull/1482#discussion_r419406412", "createdAt": "2020-05-04T12:43:05Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/codecs/CodecUtil.java", "diffHunk": "@@ -448,24 +448,27 @@ public static void checkFooter(ChecksumIndexInput in, Throwable priorException)\n       checkFooter(in);\n     } else {\n       try {\n+        // If we have evidence of corruption then we return the corruption as the\n+        // main exception and the prior exception gets suppressed. Otherwise we\n+        // return the prior exception with a suppressed exception that notifies\n+        // the user that checksums matched.\n         long remaining = in.length() - in.getFilePointer();\n         if (remaining < footerLength()) {\n           // corruption caused us to read into the checksum footer already: we can't proceed\n-          priorException.addSuppressed(new CorruptIndexException(\"checksum status indeterminate: remaining=\" + remaining +\n-                                                                 \", please run checkindex for more details\", in));\n+          throw new CorruptIndexException(\"checksum status indeterminate: remaining=\" + remaining +\n+                                          \", please run checkindex for more details\", in);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09fdc87ead1f35a06ea4f00ebf846819d3268e1b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwNzg4OA==", "bodyText": "Do we normally (in other places) also use CorruptIndexException to indicate a valid checksum?  I feel like we need a NotCorruptIndexException for this :)", "url": "https://github.com/apache/lucene-solr/pull/1482#discussion_r419407888", "createdAt": "2020-05-04T12:45:26Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/codecs/CodecUtil.java", "diffHunk": "@@ -448,24 +448,27 @@ public static void checkFooter(ChecksumIndexInput in, Throwable priorException)\n       checkFooter(in);\n     } else {\n       try {\n+        // If we have evidence of corruption then we return the corruption as the\n+        // main exception and the prior exception gets suppressed. Otherwise we\n+        // return the prior exception with a suppressed exception that notifies\n+        // the user that checksums matched.\n         long remaining = in.length() - in.getFilePointer();\n         if (remaining < footerLength()) {\n           // corruption caused us to read into the checksum footer already: we can't proceed\n-          priorException.addSuppressed(new CorruptIndexException(\"checksum status indeterminate: remaining=\" + remaining +\n-                                                                 \", please run checkindex for more details\", in));\n+          throw new CorruptIndexException(\"checksum status indeterminate: remaining=\" + remaining +\n+                                          \", please run checkindex for more details\", in);\n         } else {\n           // otherwise, skip any unread bytes.\n           in.skipBytes(remaining - footerLength());\n           \n           // now check the footer\n-          try {\n-            long checksum = checkFooter(in);\n-            priorException.addSuppressed(new CorruptIndexException(\"checksum passed (\" + Long.toHexString(checksum) + \n-                                                                   \"). possibly transient resource issue, or a Lucene or JVM bug\", in));\n-          } catch (CorruptIndexException t) {\n-            priorException.addSuppressed(t);\n-          }\n+          long checksum = checkFooter(in);\n+          priorException.addSuppressed(new CorruptIndexException(\"checksum passed (\" + Long.toHexString(checksum) +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09fdc87ead1f35a06ea4f00ebf846819d3268e1b"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MDI1ODMz", "url": "https://github.com/apache/lucene-solr/pull/1482#pullrequestreview-405025833", "createdAt": "2020-05-04T14:12:36Z", "commit": {"oid": "09fdc87ead1f35a06ea4f00ebf846819d3268e1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDoxMjozN1rOGQCPbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDoxMjozN1rOGQCPbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NzExNg==", "bodyText": "no longer as suppressed", "url": "https://github.com/apache/lucene-solr/pull/1482#discussion_r419467116", "createdAt": "2020-05-04T14:12:37Z", "author": {"login": "madrob"}, "path": "lucene/core/src/test/org/apache/lucene/util/TestOfflineSorter.java", "diffHunk": "@@ -353,12 +352,10 @@ protected void corruptFile() throws IOException {\n \n       // This corruption made OfflineSorter fail with its own exception, but we verify it also went and added (as suppressed) that the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09fdc87ead1f35a06ea4f00ebf846819d3268e1b"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3da2cd5742a8e7fc4ef2638a6b30f1b696fb00ea", "author": {"user": {"login": "jpountz", "name": "Adrien Grand"}}, "url": "https://github.com/apache/lucene-solr/commit/3da2cd5742a8e7fc4ef2638a6b30f1b696fb00ea", "committedDate": "2020-05-07T08:36:37Z", "message": "iter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2676, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}