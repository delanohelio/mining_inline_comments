{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1Mzg4Nzk0", "number": 1389, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMDozMzowNFrODwJ6RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzo0NzoyOVrODwSuNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODIwNjEyOnYy", "diffSide": "RIGHT", "path": "lucene/core/src/java/org/apache/lucene/index/BufferedUpdates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMDozMzowNFrOGC_36w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMjo1NDo0NFrOGDH24g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5Njg0Mw==", "bodyText": "Instead of counting this here on clear, can we use a second counter for the deleteTerms next to bytesUsed? This would be great. It doesn't need to be thread safe IMO", "url": "https://github.com/apache/lucene-solr/pull/1389#discussion_r405796843", "createdAt": "2020-04-08T20:33:04Z", "author": {"login": "s1monw"}, "path": "lucene/core/src/java/org/apache/lucene/index/BufferedUpdates.java", "diffHunk": "@@ -176,8 +176,11 @@ void addBinaryUpdate(BinaryDocValuesUpdate update, int docIDUpto) {\n   }\n \n   void clearDeleteTerms() {\n-    deleteTerms.clear();\n     numTermDeletes.set(0);\n+    deleteTerms.forEach((term, docIDUpto) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "421d83413b2f004c963ca941e501583cf2a072c6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkyNzY1MA==", "bodyText": "add a counter named termsBytesUsed", "url": "https://github.com/apache/lucene-solr/pull/1389#discussion_r405927650", "createdAt": "2020-04-09T02:54:44Z", "author": {"login": "bringyou"}, "path": "lucene/core/src/java/org/apache/lucene/index/BufferedUpdates.java", "diffHunk": "@@ -176,8 +176,11 @@ void addBinaryUpdate(BinaryDocValuesUpdate update, int docIDUpto) {\n   }\n \n   void clearDeleteTerms() {\n-    deleteTerms.clear();\n     numTermDeletes.set(0);\n+    deleteTerms.forEach((term, docIDUpto) -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc5Njg0Mw=="}, "originalCommit": {"oid": "421d83413b2f004c963ca941e501583cf2a072c6"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTY0OTgxOnYy", "diffSide": "RIGHT", "path": "lucene/core/src/java/org/apache/lucene/index/BufferedUpdates.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzo0NzoyOVrOGDNVlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzo0NzoyOVrOGDNVlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAxNzQzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private final Counter termsBytesUsed = Counter.newCounter();\n          \n          \n            \n              private final Counter termsBytesUsed = Counter.newCounter(true);\n          \n      \n    \n    \n  \n\nSorry I looked at it again and we have one case where we use it in a global context in the delete queue so we need the threadsafety. Rest looks great.", "url": "https://github.com/apache/lucene-solr/pull/1389#discussion_r406017431", "createdAt": "2020-04-09T07:47:29Z", "author": {"login": "s1monw"}, "path": "lucene/core/src/java/org/apache/lucene/index/BufferedUpdates.java", "diffHunk": "@@ -80,6 +80,7 @@ load factor (say 2 * POINTER).  Entry is object w/\n \n   private final Counter bytesUsed = Counter.newCounter(true);\n   final Counter fieldUpdatesBytesUsed = Counter.newCounter(true);\n+  private final Counter termsBytesUsed = Counter.newCounter();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f661d4341e8e72e41eb7da07f753dbfd66a1d58"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 739, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}