{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NDY5NzE5", "number": 1490, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzo0MTozN1rOD89c0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzo0MTozN1rOD89c0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjQ3OTU0OnYy", "diffSide": "RIGHT", "path": "solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzo0MTozN1rOGWOGCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzo0MTozN1rOGWOGCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk1Mjc3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      1 * 1024 * 1024 ); // fileSizeThreshold after which will go to disk\n          \n          \n            \n                      100 * 1024 ); // fileSizeThreshold after which will go to disk\n          \n      \n    \n    \n  \n\nLowering to reduce DoS risk", "url": "https://github.com/apache/lucene-solr/pull/1490#discussion_r425952778", "createdAt": "2020-05-15T17:41:37Z", "author": {"login": "dsmiley"}, "path": "solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers.java", "diffHunk": "@@ -571,59 +552,99 @@ public SolrParams parseParamsAndFillStreams(\n     }\n   }\n \n-\n-\n   /**\n    * Extract Multipart streams\n    */\n   static class MultipartRequestParser implements SolrRequestParser {\n-    private final int uploadLimitKB;\n-    private DiskFileItemFactory factory = new DiskFileItemFactory();\n-    \n-    public MultipartRequestParser(int limit) {\n-      uploadLimitKB = limit;\n+    private final MultipartConfigElement multipartConfigElement;\n \n-      // Set factory constraints\n-      FileCleaningTracker fct = fileCleaningTracker;\n-      if (fct != null) {\n-        factory.setFileCleaningTracker(fileCleaningTracker);\n-      }\n-      // TODO - configure factory.setSizeThreshold(yourMaxMemorySize);\n-      // TODO - configure factory.setRepository(yourTempDirectory);\n+    public MultipartRequestParser(int uploadLimitKB) {\n+      multipartConfigElement = new MultipartConfigElement(\n+          null, // temp dir (null=default)\n+          -1, // maxFileSize  (-1=none)\n+          uploadLimitKB * 1024, // maxRequestSize\n+          1 * 1024 * 1024 ); // fileSizeThreshold after which will go to disk", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0f98940411da91ce9838dd6a417d7c81ba9e2a3"}, "originalPosition": 121}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1520, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}