{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MDE0NjA4", "number": 1489, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMTo0NToyNFrOD6-OyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowNDowMFrOD7zkUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTYzNTkzOnYy", "diffSide": "RIGHT", "path": "lucene/core/src/test/org/apache/lucene/search/TestRegexpQuery.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMTo0NToyNFrOGTDfIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMTo0NToyNFrOGTDfIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYzMzI0OA==", "bodyText": "I think these tests should be in TestRegExp rather than in TestRegexpQuery?", "url": "https://github.com/apache/lucene-solr/pull/1489#discussion_r422633248", "createdAt": "2020-05-10T11:45:24Z", "author": {"login": "romseygeek"}, "path": "lucene/core/src/test/org/apache/lucene/search/TestRegexpQuery.java", "diffHunk": "@@ -115,6 +145,128 @@ public Automaton getAutomaton(String name) {\n     assertEquals(1, searcher.search(query, 5).totalHits.value);\n   }\n   \n+  public void testCoreJavaParity() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bacdad4b204d393eba15525897cb40be0836d6"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDM3MTI0OnYy", "diffSide": "RIGHT", "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowMzowMFrOGUW4Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowMzowMFrOGUW4Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5OTU2Mw==", "bodyText": "Can you add the javadocs for this in the class definition ?", "url": "https://github.com/apache/lucene-solr/pull/1489#discussion_r423999563", "createdAt": "2020-05-12T20:03:00Z", "author": {"login": "jimczi"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "diffHunk": "@@ -1101,10 +1116,51 @@ final RegExp parseCharClasses() throws IllegalArgumentException {\n   }\n   \n   final RegExp parseCharClass() throws IllegalArgumentException {\n+    RegExp predefinedExp = matchPredefinedCharacterClass();\n+    if (predefinedExp != null) {\n+      return predefinedExp;\n+    }\n+        \n     int c = parseCharExp();\n     if (match('-')) return makeCharRange(c, parseCharExp());\n     else return makeChar(c);\n   }\n+\n+  RegExp expandPredefined() {\n+    //See https://docs.oracle.com/javase/tutorial/essential/regex/pre_char_classes.html", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "693ae6ce762877f28097e5c2cc89fcb4053a5ba4"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDM3NDU4OnYy", "diffSide": "RIGHT", "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowNDowMFrOGUW6YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowNDowMFrOGUW6YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMDA5Nw==", "bodyText": "Maybe rename to REGEXP_PRE_CLASS ?", "url": "https://github.com/apache/lucene-solr/pull/1489#discussion_r424000097", "createdAt": "2020-05-12T20:04:00Z", "author": {"login": "jimczi"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "diffHunk": "@@ -317,7 +317,8 @@\n public class RegExp {\n   \n   enum Kind {\n-    REGEXP_UNION, REGEXP_CONCATENATION, REGEXP_INTERSECTION, REGEXP_OPTIONAL, REGEXP_REPEAT, REGEXP_REPEAT_MIN, REGEXP_REPEAT_MINMAX, REGEXP_COMPLEMENT, REGEXP_CHAR, REGEXP_CHAR_RANGE, REGEXP_ANYCHAR, REGEXP_EMPTY, REGEXP_STRING, REGEXP_ANYSTRING, REGEXP_AUTOMATON, REGEXP_INTERVAL\n+    REGEXP_UNION, REGEXP_CONCATENATION, REGEXP_INTERSECTION, REGEXP_OPTIONAL, REGEXP_REPEAT, REGEXP_REPEAT_MIN, REGEXP_REPEAT_MINMAX, REGEXP_COMPLEMENT, REGEXP_CHAR, REGEXP_CHAR_RANGE, REGEXP_ANYCHAR, REGEXP_EMPTY, REGEXP_STRING, REGEXP_ANYSTRING, REGEXP_AUTOMATON, REGEXP_INTERVAL,\n+    REGEXP_SHORTHAND", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "693ae6ce762877f28097e5c2cc89fcb4053a5ba4"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1516, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}