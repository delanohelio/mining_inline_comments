{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MzEyMjY3", "number": 1437, "title": "zkRun+https", "bodyText": "When starting an embedded zk server, if we can detect that we are using https, set the urlScheme cluster property accordingly.", "createdAt": "2020-04-17T19:52:48Z", "url": "https://github.com/apache/lucene-solr/pull/1437", "merged": true, "mergeCommit": {"oid": "58f9c79c6d2bc6ae57e823dff071dd68a72d8956"}, "closed": true, "closedAt": "2020-04-20T17:55:43Z", "author": {"login": "madrob"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYmbRrgH2gAyNDA1MzEyMjY3OjBlNWMyODA0YzYxNWM2NzhmODZlZjZhN2RlZWMyNjg3MDFiMWI5ZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZjuGOgFqTM5NjcxOTQ1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0e5c2804c615c678f86ef6a7deec268701b1b9de", "author": {"user": {"login": "madrob", "name": "Mike Drob"}}, "url": "https://github.com/apache/lucene-solr/commit/0e5c2804c615c678f86ef6a7deec268701b1b9de", "committedDate": "2020-04-17T19:26:27Z", "message": "SOLR-14412 Check for results after retries failed in SolrClientNodeStateProvider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0281999bee2bad069a66438e05138ab6feee1ae5", "author": {"user": {"login": "madrob", "name": "Mike Drob"}}, "url": "https://github.com/apache/lucene-solr/commit/0281999bee2bad069a66438e05138ab6feee1ae5", "committedDate": "2020-04-17T19:26:27Z", "message": "SOLR-14412 Set urlScheme=https with zkRun"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NzE5NDU4", "url": "https://github.com/apache/lucene-solr/pull/1437#pullrequestreview-396719458", "createdAt": "2020-04-20T18:47:37Z", "commit": {"oid": "0281999bee2bad069a66438e05138ab6feee1ae5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODo0NzozN1rOGIio6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODo0NzozN1rOGIio6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwOTMyMw==", "bodyText": "I recommend {} and passing \"e\".  (note Erick's efforts lately to tame the loggers)", "url": "https://github.com/apache/lucene-solr/pull/1437#discussion_r411609323", "createdAt": "2020-04-20T18:47:37Z", "author": {"login": "dsmiley"}, "path": "solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientNodeStateProvider.java", "diffHunk": "@@ -398,6 +337,39 @@ public Map getZkJson(String path) throws KeeperException, InterruptedException {\n       return Utils.getJson(zkClientClusterStateProvider.getZkStateReader().getZkClient(), path, true);\n     }\n \n+    /**\n+     * Will attempt to call {@link #invoke(String, String, SolrParams)} up to five times, retrying on any IO Exceptions\n+     */\n+    public SimpleSolrResponse invokeWithRetry(String solrNode, String path, SolrParams params) throws InterruptedException, IOException, SolrServerException {\n+      int retries = 5;\n+      int cnt = 0;\n+\n+      while (cnt++ < retries) {\n+        try {\n+          return invoke(solrNode, path, params);\n+        } catch (SolrException | SolrServerException | IOException e) {\n+          boolean hasIOExceptionCause = false;\n+\n+          Throwable t = e;\n+          while (t != null) {\n+            if (t instanceof IOException) {\n+              hasIOExceptionCause = true;\n+              break;\n+            }\n+            t = t.getCause();\n+          }\n+\n+          if (hasIOExceptionCause) {\n+            log.info(\"Error on getting remote info, trying again: \" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0281999bee2bad069a66438e05138ab6feee1ae5"}, "originalPosition": 111}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2111, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}