{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MzY3Nzc4", "number": 1184, "title": "LUCENE-9142 Refactor IntSet operations for determinize", "bodyText": "Fix a bug where a frozen set could be symmetrically unequal to the\nsorted set that created it because we compared the backing array\ninstead of only the active elements.", "createdAt": "2020-01-18T00:21:59Z", "url": "https://github.com/apache/lucene-solr/pull/1184", "merged": true, "mergeCommit": {"oid": "abd282d258d23d19b7f7c1e96332a19fa7b7b827"}, "closed": true, "closedAt": "2020-02-06T20:16:46Z", "author": {"login": "madrob"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7nBr6AFqTM0NDk1Mzk5MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBHn0VAH2gAyMzY0MzY3Nzc4OjE2NzVlYTczMjRiMzg1NmM5MjIxOGJhNmMyYmJjMjQ5ZjljMTcyZDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTUzOTkw", "url": "https://github.com/apache/lucene-solr/pull/1184#pullrequestreview-344953990", "createdAt": "2020-01-18T17:40:39Z", "commit": {"oid": "139040496952f487eaedf9acd6e7d0c27ada1135"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxNzo0MDozOVrOFfLgsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxNzo0NDoyNVrOFfLhYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzODc3MQ==", "bodyText": "This is a really bad hash, to be honest.... What is this constructor even used for? It's really sneaky as it allows changes to the content of a \"frozen\" set of values?", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r368238771", "createdAt": "2020-01-18T17:40:39Z", "author": {"login": "dweiss"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/FrozenIntSet.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.util.automaton;\n+\n+public final class FrozenIntSet extends IntSet {\n+  final int state;\n+\n+  public FrozenIntSet(int[] values, int hashCode, int state) {\n+    this.values = values;\n+    this.hashCode = hashCode;\n+    this.state = state;\n+  }\n+\n+  public FrozenIntSet(int num, int state) {\n+    this.values = new int[] { num };\n+    this.state = state;\n+    this.hashCode = 683 + num;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139040496952f487eaedf9acd6e7d0c27ada1135"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzODg1MA==", "bodyText": "I think the hashCode should be private to the abstract class and anything else should call hashCode() (including equals method). Then subclasses that are mutable could return true hashCode of their content (cached or computed).", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r368238850", "createdAt": "2020-01-18T17:41:58Z", "author": {"login": "dweiss"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/IntSet.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.util.automaton;\n+\n+import java.util.Arrays;\n+\n+public abstract class IntSet {\n+    int[] values;\n+\n+    int hashCode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139040496952f487eaedf9acd6e7d0c27ada1135"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzODg3Ng==", "bodyText": "If it's just for debugging then I'd just use a stream and join the values there, it's a one-liner. Space after for(", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r368238876", "createdAt": "2020-01-18T17:43:00Z", "author": {"login": "dweiss"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/IntSet.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.util.automaton;\n+\n+import java.util.Arrays;\n+\n+public abstract class IntSet {\n+    int[] values;\n+\n+    int hashCode;\n+\n+    /**\n+     * @return the number of values contained within this set\n+     */\n+    abstract int size();\n+\n+    @Override\n+    public int hashCode() {\n+        return hashCode;\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        if (other == null) {\n+            return false;\n+        }\n+        if (!(other instanceof IntSet)) {\n+            return false;\n+        }\n+        IntSet intSet = (IntSet) other;\n+        if (hashCode != intSet.hashCode) {\n+            return false;\n+        }\n+        return Arrays.equals(values, 0, size(), intSet.values, 0, intSet.size());\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder().append('[');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139040496952f487eaedf9acd6e7d0c27ada1135"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzODk0NA==", "bodyText": "isn't there a futurearrays method that does this in a single step (without intermediate zeroed int[])?", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r368238944", "createdAt": "2020-01-18T17:44:25Z", "author": {"login": "dweiss"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.java", "diffHunk": "@@ -151,126 +141,23 @@ public void computeHash() {\n     }\n   }\n \n+  /**\n+   * Create a FrozenIntSet from the current values in this IntSet.\n+   *\n+   * Note: Must call computeHash() before calling this method\n+   *\n+   * @param state the state to save\n+   * @return a FrozenIntSet that has the same values and hashCode as this set\n+   */\n   public FrozenIntSet freeze(int state) {\n     final int[] c = new int[upto];\n     System.arraycopy(values, 0, c, 0, upto);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139040496952f487eaedf9acd6e7d0c27ada1135"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDExNjkz", "url": "https://github.com/apache/lucene-solr/pull/1184#pullrequestreview-346011693", "createdAt": "2020-01-21T16:24:32Z", "commit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjoyNDozM1rOFgATvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjozNTo0OFrOFgAu5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwMzgwNQ==", "bodyText": "Hmm does it really need to be public?  I thought it's only the java sources in this package that use it?", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r369103805", "createdAt": "2020-01-21T16:24:33Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/FrozenIntSet.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.util.automaton;\n+\n+public final class FrozenIntSet extends IntSet {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwNDEyNQ==", "bodyText": "protected?", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r369104125", "createdAt": "2020-01-21T16:25:05Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/IntSet.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.util.automaton;\n+\n+import org.apache.lucene.util.ArrayUtil;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * An int set backed by an array.\n+ */\n+public abstract class IntSet {\n+    int[] values;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwNjk0Ng==", "bodyText": "How come the code didn't need/use stale before?", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r369106946", "createdAt": "2020-01-21T16:29:25Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.java", "diffHunk": "@@ -77,6 +88,7 @@ public void incr(int num) {\n         values[i] = num;\n         counts[i] = 1;\n         upto++;\n+        stale = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwNzIxNg==", "bodyText": "Isn't the array discarded as soon as we switch over to the map (so how could it be out of sync)?", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r369107216", "createdAt": "2020-01-21T16:29:52Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.java", "diffHunk": "@@ -16,59 +16,70 @@\n  */\n package org.apache.lucene.util.automaton;\n \n+import java.util.Arrays;\n import java.util.TreeMap;\n import java.util.Map;\n import org.apache.lucene.util.ArrayUtil;\n+import org.apache.lucene.util.SuppressForbidden;\n \n // Just holds a set of int[] states, plus a corresponding\n-// int[] count per state.  Used by\n-// BasicOperations.determinize\n-final class SortedIntSet {\n-  int[] values;\n+// int[] count per state.  Used by Operations.determinize()\n+final class SortedIntSet extends IntSet {\n   int[] counts;\n   int upto;\n-  private int hashCode;\n+\n+  // Tracks if the hashCode computation is out of date and also if the array is out of sync with the map", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwNzgxNw==", "bodyText": "Hmm why did we mark this API forbidden again?", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r369107817", "createdAt": "2020-01-21T16:30:54Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.java", "diffHunk": "@@ -149,128 +156,32 @@ public void computeHash() {\n         hashCode = 683*hashCode + values[i];\n       }\n     }\n+    stale = false;\n   }\n \n+  /**\n+   * Create a FrozenIntSet from the current values in this IntSet.\n+   *\n+   * @return a FrozenIntSet that has the same values and hashCode as this set\n+   */\n+  @SuppressForbidden(reason = \"Arrays.copyOf is a candidate for JVM intrinsic and we know our bounds are good\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwODMwMQ==", "bodyText": "We don't need @Test annotations -- LuceneTestCase runner knows test* methods are tests.", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r369108301", "createdAt": "2020-01-21T16:31:41Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/test/org/apache/lucene/util/automaton/TestIntSet.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.util.automaton;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.apache.lucene.util.LuceneTestCase.random;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+@RunWith(com.carrotsearch.randomizedtesting.RandomizedRunner.class)\n+public class TestIntSet {\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTExMDc1OQ==", "bodyText": "Would be nice to use a native map from HPPC instead -- does HPPC have a sorted map?  Hmm, but this is core, and we don't have any dependencies in Lucene's core :)", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r369110759", "createdAt": "2020-01-21T16:35:48Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.java", "diffHunk": "@@ -16,59 +16,70 @@\n  */\n package org.apache.lucene.util.automaton;\n \n+import java.util.Arrays;\n import java.util.TreeMap;\n import java.util.Map;\n import org.apache.lucene.util.ArrayUtil;\n+import org.apache.lucene.util.SuppressForbidden;\n \n // Just holds a set of int[] states, plus a corresponding\n-// int[] count per state.  Used by\n-// BasicOperations.determinize\n-final class SortedIntSet {\n-  int[] values;\n+// int[] count per state.  Used by Operations.determinize()\n+final class SortedIntSet extends IntSet {\n   int[] counts;\n   int upto;\n-  private int hashCode;\n+\n+  // Tracks if the hashCode computation is out of date and also if the array is out of sync with the map\n+  boolean stale = true;\n+\n+  int hashCode;\n \n   // If we hold more than this many states, we switch from\n   // O(N^2) linear ops to O(N log(N)) TreeMap\n-  private final static int TREE_MAP_CUTOVER = 30;\n+  private final static int TREE_MAP_CUTOVER = 32;\n \n   private final Map<Integer,Integer> map = new TreeMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDk4Nzg5", "url": "https://github.com/apache/lucene-solr/pull/1184#pullrequestreview-346098789", "createdAt": "2020-01-21T18:33:00Z", "commit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d83138bafb6425778dcf61be483192804ee8c8", "author": {"user": {"login": "madrob", "name": "Mike Drob"}}, "url": "https://github.com/apache/lucene-solr/commit/e9d83138bafb6425778dcf61be483192804ee8c8", "committedDate": "2020-01-23T16:17:58Z", "message": "LUCENE-9142 Refactor SortedIntSet for equality\n\nSplit SortedIntSet into a class heirarchy to make comparisons to\nFrozenIntSet more meaningful. Use Arrays.equals for more efficient\ncomparison."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e", "author": {"user": {"login": "madrob", "name": "Mike Drob"}}, "url": "https://github.com/apache/lucene-solr/commit/3997ea0d84bc26f2bfd86c5620e289af8638b32e", "committedDate": "2020-01-21T01:16:42Z", "message": "Review feedback"}, "afterCommit": {"oid": "e9d83138bafb6425778dcf61be483192804ee8c8", "author": {"user": {"login": "madrob", "name": "Mike Drob"}}, "url": "https://github.com/apache/lucene-solr/commit/e9d83138bafb6425778dcf61be483192804ee8c8", "committedDate": "2020-01-23T16:17:58Z", "message": "LUCENE-9142 Refactor SortedIntSet for equality\n\nSplit SortedIntSet into a class heirarchy to make comparisons to\nFrozenIntSet more meaningful. Use Arrays.equals for more efficient\ncomparison."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fea83e7c0cbb0eacd08f964335442106ce31bab", "author": {"user": {"login": "madrob", "name": "Mike Drob"}}, "url": "https://github.com/apache/lucene-solr/commit/0fea83e7c0cbb0eacd08f964335442106ce31bab", "committedDate": "2020-01-23T18:08:51Z", "message": "LUCENE-9142 Add tests for IntSet"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMDAwMDc3", "url": "https://github.com/apache/lucene-solr/pull/1184#pullrequestreview-353000077", "createdAt": "2020-02-04T14:07:20Z", "commit": {"oid": "0fea83e7c0cbb0eacd08f964335442106ce31bab"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNDowNzoyMVrOFlVN7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNDoxMDoyNVrOFlVVEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY4OTI2Mw==", "bodyText": "Could we rename to getArray?  asArray makes me think it might make a copy ...", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r374689263", "createdAt": "2020-02-04T14:07:21Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/java/org/apache/lucene/util/automaton/FrozenIntSet.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.util.automaton;\n+\n+import java.util.Arrays;\n+\n+final class FrozenIntSet extends IntSet {\n+  final int[] values;\n+  final int hashCode;\n+  final int state;\n+\n+  FrozenIntSet(int[] values, int hashCode, int state) {\n+    this.values = values;\n+    this.hashCode = hashCode;\n+    this.state = state;\n+  }\n+\n+  @Override\n+  int[] asArray() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fea83e7c0cbb0eacd08f964335442106ce31bab"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY5MTA4OQ==", "bodyText": "I think you can remove these @Test annotations?", "url": "https://github.com/apache/lucene-solr/pull/1184#discussion_r374691089", "createdAt": "2020-02-04T14:10:25Z", "author": {"login": "mikemccand"}, "path": "lucene/core/src/test/org/apache/lucene/util/automaton/TestIntSet.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.util.automaton;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.apache.lucene.util.LuceneTestCase.random;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+@RunWith(com.carrotsearch.randomizedtesting.RandomizedRunner.class)\n+public class TestIntSet {\n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwODMwMQ=="}, "originalCommit": {"oid": "3997ea0d84bc26f2bfd86c5620e289af8638b32e"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1675ea7324b3856c92218ba6c2bbc249f9c172d1", "author": {"user": {"login": "madrob", "name": "Mike Drob"}}, "url": "https://github.com/apache/lucene-solr/commit/1675ea7324b3856c92218ba6c2bbc249f9c172d1", "committedDate": "2020-02-04T20:32:50Z", "message": "LUCENE-9142 Review feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2240, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}