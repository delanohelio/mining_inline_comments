{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzYxODEw", "number": 1542, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMTowMTowM1rOEEPuPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMTowMTowM1rOEEPuPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODg3MzU2OnYy", "diffSide": "RIGHT", "path": "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMTowMTowM1rOGhvwHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxMDowNFrOGhwBsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzODU1OQ==", "bodyText": "Tradeoff with this one time matrix walk and copy is that we copy all nodes, even those that might not be needed (because not present in parameter nodes). I do like the approach though it's cleaner than the code I wrote.\nMaybe keep this initial loop but just store Row references, then do the copy below when newRow is needed? (there's already an if bloc when it's null, so copy action can easily be placed in else bloc).", "url": "https://github.com/apache/lucene-solr/pull/1542#discussion_r438038559", "createdAt": "2020-06-10T11:01:03Z", "author": {"login": "murblanc"}, "path": "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java", "diffHunk": "@@ -644,15 +643,13 @@ public Session cloneToNewSession(SolrCloudManager cloudManager) {\n       List<Clause> expandedClauses = new ArrayList<>(this.expandedClauses);\n \n       List<Row> matrix = new ArrayList<>(nodes.size());\n+      Map<String, Row> copyNodes = new HashMap<>();\n+      for (Row oldRow: this.matrix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7b3e714f08479a10d868ce7da428450d03ae39"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0MzA1OQ==", "bodyText": "even those that might not be needed\n\nI believe it's a reasonable tradeoff because most of the times nodes do not go away. Yes, we make an extra copy in those rare occasions, but it should be OK.", "url": "https://github.com/apache/lucene-solr/pull/1542#discussion_r438043059", "createdAt": "2020-06-10T11:10:04Z", "author": {"login": "noblepaul"}, "path": "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java", "diffHunk": "@@ -644,15 +643,13 @@ public Session cloneToNewSession(SolrCloudManager cloudManager) {\n       List<Clause> expandedClauses = new ArrayList<>(this.expandedClauses);\n \n       List<Row> matrix = new ArrayList<>(nodes.size());\n+      Map<String, Row> copyNodes = new HashMap<>();\n+      for (Row oldRow: this.matrix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzODU1OQ=="}, "originalCommit": {"oid": "5d7b3e714f08479a10d868ce7da428450d03ae39"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1430, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}