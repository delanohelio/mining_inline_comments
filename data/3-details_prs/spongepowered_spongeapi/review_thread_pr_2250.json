{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2ODgzMDM0", "number": 2250, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowMDozNlrOExDsyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowMzowM1rOExDx_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODc2Mjk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/data/DataRegistration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowMDozNlrOHm_FxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowMDozNlrOHm_FxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY0MTYwNA==", "bodyText": "Are you intending to be able to call DataRegistration.of(Keys.FOO)? because the varargs can have a length of 0 by omitting the argument altogether in this case (this is why Cause historically always had an Object, Object... method signature, to ensure there's at least one argument passed in.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2250#discussion_r510641604", "createdAt": "2020-10-23T06:00:36Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/data/DataRegistration.java", "diffHunk": "@@ -118,6 +120,21 @@ static Builder builder() {\n      */\n     PluginContainer getPluginContainer();\n \n+    /**\n+     * Creates a DataRegistration for a single key with a DataStore for given data-holders.\n+     *\n+     *\n+     * @param key the data key\n+     * @param dataHolders the data-holders\n+     * @param <T> the keys value type\n+     *\n+     * @return The built data registration\n+     */\n+    static <T> DataRegistration of(Key<Value<T>> key, Class<? extends DataHolder>... dataHolders) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a628398dac00f405a269fe766f8159a23a696976"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODc3NjMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/data/persistence/DataStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowMzowM1rOHm_PTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowMzowM1rOHm_PTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY0NDA0NQ==", "bodyText": "Much like the comment above, may want to mention that the varargs of types is optional to specify what types the datastore will support?", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2250#discussion_r510644045", "createdAt": "2020-10-23T06:03:03Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/data/persistence/DataStore.java", "diffHunk": "@@ -115,18 +117,36 @@ default DataView serialize(DataManipulator dataManipulator) {\n      * Provides a {@link DataStore} for a single {@link Key}.\n      * <p>\n      *     Note that default deserializers do not support {@link Collection}, {@link Map} or Array types!\n-     *     Use {@link Builder#key(Key, BiConsumer, Function)} for these.\n+     *     Use {@link Builder.SerializersStep#key(Key, BiConsumer, Function)} for these.\n      * </p>\n      *\n      * @param key The data key\n      * @param dataQuery The dataQuery to serialize this key under\n-     * @param typeToken The dataHolder type\n+     * @param typeTokens The dataHolder types\n      *\n      * @return The new data store\n      */\n     @SafeVarargs\n-    static <T> DataStore of(Key<Value<T>> key, DataQuery dataQuery, TypeToken<? extends DataHolder>... typeToken) {\n-        return builder().key(key, dataQuery).holder(typeToken).build();\n+    static <T> DataStore of(Key<Value<T>> key, DataQuery dataQuery, TypeToken<? extends DataHolder>... typeTokens) {\n+        return builder().pluginData(key.getKey()).holder(typeTokens).key(key, dataQuery).build();\n+    }\n+\n+    /**\n+     * Provides a {@link DataStore} for a single {@link Key}.\n+     * <p>\n+     *     Note that default deserializers do not support {@link Collection}, {@link Map} or Array types!\n+     *     Use {@link Builder.SerializersStep#key(Key, BiConsumer, Function)} for these.\n+     * </p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a628398dac00f405a269fe766f8159a23a696976"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2450, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}