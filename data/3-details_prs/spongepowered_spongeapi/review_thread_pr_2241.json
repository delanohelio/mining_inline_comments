{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MjMyMTg5", "number": 2241, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwNzo1Mjo0MVrOEqAAvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0NzowM1rOE3Dlzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDc1ODM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/data/Keys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwNzo1Mjo0MVrOHcAPsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwNzo1Mjo0MVrOHcAPsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyNjE5Mg==", "bodyText": "rotation -> orientation", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2241#discussion_r499126192", "createdAt": "2020-10-03T07:52:41Z", "author": {"login": "Lignium"}, "path": "src/main/java/org/spongepowered/api/data/Keys.java", "diffHunk": "@@ -2103,9 +2102,9 @@\n     public static final Supplier<Key<Value<Integer>>> ROARING_TIME = Sponge.getRegistry().getCatalogRegistry().provideSupplier(Key.class, \"attack_time\");\n \n     /**\n-     * The {@link Rotation} of an {@link ItemFrame}.\n+     * The {@link Orientation} of an {@link ItemFrame}.\n      */\n-    public static final Supplier<Key<Value<Rotation>>> ROTATION = Sponge.getRegistry().getCatalogRegistry().provideSupplier(Key.class, \"rotation\");\n+    public static final Supplier<Key<Value<Orientation>>> ORIENTATION = Sponge.getRegistry().getCatalogRegistry().provideSupplier(Key.class, \"rotation\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33609e9ea99ac8eb8cab7664e6b92fb91d268b14"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTY1OTY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/volume/game/TrackedVolume.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0NzowM1rOHwLlwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNjoyMDoyNVrOHxsCug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MzU4Ng==", "bodyText": "I disagree with these defaults. I always thought that a particular volume holder may have a faster way to query this data instead of going through a provider.\nGranted this is a default so not like we can't do that..", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2241#discussion_r520283586", "createdAt": "2020-11-10T04:47:03Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/volume/game/TrackedVolume.java", "diffHunk": "@@ -98,7 +103,13 @@ default void setCreator(Vector3i pos, @Nullable UUID uuid) {\n      * @param z The z coordinate where the user data should be applied\n      * @param uuid The {@link UUID} to set as creator\n      */\n-    void setCreator(int x, int y, int z, @Nullable UUID uuid);\n+    default void setCreator(final int x, final int y, final int z, @Nullable final UUID uuid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10f84705e5c57150a70aabee59fc761a38ba4d68"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2Mzg2Ng==", "bodyText": "It's a default because the Keys exist and it's often better to delegate to those, however, implementation wise they serve the purpose of bypassing the requirement that we re-implement the actual storage of owner/notifier at this time.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2241#discussion_r521863866", "createdAt": "2020-11-12T06:20:25Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/world/volume/game/TrackedVolume.java", "diffHunk": "@@ -98,7 +103,13 @@ default void setCreator(Vector3i pos, @Nullable UUID uuid) {\n      * @param z The z coordinate where the user data should be applied\n      * @param uuid The {@link UUID} to set as creator\n      */\n-    void setCreator(int x, int y, int z, @Nullable UUID uuid);\n+    default void setCreator(final int x, final int y, final int z, @Nullable final UUID uuid) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MzU4Ng=="}, "originalCommit": {"oid": "10f84705e5c57150a70aabee59fc761a38ba4d68"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2445, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}