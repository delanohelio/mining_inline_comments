{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4Nzk4NDA5", "number": 2091, "title": "Add supplier overloads to all builder methods and trait -> property", "bodyText": "Adds Supplier overloads in many methods for CatalogTypes, this one mainly covering builders. Of course more of these commits will come along in time to handle all the Supplier overloads.", "createdAt": "2020-02-24T03:48:14Z", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091", "merged": true, "mergeCommit": {"oid": "4f0478fd9353a46c809c8fab9bcadd8431c12cdf"}, "closed": true, "closedAt": "2020-03-29T18:33:00Z", "author": {"login": "i509VCB"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHlss-ABqjMwNjczMjIzMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRJ8vSgBqjMxNjQ3MTMwOTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1aabec5391d97555427f4dca0ed227a06f48475", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/d1aabec5391d97555427f4dca0ed227a06f48475", "committedDate": "2020-02-24T03:45:34Z", "message": "Add supplier overloads to builders from IndirectEntityDamageSource.AbstractBuilder to FluidState.Builder"}, "afterCommit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2", "committedDate": "2020-02-24T22:58:38Z", "message": "Add supplier overloads to all builder methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODUzNTUw", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#pullrequestreview-363853550", "createdAt": "2020-02-25T03:44:29Z", "commit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMzo0NDoyOVrOFt3xFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMzo0Njo1M1rOFt3zGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY0MzkyNw==", "bodyText": "Can this be a double instead? And can you javadoc it?", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#discussion_r383643927", "createdAt": "2020-02-25T03:44:29Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/item/merchant/TradeOffer.java", "diffHunk": "@@ -128,6 +128,10 @@ static Builder builder() {\n      */\n     boolean doesGrantExperience();\n \n+    float getPriceGrowthRate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY0NDAxNQ==", "bodyText": "Extra .", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#discussion_r383644015", "createdAt": "2020-02-25T03:44:57Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/item/merchant/TradeOffer.java", "diffHunk": "@@ -186,6 +190,24 @@ static Builder builder() {\n          */\n         Builder canGrantExperience(boolean experience);\n \n+        /**\n+         * Sets how much experience the trade offer will grant upon use.\n+         *\n+         * @param experience The amount of experience.\n+         * @return This builder\n+         */\n+        Builder grantsExperience(int experience);\n+\n+        /**\n+         * Sets the rate at which this trade offer's price will grow by when used.\n+         *\n+         * <p>By default this multiplier is 0.05</p>\n+         *\n+         * @param priceGrowthRate The offer's rate of price growth.\n+         * @return This builder.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY0NDAyNw==", "bodyText": "Extra .", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#discussion_r383644027", "createdAt": "2020-02-25T03:45:03Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/item/merchant/TradeOffer.java", "diffHunk": "@@ -186,6 +190,24 @@ static Builder builder() {\n          */\n         Builder canGrantExperience(boolean experience);\n \n+        /**\n+         * Sets how much experience the trade offer will grant upon use.\n+         *\n+         * @param experience The amount of experience.\n+         * @return This builder\n+         */\n+        Builder grantsExperience(int experience);\n+\n+        /**\n+         * Sets the rate at which this trade offer's price will grow by when used.\n+         *\n+         * <p>By default this multiplier is 0.05</p>\n+         *\n+         * @param priceGrowthRate The offer's rate of price growth.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY0NDEyMw==", "bodyText": "If you're going to link modifiers like this, complete the sentence, and possibly link the MC wiki where they explain this.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#discussion_r383644123", "createdAt": "2020-02-25T03:45:33Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/item/merchant/TradeOffer.java", "diffHunk": "@@ -186,6 +190,24 @@ static Builder builder() {\n          */\n         Builder canGrantExperience(boolean experience);\n \n+        /**\n+         * Sets how much experience the trade offer will grant upon use.\n+         *\n+         * @param experience The amount of experience.\n+         * @return This builder\n+         */\n+        Builder grantsExperience(int experience);\n+\n+        /**\n+         * Sets the rate at which this trade offer's price will grow by when used.\n+         *\n+         * <p>By default this multiplier is 0.05</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY0NDQ0MQ==", "bodyText": "There's no more manipulators, if there are, they are missed to be removed.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#discussion_r383644441", "createdAt": "2020-02-25T03:46:53Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/fluid/FluidState.java", "diffHunk": "@@ -85,6 +87,21 @@ static Builder builder() {\n      */\n     interface Builder extends SerializableDataHolderBuilder.Immutable<FluidState, Builder> {\n \n+        /**\n+         * Sets the {@link FluidType} for the {@link FluidState} to build.\n+         *\n+         * <p>The {@link FluidType} is used for some pre-validation on addition of\n+         * {@link DataManipulator}s through {@link #add(DataManipulator)}. It is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2", "committedDate": "2020-02-24T22:58:38Z", "message": "Add supplier overloads to all builder methods"}, "afterCommit": {"oid": "db9ecaab0371d994a8c9756790d0e6ed65952d16", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/db9ecaab0371d994a8c9756790d0e6ed65952d16", "committedDate": "2020-02-26T22:49:36Z", "message": "Add supplier overloads to all builder methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MzAyOTYx", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#pullrequestreview-365302961", "createdAt": "2020-02-26T22:50:49Z", "commit": {"oid": "db9ecaab0371d994a8c9756790d0e6ed65952d16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjo1MDo1MFrOFu_TQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjo1MDo1MFrOFu_TQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNTkzNw==", "bodyText": "@gabizou Do you have a better name for this? It's the experience granted to the merchant when a trade offer is used.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#discussion_r384815937", "createdAt": "2020-02-26T22:50:50Z", "author": {"login": "i509VCB"}, "path": "src/main/java/org/spongepowered/api/item/merchant/TradeOffer.java", "diffHunk": "@@ -122,12 +122,29 @@ static Builder builder() {\n     boolean hasExpired();\n \n     /**\n-     * Gets whether this trade offer will grant experience upon usage or not.\n+     * Gets whether this trade offer will grant experience to the customer upon usage or not.\n      *\n-     * @return True if using this trade offer will grant experience\n+     * @return True if using this trade offer will grant experience to the customer\n      */\n     boolean doesGrantExperience();\n \n+    /**\n+     * Gets the amount of experience granted to the merchant when this trade offer is used.\n+     *\n+     * @return The experience to be granted to the merchant\n+     */\n+    int getMerchantExperience();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9ecaab0371d994a8c9756790d0e6ed65952d16"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODQ5ODA3", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#pullrequestreview-364849807", "createdAt": "2020-02-26T12:15:03Z", "commit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjoxNTowNFrOFupQtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjoxNjoxMlrOFupSsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ1NDgzNw==", "bodyText": "trait should be renamed to property or stateProperty", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#discussion_r384454837", "createdAt": "2020-02-26T12:15:04Z", "author": {"login": "Cybermaxke"}, "path": "src/main/java/org/spongepowered/api/block/BlockStateMatcher.java", "diffHunk": "@@ -92,6 +105,26 @@ default boolean test(BlockState blockState) {\n          */\n         Builder type(BlockType type);\n \n+        /**\n+         * Adds the desired {@link StateProperty} and {code value} to this\n+         * builder, if the desired {@link StateProperty} does not belong to the\n+         * original {@link BlockType} as provided by {@link #type(BlockType)},\n+         * an exception is thrown. Likewise, if a {@code value} is not within\n+         * the possible values for the desired trait of the desired type, an\n+         * exception is thrown.\n+         *\n+         * @param trait The desired block trait\n+         * @param value the desired value\n+         * @param <T> The type of comparable\n+         * @return This builder\n+         * @throws IllegalArgumentException If the block trait does not match\n+         *     the block type, or if the value does not belong to the trait\n+         *     with the desired block type\n+         */\n+        default <T extends Comparable<T>> Builder trait(Supplier<? extends StateProperty<T>> trait, T value) throws IllegalArgumentException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ1NTM0Ng==", "bodyText": "this.icon", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#discussion_r384455346", "createdAt": "2020-02-26T12:16:12Z", "author": {"login": "Cybermaxke"}, "path": "src/main/java/org/spongepowered/api/advancement/DisplayInfo.java", "diffHunk": "@@ -128,6 +141,17 @@ static Builder builder() {\n          */\n         Builder title(Text title);\n \n+        /**\n+         * Sets the icon of the advancement with the\n+         * specified {@link ItemType}.\n+         *\n+         * @param itemType The item type\n+         * @return This builder, for chaining\n+         */\n+        default Builder icon(Supplier<? extends ItemType> itemType) {\n+            return icon(itemType.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e1e5ef1ddd419f9ed93368f55e0bb26f20f2c2"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db9ecaab0371d994a8c9756790d0e6ed65952d16", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/db9ecaab0371d994a8c9756790d0e6ed65952d16", "committedDate": "2020-02-26T22:49:36Z", "message": "Add supplier overloads to all builder methods"}, "afterCommit": {"oid": "532c3909f775ed7526281b7be6e966d4f2df1422", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/532c3909f775ed7526281b7be6e966d4f2df1422", "committedDate": "2020-02-27T02:45:35Z", "message": "Add supplier overloads to all builder methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNTAzMDYz", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2091#pullrequestreview-372503063", "createdAt": "2020-03-11T06:34:58Z", "commit": {"oid": "532c3909f775ed7526281b7be6e966d4f2df1422"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "532c3909f775ed7526281b7be6e966d4f2df1422", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/532c3909f775ed7526281b7be6e966d4f2df1422", "committedDate": "2020-02-27T02:45:35Z", "message": "Add supplier overloads to all builder methods"}, "afterCommit": {"oid": "cadfa004f26b749e8f2841439c78d6dd64b15c53", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/cadfa004f26b749e8f2841439c78d6dd64b15c53", "committedDate": "2020-03-25T03:02:15Z", "message": "Add supplier overloads to all builder methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cadfa004f26b749e8f2841439c78d6dd64b15c53", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/cadfa004f26b749e8f2841439c78d6dd64b15c53", "committedDate": "2020-03-25T03:02:15Z", "message": "Add supplier overloads to all builder methods"}, "afterCommit": {"oid": "3081448b339b868ee31f7a02ee0feebef9ecb6f7", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/3081448b339b868ee31f7a02ee0feebef9ecb6f7", "committedDate": "2020-03-25T16:12:49Z", "message": "Add supplier overloads to all builder methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3081448b339b868ee31f7a02ee0feebef9ecb6f7", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/3081448b339b868ee31f7a02ee0feebef9ecb6f7", "committedDate": "2020-03-25T16:12:49Z", "message": "Add supplier overloads to all builder methods"}, "afterCommit": {"oid": "0a00570c69c7538b50d091f80f5f74f8193151bb", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/0a00570c69c7538b50d091f80f5f74f8193151bb", "committedDate": "2020-03-25T16:15:26Z", "message": "Add supplier overloads to all builder methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f0478fd9353a46c809c8fab9bcadd8431c12cdf", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/4f0478fd9353a46c809c8fab9bcadd8431c12cdf", "committedDate": "2020-03-25T16:18:03Z", "message": "Add supplier overloads to all builder methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a00570c69c7538b50d091f80f5f74f8193151bb", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/0a00570c69c7538b50d091f80f5f74f8193151bb", "committedDate": "2020-03-25T16:15:26Z", "message": "Add supplier overloads to all builder methods"}, "afterCommit": {"oid": "4f0478fd9353a46c809c8fab9bcadd8431c12cdf", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/4f0478fd9353a46c809c8fab9bcadd8431c12cdf", "committedDate": "2020-03-25T16:18:03Z", "message": "Add supplier overloads to all builder methods"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 718, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}