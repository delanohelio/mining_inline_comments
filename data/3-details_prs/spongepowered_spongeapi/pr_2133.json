{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODk5MTgz", "number": 2133, "title": "Replace Service Manager with Provider", "bodyText": "SpongeAPI | SpongeCommon\n@Zidane For discussion. Very proof of concept-y, but this was what I was thinking. Plugin recieves event. Plugin chooses whether to supply to event. Event only sent to a plugin if:\n\nIt is named as the provider for the given service in the config (see Common)\nThere is no named provider and a registration hasn't been successfully made yet\n\nYou'll see in Common that I send the event to one plugin at a time. I've not added the service provider to Game or Sponge yet, that's part of the discussion!\nVanilla/Sponge services have low priority and will always be created last (or as a fallback to a named provider that failed to load)", "createdAt": "2020-06-27T11:34:40Z", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2133", "merged": true, "mergeCommit": {"oid": "5e40de70ba1818dca9b32e416cc63251ff2d5ae3"}, "closed": true, "closedAt": "2020-07-07T19:38:41Z", "author": {"login": "dualspiral"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcvXQSoAFqTQzODY5MzE5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxp-LwAH2gAyNDQwODk5MTgzOjg5ODRlNmFiMzg5Y2JlMDk0ZTI5MTFiMGRiYjA5OWI4MmY4OGE1MzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjkzMTk4", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2133#pullrequestreview-438693198", "createdAt": "2020-06-27T12:06:52Z", "commit": {"oid": "4df68d19bc53fbcfcd5c050ada4f76ee9470641c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMjowNjo1MlrOGp1Tbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMjo0NDozMlrOGp1nWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxODEyNw==", "bodyText": "Maybe append per plugin otherwise the reader expects a reason or error here.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2133#discussion_r446518127", "createdAt": "2020-06-27T12:06:52Z", "author": {"login": "ST-DDT"}, "path": "src/main/java/org/spongepowered/api/event/service/ProvideServiceEvent.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.spongepowered.api.event.service;\n+\n+import org.spongepowered.api.event.GenericEvent;\n+\n+import java.util.function.Supplier;\n+\n+/**\n+ * An event that allows plugins to suggest their own implementation for a given\n+ * service.\n+ *\n+ * <p>Service providers should <strong>not</strong> construct the service object\n+ * prior to selection. Instead, they should wait for if, and only if, their\n+ * service factory as supplied in {@link #suggest(Supplier)} has been called.\n+ * Further, each plugin may only supply <strong>one</strong> service provider\n+ * for each service.</p>\n+ *\n+ * <p>It is not guaranteed that this service will fire for the indicated\n+ * service. This may happen if the server is configured to select a particular\n+ * service.</p>\n+ *\n+ * @param <T> The service to provide.\n+ */\n+public interface ProvideServiceEvent<T> extends GenericEvent<T> {\n+\n+    /**\n+     * Provides a suggestion for the given service. <strong>This may only be\n+     * called once for a given service.</strong>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df68d19bc53fbcfcd5c050ada4f76ee9470641c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyMjcxNg==", "bodyText": "Please add a provideUnchecked, like before.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2133#discussion_r446522716", "createdAt": "2020-06-27T12:42:33Z", "author": {"login": "ST-DDT"}, "path": "src/main/java/org/spongepowered/api/service/ServiceProvider.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.spongepowered.api.service;\n+\n+import org.spongepowered.api.service.ban.BanService;\n+import org.spongepowered.api.service.economy.EconomyService;\n+import org.spongepowered.api.service.pagination.PaginationService;\n+import org.spongepowered.api.service.permission.PermissionService;\n+import org.spongepowered.api.service.rcon.RconService;\n+import org.spongepowered.api.service.sql.SqlService;\n+import org.spongepowered.api.service.user.UserStorageService;\n+import org.spongepowered.api.service.whitelist.WhitelistService;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Provides various Sponge services.\n+ */\n+public interface ServiceProvider {\n+\n+    /**\n+     * Provides the service represented by the supplied {@link Class}.\n+     *\n+     * @param serviceClass The class\n+     * @param <T> The type of service\n+     * @return The service, if one exists\n+     */\n+    <T> Optional<T> provide(Class<T> serviceClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df68d19bc53fbcfcd5c050ada4f76ee9470641c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyMzIyNw==", "bodyText": "I would call it getRegistration, not sure which prupose this method has though.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2133#discussion_r446523227", "createdAt": "2020-06-27T12:44:32Z", "author": {"login": "ST-DDT"}, "path": "src/main/java/org/spongepowered/api/service/ServiceProvider.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.spongepowered.api.service;\n+\n+import org.spongepowered.api.service.ban.BanService;\n+import org.spongepowered.api.service.economy.EconomyService;\n+import org.spongepowered.api.service.pagination.PaginationService;\n+import org.spongepowered.api.service.permission.PermissionService;\n+import org.spongepowered.api.service.rcon.RconService;\n+import org.spongepowered.api.service.sql.SqlService;\n+import org.spongepowered.api.service.user.UserStorageService;\n+import org.spongepowered.api.service.whitelist.WhitelistService;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Provides various Sponge services.\n+ */\n+public interface ServiceProvider {\n+\n+    /**\n+     * Provides the service represented by the supplied {@link Class}.\n+     *\n+     * @param serviceClass The class\n+     * @param <T> The type of service\n+     * @return The service, if one exists\n+     */\n+    <T> Optional<T> provide(Class<T> serviceClass);\n+\n+    /**\n+     * Provides the {@link ServiceRegistration} for the supplied {@link Class}.\n+     *\n+     * @param serviceClass The class\n+     * @param <T> The type of service\n+     * @return The registration, if one exists\n+     */\n+    <T> Optional<ServiceRegistration<T>> registration(Class<T> serviceClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df68d19bc53fbcfcd5c050ada4f76ee9470641c"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6fcab79cf1497ca91187fd1f3a87b357129e73b4", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/6fcab79cf1497ca91187fd1f3a87b357129e73b4", "committedDate": "2020-06-28T11:20:15Z", "message": "Add entry point for service provider"}, "afterCommit": {"oid": "63f45578676aed8b555434e85fa1797c5b7fc099", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/63f45578676aed8b555434e85fa1797c5b7fc099", "committedDate": "2020-07-02T18:35:01Z", "message": "Licence"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjEzODMy", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2133#pullrequestreview-442613832", "createdAt": "2020-07-04T14:46:42Z", "commit": {"oid": "63f45578676aed8b555434e85fa1797c5b7fc099"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNDo0Njo0MlrOGs8VWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNDo0Njo0MlrOGs8VWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3OTAzMw==", "bodyText": "this.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2133#discussion_r449779033", "createdAt": "2020-07-04T14:46:42Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/Sponge.java", "diffHunk": "@@ -254,4 +240,14 @@ public static Scheduler getAsyncScheduler() {\n     public static CommandManager getCommandManager() {\n         return check(commandManager);\n     }\n+\n+    /**\n+     * Gets the {@link ServiceProvider} for providing services.\n+     *\n+     * @return The service provider.\n+     */\n+    public static ServiceProvider getServiceProvider() {\n+        return getGame().getServiceProvider();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f45578676aed8b555434e85fa1797c5b7fc099"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4772279984001b89edcaa8eb8b30f38f54efb75d", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/4772279984001b89edcaa8eb8b30f38f54efb75d", "committedDate": "2020-07-04T15:10:53Z", "message": "PoC for service manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a83fd3510c7158376b0465f47e93544f2d3f4402", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/a83fd3510c7158376b0465f47e93544f2d3f4402", "committedDate": "2020-07-04T15:10:53Z", "message": "Update comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "313fb89a4feda474f4fe808b92328252938ef8ef", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/313fb89a4feda474f4fe808b92328252938ef8ef", "committedDate": "2020-07-04T15:10:53Z", "message": "Add entry point for service provider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acdd90b065b9576da8fc45d76f9738d2717b9bfe", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/acdd90b065b9576da8fc45d76f9738d2717b9bfe", "committedDate": "2020-07-04T15:10:53Z", "message": "Licence"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63f45578676aed8b555434e85fa1797c5b7fc099", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/63f45578676aed8b555434e85fa1797c5b7fc099", "committedDate": "2020-07-02T18:35:01Z", "message": "Licence"}, "afterCommit": {"oid": "acdd90b065b9576da8fc45d76f9738d2717b9bfe", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/acdd90b065b9576da8fc45d76f9738d2717b9bfe", "committedDate": "2020-07-04T15:10:53Z", "message": "Licence"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3090b18b645317401616ea2d85271fc2ba103312", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/3090b18b645317401616ea2d85271fc2ba103312", "committedDate": "2020-07-04T15:28:54Z", "message": "Move service event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8984e6ab389cbe094e2911b0dbb099b82f88a530", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/8984e6ab389cbe094e2911b0dbb099b82f88a530", "committedDate": "2020-07-04T15:42:24Z", "message": "Fix compile error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 647, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}