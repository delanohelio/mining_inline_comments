{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMjQ5Njk0", "number": 2274, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxMjoxN1rOFBf5lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xOFQwNzoyMDo0MlrOFzVeIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTE1NTQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/server/TicketType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxMjoxN1rOIAOOOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxMjoxN1rOIAOOOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwMzkzMA==", "bodyText": "getLifetime()?", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537103930", "createdAt": "2020-12-06T19:12:17Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/server/TicketType.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.CatalogType;\n+import org.spongepowered.api.util.Ticks;\n+import org.spongepowered.api.util.annotation.CatalogedBy;\n+\n+/**\n+ * Represents a type of {@link Ticket chunk loading ticket} that can be obtained\n+ * to ensure chunks remain loaded in a {@link ServerWorld}.\n+ *\n+ * @param <T> The type of value that is associated with a {@link Ticket} of this\n+ *      type.\n+ */\n+@CatalogedBy(TicketTypes.class)\n+public interface TicketType<T> extends CatalogType {\n+\n+    /**\n+     * Gets the lifetime of any {@link Ticket tickets} of this type.\n+     *\n+     * @return The number of {@link Ticks} any {@link Ticket tickets} of this\n+     *         type will be valid for.\n+     */\n+    Ticks getTicketLifetime();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTE1NjA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxMjo0MVrOIAOOgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxMjo0MVrOIAOOgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNDAwMg==", "bodyText": "ServerWorld getWorld()?", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537104002", "createdAt": "2020-12-06T19:12:41Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.util.Ticks;\n+import org.spongepowered.api.world.chunk.Chunk;\n+import org.spongepowered.math.vector.Vector3i;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Manages {@link Chunk chunks} for a {@link ServerWorld}.\n+ */\n+public interface ChunkManager {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTE1Njc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxMzoxMFrOIAOOzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOTozMzowMlrOIAOcBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNDA3OQ==", "bodyText": "getDefaultLifetime()", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537104079", "createdAt": "2020-12-06T19:13:10Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.util.Ticks;\n+import org.spongepowered.api.world.chunk.Chunk;\n+import org.spongepowered.math.vector.Vector3i;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Manages {@link Chunk chunks} for a {@link ServerWorld}.\n+ */\n+public interface ChunkManager {\n+\n+    /**\n+     * Checks if the provided {@link Ticket} is valid for the world this manager\n+     * represents.\n+     *\n+     * @param ticket The ticket to check.\n+     * @return true if so\n+     */\n+    boolean isValid(Ticket<?> ticket);\n+\n+    /**\n+     * Gets the default lifetime, in {@link Ticks}, of any ticket requested via\n+     * this ticket manager.\n+     */\n+    Ticks getDefaultTicketLifetime(TicketType<?> ticketType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNzQ2Mg==", "bodyText": "Actually just removed this, it's on the TicketType instead.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537107462", "createdAt": "2020-12-06T19:33:02Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.util.Ticks;\n+import org.spongepowered.api.world.chunk.Chunk;\n+import org.spongepowered.math.vector.Vector3i;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Manages {@link Chunk chunks} for a {@link ServerWorld}.\n+ */\n+public interface ChunkManager {\n+\n+    /**\n+     * Checks if the provided {@link Ticket} is valid for the world this manager\n+     * represents.\n+     *\n+     * @param ticket The ticket to check.\n+     * @return true if so\n+     */\n+    boolean isValid(Ticket<?> ticket);\n+\n+    /**\n+     * Gets the default lifetime, in {@link Ticks}, of any ticket requested via\n+     * this ticket manager.\n+     */\n+    Ticks getDefaultTicketLifetime(TicketType<?> ticketType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNDA3OQ=="}, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTE1NzMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/server/TicketTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxMzo0M1rOIAOPEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxMzo0M1rOIAOPEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNDE0Ng==", "bodyText": "that force chunk(s) ...", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537104146", "createdAt": "2020-12-06T19:13:43Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/server/TicketTypes.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.Sponge;\n+import org.spongepowered.math.vector.Vector3i;\n+\n+import java.util.function.Supplier;\n+\n+/**\n+ * Types of {@link Ticket tickets} that can be requested via the\n+ * {@link ChunkManager}.\n+ */\n+public class TicketTypes {\n+\n+    /**\n+     * Represents {@link Ticket tickets} that forces a chunk to stay loaded.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTE2MDI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxNTo0N1rOIAOQXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxOTowMFrOIAOSew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNDQ3Nw==", "bodyText": "Radius?", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537104477", "createdAt": "2020-12-06T19:15:47Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.util.Ticks;\n+import org.spongepowered.api.world.chunk.Chunk;\n+import org.spongepowered.math.vector.Vector3i;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Manages {@link Chunk chunks} for a {@link ServerWorld}.\n+ */\n+public interface ChunkManager {\n+\n+    /**\n+     * Checks if the provided {@link Ticket} is valid for the world this manager\n+     * represents.\n+     *\n+     * @param ticket The ticket to check.\n+     * @return true if so\n+     */\n+    boolean isValid(Ticket<?> ticket);\n+\n+    /**\n+     * Gets the default lifetime, in {@link Ticks}, of any ticket requested via\n+     * this ticket manager.\n+     */\n+    Ticks getDefaultTicketLifetime(TicketType<?> ticketType);\n+\n+    /**\n+     * Gets the {@link Ticks} remaining on the supplied ticket.\n+     *\n+     * @return The {@link Ticks}\n+     */\n+    Ticks getTimeLeft(Ticket<?> ticket);\n+\n+    /**\n+     * Request a {@link Ticket} for the given {@link TicketType}.\n+     *\n+     * @param type The type of ticket to request.\n+     * @param value The value to register the ticket with.\n+     * @param <T> The type of the supplied {@code value}.\n+     * @return The ticket, if granted.\n+     */\n+    <T> Optional<Ticket<T>> requestTicket(TicketType<T> type, Vector3i chunkPosition, T value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNTAxOQ==", "bodyText": "Additional, the chunkPosition really is the chunkOrigin that the radius operates off of.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537105019", "createdAt": "2020-12-06T19:19:00Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.util.Ticks;\n+import org.spongepowered.api.world.chunk.Chunk;\n+import org.spongepowered.math.vector.Vector3i;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Manages {@link Chunk chunks} for a {@link ServerWorld}.\n+ */\n+public interface ChunkManager {\n+\n+    /**\n+     * Checks if the provided {@link Ticket} is valid for the world this manager\n+     * represents.\n+     *\n+     * @param ticket The ticket to check.\n+     * @return true if so\n+     */\n+    boolean isValid(Ticket<?> ticket);\n+\n+    /**\n+     * Gets the default lifetime, in {@link Ticks}, of any ticket requested via\n+     * this ticket manager.\n+     */\n+    Ticks getDefaultTicketLifetime(TicketType<?> ticketType);\n+\n+    /**\n+     * Gets the {@link Ticks} remaining on the supplied ticket.\n+     *\n+     * @return The {@link Ticks}\n+     */\n+    Ticks getTimeLeft(Ticket<?> ticket);\n+\n+    /**\n+     * Request a {@link Ticket} for the given {@link TicketType}.\n+     *\n+     * @param type The type of ticket to request.\n+     * @param value The value to register the ticket with.\n+     * @param <T> The type of the supplied {@code value}.\n+     * @return The ticket, if granted.\n+     */\n+    <T> Optional<Ticket<T>> requestTicket(TicketType<T> type, Vector3i chunkPosition, T value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNDQ3Nw=="}, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTE2MTQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxNjozM1rOIAOQ5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxNjozM1rOIAOQ5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNDYxNQ==", "bodyText": "<T> Collection<Ticket<T>> getTickets(TicketType<T> type) ?", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537104615", "createdAt": "2020-12-06T19:16:33Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.util.Ticks;\n+import org.spongepowered.api.world.chunk.Chunk;\n+import org.spongepowered.math.vector.Vector3i;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Manages {@link Chunk chunks} for a {@link ServerWorld}.\n+ */\n+public interface ChunkManager {\n+\n+    /**\n+     * Checks if the provided {@link Ticket} is valid for the world this manager\n+     * represents.\n+     *\n+     * @param ticket The ticket to check.\n+     * @return true if so\n+     */\n+    boolean isValid(Ticket<?> ticket);\n+\n+    /**\n+     * Gets the default lifetime, in {@link Ticks}, of any ticket requested via\n+     * this ticket manager.\n+     */\n+    Ticks getDefaultTicketLifetime(TicketType<?> ticketType);\n+\n+    /**\n+     * Gets the {@link Ticks} remaining on the supplied ticket.\n+     *\n+     * @return The {@link Ticks}\n+     */\n+    Ticks getTimeLeft(Ticket<?> ticket);\n+\n+    /**\n+     * Request a {@link Ticket} for the given {@link TicketType}.\n+     *\n+     * @param type The type of ticket to request.\n+     * @param value The value to register the ticket with.\n+     * @param <T> The type of the supplied {@code value}.\n+     * @return The ticket, if granted.\n+     */\n+    <T> Optional<Ticket<T>> requestTicket(TicketType<T> type, Vector3i chunkPosition, T value);\n+\n+    /**\n+     * Attempts to renew this ticket, resetting the lifetime to the default.\n+     *\n+     * <p>If this ticket is no longer valid, it cannot be renewed. Instead,\n+     * you should {@link #requestTicket(TicketType, Vector3i, Object)} a new one.</p>\n+     *\n+     * @param ticket The ticket to attempt to renew\n+     * @return {@code true} if successful\n+     */\n+    boolean renewTicket(Ticket<?> ticket);\n+\n+    /**\n+     * Releases the provided {@link Ticket}, allowing the chunk position\n+     * represented by the given ticket to be unloaded (if it is not being kept\n+     * loaded by other means).\n+     *\n+     * @param ticket The ticket to release.\n+     */\n+    boolean releaseTicket(Ticket<?> ticket);\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTE2MjM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/server/ServerWorld.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxNjo1OVrOIAORRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxNjo1OVrOIAORRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNDcxMA==", "bodyText": "the chunk manager", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537104710", "createdAt": "2020-12-06T19:16:59Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/server/ServerWorld.java", "diffHunk": "@@ -203,4 +203,12 @@ default Chunk getChunkAtBlock(int bx, int by, int bz) {\n      * @return The raid at that location, if present\n      */\n     Optional<Raid> getRaidAt(Vector3i blockPosition);\n+\n+    /**\n+     * Gets the {@link ChunkManager} for this world.\n+     *\n+     * @return The ticket manager.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTE2Mjk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/server/Ticket.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxNzoyMFrOIAORhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxNzoyMFrOIAORhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNDc3Mg==", "bodyText": "TicketType<T> getType()", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537104772", "createdAt": "2020-12-06T19:17:20Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/server/Ticket.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+/**\n+ * Represents a chunk loading ticket.\n+ *\n+ * @param <T> The type of value this ticket holds.\n+ */\n+public interface Ticket<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTE2Mzg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/server/TicketTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxNzo0N1rOIAOR6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToxNzo0N1rOIAOR6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNDg3Mw==", "bodyText": "final", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r537104873", "createdAt": "2020-12-06T19:17:47Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/world/server/TicketTypes.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.Sponge;\n+import org.spongepowered.math.vector.Vector3i;\n+\n+import java.util.function.Supplier;\n+\n+/**\n+ * Types of {@link Ticket tickets} that can be requested via the\n+ * {@link ChunkManager}.\n+ */\n+public class TicketTypes {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95545b4770eacde92057342dcea4195873a62ab0"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NzUzODk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/registry/RegistryTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QxNjoxMjoyMFrOINf38w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QxNjoxMjoyMFrOINf38w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAyNDYyNw==", "bodyText": "ticket_types -> ticket_type", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r551024627", "createdAt": "2021-01-03T16:12:20Z", "author": {"login": "Lignium"}, "path": "src/main/java/org/spongepowered/api/registry/RegistryTypes.java", "diffHunk": "@@ -367,6 +368,8 @@\n \n     public static final RegistryType<TeleportHelperFilter> TELEPORT_HELPER_FILTER = RegistryTypes.spongeKey(\"teleport_helper_filter\");\n \n+    public static final RegistryType<TicketType<?>> TICKET_TYPE = RegistryTypes.spongeKey(\"ticket_types\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cca2c2ad44848ac01c2709040f7ac75f51c417c8"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg5MzczNDczOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xOFQwNzoyMDo0MlrOJK2UHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xOFQxODoxMDoxNFrOJK7H4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTM1NTQyMQ==", "bodyText": "What's the behavior of a ticket that isn't valid?", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r615355421", "createdAt": "2021-04-18T07:20:42Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.util.Ticks;\n+import org.spongepowered.api.util.annotation.DoNotStore;\n+import org.spongepowered.api.world.chunk.Chunk;\n+import org.spongepowered.math.vector.Vector3i;\n+\n+import java.util.Collection;\n+import java.util.Optional;\n+\n+/**\n+ * Manages {@link Chunk chunks} for a {@link ServerWorld}.\n+ */\n+@DoNotStore\n+public interface ChunkManager {\n+\n+    /**\n+     * Gets the {@link ServerWorld} this manager operates upon.\n+     *\n+     * @return The {@link ServerWorld}\n+     */\n+    ServerWorld world();\n+\n+    /**\n+     * Checks if the provided {@link Ticket} is valid for the world this manager\n+     * represents.\n+     *\n+     * @param ticket The ticket to check.\n+     * @return true if so\n+     */\n+    boolean isValid(Ticket<?> ticket);\n+\n+    /**\n+     * Gets the {@link Ticks} remaining on the supplied ticket.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aec9e03eba1db35dc95baf7412b4102788c3640"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTQzNDIwOQ==", "bodyText": "Doesn't do anything. The distance manager has exponged all knowledge of it so the chunks it refers to may unload.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2274#discussion_r615434209", "createdAt": "2021-04-18T18:10:14Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/api/world/server/ChunkManager.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.world.server;\n+\n+import org.spongepowered.api.util.Ticks;\n+import org.spongepowered.api.util.annotation.DoNotStore;\n+import org.spongepowered.api.world.chunk.Chunk;\n+import org.spongepowered.math.vector.Vector3i;\n+\n+import java.util.Collection;\n+import java.util.Optional;\n+\n+/**\n+ * Manages {@link Chunk chunks} for a {@link ServerWorld}.\n+ */\n+@DoNotStore\n+public interface ChunkManager {\n+\n+    /**\n+     * Gets the {@link ServerWorld} this manager operates upon.\n+     *\n+     * @return The {@link ServerWorld}\n+     */\n+    ServerWorld world();\n+\n+    /**\n+     * Checks if the provided {@link Ticket} is valid for the world this manager\n+     * represents.\n+     *\n+     * @param ticket The ticket to check.\n+     * @return true if so\n+     */\n+    boolean isValid(Ticket<?> ticket);\n+\n+    /**\n+     * Gets the {@link Ticks} remaining on the supplied ticket.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTM1NTQyMQ=="}, "originalCommit": {"oid": "2aec9e03eba1db35dc95baf7412b4102788c3640"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2387, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}