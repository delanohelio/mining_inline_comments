{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMDUxMTg3", "number": 2085, "title": "Add Entity Attribute API [Redux of #1428] [API-8]", "bodyText": "Definitely not complete or structured entirely. A few things definitely need to be moved around into proper packages.\nThe system is based off this:\nhttp://minecraft.gamepedia.com/Attribute\nReplaces #1428", "createdAt": "2020-02-02T20:20:58Z", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085", "merged": true, "mergeCommit": {"oid": "0bfc6975b85a3c4a9b44d0909a1fe4059cca2e22"}, "closed": true, "closedAt": "2020-07-02T18:31:23Z", "author": {"login": "i509VCB"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAiHLtABqjMwMDA0NDQzNjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvz_4BgBqjM0OTA3MjY0MTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6abf3b2296f005b82eeadac6ddabd6fdaf6e6c82", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/6abf3b2296f005b82eeadac6ddabd6fdaf6e6c82", "committedDate": "2020-02-02T20:15:17Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/e920e00098d3110601c6e81b6df6a7186e089107", "committedDate": "2020-02-03T00:50:27Z", "message": "Add Entity Attribute api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDI5OTgz", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#pullrequestreview-352029983", "createdAt": "2020-02-03T05:44:25Z", "commit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0NDoyNVrOFkm28Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0NDoyNVrOFkm28Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkyOTcxMw==", "bodyText": "Should we expose AttributeOperation as a DoubleFunction as well? Or a DoubleBiFunction of sorts?", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#discussion_r373929713", "createdAt": "2020-02-03T05:44:25Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/entity/attribute/type/AttributeOperation.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.entity.attribute.type;\n+\n+import org.spongepowered.api.CatalogType;\n+import org.spongepowered.api.entity.attribute.Attribute;\n+import org.spongepowered.api.util.annotation.CatalogedBy;\n+\n+/**\n+ * Represents an operation which can be applied to transform the value of an\n+ * {@link Attribute}.\n+ */\n+@CatalogedBy(AttributeOperations.class)\n+public interface AttributeOperation extends CatalogType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDMwMzY5", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#pullrequestreview-352030369", "createdAt": "2020-02-03T05:46:20Z", "commit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0NjoyMFrOFkm4BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0NjoyMFrOFkm4BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkyOTk4OA==", "bodyText": "I'd rather the fields be prefixed with their intended targets rather than being nested.\nI get that AttributeTypes.Horse.JUMP_STRENGTH is a nice way of writing it, but it's also a little cluttered looking at it without the prefix (otherwise, we'd be stylistically needing to do the same treatment to Keys etc.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#discussion_r373929988", "createdAt": "2020-02-03T05:46:20Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/entity/attribute/type/AttributeTypes.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.entity.attribute.type;\n+\n+import org.spongepowered.api.Sponge;\n+\n+import java.util.function.Supplier;\n+\n+/**\n+ * An enumeration of {@link AttributeType}s.\n+ */\n+public final class AttributeTypes {\n+\n+    // SORTFIELDS:ON\n+\n+    public static final Supplier<RangedAttributeType> ARMOR = Sponge.getRegistry().getCatalogRegistry().provideSupplier(RangedAttributeType.class, \"ARMOR\");\n+\n+    public static final Supplier<RangedAttributeType> ARMOR_TOUGHNESS = Sponge.getRegistry().getCatalogRegistry().provideSupplier(RangedAttributeType.class, \"ARMOR_TOUGHNESS\");\n+\n+    public static final Supplier<RangedAttributeType> ATTACK_DAMAGE = Sponge.getRegistry().getCatalogRegistry().provideSupplier(RangedAttributeType.class, \"ATTACK_DAMAGE\");\n+\n+    public static final Supplier<RangedAttributeType> ATTACK_SPEED = Sponge.getRegistry().getCatalogRegistry().provideSupplier(RangedAttributeType.class, \"ATTACK_SPEED\");\n+\n+    public static final Supplier<RangedAttributeType> ATTACK_KNOCKBACK = Sponge.getRegistry().getCatalogRegistry().provideSupplier(RangedAttributeType.class, \"ATTACK_KNOCKBACK\");\n+\n+    public static final Supplier<RangedAttributeType> FOLLOW_RANGE = Sponge.getRegistry().getCatalogRegistry().provideSupplier(RangedAttributeType.class, \"FOLLOW_RANGE\");\n+\n+    public static final Supplier<RangedAttributeType> KNOCKBACK_RESISTANCE = Sponge.getRegistry().getCatalogRegistry().provideSupplier(RangedAttributeType.class, \"KNOCKBACK_RESISTANCE\");\n+\n+    public static final Supplier<RangedAttributeType> LUCK = Sponge.getRegistry().getCatalogRegistry().provideSupplier(RangedAttributeType.class, \"LUCK\");\n+\n+    public static final Supplier<RangedAttributeType> MAX_HEALTH = Sponge.getRegistry().getCatalogRegistry().provideSupplier(RangedAttributeType.class, \"MAX_HEALTH\");\n+\n+    public static final Supplier<RangedAttributeType> MOVEMENT_SPEED = Sponge.getRegistry().getCatalogRegistry().provideSupplier(RangedAttributeType.class, \"MOVEMENT_SPEED\");\n+\n+    public static final class Horse {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDMwNTk4", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#pullrequestreview-352030598", "createdAt": "2020-02-03T05:47:23Z", "commit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0NzoyM1rOFkm4yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0NzoyM1rOFkm4yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkzMDE4Nw==", "bodyText": "Would it make sense to expose what the AttributeType's related Key is?", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#discussion_r373930187", "createdAt": "2020-02-03T05:47:23Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/entity/attribute/type/AttributeType.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.entity.attribute.type;\n+\n+import org.spongepowered.api.CatalogType;\n+import org.spongepowered.api.util.annotation.CatalogedBy;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Represents an attribute type that can apply effects or modify traits related to an entity.\n+ */\n+@CatalogedBy(AttributeTypes.class)\n+public interface AttributeType extends CatalogType {\n+\n+    Optional<AttributeType> getParent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDMwNzI2", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#pullrequestreview-352030726", "createdAt": "2020-02-03T05:48:01Z", "commit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0ODowMlrOFkm5Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0ODowMlrOFkm5Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkzMDI4Mg==", "bodyText": "Need to overload with both as optionally suppliers (two added methods).", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#discussion_r373930282", "createdAt": "2020-02-03T05:48:02Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/item/inventory/ItemStack.java", "diffHunk": "@@ -164,6 +170,39 @@ static ItemStack empty() {\n      */\n     boolean isEmpty();\n \n+    /**\n+     * Gets all {@link AttributeModifier}s on this item stack.\n+     *\n+     * @param attributeType The {@link AttributeType} of the modifier.\n+     * @param equipmentType The {@link EquipmentType} this modifier is applied\n+     * to.\n+     *\n+     * @return A collection of {@link AttributeModifier}s.\n+     */\n+    default Collection<AttributeModifier> getAttributeModifiers(Supplier<? extends AttributeType> attributeType, Supplier<? extends EquipmentType> equipmentType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDMwNzg2", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#pullrequestreview-352030786", "createdAt": "2020-02-03T05:48:18Z", "commit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0ODoxOVrOFkm5UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0ODoxOVrOFkm5UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkzMDMyMA==", "bodyText": "Needs an overload with Supplier for AttributeType.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#discussion_r373930320", "createdAt": "2020-02-03T05:48:19Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/api/item/inventory/ItemStack.java", "diffHunk": "@@ -164,6 +170,39 @@ static ItemStack empty() {\n      */\n     boolean isEmpty();\n \n+    /**\n+     * Gets all {@link AttributeModifier}s on this item stack.\n+     *\n+     * @param attributeType The {@link AttributeType} of the modifier.\n+     * @param equipmentType The {@link EquipmentType} this modifier is applied\n+     * to.\n+     *\n+     * @return A collection of {@link AttributeModifier}s.\n+     */\n+    default Collection<AttributeModifier> getAttributeModifiers(Supplier<? extends AttributeType> attributeType, Supplier<? extends EquipmentType> equipmentType) {\n+        return this.getAttributeModifiers(attributeType.get(), equipmentType.get());\n+    }\n+\n+    /**\n+     * Gets all {@link AttributeModifier}s on this item stack.\n+     *\n+     * @param attributeType The {@link AttributeType} of the modifier.\n+     * @param equipmentType The {@link EquipmentType} this modifier is applied\n+     * to.\n+     *\n+     * @return A collection of {@link AttributeModifier}s.\n+     */\n+    Collection<AttributeModifier> getAttributeModifiers(AttributeType attributeType, EquipmentType equipmentType);\n+\n+    /**\n+     * Adds an {@link AttributeModifier} to this item stack.\n+     * @param attributeType The attribute ty\n+     * @param modifier\n+     */\n+    void addAttributeModifier(AttributeType attributeType, AttributeModifier modifier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107"}, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e920e00098d3110601c6e81b6df6a7186e089107", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/e920e00098d3110601c6e81b6df6a7186e089107", "committedDate": "2020-02-03T00:50:27Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "d8ea9656728f3655823d3a55346c36463922f194", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/d8ea9656728f3655823d3a55346c36463922f194", "committedDate": "2020-02-05T04:21:44Z", "message": "Add Entity Attribute api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8ea9656728f3655823d3a55346c36463922f194", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/d8ea9656728f3655823d3a55346c36463922f194", "committedDate": "2020-02-05T04:21:44Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "e20909b244e6c920bdc93f158a5acd3a20471ac1", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/e20909b244e6c920bdc93f158a5acd3a20471ac1", "committedDate": "2020-02-05T04:22:48Z", "message": "Add Entity Attribute api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e20909b244e6c920bdc93f158a5acd3a20471ac1", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/e20909b244e6c920bdc93f158a5acd3a20471ac1", "committedDate": "2020-02-05T04:22:48Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "38afae6bbe693daa4c2f1362260dfdadd58ffc8d", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/38afae6bbe693daa4c2f1362260dfdadd58ffc8d", "committedDate": "2020-02-28T23:16:58Z", "message": "Add Entity Attribute api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38afae6bbe693daa4c2f1362260dfdadd58ffc8d", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/38afae6bbe693daa4c2f1362260dfdadd58ffc8d", "committedDate": "2020-02-28T23:16:58Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "cedf3bf5995c3843f4be8a86609d2b731933df73", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/cedf3bf5995c3843f4be8a86609d2b731933df73", "committedDate": "2020-04-02T19:29:06Z", "message": "Add Entity Attribute api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cedf3bf5995c3843f4be8a86609d2b731933df73", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/cedf3bf5995c3843f4be8a86609d2b731933df73", "committedDate": "2020-04-02T19:29:06Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "94badf2be3c60d15c1936a17bb6d7517ff3a93c2", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/94badf2be3c60d15c1936a17bb6d7517ff3a93c2", "committedDate": "2020-04-02T19:34:18Z", "message": "Add Entity Attribute api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94badf2be3c60d15c1936a17bb6d7517ff3a93c2", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/94badf2be3c60d15c1936a17bb6d7517ff3a93c2", "committedDate": "2020-04-02T19:34:18Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "92f6f9af8b8678372b0fdf1448a1af8018726ea0", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/92f6f9af8b8678372b0fdf1448a1af8018726ea0", "committedDate": "2020-04-02T19:41:46Z", "message": "Add Entity Attribute api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Nzc1MzU3", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#pullrequestreview-386775357", "createdAt": "2020-04-02T21:04:51Z", "commit": {"oid": "92f6f9af8b8678372b0fdf1448a1af8018726ea0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTowNDo1MVrOF_8gug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTowNDo1MVrOF_8gug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5NjAyNg==", "bodyText": "Why? Seems like we're mixing concepts here.", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2085#discussion_r402596026", "createdAt": "2020-04-02T21:04:51Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/api/entity/attribute/type/AttributeType.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.entity.attribute.type;\n+\n+import org.spongepowered.api.CatalogType;\n+import org.spongepowered.api.data.Key;\n+import org.spongepowered.api.entity.attribute.AttributeModifier;\n+import org.spongepowered.api.util.annotation.CatalogedBy;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Represents an attribute type that can apply effects or modify traits related to an entity.\n+ */\n+@CatalogedBy(AttributeTypes.class)\n+public interface AttributeType extends CatalogType {\n+\n+    /**\n+     * Gets the parent attribute type of this attribute type.\n+     *\n+     * @return The parent type if present.\n+     */\n+    Optional<AttributeType> getParent();\n+\n+    /**\n+     * Gets the key this attribute type is related to.\n+     *\n+     * @return The key if any key is related to this attribute type.\n+     */\n+    Optional<Key<?>> getAttributeKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92f6f9af8b8678372b0fdf1448a1af8018726ea0"}, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92f6f9af8b8678372b0fdf1448a1af8018726ea0", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/92f6f9af8b8678372b0fdf1448a1af8018726ea0", "committedDate": "2020-04-02T19:41:46Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "2b03fe9ae662f18d80aa2768eff2bc3b0d2d71ad", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/2b03fe9ae662f18d80aa2768eff2bc3b0d2d71ad", "committedDate": "2020-04-02T21:14:16Z", "message": "Add Entity Attribute api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b03fe9ae662f18d80aa2768eff2bc3b0d2d71ad", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/2b03fe9ae662f18d80aa2768eff2bc3b0d2d71ad", "committedDate": "2020-04-02T21:14:16Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "ffef6a3420d8cfac09f4c3e079087463648d2f7e", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/ffef6a3420d8cfac09f4c3e079087463648d2f7e", "committedDate": "2020-05-18T05:51:17Z", "message": "Add Entity Attribute api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ffef6a3420d8cfac09f4c3e079087463648d2f7e", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/ffef6a3420d8cfac09f4c3e079087463648d2f7e", "committedDate": "2020-05-18T05:51:17Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "3d2a953721ef51bab65eda05908612ee87b68bca", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/3d2a953721ef51bab65eda05908612ee87b68bca", "committedDate": "2020-06-18T02:17:30Z", "message": "Add Entity Attribute api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3e3648da86e9d1c02ec40db39a49bfd9f0841a2", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/c3e3648da86e9d1c02ec40db39a49bfd9f0841a2", "committedDate": "2020-06-28T22:15:20Z", "message": "Add Entity Attribute api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d2a953721ef51bab65eda05908612ee87b68bca", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/3d2a953721ef51bab65eda05908612ee87b68bca", "committedDate": "2020-06-18T02:17:30Z", "message": "Add Entity Attribute api"}, "afterCommit": {"oid": "c3e3648da86e9d1c02ec40db39a49bfd9f0841a2", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/SpongePowered/SpongeAPI/commit/c3e3648da86e9d1c02ec40db39a49bfd9f0841a2", "committedDate": "2020-06-28T22:15:20Z", "message": "Add Entity Attribute api"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 714, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}