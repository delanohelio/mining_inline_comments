{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0Mjg1MDMy", "number": 2154, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNDowMTo0MFrOELYlvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNDowMTo0MFrOELYlvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzcyNjcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/api/util/annotation/DoNotStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNDowMTo0MVrOGs8I0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNDowMTo0MVrOGs8I0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3NTgyNA==", "bodyText": "Add @Documented as this is a documentation marker so should appear in the javadocs and is considered part of the public contract.\nI'd change the javadocs on this too to give developers a hint on what (not) to do, something like:\nObjects of types that are annotated with this method <strong>must not</strong> be stored as they may be invalidated at any time.\n\n<p>In particular, you should not:</p>\n\n<ul>\n    <li>Store annotated objects on a field</li>\n    <li>Cache annotated objects in any collection</li>\n</ul>\n\n<p>Doing so may result in memory leaks and/or result in you operating on a stale object, meaning your operations will fail, often silently.</p>\n\n<p>Where objects have identifiers (usually a {@link UUID} or name), you should store the identifiers instead, and use these to get the required object from the API when needed.</p>", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2154#discussion_r449775824", "createdAt": "2020-07-04T14:01:41Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/api/util/annotation/DoNotStore.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.api.util.annotation;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Inherited;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * The instance of the class to which this annotation is applied cannot be stored.\n+ *\n+ * The annotation is applied to classes to indicate that their instances should not\n+ * be stored in a field or top-level variable.\n+ * The annotation is inherited.\n+ */\n+@Inherited\n+@Target(ElementType.TYPE)\n+public @interface DoNotStore {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1547d89e44f5e04a46c1d89acba0473af8e0d22"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2417, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}