{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNDI0MzMw", "number": 1769, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzoyODo1M1rOD-r0SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMToyMjowMVrOD-zMGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDU2MjAwOnYy", "diffSide": "RIGHT", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzoyODo1M1rOGY7_4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODoyNTo1MVrOGY96dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMjAxOQ==", "bodyText": "better to be: not enabled then return", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428802019", "createdAt": "2020-05-21T17:28:53Z", "author": {"login": "wujimin"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,24 +52,23 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();\n+\n+    if (enable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8a47d13c47afc1084e703cc5dde706c773579dc"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzMzM5Ng==", "bodyText": "agreed.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428833396", "createdAt": "2020-05-21T18:25:51Z", "author": {"login": "jungan21"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,24 +52,23 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();\n+\n+    if (enable) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMjAxOQ=="}, "originalCommit": {"oid": "c8a47d13c47afc1084e703cc5dde706c773579dc"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDU2Njc5OnYy", "diffSide": "RIGHT", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzozMDowNFrOGY8Cyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODoyMDo0OVrOGY9vyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMjc2Mw==", "bodyText": "better to throw exception and prevent bootup", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428802763", "createdAt": "2020-05-21T17:30:04Z", "author": {"login": "wujimin"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,24 +52,23 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();\n+\n+    if (enable) {\n       ServerUtil.init();\n       ClientUtil.init();\n \n       try {\n         this.multicastSocket = new MulticastSocket();\n       } catch (IOException e) {\n-        LOGGER.error(\"Failed create MulticastSocket object\", e);\n+        LOGGER.error(\"Failed to create MulticastSocket object\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8a47d13c47afc1084e703cc5dde706c773579dc"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzMDY2Nw==", "bodyText": "agreed.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428830667", "createdAt": "2020-05-21T18:20:49Z", "author": {"login": "jungan21"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,24 +52,23 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();\n+\n+    if (enable) {\n       ServerUtil.init();\n       ClientUtil.init();\n \n       try {\n         this.multicastSocket = new MulticastSocket();\n       } catch (IOException e) {\n-        LOGGER.error(\"Failed create MulticastSocket object\", e);\n+        LOGGER.error(\"Failed to create MulticastSocket object\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMjc2Mw=="}, "originalCommit": {"oid": "c8a47d13c47afc1084e703cc5dde706c773579dc"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTc2OTg1OnYy", "diffSide": "RIGHT", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMToyMjowMVrOGZH2Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMTo0ODozMVrOGZINxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5NjExMQ==", "bodyText": "I think default value to 'true' is better. Because when users use zeroconfig, they have to add pom dependency implicitly. It is false when zeroconfig module is not included. I set 'local/service center' default to 'true'. see https://github.com/apache/servicecomb-java-chassis/blob/master/service-registry/registry-local/src/main/java/org/apache/servicecomb/localregistry/LocalRegistration.java\nand this is documents in progress", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428996111", "createdAt": "2020-05-22T01:22:01Z", "author": {"login": "liubao68"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,32 +53,36 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n-      ServerUtil.init();\n-      ClientUtil.init();\n-\n-      try {\n-        this.multicastSocket = new MulticastSocket();\n-      } catch (IOException e) {\n-        LOGGER.error(\"Failed create MulticastSocket object\", e);\n-      }\n-\n-      Function<ServiceRegistry, ServiceRegistryClient> registryClientConstructor =\n-          serviceRegistry -> new ZeroConfigRegistryClientImpl(new ZeroConfigRegistryService(),\n-              multicastSocket, new RestTemplate());\n-\n-      ServiceRegistryConfig.INSTANCE.setServiceRegistryClientConstructor(registryClientConstructor);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e40a463c5264bb5c74ec03236faec9278f05fc64"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwMjE4Mg==", "bodyText": "I see. let me change default value to true", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r429002182", "createdAt": "2020-05-22T01:48:31Z", "author": {"login": "jungan21"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,32 +53,36 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n-      ServerUtil.init();\n-      ClientUtil.init();\n-\n-      try {\n-        this.multicastSocket = new MulticastSocket();\n-      } catch (IOException e) {\n-        LOGGER.error(\"Failed create MulticastSocket object\", e);\n-      }\n-\n-      Function<ServiceRegistry, ServiceRegistryClient> registryClientConstructor =\n-          serviceRegistry -> new ZeroConfigRegistryClientImpl(new ZeroConfigRegistryService(),\n-              multicastSocket, new RestTemplate());\n-\n-      ServiceRegistryConfig.INSTANCE.setServiceRegistryClientConstructor(registryClientConstructor);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5NjExMQ=="}, "originalCommit": {"oid": "e40a463c5264bb5c74ec03236faec9278f05fc64"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1260, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}