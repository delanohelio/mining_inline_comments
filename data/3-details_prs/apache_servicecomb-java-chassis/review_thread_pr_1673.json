{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NzA3MDQw", "number": 1673, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozNzowNVrODsC7xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwMDo1ODozM1rODsRBKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTEyMDA1OnYy", "diffSide": "RIGHT", "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozNzowNVrOF8vROw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjo0NDoyMVrOF8vggw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzMzMzOQ==", "bodyText": "It seems no necessary to make this part of logic static? We know that the HttpClientFilter implementations are singleton. I guess it's better to avoid static member if possible since the two plans take the same effect.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399233339", "createdAt": "2020-03-27T12:37:05Z", "author": {"login": "yhs0092"}, "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+\n+  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";\n+\n+  private static final String KEY_HEADERS = \"servicecomb.http.dispatcher.edge.public.headers\";\n+\n+  private static boolean ENABLED = false;\n+\n+  private static List<String> PUBLIC_HEADER = new ArrayList<>();\n+\n+  static {\n+    init();\n+    ((ConcurrentCompositeConfiguration) DynamicPropertyFactory\n+        .getBackingConfigurationSource()).addConfigurationListener(event -> {\n+      if (event.getPropertyName().startsWith(KEY_HEADERS) || event.getPropertyName().startsWith(KEY_ENABLED)) {\n+        LOGGER.info(\"Public header config have been changed. Event=\" + event.getType());\n+        init();\n+      }\n+    });\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d40aa9edaaf0736d65cd7fffc18af6e9a94fb52"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzNzI1MQ==", "bodyText": "ok", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399237251", "createdAt": "2020-03-27T12:44:21Z", "author": {"login": "heyile"}, "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+\n+  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";\n+\n+  private static final String KEY_HEADERS = \"servicecomb.http.dispatcher.edge.public.headers\";\n+\n+  private static boolean ENABLED = false;\n+\n+  private static List<String> PUBLIC_HEADER = new ArrayList<>();\n+\n+  static {\n+    init();\n+    ((ConcurrentCompositeConfiguration) DynamicPropertyFactory\n+        .getBackingConfigurationSource()).addConfigurationListener(event -> {\n+      if (event.getPropertyName().startsWith(KEY_HEADERS) || event.getPropertyName().startsWith(KEY_ENABLED)) {\n+        LOGGER.info(\"Public header config have been changed. Event=\" + event.getType());\n+        init();\n+      }\n+    });\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzMzMzOQ=="}, "originalCommit": {"oid": "6d40aa9edaaf0736d65cd7fffc18af6e9a94fb52"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzQyMzA1OnYy", "diffSide": "RIGHT", "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwMDo1NDozNFrOF9Ffhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwMToxODo0NVrOF9Fr2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NzQ0Ng==", "bodyText": "Naming : maybe EdgeAddHeaderClientFilter is better", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399597446", "createdAt": "2020-03-28T00:54:34Z", "author": {"login": "liubao68"}, "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cf138e91a361adf411eead78bf3456da73584e7"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYwMDYwMA==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399600600", "createdAt": "2020-03-28T01:18:45Z", "author": {"login": "heyile"}, "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NzQ0Ng=="}, "originalCommit": {"oid": "2cf138e91a361adf411eead78bf3456da73584e7"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzQyNTIyOnYy", "diffSide": "RIGHT", "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwMDo1NjowNVrOF9Fgnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwMDo1NzozOVrOF9FhaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NzcyNw==", "bodyText": "Sugguestion:\nservicecomb.edge.filter.addHeader.enabled\nservicecomb.edge.filter.addHeader.allowedHeaders", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399597727", "createdAt": "2020-03-28T00:56:05Z", "author": {"login": "liubao68"}, "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+\n+  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cf138e91a361adf411eead78bf3456da73584e7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NzkyOA==", "bodyText": "ok", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399597928", "createdAt": "2020-03-28T00:57:39Z", "author": {"login": "heyile"}, "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+\n+  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NzcyNw=="}, "originalCommit": {"oid": "2cf138e91a361adf411eead78bf3456da73584e7"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzQyNzYzOnYy", "diffSide": "RIGHT", "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwMDo1ODozM1rOF9Fh4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwMToxODoxM1rOF9FriA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5ODA1MA==", "bodyText": "create a subtask to add documents for this feature.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399598050", "createdAt": "2020-03-28T00:58:33Z", "author": {"login": "liubao68"}, "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+\n+  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";\n+\n+  private static final String KEY_HEADERS = \"servicecomb.http.dispatcher.edge.public.headers\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cf138e91a361adf411eead78bf3456da73584e7"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYwMDUyMA==", "bodyText": "done\napache/servicecomb-docs#156", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399600520", "createdAt": "2020-03-28T01:18:13Z", "author": {"login": "heyile"}, "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+\n+  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";\n+\n+  private static final String KEY_HEADERS = \"servicecomb.http.dispatcher.edge.public.headers\";\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5ODA1MA=="}, "originalCommit": {"oid": "2cf138e91a361adf411eead78bf3456da73584e7"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1333, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}