{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0Mjg4NDc3", "number": 1789, "title": "[SCB-1650]discovery schema from instancies directly", "bodyText": "Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Make sure there is a JIRA issue filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes.\n Each commit in the pull request should have a meaningful subject line and body.\n Format the pull request title like [SCB-XXX] Fixes bug in ApproximateQuantiles, where you replace SCB-XXX with the appropriate JIRA issue.\n Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n Run mvn clean install -Pit to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.", "createdAt": "2020-05-28T06:58:11Z", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789", "merged": true, "mergeCommit": {"oid": "8a7c8bcbd1556359879b6ed568af1089b911f166"}, "closed": true, "closedAt": "2020-05-28T11:42:29Z", "author": {"login": "liubao68"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcloNeWAH2gAyNDI0Mjg4NDc3Ojg5ZjgxNThkYmU4M2ZhMGI4NWU5MGFiZDhiMzRjNmVmMDhiY2Q4MTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclpxZ2gH2gAyNDI0Mjg4NDc3OjdmNWY3ZGYyN2U4N2JmNmFkODY5OGRjNzQ1ZWE4MmRlMWIxNmU1NzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "89f8158dbe83fa0b85e90abd8b34c6ef08bcd815", "author": {"user": {"login": "liubao68", "name": "liubao68"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/89f8158dbe83fa0b85e90abd8b34c6ef08bcd815", "committedDate": "2020-05-28T06:52:12Z", "message": "[SCB-1942]change Discovery getSchema with instances param"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e", "author": {"user": {"login": "liubao68", "name": "liubao68"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e", "committedDate": "2020-05-28T06:52:13Z", "message": "[SCB-1650]discovery schema from instancies directly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5ODYxNzc1", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#pullrequestreview-419861775", "createdAt": "2020-05-28T07:53:38Z", "commit": {"oid": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzo1MzozOFrOGbptIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzo1MzozOFrOGbptIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY0ODAzMg==", "bodyText": "no need prefix \"I\"?", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431648032", "createdAt": "2020-05-28T07:53:38Z", "author": {"login": "wujimin"}, "path": "demo/demo-multi-registries/demo-multi-registries-client/src/main/java/org/apache/servicecomb/demo/registry/IServerEndpoint.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.demo.registry;\n+\n+public interface IServerEndpoint {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5ODY1OTU5", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#pullrequestreview-419865959", "createdAt": "2020-05-28T07:59:15Z", "commit": {"oid": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzo1OToxNVrOGbp49g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzo1OToxNVrOGbp49g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MTA2Mg==", "bodyText": "hashmap is not thread safe, not only for write, but also for read", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431651062", "createdAt": "2020-05-28T07:59:15Z", "author": {"login": "wujimin"}, "path": "foundations/foundation-registry/src/main/java/org/apache/servicecomb/registry/consumer/MicroserviceManager.java", "diffHunk": "@@ -45,11 +47,21 @@ public MicroserviceManager(AppManager appManager, String appId) {\n   }\n \n   public MicroserviceVersions getOrCreateMicroserviceVersions(String microserviceName) {\n-    MicroserviceVersions microserviceVersions = versionsByName.computeIfAbsent(microserviceName, name -> {\n-      MicroserviceVersions instance = new MicroserviceVersions(appManager, appId, microserviceName);\n-      instance.pullInstances();\n-      return instance;\n-    });\n+    // do not use ConcurrentHashMap computeIfAbsent for versionsByName\n+    // because: when create MicroserviceVersions, one creation may depend on another\n+    // MicroserviceVersions. And pullInstances will create a new MicroserviceVersions.\n+    // Calling ConcurrentHashMap computeIfAbsent inside will get deadlock.\n+    MicroserviceVersions microserviceVersions = versionsByName.get(microserviceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5ODY5MDgz", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#pullrequestreview-419869083", "createdAt": "2020-05-28T08:03:38Z", "commit": {"oid": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowMzozOVrOGbqB4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowMzozOVrOGbqB4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MzM0NQ==", "bodyText": "try org.apache.servicecomb.foundation.common.utils.ResourceUtil#findResourcesBySuffix?", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431653345", "createdAt": "2020-05-28T08:03:39Z", "author": {"login": "wujimin"}, "path": "service-registry/registry-local/src/main/java/org/apache/servicecomb/localregistry/LocalRegistryStore.java", "diffHunk": "@@ -83,9 +90,28 @@ public void run() {\n     selfMicroserviceInstance.setInstanceId(selfMicroservice.getServiceId());\n     selfMicroserviceInstance.setServiceId(selfMicroservice.getServiceId());\n \n-    InputStream is = this.getClass().getClassLoader().getResourceAsStream(REGISTRY_FILE_NAME);\n-    if (is != null) {\n-      initFromData(is);\n+    InputStream is = null;\n+\n+    try {\n+      ClassLoader loader = JvmUtils.findClassLoader();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5ODc3MTYz", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#pullrequestreview-419877163", "createdAt": "2020-05-28T08:14:41Z", "commit": {"oid": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoxNDo0MVrOGbqZsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoxNDo0MVrOGbqZsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1OTQ0Mw==", "bodyText": "3rd party is a good mechanism\uff0c must not delete it.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431659443", "createdAt": "2020-05-28T08:14:41Z", "author": {"login": "wujimin"}, "path": "service-registry/registry-service-center/src/main/java/org/apache/servicecomb/serviceregistry/registry/AbstractServiceRegistry.java", "diffHunk": "@@ -263,6 +263,7 @@ public void destroy() {\n \n   @Override\n   // TODO: this is for 3rd party invocation, and a better way can be provided\n+  // TODO:  microserviceManager.getVersionsByName() can not be used, will delete this in SCB-1949", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f5f7df27e87bf6ad8698dc745ea82de1b16e570", "author": {"user": {"login": "liubao68", "name": "liubao68"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/7f5f7df27e87bf6ad8698dc745ea82de1b16e570", "committedDate": "2020-05-28T08:41:21Z", "message": "[SCB-1650]fix review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4424, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}