{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTYxOTM3", "number": 1767, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyMjoxMFrOD-JwGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyMjoxMFrOD-JwGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk4MDc1OnYy", "diffSide": "RIGHT", "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyMjoxMFrOGYFCXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNDoyNToyN1rOGZKRsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA==", "bodyText": "How about T transportContext ? Because vert.x or web container have different context.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r427901534", "createdAt": "2020-05-20T10:22:10Z", "author": {"login": "liubao68"}, "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java", "diffHunk": "@@ -36,6 +38,11 @@\n \n   protected Map<String, Object> localContext = new HashMap<>();\n \n+  /**\n+   * the vertx context that start the invocation\n+   */\n+  protected Context vertxContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1cf96b193dcfc7c5cd3b342c67930e0882dd40a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyMTE5NA==", "bodyText": "seems useless to record context for web container?\nand i don't know what is the context for web container, \ud83d\ude02", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r427921194", "createdAt": "2020-05-20T10:59:14Z", "author": {"login": "wujimin"}, "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java", "diffHunk": "@@ -36,6 +38,11 @@\n \n   protected Map<String, Object> localContext = new HashMap<>();\n \n+  /**\n+   * the vertx context that start the invocation\n+   */\n+  protected Context vertxContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, "originalCommit": {"oid": "a1cf96b193dcfc7c5cd3b342c67930e0882dd40a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MTk0Mg==", "bodyText": "How about this ?\nInterface TransportContext\n\ninterface TransportProviderContext extends TransportContext\ninterface TransportConsumerContext extends TransportContext\n\nclass VertxTransportProviderContext implments TransportContext \n    {Context vertxContext; RoutingContext routingContext; ...}\nclass ServletTransportProviderContext implements TransportContext\n    {HttpServletRequest rquest; HttpServletResponse response;}", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r428391942", "createdAt": "2020-05-21T01:09:56Z", "author": {"login": "liubao68"}, "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java", "diffHunk": "@@ -36,6 +38,11 @@\n \n   protected Map<String, Object> localContext = new HashMap<>();\n \n+  /**\n+   * the vertx context that start the invocation\n+   */\n+  protected Context vertxContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, "originalCommit": {"oid": "a1cf96b193dcfc7c5cd3b342c67930e0882dd40a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDEyNg==", "bodyText": "request already can be got from invocation.\nand not want publish servlet response......", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r428394126", "createdAt": "2020-05-21T01:18:52Z", "author": {"login": "wujimin"}, "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java", "diffHunk": "@@ -36,6 +38,11 @@\n \n   protected Map<String, Object> localContext = new HashMap<>();\n \n+  /**\n+   * the vertx context that start the invocation\n+   */\n+  protected Context vertxContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, "originalCommit": {"oid": "a1cf96b193dcfc7c5cd3b342c67930e0882dd40a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5NDM5Mw==", "bodyText": "maybe useful for new Filter mechanism, let me try it.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r428994393", "createdAt": "2020-05-22T01:14:32Z", "author": {"login": "wujimin"}, "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java", "diffHunk": "@@ -36,6 +38,11 @@\n \n   protected Map<String, Object> localContext = new HashMap<>();\n \n+  /**\n+   * the vertx context that start the invocation\n+   */\n+  protected Context vertxContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, "originalCommit": {"oid": "a1cf96b193dcfc7c5cd3b342c67930e0882dd40a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxNjYwMA==", "bodyText": "OK. New filter mechanism should consider a 'global error handler'(errors thrown everywhere) .  This is a frequently asked questions and java chassis not handle it well now.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r429016600", "createdAt": "2020-05-22T02:52:33Z", "author": {"login": "liubao68"}, "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java", "diffHunk": "@@ -36,6 +38,11 @@\n \n   protected Map<String, Object> localContext = new HashMap<>();\n \n+  /**\n+   * the vertx context that start the invocation\n+   */\n+  protected Context vertxContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, "originalCommit": {"oid": "a1cf96b193dcfc7c5cd3b342c67930e0882dd40a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyODI1NQ==", "bodyText": "yes, already design it.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r429028255", "createdAt": "2020-05-22T03:48:06Z", "author": {"login": "wujimin"}, "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java", "diffHunk": "@@ -36,6 +38,11 @@\n \n   protected Map<String, Object> localContext = new HashMap<>();\n \n+  /**\n+   * the vertx context that start the invocation\n+   */\n+  protected Context vertxContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, "originalCommit": {"oid": "a1cf96b193dcfc7c5cd3b342c67930e0882dd40a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzNTk1Mw==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r429035953", "createdAt": "2020-05-22T04:25:27Z", "author": {"login": "wujimin"}, "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java", "diffHunk": "@@ -36,6 +38,11 @@\n \n   protected Map<String, Object> localContext = new HashMap<>();\n \n+  /**\n+   * the vertx context that start the invocation\n+   */\n+  protected Context vertxContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, "originalCommit": {"oid": "a1cf96b193dcfc7c5cd3b342c67930e0882dd40a"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1258, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}