{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNDI0MzMw", "number": 1769, "title": "[SCB-1922]Use DynamicPropertyFacotry way to read environment variables", "bodyText": "Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Make sure there is a JIRA issue filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes.\n Each commit in the pull request should have a meaningful subject line and body.\n Format the pull request title like [SCB-XXX] Fixes bug in ApproximateQuantiles, where you replace SCB-XXX with the appropriate JIRA issue.\n Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n Run mvn clean install -Pit to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.", "createdAt": "2020-05-21T15:33:12Z", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769", "merged": true, "mergeCommit": {"oid": "c8d75ea44fb45b528d111956092b634d6a7dd2e9"}, "closed": true, "closedAt": "2020-05-22T02:50:41Z", "author": {"login": "jungan21"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjfWn8AH2gAyNDIxNDI0MzMwOmM4YTQ3ZDEzYzQ3YWZjMTA4NGU3MDNjYzVkZGU3MDZjNzczNTc5ZGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjpKFKgFqTQxNjYxNTc3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c8a47d13c47afc1084e703cc5dde706c773579dc", "author": {"user": {"login": "jungan21", "name": "Jun Gan"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/c8a47d13c47afc1084e703cc5dde706c773579dc", "committedDate": "2020-05-21T15:25:12Z", "message": "[SCB-1922]Use DynamicPropertyFacotry way to read environment variables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MzQ3MDYw", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#pullrequestreview-416347060", "createdAt": "2020-05-21T17:28:52Z", "commit": {"oid": "c8a47d13c47afc1084e703cc5dde706c773579dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzoyODo1M1rOGY7_4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzoyODo1M1rOGY7_4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMjAxOQ==", "bodyText": "better to be: not enabled then return", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428802019", "createdAt": "2020-05-21T17:28:53Z", "author": {"login": "wujimin"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,24 +52,23 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();\n+\n+    if (enable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8a47d13c47afc1084e703cc5dde706c773579dc"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MzQ3OTcx", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#pullrequestreview-416347971", "createdAt": "2020-05-21T17:30:04Z", "commit": {"oid": "c8a47d13c47afc1084e703cc5dde706c773579dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzozMDowNFrOGY8Cyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzozMDowNFrOGY8Cyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMjc2Mw==", "bodyText": "better to throw exception and prevent bootup", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428802763", "createdAt": "2020-05-21T17:30:04Z", "author": {"login": "wujimin"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,24 +52,23 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();\n+\n+    if (enable) {\n       ServerUtil.init();\n       ClientUtil.init();\n \n       try {\n         this.multicastSocket = new MulticastSocket();\n       } catch (IOException e) {\n-        LOGGER.error(\"Failed create MulticastSocket object\", e);\n+        LOGGER.error(\"Failed to create MulticastSocket object\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8a47d13c47afc1084e703cc5dde706c773579dc"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e40a463c5264bb5c74ec03236faec9278f05fc64", "author": {"user": {"login": "jungan21", "name": "Jun Gan"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/e40a463c5264bb5c74ec03236faec9278f05fc64", "committedDate": "2020-05-21T18:26:03Z", "message": "[SCB-1922] Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NTkxMzgy", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#pullrequestreview-416591382", "createdAt": "2020-05-22T01:22:00Z", "commit": {"oid": "e40a463c5264bb5c74ec03236faec9278f05fc64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMToyMjowMVrOGZH2Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMToyMjowMVrOGZH2Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5NjExMQ==", "bodyText": "I think default value to 'true' is better. Because when users use zeroconfig, they have to add pom dependency implicitly. It is false when zeroconfig module is not included. I set 'local/service center' default to 'true'. see https://github.com/apache/servicecomb-java-chassis/blob/master/service-registry/registry-local/src/main/java/org/apache/servicecomb/localregistry/LocalRegistration.java\nand this is documents in progress", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#discussion_r428996111", "createdAt": "2020-05-22T01:22:01Z", "author": {"login": "liubao68"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/ZeroConfigRegistryApplicationListener.java", "diffHunk": "@@ -52,32 +53,36 @@\n   private static final Logger LOGGER = LoggerFactory\n       .getLogger(ZeroConfigRegistryApplicationListener.class);\n \n-  private ApplicationContext applicationContext;\n   private MulticastSocket multicastSocket;\n \n   @Override\n   public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n \n     // same mechanism as Local registry to enable the Zero Config registry\n-    String flag = System.getProperty(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_FLAG);\n-    if (flag != null && flag.equals(ZeroConfigRegistryConstants.ZERO_CONFIG_REGISTRY_ENABLE_FLAG)) {\n-      this.applicationContext = applicationContext;\n-      BeanUtils.setContext(applicationContext);\n-      ServerUtil.init();\n-      ClientUtil.init();\n-\n-      try {\n-        this.multicastSocket = new MulticastSocket();\n-      } catch (IOException e) {\n-        LOGGER.error(\"Failed create MulticastSocket object\", e);\n-      }\n-\n-      Function<ServiceRegistry, ServiceRegistryClient> registryClientConstructor =\n-          serviceRegistry -> new ZeroConfigRegistryClientImpl(new ZeroConfigRegistryService(),\n-              multicastSocket, new RestTemplate());\n-\n-      ServiceRegistryConfig.INSTANCE.setServiceRegistryClientConstructor(registryClientConstructor);\n+    boolean enable = DynamicPropertyFactory.getInstance()\n+        .getBooleanProperty(\"servicecomb.zeroconfig.enabled\", false).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e40a463c5264bb5c74ec03236faec9278f05fc64"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf47d27eb229a16e2700246783223b56fc1b1356", "author": {"user": {"login": "jungan21", "name": "Jun Gan"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/bf47d27eb229a16e2700246783223b56fc1b1356", "committedDate": "2020-05-22T01:50:19Z", "message": "[SCB-1922] set the default value for zero-config to true i.e. enable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NjE1Nzcz", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1769#pullrequestreview-416615773", "createdAt": "2020-05-22T02:50:33Z", "commit": {"oid": "bf47d27eb229a16e2700246783223b56fc1b1356"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4418, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}