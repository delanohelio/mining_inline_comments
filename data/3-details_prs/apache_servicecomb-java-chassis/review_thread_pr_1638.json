{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NjQ4NTI0", "number": 1638, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOTo0NToxOFrODopfHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMjoxMjo0MlrODpWHDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTQ5MzQzOnYy", "diffSide": "RIGHT", "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOTo0NToxOVrOF3UqJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo0NDo1NlrOF30kTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU1NDQ2OQ==", "bodyText": "long polling timeout is less than client request timeout, will this cause client timeout frequently?", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1638#discussion_r393554469", "createdAt": "2020-03-17T09:45:19Z", "author": {"login": "liubao68"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -48,16 +49,27 @@\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(KieClient.class);\n \n-  private ScheduledExecutorService EXECUTOR = Executors.newScheduledThreadPool(1);\n+  private ScheduledExecutorService EXECUTOR = Executors.newScheduledThreadPool(1, (r) -> {\n+    Thread thread = new Thread(r);\n+    thread.setName(\"org.apache.servicecomb.config.kie\");\n+    thread.setDaemon(true);\n+    return thread;\n+  });\n \n   private static final long TIME_OUT = 10000;\n \n+  private static AtomicBoolean IS_FIRST_PULL = new AtomicBoolean(true);\n+\n+  private static final int LONG_POLLING_WAIT_TIME = 30;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52260936f8d2ca62e9bb2466c69b772696776c4b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NzI2MQ==", "bodyText": "After checking , vert.x default strategy is never timeout. I set the idle timeout 50s.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1638#discussion_r394077261", "createdAt": "2020-03-18T02:44:56Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -48,16 +49,27 @@\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(KieClient.class);\n \n-  private ScheduledExecutorService EXECUTOR = Executors.newScheduledThreadPool(1);\n+  private ScheduledExecutorService EXECUTOR = Executors.newScheduledThreadPool(1, (r) -> {\n+    Thread thread = new Thread(r);\n+    thread.setName(\"org.apache.servicecomb.config.kie\");\n+    thread.setDaemon(true);\n+    return thread;\n+  });\n \n   private static final long TIME_OUT = 10000;\n \n+  private static AtomicBoolean IS_FIRST_PULL = new AtomicBoolean(true);\n+\n+  private static final int LONG_POLLING_WAIT_TIME = 30;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU1NDQ2OQ=="}, "originalCommit": {"oid": "52260936f8d2ca62e9bb2466c69b772696776c4b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTUwOTMzOnYy", "diffSide": "RIGHT", "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOTo0OToyN1rOF3U0LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo0NTowOVrOF30kgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU1NzAzNg==", "bodyText": "Maybe need check enableLongPolling?", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1638#discussion_r393557036", "createdAt": "2020-03-17T09:49:27Z", "author": {"login": "liubao68"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -114,17 +129,22 @@ public void run() {\n       }\n     }\n \n-    //todo : latch down\n     @SuppressWarnings(\"deprecation\")\n     void refreshConfig() {\n       String path = \"/v1/\"\n           + KieConfig.INSTANCE.getDomainName()\n           + \"/kie/kv?label=app:\"\n           + KieConfig.INSTANCE.getAppName();\n+      if (!IS_FIRST_PULL.get()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52260936f8d2ca62e9bb2466c69b772696776c4b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NzMxMw==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1638#discussion_r394077313", "createdAt": "2020-03-18T02:45:09Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -114,17 +129,22 @@ public void run() {\n       }\n     }\n \n-    //todo : latch down\n     @SuppressWarnings(\"deprecation\")\n     void refreshConfig() {\n       String path = \"/v1/\"\n           + KieConfig.INSTANCE.getDomainName()\n           + \"/kie/kv?label=app:\"\n           + KieConfig.INSTANCE.getAppName();\n+      if (!IS_FIRST_PULL.get()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU1NzAzNg=="}, "originalCommit": {"oid": "52260936f8d2ca62e9bb2466c69b772696776c4b"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTUxMjkzOnYy", "diffSide": "RIGHT", "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOTo1MDoyN1rOF3U2aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjo0NTo1NFrOF30lQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU1NzYwOA==", "bodyText": "Maybe need check if first call?", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1638#discussion_r393557608", "createdAt": "2020-03-17T09:50:27Z", "author": {"login": "liubao68"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -140,23 +160,23 @@ void refreshConfig() {\n                         e.getMessage());\n                   }\n                 });\n-                // latch.countDown();\n               } else if (rsp.statusCode() == HttpStatus.SC_NOT_FOUND) {\n                 EventManager.post(new ConnSuccEvent());\n-//                latch.countDown();\n               } else {\n                 EventManager.post(new ConnFailEvent(\"fetch config fail\"));\n                 LOGGER.error(\"Config update from {} failed. Error message is [{}].\",\n                     serviceUri,\n                     rsp.statusMessage());\n               }\n+              if (enableLongPolling) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52260936f8d2ca62e9bb2466c69b772696776c4b"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NzUwNA==", "bodyText": "first time also need this code", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1638#discussion_r394077504", "createdAt": "2020-03-18T02:45:54Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -140,23 +160,23 @@ void refreshConfig() {\n                         e.getMessage());\n                   }\n                 });\n-                // latch.countDown();\n               } else if (rsp.statusCode() == HttpStatus.SC_NOT_FOUND) {\n                 EventManager.post(new ConnSuccEvent());\n-//                latch.countDown();\n               } else {\n                 EventManager.post(new ConnFailEvent(\"fetch config fail\"));\n                 LOGGER.error(\"Config update from {} failed. Error message is [{}].\",\n                     serviceUri,\n                     rsp.statusMessage());\n               }\n+              if (enableLongPolling) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU1NzYwOA=="}, "originalCommit": {"oid": "52260936f8d2ca62e9bb2466c69b772696776c4b"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjgwNDYxOnYy", "diffSide": "RIGHT", "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMjoxMjo0MlrOF4dwow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMzo0ODowNVrOF4fOJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc1MjE2Mw==", "bodyText": "Please look at RestTransportClient to setting HttpClientOptions, if keepAliveTimeout not set, IdelTimeout may not work as expected. SOCKET_TIMEOUT should better be IdleTimeout and maybe better add a configuration for this.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1638#discussion_r394752163", "createdAt": "2020-03-19T02:12:42Z", "author": {"login": "liubao68"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -84,6 +101,8 @@ private void deployConfigClient() throws InterruptedException {\n     Vertx vertx = VertxUtils.getOrCreateVertxByName(\"kie\", vertxOptions);\n \n     HttpClientOptions httpClientOptions = new HttpClientOptions();\n+    httpClientOptions.setKeepAlive(true);\n+    httpClientOptions.setIdleTimeout(SOCKET_TIMOUT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edb82d2b1565bcd366d9901ff017f2def82abf4c"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc3NDc4Mw==", "bodyText": "keepAliveTimeout default is 60s", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1638#discussion_r394774783", "createdAt": "2020-03-19T03:43:18Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -84,6 +101,8 @@ private void deployConfigClient() throws InterruptedException {\n     Vertx vertx = VertxUtils.getOrCreateVertxByName(\"kie\", vertxOptions);\n \n     HttpClientOptions httpClientOptions = new HttpClientOptions();\n+    httpClientOptions.setKeepAlive(true);\n+    httpClientOptions.setIdleTimeout(SOCKET_TIMOUT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc1MjE2Mw=="}, "originalCommit": {"oid": "edb82d2b1565bcd366d9901ff017f2def82abf4c"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc3NjEwMQ==", "bodyText": "I see the vert.x said :\n\n\nSet the keep alive timeout for HTTP/1.x, in seconds.\nThis value determines how long a connection remains unused in the pool before being evicted and closed.\n\n\nI think the default value is ok", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1638#discussion_r394776101", "createdAt": "2020-03-19T03:48:05Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -84,6 +101,8 @@ private void deployConfigClient() throws InterruptedException {\n     Vertx vertx = VertxUtils.getOrCreateVertxByName(\"kie\", vertxOptions);\n \n     HttpClientOptions httpClientOptions = new HttpClientOptions();\n+    httpClientOptions.setKeepAlive(true);\n+    httpClientOptions.setIdleTimeout(SOCKET_TIMOUT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc1MjE2Mw=="}, "originalCommit": {"oid": "edb82d2b1565bcd366d9901ff017f2def82abf4c"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1322, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}