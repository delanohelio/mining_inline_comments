{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjg3MzQx", "number": 1827, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDozNDo1MlrOEEgM4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTozNzowNFrOEE55PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTU3MzQ0OnYy", "diffSide": "RIGHT", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/server/ServerUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDozNDo1MlrOGiKr9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjowNToyN1rOGiMFJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3OTg2Mw==", "bodyText": "Maybe need look at the outer try, if IOException is thrown, the task is exit.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#discussion_r438479863", "createdAt": "2020-06-11T00:34:52Z", "author": {"login": "liubao68"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/server/ServerUtil.java", "diffHunk": "@@ -172,16 +172,29 @@ private static ServerMicroserviceInstance buildServerMicroserviceInstanceFromMap\n     return map;\n   }\n \n+  private static void initMulticastSocket() throws IOException{\n+    multicastSocket = new MulticastSocket(PORT);\n+    group = InetAddress.getByName(GROUP);\n+    multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n+  }\n+\n   private static void startListenerForRegisterUnregisterEvent() {\n     try {\n       byte[] buffer = new byte[DATA_PACKET_BUFFER_SIZE];\n-      multicastSocket = new MulticastSocket(PORT);\n-      group = InetAddress.getByName(GROUP);\n-      multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n-\n+      initMulticastSocket();\n       while (true) {\n         DatagramPacket receivePacketBuffer = new DatagramPacket(buffer, buffer.length);\n-        multicastSocket.receive(receivePacketBuffer);\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40505871fb490afad3f6b0acf4391a6b81ea9a1f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUwMjY5NQ==", "bodyText": "Correct. But the outer try/catch(IOException) is for initializing the Multicastsocket object ......the failure should rarely happen. I don't think we need to handle this for now.  I'm thinkg to throw exception, (like our servicecomb init task)...instead of the just logging.\nthrow new IllegalStateException(\"Zero-Config init failed.\", e);", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#discussion_r438502695", "createdAt": "2020-06-11T02:05:27Z", "author": {"login": "jungan21"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/server/ServerUtil.java", "diffHunk": "@@ -172,16 +172,29 @@ private static ServerMicroserviceInstance buildServerMicroserviceInstanceFromMap\n     return map;\n   }\n \n+  private static void initMulticastSocket() throws IOException{\n+    multicastSocket = new MulticastSocket(PORT);\n+    group = InetAddress.getByName(GROUP);\n+    multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n+  }\n+\n   private static void startListenerForRegisterUnregisterEvent() {\n     try {\n       byte[] buffer = new byte[DATA_PACKET_BUFFER_SIZE];\n-      multicastSocket = new MulticastSocket(PORT);\n-      group = InetAddress.getByName(GROUP);\n-      multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n-\n+      initMulticastSocket();\n       while (true) {\n         DatagramPacket receivePacketBuffer = new DatagramPacket(buffer, buffer.length);\n-        multicastSocket.receive(receivePacketBuffer);\n+        try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3OTg2Mw=="}, "originalCommit": {"oid": "40505871fb490afad3f6b0acf4391a6b81ea9a1f"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTc4MzAxOnYy", "diffSide": "RIGHT", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/server/ServerUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTozNzowNFrOGi0Tug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTozNzowNFrOGi0Tug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2MTc4Ng==", "bodyText": "cyclomatic complexity of startListenerForRegisterUnregisterEvent is a bit too high, can be refactored.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#discussion_r439161786", "createdAt": "2020-06-12T01:37:04Z", "author": {"login": "liubao68"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/server/ServerUtil.java", "diffHunk": "@@ -172,16 +172,29 @@ private static ServerMicroserviceInstance buildServerMicroserviceInstanceFromMap\n     return map;\n   }\n \n+  private static void initMulticastSocket() throws IOException {\n+    multicastSocket = new MulticastSocket(PORT);\n+    group = InetAddress.getByName(GROUP);\n+    multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n+  }\n+\n   private static void startListenerForRegisterUnregisterEvent() {\n     try {\n       byte[] buffer = new byte[DATA_PACKET_BUFFER_SIZE];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d3fc41c60e81ba542fc961cdceee8a4856a4fee"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1281, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}