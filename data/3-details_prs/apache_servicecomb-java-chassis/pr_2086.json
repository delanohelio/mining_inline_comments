{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3OTY1NTAz", "number": 2086, "title": "[#2081]add a test case for query with List<String>", "bodyText": "Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Make sure there is a JIRA issue filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes.\n Each commit in the pull request should have a meaningful subject line and body.\n Format the pull request title like [SCB-XXX] Fixes bug in ApproximateQuantiles, where you replace SCB-XXX with the appropriate JIRA issue.\n Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n Run mvn clean install -Pit to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.", "createdAt": "2020-11-26T10:03:51Z", "url": "https://github.com/apache/servicecomb-java-chassis/pull/2086", "merged": true, "mergeCommit": {"oid": "f33483f6ceea68ae36faeb15da9b18f48f2f2b06"}, "closed": true, "closedAt": "2020-11-27T02:15:57Z", "author": {"login": "liubao68"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgSVY-AH2gAyNTI3OTY1NTAzOjNmNGM4OTI5NjI4ZDRjZWVhMmUyZTY2ZmY4MzA1ZmM0MjZjZmEwM2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgd7jBAFqTUzOTY3MTM0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3f4c8929628d4ceea2e2e66ff8305fc426cfa03f", "author": {"user": {"login": "liubao68", "name": "liubao68"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/3f4c8929628d4ceea2e2e66ff8305fc426cfa03f", "committedDate": "2020-11-26T12:44:28Z", "message": "[#2081]add a test case for query with List<String>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f973ffa9d15e2cdf4c1ac61e30ea3f178eb58377", "author": {"user": {"login": "liubao68", "name": "liubao68"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/f973ffa9d15e2cdf4c1ac61e30ea3f178eb58377", "committedDate": "2020-11-26T10:02:31Z", "message": "[#2081]add a test case for query with List<String>"}, "afterCommit": {"oid": "a83411a804b6d805ca59c619868baea1c64d126a", "author": {"user": {"login": "liubao68", "name": "liubao68"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/a83411a804b6d805ca59c619868baea1c64d126a", "committedDate": "2020-11-26T13:16:15Z", "message": "[SCB-2131]when timeout exception, connect closed will trigger asynchronous callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8f1924ac4df4c67981cbde9e50b4b3d3d410cae", "author": {"user": {"login": "liubao68", "name": "liubao68"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/b8f1924ac4df4c67981cbde9e50b4b3d3d410cae", "committedDate": "2020-11-26T13:22:24Z", "message": "[SCB-2131]when timeout exception, connect closed will trigger asynchronous callback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a83411a804b6d805ca59c619868baea1c64d126a", "author": {"user": {"login": "liubao68", "name": "liubao68"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/a83411a804b6d805ca59c619868baea1c64d126a", "committedDate": "2020-11-26T13:16:15Z", "message": "[SCB-2131]when timeout exception, connect closed will trigger asynchronous callback"}, "afterCommit": {"oid": "b8f1924ac4df4c67981cbde9e50b4b3d3d410cae", "author": {"user": {"login": "liubao68", "name": "liubao68"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/b8f1924ac4df4c67981cbde9e50b4b3d3d410cae", "committedDate": "2020-11-26T13:22:24Z", "message": "[SCB-2131]when timeout exception, connect closed will trigger asynchronous callback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NjYyNjkw", "url": "https://github.com/apache/servicecomb-java-chassis/pull/2086#pullrequestreview-539662690", "createdAt": "2020-11-27T01:34:33Z", "commit": {"oid": "b8f1924ac4df4c67981cbde9e50b4b3d3d410cae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwMTozNDozM1rOH6sszg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwMTozNDozM1rOH6sszg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTMxMTgyMg==", "bodyText": "\u65e0\u6cd5\u533a\u5206\u4e0b\u9762\u4e24\u79cd\u573a\u666f\uff1f\n\nList.of()\nList.of(\"\")\n\u8f93\u51fa\u90fd\u662f[]", "url": "https://github.com/apache/servicecomb-java-chassis/pull/2086#discussion_r531311822", "createdAt": "2020-11-27T01:34:33Z", "author": {"login": "wujimin"}, "path": "demo/demo-jaxrs/jaxrs-client/src/main/java/org/apache/servicecomb/demo/jaxrs/client/TestQueryParamWithListSchema.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.demo.jaxrs.client;\n+\n+import org.apache.servicecomb.demo.CategorizedTestCase;\n+import org.apache.servicecomb.demo.TestMgr;\n+import org.apache.servicecomb.provider.springmvc.reference.RestTemplateBuilder;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.client.RestTemplate;\n+\n+@Component\n+public class TestQueryParamWithListSchema implements CategorizedTestCase {\n+  private RestTemplate restTemplate = RestTemplateBuilder.create();\n+\n+  @Override\n+  public void testAllTransport() throws Exception {\n+    testMulti();\n+    testCSV();\n+    testSSV();\n+    testTSV();\n+    testPipes();\n+  }\n+\n+  @Override\n+  public void testRestTransport() throws Exception {\n+    testMultiRest();\n+    testCSVRest();\n+    testSSVRest();\n+    testTSVRest();\n+    testPipesRest();\n+  }\n+\n+  @Override\n+  // highway do not handle empty/default/null\n+  public void testHighwayTransport() throws Exception {\n+    testMultiHighway();\n+    testCSVHighway();\n+    testSSVHighway();\n+    testTSVHighway();\n+    testPipesHighway();\n+  }\n+\n+  private void testCSVHighway() {\n+    TestMgr.check(\"null\",\n+        restTemplate.getForObject(\"cse://jaxrs/queryList/queryListCSV?\", String.class));\n+  }\n+\n+  private void testCSVRest() {\n+    TestMgr.check(\"[]\",\n+        restTemplate.getForObject(\"cse://jaxrs/queryList/queryListCSV?\", String.class));\n+  }\n+\n+  private void testSSV() {\n+    TestMgr.check(\"[1, 2]\",\n+        restTemplate.getForObject(\"cse://jaxrs/queryList/queryListSSV?queryList=1%202\", String.class));\n+    TestMgr.check(\"[, ]\",\n+        restTemplate.getForObject(\"cse://jaxrs/queryList/queryListSSV?queryList=%20\", String.class));\n+    TestMgr.check(\"[]\",\n+        restTemplate.getForObject(\"cse://jaxrs/queryList/queryListSSV?queryList=\", String.class));\n+  }\n+\n+  private void testTSVHighway() {\n+    TestMgr.check(\"null\",\n+        restTemplate.getForObject(\"cse://jaxrs/queryList/queryListTSV?\", String.class));\n+  }\n+\n+  private void testTSVRest() {\n+    TestMgr.check(\"[]\",\n+        restTemplate.getForObject(\"cse://jaxrs/queryList/queryListTSV?\", String.class));\n+  }\n+\n+  private void testTSV() {\n+    TestMgr.check(\"[1, 2]\",\n+        restTemplate\n+            .getForObject(\"cse://jaxrs/queryList/queryListTSV?queryList={1}\", String.class, \"1\\t2\"));\n+    TestMgr.check(\"[, ]\",\n+        restTemplate.getForObject(\"cse://jaxrs/queryList/queryListTSV?queryList={1}\", String.class, \"\\t\"));\n+    TestMgr.check(\"[]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8f1924ac4df4c67981cbde9e50b4b3d3d410cae"}, "originalPosition": 93}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a91f8d5f1ad0fbdd32d88bba2af6c51736f61584", "author": {"user": {"login": "liubao68", "name": "liubao68"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/a91f8d5f1ad0fbdd32d88bba2af6c51736f61584", "committedDate": "2020-11-27T01:43:46Z", "message": "[SCB-2131]fix review comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NjcxMzQ5", "url": "https://github.com/apache/servicecomb-java-chassis/pull/2086#pullrequestreview-539671349", "createdAt": "2020-11-27T02:15:06Z", "commit": {"oid": "a91f8d5f1ad0fbdd32d88bba2af6c51736f61584"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4398, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}