{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNDgwMDU5", "number": 1770, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMTowNzoxNVrOD-zD5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMTowNzoxNVrOD-zD5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTc0ODg2OnYy", "diffSide": "RIGHT", "path": "swagger/swagger-invocation/invocation-core/src/test/java/org/apache/servicecomb/swagger/invocation/exception/CommonExceptionDataTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMTowNzoxNVrOGZHpIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjowODo1M1rOGZIfiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5MjgwMQ==", "bodyText": "Can '{\"message\":\"msg\",\"k\":\"v\"}' decode to the same data?", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1770#discussion_r428992801", "createdAt": "2020-05-22T01:07:15Z", "author": {"login": "liubao68"}, "path": "swagger/swagger-invocation/invocation-core/src/test/java/org/apache/servicecomb/swagger/invocation/exception/CommonExceptionDataTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.swagger.invocation.exception;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import io.vertx.core.json.Json;\n+\n+class CommonExceptionDataTest {\n+  @Test\n+  void should_not_include_code_in_json_when_code_is_null() {\n+    CommonExceptionData data = new CommonExceptionData(\"msg\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"message\\\":\\\"msg\\\"}\");\n+  }\n+\n+  @Test\n+  void should_include_code_in_json_when_code_is_not_null() {\n+    CommonExceptionData data = new CommonExceptionData(\"code\", \"msg\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"code\\\":\\\"code\\\",\\\"message\\\":\\\"msg\\\"}\");\n+  }\n+\n+  @Test\n+  void should_include_dynamic_field_in_json() {\n+    CommonExceptionData data = new CommonExceptionData(\"msg\");\n+    data.putDynamic(\"k\", \"v\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"message\\\":\\\"msg\\\",\\\"k\\\":\\\"v\\\"}\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1f2ef2765bbc4cd3e0320e317b138267a24ca24"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5NDUyNA==", "bodyText": "yes, i'll add one case", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1770#discussion_r428994524", "createdAt": "2020-05-22T01:15:05Z", "author": {"login": "wujimin"}, "path": "swagger/swagger-invocation/invocation-core/src/test/java/org/apache/servicecomb/swagger/invocation/exception/CommonExceptionDataTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.swagger.invocation.exception;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import io.vertx.core.json.Json;\n+\n+class CommonExceptionDataTest {\n+  @Test\n+  void should_not_include_code_in_json_when_code_is_null() {\n+    CommonExceptionData data = new CommonExceptionData(\"msg\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"message\\\":\\\"msg\\\"}\");\n+  }\n+\n+  @Test\n+  void should_include_code_in_json_when_code_is_not_null() {\n+    CommonExceptionData data = new CommonExceptionData(\"code\", \"msg\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"code\\\":\\\"code\\\",\\\"message\\\":\\\"msg\\\"}\");\n+  }\n+\n+  @Test\n+  void should_include_dynamic_field_in_json() {\n+    CommonExceptionData data = new CommonExceptionData(\"msg\");\n+    data.putDynamic(\"k\", \"v\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"message\\\":\\\"msg\\\",\\\"k\\\":\\\"v\\\"}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5MjgwMQ=="}, "originalCommit": {"oid": "c1f2ef2765bbc4cd3e0320e317b138267a24ca24"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5NTA0Nw==", "bodyText": "Great", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1770#discussion_r428995047", "createdAt": "2020-05-22T01:17:15Z", "author": {"login": "liubao68"}, "path": "swagger/swagger-invocation/invocation-core/src/test/java/org/apache/servicecomb/swagger/invocation/exception/CommonExceptionDataTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.swagger.invocation.exception;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import io.vertx.core.json.Json;\n+\n+class CommonExceptionDataTest {\n+  @Test\n+  void should_not_include_code_in_json_when_code_is_null() {\n+    CommonExceptionData data = new CommonExceptionData(\"msg\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"message\\\":\\\"msg\\\"}\");\n+  }\n+\n+  @Test\n+  void should_include_code_in_json_when_code_is_not_null() {\n+    CommonExceptionData data = new CommonExceptionData(\"code\", \"msg\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"code\\\":\\\"code\\\",\\\"message\\\":\\\"msg\\\"}\");\n+  }\n+\n+  @Test\n+  void should_include_dynamic_field_in_json() {\n+    CommonExceptionData data = new CommonExceptionData(\"msg\");\n+    data.putDynamic(\"k\", \"v\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"message\\\":\\\"msg\\\",\\\"k\\\":\\\"v\\\"}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5MjgwMQ=="}, "originalCommit": {"oid": "c1f2ef2765bbc4cd3e0320e317b138267a24ca24"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNjcyOQ==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1770#discussion_r429006729", "createdAt": "2020-05-22T02:08:53Z", "author": {"login": "wujimin"}, "path": "swagger/swagger-invocation/invocation-core/src/test/java/org/apache/servicecomb/swagger/invocation/exception/CommonExceptionDataTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.swagger.invocation.exception;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import io.vertx.core.json.Json;\n+\n+class CommonExceptionDataTest {\n+  @Test\n+  void should_not_include_code_in_json_when_code_is_null() {\n+    CommonExceptionData data = new CommonExceptionData(\"msg\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"message\\\":\\\"msg\\\"}\");\n+  }\n+\n+  @Test\n+  void should_include_code_in_json_when_code_is_not_null() {\n+    CommonExceptionData data = new CommonExceptionData(\"code\", \"msg\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"code\\\":\\\"code\\\",\\\"message\\\":\\\"msg\\\"}\");\n+  }\n+\n+  @Test\n+  void should_include_dynamic_field_in_json() {\n+    CommonExceptionData data = new CommonExceptionData(\"msg\");\n+    data.putDynamic(\"k\", \"v\");\n+\n+    assertThat(Json.encode(data)).isEqualTo(\"{\\\"message\\\":\\\"msg\\\",\\\"k\\\":\\\"v\\\"}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5MjgwMQ=="}, "originalCommit": {"oid": "c1f2ef2765bbc4cd3e0320e317b138267a24ca24"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1263, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}