{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMjU4NTMz", "number": 1703, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzo1NDo1NlrODwS4fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjowNDowMFrODwYFVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTY3NjE1OnYy", "diffSide": "LEFT", "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzo1NDo1NlrOGDNlpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMDowMDozNlrOGDSDJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyMTU0Mg==", "bodyText": "why change the package", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1703#discussion_r406021542", "createdAt": "2020-04-09T07:54:56Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieUtil.java", "diffHunk": "@@ -29,14 +29,15 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n+\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.servicecomb.config.kie.model.KVDoc;\n import org.apache.servicecomb.config.kie.model.KVResponse;\n import org.apache.servicecomb.config.kie.model.ValueType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.config.YamlPropertiesFactoryBean;\n import org.springframework.core.io.ByteArrayResource;\n-import org.springframework.util.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5ecf00960c3e2af0d63be3a0b02b0aede421740"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA5NDYyOA==", "bodyText": "prefer using commons lang, checkout other usages.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1703#discussion_r406094628", "createdAt": "2020-04-09T10:00:36Z", "author": {"login": "liubao68"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieUtil.java", "diffHunk": "@@ -29,14 +29,15 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n+\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.servicecomb.config.kie.model.KVDoc;\n import org.apache.servicecomb.config.kie.model.KVResponse;\n import org.apache.servicecomb.config.kie.model.ValueType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.config.YamlPropertiesFactoryBean;\n import org.springframework.core.io.ByteArrayResource;\n-import org.springframework.util.StringUtils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyMTU0Mg=="}, "originalCommit": {"oid": "d5ecf00960c3e2af0d63be3a0b02b0aede421740"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDUyODIzOnYy", "diffSide": "RIGHT", "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjowNDowMFrOGDVx4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyODozMVrOGDYsUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE1NTc0NQ==", "bodyText": "why this place use CountDownLatch ?", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1703#discussion_r406155745", "createdAt": "2020-04-09T12:04:00Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -127,29 +99,38 @@ public void destroy() {\n     @Override\n     public void run() {\n       try {\n-        refreshConfig();\n+        CountDownLatch latch = new CountDownLatch(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d2f51ece4c5f32ab1f6dcef0fa361358608f0d9"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwMzQ3NQ==", "bodyText": "make refreshConfig synchronouse. In pull mode, when next pull happends, if this is asynchronouse,  it is possible two pulls in the same time. Alghough this is rarely happen\nIn long polling mode, to prevent from refreshConfig caught some error, and next long polling not happen. The older implementations do not handle execpetion properly and long polling will exit when timeout happens.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1703#discussion_r406203475", "createdAt": "2020-04-09T13:28:31Z", "author": {"login": "liubao68"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -127,29 +99,38 @@ public void destroy() {\n     @Override\n     public void run() {\n       try {\n-        refreshConfig();\n+        CountDownLatch latch = new CountDownLatch(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE1NTc0NQ=="}, "originalCommit": {"oid": "5d2f51ece4c5f32ab1f6dcef0fa361358608f0d9"}, "originalPosition": 107}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1342, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}