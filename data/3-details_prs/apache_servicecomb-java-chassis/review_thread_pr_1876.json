{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTk2NTY1", "number": 1876, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjozMzo0NlrOEMwntA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjozMzo0NlrOEMwntA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODE0OTY0OnYy", "diffSide": "RIGHT", "path": "handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjozMzo0NlrOGvDeoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjozMzo0NlrOGvDeoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk5MzI0OQ==", "bodyText": "This modification is not good. Try find the root cause and fixed the condition why memory leak and do not modifify the logic of dynamicy config cache.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1876#discussion_r451993249", "createdAt": "2020-07-09T06:33:46Z", "author": {"login": "liubao68"}, "path": "handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java", "diffHunk": "@@ -68,67 +63,34 @@ public boolean enabled() {\n   @Override\n   public Response afterReceiveRequest(Invocation invocation,\n       HttpServletRequestEx httpServletRequestEx) {\n-    if (!isHaveHeadersRule()) {\n+    if (!RouterRuleCache.isServerContainRule(invocation.getMicroserviceName())) {\n       return null;\n     }\n-    if (!RouterRuleCache.isServerContainRule(invocation.getMicroserviceName())) {\n+    List<String> headerRules = loadHeaders();\n+    if (headerRules == null) {\n       return null;\n     }\n-    if (loadHeaders()) {\n-      Map<String, String> headerMap = getHeaderMap(httpServletRequestEx);\n-      try {\n-        invocation.addContext(ROUTER_HEADER, JsonUtils.OBJ_MAPPER.writeValueAsString(headerMap));\n-      } catch (JsonProcessingException e) {\n-        LOGGER.error(\"canary context serialization failed\");\n-      }\n+    Map<String, String> headerMap = getHeaderMap(httpServletRequestEx, headerRules);\n+    try {\n+      invocation.addContext(ROUTER_HEADER, JsonUtils.OBJ_MAPPER.writeValueAsString(headerMap));\n+    } catch (JsonProcessingException e) {\n+      LOGGER.error(\"router context serialization failed\");\n     }\n     return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36fd3f02bebcd7154622788e52a4a74d3eb8006"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1292, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}