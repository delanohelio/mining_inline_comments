{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjg3MzQx", "number": 1827, "title": "[SCB-1997] Small improvement when Muticastscoket receive data", "bodyText": "Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Make sure there is a JIRA issue filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes.\n Each commit in the pull request should have a meaningful subject line and body.\n Format the pull request title like [SCB-XXX] Fixes bug in ApproximateQuantiles, where you replace SCB-XXX with the appropriate JIRA issue.\n Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n Run mvn clean install -Pit to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.", "createdAt": "2020-06-10T20:37:12Z", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827", "merged": true, "mergeCommit": {"oid": "4065b343b9cbb50f07038aa1175b61fee28aee95"}, "closed": true, "closedAt": "2020-06-13T01:51:20Z", "author": {"login": "jungan21"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqDNC-AFqTQyODUxNjc1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqtfqmgFqTQzMDEwMzk0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTE2NzU1", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#pullrequestreview-428516755", "createdAt": "2020-06-11T00:34:51Z", "commit": {"oid": "40505871fb490afad3f6b0acf4391a6b81ea9a1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDozNDo1MlrOGiKr9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDozNDo1MlrOGiKr9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3OTg2Mw==", "bodyText": "Maybe need look at the outer try, if IOException is thrown, the task is exit.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#discussion_r438479863", "createdAt": "2020-06-11T00:34:52Z", "author": {"login": "liubao68"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/server/ServerUtil.java", "diffHunk": "@@ -172,16 +172,29 @@ private static ServerMicroserviceInstance buildServerMicroserviceInstanceFromMap\n     return map;\n   }\n \n+  private static void initMulticastSocket() throws IOException{\n+    multicastSocket = new MulticastSocket(PORT);\n+    group = InetAddress.getByName(GROUP);\n+    multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n+  }\n+\n   private static void startListenerForRegisterUnregisterEvent() {\n     try {\n       byte[] buffer = new byte[DATA_PACKET_BUFFER_SIZE];\n-      multicastSocket = new MulticastSocket(PORT);\n-      group = InetAddress.getByName(GROUP);\n-      multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n-\n+      initMulticastSocket();\n       while (true) {\n         DatagramPacket receivePacketBuffer = new DatagramPacket(buffer, buffer.length);\n-        multicastSocket.receive(receivePacketBuffer);\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40505871fb490afad3f6b0acf4391a6b81ea9a1f"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDA3NDEx", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#pullrequestreview-429407411", "createdAt": "2020-06-12T01:37:04Z", "commit": {"oid": "0d3fc41c60e81ba542fc961cdceee8a4856a4fee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTozNzowNFrOGi0Tug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTozNzowNFrOGi0Tug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2MTc4Ng==", "bodyText": "cyclomatic complexity of startListenerForRegisterUnregisterEvent is a bit too high, can be refactored.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#discussion_r439161786", "createdAt": "2020-06-12T01:37:04Z", "author": {"login": "liubao68"}, "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/server/ServerUtil.java", "diffHunk": "@@ -172,16 +172,29 @@ private static ServerMicroserviceInstance buildServerMicroserviceInstanceFromMap\n     return map;\n   }\n \n+  private static void initMulticastSocket() throws IOException {\n+    multicastSocket = new MulticastSocket(PORT);\n+    group = InetAddress.getByName(GROUP);\n+    multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n+  }\n+\n   private static void startListenerForRegisterUnregisterEvent() {\n     try {\n       byte[] buffer = new byte[DATA_PACKET_BUFFER_SIZE];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d3fc41c60e81ba542fc961cdceee8a4856a4fee"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "366296cec6dd02011627f64020d49846881f9d10", "author": {"user": {"login": "jungan21", "name": "Jun Gan"}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/366296cec6dd02011627f64020d49846881f9d10", "committedDate": "2020-06-12T03:20:03Z", "message": "[SCB-1997] Small improvement when Muticastscoket receive data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTAzOTQy", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#pullrequestreview-430103942", "createdAt": "2020-06-13T01:51:13Z", "commit": {"oid": "366296cec6dd02011627f64020d49846881f9d10"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4445, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}